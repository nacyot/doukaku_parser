
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
分散関数呼び出し
DouKaku? </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20081120013113cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20081120013113cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20081120013113cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20081120013113/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20081120013113/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20081120013113js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20081120013113js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20081120013113js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20081120013113js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app15.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/45\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "20";
var displayMonth = "Nov";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/45/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20081120013113" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20070828055219/http://ja.doukaku.org/45/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="28 Aug 2007"><strong>AUG</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 1:31:13 Nov 20, 2008">NOV</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Dec
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20070828055219/http://ja.doukaku.org/45/nested/" title="5:52:19 Aug 28, 2007" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 1:31:13 Nov 20, 2008">20</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20070828055219/http://ja.doukaku.org/45/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="28 Aug 2007"><strong>2007</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 1:31:13 Nov 20, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20081120013113*/http://ja.doukaku.org/45/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">28 Aug 07 - 20 Nov 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000010000_2008:10:000000000010_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20081120013113/http://ja.doukaku.org/">DouKaku?</a><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png' alt=challenge>
<a href="/web/20081120013113/http://ja.doukaku.org/45/">分散関数呼び出し</a>
</h2>

    





<div class="comment" id="comment3401">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/101/" target="_top">沢渡 みかげ</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/3401/">#3401</a>(<script language="JavaScript">print_time(new Date("2007/08/15 23:17 GMT"));</script><noscript>2007/08/15 23:17 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class=box>
分散関数呼び出しを実装してください．

呼び出される関数は，定価を整数で，割引率(%)を整数で受け取り，
文字列で「販売価格 ○円（定価○円から○%引き）」を返すものとします．
また，数字は3桁のカンマ区切りにするものとします．

たとえば，pricestring(2000, 20) なら
"販売価格 1,600円 (定価2,000円から20%引き)"
を返します．

関数の呼び出し元と，呼び出される側は，物理的に異なる
サーバに配置できることを条件とします．
呼び出し方法は問いませんが，呼び出し方法に名前がある場合，
それをタグに加えてください．
（XML-RPC，SOAP，CORBA，RMI，など）

また，作成した関数を直列に1万回呼び出して，
実行にかかった時間を測定してください．
測定時は別サーバでなくても構いません．
（なるべく別サーバが望ましいです）

測定環境として，
・サーバとクライアントのCPU・メモリ
・同一サーバ内での実行か別サーバでの実行か
・別サーバの場合，通信経路．（100Mbps Ethernet等）
・言語のバージョン
・ミドルウェアを使用している場合，その名前とバージョン
も併記してください．

1つの言語で複数の分散関数呼び出しの実装方法がある場合，
複数の回答を歓迎します．

出題の意図は，様々な分散呼び出し方法の実装例と，
レスポンス速度の確認にあります．
</pre>
このお題は沢渡 みかげさんの投稿です。
まったく手を加えないでいい完成度の投稿で本当に助かります。
ありがとうございました。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/3401/addtag/" class="addtag" id="addtag_3401">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3401"
  >-</span><span
  class="button yellow"
  id="rating_z_3401"
  >0</span><span 
  class="button green"
  id="rating_p_3401"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/3401/">
  reply
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20081120013113/http://ja.doukaku.org/45/post_comment/">
post comment
</a>
</div>


<h2>Posted feedbacks - Nested</h2>
<a href="/web/20081120013113/http://ja.doukaku.org/45/flatten/">Flatten</a> 
<a href="/web/20081120013113/http://ja.doukaku.org/45/">Hidden</a> 


  
    





<div class="comment" id="comment2205">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/172/" target="_top">cats</a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2205/">#2205</a>(<script language="JavaScript">print_time(new Date("2007/08/16 00:21 GMT"));</script><noscript>2007/08/16 00:21 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>同一マシンのCoreDuo1.5GHz で1万回11秒</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre><span class="c">// サーバ</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Web.Services</span><span class="p">;</span>
<span class="na">[WebService(Namespace = &quot;http://tempuri.org/&quot;)]</span>
<span class="na">[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">Service</span> <span class="p">:</span> <span class="n">System</span><span class="p">.</span><span class="n">Web</span><span class="p">.</span><span class="n">Services</span><span class="p">.</span><span class="n">WebService</span>
<span class="k">{</span>
<span class="na">  [WebMethod]</span>
  <span class="k">public</span> <span class="kt">string</span> <span class="nf">Calc</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">r</span><span class="p">)</span> <span class="k">{</span>
    <span class="kt">int</span> <span class="n">p</span> <span class="p">=</span> <span class="n">n</span> <span class="p">*</span> <span class="p">(</span><span class="m">100</span> <span class="p">-</span> <span class="n">r</span><span class="p">)</span> <span class="p">/</span> <span class="m">100</span><span class="p">;</span>
    <span class="k">return</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;販売価格 {0}円 (定価{1}円から{2}%引き)&quot;</span><span class="p">,</span>
    <span class="n">p</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="s">&quot;C&quot;</span><span class="p">).</span><span class="n">Substring</span><span class="p">(</span><span class="m">1</span><span class="p">),</span> <span class="n">n</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="s">&quot;C&quot;</span><span class="p">).</span><span class="n">Substring</span><span class="p">(</span><span class="m">1</span><span class="p">),</span> <span class="n">r</span><span class="p">);</span>
  <span class="k">}</span>
<span class="k">}</span>

<span class="c">// クライアント</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Diagnostics</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">HowWrite.localhost</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
  <span class="k">{</span>
    <span class="n">Service</span> <span class="n">srv</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Service</span><span class="p">();</span>
    <span class="n">Stopwatch</span> <span class="n">st</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Stopwatch</span><span class="p">();</span>
    <span class="n">st</span><span class="p">.</span><span class="n">Start</span><span class="p">();</span>
    <span class="kt">string</span> <span class="n">s</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">10000</span><span class="p">;</span> <span class="p">++</span><span class="n">i</span><span class="p">)</span> <span class="n">s</span> <span class="p">=</span> <span class="n">srv</span><span class="p">.</span><span class="n">Calc</span><span class="p">(</span><span class="m">2000</span><span class="p">,</span> <span class="m">20</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
    <span class="n">st</span><span class="p">.</span><span class="n">Stop</span><span class="p">();</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">ElapsedMilliseconds</span> <span class="p">/</span> <span class="m">1000</span><span class="p">);</span>
  <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2205/addtag/" class="addtag" id="addtag_2205">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2205/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2205/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2205"
  >-</span><span
  class="button yellow"
  id="rating_z_2205"
  >0</span><span 
  class="button green"
  id="rating_p_2205"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2205/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment2206">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2206/">#2206</a>(<script language="JavaScript">print_time(new Date("2007/08/16 00:27 GMT"));</script><noscript>2007/08/16 00:27 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>まずは一番乗り狙いで、最もナイーブな実装をば。
エラー処理や効率は考えていません。
eval-remotelyはリモートホストでインタプリタを起動して評価式を送り込みます。

実行例:
gosh&gt; (ref (run-sample "scherzo" 1) 1)
"販売価格 1,600円 (定価2,000円から20%引き)"

ベンチマーク (CPU Pen4 2GHz, メモリ2GB, ループバック使用、Gauche 0.8.11_pre1, ミドルウェア無し)
gosh&gt; (time (run-sample "scherzo" 10000) (values))
;(time (run-sample "scherzo" 10000) (values))
; real   5.247
; user   0.460
; sys    0.130
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre><span class="c1">;; -*- coding: utf-8 -*-</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">process</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-1</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">eval-remotely</span> <span class="nv">host</span> <span class="nv">exprs</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">let1</span> <span class="nv">p</span> <span class="p">(</span><span class="nf">run-process</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">gosh</span> <span class="nv">-E</span> <span class="s">&quot;&#39;read-eval-print-loop #f #f #f values&#39;&quot;</span><span class="p">)</span>
                       <span class="nv">:host</span> <span class="nv">host</span> <span class="nv">:input</span> <span class="nv">:pipe</span> <span class="nv">:output</span> <span class="nv">:pipe</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">unwind-protect</span>
        <span class="p">(</span><span class="nf">map-in-order</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">expr</span><span class="p">)</span>
                      <span class="p">(</span><span class="nb">write </span><span class="nv">expr</span> <span class="p">(</span><span class="nf">process-input</span> <span class="nv">p</span><span class="p">))</span>
                      <span class="p">(</span><span class="nb">newline </span><span class="p">(</span><span class="nf">process-input</span> <span class="nv">p</span><span class="p">))</span>
                      <span class="p">(</span><span class="nb">read </span><span class="p">(</span><span class="nf">process-output</span> <span class="nv">p</span><span class="p">)))</span>
                    <span class="nv">exprs</span><span class="p">)</span>
      <span class="p">(</span><span class="k">begin </span><span class="p">(</span><span class="nb">close-output-port </span><span class="p">(</span><span class="nf">process-input</span> <span class="nv">p</span><span class="p">))</span>
             <span class="p">(</span><span class="nf">process-wait</span> <span class="nv">p</span><span class="p">)))))</span>

<span class="c1">;; 実行サンプル</span>
<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">run-sample</span> <span class="nv">host</span> <span class="nv">repeat</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">eval-remotely</span> <span class="nv">host</span>
                 <span class="o">`</span><span class="p">((</span><span class="k">define </span><span class="p">(</span><span class="nf">pricestring</span> <span class="err">価格</span> <span class="err">割引率</span><span class="p">)</span>
                     <span class="p">(</span><span class="nf">format</span> <span class="s">&quot;販売価格 ~:d円 (定価~:d円から~d%引き)&quot;</span>
                            <span class="p">(</span><span class="nf">round-&gt;exact</span> <span class="p">(</span><span class="nb">* </span><span class="err">価格</span> <span class="p">(</span><span class="nf">/</span><span class="o">.</span> <span class="p">(</span><span class="nb">- </span><span class="mi">100</span> <span class="err">割引率</span><span class="p">)</span> <span class="mi">100</span><span class="p">)))</span>
                            <span class="err">価格</span> <span class="err">割引率</span><span class="p">))</span>
                   <span class="o">,@</span><span class="p">(</span><span class="nf">make-list</span> <span class="nv">repeat</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">pricestring</span> <span class="mi">2000</span> <span class="mi">20</span><span class="p">)))</span>
                 <span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2206/addtag/" class="addtag" id="addtag_2206">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2206/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2206/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2206"
  >-</span><span
  class="button yellow"
  id="rating_z_2206"
  >0</span><span 
  class="button green"
  id="rating_p_2206"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081120013113/http://ja.doukaku.org/comment/2206/">
    2
    replies
  </a>

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2206/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2210">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2210/">#2210</a>(<script language="JavaScript">print_time(new Date("2007/08/16 00:42 GMT"));</script><noscript>2007/08/16 00:42 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  ああ、一番争いに敗れた…<br/>ちょっと追加説明です。<br/><br/>リモートサーバに必要なのは、sshの公開鍵認証でログインできることと、Gaucheがインストールされていることのみです。特別にサーバ側で別コードを走らせる必要はありません。<br/><br/>インターネット越しにベンチマークを取ってみました。ハワイからロサンゼルスにあるサーバを叩くと、1000回呼び出しで82秒でした。<br/><br/>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2210/addtag/" class="addtag" id="addtag_2210">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2210"
  >-</span><span
  class="button yellow"
  id="rating_z_2210"
  >0</span><span 
  class="button green"
  id="rating_p_2210"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2206/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2210/root/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2210/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2233">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2233/">#2233</a>(<script language="JavaScript">print_time(new Date("2007/08/16 10:15 GMT"));</script><noscript>2007/08/16 10:15 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>うへぇー rum-process で host を指定できたんだぁ
すげぇーっ</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2233/addtag/" class="addtag" id="addtag_2233">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/Gauche/">Gauche</a>
    
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2233"
  >-</span><span
  class="button yellow"
  id="rating_z_2233"
  >0</span><span 
  class="button green"
  id="rating_p_2233"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2206/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2233/root/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2233/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment2208">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2208/">#2208</a>(<script language="JavaScript">print_time(new Date("2007/08/16 00:31 GMT"));</script><noscript>2007/08/16 00:31 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  とりあえずPython使ってCGIサーバを立てて見ました。<br/>http://blueeye.bne.jp:7777/cgi-bin/discount.py?2000&amp;33<br/><br/>↑のアドレスにアクセスすると、次のように帰ってきます。<br/>&gt;&nbsp;販売価格&nbsp;1340円（定価2000円から33%引き）<br/><br/>以下の記事を参考にしてHTTPサーバを走らせて、その上で下にあるコードを走らせています。<br/>http://coreblog.org/ats/python-de-cgi<br/><br/>今日一日くらい、鯖を立てておきますので遊びたい方はご自由に。<br/>スレッドプールもないようなHTTP鯖なので、それなりに遅いと思いますが、速度測定はそのうちやります。<br/>（ネットゲームのサーバが動いているので、正確な速度測定は難しいと思います）
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre><span class="c"># -*- coding: utf-8 -*-</span>
<span class="c">#-------------------------以下サーバー側コード</span>
<span class="k">import</span> <span class="nn">sys</span>

<span class="k">if</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">==</span> <span class="mi">2</span><span class="p">):</span>
    <span class="p">(</span><span class="n">price</span><span class="p">,</span><span class="n">discount</span><span class="p">)</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;&amp;&quot;</span><span class="p">)</span>
    <span class="n">price</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">price</span><span class="p">)</span>
    <span class="n">discount</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">discount</span><span class="p">)</span>

    <span class="k">print</span> <span class="s">&quot;Content-Type: text/plain&quot;</span>
    <span class="k">print</span> <span class="s">&quot;&quot;</span>
    <span class="k">print</span> <span class="s">&quot;販売価格 </span><span class="si">%d</span><span class="s">円（定価</span><span class="si">%d</span><span class="s">円から</span><span class="si">%d%%</span><span class="s">引き）&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">price</span> <span class="o">*</span> <span class="p">(</span><span class="mf">100.0</span><span class="o">-</span><span class="n">discount</span><span class="p">)</span><span class="o">/</span><span class="mf">100.0</span> <span class="p">),</span> <span class="n">price</span><span class="p">,</span> <span class="n">discount</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">&quot;Content-Type: text/plain&quot;</span>
    <span class="k">print</span> <span class="s">&quot;&quot;</span>
    <span class="k">print</span> <span class="s">&quot;引数エラー&quot;</span>


<span class="c"># -*- coding: utf-8 -*-</span>
<span class="c">#------------------------以下呼び出し側コード</span>
<span class="k">import</span> <span class="nn">urllib</span>
<span class="k">def</span> <span class="nf">pricestring</span><span class="p">(</span><span class="n">price</span><span class="p">,</span> <span class="n">discount</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">urllib</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&quot;http://blueeye.bne.jp:7777/cgi-bin/discount.py?</span><span class="si">%d</span><span class="s">&amp;</span><span class="si">%d</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">price</span><span class="p">,</span> <span class="n">discount</span><span class="p">))</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

<span class="k">print</span> <span class="nb">unicode</span><span class="p">(</span><span class="n">pricestring</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">20</span><span class="p">),</span> <span class="s">&quot;utf8&quot;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2208/addtag/" class="addtag" id="addtag_2208">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/CGI/">CGI</a>
    
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2208/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2208/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2208"
  >-</span><span
  class="button yellow"
  id="rating_z_2208"
  >0</span><span 
  class="button green"
  id="rating_p_2208"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081120013113/http://ja.doukaku.org/comment/2208/">
    1
    reply
  </a>

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2208/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2214">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2214/">#2214</a>(<script language="JavaScript">print_time(new Date("2007/08/16 01:02 GMT"));</script><noscript>2007/08/16 01:02 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>何なんだこの遅さは。
直列で100回実験したら18秒強。
10個のスレッドで、並列に10回ずつ取りに行ったら6.5秒。

多分コンソール周りのPrintに時間食っているのかなぁ。
コンソールを表示しなければ、早くなるのか？
まぁ、裏でネットゲームの鯖が動いているところで、実験ってのが無茶な話ですが。

鯖のPCのスペックはこんな感じ。
Pen4 2.8GHz HT
RAM 512MB
OS XP
so-net ADSL12M線
ネットゲームのサーバプログラムがCPUパワーの80％を常時消費

測定したクライアントPC
sinetに接続されている某大学のPC
Pen4 3.2GHz HT
RAM 2GB
OS XP</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="highlight"><pre><span class="c"># -*- coding: utf-8 -*-</span>
<span class="k">import</span> <span class="nn">urllib</span>
<span class="k">import</span> <span class="nn">time</span>
<span class="k">import</span> <span class="nn">threading</span>

<span class="k">def</span> <span class="nf">pricestring</span><span class="p">(</span><span class="n">price</span><span class="p">,</span> <span class="n">discount</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">urllib</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&quot;http://blueeye.bne.jp:7777/cgi-bin/discount.py?</span><span class="si">%d</span><span class="s">&amp;</span><span class="si">%d</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">price</span><span class="p">,</span> <span class="n">discount</span><span class="p">))</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>


<span class="n">t1</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">100</span><span class="p">):</span>
    <span class="k">print</span> <span class="nb">unicode</span><span class="p">(</span><span class="n">pricestring</span><span class="p">(</span><span class="n">x</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span><span class="s">&quot;utf8&quot;</span><span class="p">)</span>

<span class="n">t2</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>

<span class="k">class</span> <span class="nc">TEST_THREAD</span><span class="p">(</span><span class="n">threading</span><span class="o">.</span><span class="n">Thread</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">price</span><span class="p">,</span> <span class="n">discount</span><span class="p">):</span>
        <span class="n">threading</span><span class="o">.</span><span class="n">Thread</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">price</span> <span class="o">=</span> <span class="n">price</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">discount</span> <span class="o">=</span> <span class="n">discount</span>
    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
            <span class="k">print</span> <span class="nb">unicode</span><span class="p">(</span><span class="n">pricestring</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">price</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">discount</span> <span class="o">+</span> <span class="n">x</span><span class="p">),</span><span class="s">&quot;utf8&quot;</span><span class="p">)</span>

<span class="n">threadList</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
    <span class="n">threadList</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">TEST_THREAD</span><span class="p">(</span><span class="n">x</span> <span class="o">*</span> <span class="mi">1000</span> <span class="p">,</span> <span class="mi">20</span><span class="p">))</span>
    <span class="n">threadList</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>

<span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">threadList</span><span class="p">:</span>
    <span class="n">t</span><span class="o">.</span><span class="n">join</span><span class="p">()</span>
       
<span class="n">t3</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>

<span class="k">print</span> <span class="s">&quot;series time&quot;</span><span class="p">,</span><span class="n">t2</span> <span class="o">-</span> <span class="n">t1</span>
<span class="k">print</span> <span class="s">&quot;pararells time&quot;</span><span class="p">,</span><span class="n">t3</span> <span class="o">-</span> <span class="n">t2</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2214/addtag/" class="addtag" id="addtag_2214">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2214/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2214/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2214"
  >-</span><span
  class="button yellow"
  id="rating_z_2214"
  >0</span><span 
  class="button green"
  id="rating_p_2214"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2208/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2214/root/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2214/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  

  
    





<div class="comment" id="comment2217">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2217/">#2217</a>(<script language="JavaScript">print_time(new Date("2007/08/16 04:56 GMT"));</script><noscript>2007/08/16 04:56 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>pythonの標準ライブラリに含まれているXML-RPCを
使ってみました。

とはいっても、参考にしたIBMのサイトに乗っているサンプル
そのもののような気がしないでもない。

実は数値のコンマ区切りの方が大変でした。

測定環境
　同一マシン上で実行
　Athlon XP 1700+ 512MB
　python 2.5

実行時間
　画面出力を行う　　　　64秒
　画面出力を行わない　　112秒
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="highlight"><pre><span class="c">#</span>
<span class="c"># server.py</span>
<span class="c">#</span>

<span class="c"># -*- coding: utf-8 -*-</span>

<span class="k">import</span> <span class="nn">SimpleXMLRPCServer</span>

<span class="k">class</span> <span class="nc">PliceString</span><span class="p">:</span>
  <span class="k">def</span> <span class="nf">plicestring</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">d</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">i</span><span class="p">):</span>
      <span class="n">s</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
      <span class="n">n</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
      <span class="k">return</span> <span class="s">&#39;,&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">0</span> <span class="ow">and</span> <span class="o">-</span><span class="n">n</span> <span class="ow">or</span> <span class="n">i</span><span class="p">:</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="p">(</span><span class="n">n</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span><span class="o">*</span><span class="mi">3</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="mi">3</span><span class="p">)])</span>
    <span class="k">return</span> <span class="s">&#39;販売価格 </span><span class="si">%s</span><span class="s">円 (定価</span><span class="si">%s</span><span class="s">円から</span><span class="si">%d%%</span><span class="s">引き)&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">f</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">p</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">d</span><span class="o">*</span><span class="mf">0.01</span><span class="p">))),</span> <span class="n">f</span><span class="p">(</span><span class="n">p</span><span class="p">),</span> <span class="n">d</span><span class="p">)</span>

<span class="n">ps</span> <span class="o">=</span> <span class="n">PliceString</span><span class="p">()</span>
<span class="n">sv</span> <span class="o">=</span> <span class="n">SimpleXMLRPCServer</span><span class="o">.</span><span class="n">SimpleXMLRPCServer</span><span class="p">((</span><span class="s">&#39;localhost&#39;</span><span class="p">,</span> <span class="mi">8888</span><span class="p">))</span>
<span class="n">sv</span><span class="o">.</span><span class="n">register_instance</span><span class="p">(</span><span class="n">ps</span><span class="p">)</span>
<span class="n">sv</span><span class="o">.</span><span class="n">serve_forever</span><span class="p">()</span>

<span class="c">#</span>
<span class="c"># client.py</span>
<span class="c">#</span>

<span class="c"># -*- coding: utf-8 -*-</span>

<span class="k">import</span> <span class="nn">xmlrpclib</span>
<span class="k">import</span> <span class="nn">time</span>

<span class="n">sv</span> <span class="o">=</span> <span class="n">xmlrpclib</span><span class="o">.</span><span class="n">ServerProxy</span><span class="p">(</span><span class="s">&#39;http://localhost:8888/&#39;</span><span class="p">)</span>
<span class="n">t0</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10000</span><span class="p">):</span>
  <span class="n">sv</span><span class="o">.</span><span class="n">plicestring</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="mi">20</span><span class="p">)</span>
<span class="c">#  print sv.plicestring(2000, 20)</span>
<span class="k">print</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t0</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2217/addtag/" class="addtag" id="addtag_2217">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/XML-RPC/">XML-RPC</a>
    
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2217/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2217/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2217"
  >-</span><span
  class="button yellow"
  id="rating_z_2217"
  >0</span><span 
  class="button green"
  id="rating_p_2217"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2217/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment2223">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2223/">#2223</a>(<script language="JavaScript">print_time(new Date("2007/08/16 05:31 GMT"));</script><noscript>2007/08/16 05:31 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Rubyの分散処理の定番dRuby！
DRB_URIを書き換えることで別サーバでも可能。

まず
ruby 45.rb server
でサーバを立ち上げる。そのあと
ruby 45.rb
でクライアントの実行。

・呼び出し10000回にかかった時間 7.9秒
・サーバとクライアントのCPU・メモリ  Pentium4 2.66GHz / 1GB
・同一サーバ内での実行か別サーバでの実行か  同一サーバ
・言語のバージョン  Ruby 1.8.5
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;drb&#39;</span>
<span class="no">DRB_URI</span> <span class="o">=</span> <span class="s2">&quot;druby://localhost:2323&quot;</span>

<span class="k">if</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">first</span> <span class="o">==</span> <span class="s1">&#39;server&#39;</span>
  <span class="n">obj</span> <span class="o">=</span> <span class="no">Object</span><span class="o">.</span><span class="n">new</span>
  <span class="k">def</span> <span class="nc">obj</span><span class="o">.</span><span class="nf">pricestring</span><span class="p">(</span><span class="n">price</span><span class="p">,</span> <span class="n">cut_rate</span><span class="p">)</span>
    <span class="n">comma</span> <span class="o">=</span> <span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="n">n</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">reverse</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/\d{1,3}/</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">reverse</span><span class="p">}</span>
    <span class="s2">&quot;販売価格 %s円 (定価%s円から%d%%引き)&quot;</span> <span class="o">%</span> <span class="o">[</span><span class="n">comma</span><span class="o">[</span><span class="n">price</span><span class="o">*</span><span class="p">(</span><span class="mi">100</span><span class="o">-</span><span class="n">cut_rate</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="o">]</span><span class="p">,</span> <span class="n">comma</span><span class="o">[</span><span class="n">price</span><span class="o">]</span><span class="p">,</span> <span class="n">cut_rate</span><span class="o">]</span>
  <span class="k">end</span>
  <span class="no">DRb</span><span class="o">.</span><span class="n">start_service</span> <span class="no">DRB_URI</span><span class="p">,</span> <span class="n">obj</span>
  <span class="no">DRb</span><span class="o">.</span><span class="n">thread</span><span class="o">.</span><span class="n">join</span>

<span class="k">else</span>                            <span class="c1"># client</span>
  <span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
  <span class="no">DRb</span><span class="o">.</span><span class="n">start_service</span>
  <span class="n">obj</span> <span class="o">=</span> <span class="no">DRbObject</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="kp">nil</span><span class="p">,</span> <span class="no">DRB_URI</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="n">obj</span><span class="o">.</span><span class="n">pricestring</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">20</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">measure</span> <span class="p">{</span> <span class="mi">10000</span><span class="o">.</span><span class="n">times</span><span class="p">{</span> <span class="n">obj</span><span class="o">.</span><span class="n">pricestring</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">20</span><span class="p">)</span>  <span class="p">}</span> <span class="p">}</span><span class="o">.</span><span class="n">real</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2223/addtag/" class="addtag" id="addtag_2223">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/dRuby/">dRuby</a>
    
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2223/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2223/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2223"
  >-</span><span
  class="button yellow"
  id="rating_z_2223"
  >0</span><span 
  class="button green"
  id="rating_p_2223"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2223/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment2228">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/172/" target="_top">cats</a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2228/">#2228</a>(<script language="JavaScript">print_time(new Date("2007/08/16 09:02 GMT"));</script><noscript>2007/08/16 09:02 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>.NET Remoting版
CoreDuo 1.5GHz の同一マシンで1万回2.7秒</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="highlight"><pre><span class="c">// サーバ用</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">Server</span> <span class="p">:</span> <span class="n">MarshalByRefObject</span>
<span class="k">{</span>
  <span class="k">public</span> <span class="kt">string</span> <span class="nf">Calc</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">r</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="kt">int</span> <span class="n">p</span> <span class="p">=</span> <span class="n">n</span> <span class="p">*</span> <span class="p">(</span><span class="m">100</span> <span class="p">-</span> <span class="n">r</span><span class="p">)</span> <span class="p">/</span> <span class="m">100</span><span class="p">;</span>
    <span class="k">return</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;販売価格 {0}円 (定価{1}円から{2}%引き)&quot;</span><span class="p">,</span>
    <span class="n">p</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="s">&quot;C&quot;</span><span class="p">).</span><span class="n">Substring</span><span class="p">(</span><span class="m">1</span><span class="p">),</span> <span class="n">n</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="s">&quot;C&quot;</span><span class="p">).</span><span class="n">Substring</span><span class="p">(</span><span class="m">1</span><span class="p">),</span> <span class="n">r</span><span class="p">);</span>
  <span class="k">}</span>
<span class="k">}</span>
<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
  <span class="k">{</span>
    <span class="n">System</span><span class="p">.</span><span class="n">Runtime</span><span class="p">.</span><span class="n">Remoting</span><span class="p">.</span><span class="n">Channels</span><span class="p">.</span><span class="n">ChannelServices</span><span class="p">.</span><span class="n">RegisterChannel</span><span class="p">(</span>
      <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Runtime</span><span class="p">.</span><span class="n">Remoting</span><span class="p">.</span><span class="n">Channels</span><span class="p">.</span><span class="n">Tcp</span><span class="p">.</span><span class="n">TcpChannel</span><span class="p">(</span><span class="m">50000</span><span class="p">),</span> <span class="k">false</span><span class="p">);</span>
    <span class="n">System</span><span class="p">.</span><span class="n">Runtime</span><span class="p">.</span><span class="n">Remoting</span><span class="p">.</span><span class="n">RemotingConfiguration</span>
      <span class="p">.</span><span class="n">RegisterWellKnownServiceType</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">Server</span><span class="p">),</span> <span class="s">&quot;HowWrite&quot;</span><span class="p">,</span>
      <span class="n">System</span><span class="p">.</span><span class="n">Runtime</span><span class="p">.</span><span class="n">Remoting</span><span class="p">.</span><span class="n">WellKnownObjectMode</span><span class="p">.</span><span class="n">Singleton</span><span class="p">);</span>
    <span class="n">System</span><span class="p">.</span><span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
  <span class="k">}</span>
<span class="k">}</span>

<span class="c">// クライアント用</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Diagnostics</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
  <span class="k">{</span>
    <span class="n">Server</span>  <span class="n">svr</span> <span class="p">=</span> <span class="p">(</span><span class="n">Server</span><span class="p">)</span><span class="n">Activator</span><span class="p">.</span><span class="n">GetObject</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">Server</span><span class="p">),</span> 
      <span class="s">&quot;tcp://localhost:50000/HowWrite&quot;</span><span class="p">);</span>
    <span class="n">Stopwatch</span> <span class="n">st</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Stopwatch</span><span class="p">();</span>
    <span class="n">st</span><span class="p">.</span><span class="n">Start</span><span class="p">();</span>
    <span class="kt">string</span> <span class="n">s</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">10000</span><span class="p">;</span> <span class="p">++</span><span class="n">i</span><span class="p">)</span> <span class="n">s</span> <span class="p">=</span> <span class="n">svr</span><span class="p">.</span><span class="n">Calc</span><span class="p">(</span><span class="m">2000</span><span class="p">,</span> <span class="m">20</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
    <span class="n">st</span><span class="p">.</span><span class="n">Stop</span><span class="p">();</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">ElapsedMilliseconds</span> <span class="p">/</span> <span class="m">1000.0</span><span class="p">);</span>
  <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2228/addtag/" class="addtag" id="addtag_2228">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/.NET_Remoting/">.NET_Remoting</a>
    
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2228/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2228/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2228"
  >-</span><span
  class="button yellow"
  id="rating_z_2228"
  >0</span><span 
  class="button green"
  id="rating_p_2228"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2228/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment2235">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2235/">#2235</a>(<script language="JavaScript">print_time(new Date("2007/08/16 14:13 GMT"));</script><noscript>2007/08/16 14:13 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>RMIの実装です（Java 5ではrmic不要になっているのですね）。

一万回呼び出しにかかった時間：4782 ms
・サーバとクライアントのCPU・メモリ：PowerPC G4 1.67 GHz・メモリ 1GB
・同一サーバ内での実行か別サーバでの実行か：同一サーバ内
・言語のバージョン：Java HotSpot(TM) Client VM build 1.5.0_07-87
・ミドルウェアを使用している場合，その名前とバージョン：使用していない
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="err">共通のインタフェース（</span><span class="n">Price</span><span class="o">.</span><span class="na">java</span><span class="err">）</span>

<span class="k">import</span> <span class="nn">java.rmi.Remote</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.rmi.RemoteException</span><span class="o">;</span>

<span class="k">public</span> <span class="k">interface</span> <span class="n">Price</span> <span class="k">extends</span> <span class="n">Remote</span> <span class="o">{</span>
    <span class="n">String</span> <span class="n">priceString</span><span class="o">(</span><span class="kt">int</span> <span class="n">price</span><span class="o">,</span> <span class="kt">int</span> <span class="n">discunt</span><span class="o">)</span> <span class="k">throws</span> <span class="n">RemoteException</span><span class="o">;</span>
<span class="o">}</span>


<span class="err">サーバ側実装（</span><span class="n">Server</span><span class="o">.</span><span class="na">java</span><span class="err">）</span>

<span class="k">import</span> <span class="nn">java.rmi.registry.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.rmi.server.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Server</span> <span class="k">implements</span> <span class="n">Price</span> <span class="o">{</span>
    <span class="k">public</span> <span class="n">String</span> <span class="n">priceString</span><span class="o">(</span><span class="kt">int</span> <span class="n">price</span><span class="o">,</span> <span class="kt">int</span> <span class="n">discount</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;販売価格 %,d円（定価 %,d円から %d%%引き）&quot;</span><span class="o">,</span> 
                <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="kt">double</span><span class="o">)</span><span class="n">price</span> <span class="o">*</span> <span class="o">(</span><span class="mi">100</span> <span class="o">-</span> <span class="n">discount</span><span class="o">)</span> <span class="o">/</span> <span class="mi">100</span><span class="o">,</span> <span class="n">price</span><span class="o">,</span> <span class="n">discount</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="k">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="n">Server</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Server</span><span class="o">();</span>
        <span class="n">Price</span> <span class="n">stub</span> <span class="o">=</span> <span class="o">(</span><span class="n">Price</span><span class="o">)</span> <span class="n">UnicastRemoteObject</span><span class="o">.</span><span class="na">exportObject</span><span class="o">(</span><span class="n">obj</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="n">Registry</span>  <span class="n">reg</span> <span class="o">=</span> <span class="n">LocateRegistry</span><span class="o">.</span><span class="na">getRegistry</span><span class="o">();</span>
        <span class="n">reg</span><span class="o">.</span><span class="na">bind</span><span class="o">(</span><span class="s">&quot;Price&quot;</span><span class="o">,</span> <span class="n">stub</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>


<span class="err">クライアント側実装（</span><span class="n">Client</span><span class="o">.</span><span class="na">java</span><span class="err">）</span>

<span class="k">import</span> <span class="nn">java.rmi.registry.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Client</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="k">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">host</span> <span class="o">=</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">length</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)?</span> <span class="kc">null</span> <span class="o">:</span> <span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
        <span class="n">Registry</span> <span class="n">reg</span> <span class="o">=</span> <span class="n">LocateRegistry</span><span class="o">.</span><span class="na">getRegistry</span><span class="o">(</span><span class="n">host</span><span class="o">);</span>
        <span class="n">Price</span> <span class="n">stub</span> <span class="o">=</span> <span class="o">(</span><span class="n">Price</span><span class="o">)</span> <span class="n">reg</span><span class="o">.</span><span class="na">lookup</span><span class="o">(</span><span class="s">&quot;Price&quot;</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">now</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10000</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">stub</span><span class="o">.</span><span class="na">priceString</span><span class="o">(</span><span class="mi">1000</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%d ms%n&quot;</span><span class="o">,</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">now</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2235/addtag/" class="addtag" id="addtag_2235">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/RMI/">RMI</a>
    
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2235/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2235/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2235"
  >-</span><span
  class="button yellow"
  id="rating_z_2235"
  >0</span><span 
  class="button green"
  id="rating_p_2235"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081120013113/http://ja.doukaku.org/comment/2235/">
    1
    reply
  </a>

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2235/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2246">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2246/">#2246</a>(<script language="JavaScript">print_time(new Date("2007/08/17 03:10 GMT"));</script><noscript>2007/08/17 03:10 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>別CPUのマシンで試してみました。

一万回呼び出しにかかった時間：1606 ms
・サーバとクライアントのCPU・メモリ： Intel Pentium M processor 1.60GHz・メモリ 2GB
・同一サーバ内での実行か別サーバでの実行か：同一サーバ内
・言語のバージョン：Java HotSpot(TM) Client VM build 1.6.0_02-b06
・ミドルウェアを使用している場合，その名前とバージョン：使用していない</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2246/addtag/" class="addtag" id="addtag_2246">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2246"
  >-</span><span
  class="button yellow"
  id="rating_z_2246"
  >0</span><span 
  class="button green"
  id="rating_p_2246"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2235/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2246/root/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2246/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment2236">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/382/" target="_top">miyamuko</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2236/">#2236</a>(<script language="JavaScript">print_time(new Date("2007/08/16 14:29 GMT"));</script><noscript>2007/08/16 14:29 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Rinda で実装してみました。
まず、ruby ts.rb でタプルスペースを起動します。タプルスペースは黒板みたいなものです。
次に ruby server.rb でサーバを起動。
最後に ruby client.rb でクライアントを起動します。
server.rb と client.rb の起動順は逆でもokです。
server.rb を複数個起動することもできます。もちろん複数プロセスで処理しますし、途中から起動してもokです。
# でも全然スケールしないですけど。

・10000回の実行結果
 　・サーバ1プロセス: 1分 (CPU 使用率 60%ぐらい)
 　・サーバ2プロセス: 1分 (同上)
 　　全然スケールしない。。。
・Intel Core Duo 1.66GHz、メモリ1G
・同一サーバ
・ruby 1.8.6 (2007-03-13 patchlevel 0) [i386-mswin32]
</pre>
	</div>
	
	<p class="link">
	  see: <a href="/web/20081120013113/http://www.druby.org/ilikeruby/d208.html"></a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="o">--[</span><span class="n">ts</span><span class="o">.</span><span class="n">rb</span><span class="o">]----------------------------------------</span>

<span class="nb">require</span> <span class="s1">&#39;rinda/tuplespace&#39;</span>

<span class="vg">$ts</span> <span class="o">=</span> <span class="no">Rinda</span><span class="o">::</span><span class="no">TupleSpace</span><span class="o">.</span><span class="n">new</span>
<span class="no">DRb</span><span class="o">.</span><span class="n">start_service</span><span class="p">(</span><span class="s1">&#39;druby://:1234&#39;</span><span class="p">,</span> <span class="vg">$ts</span><span class="p">)</span>
<span class="nb">puts</span> <span class="no">DRb</span><span class="o">.</span><span class="n">uri</span>
<span class="no">DRb</span><span class="o">.</span><span class="n">thread</span><span class="o">.</span><span class="n">join</span>

<span class="o">--</span> <span class="o">[</span><span class="n">server</span><span class="o">.</span><span class="n">rb</span><span class="o">]</span> <span class="o">--------------------------------------</span>

<span class="nb">require</span> <span class="s1">&#39;rinda/tuplespace&#39;</span>

<span class="k">class</span> <span class="nc">Integer</span>
  <span class="k">def</span> <span class="nf">commaize</span>
    <span class="nb">to_s</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/(\d)(?=(?:\d\d\d)+(?!\d))/</span><span class="p">,</span> <span class="s1">&#39;\1,&#39;</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">pricestring</span><span class="p">(</span><span class="n">price</span><span class="p">,</span> <span class="n">discount</span><span class="p">)</span>
  <span class="s2">&quot;販売価格 %s円 (定価%s円から%d%%引き)&quot;</span> <span class="o">%</span> <span class="o">[</span><span class="p">(</span><span class="n">price</span><span class="o">*</span><span class="p">(</span><span class="mi">100</span><span class="o">-</span><span class="n">discount</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="p">)</span><span class="o">.</span><span class="n">commaize</span><span class="p">,</span> <span class="n">price</span><span class="o">.</span><span class="n">commaize</span><span class="p">,</span> <span class="n">discount</span><span class="o">]</span>
<span class="k">end</span>

<span class="no">DRb</span><span class="o">.</span><span class="n">start_service</span>
<span class="vg">$ts</span> <span class="o">=</span> <span class="no">DRbObject</span><span class="o">.</span><span class="n">new_with_uri</span><span class="p">(</span><span class="s1">&#39;druby://localhost:1234&#39;</span><span class="p">)</span>
<span class="kp">loop</span> <span class="p">{</span>
  <span class="n">req</span> <span class="o">=</span> <span class="vg">$ts</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span class="o">[</span><span class="ss">:pricestring</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="kp">nil</span><span class="o">]</span><span class="p">)</span>
  <span class="n">price</span><span class="p">,</span> <span class="n">discount</span> <span class="o">=</span> <span class="n">req</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">2</span><span class="o">]</span>
  <span class="vg">$ts</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="o">[</span><span class="ss">:pricestring_result</span><span class="p">,</span> <span class="n">price</span><span class="p">,</span> <span class="n">discount</span><span class="p">,</span> <span class="n">pricestring</span><span class="p">(</span><span class="n">price</span><span class="p">,</span> <span class="n">discount</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
  <span class="nb">print</span> <span class="s2">&quot;.&quot;</span>
<span class="p">}</span>

<span class="o">--</span> <span class="o">[</span><span class="n">client</span><span class="o">.</span><span class="n">rb</span><span class="o">]</span> <span class="o">---------------------------------------</span>

<span class="nb">require</span> <span class="s1">&#39;rinda/tuplespace&#39;</span>
<span class="nb">require</span> <span class="s2">&quot;benchmark&quot;</span>

<span class="no">DRb</span><span class="o">.</span><span class="n">start_service</span>
<span class="vg">$ts</span> <span class="o">=</span> <span class="no">DRbObject</span><span class="o">.</span><span class="n">new_with_uri</span><span class="p">(</span><span class="s1">&#39;druby://localhost:1234&#39;</span><span class="p">)</span>
<span class="nb">puts</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">measure</span> <span class="p">{</span>
  <span class="mi">10000</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span>
    <span class="vg">$ts</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="o">[</span><span class="ss">:pricestring</span><span class="p">,</span> <span class="mi">2000</span><span class="p">,</span> <span class="mi">20</span><span class="o">]</span><span class="p">)</span>
    <span class="n">r</span> <span class="o">=</span> <span class="vg">$ts</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span class="o">[</span><span class="ss">:pricestring_result</span><span class="p">,</span> <span class="mi">2000</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="kp">nil</span><span class="o">]</span><span class="p">)</span>
    <span class="nb">print</span> <span class="s2">&quot;.&quot;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2236/addtag/" class="addtag" id="addtag_2236">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/rinda/">rinda</a>
    
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2236/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2236/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2236"
  >-</span><span
  class="button yellow"
  id="rating_z_2236"
  >0</span><span 
  class="button green"
  id="rating_p_2236"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081120013113/http://ja.doukaku.org/comment/2236/">
    1
    reply
  </a>

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2236/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2243">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/382/" target="_top">miyamuko</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2243/">#2243</a>(<script language="JavaScript">print_time(new Date("2007/08/16 18:36 GMT"));</script><noscript>2007/08/16 18:36 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>よくよく考えると、このコードだと
以下のような処理がシーケンシャルに
行われるのでスケールしなくて当然ですね。

1. client が [:pricestring, ...] を write
2. client が [:pricestring_result] を take
3. server が [:pricestring, ...] をtake して処理
4. server が [:pricestring_result, ] を write
5. client の [:pricestring_result] の take が帰ってくる
6. 1 にもどる


で、処理を変えて client の [:pricestring] を write する処理と 
[:pricestring_result] を take する処理を
別プロセスにしてみたけど、大して変わらなかった。。。
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2243/addtag/" class="addtag" id="addtag_2243">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2243"
  >-</span><span
  class="button yellow"
  id="rating_z_2243"
  >0</span><span 
  class="button green"
  id="rating_p_2243"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2236/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2243/root/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2243/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment2238">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2238/">#2238</a>(<script language="JavaScript">print_time(new Date("2007/08/16 15:35 GMT"));</script><noscript>2007/08/16 15:35 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
<p>ScalaでActorを使って。
</p>
<p>そもそも非同期に使うのがメインなものなので、同期でやるなんて初めてでした。!?とreplyを使うと同期でメッセージを送受信できます。
</p>
<p>が・・・直列で使うと遅いですね。
</p>
<ul>
 <li>
     CPU:Athlon 3000+
 </li>

 <li>
     RAM: 1G
 </li>

 <li>
     同一ホスト
 </li>
</ul>
<p>で21218 msでした。直列に呼び出すなら素直にRMI使ったほうがいいですね。
</p>



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52</pre></td><td class="code"><div class="highlight"><pre>import scala.actors._
import scala.actors.Actor._
import scala.actors.remote._
import scala.actors.remote.RemoteActor._
import java.io.ByteArrayOutputStream

val PORT = 9010

if(args.length&gt;0 &amp;&amp; args(0) == &quot;server&quot;) {
//server side

  println(&quot;server:start&quot;)
  actor {
    alive(PORT)
    register(&#39;pricestring, self)
    loop {
      react{ 
        case (price:int, p:int) =&gt; 
          val s = new ByteArrayOutputStream
          Console.withOut[unit](s){
            printf(&quot;\u8ca9\u58f2\u4fa1\u683c {0}\u5186\uff08\u5b9a\u4fa1{1}\u5186\u304b\u3089{2}%\u5f15\u304d\uff09&quot;,
              (price*(1-p.toFloat/100)).ceil, price, p)
          }
          reply(s.toString)
      }
    }
  }

}else {
//client side

  val clientActor = actor {
    val c = select(Node(&quot;127.0.0.1&quot;, PORT), &#39;pricestring)
    loop {
      react {
        case r@(i:int,j:int) =&gt; reply((c!?r))
      }
    }
  }

  import scala.testing.Benchmark
  val test = new Benchmark {
    def run:unit = {
      var i = -1;while({i= i+1; i&lt;10000}) {
        clientActor !? ((2000, 20))
      }
      return ()
    }
  }
  println(test.runBenchmark(1)(0)+&quot; ms&quot;)
  System.exit(0)
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2238/addtag/" class="addtag" id="addtag_2238">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/rolcaol/">rolcaol</a>
    
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2238/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2238/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2238"
  >-</span><span
  class="button yellow"
  id="rating_z_2238"
  >0</span><span 
  class="button green"
  id="rating_p_2238"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2238/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment2239">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/101/" target="_top">沢渡 みかげ</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2239/">#2239</a>(<script language="JavaScript">print_time(new Date("2007/08/16 15:43 GMT"));</script><noscript>2007/08/16 15:43 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/erlang/">
	  Erlang
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>普通にErlangのプロセス間通信を使って実装してみました．
夏休み中なのでとりあえず自宅マシンで測定．

・Intel(R) Xeon(R) CPU 5130  @ 2.00GHz
・同一サーバ内
・Erlang 5.5.4

で 1.04秒くらいでした．

Erlangのプロセス間通信は関数呼び出しの形になっていないので，
呼び出し側が引数をメッセージで送り，
それを受け取ったサーバが呼び出し側に戻値をメッセージで
送り返す形で実装しています．


サーバ側
&gt; erl -noshell -name server@127.0.0.1 -s rcall_s start


クライアント側
&gt; time erl -noshell -name client@127.0.0.1 -s rcall_c main -s init stop
remote pid &lt;4053.36.0&gt;
ret = bench_ok
1.044240 sec.

real    0m2.352s
user    0m0.908s
sys     0m0.156s
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64</pre></td><td class="code"><div class="highlight"><pre>==== rcall_s.erl

-module(rcall_s).
-export([start/0, init/0]).

start() -&gt;
  proc_lib:start(?MODULE, init, []),
  ok.

init() -&gt;
  global:register_name(calc, self()),
  proc_lib:init_ack(ok),
  loop().

loop() -&gt;
  receive
    {From, Price, Discount} -&gt;
      From ! calc(Price, Discount)
  end,
  loop().


calc(Price, Discount) -&gt;
  lists:flatten(io_lib:format(&quot;販売価格 ~s円（定価~s円から~w%引き）&quot;,
    [comma(Price * (100-Discount) div 100), comma(Price), Discount])).


comma([N1, N2, N3, N4 | RestN], Acc) -&gt;
  comma([N4 | RestN], [&quot;,&quot;, N3, N2, N1 | Acc]);
comma(RestN, Acc) -&gt;
  lists:flatten([lists:reverse(RestN), Acc]).

comma(N) when is_integer(N) -&gt;
  comma(lists:reverse(integer_to_list(N)), []).


==== rcall_c.erl

-module(rcall_c).
-export([main/0, bench/2]).

main() -&gt;
  init(),
  Pid = global:whereis_name(calc),
  io:format(&quot;remote pid ~w~n&quot;, [Pid]),
  {Time, Value} = timer:tc(?MODULE, bench, [Pid, 10000]),
  io:format(&quot;ret = ~w~n~f sec.~n&quot;, [Value, Time/1000000]).

init() -&gt;
  net_adm:ping(&#39;server@127.0.0.1&#39;),
  global:sync().
  % すぐにglobalnameが反映されないので，
  % pingしたあとsyncしてから利用する

bench(_, 0) -&gt;
  bench_ok;
bench(Pid, N) -&gt;
  % 送信元のPIDを知らせないと送り返せない
  Pid ! {self(), 2000, 20},
  receive
    _RetValue -&gt;
      ok
  end,
  bench(Pid, N-1).
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2239/addtag/" class="addtag" id="addtag_2239">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/erlang/">
		Erlang
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2239/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2239/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2239"
  >-</span><span
  class="button yellow"
  id="rating_z_2239"
  >0</span><span 
  class="button green"
  id="rating_p_2239"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2239/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment2240">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/25/" target="_top">hamano</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2240/">#2240</a>(<script language="JavaScript">print_time(new Date("2007/08/16 16:31 GMT"));</script><noscript>2007/08/16 16:31 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>C言語 + libxmlrpc（サーバーは apache 経由のCGI)で実装しました。
サーバーサイドのスペック
* Celeron 1.3GHz
* メモリ1G
* xmlrpc-c-1.11.00
11.285 秒でした

最初はシリアルに問い合わせてみたのですが目も当てられないぐらい遅かったので非同期dで 100発 × 100回 というようにパラレルに問い合わせるようにしました。
あとは apache のチューニングでもう少し早くなりそうです。(prefork だったので)</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89</pre></td><td class="code"><div class="highlight"><pre><span class="c">/* サーバー側 CGIコード */</span>
<span class="cp">#include&lt;stdio.h&gt;</span>
<span class="cp">#include&lt;stdlib.h&gt;</span>
<span class="cp">#include&lt;string.h&gt;</span>
<span class="cp">#include&lt;xmlrpc.h&gt;</span>
<span class="cp">#include&lt;xmlrpc_cgi.h&gt;</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">int2cstr</span><span class="p">(</span><span class="kt">int</span> <span class="n">num</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">16</span><span class="p">];</span>
    <span class="n">size_t</span> <span class="n">len</span><span class="p">;</span>
    <span class="n">snprintf</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">),</span> <span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="n">num</span><span class="p">);</span>
    <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">buf</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">len</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">str</span><span class="p">[</span><span class="n">j</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">buf</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">!=</span> <span class="n">len</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">len</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="mi">3</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="n">str</span><span class="p">[</span><span class="n">j</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;,&#39;</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">str</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">static</span> <span class="n">xmlrpc_value</span> <span class="o">*</span><span class="nf">pricestring</span><span class="p">(</span><span class="n">xmlrpc_env</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">xmlrpc_value</span> <span class="o">*</span><span class="n">param_array</span><span class="p">,</span>
                                 <span class="kt">void</span> <span class="o">*</span><span class="n">user_data</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">xmlrpc_int32</span> <span class="n">price</span><span class="p">,</span> <span class="n">discount</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">value</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">str</span><span class="p">[</span><span class="mi">256</span><span class="p">],</span> <span class="n">value_str</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span> <span class="n">price_str</span><span class="p">[</span><span class="mi">16</span><span class="p">];</span>

    <span class="n">xmlrpc_parse_value</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">param_array</span><span class="p">,</span> <span class="s">&quot;(ii)&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">price</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">discount</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">env</span><span class="o">-&gt;</span><span class="n">fault_occurred</span><span class="p">)</span> <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
    <span class="n">value</span> <span class="o">=</span> <span class="n">price</span> <span class="o">-</span> <span class="p">(</span><span class="n">price</span> <span class="o">*</span> <span class="n">discount</span> <span class="o">/</span> <span class="mi">100</span><span class="p">);</span>

    <span class="n">int2cstr</span><span class="p">(</span><span class="n">price</span><span class="p">,</span> <span class="n">price_str</span><span class="p">);</span>
    <span class="n">int2cstr</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">value_str</span><span class="p">);</span>
    <span class="n">snprintf</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">str</span><span class="p">),</span>
             <span class="s">&quot;販売価格 %s円 (定価%s円から%d%引き)&quot;</span><span class="p">,</span>
             <span class="n">value_str</span><span class="p">,</span> <span class="n">price_str</span><span class="p">,</span> <span class="n">discount</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">xmlrpc_build_value</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="s">&quot;s&quot;</span><span class="p">,</span> <span class="n">str</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span> <span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">xmlrpc_cgi_init</span><span class="p">(</span><span class="n">XMLRPC_CGI_NO_FLAGS</span><span class="p">);</span>
    <span class="n">xmlrpc_cgi_add_method_w_doc</span><span class="p">(</span><span class="s">&quot;pricestring&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pricestring</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span>
                                <span class="s">&quot;s:ii&quot;</span><span class="p">,</span> <span class="s">&quot;Add two integers.&quot;</span><span class="p">);</span>
    <span class="n">xmlrpc_cgi_process_call</span><span class="p">();</span>
    <span class="n">xmlrpc_cgi_cleanup</span><span class="p">();</span>
    <span class="k">return</span> <span class="n">EXIT_SUCCESS</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/* クライアント側コード */</span>
<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;xmlrpc.h&gt;</span>
<span class="cp">#include &lt;xmlrpc_client.h&gt;</span>

<span class="cp">#define XMLRPC_URL &quot;http:</span><span class="c">//192.168.0.13/pricestring.cgi&quot;</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">print_state_name_callback</span> <span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">server_url</span><span class="p">,</span>
                       <span class="kt">char</span> <span class="o">*</span><span class="n">method_name</span><span class="p">,</span>
                       <span class="n">xmlrpc_value</span> <span class="o">*</span><span class="n">param_array</span><span class="p">,</span>
                       <span class="kt">void</span> <span class="o">*</span><span class="n">user_data</span><span class="p">,</span>
                       <span class="n">xmlrpc_env</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span>
                       <span class="n">xmlrpc_value</span> <span class="o">*</span><span class="n">result</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">env</span><span class="o">-&gt;</span><span class="n">fault_occurred</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
    <span class="n">xmlrpc_parse_value</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">result</span><span class="p">,</span> <span class="s">&quot;s&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">str</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">env</span><span class="o">-&gt;</span><span class="n">fault_occurred</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">str</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span> <span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
    
    <span class="n">xmlrpc_client_init</span><span class="p">(</span><span class="n">XMLRPC_CLIENT_NO_FLAGS</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="n">xmlrpc_client_call_asynch</span><span class="p">(</span><span class="n">XMLRPC_URL</span><span class="p">,</span> <span class="s">&quot;pricestring&quot;</span><span class="p">,</span>
                                      <span class="n">print_state_name_callback</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span>
                                      <span class="s">&quot;(ii)&quot;</span><span class="p">,</span>
                                      <span class="p">(</span><span class="n">xmlrpc_int32</span><span class="p">)</span><span class="mi">2000</span><span class="p">,</span> <span class="p">(</span><span class="n">xmlrpc_int32</span><span class="p">)</span><span class="mi">20</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">xmlrpc_client_event_loop_finish_asynch</span><span class="p">();</span>
    <span class="p">}</span>
    <span class="n">xmlrpc_client_cleanup</span><span class="p">();</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2240/addtag/" class="addtag" id="addtag_2240">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/XML-RPC/">XML-RPC</a>
    
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2240/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2240/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2240"
  >-</span><span
  class="button yellow"
  id="rating_z_2240"
  >0</span><span 
  class="button green"
  id="rating_p_2240"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2240/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment2241">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2241/">#2241</a>(<script language="JavaScript">print_time(new Date("2007/08/16 17:17 GMT"));</script><noscript>2007/08/16 17:17 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Gaucheのコードを見て思いついた。
サーバー側の  ghci を ssh で起こす。
自宅のクライアントプログラムからインターネットにあるサーバーへアクセスして
pricestring を 10000回実行、結果の文字列10000行をプログラムで受けとる。 </pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59</pre></td><td class="code"><div class="highlight"><pre><span class="c1">-- サーバー側 pricestring.hs</span>

<span class="kr">import</span> <span class="nv">qualified</span> <span class="n">Data</span><span class="o">.</span><span class="n">UTF8</span> <span class="nv">as</span> <span class="n">U</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>

<span class="nv">pricestring</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">pricestring</span> <span class="nv">x</span> <span class="nv">y</span> <span class="o">=</span> <span class="s">&quot;販売価格 &quot;</span><span class="o">++</span><span class="nv">h</span><span class="o">++</span><span class="s">&quot; 円 (定価 &quot;</span><span class="o">++</span><span class="nv">t</span><span class="o">++</span><span class="s">&quot; 円から &quot;</span><span class="o">++</span><span class="nv">r</span><span class="o">++</span><span class="s">&quot; %引き)&quot;</span>
  <span class="kr">where</span>  <span class="nv">h</span> <span class="o">=</span> <span class="nv">comint</span> <span class="p">(</span><span class="nv">x</span><span class="o">*</span><span class="p">(</span><span class="mi">100</span><span class="o">-</span><span class="nv">y</span><span class="p">)</span> <span class="p">`</span><span class="nv">div</span><span class="p">`</span> <span class="mi">100</span><span class="p">)</span>
         <span class="nv">t</span> <span class="o">=</span> <span class="nv">comint</span> <span class="nv">x</span> 
         <span class="nv">r</span> <span class="o">=</span> <span class="nv">comint</span> <span class="nv">y</span>

<span class="nv">comint</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">comint</span> <span class="o">=</span> <span class="nv">reverse</span> <span class="o">.</span> <span class="nv">concat</span> <span class="o">.</span> <span class="nv">intersperse</span> <span class="s">&quot;,&quot;</span> <span class="o">.</span> <span class="nv">slice</span> <span class="mi">3</span> <span class="o">.</span> <span class="nv">reverse</span> <span class="o">.</span> <span class="nv">show</span>

<span class="nv">slice</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="nv">a</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[[</span><span class="nv">a</span><span class="p">]]</span>
<span class="nv">slice</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">unfoldr</span> <span class="nv">phi</span>
   <span class="kr">where</span> <span class="nv">phi</span> <span class="p">[]</span> <span class="o">=</span> <span class="n">Nothing</span>
         <span class="nv">phi</span> <span class="nv">xs</span> <span class="o">=</span> <span class="n">Just</span> <span class="o">$</span> <span class="nv">splitAt</span> <span class="nv">n</span> <span class="nv">xs</span>

<span class="c1">-- クライアント側</span>

<span class="kr">module</span> <span class="n">Main</span> <span class="p">(</span><span class="nv">main</span><span class="p">)</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Char</span>
<span class="kr">import</span> <span class="nv">qualified</span> <span class="n">Data</span><span class="o">.</span><span class="n">UTF8</span> <span class="nv">as</span> <span class="n">U</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">IO</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Process</span>

<span class="nv">remote</span> <span class="o">=</span> <span class="s">&quot;foo.example.org&quot;</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="p">(</span><span class="nv">i</span><span class="p">,</span><span class="nv">o</span><span class="p">,</span><span class="nv">e</span><span class="p">,</span><span class="nv">p</span><span class="p">)</span> <span class="o">&lt;-</span> <span class="nv">runInteractiveCommand</span> <span class="s">&quot;ssh &quot;</span><span class="o">++</span><span class="nv">host</span><span class="o">++</span><span class="s">&quot; ghci -v0 pricestring.hs&quot;</span>
          <span class="p">;</span> <span class="nv">cs</span> <span class="o">&lt;-</span> <span class="nv">hGetContents</span> <span class="nv">o</span>
          <span class="p">;</span> <span class="nv">es</span> <span class="o">&lt;-</span> <span class="nv">hGetContents</span> <span class="nv">e</span>
          <span class="p">;</span> <span class="nv">hPutStrLn</span> <span class="nv">i</span> <span class="s">&quot;U.putStr $ unlines $ map (uncurry pricestring) $ replicate 10000 (2000,20)&quot;</span>
          <span class="p">;</span> <span class="nv">hFlush</span> <span class="nv">i</span>
          <span class="p">;</span> <span class="nv">hPutStrLn</span> <span class="nv">i</span> <span class="s">&quot;:q&quot;</span>
          <span class="p">;</span> <span class="nv">hFlush</span> <span class="nv">i</span>
          <span class="p">;</span> <span class="nv">putStr</span> <span class="nv">cs</span>
          <span class="p">;</span> <span class="nv">putStr</span> <span class="nv">es</span>
          <span class="p">}</span>

<span class="nv">loop0</span> <span class="nv">h</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">l</span> <span class="o">&lt;-</span> <span class="nv">getLine</span>
            <span class="p">;</span> <span class="kr">if</span> <span class="s">&quot;&gt; &quot;</span> <span class="p">`</span><span class="nv">isSuffixOf</span><span class="p">`</span> <span class="nv">l</span> <span class="kr">then</span> <span class="nv">return</span> <span class="p">()</span>
              <span class="kr">else</span> <span class="nv">loop0</span> <span class="nv">h</span>
            <span class="p">}</span>

<span class="c1">--</span>
<span class="cm">{-</span>
<span class="cm">*Main&gt; :main</span>
<span class="cm">販売価格 1,600 円 (定価 2,000 円から 20 %引き)</span>
<span class="cm">販売価格 1,600 円 (定価 2,000 円から 20 %引き)</span>
<span class="cm">販売価格 1,600 円 (定価 2,000 円から 20 %引き)</span>
<span class="cm">...</span>
<span class="cm">... 結果が10000行</span>
<span class="cm">...</span>
<span class="cm">(1.04 secs, 183701028 bytes)</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2241/addtag/" class="addtag" id="addtag_2241">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/ghci/">ghci</a>
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/ssh/">ssh</a>
    
	&nbsp;

	
      [<a href="/web/20081120013113/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2241/download/">
		download code
      </a>]
	  [<a href="/web/20081120013113/http://ja.doukaku.org/comment/2241/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2241"
  >-</span><span
  class="button yellow"
  id="rating_z_2241"
  >0</span><span 
  class="button green"
  id="rating_p_2241"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081120013113/http://ja.doukaku.org/comment/2241/">
    2
    replies
  </a>

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2241/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2242">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2242/">#2242</a>(<script language="JavaScript">print_time(new Date("2007/08/16 17:20 GMT"));</script><noscript>2007/08/16 17:20 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>あれ？、コードのインデントが変になっちゃった。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2242/addtag/" class="addtag" id="addtag_2242">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/%E3%82%A4%E3%83%B3%E3%83%87%E3%83%B3%E3%83%88/">インデント</a>
    
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2242"
  >-</span><span
  class="button yellow"
  id="rating_z_2242"
  >0</span><span 
  class="button green"
  id="rating_p_2242"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2241/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2242/root/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081120013113/http://ja.doukaku.org/comment/2242/">
    1
    reply
  </a>

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2242/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2247">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2247/">#2247</a>(<script language="JavaScript">print_time(new Date("2007/08/17 04:21 GMT"));</script><noscript>2007/08/17 04:21 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>直しておきました。

原因は部分的にタブ文字が混ざっていたことでした。
どう書くorgではタブ文字をスペース4個で表示しているので、
8スペースの環境でタブとスペースの混在したコードを作ると
タブの所だけへこむことになります。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2247/addtag/" class="addtag" id="addtag_2247">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2247"
  >-</span><span
  class="button yellow"
  id="rating_z_2247"
  >0</span><span 
  class="button green"
  id="rating_p_2247"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2242/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2247/root/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2247/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2248">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120013113/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2248/">#2248</a>(<script language="JavaScript">print_time(new Date("2007/08/17 04:27 GMT"));</script><noscript>2007/08/17 04:27 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>測定結果と環境を書きわすれていました．

測定
% time runhaskell rpc.hs 
...10000行の出力...
runhaskell rpc.hs  0.93s user 0.47s system 12% cpu 10.790 total

通信
  下り 8Mbps (best effort) の回線でインターネット接続
サーバー
  CPU    : AMD Sempron 2600+ 1.61 GHz 
  メモリ : 500MB
  言語   : ghc-6.6
クライアント
  CPU    : Intel Pentium M 2.13 GHz
  メモリ : 2GB
  言語   : ghc-6.6.1
ミドルウェア
  ssh
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2248/addtag/" class="addtag" id="addtag_2248">Tags</a>:
	
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/ghci/">ghci</a>
    
    <a href="/web/20081120013113/http://ja.doukaku.org/tag/ssh/">ssh</a>
    
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2248"
  >-</span><span
  class="button yellow"
  id="rating_z_2248"
  >0</span><span 
  class="button green"
  id="rating_p_2248"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2241/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120013113/http://ja.doukaku.org/comment/2248/root/"><img src="/web/20081120013113im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081120013113/http://ja.doukaku.org/45/reply_to/2248/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  

  

  

  

  
    





<div class="comment" id="comment2262">
  <p class="banner"><a href="/web/20081120013113/http://ja.doukaku.org/user/316/" target="_top">theoria</a>

	
	&nbsp;
	<a href="/web/20081120013113/http://ja.doukaku.org/comment/2262/">#2262</a>(<script language="JavaScript">print_time(new Date("2007/08/17 07:37 GMT"));</script><noscript>2007/08/17 07:37 GMT</noscript>)
	
	
	
	[<a href="/web/20081120013113/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Shiro&nbsp;さんの実装に対抗して速度重視のものを書いてみました。ソケットによって、二つの引数を渡しているだけですが、&nbsp;RPC&nbsp;ということにしておきます。実験的なコードなので、安全性は考えていません。ソケットを閉じてさえいません。<br/><br/>実行速度はやはり速く、&nbsp;Celeron&nbsp;2GHz&nbsp;のマシン(同一)で、&nbsp;/dev/null&nbsp;&nbsp;に出力したもので、大体3秒程度でした。実行結果は以下のような感じ。<br/><br/>theo-desktop%&nbsp;cd&nbsp;workspace/doukaku&nbsp;<br/>theo-desktop%&nbsp;./rpc-server.scm&amp;<br/>[1]&nbsp;22494<br/>theo-desktop%&nbsp;./rpc-client.scm<br/>#&nbsp;一万行の出力を省略<br/>;(time&nbsp;(dotimes&nbsp;(i&nbsp;*call-times*)&nbsp;(format&nbsp;out&nbsp;"~d&nbsp;~d\n"&nbsp;(u16vector-ref&nbsp;nv&nbsp;...<br/>;&nbsp;real&nbsp;&nbsp;29.516<br/>;&nbsp;user&nbsp;&nbsp;&nbsp;1.170<br/>;&nbsp;sys&nbsp;&nbsp;&nbsp;&nbsp;1.100<br/>theo-desktop%&nbsp;<br/>[1]&nbsp;&nbsp;+&nbsp;done&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;./rpc-server.scm<br/>theo-desktop%&nbsp;./rpc-server.scm&amp;<br/>[1]&nbsp;22499<br/>theo-desktop%&nbsp;./rpc-client.scm&gt;/dev/null&nbsp;<br/>;(time&nbsp;(dotimes&nbsp;(i&nbsp;*call-times*)&nbsp;(format&nbsp;out&nbsp;"~d&nbsp;~d\n"&nbsp;(u16vector-ref&nbsp;nv&nbsp;...<br/>;&nbsp;real&nbsp;&nbsp;&nbsp;3.434<br/>;&nbsp;user&nbsp;&nbsp;&nbsp;0.960<br/>;&nbsp;sys&nbsp;&nbsp;&nbsp;&nbsp;0.840<br/>theo-desktop%&nbsp;<br/>[1]&nbsp;&nbsp;+&nbsp;done&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;./rpc-server.scm<br/>theo-desktop%&nbsp;<br/><br/>*サーバとクライアントのCPU・メモリ<br/>&nbsp;&nbsp;メモリ:&nbsp;749.1MB<br/>&nbsp;&nbsp;プロセッサ:&nbsp;Intel&nbsp;Celeron&nbsp;CPU&nbsp;2.00&nbsp;GHz<br/><br/>*同一サーバ内での実行か別サーバでの実行か<br/>&nbsp;&nbsp;同一。<br/><br/>*言語のバージョン<br/>&nbsp;&nbsp;Gauche&nbsp;scheme&nbsp;interpreter,&nbsp;version&nbsp;0.8.10&nbsp;[utf-8,pthreads]<br/><br/>*ミドルウェアを使用している場合，その名前とバージョン<br/>&nbsp;&nbsp;特にないと思われる。<br/><br/>このプログラムを書くにあたって&nbsp;Gauche&nbsp;(at&nbsp;Lingr)&nbsp;において、びさん、&nbsp;rui&nbsp;さん、&nbsp;masa_edw&nbsp;さん、&nbsp;leque&nbsp;さんらに相談にのっていただきました。どうもありがとう！<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="c1">;; クライアント</span>
<span class="o">#</span><span class="nv">!/usr/bin/env</span> <span class="nv">gosh</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">net</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-27</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">uvector</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="nv">*call-times*</span> <span class="mi">10000</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">random-integers</span> <span class="nv">size</span> <span class="nv">maxnum</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">let1</span> <span class="nv">v</span> <span class="p">(</span><span class="nf">make-u16vector</span> <span class="nv">size</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">i</span> <span class="nv">size</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">u16vector-set!</span> <span class="nv">v</span> <span class="nv">i</span> <span class="p">(</span><span class="nf">random-integer</span> <span class="nv">maxnum</span><span class="p">)))</span>
    <span class="nv">v</span><span class="p">))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">main</span> <span class="nv">args</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">nvec</span> <span class="p">(</span><span class="nf">random-integers</span> <span class="nv">*call-times*</span> <span class="p">(</span><span class="nb">expt </span><span class="mi">2</span> <span class="mi">16</span><span class="p">)))</span>
	<span class="p">(</span><span class="nf">mvec</span> <span class="p">(</span><span class="nf">random-integers</span> <span class="nv">*call-times*</span> <span class="mi">100</span><span class="p">)))</span>
    <span class="p">(</span><span class="nf">call-with-client-socket</span>
	<span class="p">(</span><span class="nf">make-client-socket</span> <span class="ss">&#39;inet</span> <span class="s">&quot;localhost&quot;</span> <span class="mi">3000</span><span class="p">)</span>
      <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">in</span> <span class="nv">out</span><span class="p">)</span>
	<span class="p">(</span><span class="nf">time</span> 
	 <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">i</span> <span class="nv">*call-times*</span><span class="p">)</span>
	   <span class="p">(</span><span class="nf">format</span> <span class="nv">out</span>
		   <span class="s">&quot;~d ~d\n&quot;</span>
		   <span class="p">(</span><span class="nf">u16vector-ref</span> <span class="nv">nvec</span> <span class="nv">i</span><span class="p">)</span> <span class="p">(</span><span class="nf">u16vector-ref</span> <span class="nv">mvec</span> <span class="nv">i</span><span class="p">))</span>
	   <span class="p">(</span><span class="nf">flush</span> <span class="nv">out</span><span class="p">)</span>
	   <span class="p">(</span><span class="nf">print</span> <span class="p">(</span><span class="nf">read-line</span> <span class="nv">in</span><span class="p">))</span>
	   <span class="p">))))))</span>

<span class="c1">;; サーバー</span>

<span class="p">(</span><span class="k">let* </span><span class="p">((</span><span class="nf">server</span> <span class="p">(</span><span class="nf">make-server-socket</span> <span class="ss">&#39;inet</span> <span class="mi">3000</span> <span class="nv">:reuse-addr?</span> <span class="no">#t</span><span class="p">))</span>
       <span class="p">(</span><span class="nf">sock</span> <span class="p">(</span><span class="nf">socket-accept</span> <span class="nv">server</span><span class="p">))</span>
       <span class="p">(</span><span class="nf">in</span> <span class="p">(</span><span class="nf">socket-input-port</span> <span class=>




<!--
     FILE ARCHIVED ON 1:31:13 Nov 20, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:17:45 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
