
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
lessの実装
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20090514041653cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20090514041653cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20090514041653cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20090514041653/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20090514041653/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20090514041653js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20090514041653js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20090514041653js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20090514041653js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app10.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/194\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "14";
var displayMonth = "May";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/194/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090514041653" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080820015813/http://ja.doukaku.org/194/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="20 Aug 2008"><strong>AUG</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 4:16:53 May 14, 2009">MAY</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jun
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080820015813/http://ja.doukaku.org/194/nested/" title="1:58:13 Aug 20, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 4:16:53 May 14, 2009">14</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2008
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 4:16:53 May 14, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20090514041653*/http://ja.doukaku.org/194/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">20 Aug 08 - 14 May 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000010000_2009:4:000010000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20090514041653/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20090514041653im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20090514041653/http://ja.doukaku.org/194/">lessの実装</a>
</h2>

    





<div class="comment" id="comment6817">
  <p class="banner"><a href="/web/20090514041653/http://ja.doukaku.org/user/850/" target="_top">takeru</a>

	
	&nbsp;
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6817/">#6817</a>(<script language="JavaScript">print_time(new Date("2008/07/24 04:55 GMT"));</script><noscript>2008/07/24 04:55 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ff9f7f;">-6/8=-0.75</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>'less'を実装してください。</p>
<p>巨大なファイルでも効率的に動作するようにしてください。</p>
<p></p>
<p>最低限必要な機能は、</p>
<ul>
<li>
上下スクロール
</li>
<li>検索</li>
</ul>
<p>です。</p>
</div>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6817/addtag/" class="addtag" id="addtag_6817">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ff9f7f;"
  >-6/8=-0.75</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6817"
  >-</span><span
  class="button yellow"
  id="rating_z_6817"
  >0</span><span 
  class="button green"
  id="rating_p_6817"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090514041653/http://ja.doukaku.org/194/reply_to/6817/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20090514041653/http://ja.doukaku.org/194/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20090514041653/http://ja.doukaku.org/194/flatten/">フラット表示</a> 
<a href="/web/20090514041653/http://ja.doukaku.org/194/">非表示</a> 


  

  
    





<div class="comment" id="comment6879">
  <p class="banner"><a href="/web/20090514041653/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20090514041653/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6879/">#6879</a>(<script language="JavaScript">print_time(new Date("2008/07/29 09:59 GMT"));</script><noscript>2008/07/29 09:59 GMT</noscript>)
	
	
	
	[<a href="/web/20090514041653/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  コマンド&nbsp;f,&nbsp;b,&nbsp;/,&nbsp;n,&nbsp;N,&nbsp;q&nbsp;を受け付けます。<br/><br/>文字列のリストに全部ぶっこんでから表示してるだけ。<br/>「巨大なファイルでも～」というのは置いといて、、、<br/>（3万行くらいなら余裕ぽい）
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">MyLess</span>
<span class="k">{</span>
    <span class="kt">int</span> <span class="n">height</span> <span class="p">=</span> <span class="m">20</span><span class="p">;</span>
    <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">lines</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
    <span class="kt">int</span> <span class="n">pos</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
    <span class="kt">string</span> <span class="n">search</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>

    <span class="n">MyLess</span><span class="p">(</span><span class="n">TextReader</span> <span class="n">tr</span><span class="p">)</span> <span class="k">{</span>
        <span class="kt">string</span> <span class="n">line</span><span class="p">;</span>
        <span class="k">while</span> <span class="p">((</span><span class="n">line</span> <span class="p">=</span> <span class="n">tr</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">())</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
            <span class="n">lines</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">line</span><span class="p">);</span>
        <span class="n">tr</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
    <span class="k">}</span>
    <span class="k">void</span> <span class="nf">Show</span><span class="p">()</span> <span class="k">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">Clear</span><span class="p">();</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span> <span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">height</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">i</span> <span class="p">+</span> <span class="n">pos</span><span class="p">)</span> <span class="p">&lt;</span> <span class="n">lines</span><span class="p">.</span><span class="n">Count</span> <span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0,5}{1} {2}&quot;</span><span class="p">,</span> <span class="n">i</span> <span class="p">+</span> <span class="n">pos</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">i</span> <span class="p">==</span> <span class="m">0</span> <span class="p">?</span> <span class="sc">&#39;&gt;&#39;</span> <span class="p">:</span> <span class="sc">&#39;|&#39;</span><span class="p">,</span> <span class="n">lines</span><span class="p">[</span><span class="n">i</span> <span class="p">+</span> <span class="n">pos</span><span class="p">]);</span>
    <span class="k">}</span>
    <span class="k">void</span> <span class="nf">Forward</span><span class="p">()</span> <span class="k">{</span>
        <span class="n">pos</span> <span class="p">=</span> <span class="n">pos</span> <span class="p">+</span> <span class="n">height</span> <span class="p">&gt;</span> <span class="n">lines</span><span class="p">.</span><span class="n">Count</span> <span class="p">?</span> <span class="n">lines</span><span class="p">.</span><span class="n">Count</span> <span class="p">-</span> <span class="m">1</span> <span class="p">:</span> <span class="n">pos</span> <span class="p">+</span> <span class="n">height</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="k">void</span> <span class="nf">Back</span><span class="p">()</span> <span class="k">{</span>
        <span class="n">pos</span> <span class="p">=</span> <span class="n">pos</span> <span class="p">&lt;</span> <span class="n">height</span> <span class="p">?</span> <span class="m">0</span> <span class="p">:</span> <span class="n">pos</span> <span class="p">-</span> <span class="n">height</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="k">void</span> <span class="nf">Find</span><span class="p">(</span><span class="kt">bool</span> <span class="n">forward</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">search</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>

        <span class="kt">bool</span> <span class="n">found</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">forward</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="n">pos</span> <span class="p">+</span> <span class="m">1</span> <span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">lines</span><span class="p">.</span><span class="n">Count</span> <span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">lines</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Contains</span><span class="p">(</span><span class="n">search</span><span class="p">))</span> <span class="k">{</span>
                    <span class="n">found</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span> <span class="n">pos</span> <span class="p">=</span> <span class="n">i</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
                <span class="k">}</span>
            <span class="k">}</span>
        <span class="k">}</span> <span class="k">else</span> <span class="k">{</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="n">pos</span> <span class="p">-</span> <span class="m">1</span> <span class="p">;</span> <span class="n">i</span> <span class="p">&gt;=</span> <span class="m">0</span> <span class="p">;</span> <span class="n">i</span><span class="p">--)</span> <span class="k">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">lines</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Contains</span><span class="p">(</span><span class="n">search</span><span class="p">))</span> <span class="k">{</span>
                    <span class="n">found</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span> <span class="n">pos</span> <span class="p">=</span> <span class="n">i</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
                <span class="k">}</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="n">Show</span><span class="p">();</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">found</span><span class="p">)</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;{0}{1}&quot;</span><span class="p">,</span> <span class="n">forward</span> <span class="p">?</span> <span class="sc">&#39;/&#39;</span> <span class="p">:</span> <span class="sc">&#39;?&#39;</span><span class="p">,</span> <span class="n">search</span><span class="p">);</span>
        <span class="k">else</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;見つかりません&quot;</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">void</span> <span class="nf">Do</span><span class="p">()</span> <span class="k">{</span>
        <span class="n">Show</span><span class="p">();</span>
        <span class="k">while</span> <span class="p">(</span><span class="k">true</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">ConsoleKeyInfo</span> <span class="n">key</span> <span class="p">=</span> <span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
            <span class="k">switch</span> <span class="p">(</span><span class="n">key</span><span class="p">.</span><span class="n">KeyChar</span><span class="p">)</span> <span class="k">{</span>
                <span class="k">case</span> <span class="sc">&#39;q&#39;</span><span class="p">:</span> <span class="k">return</span><span class="p">;</span>
                <span class="k">case</span> <span class="sc">&#39;f&#39;</span><span class="p">:</span> <span class="n">Forward</span><span class="p">();</span> <span class="n">Show</span><span class="p">();</span> <span class="k">break</span><span class="p">;</span>
                <span class="k">case</span> <span class="sc">&#39;b&#39;</span><span class="p">:</span> <span class="n">Back</span><span class="p">();</span> <span class="n">Show</span><span class="p">();</span> <span class="k">break</span><span class="p">;</span>
                <span class="k">case</span> <span class="sc">&#39;/&#39;</span><span class="p">:</span>
                    <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="sc">&#39;/&#39;</span><span class="p">);</span>
                    <span class="n">search</span> <span class="p">=</span> <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">().</span><span class="n">Replace</span><span class="p">(</span><span class="s">&quot;\n&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">);</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">search</span><span class="p">.</span><span class="n">Length</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
                        <span class="n">search</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
                    <span class="n">Find</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="k">case</span> <span class="sc">&#39;n&#39;</span><span class="p">:</span> <span class="n">Find</span><span class="p">(</span><span class="k">true</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span>
                <span class="k">case</span> <span class="sc">&#39;N&#39;</span><span class="p">:</span> <span class="n">Find</span><span class="p">(</span><span class="k">false</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span>
                <span class="k">default</span><span class="p">:</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">}</span>
        <span class="k">}</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
        <span class="n">MyLess</span> <span class="n">less</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">args</span><span class="p">.</span><span class="n">Length</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
            <span class="n">less</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MyLess</span><span class="p">(</span><span class="n">Console</span><span class="p">.</span><span class="n">In</span><span class="p">);</span>
        <span class="k">else</span>
            <span class="n">less</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MyLess</span><span class="p">(</span><span class="k">new</span> <span class="n">StreamReader</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]));</span>

        <span class="n">less</span><span class="p">.</span><span class="n">Do</span><span class="p">();</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6879/addtag/" class="addtag" id="addtag_6879">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090514041653/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090514041653/http://ja.doukaku.org/comment/6879/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090514041653/http://ja.doukaku.org/comment/6879/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6879"
  >-</span><span
  class="button yellow"
  id="rating_z_6879"
  >0</span><span 
  class="button green"
  id="rating_p_6879"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090514041653/http://ja.doukaku.org/comment/6879/">
    1
    reply
  </a>

  [<a href="/web/20090514041653/http://ja.doukaku.org/194/reply_to/6879/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment6881">
  <p class="banner"><a href="/web/20090514041653/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20090514041653/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6881/">#6881</a>(<script language="JavaScript">print_time(new Date("2008/07/29 10:14 GMT"));</script><noscript>2008/07/29 10:14 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  なお、動かし方は<br/>&nbsp;&nbsp;&nbsp;myless.exe&nbsp;&nbsp;ファイル名<br/>です。<br/>&nbsp;&nbsp;&nbsp;dir&nbsp;&nbsp;|&nbsp;&nbsp;myless.exe<br/>のようにすると例外がでました。（ReadKeyがまずかったらしい）
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6881/addtag/" class="addtag" id="addtag_6881">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6881"
  >-</span><span
  class="button yellow"
  id="rating_z_6881"
  >0</span><span 
  class="button green"
  id="rating_p_6881"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090514041653/http://ja.doukaku.org/comment/6879/"><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090514041653/http://ja.doukaku.org/comment/6881/root/"><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090514041653/http://ja.doukaku.org/194/reply_to/6881/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment6883">
  <p class="banner"><a href="/web/20090514041653/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20090514041653/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6883/">#6883</a>(<script language="JavaScript">print_time(new Date("2008/07/29 10:36 GMT"));</script><noscript>2008/07/29 10:36 GMT</noscript>)
	
	
	
	[<a href="/web/20090514041653/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>反則ですが。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre>less &lt;- function(f) file.show(f, pager=&quot;less&quot;)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6883/addtag/" class="addtag" id="addtag_6883">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090514041653/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20090514041653/http://ja.doukaku.org/comment/6883/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090514041653/http://ja.doukaku.org/comment/6883/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6883"
  >-</span><span
  class="button yellow"
  id="rating_z_6883"
  >0</span><span 
  class="button green"
  id="rating_p_6883"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090514041653/http://ja.doukaku.org/194/reply_to/6883/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment6887">
  <p class="banner"><a href="/web/20090514041653/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090514041653/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090514041653/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6887/">#6887</a>(<script language="JavaScript">print_time(new Date("2008/07/30 05:26 GMT"));</script><noscript>2008/07/30 05:26 GMT</noscript>)
	
	
	
	[<a href="/web/20090514041653/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Squeak Smalltalk で。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="highlight"><pre>| file font nLines cr sp goNextPage goPrevPage findNext prevLine |
file := FileStream fileNamed: &#39;in.txt&#39;.

font := TextStyle defaultFont.
cr := Character cr.
sp := Character space.
nLines := Display height // (font height + font descent).

goNextPage := [nLines timesRepeat: [file nextLine]].
prevLine := [file binary. [file position = 0 or: [file back = 13]] whileFalse. file ascii].
goPrevPage := [nLines timesRepeat: [prevLine value]].
findNext := [:pattern | pattern notEmpty ifTrue: [file upToAll: pattern]. prevLine value].

[   | string |
    string := String streamContents: [:ss |
        | position |
        position := file position.
        nLines timesRepeat: [
            file nextLine ifNotNilDo: [:line | ss nextPutAll: line].
            file peek ifNotNil: [ss cr]].
        file position: position].
    Display fillWhite.
    string asDisplayText display.
    [Sensor keyboardPressed] whileFalse.
    Sensor keyboard caseOf: {
        [$q] -&gt; [file close. ^World restoreDisplay].
        [$g] -&gt; [file reset].
        [$G] -&gt; [file setToEnd].
        [sp] -&gt; [goNextPage value].
        [$f] -&gt; [goNextPage value].
        [$b] -&gt; [goPrevPage value].
        [cr] -&gt; [file nextLine].
        [$e] -&gt; [file nextLine].
        [$y] -&gt; [prevLine value].
        [$/] -&gt; [findNext value: (FillInTheBlank request: &#39;pattern:&#39;)]
    } otherwise: []
] repeat
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6887/addtag/" class="addtag" id="addtag_6887">タグ</a>:
	
    
    <a href="/web/20090514041653/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20090514041653/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20090514041653/http://ja.doukaku.org/comment/6887/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090514041653/http://ja.doukaku.org/comment/6887/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6887"
  >-</span><span
  class="button yellow"
  id="rating_z_6887"
  >0</span><span 
  class="button green"
  id="rating_p_6887"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090514041653/http://ja.doukaku.org/194/reply_to/6887/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment6983">
  <p class="banner"><a href="/web/20090514041653/http://ja.doukaku.org/user/148/" target="_top">takano32</a><a href="/web/20090514041653/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6983/">#6983</a>(<script language="JavaScript">print_time(new Date("2008/08/05 01:08 GMT"));</script><noscript>2008/08/05 01:08 GMT</noscript>)
	
	
	
	[<a href="/web/20090514041653/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  環境に依存するかもしれませんが、書いてみました。<br/>Gentoo&nbsp;Linuxで動作確認してます。<br/>%&nbsp;ruby&nbsp;-v<br/>ruby&nbsp;1.8.6&nbsp;(2008-06-20&nbsp;patchlevel&nbsp;230)&nbsp;[i686-linux]<br/><br/>less準拠でjk/qが使えます。<br/>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090514041653/http://www.ruby-lang.org/ja/man/html/curses.html">curses - Rubyリファレンスマニュアル</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!/usr/bin/env ruby</span>

<span class="nb">require</span> <span class="s1">&#39;curses&#39;</span>

<span class="n">lines</span> <span class="o">=</span> <span class="no">ARGF</span><span class="o">.</span><span class="n">readlines</span>
<span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
<span class="no">LINES</span> <span class="o">=</span> <span class="mi">10</span>
<span class="no">Curses</span><span class="o">::</span><span class="n">init_screen</span>


<span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">lines</span><span class="p">)</span>
    <span class="p">(</span><span class="n">index</span><span class="o">.</span><span class="n">.index</span><span class="o">+</span><span class="no">LINES</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">l</span><span class="o">|</span>
        <span class="no">Curses</span><span class="o">::</span><span class="n">stdscr</span><span class="o">.</span><span class="n">setpos</span><span class="p">(</span><span class="n">l</span> <span class="o">-</span> <span class="n">index</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
        <span class="no">Curses</span><span class="o">::</span><span class="n">addstr</span> <span class="n">lines</span><span class="o">[</span><span class="n">l</span><span class="o">]</span>
    <span class="k">end</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">search</span><span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">lines</span><span class="p">)</span>
    <span class="n">word</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">ch</span> <span class="o">=</span> <span class="no">Curses</span><span class="o">::</span><span class="n">getch</span><span class="p">)</span> <span class="o">!=</span> <span class="mh">0x0A</span> <span class="k">do</span>
        <span class="n">word</span> <span class="o">+=</span> <span class="n">ch</span><span class="o">.</span><span class="n">chr</span>
    <span class="k">end</span>
    <span class="p">(</span><span class="n">index</span><span class="o">.</span><span class="n">.</span><span class="p">(</span><span class="n">lines</span><span class="o">.</span><span class="n">size</span><span class="p">))</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">l</span><span class="o">|</span>
        <span class="k">if</span> <span class="n">lines</span><span class="o">[</span><span class="n">l</span><span class="o">].</span><span class="n">match</span><span class="p">(</span><span class="n">word</span><span class="p">)</span> <span class="k">then</span>
            <span class="k">return</span> <span class="n">l</span>
        <span class="k">end</span>
    <span class="k">end</span>
    <span class="k">return</span> <span class="kp">nil</span>
<span class="k">end</span>


<span class="n">update</span><span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">lines</span><span class="p">)</span>

<span class="k">while</span> <span class="n">ch</span> <span class="o">=</span> <span class="no">Curses</span><span class="o">::</span><span class="n">getch</span> <span class="k">do</span>
    <span class="k">case</span> <span class="n">ch</span>
    <span class="k">when</span> <span class="sc">?j</span>
        <span class="n">index</span> <span class="o">+=</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">lines</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="no">LINES</span>
    <span class="k">when</span> <span class="sc">?k</span>
        <span class="n">index</span> <span class="o">-=</span> <span class="mi">1</span> <span class="k">if</span> <span class="mi">0</span> <span class="o">&lt;</span> <span class="n">index</span>
    <span class="k">when</span> <span class="sc">?/</span>
        <span class="n">index</span> <span class="o">=</span> <span class="n">search</span><span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">lines</span><span class="p">)</span> <span class="o">||</span> <span class="n">index</span>
    <span class="k">when</span> <span class="sc">?q</span>
        <span class="k">break</span>
    <span class="k">end</span>
    <span class="n">update</span><span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">lines</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6983/addtag/" class="addtag" id="addtag_6983">タグ</a>:
	
    
    <a href="/web/20090514041653/http://ja.doukaku.org/tag/curses/">curses</a>
    
	&nbsp;

	
      [<a href="/web/20090514041653/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090514041653/http://ja.doukaku.org/comment/6983/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090514041653/http://ja.doukaku.org/comment/6983/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6983"
  >-</span><span
  class="button yellow"
  id="rating_z_6983"
  >0</span><span 
  class="button green"
  id="rating_p_6983"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090514041653/http://ja.doukaku.org/194/reply_to/6983/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment6984">
  <p class="banner"><a href="/web/20090514041653/http://ja.doukaku.org/user/771/" target="_top">M.Suzuki</a>

	
	&nbsp;
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6984/">#6984</a>(<script language="JavaScript">print_time(new Date("2008/08/05 01:16 GMT"));</script><noscript>2008/08/05 01:16 GMT</noscript>)
	
	
	
	[<a href="/web/20090514041653/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  効率はともかく、巨大なファイルでも表示できるように作ってみました。
表示はcurses、ファイルの行インデックススキャンをバックグラウンドで行うためにpthreadを使用しています。
行インデックスもテンポラリファイルとして書き出しているので、fpos_tが32bitの環境でも2GB、64bitなら8EBまでいける(自信なし)はずです。

ただし、システム側に懲りすぎたので、タブやら一行の折り返しやらは手を抜いて全く手付かずです。
検索機能もUIが手抜きのためインクリメンタルサーチしかできません。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277</pre></td><td class="code"><div class="highlight"><pre><span class="c">/*</span>
<span class="c">    Large less</span>
<span class="c">        programed by M.Suzuki</span>
<span class="c">        ver 0.1     2008/8/4</span>

<span class="c">    key binding</span>
<span class="c">        n,j,^n      scroll up</span>
<span class="c">        p,k,^p      scroll down</span>
<span class="c">        /           i-search</span>
<span class="c">        ESC         i-search cancel</span>
<span class="c">        TAB         next search(i-search only)</span>
<span class="c">        q           quit</span>
<span class="c"> */</span>

<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &lt;curses.h&gt;</span>
<span class="cp">#include &lt;pthread.h&gt;</span>

<span class="cp">#define LINE_MAX    256     </span><span class="c">/* file text width max  */</span><span class="cp"></span>

<span class="cp">#define False   0</span>
<span class="cp">#define True    (!False)</span>

<span class="k">static</span> <span class="n">pthread_mutex_t</span> <span class="n">file_mutex</span><span class="p">;</span>
<span class="k">static</span> <span class="n">FILE</span><span class="o">*</span> <span class="n">fileFp</span><span class="p">;</span>
<span class="k">static</span> <span class="n">FILE</span><span class="o">*</span> <span class="n">seekFp</span><span class="p">;</span>
<span class="k">static</span> <span class="n">fpos_t</span> <span class="n">lineTop</span><span class="p">;</span>
<span class="k">static</span> <span class="n">fpos_t</span> <span class="n">lineMax</span><span class="p">;</span>
<span class="k">static</span> <span class="n">bool</span> <span class="n">readMaxFlag</span><span class="p">;</span>
<span class="k">static</span> <span class="n">bool</span> <span class="n">abortFlag</span><span class="p">;</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">ScanWait</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">pthread_mutex_lock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="k">while</span><span class="p">(</span> <span class="n">lineTop</span> <span class="o">+</span> <span class="n">LINES</span> <span class="o">&gt;=</span> <span class="n">lineMax</span> <span class="p">){</span>
        <span class="k">static</span> <span class="k">struct</span> <span class="n">timespec</span> <span class="n">time10ms</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="o">*</span><span class="mi">1000</span><span class="o">*</span><span class="mi">1000</span><span class="p">};</span>
        <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
        <span class="n">nanosleep</span><span class="p">(</span><span class="o">&amp;</span><span class="n">time10ms</span><span class="p">,</span><span class="nb">NULL</span><span class="p">);</span>
        <span class="n">pthread_mutex_lock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">readMaxFlag</span> <span class="p">){</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>   <span class="c">/* end of while */</span>
    <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">static</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">ReadLine</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">buff</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">char</span><span class="o">*</span> <span class="n">text</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>

    <span class="n">ScanWait</span><span class="p">();</span>
    <span class="n">pthread_mutex_lock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">lineTop</span> <span class="o">+</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">&lt;</span> <span class="n">lineMax</span> <span class="p">){</span>
        <span class="n">fpos_t</span> <span class="n">offset</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">fpos_t</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">lineTop</span><span class="o">+</span><span class="n">y</span><span class="p">);</span>

        <span class="n">fsetpos</span><span class="p">(</span><span class="n">seekFp</span><span class="p">,</span><span class="o">&amp;</span><span class="n">offset</span><span class="p">);</span>
        <span class="n">fread</span><span class="p">(</span><span class="o">&amp;</span><span class="n">offset</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">fpos_t</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="n">seekFp</span><span class="p">);</span>
        <span class="n">fsetpos</span><span class="p">(</span><span class="n">fileFp</span><span class="p">,</span><span class="o">&amp;</span><span class="n">offset</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">fgets</span><span class="p">(</span><span class="n">buff</span><span class="p">,</span><span class="n">LINE_MAX</span><span class="p">,</span><span class="n">fileFp</span><span class="p">)</span> <span class="p">){</span>
            <span class="n">text</span> <span class="o">=</span> <span class="n">buff</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">text</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">DrawLine</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">char</span><span class="o">*</span> <span class="n">text</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">buff</span><span class="p">[</span><span class="n">LINE_MAX</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>

    <span class="n">text</span> <span class="o">=</span> <span class="n">ReadLine</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">buff</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">text</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="p">){</span>
        <span class="n">text</span> <span class="o">=</span> <span class="s">&quot;~&quot;</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">mvinsstr</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">text</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">ViewAll</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">y</span><span class="p">;</span>

    <span class="n">erase</span><span class="p">();</span>
    <span class="k">for</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">y</span><span class="o">&lt;</span><span class="n">LINES</span><span class="p">;</span><span class="n">y</span><span class="o">++</span><span class="p">){</span>
        <span class="n">DrawLine</span><span class="p">(</span><span class="n">y</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">RollUp</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">ScanWait</span><span class="p">();</span>
    <span class="n">pthread_mutex_lock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">lineTop</span> <span class="o">&gt;=</span> <span class="n">lineMax</span> <span class="p">){</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">readMaxFlag</span> <span class="p">){</span>
            <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">lineTop</span><span class="o">++</span><span class="p">;</span>
    <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="n">move</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">deleteln</span><span class="p">();</span>
    <span class="n">move</span><span class="p">(</span><span class="n">LINES</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">DrawLine</span><span class="p">(</span><span class="n">LINES</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
    <span class="n">refresh</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">RollDown</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">pthread_mutex_lock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">lineTop</span> <span class="o">&lt;=</span> <span class="mi">0</span> <span class="p">){</span>
        <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">lineTop</span><span class="o">--</span><span class="p">;</span>
    <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="n">move</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">insdelln</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
    <span class="n">DrawLine</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">refresh</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">Search</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="n">search</span><span class="p">[</span><span class="n">LINE_MAX</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span>
        <span class="kt">int</span> <span class="n">key</span> <span class="o">=</span> <span class="n">getch</span><span class="p">();</span>
        <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">key</span> <span class="o">==</span> <span class="mh">0x1b</span> <span class="p">){</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">key</span> <span class="o">==</span> <span class="sc">&#39;\t&#39;</span> <span class="p">){</span>
            <span class="n">y</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span> <span class="n">len</span> <span class="o">&lt;</span> <span class="n">LINE_MAX</span> <span class="p">){</span>
                <span class="n">search</span><span class="p">[</span><span class="n">len</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">key</span><span class="p">;</span>
                <span class="n">search</span><span class="p">[</span><span class="n">len</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span>
            <span class="kt">char</span> <span class="n">buff</span><span class="p">[</span><span class="n">LINE_MAX</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span> <span class="n">ReadLine</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">buff</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="p">){</span>
                <span class="k">return</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span> <span class="n">strstr</span><span class="p">(</span><span class="n">buff</span><span class="p">,</span><span class="n">search</span><span class="p">)</span> <span class="p">){</span>
                <span class="n">pthread_mutex_lock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
                <span class="n">lineTop</span> <span class="o">+=</span> <span class="n">y</span><span class="p">;</span>
                <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
                <span class="n">ViewAll</span><span class="p">();</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">y</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>   <span class="c">/* end of while */</span>
    <span class="p">}</span>   <span class="c">/* end of while */</span>
<span class="p">}</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">KeyLoop</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">ViewAll</span><span class="p">();</span>
    <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span>
        <span class="kt">int</span> <span class="n">key</span> <span class="o">=</span> <span class="n">getch</span><span class="p">();</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">key</span> <span class="o">==</span> <span class="sc">&#39;q&#39;</span> <span class="p">){</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">switch</span><span class="p">(</span><span class="n">key</span><span class="p">){</span>
          <span class="k">case</span> <span class="sc">&#39;N&#39;</span><span class="o">-</span><span class="sc">&#39;@&#39;</span><span class="o">:</span>
          <span class="k">case</span> <span class="sc">&#39;n&#39;</span><span class="o">:</span>
          <span class="k">case</span> <span class="sc">&#39;j&#39;</span><span class="o">:</span>
            <span class="n">RollUp</span><span class="p">();</span>
            <span class="k">break</span><span class="p">;</span>
          <span class="k">case</span> <span class="sc">&#39;P&#39;</span><span class="o">-</span><span class="sc">&#39;@&#39;</span><span class="o">:</span>
          <span class="k">case</span> <span class="sc">&#39;p&#39;</span><span class="o">:</span>
          <span class="k">case</span> <span class="sc">&#39;k&#39;</span><span class="o">:</span>
            <span class="n">RollDown</span><span class="p">();</span>
            <span class="k">break</span><span class="p">;</span>
          <span class="k">case</span> <span class="sc">&#39;/&#39;</span><span class="o">:</span>
            <span class="n">Search</span><span class="p">();</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>   <span class="c">/* end of switch */</span>
    <span class="p">}</span>   <span class="c">/* end of while */</span>
<span class="p">}</span>

<span class="kt">void</span><span class="o">*</span> <span class="nf">ScanThread</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">arg</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">fpos_t</span> <span class="n">filePos</span><span class="p">;</span>

    <span class="n">fgetpos</span><span class="p">(</span><span class="n">fileFp</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">filePos</span><span class="p">);</span>
    <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span>
        <span class="kt">char</span> <span class="n">buff</span><span class="p">[</span><span class="n">LINE_MAX</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
        <span class="n">fpos_t</span> <span class="n">fpos</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">fpos_t</span><span class="p">)</span><span class="o">*</span><span class="n">lineMax</span><span class="p">;</span>

        <span class="n">pthread_mutex_lock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
        <span class="n">fsetpos</span><span class="p">(</span><span class="n">seekFp</span><span class="p">,</span><span class="o">&amp;</span><span class="n">fpos</span><span class="p">);</span>
        <span class="n">fwrite</span><span class="p">(</span><span class="o">&amp;</span><span class="n">filePos</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">fpos_t</span><span class="p">),</span><span class="mi">1</span><span class="p">,</span><span class="n">seekFp</span><span class="p">);</span>
        <span class="n">lineMax</span><span class="o">++</span><span class="p">;</span>
        <span class="n">fsetpos</span><span class="p">(</span><span class="n">fileFp</span><span class="p">,</span><span class="o">&amp;</span><span class="n">filePos</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">fgets</span><span class="p">(</span><span class="n">buff</span><span class="p">,</span><span class="n">LINE_MAX</span><span class="p">,</span><span class="n">fileFp</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="p">){</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">fgetpos</span><span class="p">(</span><span class="n">fileFp</span><span class="p">,</span><span class="o">&amp;</span><span class="n">filePos</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">abortFlag</span> <span class="p">){</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="p">}</span>   <span class="c">/* end of while */</span>
    <span class="n">readMaxFlag</span> <span class="o">=</span> <span class="n">True</span><span class="p">;</span>
    <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">MainLoop</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">pthread_t</span> <span class="n">scanThread_id</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">tmpName</span><span class="p">[</span><span class="n">L_tmpnam</span><span class="p">];</span>

    <span class="n">tmpnam</span><span class="p">(</span><span class="n">tmpName</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">seekFp</span><span class="o">=</span><span class="n">fopen</span><span class="p">(</span><span class="n">tmpName</span><span class="p">,</span><span class="s">&quot;w+b&quot;</span><span class="p">))</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="p">){</span>
        <span class="n">perror</span><span class="p">(</span><span class="n">tmpName</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">pthread_mutex_init</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">,</span><span class="nb">NULL</span><span class="p">);</span>

    <span class="n">lineTop</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">lineMax</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">pthread_create</span><span class="p">(</span><span class="o">&amp;</span><span class="n">scanThread_id</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">ScanThread</span><span class="p">,</span><span class="nb">NULL</span><span class="p">)</span><span class="o">!=</span><span class="mi">0</span><span class="p">){</span>
        <span class="n">perror</span><span class="p">(</span><span class="s">&quot;ScanThread&quot;</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">initscr</span><span class="p">();</span>
    <span class="n">noecho</span><span class="p">();</span>
    <span class="n">raw</span><span class="p">();</span>
    <span class="n">cbreak</span><span class="p">();</span>

    <span class="n">KeyLoop</span><span class="p">();</span>

    <span class="n">nocbreak</span><span class="p">();</span>
    <span class="n">noraw</span><span class="p">();</span>
    <span class="n">echo</span><span class="p">();</span>
    <span class="n">endwin</span><span class="p">();</span>

    <span class="n">pthread_mutex_lock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="n">abortFlag</span> <span class="o">=</span> <span class="n">True</span><span class="p">;</span>
    <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">file_mutex</span><span class="p">);</span>
    <span class="n">pthread_join</span><span class="p">(</span><span class="n">scanThread_id</span><span class="p">,</span><span class="nb">NULL</span><span class="p">);</span>

    <span class="n">fclose</span><span class="p">(</span><span class="n">seekFp</span><span class="p">);</span>
    <span class="n">remove</span><span class="p">(</span><span class="n">tmpName</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="kt">char</span><span class="o">*</span> <span class="n">fname</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>

    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">argc</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="kt">char</span><span class="o">*</span> <span class="n">p</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">p</span> <span class="o">==</span> <span class="sc">&#39;-&#39;</span> <span class="p">){</span>
            <span class="c">/* option   */</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="n">fname</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>   <span class="c">/* end of for */</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">fname</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="p">){</span>
        <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">fileFp</span><span class="o">=</span><span class="n">fopen</span><span class="p">(</span><span class="n">fname</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">))</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="p">){</span>
            <span class="n">perror</span><span class="p">(</span><span class="n">fname</span><span class="p">);</span>
            <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">MainLoop</span><span class="p">();</span>
        <span class="n">fclose</span><span class="p">(</span><span class="n">fileFp</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/6984/addtag/" class="addtag" id="addtag_6984">タグ</a>:
	
    
    <a href="/web/20090514041653/http://ja.doukaku.org/tag/curses/">curses</a>
    
    <a href="/web/20090514041653/http://ja.doukaku.org/tag/pthread/">pthread</a>
    
	&nbsp;

	
      [<a href="/web/20090514041653/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090514041653/http://ja.doukaku.org/comment/6984/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090514041653/http://ja.doukaku.org/comment/6984/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6984"
  >-</span><span
  class="button yellow"
  id="rating_z_6984"
  >0</span><span 
  class="button green"
  id="rating_p_6984"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090514041653/http://ja.doukaku.org/194/reply_to/6984/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7624">
  <p class="banner"><a href="/web/20090514041653/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090514041653/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090514041653/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/7624/">#7624</a>(<script language="JavaScript">print_time(new Date("2008/09/10 20:41 GMT"));</script><noscript>2008/09/10 20:41 GMT</noscript>)
	
	
	
	[<a href="/web/20090514041653/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>検索とスクロールだけ実装</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">sys</span>
<span class="k">import</span> <span class="nn">wx</span>
<span class="k">import</span> <span class="nn">wx.stc</span>

<span class="k">class</span> <span class="nc">LessSTC</span><span class="p">(</span><span class="n">wx</span><span class="o">.</span><span class="n">stc</span><span class="o">.</span><span class="n">StyledTextCtrl</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">,</span> <span class="n">ID</span><span class="p">,</span>
                 <span class="n">pos</span><span class="o">=</span><span class="n">wx</span><span class="o">.</span><span class="n">DefaultPosition</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">wx</span><span class="o">.</span><span class="n">DefaultSize</span><span class="p">,</span>
                 <span class="n">style</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
        <span class="n">wx</span><span class="o">.</span><span class="n">stc</span><span class="o">.</span><span class="n">StyledTextCtrl</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">,</span> <span class="n">ID</span><span class="p">,</span> <span class="n">pos</span><span class="p">,</span> <span class="n">size</span><span class="p">,</span> <span class="n">style</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">Bind</span><span class="p">(</span><span class="n">wx</span><span class="o">.</span><span class="n">EVT_CHAR</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">OnChar</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">Bind</span><span class="p">(</span><span class="n">wx</span><span class="o">.</span><span class="n">EVT_KEY_DOWN</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">OnKeyDown</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">find</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">sb</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">GetStatusBar</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">OnChar</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
        <span class="n">key_code</span> <span class="o">=</span> <span class="nb">chr</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">GetKeyCode</span><span class="p">())</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">find</span><span class="p">:</span>
            <span class="n">f</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">sb</span><span class="o">.</span><span class="n">GetStatusText</span><span class="p">()</span> <span class="o">+</span> <span class="n">key_code</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">sb</span><span class="o">.</span><span class="n">SetStatusText</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">key_code</span> <span class="ow">in</span> <span class="s">&#39;/?&#39;</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">sb</span><span class="o">.</span><span class="n">SetStatusText</span><span class="p">(</span><span class="n">key_code</span><span class="p">)</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">find</span> <span class="o">=</span> <span class="n">key_code</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">event</span><span class="o">.</span><span class="n">Skip</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">OnKeyDown</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">find</span><span class="p">:</span>
            <span class="n">event</span><span class="o">.</span><span class="n">Skip</span><span class="p">()</span>
            <span class="k">return</span>
        <span class="n">key_code</span> <span class="o">=</span> <span class="n">event</span><span class="o">.</span><span class="n">GetKeyCode</span><span class="p">()</span>
        <span class="k">if</span> <span class="n">key_code</span> <span class="o">==</span> <span class="n">wx</span><span class="o">.</span><span class="n">WXK_BACK</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">sb</span><span class="o">.</span><span class="n">SetStatusText</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sb</span><span class="o">.</span><span class="n">GetStatusText</span><span class="p">()[:</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
        <span class="k">elif</span> <span class="n">key_code</span> <span class="o">==</span> <span class="n">wx</span><span class="o">.</span><span class="n">WXK_SPACE</span><span class="p">:</span>
            <span class="n">f</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">sb</span><span class="o">.</span><span class="n">GetStatusText</span><span class="p">()</span> <span class="o">+</span> <span class="s">&#39; &#39;</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">sb</span><span class="o">.</span><span class="n">SetStatusText</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">key_code</span> <span class="o">==</span> <span class="n">wx</span><span class="o">.</span><span class="n">WXK_ESCAPE</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">find</span> <span class="o">=</span> <span class="bp">None</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">sb</span><span class="o">.</span><span class="n">SetStatusText</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">key_code</span> <span class="o">==</span> <span class="n">wx</span><span class="o">.</span><span class="n">WXK_RETURN</span><span class="p">:</span>
            <span class="n">word</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">sb</span><span class="o">.</span><span class="n">GetStatusText</span><span class="p">()</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">SearchAnchor</span><span class="p">()</span>
            <span class="k">if</span> <span class="n">word</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;/&#39;</span><span class="p">:</span>
                <span class="bp">self</span><span class="o">.</span><span class="n">SearchNext</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">word</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span> 
            <span class="k">elif</span> <span class="n">word</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;?&#39;</span><span class="p">:</span>
                <span class="bp">self</span><span class="o">.</span><span class="n">SearchPrev</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">word</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">find</span> <span class="o">=</span> <span class="bp">None</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">sb</span><span class="o">.</span><span class="n">SetStatusText</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">key_code</span> <span class="o">&lt;</span> <span class="n">wx</span><span class="o">.</span><span class="n">WXK_START</span><span class="p">:</span>
            <span class="n">event</span><span class="o">.</span><span class="n">Skip</span><span class="p">()</span>

<span class="k">class</span> <span class="nc">LessFrame</span><span class="p">(</span><span class="n">wx</span><span class="o">.</span><span class="n">Frame</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">title</span><span class="p">,</span> <span class="n">pos</span><span class="o">=</span><span class="n">wx</span><span class="o">.</span><span class="n">DefaultPosition</span><span class="p">,</span>
                 <span class="n">size</span><span class="o">=</span><span class="n">wx</span><span class="o">.</span><span class="n">DefaultSize</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="n">wx</span><span class="o">.</span><span class="n">DEFAULT_FRAME_STYLE</span><span class="p">):</span>
        <span class="n">wx</span><span class="o">.</span><span class="n">Frame</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">title</span><span class="p">,</span> <span class="n">pos</span><span class="o">=</span><span class="n">pos</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">size</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="n">style</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">SetStatusBar</span><span class="p">(</span><span class="n">wx</span><span class="o">.</span><span class="n">StatusBar</span><span class="p">(</span><span class="bp">self</span><span class="p">))</span>
        <span class="n">less</span> <span class="o">=</span> <span class="n">LessSTC</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">less</span><span class="o">.</span><span class="n">SetText</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
        <span class="n">less</span><span class="o">.</span><span class="n">SetReadOnly</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Less</span><span class="p">(</span><span class="n">wx</span><span class="o">.</span><span class="n">App</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">OnInit</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">frame</span> <span class="o">=</span> <span class="n">LessFrame</span><span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="s">u&#39;less&#39;</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">SetTopWindow</span><span class="p">(</span><span class="n">frame</span><span class="p">)</span>
        <span class="n">frame</span><span class="o">.</span><span class="n">Show</span><span class="p">()</span>
        <span class="k">return</span> <span class="bp">True</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
        <span class="n">app</span> <span class="o">=</span> <span class="n">Less</span><span class="p">()</span>
        <span class="n">app</span><span class="o">.</span><span class="n">MainLoop</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/7624/addtag/" class="addtag" id="addtag_7624">タグ</a>:
	
    
    <a href="/web/20090514041653/http://ja.doukaku.org/tag/wxPython/">wxPython</a>
    
	&nbsp;

	
      [<a href="/web/20090514041653/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090514041653/http://ja.doukaku.org/comment/7624/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090514041653/http://ja.doukaku.org/comment/7624/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7624"
  >-</span><span
  class="button yellow"
  id="rating_z_7624"
  >0</span><span 
  class="button green"
  id="rating_p_7624"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090514041653/http://ja.doukaku.org/194/reply_to/7624/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7680">
  <p class="banner"><a href="/web/20090514041653/http://ja.doukaku.org/user/771/" target="_top">M.Suzuki</a>

	
	&nbsp;
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/7680/">#7680</a>(<script language="JavaScript">print_time(new Date("2008/09/19 04:54 GMT"));</script><noscript>2008/09/19 04:54 GMT</noscript>)
	
	
	
	[<a href="/web/20090514041653/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>IOまみれですが、なんとか実装しました。
ライブラリを使えば楽勝と思いきや、必要な機能が無かったり、
画面サイズを超えるとエラーになったりと、意外と手間取り、
検索機能を入れる前に、力尽きてしまいました。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154</pre></td><td class="code"><div class="highlight"><pre><span class="cm">{-# LANGUAGE ForeignFunctionInterface #-}</span>

<span class="c1">--</span>
<span class="c1">--  ghc --make hless.hs -lncurses</span>
<span class="c1">--</span>
<span class="c1">--  need : hscurses-1.3</span>

<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">IO</span>
<span class="kr">import</span> <span class="n">Control</span><span class="o">.</span><span class="n">Exception</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Environment</span>
<span class="kr">import</span> <span class="nv">qualified</span> <span class="n">UI</span><span class="o">.</span><span class="n">HSCurses</span><span class="o">.</span><span class="n">Curses</span> <span class="nv">as</span> <span class="n">Curses</span>
<span class="kr">import</span> <span class="nv">qualified</span> <span class="n">UI</span><span class="o">.</span><span class="n">HSCurses</span><span class="o">.</span><span class="n">CursesHelper</span> <span class="nv">as</span> <span class="n">CursesH</span>

<span class="kr">import</span> <span class="n">Foreign</span>
<span class="kr">import</span> <span class="n">Foreign</span><span class="o">.</span><span class="n">C</span><span class="o">.</span><span class="n">Types</span>

<span class="c1">--</span>

<span class="nv">foreign</span> <span class="kr">import</span> <span class="nv">ccall</span> <span class="nv">unsafe</span> <span class="s">&quot;ncurses.h winsdelln&quot;</span>
    <span class="nv">winsdelln</span> <span class="o">::</span> <span class="n">Curses</span><span class="o">.</span><span class="n">Window</span> <span class="o">-&gt;</span> <span class="n">CInt</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="n">CInt</span>

<span class="nv">deleteln</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="n">CInt</span>
<span class="nv">deleteln</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">winsdelln</span> <span class="n">Curses</span><span class="o">.</span><span class="nv">stdScr</span> <span class="o">$</span> <span class="nv">fromIntegral</span> <span class="p">(</span><span class="o">-</span><span class="nv">n</span><span class="p">)</span>

<span class="nv">insertln</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="n">CInt</span>
<span class="nv">insertln</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">winsdelln</span> <span class="n">Curses</span><span class="o">.</span><span class="nv">stdScr</span> <span class="o">$</span> <span class="nv">fromIntegral</span> <span class="nv">n</span>

<span class="c1">--</span>
<span class="kr">data</span> <span class="n">File</span> <span class="o">=</span> <span class="n">File</span> <span class="p">{</span>
    <span class="nv">fhandle</span> <span class="o">::</span>  <span class="n">Handle</span><span class="p">,</span>
    <span class="nv">list</span>    <span class="o">::</span>  <span class="p">[</span><span class="n">Integer</span><span class="p">]</span>
<span class="p">}</span> <span class="kr">deriving</span> <span class="p">(</span><span class="n">Show</span><span class="p">)</span>

<span class="kr">data</span> <span class="n">Info</span> <span class="o">=</span> <span class="n">Info</span> <span class="p">{</span>
    <span class="nv">file</span>    <span class="o">::</span>  <span class="n">File</span><span class="p">,</span>
    <span class="nv">top</span>     <span class="o">::</span>  <span class="n">Int</span>
<span class="p">}</span> <span class="kr">deriving</span> <span class="p">(</span><span class="n">Show</span><span class="p">)</span>

<span class="c1">--</span>
<span class="nv">scanFile</span> <span class="o">::</span> <span class="n">Handle</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">[</span><span class="n">Integer</span><span class="p">]</span>
<span class="nv">scanFile</span> <span class="nv">fp</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">eof</span> <span class="o">&lt;-</span> <span class="nv">hIsEOF</span> <span class="nv">fp</span>
    <span class="kr">if</span> <span class="nv">eof</span>
        <span class="kr">then</span> <span class="nv">return</span> <span class="p">[]</span>
        <span class="kr">else</span> <span class="kr">do</span>
            <span class="nv">p</span> <span class="o">&lt;-</span> <span class="nv">hTell</span> <span class="nv">fp</span>
            <span class="nv">l</span> <span class="o">&lt;-</span> <span class="nv">hGetLine</span> <span class="nv">fp</span>
            <span class="nv">flist</span> <span class="o">&lt;-</span> <span class="nv">scanFile</span> <span class="nv">fp</span>
            <span class="nv">return</span> <span class="p">(</span><span class="nv">p</span> <span class="o">:</span> <span class="nv">flist</span><span class="p">)</span>

<span class="nv">showLine</span> <span class="o">::</span> <span class="n">File</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="n">String</span>
<span class="nv">showLine</span> <span class="nv">f</span> <span class="nv">n</span>
    <span class="o">|</span> <span class="nv">n</span> <span class="o">&gt;=</span> <span class="p">(</span><span class="nv">length</span> <span class="o">$</span> <span class="nv">list</span> <span class="nv">f</span><span class="p">)</span>    <span class="o">=</span> <span class="kr">do</span> <span class="nv">return</span> <span class="s">&quot;~&quot;</span>
    <span class="o">|</span> <span class="nv">otherwise</span>             <span class="o">=</span> <span class="kr">do</span>
        <span class="nv">hSeek</span> <span class="p">(</span><span class="nv">fhandle</span> <span class="nv">f</span><span class="p">)</span> <span class="n">AbsoluteSeek</span> <span class="o">$</span> <span class="p">(</span><span class="nv">list</span> <span class="nv">f</span><span class="p">)</span><span class="o">!!</span><span class="nv">n</span>
        <span class="nv">line</span> <span class="o">&lt;-</span> <span class="nv">hGetLine</span> <span class="o">$</span> <span class="nv">fhandle</span> <span class="nv">f</span>
        <span class="nv">return</span> <span class="nv">line</span>
<span class="c1">--</span>

<span class="nv">getW</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="nv">w</span><span class="p">)</span> <span class="o">&lt;-</span> <span class="n">Curses</span><span class="o">.</span><span class="nv">scrSize</span>
    <span class="nv">return</span> <span class="nv">w</span>

<span class="nv">getH</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="p">(</span><span class="nv">h</span><span class="p">,</span><span class="kr">_</span><span class="p">)</span> <span class="o">&lt;-</span> <span class="n">Curses</span><span class="o">.</span><span class="nv">scrSize</span>
    <span class="nv">return</span> <span class="nv">h</span>

<span class="nv">drawLine</span> <span class="o">::</span> <span class="n">Info</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">drawLine</span> <span class="nv">info</span> <span class="nv">n</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">str</span> <span class="o">&lt;-</span> <span class="nv">showLine</span> <span class="p">(</span><span class="nv">file</span> <span class="nv">info</span><span class="p">)</span> <span class="p">(</span><span class="nv">n</span> <span class="o">+</span> <span class="p">(</span><span class="nv">top</span> <span class="nv">info</span><span class="p">))</span>
    <span class="nv">ss</span> <span class="o">&lt;-</span> <span class="nv">trim</span> <span class="nv">str</span>
    <span class="n">Curses</span><span class="o">.</span><span class="nv">mvWAddStr</span> <span class="n">Curses</span><span class="o">.</span><span class="nv">stdScr</span> <span class="nv">n</span> <span class="mi">0</span> <span class="nv">ss</span>
    <span class="kr">where</span>
        <span class="nv">trim</span> <span class="nv">s</span> <span class="o">=</span> <span class="kr">do</span>
            <span class="nv">w</span> <span class="o">&lt;-</span> <span class="nv">getW</span>
            <span class="kr">if</span> <span class="p">(</span><span class="nv">length</span> <span class="nv">s</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="nv">w</span>
                <span class="kr">then</span>
                    <span class="nv">return</span> <span class="p">((</span><span class="nv">take</span> <span class="p">(</span><span class="nv">w</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="nv">s</span><span class="p">)</span> <span class="o">++</span> <span class="s">&quot;$&quot;</span><span class="p">)</span>  <span class="c1">-- (x_x)</span>
                <span class="kr">else</span>
                    <span class="nv">return</span> <span class="nv">s</span>

<span class="nv">redraw</span> <span class="o">::</span> <span class="n">Info</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">redraw</span> <span class="nv">info</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">h</span> <span class="o">&lt;-</span> <span class="nv">getH</span>
    <span class="nv">redraw&#39;</span> <span class="nv">h</span>
    <span class="n">Curses</span><span class="o">.</span><span class="nv">refresh</span>
    <span class="kr">where</span>
        <span class="nv">redraw&#39;</span> <span class="mi">0</span> <span class="o">=</span> <span class="nv">return</span> <span class="p">()</span>
        <span class="nv">redraw&#39;</span> <span class="nv">n</span> <span class="o">=</span> <span class="kr">do</span>
            <span class="nv">m</span> <span class="o">&lt;-</span> <span class="nv">getH</span>
            <span class="nv">drawLine</span> <span class="nv">info</span> <span class="p">(</span><span class="nv">m</span><span class="o">-</span><span class="nv">n</span><span class="p">)</span>
            <span class="nv">redraw&#39;</span> <span class="p">(</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

<span class="c1">--</span>

<span class="nv">moveDown</span> <span class="o">::</span> <span class="n">Info</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="n">Info</span>
<span class="nv">moveDown</span> <span class="nv">info</span>
    <span class="o">|</span> <span class="p">(</span><span class="nv">top</span> <span class="nv">info</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="nv">len</span> <span class="o">=</span>   <span class="nv">return</span> <span class="nv">info</span>
    <span class="o">|</span> <span class="nv">otherwise</span>         <span class="o">=</span>   <span class="nv">scrollUp</span>
    <span class="kr">where</span>
        <span class="nv">len</span> <span class="o">=</span> <span class="nv">length</span> <span class="o">$</span> <span class="nv">list</span> <span class="o">$</span> <span class="nv">file</span> <span class="nv">info</span>
        <span class="nv">next</span> <span class="o">=</span> <span class="nv">info</span> <span class="p">{</span> <span class="nv">top</span> <span class="o">=</span> <span class="p">(</span><span class="nv">top</span> <span class="nv">info</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">}</span>
        <span class="nv">scrollUp</span> <span class="o">=</span> <span class="kr">do</span>
            <span class="nv">h</span> <span class="o">&lt;-</span> <span class="nv">getH</span>
            <span class="n">CursesH</span><span class="o">.</span><span class="nv">gotoTop</span>
            <span class="nv">deleteln</span> <span class="mi">1</span>
            <span class="n">Curses</span><span class="o">.</span><span class="nv">move</span> <span class="p">(</span><span class="nv">h</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="mi">0</span>
            <span class="nv">drawLine</span> <span class="nv">next</span> <span class="p">(</span><span class="nv">h</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">Curses</span><span class="o">.</span><span class="nv">refresh</span>
            <span class="nv">return</span> <span class="nv">next</span>

<span class="nv">moveUp</span> <span class="o">::</span> <span class="n">Info</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="n">Info</span>
<span class="nv">moveUp</span> <span class="nv">info</span>
    <span class="o">|</span> <span class="p">(</span><span class="nv">top</span> <span class="nv">info</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span>   <span class="o">=</span>   <span class="nv">return</span> <span class="nv">info</span>
    <span class="o">|</span> <span class="nv">otherwise</span>         <span class="o">=</span>   <span class="nv">scrollDown</span>
    <span class="kr">where</span>
        <span class="nv">next</span> <span class="o">=</span> <span class="nv">info</span> <span class="p">{</span> <span class="nv">top</span> <span class="o">=</span> <span class="p">(</span><span class="nv">top</span> <span class="nv">info</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">}</span>
        <span class="nv">scrollDown</span> <span class="o">=</span> <span class="kr">do</span>
            <span class="n">CursesH</span><span class="o">.</span><span class="nv">gotoTop</span>
            <span class="nv">insertln</span> <span class="mi">1</span>
            <span class="nv">drawLine</span> <span class="nv">next</span> <span class="mi">0</span>
            <span class="n">Curses</span><span class="o">.</span><span class="nv">refresh</span>
            <span class="nv">return</span> <span class="nv">next</span>

<span class="nv">eventLoop</span> <span class="o">::</span> <span class="n">Info</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="n">Info</span>
<span class="nv">eventLoop</span> <span class="nv">info</span> <span class="o">=</span>
    <span class="kr">do</span>
        <span class="nv">key</span> <span class="o">&lt;-</span> <span class="n">Curses</span><span class="o">.</span><span class="nv">getCh</span>
        <span class="kr">case</span> <span class="nv">key</span> <span class="kr">of</span>
            <span class="n">Curses</span><span class="o">.</span><span class="n">KeyChar</span> <span class="sc">&#39;l&#39;</span> <span class="o">-&gt;</span> <span class="nv">process</span> <span class="o">$</span> <span class="nv">return</span> <span class="nv">info</span>
            <span class="n">Curses</span><span class="o">.</span><span class="n">KeyChar</span> <span class="sc">&#39;q&#39;</span> <span class="o">-&gt;</span> <span class="nv">return</span> <span class="nv">info</span>
            <span class="n">Curses</span><span class="o">.</span><span class="n">KeyChar</span> <span class="sc">&#39;n&#39;</span> <span class="o">-&gt;</span> <span class="nv">process</span> <span class="o">$</span> <span class="nv">moveDown</span> <span class="nv">info</span>
            <span class="n">Curses</span><span class="o">.</span><span class="n">KeyChar</span> <span class="sc">&#39;p&#39;</span> <span class="o">-&gt;</span> <span class="nv">process</span> <span class="o">$</span> <span class="nv">moveUp</span> <span class="nv">info</span>
            <span class="n">Curses</span><span class="o">.</span><span class="n">KeyUp</span>       <span class="o">-&gt;</span> <span class="nv">process</span> <span class="o">$</span> <span class="nv">moveUp</span> <span class="nv">info</span>
            <span class="n">Curses</span><span class="o">.</span><span class="n">KeyDown</span>     <span class="o">-&gt;</span> <span class="nv">process</span> <span class="o">$</span> <span class="nv">moveDown</span> <span class="nv">info</span>
            <span class="kr">_</span> <span class="o">-&gt;</span> <span class="nv">eventLoop</span> <span class="nv">info</span>
        <span class="kr">where</span>
            <span class="nv">process</span> <span class="nv">f</span> <span class="o">=</span> <span class="kr">do</span>
                <span class="nv">r</span> <span class="o">&lt;-</span> <span class="nv">f</span>
                <span class="nv">eventLoop</span> <span class="nv">r</span>

<span class="c1">--</span>

<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="p">(</span><span class="nv">fileName</span><span class="o">:</span><span class="kr">_</span><span class="p">)</span> <span class="o">&lt;-</span> <span class="nv">getArgs</span>
    <span class="nv">fp</span> <span class="o">&lt;-</span> <span class="nv">openFile</span> <span class="nv">fileName</span> <span class="n">ReadMode</span>
    <span class="nv">flist</span> <span class="o">&lt;-</span> <span class="nv">scanFile</span> <span class="nv">fp</span>
    <span class="kr">let</span> <span class="nv">info</span> <span class="o">=</span> <span class="n">Info</span> <span class="p">{</span> <span class="nv">file</span> <span class="o">=</span> <span class="n">File</span> <span class="p">{</span> <span class="nv">fhandle</span> <span class="o">=</span> <span class="nv">fp</span><span class="p">,</span> <span class="nv">list</span> <span class="o">=</span> <span class="nv">flist</span><span class="p">},</span> <span class="nv">top</span> <span class="o">=</span> <span class="mi">0</span><span class="p">}</span>
    <span class="nv">runMain</span> <span class="nv">info</span> <span class="p">`</span><span class="nv">finally</span><span class="p">`</span> <span class="n">CursesH</span><span class="o">.</span><span class="nv">end</span>
    <span class="kr">where</span>
        <span class="nv">runMain</span> <span class="nv">info</span> <span class="o">=</span> <span class="kr">do</span>
            <span class="n">CursesH</span><span class="o">.</span><span class="nv">start</span>
            <span class="nv">redraw</span> <span class="nv">info</span>
            <span class="nv">eventLoop</span> <span class="nv">info</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090514041653/http://ja.doukaku.org/comment/7680/addtag/" class="addtag" id="addtag_7680">タグ</a>:
	
    
    <a href="/web/20090514041653/http://ja.doukaku.org/tag/hscurses-1.3/">hscurses-1.3</a>
    
	&nbsp;

	
      [<a href="/web/20090514041653/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090514041653/http://ja.doukaku.org/comment/7680/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090514041653/http://ja.doukaku.org/comment/7680/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7680"
  >-</span><span
  class="button yellow"
  id="rating_z_7680"
  >0</span><span 
  class="button green"
  id="rating_p_7680"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090514041653/http://ja.doukaku.org/194/reply_to/7680/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20090514041653if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20090514041653/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20090514041653/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20090514041653/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20090514041653/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20090514041653/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20090514041653/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20090514041653/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20090514041653/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090514041653/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090514041653/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20090514041653im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20090514041653/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20090514041653/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20090514041653/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20090514041653/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20090514041653/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20090514041653/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20090514041653/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20090514041653/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20090514041653im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20090514041653/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20090514041653/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20090514041653/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20090514041653js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 4:16:53 May 14, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:38:50 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
