
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
ストレンジアトラクタの描画
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20090612205614cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20090612205614cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20090612205614cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20090612205614/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20090612205614/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20090612205614js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20090612205614js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20090612205614js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20090612205614js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app10.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/251\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "12";
var displayMonth = "Jun";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/251/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090612205614" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       May
                       
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 20:56:14 Jun 12, 2009">JUN</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jul
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_prv_off.png" alt="Previous capture" width="14" height="16" border="0" />
                       
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 20:56:14 Jun 12, 2009">12</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2008
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 20:56:14 Jun 12, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20090612205614*/http://ja.doukaku.org/251/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>1 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">12 Jun 09 - 12 Jun 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:5:000001000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20090612205614/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20090612205614im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20090612205614/http://ja.doukaku.org/251/">ストレンジアトラクタの描画</a>
</h2>

    





<div class="comment" id="comment9003">
  <p class="banner"><a href="/web/20090612205614/http://ja.doukaku.org/user/828/" target="_top">ポケット</a>

	
	&nbsp;
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9003/">#9003</a>(<script language="JavaScript">print_time(new Date("2009/05/24 02:08 GMT"));</script><noscript>2009/05/24 02:08 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ストレンジアトラクタの描画をしてください。
ストレンジアトラクタの種類は問いません。
簡単に出力できる言語はその言語の出力機能を使ってもらってかまいません。
また、出力が難しい言語はgnuplotなどのグラフ出力ソフトを使って出力してください。

解答の際はどのタイプのストレンジアトラクタなのかを添えてください。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9003/addtag/" class="addtag" id="addtag_9003">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9003"
  >-</span><span
  class="button yellow"
  id="rating_z_9003"
  >0</span><span 
  class="button green"
  id="rating_p_9003"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205614/http://ja.doukaku.org/251/reply_to/9003/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20090612205614/http://ja.doukaku.org/251/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20090612205614/http://ja.doukaku.org/251/flatten/">フラット表示</a> 
<a href="/web/20090612205614/http://ja.doukaku.org/251/">非表示</a> 


  

  
    





<div class="comment" id="comment9017">
  <p class="banner"><a href="/web/20090612205614/http://ja.doukaku.org/user/759/" target="_top">egtra</a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9017/">#9017</a>(<script language="JavaScript">print_time(new Date("2009/05/28 18:42 GMT"));</script><noscript>2009/05/28 18:42 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205614/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
<p>Wikipediaで<a href="/web/20090612205614/http://ja.wikipedia.org/wiki/%E3%82%A2%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%83%BC">アトラクター</a>を調べた程度なので、間違っていたらすみません。<a href="/web/20090612205614/http://ja.wikipedia.org/wiki/%E3%83%AD%E3%83%BC%E3%83%AC%E3%83%B3%E3%83%84%E6%96%B9%E7%A8%8B%E5%BC%8F">ローレンツアトラクター</a>を作ったつもりです。パラメータP, R, Bの値はコードを見てください。<a href="/web/20090612205614/http://ja.wikipedia.org/wiki/%E3%83%AB%E3%83%B3%E3%82%B2%EF%BC%9D%E3%82%AF%E3%83%83%E3%82%BF%E6%B3%95">ルンゲ＝クッタ法</a>を使用しました。
</p>
<p>なお、ルンゲ＝クッタ法での反復をPStade.OvenのiterationでRange化してfor_eachしているのが見所のつもりです。ちなみに、Boostのtupleを用いましたが、std::tupleでも構いません。
</p>
<p>画像出力は自前でBMPを書き出しており、その分無効も対策を取っていない。Boost.GILを使おうかと思いましたが、現在標準で使えるJPEG/PNG/TIFFのいずれもGIL単独では使用不可のようなので、今回は避けました。
</p>
<p>さて、このコードのコンパイルにはVisual Studio 2010 β付属のものを使いました。
</p>



	</div>
	
	<p class="link">
	  参考: <a href="/web/20090612205614/http://d.hatena.ne.jp/kei-os2007/20080509/1210302700">久しぶりに Runge-Kutta法でローレンツ方程式を解いたよ - kei-os2007 against the machine!!</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#define WIN32_LEAN_AND_MEAN</span>

<span class="cp">#include &lt;tchar.h&gt;</span>

<span class="cp">#include &lt;fstream&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>

<span class="cp">#include &lt;boost/tuple/tuple.hpp&gt;</span>
<span class="cp">#include &lt;boost/tuple/tuple_comparison.hpp&gt;</span>

<span class="cp">#include &lt;pstade/oven/algorithm.hpp&gt;</span>
<span class="cp">#include &lt;pstade/oven/iteration.hpp&gt;</span>
<span class="cp">#include &lt;pstade/oven/taken.hpp&gt;</span>

<span class="cp">#include &lt;windows.h&gt; </span><span class="c">// ビットマップ関係の構造体を使うだけ。</span>

<span class="k">namespace</span> <span class="n">ov</span> <span class="o">=</span> <span class="n">pstade</span><span class="o">::</span><span class="n">oven</span><span class="p">;</span>

<span class="k">typedef</span> <span class="n">boost</span><span class="o">::</span><span class="n">tuples</span><span class="o">::</span><span class="n">tuple</span><span class="o">&lt;</span><span class="kt">double</span><span class="p">,</span> <span class="kt">double</span><span class="p">,</span> <span class="kt">double</span><span class="o">&gt;</span> <span class="n">coord_t</span><span class="p">;</span>

<span class="k">const</span> <span class="kt">double</span> <span class="n">DELTA</span> <span class="o">=</span> <span class="mf">0.001953125</span><span class="p">;</span> <span class="c">// = 1 / 512</span>

<span class="k">const</span> <span class="kt">double</span> <span class="n">P</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">double</span> <span class="n">R</span> <span class="o">=</span> <span class="mi">28</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">double</span> <span class="n">B</span> <span class="o">=</span> <span class="mi">8</span> <span class="o">/</span> <span class="mi">3</span><span class="p">;</span>

<span class="k">const</span> <span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="mi">20000</span><span class="p">;</span>

<span class="k">using</span> <span class="n">boost</span><span class="o">::</span><span class="n">tuples</span><span class="o">::</span><span class="n">get</span><span class="p">;</span>

<span class="c">// ルンゲ＝クッタ法。</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">typename</span> <span class="n">T</span><span class="o">&gt;</span>
<span class="kt">double</span> <span class="n">NextByRungeKutta</span><span class="p">(</span><span class="kt">double</span> <span class="n">h</span><span class="p">,</span> <span class="n">coord_t</span> <span class="n">c</span><span class="p">,</span> <span class="n">T</span> <span class="n">f</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">double</span> <span class="n">k0</span> <span class="o">=</span> <span class="n">h</span> <span class="o">*</span> <span class="n">f</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
    <span class="kt">double</span> <span class="n">k1</span> <span class="o">=</span> <span class="n">h</span> <span class="o">*</span> <span class="n">f</span><span class="p">(</span><span class="n">coord_t</span><span class="p">(</span><span class="n">get</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">*</span> <span class="n">k0</span> <span class="o">*</span> <span class="mf">.5</span><span class="p">,</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">k0</span> <span class="o">*</span> <span class="mf">.5</span><span class="p">,</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">k0</span> <span class="o">*</span> <span class="mf">.5</span><span class="p">));</span>
    <span class="kt">double</span> <span class="n">k2</span> <span class="o">=</span> <span class="n">h</span> <span class="o">*</span> <span class="n">f</span><span class="p">(</span><span class="n">coord_t</span><span class="p">(</span><span class="n">get</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">k1</span> <span class="o">*</span> <span class="mf">.5</span><span class="p">,</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">k1</span> <span class="o">*</span> <span class="mf">.5</span><span class="p">,</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">k1</span> <span class="o">*</span> <span class="mf">.5</span><span class="p">));</span>
    <span class="kt">double</span> <span class="n">k3</span> <span class="o">=</span> <span class="n">h</span> <span class="o">*</span> <span class="n">f</span><span class="p">(</span><span class="n">coord_t</span><span class="p">(</span><span class="n">get</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">k2</span><span class="p">,</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">k2</span><span class="p">,</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">k2</span><span class="p">));</span>
    <span class="k">return</span> <span class="p">(</span><span class="n">k0</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="n">k1</span> <span class="o">+</span> <span class="n">k2</span><span class="p">)</span> <span class="o">+</span> <span class="n">k3</span><span class="p">)</span> <span class="o">/</span> <span class="mi">6</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">// ルンゲ＝クッタ法で次の値を得る。</span>
<span class="n">coord_t</span> <span class="n">Next</span><span class="p">(</span><span class="n">coord_t</span> <span class="n">c</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="n">coord_t</span><span class="p">(</span>
        <span class="n">get</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">NextByRungeKutta</span><span class="p">(</span><span class="n">DELTA</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="p">[](</span><span class="n">coord_t</span> <span class="n">c</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="n">P</span> <span class="o">*</span> <span class="p">(</span><span class="n">get</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">-</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">));}),</span>
        <span class="n">get</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">NextByRungeKutta</span><span class="p">(</span><span class="n">DELTA</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="p">[](</span><span class="n">coord_t</span> <span class="n">c</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">R</span> <span class="o">-</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">))</span> <span class="o">-</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">);}),</span>
        <span class="n">get</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="n">NextByRungeKutta</span><span class="p">(</span><span class="n">DELTA</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="p">[](</span><span class="n">coord_t</span> <span class="n">c</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">*</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">-</span> <span class="n">B</span> <span class="o">*</span> <span class="n">get</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">);}));</span>
<span class="p">}</span>

<span class="c">// ローレンツアトラクターを作り、osへビットマップとして書き込む。</span>
<span class="kt">void</span> <span class="n">WriteLorenzAttractor</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="n">os</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">unsigned</span> <span class="kt">char</span><span class="o">&gt;</span> <span class="n">img</span><span class="p">(</span><span class="mi">640</span> <span class="o">*</span> <span class="mi">640</span> <span class="o">/</span> <span class="mi">8</span><span class="p">);</span>
    <span class="n">ov</span><span class="o">::</span><span class="n">for_each</span><span class="p">(</span><span class="n">ov</span><span class="o">::</span><span class="n">iteration</span><span class="p">(</span><span class="n">coord_t</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span> <span class="n">Next</span><span class="p">)</span> <span class="o">|</span> <span class="n">ov</span><span class="o">::</span><span class="n">taken</span><span class="p">(</span><span class="n">N</span><span class="p">),</span> <span class="p">[</span><span class="o">&amp;</span><span class="n">img</span><span class="p">](</span><span class="n">coord_t</span> <span class="n">c</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">auto</span> <span class="n">x</span> <span class="o">=</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">unsigned</span><span class="o">&gt;</span><span class="p">(</span><span class="n">get</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="mi">300</span><span class="p">);</span>
        <span class="k">auto</span> <span class="n">y</span> <span class="o">=</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">unsigned</span><span class="o">&gt;</span><span class="p">(</span><span class="n">get</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="mi">300</span><span class="p">);</span>
        <span class="n">img</span><span class="p">[</span><span class="n">y</span> <span class="o">*</span> <span class="mi">640</span> <span class="o">/</span> <span class="mi">8</span> <span class="o">+</span> <span class="n">x</span> <span class="o">/</span> <span class="mi">8</span><span class="p">]</span> <span class="o">|=</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">unsigned</span> <span class="kt">char</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">1</span><span class="n">u</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="mi">7</span> <span class="o">-</span> <span class="p">(</span><span class="n">x</span> <span class="o">%</span> <span class="mi">8</span><span class="p">)));</span>
    <span class="p">});</span>

    <span class="k">static</span> <span class="k">const</span> <span class="n">RGBQUAD</span> <span class="n">rgbquad</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
        <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">},</span>
        <span class="p">{</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">},</span>
    <span class="p">};</span>
    <span class="k">static</span> <span class="k">const</span> <span class="n">BITMAPINFOHEADER</span> <span class="n">bih</span> <span class="o">=</span> <span class="p">{</span>
        <span class="c">/*.biSize =*/</span> <span class="k">sizeof</span> <span class="n">bih</span><span class="p">,</span>
        <span class="c">/*.biWidth = */</span> <span class="mi">640</span><span class="p">,</span>
        <span class="c">/*.biHeight = */</span> <span class="mi">640</span><span class="p">,</span>
        <span class="c">/*.biPlanes = */</span> <span class="mi">1</span><span class="p">,</span>
        <span class="c">/*.biBitCount = */</span> <span class="mi">1</span><span class="p">,</span>
        <span class="c">/*.biCompression = */</span> <span class="n">BI_RGB</span><span class="p">,</span>
        <span class="c">/*.biSizeImage = */</span> <span class="mi">0</span><span class="p">,</span>
        <span class="c">/*.biXPelsPerMeter = */</span> <span class="mi">2835</span><span class="p">,</span> <span class="c">// 72 dpi</span>
        <span class="c">/*.biYPelsPerMeter = */</span> <span class="mi">2835</span><span class="p">,</span>
        <span class="c">/*.biClrUsed = */</span> <span class="mi">2</span><span class="p">,</span>
        <span class="c">/*.biClrImportant = */</span> <span class="mi">0</span><span class="p">,</span>
    <span class="p">};</span>
    <span class="k">static</span> <span class="k">const</span> <span class="n">BITMAPFILEHEADER</span> <span class="n">bfh</span> <span class="o">=</span> <span class="p">{</span>
        <span class="c">/*.bfType =*/</span> <span class="n">MAKEWORD</span><span class="p">(</span><span class="sc">&#39;B&#39;</span><span class="p">,</span> <span class="sc">&#39;M&#39;</span><span class="p">),</span>
        <span class="c">/*.bfSize =*/</span> <span class="k">sizeof</span> <span class="n">bfh</span> <span class="o">+</span> <span class="k">sizeof</span> <span class="n">bih</span> <span class="o">+</span> <span class="k">sizeof</span> <span class="n">rgbquad</span> <span class="o">+</span> <span class="n">img</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span>
        <span class="c">/*.bfReserved1 =*/</span> <span class="mi">0</span><span class="p">,</span>
        <span class="c">/*.bfReserved2 =*/</span> <span class="mi">0</span><span class="p">,</span>
        <span class="c">/*.bfOffBits =*/</span> <span class="k">sizeof</span> <span class="n">bfh</span> <span class="o">+</span> <span class="k">sizeof</span> <span class="n">bih</span> <span class="o">+</span> <span class="k">sizeof</span> <span class="n">rgbquad</span><span class="p">,</span>
    <span class="p">};</span>

    <span class="n">os</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="k">const</span> <span class="kt">char</span><span class="o">*&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">bfh</span><span class="p">),</span> <span class="k">sizeof</span> <span class="n">bfh</span><span class="p">);</span>
    <span class="n">os</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="k">const</span> <span class="kt">char</span><span class="o">*&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">bih</span><span class="p">),</span> <span class="k">sizeof</span> <span class="n">bih</span><span class="p">);</span>
    <span class="n">os</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="k">const</span> <span class="kt">char</span><span class="o">*&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">rgbquad</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="k">sizeof</span> <span class="n">rgbquad</span><span class="p">);</span>
    <span class="n">os</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="k">const</span> <span class="kt">char</span><span class="o">*&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">img</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="n">img</span><span class="p">.</span><span class="n">size</span><span class="p">());</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">ofstream</span> <span class="n">ofs</span><span class="p">(</span><span class="s">&quot;h:</span><span class="se">\\</span><span class="s">t.bmp&quot;</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">ios</span><span class="o">::</span><span class="n">binary</span><span class="p">);</span>
    <span class="n">WriteLorenzAttractor</span><span class="p">(</span><span class="n">ofs</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9017/addtag/" class="addtag" id="addtag_9017">タグ</a>:
	
    
    <a href="/web/20090612205614/http://ja.doukaku.org/tag/C%2B%2B0x/">C++0x</a>
    
    <a href="/web/20090612205614/http://ja.doukaku.org/tag/PStade.Oven/">PStade.Oven</a>
    
	&nbsp;

	
      [<a href="/web/20090612205614/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9017/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9017/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9017"
  >-</span><span
  class="button yellow"
  id="rating_z_9017"
  >0</span><span 
  class="button green"
  id="rating_p_9017"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205614/http://ja.doukaku.org/251/reply_to/9017/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9018">
  <p class="banner"><a href="/web/20090612205614/http://ja.doukaku.org/user/646/" target="_top">silverwire</a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9018/">#9018</a>(<script language="JavaScript">print_time(new Date("2009/05/29 07:44 GMT"));</script><noscript>2009/05/29 07:44 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205614/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>JavaScriptで Clifford Attractorsを描画してみました。パラメーターを変更することで、
いろいろな形を描画することができます。 Firefox 2.0.0.6, Google Chrome 1.0.154.48, 
Opera 9.23で動作を確認しました。</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090612205614/http://local.wasp.uwa.edu.au/~pbourke/fractals/clifford/">Clifford Attractors</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55</pre></td><td class="code"><div class="highlight"><pre><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
        <span class="k">var</span> <span class="nx">$</span> <span class="o">=</span> <span class="k">function</span> <span class="p">(</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span> <span class="p">};</span>

        <span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">repeat</span> <span class="o">=</span> 
        <span class="k">function</span> <span class="p">(</span><span class="nx">t</span><span class="o">,</span> <span class="nx">o</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">var</span> <span class="nx">_</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
            <span class="k">return</span> <span class="nx">setInterval</span><span class="p">(</span><span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="nx">_</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">o</span><span class="p">);</span> <span class="p">}</span><span class="o">,</span> <span class="nx">t</span><span class="p">);</span>
        <span class="p">};</span>

        <span class="c">// アトラクター</span>
        <span class="k">var</span> <span class="nx">Attractor</span> <span class="o">=</span> 
        <span class="k">function</span> <span class="p">(</span><span class="nx">a</span><span class="o">,</span> <span class="nx">b</span><span class="o">,</span> <span class="nx">c</span><span class="o">,</span> <span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">var</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;canvas&#39;</span><span class="p">);</span>

            <span class="k">this</span><span class="p">.</span><span class="nx">a</span> <span class="o">=</span> <span class="nx">a</span><span class="o">;</span>           <span class="c">// パラメーター</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">b</span> <span class="o">=</span> <span class="nx">b</span><span class="o">;</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">c</span> <span class="o">=</span> <span class="nx">c</span><span class="o">;</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">d</span> <span class="o">=</span> <span class="nx">d</span><span class="o">;</span>

            <span class="k">this</span><span class="p">.</span><span class="nx">h</span> <span class="o">=</span> <span class="mi">300</span><span class="o">;</span>         <span class="c">// 高さ</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">w</span> <span class="o">=</span> <span class="mi">300</span><span class="o">;</span>         <span class="c">// 横幅</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">ox</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">w</span> <span class="sr">/ 2; /</span><span class="o">/</span> <span class="err">原点</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">oy</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">h</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">s</span> <span class="o">=</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">w</span> <span class="o">&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">)</span> <span class="o">?</span> <span class="k">this</span><span class="p">.</span><span class="nx">h</span> <span class="sr">/ 4 : this.w /</span> <span class="mi">4</span><span class="o">;</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>           <span class="c">//  X座標</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>           <span class="c">//  Y座標</span>

            <span class="nx">_</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s1">&#39;height&#39;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">);</span> <span class="nx">_</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s1">&#39;width&#39;</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">w</span><span class="p">);</span>

            <span class="k">this</span><span class="p">.</span><span class="nx">C</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s1">&#39;2d&#39;</span><span class="p">);</span> <span class="c">// 描画コンテキスト</span>
        <span class="p">}</span>

        <span class="nx">Attractor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">draw</span> <span class="o">=</span> 
        <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
            <span class="k">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span> <span class="o">*</span> <span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">c</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span> <span class="o">*</span> <span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">);</span>
            <span class="k">var</span> <span class="nx">y</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span> <span class="o">*</span> <span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">d</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span> <span class="o">*</span> <span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span>

            <span class="k">this</span><span class="p">.</span><span class="nx">C</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ox</span> <span class="o">+</span> <span class="nx">x</span> <span class="o">*</span> <span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">oy</span> <span class="o">-</span> <span class="nx">y</span> <span class="o">*</span> <span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="p">);</span>

            <span class="k">this</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">x</span><span class="o">;</span> <span class="k">this</span><span class="p">.</span><span class="nx">y</span> <span class="o">=</span> <span class="nx">y</span><span class="o">;</span>
        <span class="p">}</span>

        <span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> 
        <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
            <span class="k">var</span> <span class="nx">A</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Attractor</span><span class="p">(</span><span class="o">-</span><span class="mf">1.4</span><span class="o">,</span> <span class="mf">1.6</span><span class="o">,</span> <span class="mf">1.0</span><span class="o">,</span> <span class="mf">0.7</span><span class="p">);</span>
            <span class="nx">A</span><span class="p">.</span><span class="nx">draw</span><span class="p">.</span><span class="nx">repeat</span><span class="p">(</span><span class="mi">1</span><span class="o">,</span> <span class="nx">A</span><span class="p">);</span>
        <span class="p">};</span>
    <span class="o">&lt;/</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="nx">head</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="nx">canvas</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;canvas&quot;</span><span class="o">&gt;&lt;/</span><span class="nx">canvas</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="nx">body</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="nx">html</span><span class="o">&gt;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9018/addtag/" class="addtag" id="addtag_9018">タグ</a>:
	
    
    <a href="/web/20090612205614/http://ja.doukaku.org/tag/canvas/">canvas</a>
    
	&nbsp;

	
      [<a href="/web/20090612205614/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9018/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9018/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9018"
  >-</span><span
  class="button yellow"
  id="rating_z_9018"
  >0</span><span 
  class="button green"
  id="rating_p_9018"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205614/http://ja.doukaku.org/251/reply_to/9018/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9019">
  <p class="banner"><a href="/web/20090612205614/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9019/">#9019</a>(<script language="JavaScript">print_time(new Date("2009/05/29 08:51 GMT"));</script><noscript>2009/05/29 08:51 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205614/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Squeak Smalltalk で。ローレンツです。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20090612205614/http://squab.no-ip.com/collab/uploads/61/Lorenz.png">描画例</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>Display fillWhite; restoreAfter: [
    | x y z p r b pen dt scale center |
    x := 0. y := 20. z := 20.
    p := 10. r := 28. b := 8 / 3. dt := 0.01.

    pen := Pen new.
    pen defaultNib: 1; color: Color red.
    center := Display center x @ Display height.
    scale := (1 @ -1) * (Display height / 50).
    pen place: (x @ z) * scale + center.

    [Sensor anyButtonPressed] whileFalse: [
        x := ((p * x) negated + (p * y)) * dt + x.
        y := ((x * z) negated + (r * x) - y) * dt + y.
        z := ((x * y) - (b * z)) * dt + z.
        pen goto: (x @ z) * scale + center]
]
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9019/addtag/" class="addtag" id="addtag_9019">タグ</a>:
	
    
    <a href="/web/20090612205614/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20090612205614/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9019/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9019/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9019"
  >-</span><span
  class="button yellow"
  id="rating_z_9019"
  >0</span><span 
  class="button green"
  id="rating_p_9019"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205614/http://ja.doukaku.org/251/reply_to/9019/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9020">
  <p class="banner"><a href="/web/20090612205614/http://ja.doukaku.org/user/497/" target="_top">Otter</a>

	
	&nbsp;
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9020/">#9020</a>(<script language="JavaScript">print_time(new Date("2009/05/29 05:22 GMT"));</script><noscript>2009/05/29 05:22 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205614/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>silverwireさんのJavaScript版を参考に、HaskellでCliffordAttractorを描画させてみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Main</span>
    <span class="kr">where</span>

<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Win32</span><span class="o">.</span><span class="n">Types</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Win32</span><span class="o">.</span><span class="n">DLL</span> <span class="p">(</span><span class="nv">getModuleHandle</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Graphics</span><span class="o">.</span><span class="n">Win32</span> <span class="p">(</span><span class="nv">getStockBrush</span><span class="p">,</span> <span class="nv">wHITE_BRUSH</span><span class="p">,</span> <span class="nv">moveToEx</span><span class="p">,</span> <span class="nv">lineTo</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Graphics</span><span class="o">.</span><span class="n">Win32</span><span class="o">.</span><span class="n">Misc</span> <span class="p">(</span><span class="nv">loadCursor</span><span class="p">,</span> <span class="nv">iDC_ARROW</span><span class="p">,</span> <span class="nv">setWinTimer</span><span class="p">,</span> <span class="nv">killTimer</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Graphics</span><span class="o">.</span><span class="n">Win32</span><span class="o">.</span><span class="n">GDI</span><span class="o">.</span><span class="n">Types</span> <span class="p">(</span><span class="n">HDC</span><span class="p">,</span> <span class="n">HWND</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Graphics</span><span class="o">.</span><span class="n">Win32</span><span class="o">.</span><span class="n">GDI</span><span class="o">.</span><span class="n">Brush</span>
<span class="kr">import</span> <span class="n">Graphics</span><span class="o">.</span><span class="n">Win32</span><span class="o">.</span><span class="n">GDI</span><span class="o">.</span><span class="n">Graphics2D</span>
<span class="kr">import</span> <span class="n">Graphics</span><span class="o">.</span><span class="n">Win32</span><span class="o">.</span><span class="n">Message</span>
<span class="kr">import</span> <span class="n">Graphics</span><span class="o">.</span><span class="n">Win32</span><span class="o">.</span><span class="n">Window</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span> <span class="p">(</span><span class="nv">unfoldr</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Int</span> <span class="p">(</span><span class="n">Int32</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Maybe</span> <span class="p">(</span><span class="nv">isJust</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Control</span><span class="o">.</span><span class="n">Monad</span> <span class="p">(</span><span class="nv">when</span><span class="p">)</span>



<span class="nv">foreign</span> <span class="kr">import</span> <span class="nv">stdcall</span> <span class="s">&quot;PostQuitMessage&quot;</span> <span class="nv">postQuitMessage</span> <span class="o">::</span> <span class="n">Int32</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>

<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="kr">let</span> <span class="nv">clsName</span>     <span class="o">=</span>  <span class="nv">mkClassName</span> <span class="s">&quot;My Window Class&quot;</span>
    <span class="nv">hinst</span>         <span class="o">&lt;-</span> <span class="nv">getModuleHandle</span> <span class="n">Nothing</span>
    <span class="nv">whiteBrush</span>    <span class="o">&lt;-</span> <span class="nv">getStockBrush</span> <span class="nv">wHITE_BRUSH</span>
    <span class="nv">curArrow</span>    <span class="o">&lt;-</span> <span class="nv">loadCursor</span> <span class="n">Nothing</span> <span class="nv">iDC_ARROW</span>
    <span class="nv">mAtom</span>         <span class="o">&lt;-</span> <span class="nv">registerClass</span>
        <span class="p">(</span><span class="nv">cS_DBLCLKS</span><span class="p">,</span> 
        <span class="nv">hinst</span><span class="p">,</span>        <span class="c1">-- HINSTANCE</span>
        <span class="n">Nothing</span><span class="p">,</span>    <span class="c1">-- Maybe HICON</span>
        <span class="n">Just</span> <span class="nv">curArrow</span><span class="p">,</span>    <span class="c1">-- Maybe HCURSOR</span>
        <span class="n">Just</span> <span class="nv">whiteBrush</span><span class="p">,</span><span class="c1">-- Maybe HBRUSH</span>
        <span class="n">Nothing</span><span class="p">,</span>    <span class="c1">-- Maybe LPCTSTR</span>
        <span class="nv">clsName</span><span class="p">)</span>

    <span class="nv">when</span> <span class="p">(</span><span class="nv">isJust</span> <span class="nv">mAtom</span><span class="p">)</span> <span class="o">$</span> <span class="kr">do</span>
        <span class="nv">hwnd</span> <span class="o">&lt;-</span> <span class="nv">createWindow</span> 
            <span class="nv">clsName</span>
            <span class="s">&quot;Clifford Attractor&quot;</span> 
            <span class="p">(</span><span class="nv">wS_THICKFRAME</span> <span class="o">+</span> <span class="nv">wS_CAPTION</span> <span class="o">+</span> <span class="nv">wS_SYSMENU</span><span class="p">)</span> 
            <span class="n">Nothing</span> 
            <span class="n">Nothing</span> 
            <span class="n">Nothing</span> 
            <span class="n">Nothing</span> 
            <span class="n">Nothing</span> 
            <span class="n">Nothing</span> 
            <span class="nv">hinst</span>
            <span class="p">(</span><span class="nv">wndProc</span> <span class="mi">0</span><span class="p">)</span>

        <span class="nv">setWinTimer</span> <span class="nv">hwnd</span> <span class="mi">0</span><span class="cm">{-tid-}</span> <span class="mi">200</span><span class="cm">{-msec-}</span>

        <span class="nv">showWindow</span> <span class="nv">hwnd</span> <span class="nv">sW_SHOWNORMAL</span>
        <span class="nv">updateWindow</span> <span class="nv">hwnd</span>
        <span class="nv">allocaMessage</span> <span class="o">$</span> <span class="nv">pump</span>

        <span class="nv">unregisterClass</span> <span class="nv">clsName</span> <span class="nv">hinst</span>

<span class="nv">pump</span> <span class="nv">lpmsg</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">fContinue</span> <span class="o">&lt;-</span> <span class="nv">getMessage</span> <span class="nv">lpmsg</span> <span class="n">Nothing</span>
    <span class="nv">when</span> <span class="nv">fContinue</span> <span class="o">$</span> <span class="kr">do</span>
        <span class="nv">translateMessage</span> <span class="nv">lpmsg</span>
        <span class="nv">dispatchMessage</span> <span class="nv">lpmsg</span>
        <span class="nv">pump</span> <span class="nv">lpmsg</span>

<span class="nv">drawPoint</span> <span class="o">::</span> <span class="n">HDC</span> <span class="o">-&gt;</span> <span class="n">StockBrush</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Int</span><span class="p">,</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">drawPoint</span> <span class="nv">hdc</span> <span class="nv">br</span> <span class="p">(</span><span class="nv">x</span><span class="p">,</span> <span class="nv">y</span><span class="p">)</span>  <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">hbrush</span> <span class="o">&lt;-</span> <span class="nv">getStockBrush</span> <span class="nv">br</span>
    <span class="nv">fillRect</span> <span class="nv">hdc</span> <span class="p">(</span><span class="nv">x&#39;</span><span class="p">,</span> <span class="nv">y&#39;</span><span class="p">,</span> <span class="nv">x&#39;</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">y&#39;</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">hbrush</span>
    <span class="kr">where</span>
        <span class="nv">x&#39;</span> <span class="o">=</span> <span class="nv">fromIntegral</span> <span class="nv">x</span>
        <span class="nv">y&#39;</span> <span class="o">=</span> <span class="nv">fromIntegral</span> <span class="nv">y</span>

<span class="nv">cliffNext</span> <span class="o">::</span> <span class="n">Float</span> <span class="o">-&gt;</span> <span class="n">Float</span> <span class="o">-&gt;</span> <span class="n">Float</span> <span class="o">-&gt;</span> <span class="n">Float</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Float</span><span class="p">,</span> <span class="n">Float</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Float</span><span class="p">,</span> <span class="n">Float</span><span class="p">)</span>
<span class="nv">cliffNext</span> <span class="nv">a</span> <span class="nv">b</span> <span class="nv">c</span> <span class="nv">d</span> <span class="p">(</span><span class="nv">x</span><span class="p">,</span> <span class="nv">y</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">xn</span><span class="p">,</span> <span class="nv">yn</span><span class="p">)</span>
    <span class="kr">where</span> 
        <span class="nv">xn</span> <span class="o">=</span> <span class="nv">sin</span> <span class="p">(</span><span class="nv">a</span> <span class="o">*</span> <span class="nv">y</span><span class="p">)</span> <span class="o">+</span> <span class="nv">c</span> <span class="o">*</span> <span class="nv">cos</span><span class="p">(</span><span class="nv">a</span> <span class="o">*</span> <span class="nv">x</span><span class="p">)</span>
        <span class="nv">yn</span> <span class="o">=</span> <span class="nv">sin</span> <span class="p">(</span><span class="nv">b</span> <span class="o">*</span> <span class="nv">x</span><span class="p">)</span> <span class="o">+</span> <span class="nv">d</span> <span class="o">*</span> <span class="nv">cos</span><span class="p">(</span><span class="nv">b</span> <span class="o">*</span> <span class="nv">y</span><span class="p">)</span>

<span class="nv">cliffNextA</span> <span class="o">=</span> <span class="nv">cliffNext</span> <span class="p">(</span><span class="o">-</span><span class="mf">1.4</span><span class="p">)</span> <span class="mf">1.6</span> <span class="mf">1.0</span> <span class="mf">0.7</span>

<span class="nv">cliffs</span> <span class="o">::</span> <span class="p">((</span><span class="n">Float</span><span class="p">,</span> <span class="n">Float</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Float</span><span class="p">,</span> <span class="n">Float</span><span class="p">))</span> <span class="o">-&gt;</span> <span class="p">[(</span><span class="n">Float</span><span class="p">,</span> <span class="n">Float</span><span class="p">)]</span>
<span class="nv">cliffs</span> <span class="nv">clf</span> <span class="o">=</span> <span class="nv">unfoldr</span> <span class="nv">f</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
    <span class="kr">where</span>
        <span class="nv">f</span> <span class="o">=</span> <span class="n">Just</span> <span class="o">.</span> <span class="p">(</span><span class="o">\</span><span class="nv">a</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">a</span><span class="p">,</span> <span class="nv">a</span><span class="p">))</span> <span class="o">.</span> <span class="nv">clf</span>

<span class="nv">cliffAs</span> <span class="o">=</span> <span class="nv">cliffs</span> <span class="nv">cliffNextA</span>

<span class="nv">cliffARs</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">rasterize</span> <span class="mi">200</span> <span class="mi">200</span><span class="p">)</span> <span class="nv">cliffAs</span>

<span class="nv">drawClif</span> <span class="o">::</span> <span class="n">HDC</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">drawClif</span> <span class="nv">hdc</span> <span class="nv">dx</span> <span class="nv">dy</span> <span class="nv">c</span> <span class="o">=</span> <span class="nv">mapM_</span> <span class="nv">dp</span> <span class="o">$</span> <span class="nv">take</span> <span class="nv">c</span> <span class="nv">cliffARs</span> 
    <span class="kr">where</span>
        <span class="nv">dp</span> <span class="o">=</span> <span class="nv">drawPoint</span> <span class="nv">hdc</span> <span class="nv">bLACK_BRUSH</span>

<span class="nv">rasterize</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Float</span><span class="p">,</span> <span class="n">Float</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Int</span><span class="p">,</span> <span class="n">Int</span><span class="p">)</span>
<span class="nv">rasterize</span> <span class="nv">dx</span> <span class="nv">dy</span> <span class="p">(</span><span class="nv">x</span><span class="p">,</span> <span class="nv">y</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">x&#39;</span><span class="p">,</span> <span class="nv">y&#39;</span><span class="p">)</span>
    <span class="kr">where</span>
        <span class="nv">x&#39;</span> <span class="o">=</span> <span class="p">(</span><span class="nv">round</span> <span class="o">$</span> <span class="nv">x</span> <span class="o">*</span> <span class="p">(</span><span class="nv">fromIntegral</span> <span class="nv">dx</span><span class="p">))</span> <span class="o">+</span> <span class="nv">dx</span> <span class="o">+</span> <span class="nv">dx</span>
        <span class="nv">y&#39;</span> <span class="o">=</span> <span class="p">(</span><span class="nv">round</span> <span class="o">$</span> <span class="nv">y</span> <span class="o">*</span> <span class="p">(</span><span class="nv">fromIntegral</span> <span class="nv">dy</span><span class="p">))</span> <span class="o">+</span> <span class="nv">dy</span> <span class="o">+</span> <span class="nv">dy</span>
        

<span class="nv">render</span> <span class="o">::</span> <span class="n">HWND</span> <span class="o">-&gt;</span> <span class="n">HDC</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">render</span> <span class="nv">hwnd</span> <span class="nv">hdc</span> <span class="nv">i</span>  <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">drawClif</span> <span class="nv">hdc</span> <span class="mi">200</span> <span class="mi">200</span> <span class="p">(</span><span class="nv">i</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span>

<span class="nv">onTimer</span> <span class="o">::</span> <span class="n">HWND</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">onTimer</span> <span class="nv">hwnd</span> <span class="nv">i</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">invalidateRect</span> <span class="p">(</span><span class="n">Just</span> <span class="nv">hwnd</span><span class="p">)</span> <span class="n">Nothing</span> <span class="n">False</span>
    <span class="nv">setWindowClosure</span> <span class="nv">hwnd</span> <span class="p">(</span><span class="nv">wndProc</span> <span class="o">$</span> <span class="nv">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> 

<span class="nv">wndProc</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">HWND</span> <span class="o">-&gt;</span> <span class="n">WindowMessage</span> <span class="o">-&gt;</span> <span class="n">WPARAM</span> <span class="o">-&gt;</span> <span class="n">LPARAM</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="n">LRESULT</span>
<span class="nv">wndProc</span> <span class="nv">i</span> <span class="nv">hwnd</span> <span class="nv">wm</span> <span class="nv">wp</span> <span class="nv">lp</span>
    <span class="o">|</span> <span class="nv">wm</span> <span class="o">==</span> <span class="nv">wM_KEYDOWN</span>     <span class="o">=</span> <span class="nv">doFinish</span>
    <span class="o">|</span> <span class="nv">wm</span> <span class="o">==</span> <span class="nv">wM_LBUTTONDOWN</span>     <span class="o">=</span> <span class="nv">doFinish</span>
    <span class="o">|</span> <span class="nv">wm</span> <span class="o">==</span> <span class="nv">wM_DESTROY</span>     <span class="o">=</span> <span class="nv">killTimer</span> <span class="p">(</span><span class="n">Just</span> <span class="nv">hwnd</span><span class="p">)</span> <span class="mi">0</span> <span class="o">&gt;&gt;</span> <span class="nv">postQuitMessage</span> <span class="mi">0</span> <span class="o">&gt;&gt;</span> <span class="nv">return</span> <span class="mi">0</span>
    <span class="o">|</span> <span class="nv">wm</span> <span class="o">==</span> <span class="nv">wM_SIZE</span>        <span class="o">=</span> <span class="nv">doInvalRender</span>
    <span class="o">|</span> <span class="nv">wm</span> <span class="o">==</span> <span class="nv">wM_PAINT</span>       <span class="o">=</span> <span class="nv">onPaint</span>
    <span class="o">|</span> <span class="nv">wm</span> <span class="o">==</span> <span class="nv">wM_TIMER</span>    <span class="o">=</span> <span class="nv">onTimer</span> <span class="nv">hwnd</span> <span class="nv">i</span> <span class="o">&gt;&gt;</span> <span class="nv">return</span> <span class="mi">0</span>
    <span class="o">|</span> <span class="nv">otherwise</span>            <span class="o">=</span> <span class="nv">defWindowProc</span> <span class="p">(</span><span class="n">Just</span> <span class="nv">hwnd</span><span class="p">)</span> <span class="nv">wm</span> <span class="nv">wp</span> <span class="nv">lp</span>
    <span class="kr">where</span>
        <span class="nv">doFinish</span>     <span class="o">=</span> <span class="nv">sendMessage</span> <span class="nv">hwnd</span> <span class="nv">wM_CLOSE</span> <span class="mi">1</span> <span class="mi">0</span> <span class="o">&gt;&gt;</span> <span class="nv">return</span> <span class="mi">0</span>
        <span class="nv">doInvalRender</span>    <span class="o">=</span> <span class="nv">invalidateRect</span> <span class="p">(</span><span class="n">Just</span> <span class="nv">hwnd</span><span class="p">)</span> <span class="n">Nothing</span> <span class="n">True</span> <span class="o">&gt;&gt;</span> <span class="nv">return</span> <span class="mi">0</span>
        <span class="nv">onPaint</span>     <span class="o">=</span> <span class="nv">allocaPAINTSTRUCT</span> <span class="o">$</span> <span class="o">\</span> <span class="nv">lpps</span> <span class="o">-&gt;</span> <span class="kr">do</span>
                <span class="nv">hdc</span> <span class="o">&lt;-</span> <span class="nv">beginPaint</span> <span class="nv">hwnd</span> <span class="nv">lpps</span>
            <span class="nv">render</span> <span class="nv">hwnd</span> <span class="nv">hdc</span> <span class="nv">i</span>
            <span class="nv">endPaint</span> <span class="nv">hwnd</span> <span class="nv">lpps</span>
                <span class="nv">return</span> <span class="mi">0</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9020/addtag/" class="addtag" id="addtag_9020">タグ</a>:
	
    
    <a href="/web/20090612205614/http://ja.doukaku.org/tag/Win32/">Win32</a>
    
	&nbsp;

	
      [<a href="/web/20090612205614/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9020/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9020/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9020"
  >-</span><span
  class="button yellow"
  id="rating_z_9020"
  >0</span><span 
  class="button green"
  id="rating_p_9020"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205614/http://ja.doukaku.org/251/reply_to/9020/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9022">
  <p class="banner"><a href="/web/20090612205614/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9022/">#9022</a>(<script language="JavaScript">print_time(new Date("2009/05/30 00:29 GMT"));</script><noscript>2009/05/30 00:29 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205614/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Processing&nbsp;で&nbsp;Rössler&nbsp;attractor&nbsp;を書きました。<br/>アピールポイントは、キー入力で拡大・回転ができるところと、アルファ値が使えるのできれいな絵が描けるところ。<br/>緑の線は赤や青とふるまいが違うのがわかるでしょうか？
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090612205614/http://en.wikipedia.org/wiki/R%C3%B6ssler_attractor">Wikipedia：Rössler attractor(en)</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76</pre></td><td class="code"><div class="highlight"><pre><span class="n">RosslerLine</span><span class="o">[]</span> <span class="n">lines</span><span class="o">;</span>
<span class="kt">float</span> <span class="n">zoom</span><span class="o">,</span> <span class="n">rotX</span><span class="o">,</span> <span class="n">rotY</span><span class="o">;</span>
<span class="kt">void</span> <span class="n">setup</span><span class="o">()</span> <span class="o">{</span>
  <span class="n">lines</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RosslerLine</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
  <span class="n">lines</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RosslerLine</span><span class="o">(</span><span class="mf">0.2</span><span class="o">,</span> <span class="mf">0.1</span><span class="o">,</span> <span class="mf">5.7</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mh">0x33</span><span class="n">FF0000</span><span class="o">);</span>
  <span class="n">lines</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RosslerLine</span><span class="o">(</span><span class="mf">0.2</span><span class="o">,</span> <span class="mf">0.2</span><span class="o">,</span> <span class="mf">5.7</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mh">0x3300</span><span class="n">FF00</span><span class="o">);</span>
  <span class="n">lines</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RosslerLine</span><span class="o">(</span><span class="mf">0.2</span><span class="o">,</span> <span class="mf">0.3</span><span class="o">,</span> <span class="mf">5.7</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mh">0x330000</span><span class="n">FF</span><span class="o">);</span>
  <span class="n">size</span><span class="o">(</span><span class="mi">500</span><span class="o">,</span> <span class="mi">500</span><span class="o">,</span> <span class="n">P3D</span><span class="o">);</span>
  <span class="n">zoom</span> <span class="o">=</span> <span class="mf">7.8</span><span class="o">;</span>
  <span class="n">rotX</span> <span class="o">=</span> <span class="mf">1.0</span><span class="o">;</span>
  <span class="n">rotY</span> <span class="o">=</span> <span class="o">-</span><span class="mf">0.8</span><span class="o">;</span>
  <span class="n">clearScreen</span><span class="o">();</span>
<span class="o">}</span>
<span class="kt">void</span> <span class="n">preDraw</span><span class="o">()</span> <span class="o">{</span>
  <span class="n">pushMatrix</span><span class="o">();</span>
  <span class="n">translate</span><span class="o">(</span><span class="n">width</span> <span class="o">/</span> <span class="mi">2</span><span class="o">,</span> <span class="n">height</span> <span class="o">/</span> <span class="mi">2</span><span class="o">);</span>
  <span class="n">rotateX</span><span class="o">(</span><span class="n">rotX</span><span class="o">);</span>
  <span class="n">rotateY</span><span class="o">(</span><span class="n">rotY</span><span class="o">);</span>
  <span class="n">scale</span><span class="o">(</span><span class="n">zoom</span><span class="o">);</span>
<span class="o">}</span>  
<span class="kt">void</span> <span class="n">postDraw</span><span class="o">()</span> <span class="o">{</span>
  <span class="n">popMatrix</span><span class="o">();</span>
<span class="o">}</span>
<span class="kt">void</span> <span class="n">clearScreen</span><span class="o">()</span> <span class="o">{</span>
  <span class="n">preDraw</span><span class="o">();</span>
  <span class="n">background</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
  <span class="n">stroke</span><span class="o">(</span><span class="mi">64</span><span class="o">);</span>  <span class="n">line</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>  <span class="c">// draw x-axis</span>
  <span class="n">stroke</span><span class="o">(</span><span class="mi">128</span><span class="o">);</span> <span class="n">line</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>  <span class="c">// draw y-axis</span>
  <span class="n">stroke</span><span class="o">(</span><span class="mi">192</span><span class="o">);</span> <span class="n">line</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">30</span><span class="o">);</span>  <span class="c">// draw z-axis</span>
  <span class="n">postDraw</span><span class="o">();</span>
<span class="o">}</span>
<span class="kt">void</span> <span class="n">draw</span><span class="o">()</span> <span class="o">{</span>
  <span class="n">preDraw</span><span class="o">();</span>
  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">lines</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">lines</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">update</span><span class="o">();</span>
  <span class="o">}</span>
  <span class="n">postDraw</span><span class="o">();</span>
<span class="o">}</span>
<span class="kt">void</span> <span class="n">keyPressed</span><span class="o">()</span> <span class="o">{</span>
  <span class="k">switch</span> <span class="o">(</span><span class="n">key</span><span class="o">)</span> <span class="o">{</span>
  <span class="k">case</span> <span class="sc">&#39;+&#39;</span><span class="o">:</span>  <span class="n">zoom</span> <span class="o">+=</span> <span class="mf">0.2</span><span class="o">;</span> <span class="k">break</span><span class="o">;</span>  <span class="c">// zoom in</span>
  <span class="k">case</span> <span class="sc">&#39;-&#39;</span><span class="o">:</span>  <span class="n">zoom</span> <span class="o">-=</span> <span class="mf">0.2</span><span class="o">;</span> <span class="k">break</span><span class="o">;</span>  <span class="c">// zoom out</span>
  <span class="k">case</span> <span class="sc">&#39; &#39;</span><span class="o">:</span>  <span class="k">break</span><span class="o">;</span>  <span class="c">// clear screen</span>
  <span class="k">case</span> <span class="sc">&#39;4&#39;</span><span class="o">:</span>  <span class="n">rotY</span> <span class="o">-=</span> <span class="n">PI</span> <span class="o">/</span> <span class="mi">12</span><span class="o">;</span> <span class="k">break</span><span class="o">;</span>  <span class="c">// rotate left or right</span>
  <span class="k">case</span> <span class="sc">&#39;6&#39;</span><span class="o">:</span>  <span class="n">rotY</span> <span class="o">+=</span> <span class="n">PI</span> <span class="o">/</span> <span class="mi">12</span><span class="o">;</span> <span class="k">break</span><span class="o">;</span>  <span class="c">// rotate right or left</span>
  <span class="k">case</span> <span class="sc">&#39;8&#39;</span><span class="o">:</span>  <span class="n">rotX</span> <span class="o">-=</span> <span class="n">PI</span> <span class="o">/</span> <span class="mi">12</span><span class="o">;</span> <span class="k">break</span><span class="o">;</span>  <span class="c">// rotate up or down</span>
  <span class="k">case</span> <span class="sc">&#39;2&#39;</span><span class="o">:</span>  <span class="n">rotX</span> <span class="o">+=</span> <span class="n">PI</span> <span class="o">/</span> <span class="mi">12</span><span class="o">;</span> <span class="k">break</span><span class="o">;</span>  <span class="c">// rotate down or up</span>
  <span class="k">default</span> <span class="o">:</span>  <span class="n">println</span><span class="o">(</span><span class="s">&quot;key[&quot;</span> <span class="o">+</span> <span class="n">keyCode</span> <span class="o">+</span> <span class="s">&quot;, &quot;</span> <span class="o">+</span> <span class="n">key</span> <span class="o">+</span> <span class="s">&quot;]&quot;</span><span class="o">);</span> <span class="k">return</span><span class="o">;</span>
  <span class="o">}</span>
  <span class="n">clearScreen</span><span class="o">();</span>
  <span class="n">println</span><span class="o">(</span><span class="s">&quot;zoom:&quot;</span> <span class="o">+</span> <span class="n">zoom</span> <span class="o">+</span> <span class="s">&quot; rot:(&quot;</span> <span class="o">+</span> <span class="n">rotX</span> <span class="o">+</span> <span class="s">&quot;, &quot;</span> <span class="o">+</span> <span class="n">rotY</span> <span class="o">+</span> <span class="s">&quot;)&quot;</span><span class="o">);</span>
<span class="o">}</span>

<span class="k">class</span> <span class="nc">RosslerLine</span> <span class="o">{</span>
  <span class="kt">float</span> <span class="n">a</span> <span class="o">=</span> <span class="mf">0.2</span><span class="o">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mf">0.2</span><span class="o">,</span> <span class="n">c</span> <span class="o">=</span> <span class="mf">5.7</span><span class="o">;</span>
  <span class="kt">float</span> <span class="n">x</span> <span class="o">=</span> <span class="mf">1.0</span><span class="o">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mf">1.0</span><span class="o">,</span> <span class="n">z</span> <span class="o">=</span> <span class="mf">1.0</span><span class="o">;</span>
  <span class="kt">float</span> <span class="n">dt</span> <span class="o">=</span> <span class="mf">0.0015</span><span class="o">;</span>
  <span class="kt">int</span> <span class="n">stepPerFrame</span> <span class="o">=</span> <span class="mi">35</span><span class="o">;</span>
  <span class="kt">int</span> <span class="n">col</span><span class="o">;</span>
  <span class="n">RosslerLine</span><span class="o">(</span><span class="kt">float</span> <span class="n">a</span><span class="o">,</span> <span class="kt">float</span> <span class="n">b</span><span class="o">,</span> <span class="kt">float</span> <span class="n">c</span><span class="o">,</span> <span class="kt">float</span> <span class="n">x</span><span class="o">,</span> <span class="kt">float</span> <span class="n">y</span><span class="o">,</span> <span class="kt">float</span> <span class="n">z</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span> <span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span> <span class="k">this</span><span class="o">.</span><span class="na">z</span> <span class="o">=</span> <span class="n">z</span><span class="o">;</span>
    <span class="k">this</span><span class="o">.</span><span class="na">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span> <span class="k">this</span><span class="o">.</span><span class="na">b</span> <span class="o">=</span> <span class="n">b</span><span class="o">;</span> <span class="k">this</span><span class="o">.</span><span class="na">c</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
    <span class="k">this</span><span class="o">.</span><span class="na">col</span> <span class="o">=</span> <span class="n">col</span><span class="o">;</span>
  <span class="o">}</span>
  <span class="kt">void</span> <span class="n">update</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">stroke</span><span class="o">(</span><span class="n">col</span><span class="o">);</span>
    <span class="kt">float</span> <span class="n">x0</span> <span class="o">=</span> <span class="n">x</span><span class="o">,</span> <span class="n">y0</span> <span class="o">=</span> <span class="n">y</span><span class="o">,</span> <span class="n">z0</span> <span class="o">=</span> <span class="n">z</span><span class="o">;</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">stepPerFrame</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
      <span class="kt">float</span> <span class="n">dx</span> <span class="o">=</span> <span class="o">(</span> <span class="o">-</span> <span class="n">y</span> <span class="o">-</span> <span class="n">z</span> <span class="o">)</span> <span class="o">*</span> <span class="n">dt</span><span class="o">;</span>
      <span class="kt">float</span> <span class="n">dy</span> <span class="o">=</span> <span class="o">(</span> <span class="n">x</span> <span class="o">+</span> <span class="n">a</span> <span class="o">*</span> <span class="n">y</span> <span class="o">)</span> <span class="o">*</span> <span class="n">dt</span><span class="o">;</span>
      <span class="kt">float</span> <span class="n">dz</span> <span class="o">=</span> <span class="o">(</span> <span class="n">b</span> <span class="o">+</span> <span class="n">z</span> <span class="o">*</span> <span class="o">(</span><span class="n">x</span> <span class="o">-</span> <span class="n">c</span><span class="o">)</span> <span class="o">)</span> <span class="o">*</span> <span class="n">dt</span><span class="o">;</span>
      <span class="n">x</span> <span class="o">+=</span> <span class="n">dx</span><span class="o">;</span> <span class="n">y</span> <span class="o">+=</span> <span class="n">dy</span><span class="o">;</span> <span class="n">z</span> <span class="o">+=</span> <span class="n">dz</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="n">line</span><span class="o">(</span><span class="n">x0</span><span class="o">,</span> <span class="n">y0</span><span class="o">,</span> <span class="n">z0</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">z</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9022/addtag/" class="addtag" id="addtag_9022">タグ</a>:
	
    
    <a href="/web/20090612205614/http://ja.doukaku.org/tag/Processing/">Processing</a>
    
	&nbsp;

	
      [<a href="/web/20090612205614/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9022/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9022/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9022"
  >-</span><span
  class="button yellow"
  id="rating_z_9022"
  >0</span><span 
  class="button green"
  id="rating_p_9022"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205614/http://ja.doukaku.org/251/reply_to/9022/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9024">
  <p class="banner"><a href="/web/20090612205614/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9024/">#9024</a>(<script language="JavaScript">print_time(new Date("2009/05/31 07:26 GMT"));</script><noscript>2009/05/31 07:26 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205614/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ローレンツ・アトラクタ（p = 10、r = 28、b = 8/3）を描画します。オイラー法を用いています。アプリケーションとしてもアプレットとしても動作します。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.applet.Applet</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.awt.event.*</span><span class="o">;</span>

<span class="nd">@SuppressWarnings</span><span class="o">(</span><span class="s">&quot;serial&quot;</span><span class="o">)</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">Lorenz</span> <span class="k">extends</span> <span class="n">Applet</span> <span class="k">implements</span> <span class="n">Runnable</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">double</span> <span class="n">DT</span> <span class="o">=</span> <span class="mf">0.0005</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">long</span> <span class="n">SLEEP_TIME</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">double</span> <span class="n">SCALE</span> <span class="o">=</span> <span class="mi">25</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">double</span> <span class="n">p</span><span class="o">,</span> <span class="n">r</span><span class="o">,</span> <span class="n">b</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">double</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">z</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span>  <span class="n">orgX</span><span class="o">,</span> <span class="n">orgY</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">double</span> <span class="n">scale</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">Image</span> <span class="n">img</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">Graphics</span> <span class="n">grap</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">done</span><span class="o">;</span>

    <span class="k">public</span> <span class="n">Lorenz</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">(</span><span class="mf">10.0</span><span class="o">,</span> <span class="mf">28.0</span><span class="o">,</span> <span class="mf">8.0</span><span class="o">/</span><span class="mf">3.0</span><span class="o">,</span> <span class="mf">10.0</span><span class="o">,</span> <span class="mf">10.0</span><span class="o">,</span> <span class="mf">10.0</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="n">Lorenz</span><span class="o">(</span><span class="kt">double</span> <span class="n">p</span><span class="o">,</span> <span class="kt">double</span> <span class="n">r</span><span class="o">,</span> <span class="kt">double</span> <span class="n">b</span><span class="o">,</span> <span class="kt">double</span> <span class="n">x</span><span class="o">,</span> <span class="kt">double</span> <span class="n">y</span><span class="o">,</span> <span class="kt">double</span> <span class="n">z</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">p</span> <span class="o">=</span> <span class="n">p</span><span class="o">;</span> <span class="k">this</span><span class="o">.</span><span class="na">r</span> <span class="o">=</span> <span class="n">r</span><span class="o">;</span> <span class="k">this</span><span class="o">.</span><span class="na">b</span> <span class="o">=</span> <span class="n">b</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span> <span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span> <span class="k">this</span><span class="o">.</span><span class="na">z</span> <span class="o">=</span> <span class="n">z</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="kt">void</span> <span class="n">calc</span><span class="o">()</span> <span class="o">{</span>
        <span class="kt">double</span> <span class="n">dx</span> <span class="o">=</span> <span class="o">(-</span> <span class="n">p</span> <span class="o">*</span> <span class="n">x</span> <span class="o">+</span> <span class="n">p</span> <span class="o">*</span> <span class="n">y</span><span class="o">)</span> <span class="o">*</span> <span class="n">DT</span><span class="o">;</span>
        <span class="kt">double</span> <span class="n">dy</span> <span class="o">=</span> <span class="o">(-</span> <span class="n">x</span> <span class="o">*</span> <span class="n">z</span> <span class="o">+</span> <span class="n">r</span> <span class="o">*</span> <span class="n">x</span> <span class="o">-</span> <span class="n">y</span><span class="o">)</span> <span class="o">*</span> <span class="n">DT</span><span class="o">;</span>
        <span class="kt">double</span> <span class="n">dz</span> <span class="o">=</span> <span class="o">(</span><span class="n">x</span> <span class="o">*</span> <span class="n">y</span> <span class="o">-</span> <span class="n">b</span> <span class="o">*</span> <span class="n">z</span><span class="o">)</span> <span class="o">*</span> <span class="n">DT</span><span class="o">;</span>
        <span class="n">x</span> <span class="o">+=</span> <span class="n">dx</span><span class="o">;</span> <span class="n">y</span> <span class="o">+=</span> <span class="n">dy</span><span class="o">;</span> <span class="n">z</span> <span class="o">+=</span> <span class="n">dz</span><span class="o">;</span>    
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">void</span> <span class="n">run</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="k">while</span> <span class="o">(!</span><span class="n">done</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="n">calc</span><span class="o">();</span>
                    <span class="n">grap</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="k">new</span> <span class="n">Color</span><span class="o">((</span><span class="kt">float</span><span class="o">)(</span><span class="n">z</span> <span class="o">/</span> <span class="mi">50</span><span class="o">),</span> <span class="mf">0.0f</span><span class="o">,</span> <span class="o">(</span><span class="kt">float</span><span class="o">)(</span><span class="mf">1.0</span> <span class="o">-</span> <span class="n">z</span> <span class="o">/</span> <span class="mi">50</span><span class="o">)));</span>
                    <span class="n">grap</span><span class="o">.</span><span class="na">drawOval</span><span class="o">(</span><span class="n">orgX</span> <span class="o">+</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">scale</span> <span class="o">*</span> <span class="n">x</span><span class="o">),</span> <span class="n">orgY</span> <span class="o">-</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">scale</span> <span class="o">*</span> <span class="n">y</span><span class="o">),</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="n">repaint</span><span class="o">();</span>
                <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">SLEEP_TIME</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="kt">void</span> <span class="n">paint</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">g</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="kt">void</span> <span class="n">update</span><span class="o">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">paint</span><span class="o">(</span><span class="n">g</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="kt">void</span> <span class="n">init</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">orgX</span> <span class="o">=</span> <span class="n">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span> <span class="n">orgY</span> <span class="o">=</span> <span class="n">getHeight</span><span class="o">()</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
        <span class="n">scale</span> <span class="o">=</span> <span class="o">((</span><span class="n">orgX</span> <span class="o">&lt;</span> <span class="n">orgY</span><span class="o">)</span> <span class="o">?</span> <span class="nl">orgX:</span> <span class="n">orgY</span><span class="o">)</span> <span class="o">/</span> <span class="n">SCALE</span><span class="o">;</span>
        <span class="n">img</span> <span class="o">=</span> <span class="n">createImage</span><span class="o">(</span><span class="n">getWidth</span><span class="o">(),</span> <span class="n">getHeight</span><span class="o">());</span>
        <span class="n">grap</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="na">getGraphics</span><span class="o">();</span>
        <span class="n">grap</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">orgY</span><span class="o">,</span> <span class="n">getWidth</span><span class="o">(),</span> <span class="n">orgY</span><span class="o">);</span>
        <span class="n">grap</span><span class="o">.</span><span class="na">drawLine</span><span class="o">(</span><span class="n">orgX</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">orgX</span><span class="o">,</span> <span class="n">getHeight</span><span class="o">());</span>
        <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">this</span><span class="o">).</span><span class="na">start</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="kt">void</span> <span class="n">destroy</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">done</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Frame</span> <span class="n">f</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Frame</span><span class="o">(</span><span class="s">&quot;Lorenz&quot;</span><span class="o">);</span>
        <span class="n">f</span><span class="o">.</span><span class="na">addWindowListener</span><span class="o">(</span><span class="k">new</span> <span class="n">WindowAdapter</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">public</span> <span class="kt">void</span> <span class="n">windowClosing</span><span class="o">(</span><span class="n">WindowEvent</span> <span class="n">evt</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
            <span class="o">}});</span>
        <span class="n">Applet</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Lorenz</span><span class="o">();</span>
        <span class="n">f</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
        <span class="n">f</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="mi">500</span><span class="o">,</span> <span class="mi">530</span><span class="o">);</span>
        <span class="n">f</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="n">a</span><span class="o">.</span><span class="na">init</span><span class="o">();</span>
        <span class="n">a</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9024/addtag/" class="addtag" id="addtag_9024">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205614/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9024/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9024/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9024"
  >-</span><span
  class="button yellow"
  id="rating_z_9024"
  >0</span><span 
  class="button green"
  id="rating_p_9024"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090612205614/http://ja.doukaku.org/comment/9024/">
    1
    reply
  </a>

  [<a href="/web/20090612205614/http://ja.doukaku.org/251/reply_to/9024/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment9131">
  <p class="banner"><a href="/web/20090612205614/http://ja.doukaku.org/user/1064/" target="_top">yamamoto</a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9131/">#9131</a>(<script language="JavaScript">print_time(new Date("2009/06/12 03:31 GMT"));</script><noscript>2009/06/12 03:31 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205614/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Java版(匿名 #9024)を移植しました。</p>
<p>Java--&gt;Scala移植には落とし穴がありますね・・・</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97</pre></td><td class="code"><div class="highlight"><pre>// Java版(匿名 #9024)を移植しました
import java.applet.Applet
import java.awt._
import java.awt.event._

object Main{
    def main( args : Array[String] ) : Unit = {
      try {
        val f = new Frame(&quot;Lorenz&quot;);
        f.addWindowListener(
                new WindowAdapter() {
                    override def windowClosing(evt:WindowEvent):Unit = {System.exit(0);}
                } );
        val a = new Lorenz()
        
        f.add(a);
        f.setSize(500, 530);
        f.setVisible(true);
        a.init();
        a.start();
        
        ()
      }catch{
        case e:Exception =&gt; println(e)
      }
    }
}

object Lorenz{
    private val DT:Double = 0.0005;
    private val SLEEP_TIME:Long = 1;
    private val SCALE:Double = 25;
}

class Lorenz(val p:Double, val r:Double, val b:Double, 
             var xx:Double , 
             var yy:Double , 
             var zz:Double) extends Applet with Runnable {
    //
    var orgX, orgY : Int = _
    var scale : Double = _
    var img : Image = _
    var grap : Graphics = _
    
    var done : Boolean = _

    def this()=this(10.0, 28.0, 8.0/3.0, 10.0, 10.0, 10.0)
    
    def calc():Unit = {
        val dx = (- p * xx + p * yy) * Lorenz.DT
        val dy = (- xx * zz + r * xx - yy) * Lorenz.DT
        val dz = (xx * yy - b * zz) * Lorenz.DT
        xx += dx
        yy += dy
        zz += dz
    }

    override def run():Unit = {
        try {
            while (!done) {
                for (i &lt;- 0 until 10) {
                   calc();
                   grap.setColor(new Color((zz / 50).toFloat, 0.0f,(1.0 - zz / 50).toFloat));
                   grap.drawOval(orgX + (scale * xx).toInt, orgY - (scale * yy).toInt, 1, 1);
                }
                repaint();
                Thread.sleep(Lorenz.SLEEP_TIME);
            }
        } catch {
            case e:InterruptedException =&gt; e.printStackTrace();
            case _ =&gt;
        }
    }
    
    override def paint(g:Graphics):Unit =  {
        g.drawImage(img, 0, 0, null);
    }
    
    override def update(g:Graphics):Unit = {
        paint(g);
    }
    
    override def init():Unit = {
        orgX = getWidth() / 2; orgY = getHeight() / 2;
        scale = ( if(orgX &lt; orgY) orgX else orgY) / Lorenz.SCALE;
        img = createImage(getWidth(), getHeight());
        grap = img.getGraphics();
        grap.drawLine(0, orgY, getWidth(), orgY);
        grap.drawLine(orgX, 0, orgX, getHeight());
        new Thread(this).start();
    }
    
    override def destroy():Unit = {
        done = true;
    }
    
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9131/addtag/" class="addtag" id="addtag_9131">タグ</a>:
	
    
    <a href="/web/20090612205614/http://ja.doukaku.org/tag/%E7%A7%BB%E6%A4%8D/">移植</a>
    
	&nbsp;

	
      [<a href="/web/20090612205614/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9131/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9131/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9131"
  >-</span><span
  class="button yellow"
  id="rating_z_9131"
  >0</span><span 
  class="button green"
  id="rating_p_9131"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090612205614/http://ja.doukaku.org/comment/9024/"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090612205614/http://ja.doukaku.org/comment/9131/root/"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090612205614/http://ja.doukaku.org/251/reply_to/9131/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment9053">
  <p class="banner"><a href="/web/20090612205614/http://ja.doukaku.org/user/641/" target="_top">seri</a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9053/">#9053</a>(<script language="JavaScript">print_time(new Date("2009/06/05 12:53 GMT"));</script><noscript>2009/06/05 12:53 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205614/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ローレンツアトラクタです。
出力にはRuby/OpenGLを使ってみました。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;opengl&#39;</span>
<span class="nb">require</span> <span class="s1">&#39;glut&#39;</span>

<span class="k">class</span> <span class="nc">Lorenz</span>
  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">x0</span><span class="p">,</span> <span class="n">y0</span><span class="p">,</span> <span class="n">z0</span><span class="p">,</span> <span class="nb">p</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">dt</span><span class="p">)</span>
    <span class="vi">@x0</span><span class="p">,</span> <span class="vi">@y0</span><span class="p">,</span> <span class="vi">@z0</span> <span class="o">=</span> <span class="n">x0</span><span class="p">,</span> <span class="n">y0</span><span class="p">,</span> <span class="n">z0</span>
    <span class="vi">@p</span><span class="p">,</span> <span class="vi">@r</span><span class="p">,</span> <span class="vi">@b</span> <span class="o">=</span> <span class="nb">p</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">b</span>
    <span class="vi">@dt</span> <span class="o">=</span> <span class="n">dt</span>
  <span class="k">end</span>
  
  <span class="k">def</span> <span class="nf">calc</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
    <span class="n">dat</span> <span class="o">=</span> <span class="o">[]</span>
    <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="vi">@x0</span><span class="p">,</span> <span class="vi">@y0</span><span class="p">,</span> <span class="vi">@z0</span>
    <span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span>
      <span class="n">dx</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="vi">@p</span> <span class="o">*</span> <span class="n">x</span> <span class="o">+</span> <span class="vi">@p</span> <span class="o">*</span> <span class="n">y</span><span class="p">)</span> <span class="o">*</span> <span class="vi">@dt</span>
      <span class="n">dy</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="n">x</span> <span class="o">*</span> <span class="n">z</span> <span class="o">+</span> <span class="vi">@r</span> <span class="o">*</span> <span class="n">x</span> <span class="o">-</span> <span class="n">y</span><span class="p">)</span> <span class="o">*</span> <span class="vi">@dt</span>
      <span class="n">dz</span> <span class="o">=</span> <span class="p">(</span><span class="n">x</span> <span class="o">*</span> <span class="n">y</span> <span class="o">-</span> <span class="vi">@b</span> <span class="o">*</span> <span class="n">z</span><span class="p">)</span> <span class="o">*</span> <span class="vi">@dt</span>
      <span class="n">x</span> <span class="o">+=</span> <span class="n">dx</span><span class="p">;</span> <span class="n">y</span> <span class="o">+=</span> <span class="n">dy</span><span class="p">;</span> <span class="n">z</span> <span class="o">+=</span> <span class="n">dz</span>
      <span class="n">dat</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="o">]</span>
    <span class="p">}</span>
    <span class="n">dat</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">lorenz</span> <span class="o">=</span> <span class="no">Lorenz</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">28</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">8</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mo">01</span><span class="p">)</span>
<span class="n">dat</span> <span class="o">=</span> <span class="n">lorenz</span><span class="o">.</span><span class="n">calc</span><span class="p">(</span><span class="mi">5000</span><span class="p">)</span>
<span class="no">SCALE</span> <span class="o">=</span> <span class="mi">0</span><span class="o">.</span><span class="mo">015</span>

<span class="nb">display</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span>
  <span class="no">GL</span><span class="o">.</span><span class="n">Clear</span><span class="p">(</span><span class="no">GL</span><span class="o">::</span><span class="no">COLOR_BUFFER_BIT</span><span class="p">)</span>
  <span class="no">GL</span><span class="o">.</span><span class="n">Begin</span><span class="p">(</span><span class="no">GL</span><span class="o">::</span><span class="no">LINE_STRIP</span><span class="p">)</span>
  <span class="n">dat</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">coord</span><span class="o">|</span>
    <span class="n">coord</span><span class="o">.</span><span class="n">map!</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="n">a</span> <span class="o">*</span> <span class="no">SCALE</span> <span class="p">}</span>
    <span class="no">GL</span><span class="o">.</span><span class="n">Vertex3f</span><span class="p">(</span><span class="o">*</span><span class="n">coord</span><span class="p">)</span>
  <span class="p">}</span>
  <span class="no">GL</span><span class="o">.</span><span class="n">End</span><span class="p">();</span>
  <span class="no">GLUT</span><span class="o">.</span><span class="n">SwapBuffers</span><span class="p">()</span>
<span class="p">}</span>

<span class="no">GLUT</span><span class="o">.</span><span class="n">Init</span><span class="p">()</span>
<span class="no">GLUT</span><span class="o">.</span><span class="n">InitWindowSize</span><span class="p">(</span><span class="mi">600</span><span class="p">,</span> <span class="mi">600</span><span class="p">)</span>
<span class="no">GLUT</span><span class="o">.</span><span class="n">CreateWindow</span><span class="p">(</span><span class="s1">&#39;Lorenz attractor&#39;</span><span class="p">)</span>
<span class="no">GL</span><span class="o">.</span><span class="n">Color3f</span><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
<span class="no">GL</span><span class="o">.</span><span class="n">ClearColor</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
<span class="no">GLUT</span><span class="o">.</span><span class="n">DisplayFunc</span><span class="p">(</span><span class="nb">display</span><span class="p">)</span>
<span class="no">GLUT</span><span class="o">.</span><span class="n">MainLoop</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9053/addtag/" class="addtag" id="addtag_9053">タグ</a>:
	
    
    <a href="/web/20090612205614/http://ja.doukaku.org/tag/Ruby/OpenGL/">Ruby/OpenGL</a>
    
	&nbsp;

	
      [<a href="/web/20090612205614/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9053/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9053/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9053"
  >-</span><span
  class="button yellow"
  id="rating_z_9053"
  >0</span><span 
  class="button green"
  id="rating_p_9053"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205614/http://ja.doukaku.org/251/reply_to/9053/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9064">
  <p class="banner"><a href="/web/20090612205614/http://ja.doukaku.org/user/606/" target="_top">pooq</a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090612205614/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9064/">#9064</a>(<script language="JavaScript">print_time(new Date("2009/06/07 11:17 GMT"));</script><noscript>2009/06/07 11:17 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205614/http://ja.doukaku.org/lang/j/">
	  J
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>むかし、わけもわからずBASICで表示していたもの。
「グモウスキーとミラの翼」とかいうらしい。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre>load &#39;plot&#39;

f =: 4 :&#39;(x * y) + (2 * (1 - x) * y * y) % (1 + y * y)&#39;

gma =: 4 : 0 
  &#39;a b c&#39; =. x
  &#39;x0 y0&#39; =. y
  x1 =. y0 + (y0 * a * (1 - b * y0 * y0)) + (c f x0) 
  x1, y1 =. (-x0) + (c f x1) 
)

&#39;type dot&#39; plot ;/ |: 0.008 0.05 _0.8 gma ^: (&lt; 50000) 0.1 0
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205614/http://ja.doukaku.org/comment/9064/addtag/" class="addtag" id="addtag_9064">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205614/http://ja.doukaku.org/lang/j/">
		J
      </a>]
	  
      [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9064/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205614/http://ja.doukaku.org/comment/9064/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9064"
  >-</span><span
  class="button yellow"
  id="rating_z_9064"
  >0</span><span 
  class="button green"
  id="rating_p_9064"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205614/http://ja.doukaku.org/251/reply_to/9064/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20090612205614if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20090612205614/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20090612205614/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20090612205614/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20090612205614/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20090612205614/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20090612205614/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20090612205614/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20090612205614/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090612205614/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090612205614/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20090612205614im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20090612205614/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20090612205614/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20090612205614/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20090612205614/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20090612205614/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20090612205614/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20090612205614/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20090612205614/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20090612205614im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20090612205614/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20090612205614/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20090612205614/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20090612205614js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 20:56:14 Jun 12, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:20:55 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
