
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
文字列の反転(括弧の対応を保存)
DouKaku? </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20081202041830cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20081202041830cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20081202041830cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20081202041830/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20081202041830/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20081202041830js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20081202041830js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20081202041830js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20081202041830js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app1.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/70\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "2";
var displayMonth = "Dec";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/70/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20081202041830" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080406015532/http://ja.doukaku.org/70/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="6 Apr 2008"><strong>APR</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 4:18:30 Dec 2, 2008">DEC</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jan
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080406015532/http://ja.doukaku.org/70/nested/" title="1:55:32 Apr 6, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 4:18:30 Dec 2, 2008">2</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20070513180302/http://ja.doukaku.org/70/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="13 May 2007"><strong>2007</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 4:18:30 Dec 2, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20081202041830*/http://ja.doukaku.org/70/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>4 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 2 Dec 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000000_2008:11:010100000001_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20081202041830/http://ja.doukaku.org/">DouKaku?</a><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png' alt=challenge>
<a href="/web/20081202041830/http://ja.doukaku.org/70/">文字列の反転(括弧の対応を保存)</a>
</h2>

    





<div class="comment" id="comment3450">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3450/">#3450</a>(<script language="JavaScript">print_time(new Date("2007/10/18 06:13 GMT"));</script><noscript>2007/10/18 06:13 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>与えられた文字列を前後反転する関数 reverseString2 を書いてください。
ただし、reverseString2 は単純に文字列を反転するのではなく、括弧の対応
を保存するようにしてください。

以前のお題で作成した単純に与えられた文字列を単純に前後反転したもの返す
reverseString では

  reverseString("文字列(もじれつ)の反転(はんてん)") 
    → ")んてんは(転反の)つれじも(列字文"

のように括弧の対応は保存されませんが、reverseString2 では

  reverseString2("文字列(もじれつ)の反転(はんてん)")
    → "(んてんは)転反の(つれじも)列字文"

のように括弧の対応が保存されます。
括弧文字は、'('と')'、'{'と'}'、'['と']'で、それぞれASCII文字と仮定し
てください。

  reverseString2("対応[の{とれている(さまざまな)括弧}の(例)]です。")
    → "。すで[(例)の{弧括(なまざまさ)るいてれと}の]応対"

入力文字列では対応の取れている括弧の内側には対応の取れない括弧文字はな
いと解釈してください。たとえば、

  reverseString2("これ(は(対応のとれていない)括弧がある例です。")
    → "。すで例るあが弧括(いないてれとの応対)は(れこ"

次のような場合は対応のとれている括弧はないという解釈になります。

  reverseString2("これ(も{対応の)とれていない}括弧の例です")
    → "。すで例の弧括}いないてれと)の応対{も(れこ"

日本語対応にする場合の文字のエンコーディングは実装側で都合のよいように
仮定してください。日本語対応であることは望ましいですが、必須ではありま
せん。 

---
このお題はnobsunさんに投稿いただきました。ご協力ありがとうございます。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3450/addtag/" class="addtag" id="addtag_3450">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3450"
  >-</span><span
  class="button yellow"
  id="rating_z_3450"
  >0</span><span 
  class="button green"
  id="rating_p_3450"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3450/">
  reply
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20081202041830/http://ja.doukaku.org/70/post_comment/">
post comment
</a>
</div>


<h2>Posted feedbacks - Nested</h2>
<a href="/web/20081202041830/http://ja.doukaku.org/70/flatten/">Flatten</a> 
<a href="/web/20081202041830/http://ja.doukaku.org/70/">Hidden</a> 


  

  
    





<div class="comment" id="comment3504">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/433/" target="_top">dpp</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3504/">#3504</a>(<script language="JavaScript">print_time(new Date("2007/10/23 07:01 GMT"));</script><noscript>2007/10/23 07:01 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>エレガントでない気もしますが一応例示された通りの変換ができます。

＞reverseString2("これ(も{対応の)とれていない}括弧の例です")
＞　→ "。すで例の弧括}いないてれと)の応対{も(れこ"
句点が抜けてますね。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre><span class="c"># coding: shift_jis</span>

<span class="k">def</span> <span class="nf">reverseString2</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">coding</span> <span class="o">=</span> <span class="s">&#39;shift_jis&#39;</span><span class="p">):</span>
    <span class="n">s</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">unicode</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">coding</span><span class="p">))</span>
    <span class="n">length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
    <span class="n">stack</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">pairs</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">dic</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;)&#39;</span><span class="p">:</span> <span class="s">&#39;(&#39;</span><span class="p">,</span> <span class="s">&#39;}&#39;</span><span class="p">:</span> <span class="s">&#39;{&#39;</span><span class="p">,</span> <span class="s">&#39;]&#39;</span><span class="p">:</span> <span class="s">&#39;[&#39;</span><span class="p">}</span>
    
    <span class="c"># 対応する括弧をリストアップ</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">stack</span> <span class="ow">and</span> <span class="n">dic</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]:</span>
            <span class="n">pairs</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="n">i</span><span class="p">))</span>
            <span class="n">stack</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
        <span class="k">elif</span> <span class="n">c</span> <span class="ow">in</span> <span class="s">&#39;({[&#39;</span><span class="p">:</span>
            <span class="n">stack</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">i</span><span class="p">,</span> <span class="n">c</span><span class="p">))</span>
    
    <span class="n">s</span> <span class="o">=</span> <span class="n">s</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
    
    <span class="k">for</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span> <span class="ow">in</span> <span class="n">pairs</span><span class="p">:</span>
        <span class="n">start</span><span class="p">,</span> <span class="n">end</span> <span class="o">=</span> <span class="n">length</span> <span class="o">-</span> <span class="n">start</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">length</span> <span class="o">-</span> <span class="n">end</span> <span class="o">-</span> <span class="mi">1</span>
        <span class="n">s</span><span class="p">[</span><span class="n">start</span><span class="p">],</span> <span class="n">s</span><span class="p">[</span><span class="n">end</span><span class="p">]</span> <span class="o">=</span> <span class="n">s</span><span class="p">[</span><span class="n">end</span><span class="p">],</span> <span class="n">s</span><span class="p">[</span><span class="n">start</span><span class="p">]</span>
    
    <span class="k">return</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">coding</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">test</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">answer</span><span class="p">):</span>
    <span class="n">s</span> <span class="o">=</span> <span class="n">reverseString2</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
    <span class="k">print</span> <span class="p">(</span><span class="n">s</span> <span class="o">==</span> <span class="n">answer</span><span class="p">)</span> <span class="ow">and</span> <span class="s">&#39;ok!&#39;</span> <span class="ow">or</span> <span class="n">s</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">test</span><span class="p">(</span><span class="s">&quot;文字列(もじれつ)の反転(はんてん)&quot;</span><span class="p">,</span> <span class="s">&quot;(んてんは)転反の(つれじも)列字文&quot;</span><span class="p">)</span>
    <span class="n">test</span><span class="p">(</span><span class="s">&quot;対応[の{とれている(さまざまな)括弧}の(例)]です。&quot;</span><span class="p">,</span> <span class="s">&quot;。すで[(例)の{弧括(なまざまさ)るいてれと}の]応対&quot;</span><span class="p">)</span>
    <span class="n">test</span><span class="p">(</span><span class="s">&quot;これ(は(対応のとれていない)括弧がある例です。&quot;</span><span class="p">,</span> <span class="s">&quot;。すで例るあが弧括(いないてれとの応対)は(れこ&quot;</span><span class="p">)</span>
    <span class="n">test</span><span class="p">(</span><span class="s">&quot;これ(も{対応の)とれていない}括弧の例です。&quot;</span><span class="p">,</span>  <span class="s">&quot;。すで例の弧括}いないてれと)の応対{も(れこ&quot;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3504/addtag/" class="addtag" id="addtag_3504">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3504/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3504/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3504"
  >-</span><span
  class="button yellow"
  id="rating_z_3504"
  >0</span><span 
  class="button green"
  id="rating_p_3504"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081202041830/http://ja.doukaku.org/comment/3504/">
    1
    reply
  </a>

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3504/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3529">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/433/" target="_top">dpp</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3529/">#3529</a>(<script language="JavaScript">print_time(new Date("2007/10/26 08:29 GMT"));</script><noscript>2007/10/26 08:29 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>投稿する場所間違えるわ、張りなおした際に間違えたコード張るわ、
括弧の交換を後でやる意味が無いわと散々でした。自分慌てすぎ。
以降はもっと落ち着いて投稿したいと思います･･･</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">reverseString2</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">coding</span> <span class="o">=</span> <span class="s">&#39;shift_jis&#39;</span><span class="p">):</span>
    <span class="n">s</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">unicode</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">coding</span><span class="p">))</span>
    <span class="n">stack</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">dic</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;)&#39;</span><span class="p">:</span> <span class="s">&#39;(&#39;</span><span class="p">,</span> <span class="s">&#39;}&#39;</span><span class="p">:</span> <span class="s">&#39;{&#39;</span><span class="p">,</span> <span class="s">&#39;]&#39;</span><span class="p">:</span> <span class="s">&#39;[&#39;</span><span class="p">}</span>
    
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">stack</span> <span class="ow">and</span> <span class="n">dic</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]:</span>
            <span class="n">s</span><span class="p">[</span><span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]],</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">s</span><span class="p">[</span><span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]]</span>
            <span class="n">stack</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
        <span class="k">elif</span> <span class="n">c</span> <span class="ow">in</span> <span class="s">&#39;(){}[]&#39;</span><span class="p">:</span>
            <span class="n">stack</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">i</span><span class="p">,</span> <span class="n">c</span><span class="p">))</span>
    
    <span class="k">return</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">s</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">coding</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3529/addtag/" class="addtag" id="addtag_3529">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3529/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3529/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3529"
  >-</span><span
  class="button yellow"
  id="rating_z_3529"
  >0</span><span 
  class="button green"
  id="rating_p_3529"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081202041830/http://ja.doukaku.org/comment/3504/"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081202041830/http://ja.doukaku.org/comment/3529/root/"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3529/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment3505">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/343/" target="_top">matyr</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3505/">#3505</a>(<script language="JavaScript">print_time(new Date("2007/10/23 17:10 GMT"));</script><noscript>2007/10/23 17:10 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  &nbsp;似た問題があなごるにありましたね。&nbsp;
	</div>
	
	<p class="link">
	  see: <a href="/web/20081202041830/http://golf.shinh.org/p.rb?Mirroring+Character">anarchy golf - Mirroring Characters</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">reverseString2</span><span class="p">(</span><span class="nx">$</span><span class="p">){</span>
  <span class="k">var</span> <span class="nx">p</span> <span class="o">=</span> <span class="s1">&#39;([{（［｛)]}）］｝&#39;</span><span class="o">,</span> <span class="nx">n</span> <span class="o">=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">length</span> <span class="o">/</span> <span class="mi">2</span><span class="o">,</span> <span class="nx">s</span> <span class="o">=</span> <span class="p">[]</span><span class="o">,</span> <span class="nx">i</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="nx">x</span><span class="o">,</span> <span class="nx">t</span><span class="o">;</span>
  <span class="k">for</span><span class="p">(</span><span class="nx">$</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">);</span> <span class="nx">$</span><span class="p">[</span><span class="o">++</span><span class="nx">i</span><span class="p">];)</span> <span class="k">if</span><span class="p">(</span><span class="o">~</span><span class="p">(</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">$</span><span class="p">[</span><span class="nx">i</span><span class="p">])))</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">x</span> <span class="o">&lt;</span> <span class="nx">n</span><span class="p">)</span> <span class="nx">s</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span> <span class="nx">x</span><span class="o">:</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">n</span><span class="o">,</span> <span class="nx">i</span><span class="o">:</span> <span class="nx">i</span> <span class="p">});</span>
    <span class="k">else</span> <span class="k">if</span><span class="p">((</span><span class="nx">t</span> <span class="o">=</span> <span class="nx">s</span><span class="p">.</span><span class="nx">pop</span><span class="p">())</span> <span class="o">&amp;&amp;</span> <span class="nx">t</span><span class="p">.</span><span class="nx">x</span> <span class="o">==</span> <span class="nx">x</span><span class="p">)</span> <span class="nx">$</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="o">,</span> <span class="nx">$</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">x</span> <span class="o">-</span> <span class="nx">n</span><span class="p">);</span>
  <span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">reverse</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3505/addtag/" class="addtag" id="addtag_3505">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3505/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3505/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3505"
  >-</span><span
  class="button yellow"
  id="rating_z_3505"
  >0</span><span 
  class="button green"
  id="rating_p_3505"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3505/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3506">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3506/">#3506</a>(<script language="JavaScript">print_time(new Date("2007/10/23 17:40 GMT"));</script><noscript>2007/10/23 17:40 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>(cons x knil)のあたりが汚いので、もうちょっと何とかなるとは思うのですが…
実行結果：
(んてんは)転反の(つれじも)列字文
。すで[(例)の{弧括(なまざまさ)るいてれと}の]応対
。すで例るあが弧括(いないてれとの応対)は(れこ
すで例の弧括}いないてれと)の応対{も(れこ
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">text</span><span class="o">.</span><span class="nv">tree</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="nv">parens</span> <span class="o">&#39;</span><span class="p">((</span><span class="sc">#\)</span> <span class="o">.</span> <span class="sc">#\(</span><span class="p">)</span> <span class="p">(</span><span class="o">#</span><span class="err">\}</span> <span class="o">.</span> <span class="o">#</span><span class="err">\{</span><span class="p">)</span> <span class="p">(</span><span class="o">#</span><span class="err">\]</span> <span class="o">.</span> <span class="o">#</span><span class="err">\[</span><span class="p">)))</span>
<span class="p">(</span><span class="k">define </span><span class="nv">openp</span> <span class="p">(</span><span class="nb">append </span><span class="p">(</span><span class="nb">map </span><span class="nv">car</span> <span class="nv">parens</span><span class="p">)</span> <span class="p">(</span><span class="nb">map </span><span class="nv">cdr</span> <span class="nv">parens</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">spl</span> <span class="nv">x</span> <span class="nv">l</span><span class="p">)</span>
  <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nb">null? </span><span class="nv">l</span><span class="p">)</span> <span class="p">(</span><span class="nb">values </span><span class="no">#f</span> <span class="no">#f</span><span class="p">))</span>
        <span class="p">((</span><span class="nb">eqv? </span><span class="nv">x</span> <span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">))</span> <span class="p">(</span><span class="nb">values </span><span class="p">()</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">l</span><span class="p">)))</span>
        <span class="p">((</span><span class="nb">memv </span><span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">)</span> <span class="nv">openp</span><span class="p">)</span> <span class="p">(</span><span class="nb">values </span><span class="no">#f</span> <span class="no">#f</span><span class="p">))</span>
        <span class="p">(</span><span class="k">else </span><span class="p">(</span><span class="nf">receive</span> <span class="p">(</span><span class="nf">head</span> <span class="nv">tail</span><span class="p">)</span> <span class="p">(</span><span class="nf">spl</span> <span class="nv">x</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">l</span><span class="p">))</span>
                    <span class="p">(</span><span class="nb">values </span><span class="p">(</span><span class="k">if </span><span class="nv">head</span> <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">)</span> <span class="nv">head</span><span class="p">)</span> <span class="no">#f</span><span class="p">)</span> <span class="nv">tail</span><span class="p">)))))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">reverse-string2</span> <span class="nv">l</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">tree-&gt;string</span>
    <span class="p">(</span><span class="nf">fold</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x</span> <span class="nv">knil</span><span class="p">)</span>
            <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nb">assv </span><span class="nv">x</span> <span class="nv">parens</span><span class="p">)</span> <span class="nv">=&gt;</span>
                   <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">pair</span><span class="p">)</span>
                     <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nf">spl</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">pair</span><span class="p">)</span> <span class="nv">knil</span><span class="p">)</span>
                            <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x</span> <span class="nv">_</span><span class="p">)</span> <span class="nv">x</span><span class="p">)</span>
                            <span class="k">=&gt; </span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">body</span> <span class="nv">rest</span><span class="p">)</span>
                                 <span class="p">(</span><span class="nb">cons </span><span class="o">`</span><span class="p">(</span><span class="o">,</span><span class="p">(</span><span class="nb">cdr </span><span class="nv">pair</span><span class="p">)</span> <span class="o">,@</span><span class="nv">body</span> <span class="o">,</span><span class="p">(</span><span class="nb">car </span><span class="nv">pair</span><span class="p">))</span> <span class="nv">rest</span><span class="p">)))</span>
                           <span class="p">(</span><span class="k">else </span><span class="p">(</span><span class="nb">cons </span><span class="nv">x</span> <span class="nv">knil</span><span class="p">)))))</span>
                  <span class="p">(</span><span class="k">else </span><span class="p">(</span><span class="nb">cons </span><span class="nv">x</span> <span class="nv">knil</span><span class="p">))))</span>
          <span class="p">()</span> <span class="p">(</span><span class="nb">string-&gt;list </span><span class="nv">l</span><span class="p">))))</span>

<span class="p">(</span><span class="nb">for-each </span><span class="p">(</span><span class="nf">compose</span> <span class="nv">print</span> <span class="nv">reverse-string2</span><span class="p">)</span>
          <span class="o">&#39;</span><span class="p">(</span><span class="s">&quot;文字列(もじれつ)の反転(はんてん)&quot;</span>
            <span class="s">&quot;対応[の{とれている(さまざまな)括弧}の(例)]です。&quot;</span>
            <span class="s">&quot;これ(は(対応のとれていない)括弧がある例です。&quot;</span>
            <span class="s">&quot;これ(も{対応の)とれていない}括弧の例です&quot;</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3506/addtag/" class="addtag" id="addtag_3506">Tags</a>:
	
    
    <a href="/web/20081202041830/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3506/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3506/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3506"
  >-</span><span
  class="button yellow"
  id="rating_z_3506"
  >0</span><span 
  class="button green"
  id="rating_p_3506"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3506/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3507">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3507/">#3507</a>(<script language="JavaScript">print_time(new Date("2007/10/24 00:43 GMT"));</script><noscript>2007/10/24 00:43 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Squeak&nbsp;Smalltalk&nbsp;で。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre>| parentheses reverseString2 offset |
parentheses := &#39;({[)}]&#39;.
offset := parentheses size // 2.
reverseString2 := [:str |
    | marks |
    marks := OrderedCollection new.
    str copy doWithIndex: [:chr :idx |
        | type |
        type := parentheses indexOf: chr.
        type &gt; offset ifFalse: [type &gt; 0 ifTrue: [marks add: idx; add: type]] ifTrue: [
            (marks notEmpty and: [marks removeLast + offset = type])
                ifTrue: [str swap: idx with: marks removeLast]
                ifFalse: [marks removeLast]]].
    str reversed].

reverseString2 value: &#39;文字列(もじれつ)の反転(はんてん)&#39;.
   &quot;=&gt; &#39;(んてんは)転反の(つれじも)列字文&#39; &quot;
reverseString2 value: &#39;対応[の{とれている(さまざまな)括弧}の(例)]です。&#39;.
   &quot;=&gt; &#39;。すで[(例)の{弧括(なまざまさ)るいてれと}の]応対&#39; &quot;
reverseString2 value: &#39;これ(は(対応のとれていない)括弧がある例です。&#39;.
   &quot;=&gt; &#39;。すで例るあが弧括(いないてれとの応対)は(れこ&#39; &quot;
reverseString2 value: &#39;これ(も{対応の)とれていない}括弧の例です。&#39;.
   &quot;=&gt; &#39;。すで例の弧括}いないてれと)の応対{も(れこ&#39; &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3507/addtag/" class="addtag" id="addtag_3507">Tags</a>:
	
    
    <a href="/web/20081202041830/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3507/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3507/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3507"
  >-</span><span
  class="button yellow"
  id="rating_z_3507"
  >0</span><span 
  class="button green"
  id="rating_p_3507"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3507/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3508">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/437/" target="_top">mamamoto</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3508/">#3508</a>(<script language="JavaScript">print_time(new Date("2007/10/24 03:46 GMT"));</script><noscript>2007/10/24 03:46 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>全般に無難なコードとおもいますが
stk.popのところはちょっと感じ悪いかも。
つーかelsifでいろいろやりすぎ感がいやなのかなあ。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="n">K</span> <span class="o">=</span> <span class="o">[[</span><span class="s1">&#39;(&#39;</span><span class="p">,</span> <span class="s1">&#39;)&#39;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s1">&#39;[&#39;</span><span class="p">,</span> <span class="s1">&#39;]&#39;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s1">&#39;{&#39;</span><span class="p">,</span> <span class="s1">&#39;}&#39;</span><span class="o">]]</span>
<span class="no">OPN</span><span class="p">,</span> <span class="no">CLS</span> <span class="o">=</span> <span class="n">K</span><span class="o">.</span><span class="n">transpose</span>

<span class="k">def</span> <span class="nf">reverseString2</span><span class="p">(</span><span class="n">org</span><span class="p">)</span>
  <span class="n">str</span> <span class="o">=</span> <span class="n">org</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)</span>
  <span class="n">stk</span> <span class="o">=</span> <span class="o">[]</span>

  <span class="n">str</span><span class="o">.</span><span class="n">each_with_index</span><span class="p">{</span><span class="o">|</span><span class="n">c</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span>
    <span class="k">if</span> <span class="n">ki</span> <span class="o">=</span> <span class="no">OPN</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
      <span class="n">stk</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="o">[</span><span class="n">i</span><span class="p">,</span> <span class="n">ki</span><span class="o">]</span><span class="p">)</span>
    <span class="k">elsif</span> <span class="n">ki</span> <span class="o">=</span> <span class="no">CLS</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="ow">and</span> <span class="p">(</span><span class="n">j</span><span class="p">,</span> <span class="n">kj</span> <span class="o">=</span> <span class="n">stk</span><span class="o">.</span><span class="n">pop</span><span class="p">)</span> <span class="ow">and</span> <span class="n">ki</span> <span class="o">==</span> <span class="n">kj</span>
      <span class="n">str</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="no">CLS</span><span class="o">[</span><span class="n">ki</span><span class="o">]</span>
      <span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="no">OPN</span><span class="o">[</span><span class="n">kj</span><span class="o">]</span>
    <span class="k">end</span>
  <span class="p">}</span>

  <span class="n">str</span><span class="o">.</span><span class="n">reverse</span><span class="o">.</span><span class="n">join</span>
<span class="k">end</span>

<span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
  <span class="k">def</span> <span class="nf">test</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
    <span class="nb">p</span> <span class="n">a</span><span class="p">,</span> <span class="n">reverseString2</span><span class="p">(</span><span class="n">a</span><span class="p">),</span> <span class="n">b</span><span class="p">,</span> <span class="n">reverseString2</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">==</span> <span class="n">b</span>
  <span class="k">end</span>

  <span class="nb">test</span><span class="p">(</span><span class="s2">&quot;文字列(もじれつ)の反転(はんてん)&quot;</span><span class="p">,</span> <span class="s2">&quot;(んてんは)転反の(つれじも)列字文&quot;</span><span class="p">)</span>
  <span class="nb">test</span><span class="p">(</span><span class="s2">&quot;対応[の{とれている(さまざまな)括弧}の(例)]です。&quot;</span><span class="p">,</span> <span class="s2">&quot;。すで[(例)の{弧括(なまざまさ)るいてれと}の]応対&quot;</span><span class="p">)</span>
  <span class="nb">test</span><span class="p">(</span><span class="s2">&quot;これ(は(対応のとれていない)括弧がある例です。&quot;</span><span class="p">,</span> <span class="s2">&quot;。すで例るあが弧括(いないてれとの応対)は(れこ&quot;</span><span class="p">)</span>
  <span class="nb">test</span><span class="p">(</span><span class="s2">&quot;これ(も{対応の)とれていない}括弧の例です。&quot;</span><span class="p">,</span>  <span class="s2">&quot;。すで例の弧括}いないてれと)の応対{も(れこ&quot;</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3508/addtag/" class="addtag" id="addtag_3508">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3508/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3508/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3508"
  >-</span><span
  class="button yellow"
  id="rating_z_3508"
  >0</span><span 
  class="button green"
  id="rating_p_3508"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3508/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3510">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/479/" target="_top">tsuwabuki</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3510/">#3510</a>(<script language="JavaScript">print_time(new Date("2007/10/24 06:55 GMT"));</script><noscript>2007/10/24 06:55 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>もっときれいに書けそうな気がします。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre><span class="nv">reverseString2</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">reverseString2</span> <span class="nv">str</span> <span class="o">=</span> <span class="kr">let</span> <span class="p">(</span><span class="nv">e</span><span class="p">,</span> <span class="nv">s</span><span class="p">)</span> <span class="o">=</span> <span class="nv">foldl</span> <span class="nv">f</span> <span class="p">([],[])</span> <span class="nv">str</span> <span class="kr">in</span> <span class="nv">foldl</span> <span class="p">(</span><span class="o">\</span><span class="nv">s1</span> <span class="p">(</span><span class="nv">s2</span><span class="p">,</span><span class="nv">c</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">s2</span><span class="o">++</span><span class="nv">c</span><span class="o">:</span><span class="nv">s1</span><span class="p">)</span> <span class="nv">s</span> <span class="nv">e</span>
    <span class="kr">where</span> <span class="nv">f</span> <span class="p">(</span><span class="nv">e</span><span class="p">,</span> <span class="nv">s</span><span class="p">)</span> <span class="nv">c</span>
              <span class="o">|</span> <span class="nv">c</span> <span class="p">`</span><span class="nv">elem</span><span class="p">`</span> <span class="s">&quot;({[&quot;</span> <span class="o">=</span> <span class="p">(([],</span> <span class="nv">c</span><span class="p">)</span><span class="o">:</span><span class="nv">e</span><span class="p">,</span> <span class="nv">s</span><span class="p">)</span>
              <span class="o">|</span> <span class="nv">c</span> <span class="p">`</span><span class="nv">elem</span><span class="p">`</span> <span class="s">&quot;)}]&quot;</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">e</span> <span class="kr">of</span>
                                   <span class="p">(</span><span class="nv">es1</span><span class="p">,</span> <span class="nv">p1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nv">es2</span><span class="p">,</span> <span class="nv">p2</span><span class="p">)</span><span class="o">:</span><span class="nv">rest</span>
                                        <span class="o">|</span> <span class="nv">c</span> <span class="o">==</span> <span class="nv">opposite</span> <span class="nv">p1</span> <span class="o">-&gt;</span> <span class="p">((</span><span class="nv">p1</span><span class="o">:</span><span class="nv">es1</span><span class="o">++</span><span class="nv">c</span><span class="o">:</span><span class="nv">es2</span><span class="p">,</span> <span class="nv">p2</span><span class="p">)</span><span class="o">:</span><span class="nv">rest</span><span class="p">,</span> <span class="nv">s</span><span class="p">)</span>
                                        <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">-&gt;</span> <span class="p">((</span><span class="nv">c</span><span class="o">:</span><span class="nv">es1</span><span class="o">++</span><span class="nv">p1</span><span class="o">:</span><span class="nv">es2</span><span class="p">,</span> <span class="nv">p2</span><span class="p">)</span><span class="o">:</span><span class="nv">rest</span><span class="p">,</span> <span class="nv">s</span><span class="p">)</span>
                                   <span class="p">[(</span><span class="nv">es</span><span class="p">,</span> <span class="nv">p</span><span class="p">)]</span>
                                       <span class="o">|</span> <span class="nv">c</span> <span class="o">==</span> <span class="nv">opposite</span> <span class="nv">p</span> <span class="o">-&gt;</span> <span class="p">([],</span> <span class="nv">p</span><span class="o">:</span><span class="nv">es</span><span class="o">++</span><span class="nv">c</span><span class="o">:</span><span class="nv">s</span><span class="p">)</span>
                                       <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">-&gt;</span> <span class="p">([],</span> <span class="nv">c</span><span class="o">:</span><span class="nv">es</span><span class="o">++</span><span class="nv">p</span><span class="o">:</span><span class="nv">s</span><span class="p">)</span>
                                   <span class="p">[]</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">e</span><span class="p">,</span> <span class="nv">c</span><span class="o">:</span><span class="nv">s</span><span class="p">)</span>
              <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">e</span> <span class="kr">of</span>
                              <span class="p">(</span><span class="nv">es</span><span class="p">,</span> <span class="nv">p</span><span class="p">)</span><span class="o">:</span><span class="nv">rest</span> <span class="o">-&gt;</span> <span class="p">((</span><span class="nv">c</span><span class="o">:</span><span class="nv">es</span><span class="p">,</span> <span class="nv">p</span><span class="p">)</span><span class="o">:</span><span class="nv">rest</span><span class="p">,</span> <span class="nv">s</span><span class="p">)</span>
                              <span class="nv">otherwise</span>    <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">e</span><span class="p">,</span> <span class="nv">c</span><span class="o">:</span><span class="nv">s</span><span class="p">)</span>
          <span class="nv">opposite</span> <span class="sc">&#39;(&#39;</span> <span class="o">=</span> <span class="sc">&#39;)&#39;</span>
          <span class="nv">opposite</span> <span class="sc">&#39;)&#39;</span> <span class="o">=</span> <span class="sc">&#39;(&#39;</span>
          <span class="nv">opposite</span> <span class="sc">&#39;{&#39;</span> <span class="o">=</span> <span class="sc">&#39;}&#39;</span>
          <span class="nv">opposite</span> <span class="sc">&#39;}&#39;</span> <span class="o">=</span> <span class="sc">&#39;{&#39;</span>
          <span class="nv">opposite</span> <span class="sc">&#39;[&#39;</span> <span class="o">=</span> <span class="sc">&#39;]&#39;</span>
          <span class="nv">opposite</span> <span class="sc">&#39;]&#39;</span> <span class="o">=</span> <span class="sc">&#39;[&#39;</span>
          <span class="nv">opposite</span> <span class="nv">c</span> <span class="o">=</span> <span class="nv">c</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3510/addtag/" class="addtag" id="addtag_3510">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3510/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3510/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3510"
  >-</span><span
  class="button yellow"
  id="rating_z_3510"
  >0</span><span 
  class="button green"
  id="rating_p_3510"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3510/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3511">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3511/">#3511</a>(<script language="JavaScript">print_time(new Date("2007/10/24 07:01 GMT"));</script><noscript>2007/10/24 07:01 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Haskell練習中。
あまり美しくないなあ。
ghciで日本語はどう使うのかなあ。

実行例
*Main&gt; reverseString2 "mojiretsu(MOJIRETSU) no hanten(HANTEN)."
".(NETNAH)netnah on (USTERIJOM)usterijom"
*Main&gt; reverseString2 "taiou[no{toreteiru(samazamana)kakko}no(rei)]desu."
".used[(ier)on{okkak(anamazamas)urieterot}on]uoiat"
*Main&gt; reverseString2 "kore(ha(taiounotoreteinai)kakkonoarureidesu."
".usedieruraonokkak(ianieterotonuoiat)ah(erok"
*Main&gt; reverseString2 "kore(mo{taiouno)toreteinai}kakkonoreidesu."
".usedieronokkak}ianieterot)onuoiat{om(erok"
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre><span class="nv">parens</span> <span class="o">=</span> <span class="p">[(</span><span class="sc">&#39;(&#39;</span><span class="p">,</span><span class="sc">&#39;)&#39;</span><span class="p">),</span> <span class="p">(</span><span class="sc">&#39;[&#39;</span><span class="p">,</span><span class="sc">&#39;]&#39;</span><span class="p">),</span> <span class="p">(</span><span class="sc">&#39;{&#39;</span><span class="p">,</span><span class="sc">&#39;}&#39;</span><span class="p">)]</span>

<span class="nv">isOpener</span> <span class="nv">c</span> <span class="o">=</span> <span class="nv">elem</span> <span class="nv">c</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">fst</span> <span class="nv">parens</span>
<span class="nv">isCloser</span> <span class="nv">c</span> <span class="o">=</span> <span class="nv">elem</span> <span class="nv">c</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">snd</span> <span class="nv">parens</span>

<span class="nv">closer</span> <span class="nv">p</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">lookup</span> <span class="nv">p</span> <span class="nv">parens</span> <span class="kr">of</span>
             <span class="n">Just</span> <span class="nv">q</span> <span class="o">-&gt;</span> <span class="nv">q</span>
             <span class="n">Nothing</span> <span class="o">-&gt;</span> <span class="nv">error</span> <span class="s">&quot;huh?&quot;</span>

<span class="nv">revs</span> <span class="p">[]</span> <span class="nv">rs</span> <span class="nv">zs</span> <span class="o">=</span> <span class="p">([],</span><span class="nv">rs</span><span class="o">++</span><span class="nv">zs</span><span class="p">)</span>
<span class="nv">revs</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="nv">rs</span> <span class="nv">zs</span>
  <span class="o">|</span> <span class="nv">isOpener</span> <span class="nv">x</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">revs</span> <span class="nv">xs</span> <span class="p">[]</span> <span class="p">[</span><span class="nv">x</span><span class="p">]</span> <span class="kr">of</span>
                   <span class="p">(</span><span class="nv">xs&#39;</span><span class="p">,</span><span class="nv">rs&#39;</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">revs</span> <span class="nv">xs&#39;</span> <span class="p">(</span><span class="nv">rs&#39;</span><span class="o">++</span><span class="nv">rs</span><span class="p">)</span> <span class="nv">zs</span>
  <span class="o">|</span> <span class="nv">isCloser</span> <span class="nv">x</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">zs</span> <span class="kr">of</span>
                   <span class="p">[</span><span class="nv">z</span><span class="p">]</span> <span class="o">|</span> <span class="nv">x</span> <span class="o">==</span> <span class="nv">closer</span> <span class="nv">z</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">xs</span><span class="p">,</span> <span class="p">[</span><span class="nv">z</span><span class="p">]</span><span class="o">++</span><span class="nv">rs</span><span class="o">++</span><span class="p">[</span><span class="nv">x</span><span class="p">])</span>
                   <span class="kr">_</span>                   <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">xs</span><span class="p">,</span> <span class="p">[</span><span class="nv">x</span><span class="p">]</span><span class="o">++</span><span class="nv">rs</span><span class="o">++</span><span class="nv">zs</span><span class="p">)</span>
  <span class="o">|</span> <span class="nv">otherwise</span>  <span class="o">=</span> <span class="nv">revs</span> <span class="nv">xs</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">rs</span><span class="p">)</span> <span class="nv">zs</span>

<span class="nv">reverseString2</span> <span class="nv">s</span> <span class="o">=</span> <span class="nv">snd</span> <span class="o">$</span> <span class="nv">revs</span> <span class="nv">s</span> <span class="p">[]</span> <span class="p">[]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3511/addtag/" class="addtag" id="addtag_3511">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3511/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3511/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3511"
  >-</span><span
  class="button yellow"
  id="rating_z_3511"
  >0</span><span 
  class="button green"
  id="rating_p_3511"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081202041830/http://ja.doukaku.org/comment/3511/">
    1
    reply
  </a>

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3511/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3513">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3513/">#3513</a>(<script language="JavaScript">print_time(new Date("2007/10/24 08:37 GMT"));</script><noscript>2007/10/24 08:37 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #bfffbf;">4/4=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ghcで日本語を正しく扱うには，いまのところ入出力の際に UTF8 &lt;-&gt; 内部コード
という変換をする必要があります．この変換を行うモジュールは以前自前で書いた
ことがあるのですが，今は Hackage DB に登録されています．

http://hackage.haskell.org/cgi-bin/hackage-scripts/package/utf8-string-0.2

インストール手順は以下のとおりです．

$ wget http://hackage.haskell.org/packages/archive/utf8-string/0.2/utf8-string-0.2.tar.gz
$ tar xf utf8-string-0.2.tar.gz
$ cd utf8-string-0.2
$ runhaskell Setup.lhs configure
$ runhaskell Setup.lhs build
$ sudo runhaskell Setup.lhs install

これで Codec.Binary.UTF8.String と System.IO.UTF8 モジュールが使えるように
なります．

$ ghc-pkg -l | grep utf8 

とやるとこのパッケージがインストールされたかどうか確認できます．
ghci には直接 UTF8 の文字列リテラルを入力できない(orz)ので，ソースコードに
定数として仕込んでおく必要があります．ソースコードのエンコーディングを
UTF8 にして

sample0 = "文字列(もじれつ)の反転(はんてん)"
sample1 = "対応[の{とれている(さまざまな)括弧}の(例)]です。"
sample2 = "これ(は(対応のとれてない)括弧がある例です。"
sample3 = "これ(も{対応の)とれていない}括弧の例です。"

というのをソースコード(3511.hs)にいれておきますそうしておいて，
- ghci を起動．
- System.IO.UTF8 を追加．
- 出力用 wrapper を追加．
- wrapper をつかって結果を表示

$ ghci -v0 3511.hs
*Main&gt; :m + System.IO.UTF8
*Main System.IO.UTF8&gt; let wrapper = (System.IO.UTF8.putStrLn .)
*Main System.IO.UTF8&gt; wrapper reverseString2 sample0
(んてんは)転反の(つれじも)列字文
*Main System.IO.UTF8&gt; wrapper reverseString2 sample1
。すで[(例)の{弧括(なまざまさ)るいてれと}の]応対
*Main System.IO.UTF8&gt; wrapper reverseString2 sample2
。すで例るあが弧括(いなてれとの応対)は(れこ
*Main System.IO.UTF8&gt; wrapper reverseString2 sample3
。すで例の弧括}いないてれと)の応対{も(れこ

ああ面倒 ^^;
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3513/addtag/" class="addtag" id="addtag_3513">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #bfffbf;"
  >4/4=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3513"
  >-</span><span
  class="button yellow"
  id="rating_z_3513"
  >0</span><span 
  class="button green"
  id="rating_p_3513"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081202041830/http://ja.doukaku.org/comment/3511/"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081202041830/http://ja.doukaku.org/comment/3513/root/"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3513/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment3512">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/415/" target="_top">yohei</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3512/">#3512</a>(<script language="JavaScript">print_time(new Date("2007/10/24 08:00 GMT"));</script><noscript>2007/10/24 08:00 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
    <span class="k">static</span> <span class="kt">string</span> <span class="nf">reverseString2</span><span class="p">(</span><span class="kt">string</span> <span class="n">s</span><span class="p">)</span> <span class="k">{</span>
        <span class="n">Stack</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">stack</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Stack</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
        <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
        <span class="kt">string</span> <span class="n">paren</span> <span class="p">=</span> <span class="s">&quot;()[]{}&quot;</span><span class="p">;</span>
        
        <span class="k">foreach</span> <span class="p">(</span><span class="kt">char</span> <span class="n">ch</span> <span class="k">in</span> <span class="n">s</span><span class="p">)</span> <span class="k">{</span>
            <span class="kt">int</span> <span class="n">index</span> <span class="p">=</span> <span class="n">paren</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">ch</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">index</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span>                <span class="c">// other</span>
                <span class="n">sb</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">ch</span><span class="p">);</span>
            <span class="k">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">index</span> <span class="p">%</span> <span class="m">2</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span>    <span class="c">// ([{</span>
                <span class="n">stack</span><span class="p">.</span><span class="n">Push</span><span class="p">(</span><span class="n">sb</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
                <span class="n">stack</span><span class="p">.</span><span class="n">Push</span><span class="p">(</span><span class="n">ch</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
                <span class="n">sb</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">sb</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
            <span class="k">}</span> <span class="k">else</span> <span class="k">{</span>                        <span class="c">// )]}</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">stack</span><span class="p">.</span><span class="n">Count</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span>
                  <span class="n">sb</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">ch</span><span class="p">);</span>
                <span class="k">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">stack</span><span class="p">.</span><span class="n">Peek</span><span class="p">()</span> <span class="p">==</span> <span class="n">paren</span><span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="n">index</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">))</span> <span class="k">{</span>
                    <span class="n">sb</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">stack</span><span class="p">.</span><span class="n">Pop</span><span class="p">()).</span><span class="n">Append</span><span class="p">(</span><span class="n">ch</span><span class="p">);</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">stack</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">stack</span><span class="p">.</span><span class="n">Pop</span><span class="p">());</span>
                <span class="k">}</span> <span class="k">else</span> <span class="k">{</span>
                    <span class="n">sb</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">ch</span><span class="p">);</span>
                    <span class="k">while</span> <span class="p">(</span><span class="n">stack</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">stack</span><span class="p">.</span><span class="n">Pop</span><span class="p">());</span>
                <span class="k">}</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">stack</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">stack</span><span class="p">.</span><span class="n">Pop</span><span class="p">());</span>
        
        <span class="k">return</span> <span class="n">sb</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
    <span class="k">}</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">reverseString2</span><span class="p">(</span><span class="s">&quot;文字列(もじれつ)の反転(はんてん)&quot;</span><span class="p">));</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">reverseString2</span><span class="p">(</span><span class="s">&quot;対応[の{とれている(さまざまな)括弧}の(例)]です。&quot;</span><span class="p">));</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">reverseString2</span><span class="p">(</span><span class="s">&quot;これ(は(対応のとれていない)括弧がある例です。&quot;</span><span class="p">));</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">reverseString2</span><span class="p">(</span><span class="s">&quot;これ(も{対応の)とれていない}括弧の例です&quot;</span><span class="p">));</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3512/addtag/" class="addtag" id="addtag_3512">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3512/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3512/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3512"
  >-</span><span
  class="button yellow"
  id="rating_z_3512"
  >0</span><span 
  class="button green"
  id="rating_p_3512"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3512/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment3514">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/136/" target="_top">matarillo</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3514/">#3514</a>(<script language="JavaScript">print_time(new Date("2007/10/24 09:00 GMT"));</script><noscript>2007/10/24 09:00 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffcfcf;">-3/3=-1.00</span></span><a href="/web/20081202041830/http://ja.doukaku.org/70/nested/#comment3514" onClick="$('#comment3514 .comment_content').show()">[open]</a>
  </p>
  <div class="comment_content" style="display: none">
	<div class="comment_body">
	  <pre class='compact'>意図は通じると思いますが</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre><span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="nf">ReverseString2</span><span class="p">(</span><span class="kt">string</span> <span class="n">input</span><span class="p">)</span>
<span class="k">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">input</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
    <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
  <span class="kt">char</span><span class="p">[]</span> <span class="n">buffer</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">char</span><span class="p">[</span><span class="n">input</span><span class="p">.</span><span class="n">Length</span><span class="p">];</span>
  <span class="kt">int</span> <span class="n">sl</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="sc">&#39;(&#39;</span><span class="p">;</span> <span class="c">// 40</span>
  <span class="kt">int</span> <span class="n">sr</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="sc">&#39;)&#39;</span><span class="p">;</span> <span class="c">// 41</span>
  <span class="kt">int</span> <span class="n">ml</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="sc">&#39;{&#39;</span><span class="p">;</span> <span class="c">// 123</span>
  <span class="kt">int</span> <span class="n">mr</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="sc">&#39;}&#39;</span><span class="p">;</span> <span class="c">// 125</span>
  <span class="kt">int</span> <span class="n">ll</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="sc">&#39;[&#39;</span><span class="p">;</span> <span class="c">// 91</span>
  <span class="kt">int</span> <span class="n">lr</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="sc">&#39;]&#39;</span><span class="p">;</span> <span class="c">// 93</span>
  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">buffer</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
  <span class="k">{</span>
    <span class="kt">int</span> <span class="n">c</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="p">==</span> <span class="n">sl</span> <span class="p">||</span> <span class="n">c</span> <span class="p">==</span> <span class="n">sr</span><span class="p">)</span>
      <span class="n">c</span> <span class="p">=</span> <span class="n">sl</span> <span class="p">+</span> <span class="n">sr</span> <span class="p">-</span> <span class="n">c</span><span class="p">;</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="p">==</span> <span class="n">ml</span> <span class="p">||</span> <span class="n">c</span> <span class="p">==</span> <span class="n">mr</span><span class="p">)</span>
      <span class="n">c</span> <span class="p">=</span> <span class="n">ml</span> <span class="p">+</span> <span class="n">mr</span> <span class="p">-</span> <span class="n">c</span><span class="p">;</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="p">==</span> <span class="n">ll</span> <span class="p">||</span> <span class="n">c</span> <span class="p">==</span> <span class="n">lr</span><span class="p">)</span>
      <span class="n">c</span> <span class="p">=</span> <span class="n">ll</span> <span class="p">+</span> <span class="n">lr</span> <span class="p">-</span> <span class="n">c</span><span class="p">;</span>
    <span class="n">buffer</span><span class="p">[</span><span class="n">buffer</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="m">1</span> <span class="p">-</span> <span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="p">(</span><span class="kt">char</span><span class="p">)</span><span class="n">c</span><span class="p">;</span>
  <span class="k">}</span>
  <span class="k">return</span> <span class="k">new</span> <span class="kt">string</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3514/addtag/" class="addtag" id="addtag_3514">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3514/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3514/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffcfcf;"
  >-3/3=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3514"
  >-</span><span
  class="button yellow"
  id="rating_z_3514"
  >0</span><span 
  class="button green"
  id="rating_p_3514"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081202041830/http://ja.doukaku.org/comment/3514/">
    1
    reply
  </a>

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3514/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3515">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/136/" target="_top">matarillo</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3515/">#3515</a>(<script language="JavaScript">print_time(new Date("2007/10/24 09:04 GMT"));</script><noscript>2007/10/24 09:04 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>おっと、これだと対応が取れていないときの動作が不正ですね。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3515/addtag/" class="addtag" id="addtag_3515">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3515"
  >-</span><span
  class="button yellow"
  id="rating_z_3515"
  >0</span><span 
  class="button green"
  id="rating_p_3515"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081202041830/http://ja.doukaku.org/comment/3514/"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081202041830/http://ja.doukaku.org/comment/3515/root/"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3515/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment3516">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3516/">#3516</a>(<script language="JavaScript">print_time(new Date("2007/10/24 12:14 GMT"));</script><noscript>2007/10/24 12:14 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>「鶏を割くに牛刀をもってす」の感はありますが，
パーザを構成してしまうという手もあります．
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="nv">qualified</span> <span class="n">System</span><span class="o">.</span><span class="n">IO</span><span class="o">.</span><span class="n">UTF8</span> <span class="nv">as</span> <span class="n">U</span>
<span class="kr">import</span> <span class="n">Text</span><span class="o">.</span><span class="n">ParserCombinators</span><span class="o">.</span><span class="n">ReadP</span>

<span class="kr">data</span> <span class="n">Kakko</span> <span class="o">=</span> <span class="n">Maru</span> <span class="o">|</span> <span class="n">Nami</span> <span class="o">|</span> <span class="n">Kaku</span>

<span class="kr">data</span> <span class="n">Inline</span> <span class="o">=</span> <span class="n">Plain</span> <span class="n">String</span>
            <span class="o">|</span> <span class="n">Paren</span> <span class="n">Kakko</span> <span class="p">[</span><span class="n">Inline</span><span class="p">]</span>

<span class="nv">pPlain</span>  <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">s</span> <span class="o">&lt;-</span> <span class="nv">many1</span> <span class="o">$</span> <span class="nv">satisfy</span> <span class="p">(</span><span class="nv">flip</span> <span class="nv">notElem</span> <span class="s">&quot;(){}[]&quot;</span><span class="p">);</span> <span class="nv">return</span> <span class="p">(</span><span class="n">Plain</span> <span class="nv">s</span><span class="p">)}</span>

<span class="nv">pMaru</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">char</span> <span class="sc">&#39;(&#39;</span><span class="p">;</span> <span class="nv">is</span> <span class="o">&lt;-</span> <span class="nv">many</span> <span class="nv">pInline</span><span class="p">;</span> <span class="nv">char</span> <span class="sc">&#39;)&#39;</span><span class="p">;</span> <span class="nv">return</span> <span class="p">(</span><span class="n">Paren</span> <span class="n">Maru</span> <span class="nv">is</span><span class="p">)</span> <span class="p">}</span>
<span class="nv">pNami</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">char</span> <span class="sc">&#39;{&#39;</span><span class="p">;</span> <span class="nv">is</span> <span class="o">&lt;-</span> <span class="nv">many</span> <span class="nv">pInline</span><span class="p">;</span> <span class="nv">char</span> <span class="sc">&#39;}&#39;</span><span class="p">;</span> <span class="nv">return</span> <span class="p">(</span><span class="n">Paren</span> <span class="n">Nami</span> <span class="nv">is</span><span class="p">)</span> <span class="p">}</span>
<span class="nv">pKaku</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">char</span> <span class="sc">&#39;[&#39;</span><span class="p">;</span> <span class="nv">is</span> <span class="o">&lt;-</span> <span class="nv">many</span> <span class="nv">pInline</span><span class="p">;</span> <span class="nv">char</span> <span class="sc">&#39;]&#39;</span><span class="p">;</span> <span class="nv">return</span> <span class="p">(</span><span class="n">Paren</span> <span class="n">Kaku</span> <span class="nv">is</span><span class="p">)</span> <span class="p">}</span>

<span class="nv">pParen</span> <span class="o">=</span> <span class="nv">pMaru</span> <span class="o">+++</span> <span class="nv">pNami</span> <span class="o">+++</span> <span class="nv">pKaku</span>
<span class="nv">pInline</span> <span class="o">=</span> <span class="nv">pPlain</span> <span class="o">+++</span> <span class="nv">pParen</span>

<span class="nv">pInlines</span> <span class="o">=</span>   <span class="nv">many1</span> <span class="p">(</span><span class="nv">pPlain</span> <span class="o">+++</span> <span class="nv">pParen</span><span class="p">)</span>
         <span class="o">+++</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">c</span>  <span class="o">&lt;-</span> <span class="nv">satisfy</span> <span class="p">(</span><span class="nv">const</span> <span class="n">True</span><span class="p">)</span>
                <span class="p">;</span> <span class="nv">is</span> <span class="o">&lt;-</span> <span class="nv">pInlines</span>
                <span class="p">;</span> <span class="nv">return</span> <span class="p">(</span><span class="n">Plain</span> <span class="p">[</span><span class="nv">c</span><span class="p">]</span> <span class="o">:</span> <span class="nv">is</span><span class="p">)</span>
                <span class="p">}</span>

<span class="nv">revInline</span> <span class="p">(</span><span class="n">Plain</span> <span class="nv">s</span><span class="p">)</span> <span class="o">=</span> <span class="n">Plain</span> <span class="p">(</span><span class="nv">reverse</span> <span class="nv">s</span><span class="p">)</span>
<span class="nv">revInline</span> <span class="p">(</span><span class="n">Paren</span> <span class="nv">k</span> <span class="nv">is</span><span class="p">)</span> <span class="o">=</span> <span class="n">Paren</span> <span class="nv">k</span> <span class="p">(</span><span class="nv">foldl</span> <span class="p">((</span><span class="o">.</span> <span class="nv">revInline</span><span class="p">)</span> <span class="o">.</span> <span class="nv">flip</span> <span class="p">(</span><span class="o">:</span><span class="p">))</span> <span class="p">[]</span> <span class="nv">is</span><span class="p">)</span>

<span class="kr">instance</span> <span class="n">Show</span> <span class="n">Inline</span> <span class="kr">where</span>
  <span class="nv">show</span> <span class="p">(</span><span class="n">Plain</span> <span class="nv">s</span><span class="p">)</span> <span class="o">=</span> <span class="nv">s</span>
  <span class="nv">show</span> <span class="p">(</span><span class="n">Paren</span> <span class="nv">k</span> <span class="nv">is</span><span class="p">)</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">k</span> <span class="kr">of</span>
                         <span class="n">Maru</span> <span class="o">-&gt;</span> <span class="sc">&#39;(&#39;</span><span class="o">:</span><span class="p">(</span><span class="nv">concatMap</span> <span class="nv">show</span> <span class="nv">is</span><span class="p">)</span><span class="o">++</span><span class="s">&quot;)&quot;</span>
                         <span class="n">Nami</span> <span class="o">-&gt;</span> <span class="sc">&#39;{&#39;</span><span class="o">:</span><span class="p">(</span><span class="nv">concatMap</span> <span class="nv">show</span> <span class="nv">is</span><span class="p">)</span><span class="o">++</span><span class="s">&quot;}&quot;</span>
                         <span class="n">Kaku</span> <span class="o">-&gt;</span> <span class="sc">&#39;[&#39;</span><span class="o">:</span><span class="p">(</span><span class="nv">concatMap</span> <span class="nv">show</span> <span class="nv">is</span><span class="p">)</span><span class="o">++</span><span class="s">&quot;]&quot;</span>

<span class="nv">reverseString2</span> <span class="o">=</span> <span class="nv">concatMap</span> <span class="nv">show</span> 
               <span class="o">.</span> <span class="nv">reverse</span> 
               <span class="o">.</span> <span class="nv">map</span> <span class="nv">revInline</span> 
               <span class="o">.</span> <span class="nv">fst</span> 
               <span class="o">.</span> <span class="nv">head</span> 
               <span class="o">.</span> <span class="nv">filter</span> <span class="p">(</span><span class="nv">null</span> <span class="o">.</span> <span class="nv">snd</span><span class="p">)</span> 
               <span class="o">.</span> <span class="nv">readP_to_S</span> <span class="nv">pInlines</span>

<span class="nv">sample0</span> <span class="o">=</span> <span class="s">&quot;文字列(もじれつ)の反転(はんてん)&quot;</span>
<span class="nv">sample1</span> <span class="o">=</span> <span class="s">&quot;対応[の{とれている(さまざまな)括弧}の(例)]です。&quot;</span>
<span class="nv">sample2</span> <span class="o">=</span> <span class="s">&quot;これ(は(対応のとれてない)括弧がある例です。&quot;</span>
<span class="nv">sample3</span> <span class="o">=</span> <span class="s">&quot;これ(も{対応の)とれていない}括弧の例です。&quot;</span>

<span class="cm">{-</span>
<span class="cm">*Main&gt; U.putStrLn $ reverseString2 $ sample0</span>
<span class="cm">(んてんは)転反の(つれじも)列字文</span>
<span class="cm">*Main&gt; U.putStrLn $ reverseString2 $ sample1</span>
<span class="cm">。すで[(例)の{弧括(なまざまさ)るいてれと}の]応対</span>
<span class="cm">*Main&gt; U.putStrLn $ reverseString2 $ sample2</span>
<span class="cm">。すで例るあが弧括(いなてれとの応対)は(れこ</span>
<span class="cm">*Main&gt; U.putStrLn $ reverseString2 $ sample3</span>
<span class="cm">。すで例の弧括}いないてれと)の応対{も(れこ</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3516/addtag/" class="addtag" id="addtag_3516">Tags</a>:
	
    
    <a href="/web/20081202041830/http://ja.doukaku.org/tag/Text.ParserCombinators.ReadP/">Text.ParserCombinators.ReadP</a>
    
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3516/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3516/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3516"
  >-</span><span
  class="button yellow"
  id="rating_z_3516"
  >0</span><span 
  class="button green"
  id="rating_p_3516"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3516/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3520">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3520/">#3520</a>(<script language="JavaScript">print_time(new Date("2007/10/25 12:25 GMT"));</script><noscript>2007/10/25 12:25 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>def reverseString2(str:String) = {
  val bras = &quot;()[]{}&quot;
  ((List[(int,int)](), new StringBuilder(str)) /: str.toList.zipWithIndex){
    case ((stk, sb), (c, i)) =&gt; bras.indexOf(c) match {
      case -1 =&gt; (stk, sb)
      case bi  =&gt; bi&amp;1 match {
        case 0 =&gt; ((i,bi^1)::stk,sb)
        case _ =&gt;
          for((j,bj) &lt;- List(stk.head) if bj == bi) {
            sb.update(j, bras(bi))
            sb.update(i, bras(bj^1))
          }
          (stk.tail, sb)
      }
    }
  }._2.reverse.mkString
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3520/addtag/" class="addtag" id="addtag_3520">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3520/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3520/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3520"
  >-</span><span
  class="button yellow"
  id="rating_z_3520"
  >0</span><span 
  class="button green"
  id="rating_p_3520"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3520/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3521">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3521/">#3521</a>(<script language="JavaScript">print_time(new Date("2007/10/25 14:35 GMT"));</script><noscript>2007/10/25 14:35 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>とりあえずそのままひっくり返して、対応してた括弧は後で入れ換え。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre>(defun reverse-string2 (string)
  (loop with str = (reverse string) and stack
    for c across str and i from 0
    do (case c
         ((#\) #\] #\}) (push (cons c i) stack))
         ((#\( #\[ #\{)
          (if (eql (caar stack) (elt &quot;)]}&quot; (position c &quot;([{&quot;)))
              (progn
                (rotatef (elt str i) (elt str (cdar stack)))
                (setf stack (cdr stack)))
            (setf stack ()))))
    finally (return str)))

;;; test
(defun test (s1 s2)
  (format t &quot;~:[NG~;OK~]~%&quot; (string= (reverse-string2 s1) s2)))
(mapc #&#39;test
      &#39;(&quot;文字列(もじれつ)の反転(はんてん)&quot;
        &quot;対応[の{とれている(さまざまな)括弧}の(例)]です。&quot;
        &quot;これ(は(対応のとれていない)括弧がある例です。&quot;
        &quot;これ(も{対応の)とれていない}括弧の例です。&quot;)
      &#39;(&quot;(んてんは)転反の(つれじも)列字文&quot;
        &quot;。すで[(例)の{弧括(なまざまさ)るいてれと}の]応対&quot;
        &quot;。すで例るあが弧括(いないてれとの応対)は(れこ&quot;
        &quot;。すで例の弧括}いないてれと)の応対{も(れこ&quot;))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3521/addtag/" class="addtag" id="addtag_3521">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3521/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3521/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3521"
  >-</span><span
  class="button yellow"
  id="rating_z_3521"
  >0</span><span 
  class="button green"
  id="rating_p_3521"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3521/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment3537">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/349/" target="_top">walf443</a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3537/">#3537</a>(<script language="JavaScript">print_time(new Date("2007/10/27 08:47 GMT"));</script><noscript>2007/10/27 08:47 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>自動で括弧の対応にマッチしてくれるライブラリはあると結構便利かもしれないと感じました。(括弧の対応はもちろんカスタマイズ可能) 。探せば既にあるような気もするけど</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">reverse_string2</span> <span class="n">str</span>
  <span class="n">match_pairs</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s1">&#39;(&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;)&#39;</span><span class="p">,</span>
    <span class="s1">&#39;{&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;}&#39;</span><span class="p">,</span>
    <span class="s1">&#39;[&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;]&#39;</span><span class="p">,</span>
  <span class="p">}</span>

  <span class="n">match_pairs</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span><span class="n">val</span><span class="o">|</span>
    <span class="n">str</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/(</span><span class="si">#{</span><span class="no">Regexp</span><span class="o">.</span><span class="n">escape</span><span class="p">(</span><span class="n">key</span><span class="p">)</span><span class="si">}</span><span class="sr">)([^</span><span class="si">#{</span><span class="no">Regexp</span><span class="o">.</span><span class="n">escape</span><span class="p">(</span><span class="n">key</span><span class="p">)</span><span class="si">}</span><span class="sr">]*?)(</span><span class="si">#{</span><span class="no">Regexp</span><span class="o">.</span><span class="n">escape</span><span class="p">(</span><span class="n">val</span><span class="p">)</span><span class="si">}</span><span class="sr">)/</span><span class="p">)</span> <span class="p">{</span><span class="o">|</span><span class="n">str</span><span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="vg">$3</span><span class="si">}#{</span><span class="vg">$2</span><span class="si">}#{</span><span class="vg">$1</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">};</span>
  <span class="k">end</span>

  <span class="n">str</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)</span><span class="o">.</span><span class="n">reverse</span><span class="o">.</span><span class="n">join</span>
<span class="k">end</span>

<span class="k">if</span> <span class="vg">$PROGRAM_NAME</span> <span class="o">==</span> <span class="bp">__FILE__</span>
  <span class="vg">$KCODE</span> <span class="o">=</span> <span class="s1">&#39;u&#39;</span>
  <span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
  <span class="nb">require</span> <span class="s1">&#39;spec&#39;</span>

  <span class="n">describe</span> <span class="s2">&quot;reverse_string2&quot;</span> <span class="k">do</span>
    <span class="n">it</span> <span class="s2">&quot;は文字列を反転させること&quot;</span> <span class="k">do</span>
      <span class="n">reverse_string2</span><span class="p">(</span><span class="s2">&quot;文字列の反転&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">should</span> <span class="o">==</span> <span class="s2">&quot;転反の列字文&quot;</span>
    <span class="k">end</span>

    <span class="n">it</span> <span class="s2">&quot;は()の対応を保存すること&quot;</span> <span class="k">do</span>
      <span class="n">reverse_string2</span><span class="p">(</span><span class="s2">&quot;文字列(もじれつ)の反転(はんてん)&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">should</span> <span class="o">==</span> <span class="s2">&quot;(んてんは)転反の(つれじも)列字文&quot;</span>
    <span class="k">end</span>
    <span class="n">it</span> <span class="s2">&quot;は{}の対応を保存すること&quot;</span> <span class="k">do</span>
      <span class="n">reverse_string2</span><span class="p">(</span><span class="s2">&quot;文字列{もじれつ}の反転{はんてん}&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">should</span> <span class="o">==</span> 
      <span class="s2">&quot;{んてんは}転反の{つれじも}列字文&quot;</span>
    <span class="k">end</span>
    <span class="n">it</span> <span class="s2">&quot;は[]の対応を保存すること&quot;</span> <span class="k">do</span>
      <span class="n">reverse_string2</span><span class="p">(</span><span class="s2">&quot;文字列[もじれつ]の反転[はんてん]&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">should</span> <span class="o">==</span> <span class="s2">&quot;[んてんは]転反の[つれじも]列字文&quot;</span>
    <span class="k">end</span>
    <span class="n">it</span> <span class="s2">&quot;対応の取れている括弧にのみ対応すること&quot;</span> <span class="k">do</span>
      <span class="n">reverse_string2</span><span class="p">(</span><span class="s2">&quot;これ(は(対応のとれていない)括弧がある例です。&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">should</span> <span class="o">==</span> <span class="s2">&quot;。すで例るあが弧括(いないてれとの応対)は(れこ&quot;</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3537/addtag/" class="addtag" id="addtag_3537">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3537/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3537/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3537"
  >-</span><span
  class="button yellow"
  id="rating_z_3537"
  >0</span><span 
  class="button green"
  id="rating_p_3537"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081202041830/http://ja.doukaku.org/comment/3537/">
    1
    reply
  </a>

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3537/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3538">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/349/" target="_top">walf443</a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3538/">#3538</a>(<script language="JavaScript">print_time(new Date("2007/10/27 08:54 GMT"));</script><noscript>2007/10/27 08:54 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  ネストした括弧に対応してない模様
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3538/addtag/" class="addtag" id="addtag_3538">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3538"
  >-</span><span
  class="button yellow"
  id="rating_z_3538"
  >0</span><span 
  class="button green"
  id="rating_p_3538"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081202041830/http://ja.doukaku.org/comment/3537/"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081202041830/http://ja.doukaku.org/comment/3538/root/"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3538/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment3564">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/481/" target="_top">mtsuyugu</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3564/">#3564</a>(<script language="JavaScript">print_time(new Date("2007/10/29 15:12 GMT"));</script><noscript>2007/10/29 15:12 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>初投稿です。Cで書いてみました。日本語は未対応です。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="kt">char</span> <span class="o">*</span><span class="n">reverse_string2</span><span class="p">(</span> <span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">,</span> <span class="kt">int</span> <span class="n">length</span> <span class="p">){</span>
   <span class="kt">char</span> <span class="o">*</span><span class="n">now</span> <span class="o">=</span> <span class="n">str</span><span class="p">;</span>
   <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">length</span><span class="p">;</span>
   <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
   <span class="kt">char</span> <span class="o">**</span><span class="n">sp</span><span class="p">,</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
   <span class="n">sp</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span> <span class="o">**</span><span class="p">)</span> <span class="n">malloc</span><span class="p">(</span> <span class="n">length</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">));</span>

   <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">sp</span> <span class="o">||</span> <span class="o">!</span><span class="n">now</span> <span class="p">){</span>
      <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
   <span class="p">}</span>

   <span class="k">for</span><span class="p">(;</span> <span class="o">*</span><span class="n">str</span> <span class="o">&amp;&amp;</span> <span class="n">len</span><span class="o">--</span><span class="p">;</span> <span class="n">now</span><span class="o">++</span> <span class="p">){</span>
      <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;(&#39;</span> <span class="p">)</span> <span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">now</span><span class="p">;</span>
      <span class="k">else</span> <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;{&#39;</span> <span class="p">)</span> <span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">now</span><span class="p">;</span>
      <span class="k">else</span> <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;[&#39;</span> <span class="p">)</span> <span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">now</span><span class="p">;</span>
      <span class="k">else</span> <span class="nf">if</span><span class="p">(</span> <span class="p">(</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;)&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;(&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">i</span><span class="o">--</span> <span class="p">)</span>
            <span class="o">||</span> <span class="p">(</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;}&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;{&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">i</span><span class="o">--</span> <span class="p">)</span>
            <span class="o">||</span> <span class="p">(</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;]&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;[&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">i</span><span class="o">--</span> <span class="p">))</span>
      <span class="p">{</span>
         <span class="p">(</span><span class="n">p</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="s">&quot;()&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span> <span class="o">||</span> <span class="p">(</span><span class="n">p</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="s">&quot;{}&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span> <span class="o">||</span> <span class="p">(</span><span class="n">p</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="s">&quot;[]&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="p">]));</span>
         <span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">p</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
         <span class="p">(</span><span class="n">p</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="s">&quot;)(&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">now</span><span class="p">))</span> <span class="o">||</span> <span class="p">(</span><span class="n">p</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="s">&quot;}{&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">now</span><span class="p">))</span> <span class="o">||</span> <span class="p">(</span><span class="n">p</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="s">&quot;][&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">now</span><span class="p">));</span>
         <span class="o">*</span><span class="n">now</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">p</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
      <span class="p">}</span>
   <span class="p">}</span>
   <span class="n">free</span><span class="p">(</span> <span class="n">sp</span> <span class="p">);</span>
   <span class="k">return</span> <span class="n">reverse_string</span><span class="p">(</span> <span class="n">str</span><span class="p">,</span> <span class="n">length</span> <span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3564/addtag/" class="addtag" id="addtag_3564">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3564/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3564/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3564"
  >-</span><span
  class="button yellow"
  id="rating_z_3564"
  >0</span><span 
  class="button green"
  id="rating_p_3564"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081202041830/http://ja.doukaku.org/comment/3564/">
    1
    reply
  </a>

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3564/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3599">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/481/" target="_top">mtsuyugu</a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081202041830/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3599/">#3599</a>(<script language="JavaScript">print_time(new Date("2007/10/30 11:43 GMT"));</script><noscript>2007/10/30 11:43 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>for ループの中を改良しました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre>   <span class="k">for</span><span class="p">(;</span> <span class="o">*</span><span class="n">str</span> <span class="o">&amp;&amp;</span> <span class="n">len</span><span class="o">--</span><span class="p">;</span> <span class="n">now</span><span class="o">++</span> <span class="p">){</span>
      <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;(&#39;</span> <span class="o">||</span> <span class="o">*</span><span class="n">now</span><span class="o">==</span> <span class="sc">&#39;{&#39;</span> <span class="o">||</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;[&#39;</span> <span class="p">)</span> <span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">now</span><span class="p">;</span>
      <span class="k">else</span> <span class="k">if</span><span class="p">(</span> <span class="p">(</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;)&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;(&#39;</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="o">--</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;)&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">*</span><span class="n">now</span> <span class="o">=</span> <span class="sc">&#39;(&#39;</span><span class="p">)</span> <span class="p">)</span>
            <span class="o">||</span> <span class="p">(</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;}&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;{&#39;</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="o">--</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;}&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">*</span><span class="n">now</span> <span class="o">=</span> <span class="sc">&#39;{&#39;</span><span class="p">)</span> <span class="p">)</span>
            <span class="o">||</span> <span class="p">(</span> <span class="o">*</span><span class="n">now</span> <span class="o">==</span> <span class="sc">&#39;]&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;[&#39;</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">*</span><span class="n">sp</span><span class="p">[</span><span class="o">--</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;]&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">*</span><span class="n">now</span> <span class="o">=</span> <span class="sc">&#39;[&#39;</span><span class="p">)</span> <span class="p">)</span> <span class="p">){}</span>
   <span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3599/addtag/" class="addtag" id="addtag_3599">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081202041830/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3599/download/">
		download code
      </a>]
	  [<a href="/web/20081202041830/http://ja.doukaku.org/comment/3599/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3599"
  >-</span><span
  class="button yellow"
  id="rating_z_3599"
  >0</span><span 
  class="button green"
  id="rating_p_3599"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081202041830/http://ja.doukaku.org/comment/3564/"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081202041830/http://ja.doukaku.org/comment/3599/root/"><img src="/web/20081202041830im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081202041830/http://ja.doukaku.org/70/reply_to/3599/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment3620">
  <p class="banner"><a href="/web/20081202041830/http://ja.doukaku.org/user/497/" target="_top">Otter</a>

	
	&nbsp;
	<a href="/web/20081202041830/http://ja.doukaku.org/comment/3620/">#3620</a>(<script language="JavaScript">print_time(new Date("2007/10/31 05:58 GMT"));</script><noscript>2007/10/31 05:58 GMT</noscript>)
	
	
	
	[<a href="/web/20081202041830/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>一本の再帰呼び出しのパスで処理を終わらせられるように考えてみました。行きで閉じ括弧、帰りでひらき括弧の処理をしています。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59</pre></td><td class="code"><div class="highlight"><pre><span class="kr">type</span> <span class="n">Paren</span> <span class="o">=</span> <span class="n">Char</span>
<span class="kr">type</span> <span class="n">ParenStack</span> <span class="o">=</span> <span class="p">[</span><span class="n">Paren</span><span class="p">]</span>

<span class="nv">reverseString2</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">reverseString2</span> <span class="nv">str</span> <span class="o">=</span> <span class="nv">fst</span> <span class="o">$</span> <span class="nv">reverseStrParen</span> <span class="p">(</span><span class="nv">str</span><span class="p">,</span> <span class="p">[])</span>

<span class="nv">reverseStrParen</span> <span class="o">::</span> <span class="p">(</span><span class="n">String</span><span class="p">,</span> <span class="n">ParenStack</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">String</span><span class="p">,</span> <span class="n">ParenStack</span><span class="p">)</span>
<span class="nv">reverseStrParen</span> <span class="p">([],</span>  <span class="kr">_</span><span class="p">)</span>        <span class="o">=</span> <span class="p">([],</span> <span class="p">[])</span>
<span class="nv">reverseStrParen</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="p">[],</span> <span class="nv">stkOpen</span><span class="p">)</span> <span class="o">=</span> <span class="p">([</span><span class="nv">flipParenIfMatch</span> <span class="nv">x</span> <span class="nv">stkOpen</span><span class="p">],</span> <span class="nv">pushCloseParen</span> <span class="nv">x</span> <span class="p">[])</span>
<span class="nv">reverseStrParen</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">,</span> <span class="nv">stkOpen</span><span class="p">)</span> <span class="o">=</span> 
            <span class="p">(</span><span class="nv">reverseRest</span> <span class="o">++</span> <span class="p">[</span><span class="nv">flipParen2Way</span> <span class="nv">x</span> <span>




<!--
     FILE ARCHIVED ON 4:18:30 Dec 2, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:11:14 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
