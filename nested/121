
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
ポーカーの役判定
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20080309030640cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20080309030640cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20080309030640cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20080309030640/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20080309030640/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20080309030640js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20080309030640js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20080309030640js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20080309030640js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app3.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/121\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "9";
var displayMonth = "Mar";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/121/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20080309030640" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080108142738/http://ja.doukaku.org/121/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="8 Jan 2008"><strong>JAN</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 3:06:40 Mar 9, 2008">MAR</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Apr
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080108142738/http://ja.doukaku.org/121/nested/" title="14:27:38 Jan 8, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 3:06:40 Mar 9, 2008">9</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2007
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 3:06:40 Mar 9, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20080309030640*/http://ja.doukaku.org/121/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">8 Jan 08 - 9 Mar 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:2:101000000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20080309030640/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20080309030640im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20080309030640/http://ja.doukaku.org/121/">ポーカーの役判定</a>
</h2>

    





<div class="comment" id="comment4978">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/154/" target="_top">xsd</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/4978/">#4978</a>(<script language="JavaScript">print_time(new Date("2007/12/26 14:19 GMT"));</script><noscript>2007/12/26 14:19 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #9fff5f;">6/10=0.60</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>引数に手札を与えると、ポーカーの役を表示するプログラムを作ってください。</p>
<p><strong>条件：</strong></p>
<ul class="simple">
<li>スートはS,D,H,C、ランクはA,2～9,T,J,Q,Kのそれぞれ一文字で表します。</li>
<li>手札は S2D5H3CQS9 のように10文字で指定されます。特にソートはされていません。</li>
<li>手札にジョーカーは含まれません。</li>
<li>ストレートで取りうるランクの種類はA2345, 23456 ... 9TJQK, TJQKAの10種類で、JQKA2のようにK-A-2をまたぐものはストレートではありません。</li>
</ul>
<p><strong>実行例：</strong></p>
<pre class="literal-block">
% ./poker SQSJSASKST
Royal flush

% ./poker D9D7D6D5D8
Straight flush

% ./poker C2D2S2H3H2
Four of a kind

% ./poker C2D3S2H3H2
Full house

% ./poker S9S4S8STSJ
Flush

% ./poker C4H7D5S6H3
Straight

% ./poker S6H6C5DQC6
Three of a kind

% ./poker S6HQC5DQC6
Two pair

% ./poker S6H4C5DQC6
One pair

% ./poker SJSQSKSAC2
No pair
</pre>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20080309030640/http://ja.wikipedia.org/wiki/%E3%83%9D%E3%83%BC%E3%82%AB%E3%83%BC">ポーカー - Wikipedia</a>
	</p>  
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/4978/addtag/" class="addtag" id="addtag_4978">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #9fff5f;"
  >6/10=0.60</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4978"
  >-</span><span
  class="button yellow"
  id="rating_z_4978"
  >0</span><span 
  class="button green"
  id="rating_p_4978"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080309030640/http://ja.doukaku.org/comment/4978/">
    1
    reply
  </a>

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/4978/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4979">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/154/" target="_top">xsd</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/4979/">#4979</a>(<script language="JavaScript">print_time(new Date("2007/12/26 14:21 GMT"));</script><noscript>2007/12/26 14:21 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>お題にしようと思っていたのに間違えてしまいました。今から変更可能でしょうか？</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/4979/addtag/" class="addtag" id="addtag_4979">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4979"
  >-</span><span
  class="button yellow"
  id="rating_z_4979"
  >0</span><span 
  class="button green"
  id="rating_p_4979"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/4978/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/4979/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080309030640/http://ja.doukaku.org/comment/4979/">
    1
    reply
  </a>

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/4979/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5167">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/154/" target="_top">xsd</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5167/">#5167</a>(<script language="JavaScript">print_time(new Date("2008/01/04 09:11 GMT"));</script><noscript>2008/01/04 09:11 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>(説明)
当初間違ってトピックに投稿していたので、このようなコメントを付けていたのですが、
このコメントに気づいた管理人さんにお題に移していただきました。
(最初の2つだけ投稿日時が早いのはそのためです)
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5167/addtag/" class="addtag" id="addtag_5167">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5167"
  >-</span><span
  class="button yellow"
  id="rating_z_5167"
  >0</span><span 
  class="button green"
  id="rating_p_5167"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/4979/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5167/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5167/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  



<div class="indent">
<a href="/web/20080309030640/http://ja.doukaku.org/121/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20080309030640/http://ja.doukaku.org/121/flatten/">フラット表示</a> 
<a href="/web/20080309030640/http://ja.doukaku.org/121/">非表示</a> 


  

  

  
    





<div class="comment" id="comment4984">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/4984/">#4984</a>(<script language="JavaScript">print_time(new Date("2007/12/27 03:09 GMT"));</script><noscript>2007/12/27 03:09 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>素直に順番に条件チェックしてみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample121</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">String</span> <span class="n">RANK_LIST</span> <span class="o">=</span> <span class="s">&quot;A23456789TJQKA&quot;</span><span class="o">;</span>

    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">String</span> <span class="n">ROYAL</span> <span class="o">=</span> <span class="s">&quot;royal &quot;</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">String</span> <span class="n">STRAIGHT</span> <span class="o">=</span> <span class="s">&quot;straight&quot;</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">String</span> <span class="n">FLUSH</span> <span class="o">=</span> <span class="s">&quot;flush&quot;</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">String</span> <span class="n">FULL_HOUSE</span> <span class="o">=</span> <span class="s">&quot;Full house&quot;</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">String</span> <span class="n">CARDS_4</span> <span class="o">=</span> <span class="s">&quot;Four of a kind&quot;</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">String</span> <span class="n">CARDS_3</span> <span class="o">=</span> <span class="s">&quot;Three of a kind&quot;</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">String</span> <span class="n">PAIR_2</span> <span class="o">=</span> <span class="s">&quot;Two pair&quot;</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">String</span> <span class="n">PAIR_1</span> <span class="o">=</span> <span class="s">&quot;One pair&quot;</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">String</span> <span class="n">Nothing</span> <span class="o">=</span> <span class="s">&quot;No pair&quot;</span><span class="o">;</span>

    <span class="k">public</span> <span class="k">static</span> <span class="n">String</span> <span class="n">getPokerRole</span><span class="o">(</span><span class="n">String</span> <span class="n">cards</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">cards</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">!=</span> <span class="mi">2</span> <span class="o">*</span> <span class="mi">5</span><span class="o">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalArgumentException</span><span class="o">();</span>
        <span class="n">String</span> <span class="n">rankList</span> <span class="o">=</span> <span class="n">createRankList</span><span class="o">(</span><span class="n">cards</span><span class="o">);</span>
        <span class="kt">boolean</span> <span class="n">flush</span> <span class="o">=</span> <span class="n">isFlush</span><span class="o">(</span><span class="n">cards</span><span class="o">);</span>
        <span class="kt">boolean</span> <span class="n">straight</span> <span class="o">=</span> <span class="n">isStraight</span><span class="o">(</span><span class="n">rankList</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">flush</span> <span class="o">||</span> <span class="n">straight</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">boolean</span> <span class="n">royal</span> <span class="o">=</span> <span class="n">isRoyal</span><span class="o">(</span><span class="n">rankList</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">royal</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">format</span><span class="o">(</span><span class="n">flush</span><span class="o">?</span> <span class="n">ROYAL</span> <span class="o">+</span> <span class="nl">FLUSH:</span> <span class="n">ROYAL</span> <span class="o">+</span> <span class="n">STRAIGHT</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">flush</span> <span class="o">&amp;&amp;</span> <span class="n">straight</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="n">format</span><span class="o">(</span><span class="n">STRAIGHT</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="n">FLUSH</span><span class="o">);</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="n">format</span><span class="o">(</span><span class="n">flush</span><span class="o">?</span> <span class="nl">FLUSH:</span> <span class="n">STRAIGHT</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">Integer</span><span class="o">[]</span> <span class="n">integers</span> <span class="o">=</span> <span class="n">countSameNumber</span><span class="o">(</span><span class="n">rankList</span><span class="o">);</span>
        <span class="k">switch</span> <span class="o">(</span><span class="n">integers</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">{</span>
            <span class="k">case</span> <span class="mi">4</span><span class="o">:</span>
                <span class="k">return</span> <span class="n">CARDS_4</span><span class="o">;</span>
            <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">integers</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="n">FULL_HOUSE</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="n">CARDS_3</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">integers</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="n">PAIR_2</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="n">PAIR_1</span><span class="o">;</span>
                <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">Nothing</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="n">String</span> <span class="n">format</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">str</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">).</span><span class="na">toUpperCase</span><span class="o">()</span> <span class="o">+</span> <span class="n">str</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="kt">boolean</span> <span class="n">isFlush</span><span class="o">(</span><span class="n">String</span> <span class="n">cards</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">char</span> <span class="n">suit</span> <span class="o">=</span> <span class="n">cards</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">suit</span> <span class="o">!=</span> <span class="n">cards</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">index</span> <span class="o">*</span> <span class="mi">2</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="n">String</span> <span class="n">createRankList</span><span class="o">(</span><span class="n">String</span> <span class="n">cards</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">final</span> <span class="kt">char</span> <span class="n">rank</span> <span class="o">=</span> <span class="n">cards</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">index</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
            <span class="kt">int</span> <span class="n">insert</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(;</span> <span class="n">insert</span> <span class="o">&lt;</span> <span class="n">builder</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">insert</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">RANK_LIST</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">builder</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">insert</span><span class="o">))</span> <span class="o">&gt;</span> <span class="n">RANK_LIST</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">rank</span><span class="o">))</span> <span class="o">{</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">insert</span><span class="o">,</span> <span class="n">rank</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">boolean</span> <span class="n">isStraight</span><span class="o">(</span><span class="n">String</span> <span class="n">rankList</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">RANK_LIST</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">rankList</span><span class="o">)</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">boolean</span> <span class="n">isRoyal</span><span class="o">(</span><span class="n">String</span> <span class="n">rankList</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">rankList</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;ATJQK&quot;</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="n">Integer</span><span class="o">[]</span> <span class="n">countSameNumber</span><span class="o">(</span><span class="n">String</span> <span class="n">rankList</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Map</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">rankList</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="n">rankList</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
            <span class="n">Integer</span> <span class="n">integer</span> <span class="o">=</span> <span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">integer</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">integer</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
                <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="n">integer</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="n">integer</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="n">map</span><span class="o">.</span><span class="na">values</span><span class="o">());</span>
        <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">result</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">Integer</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
    <span class="o">}</span>


    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;SQSJSASKST&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;D9D7D6D5D8&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;C2D2S2H3H2&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;C2D3S2H3H2&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;S9S4S8STSJ&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;C4H7D5S6H3&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;S6H6C5DQC6&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;S6HQC5DQC6&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;S6H4C5DQC6&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;SJSQSKSAC2&quot;</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/4984/addtag/" class="addtag" id="addtag_4984">タグ</a>:
	
    
    <a href="/web/20080309030640/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/4984/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/4984/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4984"
  >-</span><span
  class="button yellow"
  id="rating_z_4984"
  >0</span><span 
  class="button green"
  id="rating_p_4984"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/4984/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4987">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/4987/">#4987</a>(<script language="JavaScript">print_time(new Date("2007/12/27 03:51 GMT"));</script><noscript>2007/12/27 03:51 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>こんな感じ？</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">sys</span>
<span class="k">import</span> <span class="nn">collections</span>

<span class="k">def</span> <span class="nf">solve</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
    <span class="n">it</span> <span class="o">=</span> <span class="nb">iter</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
    <span class="n">cards</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>
        <span class="n">suit</span> <span class="o">=</span> <span class="s">&quot;SDHC&quot;</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">it</span><span class="o">.</span><span class="n">next</span><span class="p">())</span>
        <span class="n">number</span> <span class="o">=</span> <span class="s">&quot;A23456789TJQK&quot;</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">it</span><span class="o">.</span><span class="n">next</span><span class="p">())</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="n">cards</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">suit</span><span class="p">,</span> <span class="n">number</span><span class="p">))</span>

    <span class="n">counts</span> <span class="o">=</span> <span class="n">collections</span><span class="o">.</span><span class="n">defaultdict</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">suit</span><span class="p">,</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">cards</span><span class="p">:</span>
        <span class="n">counts</span><span class="p">[</span><span class="n">number</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="n">counts</span> <span class="o">=</span> <span class="n">sorted</span><span class="p">(</span><span class="n">counts</span><span class="o">.</span><span class="n">itervalues</span><span class="p">())</span>

    <span class="n">flush</span> <span class="o">=</span> <span class="n">all</span><span class="p">(</span><span class="n">cards</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">suit</span> <span class="k">for</span> <span class="n">suit</span><span class="p">,</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">cards</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>

    <span class="n">numbers</span> <span class="o">=</span> <span class="n">sorted</span><span class="p">(</span><span class="n">number</span> <span class="k">for</span> <span class="n">suit</span><span class="p">,</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">cards</span><span class="p">)</span>
    <span class="n">royal_straight</span> <span class="o">=</span> <span class="p">(</span><span class="n">numbers</span> <span class="o">==</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">])</span>
    <span class="n">straight</span> <span class="o">=</span> <span class="n">all</span><span class="p">(</span><span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">==</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span> <span class="ow">or</span> <span class="n">royal_straight</span>

    <span class="k">if</span> <span class="n">royal_straight</span> <span class="ow">and</span> <span class="n">flush</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">&quot;Royal flush&quot;</span>
    <span class="k">elif</span> <span class="n">straight</span> <span class="ow">and</span> <span class="n">flush</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">&quot;Straight flush&quot;</span>
    <span class="k">elif</span> <span class="n">counts</span> <span class="o">==</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">]:</span>
        <span class="k">return</span> <span class="s">&quot;Four of a kind&quot;</span>
    <span class="k">elif</span> <span class="n">counts</span> <span class="o">==</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]:</span>
        <span class="k">return</span> <span class="s">&quot;Full House&quot;</span>
    <span class="k">elif</span> <span class="n">flush</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">&quot;Flush&quot;</span>
    <span class="k">elif</span> <span class="n">straight</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">&quot;Straight&quot;</span>
    <span class="k">elif</span> <span class="n">counts</span> <span class="o">==</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">]:</span>
        <span class="k">return</span> <span class="s">&quot;Three of a kind&quot;</span>
    <span class="k">elif</span> <span class="n">counts</span> <span class="o">==</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">]:</span>
        <span class="k">return</span> <span class="s">&quot;Two pair&quot;</span>
    <span class="k">elif</span> <span class="n">counts</span> <span class="o">==</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">]:</span>
        <span class="k">return</span> <span class="s">&quot;One pair&quot;</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">assert</span> <span class="n">counts</span> <span class="o">==</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
        <span class="k">return</span> <span class="s">&quot;No pair&quot;</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
            <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="s">&quot;SQSJSASKST&quot;</span><span class="p">)</span> <span class="c"># Royal flush</span>
        <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="s">&quot;D9D7D6D5D8&quot;</span><span class="p">)</span> <span class="c"># Straight flush</span>
        <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="s">&quot;C2D2S2H3H2&quot;</span><span class="p">)</span> <span class="c"># Four of a kind</span>
        <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="s">&quot;C2D3S2H3H2&quot;</span><span class="p">)</span> <span class="c"># Full house</span>
        <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="s">&quot;S9S4S8STSJ&quot;</span><span class="p">)</span> <span class="c"># Flush</span>
        <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="s">&quot;C4H7D5S6H3&quot;</span><span class="p">)</span> <span class="c"># Straight</span>
        <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="s">&quot;S6H6C5DQC6&quot;</span><span class="p">)</span> <span class="c"># Three of a kind</span>
        <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="s">&quot;S6HQC5DQC6&quot;</span><span class="p">)</span> <span class="c"># Two pair</span>
        <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="s">&quot;S6H4C5DQC6&quot;</span><span class="p">)</span> <span class="c"># One pair</span>
        <span class="k">print</span> <span class="n">solve</span><span class="p">(</span><span class="s">&quot;SJSQSKSAC2&quot;</span><span class="p">)</span> <span class="c"># No pair</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/4987/addtag/" class="addtag" id="addtag_4987">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/4987/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/4987/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4987"
  >-</span><span
  class="button yellow"
  id="rating_z_4987"
  >0</span><span 
  class="button green"
  id="rating_p_4987"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/4987/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5156">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5156/">#5156</a>(<script language="JavaScript">print_time(new Date("2008/01/04 05:39 GMT"));</script><noscript>2008/01/04 05:39 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #9fff9f;">6/6=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>パターンマッチって素晴らしい。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre>object Poker {
  def whatHand_?(_cs:String) = {
    val rank = Map((0 to 12).map(i =&gt; &quot;A23456789TJQK&quot;(i) -&gt; (i+1)).toArray:_*)
    val cs = (0.until(_cs.size, 2)).map(_cs.substring).
               map{s=&gt;(s(0), rank(s(1)))}.toList.sort(_._2&lt;_._2)
    val royalSt_? = cs match{
      case List((_,1),(_,10),(_,11),(_,12),(_,13)) =&gt; true
      case _ =&gt; false
    }
    val flush_? = cs.forall(cs(0)._1 == _._1)
    val st_? = (1 to 9).map(i=&gt;cs(0)._2==i &amp;&amp; cs(4)._2==i+4).exists(true==) || royalSt_?
    val p = (((List(List[(char,int)]())) /: List.make(2, cs)){
              for(i &lt;-_; j &lt;-_) yield j::i
            }.filter(c=&gt;c(0)._2 == c(1)._2).size - 5)/2

    (royalSt_?, flush_?, st_?, p) match {
      case (true, true, _, _) =&gt; &quot;Royal flush&quot;
      case (_, true, true,_)  =&gt; &quot;Straight flush&quot;
      case (_, true, _ ,_)  =&gt; &quot;Flush&quot;
      case (_, _, true ,_)  =&gt; &quot;Straight&quot;
      case (_,_,_, 6) =&gt; &quot;Four of a kind&quot;
      case (_,_,_, 4) =&gt; &quot;Full house&quot;
      case (_,_,_, 3) =&gt; &quot;Three of a kind&quot;
      case (_,_,_, 2) =&gt; &quot;Two pairs&quot;
      case (_,_,_, 1) =&gt; &quot;One pair&quot;
      case _ =&gt; &quot;No pair&quot;
    }
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5156/addtag/" class="addtag" id="addtag_5156">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5156/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5156/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #9fff9f;"
  >6/6=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5156"
  >-</span><span
  class="button yellow"
  id="rating_z_5156"
  >0</span><span 
  class="button green"
  id="rating_p_5156"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080309030640/http://ja.doukaku.org/comment/5156/">
    1
    reply
  </a>

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5156/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5163">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5163/">#5163</a>(<script language="JavaScript">print_time(new Date("2008/01/04 08:11 GMT"));</script><noscript>2008/01/04 08:11 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>すみません、１箇所ミスってました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="gu">@@ -8,7 +8,7 @@</span>
       case _ =&gt; false
     }
     val flush_? = cs.forall(cs(0)._1 == _._1)
<span class="gd">-    val st_? = (1 to 9).map(i=&gt;cs(0)._2==i &amp;&amp; cs(4)._2==i+4).exists(true==) || royalSt_?</span>
<span class="gi">+    val st_? = (1 to 9).map(i=&gt;(0 to 4).forall(j=&gt;cs(j)._2==i+j)).exists(true==) || royalSt_?</span>
     val p = (((List(List[(char,int)]())) /: List.make(2, cs)){
               for(i &lt;-_; j &lt;-_) yield j::i
             }.filter(c=&gt;c(0)._2 == c(1)._2).size - 5)/2
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5163/addtag/" class="addtag" id="addtag_5163">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5163/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5163/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5163"
  >-</span><span
  class="button yellow"
  id="rating_z_5163"
  >0</span><span 
  class="button green"
  id="rating_p_5163"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5156/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5163/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5163/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment5158">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/216/" target="_top">tosik</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5158/">#5158</a>(<script language="JavaScript">print_time(new Date("2008/01/04 07:22 GMT"));</script><noscript>2008/01/04 07:22 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ペア判定以外の上手な判定方法が思いつきませんでした。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="c">// パラメータのチェック（不十分）</span>
    <span class="k">if</span> <span class="p">(</span> <span class="n">argc</span> <span class="o">!=</span> <span class="mi">2</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;fatal arguments&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;exp) ./poker SQSJSASKST&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c">// 手札を配列に直す</span>
    <span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">5</span><span class="p">];</span>
    <span class="kt">char</span> <span class="n">suit</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span>
    <span class="kt">bool</span> <span class="n">flush_flag</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">char</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">char</span> <span class="n">num</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
        <span class="k">if</span> <span class="p">(</span> <span class="n">num</span> <span class="o">==</span> <span class="sc">&#39;A&#39;</span> <span class="p">)</span>
            <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span> <span class="n">num</span> <span class="o">==</span> <span class="sc">&#39;T&#39;</span> <span class="p">)</span>
            <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span> <span class="n">num</span> <span class="o">==</span> <span class="sc">&#39;J&#39;</span> <span class="p">)</span>
            <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">11</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span> <span class="n">num</span> <span class="o">==</span> <span class="sc">&#39;Q&#39;</span> <span class="p">)</span>
            <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span> <span class="n">num</span> <span class="o">==</span> <span class="sc">&#39;K&#39;</span> <span class="p">)</span>
            <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">13</span><span class="p">;</span>
        <span class="k">else</span>
            <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">num</span> <span class="o">-</span> <span class="sc">&#39;0&#39;</span><span class="p">;</span>

        <span class="c">// フラッシュをついでに計算</span>
        <span class="k">if</span> <span class="p">(</span> <span class="n">suit</span> <span class="o">!=</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="o">*</span><span class="mi">2</span><span class="p">]</span> <span class="p">)</span>
            <span class="n">flush_flag</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c">// ペアを計算</span>
    <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">y</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span><span class="p">)</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="n">y</span><span class="p">;</span> <span class="n">x</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span><span class="p">)</span>
            <span class="k">if</span> <span class="p">(</span> <span class="n">x</span> <span class="o">!=</span> <span class="n">y</span> <span class="o">&amp;&amp;</span> <span class="n">a</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">==</span> <span class="n">a</span><span class="p">[</span><span class="n">y</span><span class="p">]</span> <span class="p">)</span>
                <span class="n">count</span> <span class="o">++</span><span class="p">;</span>

    <span class="c">// ストレートを計算</span>
    <span class="kt">bool</span> <span class="n">straight_flag</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">royal_straight_flag</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="c">// sort</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">y</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span><span class="p">)</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">5</span><span class="p">;</span> <span class="n">x</span><span class="o">&gt;=</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">x</span><span class="o">--</span><span class="p">)</span>
            <span class="k">if</span> <span class="p">(</span> <span class="n">a</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">a</span><span class="p">[</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="p">)</span>
            <span class="p">{</span>
                <span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
                <span class="n">a</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
                <span class="n">a</span><span class="p">[</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">t</span><span class="p">;</span>
            <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span> <span class="n">a</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">==</span> <span class="mi">13</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">straight_flag</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
            <span class="n">royal_straight_flag</span> <span class="o">&amp;=</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">9</span><span class="p">);</span>
        <span class="n">royal_straight_flag</span> <span class="o">&amp;=</span> <span class="p">(</span><span class="n">suit</span> <span class="o">==</span> <span class="sc">&#39;S&#39;</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="n">royal_straight_flag</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
            <span class="n">straight_flag</span> <span class="o">&amp;=</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">i</span> <span class="o">+</span> <span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="n">straight_flag</span> <span class="o">|=</span> <span class="n">royal_straight_flag</span><span class="p">;</span>

    <span class="c">// 役の表示</span>
    <span class="k">if</span> <span class="p">(</span> <span class="n">straight_flag</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span> <span class="n">royal_straight_flag</span> <span class="o">&amp;&amp;</span> <span class="n">flush_flag</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Royal flush&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="c">// Royal Straight Flush ??</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span> <span class="n">flush_flag</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Straight flush&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Straight&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span> <span class="n">flush_flag</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Flush&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="k">switch</span> <span class="p">(</span> <span class="n">count</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;One pair&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Two pair&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Three of a kind&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">4</span><span class="o">:</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Full house&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">6</span><span class="o">:</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Four of a kind&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">default</span><span class="o">:</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;No pair&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5158/addtag/" class="addtag" id="addtag_5158">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5158/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5158/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5158"
  >-</span><span
  class="button yellow"
  id="rating_z_5158"
  >0</span><span 
  class="button green"
  id="rating_p_5158"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5158/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5159">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5159/">#5159</a>(<script language="JavaScript">print_time(new Date("2008/01/04 07:49 GMT"));</script><noscript>2008/01/04 07:49 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  一切コメント無しでも充分な可読性を目指しました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102</pre></td><td class="code"><div class="highlight"><pre><span class="c">//http://ja.doukaku.org/121/　投稿用</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
    <span class="k">const</span> <span class="kt">string</span> <span class="n">Ranks</span> <span class="p">=</span> <span class="s">&quot;A23456789TJQKA&quot;</span><span class="p">;</span>
    <span class="k">const</span> <span class="kt">string</span> <span class="n">Suits</span> <span class="p">=</span> <span class="s">&quot;SDHC&quot;</span><span class="p">;</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">IsRoyalStraightFlush</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Royal straight flush&quot;</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">IsStraightFlush</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Straight flush&quot;</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Is4cards</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Four of a kind&quot;</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">IsFullHouse</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Full house&quot;</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">IsFlush</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Flush&quot;</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">IsStraight</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Straight&quot;</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Is3Cards</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Three of a kind&quot;</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Is2Pair</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Two pair&quot;</span><span class="p">);</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Is1Pair</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;One pair&quot;</span><span class="p">);</span>
        <span class="k">else</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;No pair&quot;</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="n">IsRoyalStraightFlush</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span><span class="k">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">IsFlush</span><span class="p">(</span><span class="n">cards</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="n">IsStraight</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span><span class="k">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="m">9</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span><span class="c">//2～9までの数字が含まれていたらNG</span>
                <span class="k">if</span><span class="p">(</span><span class="n">cards</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">i</span><span class="p">.</span><span class="n">ToString</span><span class="p">())</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span> <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsStraightFlush</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">IsFlush</span><span class="p">(</span><span class="n">cards</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="n">IsStraight</span><span class="p">(</span><span class="n">cards</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">Is4cards</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">IsAnyCards</span><span class="p">(</span><span class="n">cards</span><span class="p">,</span> <span class="m">4</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsFullHouse</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">Is3Cards</span><span class="p">(</span><span class="n">cards</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="n">Is1Pair</span><span class="p">(</span><span class="n">cards</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsFlush</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">foreach</span><span class="p">(</span><span class="kt">char</span> <span class="n">suit</span> <span class="k">in</span> <span class="n">Suits</span><span class="p">.</span><span class="n">ToCharArray</span><span class="p">())</span> <span class="k">{</span><span class="c">//あるスーツの文字を切り取って</span>
            <span class="k">if</span><span class="p">(</span><span class="n">cards</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="n">cards</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="n">suit</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span><span class="s">&quot;&quot;</span><span class="p">).</span><span class="n">Length</span> <span class="p">==</span> <span class="m">5</span><span class="p">)</span> <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
            <span class="c">//5文字減ったら5枚全て同じスーツ</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsStraight</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">rankListInCards</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span><span class="c">//カードのランクのみ</span>
        <span class="c">//ランク切り出し</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="m">9</span><span class="p">;</span> <span class="n">i</span> <span class="p">=</span> <span class="n">i</span> <span class="p">+</span> <span class="m">2</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">rankListInCards</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">cards</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">ToString</span><span class="p">());</span>
        <span class="k">}</span>
        <span class="c">//並び替え</span>
        <span class="n">rankListInCards</span><span class="p">.</span><span class="n">Sort</span><span class="p">(</span><span class="n">cardRankSort</span><span class="p">);</span>
        <span class="c">//ソート済みカードリスト作成</span>
        <span class="kt">string</span> <span class="n">sortedCards</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
        <span class="k">foreach</span><span class="p">(</span><span class="kt">string</span> <span class="n">card</span> <span class="k">in</span> <span class="n">rankListInCards</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">sortedCards</span> <span class="p">+=</span> <span class="n">card</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="c">//判定</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Ranks</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="n">sortedCards</span><span class="p">))</span> <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">sortedCards</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">==</span> <span class="sc">&#39;A&#39;</span><span class="p">)</span> <span class="k">{</span><span class="c">//先頭がAなら</span>
            <span class="c">//末尾に移してもう一度判定</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Ranks</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="n">sortedCards</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">).</span><span class="n">PadRight</span><span class="p">(</span><span class="m">5</span><span class="p">,</span> <span class="sc">&#39;A&#39;</span><span class="p">)))</span> <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">Is3Cards</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">IsAnyCards</span><span class="p">(</span><span class="n">cards</span><span class="p">,</span> <span class="m">3</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">Is2Pair</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">foreach</span><span class="p">(</span><span class="kt">char</span> <span class="n">Rank</span> <span class="k">in</span> <span class="n">Ranks</span><span class="p">.</span><span class="n">ToCharArray</span><span class="p">())</span> <span class="k">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">cards</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="n">cards</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="n">Rank</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span> <span class="s">&quot;&quot;</span><span class="p">).</span><span class="n">Length</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="k">{</span><span class="c">//One pairだったら</span>
                <span class="k">return</span> <span class="n">Is1Pair</span><span class="p">(</span><span class="n">cards</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="n">Rank</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span><span class="s">&quot;&quot;</span><span class="p">));</span><span class="c">//One pairが2回でTwo pair</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">Is1Pair</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">IsAnyCards</span><span class="p">(</span><span class="n">cards</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="c">//あるカードがany枚含まれているかどうかを判定</span>
    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsAnyCards</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">,</span> <span class="kt">int</span> <span class="n">any</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">foreach</span><span class="p">(</span><span class="kt">char</span> <span class="n">Rank</span> <span class="k">in</span> <span class="n">Ranks</span><span class="p">.</span><span class="n">ToCharArray</span><span class="p">())</span> <span class="k">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">cards</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="n">cards</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="n">Rank</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span> <span class="s">&quot;&quot;</span><span class="p">).</span><span class="n">Length</span> <span class="p">==</span> <span class="n">any</span><span class="p">)</span> <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">int</span> <span class="nf">cardRankSort</span><span class="p">(</span><span class="kt">string</span> <span class="n">x</span><span class="p">,</span> <span class="kt">string</span> <span class="n">y</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">Ranks</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="p">-</span> <span class="n">Ranks</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">y</span><span class="p">);</span> 
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5159/addtag/" class="addtag" id="addtag_5159">タグ</a>:
	
    
    <a href="/web/20080309030640/http://ja.doukaku.org/tag/C%232.0/">C#2.0</a>
    
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5159/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5159/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5159"
  >-</span><span
  class="button yellow"
  id="rating_z_5159"
  >0</span><span 
  class="button green"
  id="rating_p_5159"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5159/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment5165">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/641/" target="_top">seri</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5165/">#5165</a>(<script language="JavaScript">print_time(new Date("2008/01/04 08:46 GMT"));</script><noscript>2008/01/04 08:46 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>思ったより時間かかってしまいました
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">Poker</span>
<span class="k">{</span>
    <span class="k">class</span> <span class="nc">Program</span>
    <span class="k">{</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">args</span><span class="p">.</span><span class="n">Length</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span>
                <span class="k">return</span><span class="p">;</span>

            <span class="n">Poker</span> <span class="n">poker</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Poker</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">poker</span><span class="p">.</span><span class="n">Judge</span><span class="p">());</span>
        <span class="k">}</span>
    <span class="k">}</span>

    <span class="k">public</span> <span class="k">class</span> <span class="nc">Poker</span>
    <span class="k">{</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="n">RANK</span> <span class="p">=</span> <span class="s">&quot;A23456789TJQK&quot;</span><span class="p">;</span>
        <span class="kt">string</span> <span class="n">cards</span><span class="p">;</span>
        <span class="kt">string</span> <span class="n">ranks</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">Poker</span><span class="p">(</span><span class="kt">string</span> <span class="n">card</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="n">cards</span> <span class="p">=</span> <span class="n">card</span><span class="p">;</span>
            <span class="n">ranks</span> <span class="p">=</span> <span class="n">SortRanks</span><span class="p">();</span>
        <span class="k">}</span>

        <span class="k">public</span> <span class="kt">string</span> <span class="nf">Judge</span><span class="p">()</span>
        <span class="k">{</span>
            <span class="kt">bool</span> <span class="n">isRoyalStraight</span> <span class="p">=</span> <span class="n">ranks</span> <span class="p">==</span> <span class="s">&quot;ATJQK&quot;</span><span class="p">;</span>
            <span class="kt">bool</span> <span class="n">isStraight</span> <span class="p">=</span> <span class="n">RANK</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">ranks</span><span class="p">)</span> <span class="p">&gt;=</span> <span class="m">0</span><span class="p">;</span>
            <span class="kt">bool</span> <span class="n">isFlush</span> <span class="p">=</span> <span class="n">IsFlush</span><span class="p">();</span>
            <span class="kt">string</span> <span class="n">sameRanks</span> <span class="p">=</span> <span class="n">GetSameRanks</span><span class="p">();</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">isRoyalStraight</span> <span class="p">&amp;&amp;</span> <span class="n">isFlush</span><span class="p">)</span>
                <span class="k">return</span> <span class="s">&quot;Royal flush&quot;</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">isStraight</span> <span class="p">&amp;&amp;</span> <span class="n">isFlush</span><span class="p">)</span>
                <span class="k">return</span> <span class="s">&quot;Straight flush&quot;</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">isStraight</span><span class="p">)</span>
                <span class="k">return</span> <span class="s">&quot;Straight&quot;</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">isFlush</span><span class="p">)</span>
                <span class="k">return</span> <span class="s">&quot;Flush&quot;</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">sameRanks</span> <span class="p">==</span> <span class="s">&quot;4&quot;</span><span class="p">)</span>
                <span class="k">return</span> <span class="s">&quot;Four of a kind&quot;</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">sameRanks</span> <span class="p">==</span> <span class="s">&quot;23&quot;</span><span class="p">)</span>
                <span class="k">return</span> <span class="s">&quot;Full house&quot;</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">sameRanks</span> <span class="p">==</span> <span class="s">&quot;3&quot;</span><span class="p">)</span>
                <span class="k">return</span> <span class="s">&quot;Three of a kind&quot;</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">sameRanks</span> <span class="p">==</span> <span class="s">&quot;22&quot;</span><span class="p">)</span>
                <span class="k">return</span> <span class="s">&quot;Two pair&quot;</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">sameRanks</span> <span class="p">==</span> <span class="s">&quot;2&quot;</span><span class="p">)</span>
                <span class="k">return</span> <span class="s">&quot;One pair&quot;</span><span class="p">;</span>
            <span class="k">else</span>
                <span class="k">return</span> <span class="s">&quot;No pair&quot;</span><span class="p">;</span>
        <span class="k">}</span>

        <span class="k">private</span> <span class="kt">string</span> <span class="nf">GetSameRanks</span><span class="p">()</span>
        <span class="k">{</span>
            <span class="kt">int</span><span class="p">[]</span> <span class="n">rankArray</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="m">13</span><span class="p">];</span>
            <span class="kt">string</span> <span class="n">sameRanks</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>

            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">rankArray</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
                <span class="n">rankArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">ranks</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                <span class="k">switch</span> <span class="p">(</span><span class="n">ranks</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="k">{</span>
                    <span class="k">case</span> <span class="sc">&#39;A&#39;</span><span class="p">:</span>
                    <span class="n">rankArray</span><span class="p">[</span><span class="m">0</span><span class="p">]++;</span>
                    <span class="k">break</span><span class="p">;</span>
                    <span class="k">case</span> <span class="sc">&#39;T&#39;</span><span class="p">:</span>
                    <span class="n">rankArray</span><span class="p">[</span><span class="m">9</span><span class="p">]++;</span>
                    <span class="k">break</span><span class="p">;</span>
                    <span class="k">case</span> <span class="sc">&#39;J&#39;</span><span class="p">:</span>
                    <span class="n">rankArray</span><span class="p">[</span><span class="m">10</span><span class="p">]++;</span>
                    <span class="k">break</span><span class="p">;</span>
                    <span class="k">case</span> <span class="sc">&#39;Q&#39;</span><span class="p">:</span>
                    <span class="n">rankArray</span><span class="p">[</span><span class="m">11</span><span class="p">]++;</span>
                    <span class="k">break</span><span class="p">;</span>
                    <span class="k">case</span> <span class="sc">&#39;K&#39;</span><span class="p">:</span>
                    <span class="n">rankArray</span><span class="p">[</span><span class="m">12</span><span class="p">]++;</span>
                    <span class="k">break</span><span class="p">;</span>
                    <span class="k">default</span><span class="p">:</span>
                    <span class="n">rankArray</span><span class="p">[</span><span class="n">ranks</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">-</span> <span class="m">48</span> <span class="p">-</span> <span class="m">1</span><span class="p">]++;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="k">}</span>
            <span class="k">}</span>

            <span class="n">Array</span><span class="p">.</span><span class="n">Sort</span><span class="p">(</span><span class="n">rankArray</span><span class="p">);</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="kt">int</span> <span class="n">n</span> <span class="k">in</span> <span class="n">rankArray</span><span class="p">)</span> <span class="k">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="p">&gt;</span> <span class="m">1</span><span class="p">)</span>
                    <span class="n">sameRanks</span> <span class="p">+=</span> <span class="n">n</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
            <span class="k">}</span>

            <span class="k">return</span> <span class="n">sameRanks</span><span class="p">;</span>
        <span class="k">}</span>

        <span class="k">private</span> <span class="kt">bool</span> <span class="nf">IsFlush</span><span class="p">()</span>
        <span class="k">{</span>
            <span class="kt">char</span> <span class="n">suit</span> <span class="p">=</span> <span class="n">cards</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">cards</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span> <span class="p">+=</span> <span class="m">2</span><span class="p">)</span> <span class="k">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">cards</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">!=</span> <span class="n">suit</span><span class="p">)</span>
                    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="k">}</span>

            <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="k">}</span>

        <span class="k">private</span> <span class="kt">string</span> <span class="nf">SortRanks</span><span class="p">()</span>
        <span class="k">{</span>
            <span class="kt">char</span><span class="p">[]</span> <span class="n">rankBuff</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">char</span><span class="p">[</span><span class="m">5</span><span class="p">];</span>
            <span class="kt">string</span> <span class="n">sortedRank</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>

            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">rankBuff</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
                <span class="n">rankBuff</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="n">cards</span><span class="p">[</span><span class="n">i</span> <span class="p">*</span> <span class="m">2</span> <span class="p">+</span> <span class="m">1</span><span class="p">];</span>

            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">RANK</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                <span class="kt">char</span> <span class="n">c</span> <span class="p">=</span> <span class="n">RANK</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="k">foreach</span> <span class="p">(</span><span class="kt">char</span> <span class="n">c2</span> <span class="k">in</span> <span class="n">rankBuff</span><span class="p">)</span> <span class="k">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="p">==</span> <span class="n">c2</span><span class="p">)</span>
                        <span class="n">sortedRank</span> <span class="p">+=</span> <span class="n">c</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
                <span class="k">}</span>
            <span class="k">}</span>

            <span class="k">return</span> <span class="n">sortedRank</span><span class="p">;</span>
        <span class="k">}</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5165/addtag/" class="addtag" id="addtag_5165">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5165/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5165/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5165"
  >-</span><span
  class="button yellow"
  id="rating_z_5165"
  >0</span><span 
  class="button green"
  id="rating_p_5165"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080309030640/http://ja.doukaku.org/comment/5165/">
    1
    reply
  </a>

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5165/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5166">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5166/">#5166</a>(<script language="JavaScript">print_time(new Date("2008/01/04 09:09 GMT"));</script><noscript>2008/01/04 09:09 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>GetSameRanks()で文字列のフラグを生成する発想は無かったです。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5166/addtag/" class="addtag" id="addtag_5166">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5166"
  >-</span><span
  class="button yellow"
  id="rating_z_5166"
  >0</span><span 
  class="button green"
  id="rating_p_5166"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5165/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5166/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5166/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  

  
    





<div class="comment" id="comment5168">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5168/">#5168</a>(<script language="JavaScript">print_time(new Date("2008/01/04 09:54 GMT"));</script><noscript>2008/01/04 09:54 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #afffaf;">5/5=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>文字列のチェックは最低限ですが
役判定も短めにまとめてみました☆</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include&lt;stdio.h&gt;</span>
<span class="cp">#include&lt;string.h&gt;</span>

<span class="kt">void</span> <span class="n">fortune</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">cards</span><span class="p">){</span>
  <span class="kt">char</span> <span class="o">*</span><span class="n">ranklist</span> <span class="o">=</span> <span class="s">&quot;A23456789TJQK&quot;</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">suit</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span> <span class="n">rank</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span> <span class="n">straight</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">flush</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pair</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>

  <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="n">suit</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">cards</span><span class="p">[</span><span class="n">i</span> <span class="o">*</span> <span class="mi">2</span><span class="p">],</span>
    <span class="n">rank</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="n">ranklist</span><span class="p">,</span> <span class="n">cards</span><span class="p">[</span><span class="n">i</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">1</span><span class="p">])</span> <span class="o">-</span> <span class="n">ranklist</span><span class="p">,</span>
    <span class="n">straight</span> <span class="o">|=</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">rank</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
  <span class="k">while</span><span class="p">(</span><span class="n">straight</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">straight</span> <span class="o">/=</span> <span class="mi">2</span><span class="p">;</span>
  <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="k">for</span><span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
      <span class="n">flush</span> <span class="o">+=</span> <span class="p">(</span><span class="n">suit</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">suit</span><span class="p">[</span><span class="n">j</span><span class="p">]),</span>
      <span class="n">pair</span> <span class="o">+=</span> <span class="p">(</span><span class="n">rank</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">rank</span><span class="p">[</span><span class="n">j</span><span class="p">]);</span>

  <span class="k">if</span><span class="p">(</span><span class="n">flush</span> <span class="o">==</span> <span class="mi">10</span> <span class="o">&amp;&amp;</span> <span class="n">straight</span> <span class="o">==</span> <span class="mi">7681</span><span class="p">)</span>         <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Royal flush</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
  <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">flush</span> <span class="o">==</span> <span class="mi">10</span> <span class="o">&amp;&amp;</span> <span class="n">straight</span> <span class="o">==</span> <span class="mi">31</span><span class="p">)</span>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Straight flush</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
  <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pair</span> <span class="o">==</span> <span class="mi">6</span><span class="p">)</span>                          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Four of a kind</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
  <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pair</span> <span class="o">==</span> <span class="mi">4</span><span class="p">)</span>                          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Full house</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
  <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">flush</span> <span class="o">==</span> <span class="mi">10</span><span class="p">)</span>                        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Flush</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
  <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">straight</span> <span class="o">==</span> <span class="mi">7681</span> <span class="o">||</span> <span class="n">straight</span> <span class="o">==</span> <span class="mi">31</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Straight</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
  <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pair</span> <span class="o">==</span> <span class="mi">3</span><span class="p">)</span>                          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Three of a kind</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
  <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pair</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>                          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Two pair</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
  <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pair</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>                          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;One pair</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
  <span class="k">else</span>                                        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;No pair</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">void</span><span class="p">){</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;SQSJSASKST&quot;</span><span class="p">);</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;D9D7D6D5D8&quot;</span><span class="p">);</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;C2D2S2H3H2&quot;</span><span class="p">);</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;C2D3S2H3H2&quot;</span><span class="p">);</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;S9S4S8STSJ&quot;</span><span class="p">);</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;C4H7D5S6H3&quot;</span><span class="p">);</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;S6H6C5DQC6&quot;</span><span class="p">);</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;S6HQC5DQC6&quot;</span><span class="p">);</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;S6H4C5DQC6&quot;</span><span class="p">);</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;SJSQSKSAC2&quot;</span><span class="p">);</span>

  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;SQSJDASKST&quot;</span><span class="p">);</span>
  <span class="n">fortune</span><span class="p">(</span><span class="s">&quot;S4S3DASKS2&quot;</span><span class="p">);</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5168/addtag/" class="addtag" id="addtag_5168">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5168/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5168/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #afffaf;"
  >5/5=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5168"
  >-</span><span
  class="button yellow"
  id="rating_z_5168"
  >0</span><span 
  class="button green"
  id="rating_p_5168"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5168/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5169">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5169/">#5169</a>(<script language="JavaScript">print_time(new Date("2008/01/04 11:01 GMT"));</script><noscript>2008/01/04 11:01 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  ワイルドカード(WWで表す)に対応させてみました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133</pre></td><td class="code"><div class="highlight"><pre><span class="c">//http://ja.doukaku.org/121/　投稿用</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
    <span class="k">const</span> <span class="kt">string</span> <span class="n">Ranks</span> <span class="p">=</span> <span class="s">&quot;A23456789TJQKA&quot;</span><span class="p">;</span>
    <span class="k">const</span> <span class="kt">string</span> <span class="n">Suits</span> <span class="p">=</span> <span class="s">&quot;SDHC&quot;</span><span class="p">;</span>
    <span class="k">enum</span> <span class="n">Hands</span> <span class="k">{</span>
        <span class="n">Five_of_a_kind</span> <span class="p">=</span> <span class="m">10</span><span class="p">,</span>
        <span class="n">Royal_straight_flush</span> <span class="p">=</span> <span class="m">9</span><span class="p">,</span>
        <span class="n">Straight_flush</span> <span class="p">=</span> <span class="m">8</span><span class="p">,</span>
        <span class="n">Four_of_a_kind</span> <span class="p">=</span> <span class="m">7</span><span class="p">,</span>
        <span class="n">Full_house</span> <span class="p">=</span> <span class="m">6</span><span class="p">,</span>
        <span class="n">Flush</span> <span class="p">=</span> <span class="m">5</span><span class="p">,</span>
        <span class="n">Straight</span> <span class="p">=</span> <span class="m">4</span><span class="p">,</span>
        <span class="n">Three_of_a_kind</span> <span class="p">=</span> <span class="m">3</span><span class="p">,</span>
        <span class="n">Two_pair</span> <span class="p">=</span> <span class="m">2</span><span class="p">,</span>
        <span class="n">One_pair</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
        <span class="n">No_pair</span> <span class="p">=</span> <span class="m">0</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
        <span class="n">Hands</span> <span class="n">hand</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        <span class="k">foreach</span><span class="p">(</span><span class="kt">char</span> <span class="n">suit</span> <span class="k">in</span> <span class="n">Suits</span><span class="p">.</span><span class="n">ToCharArray</span><span class="p">())</span> <span class="k">{</span>
            <span class="k">foreach</span><span class="p">(</span><span class="kt">char</span> <span class="n">rank</span> <span class="k">in</span> <span class="n">Ranks</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">).</span><span class="n">ToCharArray</span><span class="p">())</span> <span class="k">{</span>
                <span class="kt">string</span> <span class="n">wildCard</span> <span class="p">=</span> <span class="n">suit</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="n">rank</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
                <span class="n">Hands</span> <span class="n">tmpHand</span> <span class="p">=</span> <span class="n">GetHands</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Replace</span><span class="p">(</span><span class="s">&quot;WW&quot;</span><span class="p">,</span> <span class="n">wildCard</span><span class="p">));</span>
                <span class="n">hand</span> <span class="p">=</span> <span class="n">tmpHand</span> <span class="p">&gt;</span> <span class="n">hand</span> <span class="p">?</span> <span class="n">tmpHand</span> <span class="p">:</span> <span class="n">hand</span><span class="p">;</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">hand</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="n">Hands</span> <span class="nf">GetHands</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Is5cards</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span> <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">Five_of_a_kind</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">IsRoyalStraightFlush</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span> <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">Royal_straight_flush</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">IsStraightFlush</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span> <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">Straight_flush</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Is4cards</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span> <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">Five_of_a_kind</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">IsFullHouse</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span> <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">Full_house</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">IsFlush</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span> <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">Flush</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">IsStraight</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span> <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">Straight</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Is3Cards</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span> <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">Three_of_a_kind</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Is2Pair</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span> <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">Two_pair</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">Is1Pair</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span> <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">One_pair</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">Hands</span><span class="p">.</span><span class="n">No_pair</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">Is5cards</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">IsAnyCards</span><span class="p">(</span><span class="n">cards</span><span class="p">,</span> <span class="m">5</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="n">IsRoyalStraightFlush</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span><span class="k">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">IsFlush</span><span class="p">(</span><span class="n">cards</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="n">IsStraight</span><span class="p">(</span><span class="n">cards</span><span class="p">))</span><span class="k">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="m">9</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span><span class="c">//2～9までの数字が含まれていたらNG</span>
                <span class="k">if</span><span class="p">(</span><span class="n">cards</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">i</span><span class="p">.</span><span class="n">ToString</span><span class="p">())</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span> <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsStraightFlush</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">IsFlush</span><span class="p">(</span><span class="n">cards</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="n">IsStraight</span><span class="p">(</span><span class="n">cards</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">Is4cards</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">IsAnyCards</span><span class="p">(</span><span class="n">cards</span><span class="p">,</span> <span class="m">4</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsFullHouse</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">Is3Cards</span><span class="p">(</span><span class="n">cards</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="n">Is1Pair</span><span class="p">(</span><span class="n">cards</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsFlush</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">foreach</span><span class="p">(</span><span class="kt">char</span> <span class="n">suit</span> <span class="k">in</span> <span class="n">Suits</span><span class="p">.</span><span class="n">ToCharArray</span><span class="p">())</span> <span class="k">{</span><span class="c">//あるスーツの文字を切り取って</span>
            <span class="k">if</span><span class="p">(</span><span class="n">cards</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="n">cards</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="n">suit</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span><span class="s">&quot;&quot;</span><span class="p">).</span><span class="n">Length</span> <span class="p">==</span> <span class="m">5</span><span class="p">)</span> <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
            <span class="c">//5文字減ったら5枚全て同じスーツ</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsStraight</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">rankListInCards</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span><span class="c">//カードのランクのみ</span>
        <span class="c">//ランク切り出し</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="m">9</span><span class="p">;</span> <span class="n">i</span> <span class="p">=</span> <span class="n">i</span> <span class="p">+</span> <span class="m">2</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">rankListInCards</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">cards</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">ToString</span><span class="p">());</span>
        <span class="k">}</span>
        <span class="c">//並び替え</span>
        <span class="n">rankListInCards</span><span class="p">.</span><span class="n">Sort</span><span class="p">(</span><span class="n">cardRankSort</span><span class="p">);</span>
        <span class="c">//ソート済みカードリスト作成</span>
        <span class="kt">string</span> <span class="n">sortedCards</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
        <span class="k">foreach</span><span class="p">(</span><span class="kt">string</span> <span class="n">card</span> <span class="k">in</span> <span class="n">rankListInCards</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">sortedCards</span> <span class="p">+=</span> <span class="n">card</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="c">//判定</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Ranks</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="n">sortedCards</span><span class="p">))</span> <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">sortedCards</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">==</span> <span class="sc">&#39;A&#39;</span><span class="p">)</span> <span class="k">{</span><span class="c">//先頭がAなら</span>
            <span class="c">//末尾に移してもう一度判定</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Ranks</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="n">sortedCards</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">).</span><span class="n">PadRight</span><span class="p">(</span><span class="m">5</span><span class="p">,</span> <span class="sc">&#39;A&#39;</span><span class="p">)))</span> <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">Is3Cards</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">IsAnyCards</span><span class="p">(</span><span class="n">cards</span><span class="p">,</span> <span class="m">3</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">Is2Pair</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">foreach</span><span class="p">(</span><span class="kt">char</span> <span class="n">Rank</span> <span class="k">in</span> <span class="n">Ranks</span><span class="p">.</span><span class="n">ToCharArray</span><span class="p">())</span> <span class="k">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">cards</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="n">cards</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="n">Rank</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span> <span class="s">&quot;&quot;</span><span class="p">).</span><span class="n">Length</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="k">{</span><span class="c">//One pairだったら</span>
                <span class="k">return</span> <span class="n">Is1Pair</span><span class="p">(</span><span class="n">cards</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="n">Rank</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span><span class="s">&quot;&quot;</span><span class="p">));</span><span class="c">//One pairが2回でTwo pair</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">Is1Pair</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">IsAnyCards</span><span class="p">(</span><span class="n">cards</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="c">//あるカードがany枚含まれているかどうかを判定</span>
    <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsAnyCards</span><span class="p">(</span><span class="kt">string</span> <span class="n">cards</span><span class="p">,</span> <span class="kt">int</span> <span class="n">any</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">foreach</span><span class="p">(</span><span class="kt">char</span> <span class="n">Rank</span> <span class="k">in</span> <span class="n">Ranks</span><span class="p">.</span><span class="n">ToCharArray</span><span class="p">())</span> <span class="k">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">cards</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="n">cards</span><span class="p">.</span><span class="n">Replace</span><span class="p">(</span><span class="n">Rank</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span> <span class="s">&quot;&quot;</span><span class="p">).</span><span class="n">Length</span> <span class="p">==</span> <span class="n">any</span><span class="p">)</span> <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">int</span> <span class="nf">cardRankSort</span><span class="p">(</span><span class="kt">string</span> <span class="n">x</span><span class="p">,</span> <span class="kt">string</span> <span class="n">y</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">Ranks</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="p">-</span> <span class="n">Ranks</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">y</span><span class="p">);</span> 
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5169/addtag/" class="addtag" id="addtag_5169">タグ</a>:
	
    
    <a href="/web/20080309030640/http://ja.doukaku.org/tag/C%232.0/">C#2.0</a>
    
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5169/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5169/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5169"
  >-</span><span
  class="button yellow"
  id="rating_z_5169"
  >0</span><span 
  class="button green"
  id="rating_p_5169"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5169/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5170">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5170/">#5170</a>(<script language="JavaScript">print_time(new Date("2008/01/04 11:10 GMT"));</script><noscript>2008/01/04 11:10 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  簡潔になるようにしたつもりが、混沌としたものになってしまいました…。<br/>実行結果:<br/>(format&nbsp;t&nbsp;"~A&nbsp;=&gt;&nbsp;~A~%"&nbsp;x&nbsp;(hand&nbsp;x&nbsp;"SQSJSASKST"))<br/>;==&gt;<br/>;SQSJSASKST&nbsp;=&gt;&nbsp;Royal&nbsp;straight&nbsp;flash&nbsp;
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52</pre></td><td class="code"><div class="highlight"><pre>(defpackage :doukaku-121 (:use :cl :ppcre))
(in-package :doukaku-121)

(defun break-part (str &amp;optional (ace-val 1) &amp;aux suit rank)
  (do-matches-as-strings (match &quot;([SDHC][A2-9TJQK])&quot; str)
    (push (schar match 0) suit)
    (push (schar match 1) rank))
  (values
   (sublis `((A . ,ace-val) (T . 10) (J . 11) (Q . 12) (K . 13))
           (mapcar (lambda (x)(read-from-string (string x))) 
                   (nreverse rank)))
   suit))

(defun flashp (str)
  (let ((s (nth-value 1 (break-part str))))
    (and (every (lambda (x) (char= (car s) x)) s) &#39;flash)))

(defun kinds (str)
  (let ((k (length (delete-duplicates (break-part str)))))
    (if (= k 5) nil k)))

(defun straightp (str)
  (flet ((check (str ace)
           (let ((lst (sort (break-part str ace) #&#39;&lt;)))
             (mapc (lambda (x y) (unless (= 1 (- y x)) (return-from check nil)))
                   lst (cdr lst))
             (values &#39;straight (if (= 1 ace) nil &#39;royal)))))
    (or (check str 1) (check str 14))))

(defun 3-2p (str)
  (do ((l (break-part str) (cdr l)))
      ((null (cddr l)) nil)
    (case (count (car l) l)
      (3 (return t))
      (4 (return nil)))))

(defun hand (str &amp;optional (out t))
  (multiple-value-bind (straightp royalp) (straightp str)
    (let ((hand (list royalp straightp (flashp str) (kinds str) (3-2p str))))
      (destructuring-bind (ignore flashp kinds 3-2p) hand
        (declare (ignore ignore))
        (if 3-2p
            (case kinds
              (2 (format out &quot;Full house&quot;))
              (3 (format out &quot;Three of a kind&quot;)))
            (case kinds
              (2 (format out &quot;Four of a kind&quot;))
              (3 (format out &quot;Two pair&quot;))
              (4 (format out &quot;One paire&quot;))
              (otherwise (if (or straightp flashp)
                             (format out &quot;~@(~{~@[~A ~]~}~)&quot; hand)
                             (format out &quot;No pair&quot;)))))))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5170/addtag/" class="addtag" id="addtag_5170">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5170/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5170/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5170"
  >-</span><span
  class="button yellow"
  id="rating_z_5170"
  >0</span><span 
  class="button green"
  id="rating_p_5170"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080309030640/http://ja.doukaku.org/comment/5170/">
    1
    reply
  </a>

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5170/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5171">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5171/">#5171</a>(<script language="JavaScript">print_time(new Date("2008/01/04 11:38 GMT"));</script><noscript>2008/01/04 11:38 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>すいません、修正前のをコピペしてました。実行例も不要なxが混じってました。正確には、
(format t &quot;~A =&gt; ~A~%&quot; (hand &quot;SQSJSASKST&quot;))
です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="highlight"><pre>40c40
&lt;       (destructuring-bind (ignore flashp kinds 3-2p) hand
<span class="gd">---</span>
&gt;       (destructuring-bind (ignore flashp straightp kinds 3-2p) hand
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5171/addtag/" class="addtag" id="addtag_5171">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5171/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5171/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5171"
  >-</span><span
  class="button yellow"
  id="rating_z_5171"
  >0</span><span 
  class="button green"
  id="rating_p_5171"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5170/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5171/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5171/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment5172">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/643/" target="_top">squld</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5172/">#5172</a>(<script language="JavaScript">print_time(new Date("2008/01/04 12:47 GMT"));</script><noscript>2008/01/04 12:47 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  既にJavaで解かれていますが、ちょっと捻ってみました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Poker</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;SQSJSASKST&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;D9D7D6D5D8&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;C2D2S2H3H2&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;C2D3S2H3H2&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;S9S4S8STSJ&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;C4H7D5S6H3&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;S6H6C5DQC6&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;S6HQC5DQC6&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;S6H4C5DQC6&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getPokerRole</span><span class="o">(</span><span class="s">&quot;SJSQSKSAC2&quot;</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="n">String</span> <span class="n">getPokerRole</span><span class="o">(</span><span class="n">String</span> <span class="n">aCards</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">[]&gt;</span> <span class="n">tCards</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">[]&gt;();</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">aCards</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">tCards</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span> <span class="n">aCards</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">),</span> <span class="mi">1</span> <span class="o">+</span> <span class="s">&quot;A23456789TJQK&quot;</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">aCards</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">))</span> <span class="o">});</span>
        <span class="o">}</span>

        <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">tCards</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">[]&gt;()</span> <span class="o">{</span>
            <span class="k">public</span> <span class="kt">int</span> <span class="n">compare</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">aLeftCard</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">aRightCard</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">aLeftCard</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">-</span> <span class="n">aRightCard</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
            <span class="o">}</span>
        <span class="o">});</span>

        <span class="kt">int</span> <span class="n">tRoyalCardCount</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">boolean</span> <span class="n">tIsStraight</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="kt">boolean</span> <span class="n">tIsFlush</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">tPairs</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">5</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">tPairKinds</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tCards</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">binarySearch</span><span class="o">(</span><span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">13</span> <span class="o">},</span> <span class="n">tCards</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)[</span><span class="mi">1</span><span class="o">])</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">tRoyalCardCount</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">continue</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">tCards</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)[</span><span class="mi">0</span><span class="o">]</span> <span class="o">!=</span> <span class="n">tCards</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)[</span><span class="mi">0</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">tIsFlush</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">tCards</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)[</span><span class="mi">1</span><span class="o">]</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">!=</span> <span class="n">tCards</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)[</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">tIsStraight</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">tCards</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)[</span><span class="mi">1</span><span class="o">]</span> <span class="o">==</span> <span class="n">tCards</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)[</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">tPairs</span><span class="o">[</span><span class="n">tPairKinds</span><span class="o">]++;</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">tPairKinds</span><span class="o">++;</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">tPairs</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">tRoyalCardCount</span> <span class="o">==</span> <span class="mi">5</span> <span class="o">&amp;&amp;</span> <span class="n">tIsFlush</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">&quot;Royal flush&quot;</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">tIsFlush</span> <span class="o">&amp;&amp;</span> <span class="n">tIsStraight</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">&quot;Straight flush&quot;</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">tIsFlush</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">&quot;Flush&quot;</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">tIsStraight</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">&quot;Straight&quot;</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">tPairs</span><span class="o">[</span><span class="mi">4</span><span class="o">]</span> <span class="o">==</span> <span class="mi">3</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">&quot;Four of a kind&quot;</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">tPairs</span><span class="o">[</span><span class="mi">4</span><span class="o">]</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="n">tPairs</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">&quot;Full house&quot;</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">tPairs</span><span class="o">[</span><span class="mi">4</span><span class="o">]</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">&quot;Three of a kind&quot;</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">tPairs</span><span class="o">[</span><span class="mi">4</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">tPairs</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">&quot;Two pair&quot;</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">tPairs</span><span class="o">[</span><span class="mi">4</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">tPairs</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">&quot;One pair&quot;</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="s">&quot;No pair&quot;</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5172/addtag/" class="addtag" id="addtag_5172">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5172/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5172/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5172"
  >-</span><span
  class="button yellow"
  id="rating_z_5172"
  >0</span><span 
  class="button green"
  id="rating_p_5172"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5172/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5174">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5174/">#5174</a>(<script language="JavaScript">print_time(new Date("2008/01/04 15:30 GMT"));</script><noscript>2008/01/04 15:30 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Squeak Smalltalk で。</p>
<p>バッグ（a Bag）はマルチセットとも呼ばれる特殊なコレクションのひとつで、要素を、その種類と出現数との組として管理しています。情報は内包される辞書に保持され、#valuesAndCounts をコールすることでアクセスできます。なお、Smalltalk で辞書(a Dictionary)とは、連想配列のことを指します。</p>
<p>辞書は #values で、自らが要素として持つ「キー -&gt; 値」の組の「値」（この場合、出現数）のみを抽出した配列を返します。本スクリプトでは、この出現数のみを抽出した配列（ソート済み）のパターンを見て(#caseOf:otherwise:)、手の役（ストレートやフラッシュ以外の…）を判定しています。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>| 入力 ランク順 ランク スート |
入力 := &#39;SQSJSASKST&#39;.
ランク順 := &#39;A&#39;, ($2 to: $9), &#39;TJQK&#39;.
ランク := Bag new.
スート := Bag new.
入力 pairsDo: [:a :b | スート add: a. ランク add: (ランク順 indexOf: b)].
スート asSet size = 1 ifTrue: [
    ランク asSortedArray = #(1 10 11 12 13) ifTrue: [^&#39;Royal flush&#39;].
    ランク asSortedArray = (ランク min to: ランク min + 4) ifTrue: [^&#39;Straight flush&#39;].
    ^&#39;Flush&#39;].
ランク asSortedArray = (ランク min to: ランク min + 4) ifTrue: [^&#39;Straight&#39;].
^ランク valuesAndCounts values sort caseOf: {
    [#(1 4)] -&gt; [&#39;Four of a kind&#39;].
    [#(2 3)] -&gt; [&#39;Full house&#39;].
    [#(1 1 3)] -&gt; [&#39;Three of a kind&#39;].
    [#(1 2 2)] -&gt; [&#39;Two pair&#39;].
    [#(1 1 1 2)] -&gt; [&#39;One pair&#39;]} otherwise: [&#39;No pair&#39;]
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5174/addtag/" class="addtag" id="addtag_5174">タグ</a>:
	
    
    <a href="/web/20080309030640/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5174/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5174/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5174"
  >-</span><span
  class="button yellow"
  id="rating_z_5174"
  >0</span><span 
  class="button green"
  id="rating_p_5174"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5174/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5181">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5181/">#5181</a>(<script language="JavaScript">print_time(new Date("2008/01/05 02:02 GMT"));</script><noscript>2008/01/05 02:02 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/prolog/">
	  Prolog
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>面倒なので、大文字ではなくて、小文字でカードを記述しています。スマートに出来るかと思ったけど、結局力業でした。

実行結果：
$ pl -qs 121.pl
sqsjsaskst-&gt;Royal flush
d9d7d6d5d8-&gt;Straight flush
c2d2s2h3h2-&gt;four of a kind
c2d3s2h3h2-&gt;Full house
s9s4s8stsj-&gt;Flush
c4h7d5s6h3-&gt;Straight
s6h6c5dqc6-&gt;Three of a kind
s6hqc5dqc6-&gt;Two pair
s6h4c5dqc6-&gt;One pair
sjsqsksac2-&gt;No Pair
?-

</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50</pre></td><td class="code"><div class="highlight"><pre>straight([(_,A)|As]):-seq(A,As).

seq(_,[]).
seq(P,[(_,N)|Ns]):-succ(P,N),seq(N,Ns).

flush([(A,_)|As]):-flush0(A,As).
flush0(_,[]).
flush0(A,[(A,_)|As]):-flush0(A,As).

count([],[]).
count([(_,N)|Ns],R):-count(Ns,Rs),countw(N,Rs,R).

countw(N,[],[(N,1)]).
countw(N,[(N,C0)|R],[(N,C)|R]):-succ(C0,C).
countw(N,[P|R0],[P|R]):-countw(N,R0,R).

sortcard(C,Cs):-predsort(cmp,C,Cs).
cmp(&gt;,(_,N1),(_,N2)):-N1&gt;N2,!.
cmp(&lt;,_,_):-!.

p([(S,1),(S,10),(S,11),(S,12),(S,13)],&#39;Royal flush&#39;):-!.
p(C, &#39;Straight flush&#39;):-straight(C),flush(C),!.
p(C, &#39;Flush&#39;):-flush(C),!.
p(C, &#39;Straight&#39;):-straight(C),!.
p(C, R) :- count(C,C1), maplist(arg(2),C1,C2),msort(C2,C3),n(C3, R).
p(_, &#39;No Pair&#39;).

n([2,3],&#39;Full house&#39;):-!.
n([1,4],&#39;four of a kind&#39;):-!.
n([1,1,3],&#39;Three of a kind&#39;):-!.
n([1,2,2],&#39;Two pair&#39;):-!.
n([1,1,1,2],&#39;One pair&#39;):-!.

tcard1([],[]).
tcard1([S,Na|Cs],[(S,N)|Cs1]):-nth1(N,[a,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;,t,j,q,k],Na),tcard1(Cs,Cs1).

poker(C,R):-atom_chars(C,Cs),tcard1(Cs,R0),sortcard(R0,R1),p(R1,R),!.

test(C):-poker(C,R),write(C-&gt;R),nl.

:-maplist(test,[sqsjsaskst,
                d9d7d6d5d8,
                c2d2s2h3h2,
                c2d3s2h3h2,
                s9s4s8stsj,
                c4h7d5s6h3,
                s6h6c5dqc6,
                s6hqc5dqc6,
                s6h4c5dqc6,
                sjsqsksac2]).
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5181/addtag/" class="addtag" id="addtag_5181">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/prolog/">
		Prolog
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5181/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5181/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5181"
  >-</span><span
  class="button yellow"
  id="rating_z_5181"
  >0</span><span 
  class="button green"
  id="rating_p_5181"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080309030640/http://ja.doukaku.org/comment/5181/">
    1
    reply
  </a>

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5181/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5182">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5182/">#5182</a>(<script language="JavaScript">print_time(new Date("2008/01/05 02:03 GMT"));</script><noscript>2008/01/05 02:03 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ああ、そうだ。このお題は良い問題だと思います。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5182/addtag/" class="addtag" id="addtag_5182">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5182"
  >-</span><span
  class="button yellow"
  id="rating_z_5182"
  >0</span><span 
  class="button green"
  id="rating_p_5182"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5181/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5182/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5182/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment5183">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/648/" target="_top">carver</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5183/">#5183</a>(<script language="JavaScript">print_time(new Date("2008/01/05 06:07 GMT"));</script><noscript>2008/01/05 06:07 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Mac OS X (PowerPC 32bit) アセンブリで。PowerPCアセンブリ読めというのも無茶なので、以下やってることの説明です。先にほとんど同じロジック（#5168）で投稿されてしまいましたけど。</p>
<p>スート役は「すべてのスート役が同じ」場合のみ成り立つので、最初のスートを記録しておき、二枚目以降と比較すれば判断できます。途中に一つでも異なるスートがあれば、スート用レジスタを 0 にします。このレジスタには最初のスートのASCIIコードが入っているので、レジスタが 0 でなければフラッシュ系の役が成立することになります。</p>
<p>ランク役では、重複した枚数ごとにレジスタを用意します。このレジスタは1-13までのランクをビットで表したフラグです。</p>
<ul class="simple">
<li>r8:  ノーペア（1枚）</li>
<li>r9:  ワンペア（2枚）</li>
<li>r10: スリーカード（3枚）</li>
<li>r11: フォーカード（4枚）</li>
</ul>
<p>最初のカードのランクは、ノーペア用レジスタのビット 1&lt;&lt;ランク を立てます（ランクが5なら 1&lt;&lt;4 ）。次のカードのランクも同じであれば、ワンペア用レジスタの同ビットを立てて、ノーペア用レジスタの同ビットを下ろします。これでペアは判断できます。</p>
<p>最後にストレートとロイヤルフラッシュですが、ノーペア用レジスタを使います。ロイヤルフラッシュはATJQKの組み合わせが決まっていますから、その箇所のビットを立てたビットマスクで判断できます。ストレートは連続した5つのビット（11111）をシフトしながらAND演算して判断します。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382</pre></td><td class="code"><div class="highlight"><pre>;; ------------------------------------------------
;; poker.s for Mac OS X (PowerPC 32bit)
;; % as -o poker.o poker.s &amp;&amp; gcc poker.o -o poker
;; ------------------------------------------------

        .machine ppc
        .globl  _main

;; レジスタ
;;
;; r4:  char *argv[]
;; r5:  残りカードの枚数
;; r6:  スキャンする文字（スートか数字）
;; r7:  スート役（フラッシュ）フラグ（役候補スートのASCIIコードが入る）
;; r8:  ノーペアの数字用フラグ（13ビット使用）
;; r9:  ワンペア、ツーペア用フラグ（13ビット使用）
;; r10: スリーカード用フラグ（13ビット使用）
;; r11: フォーカード用フラグ（13ビット使用）
;;

_main:
        ;; レジスタの初期化
        addi    r4, r4, 4       ; argv[1] にポインタを進める
        lwz     r4, 0(r4)       ; argv[1] の文字列をレジスタにロード
        li      r5, 5           ; 残りカード5枚
        li      r7, 0
        li      r8, 0
        li      r9, 0
        li      r10, 0
        li      r11, 0

_scan_card:
        ;; 一文字目（スート）
        lbz     r6, 0(r4)
        bl      _scan_suit      ; サブルーチン
        addi    r4, r4, 1

        ;; 二文字目（数字）
        lbz     r6, 0(r4)
        bl      _scan_rank      ; サブルーチン

        ;; 繰り返しの準備
        subi    r5, r5, 1
        cmpli   cr7, r5, 0
        beq     cr7, _show_hand ; 5枚チェックし終えたら役を表示する
        addi    r4, r4, 1
        b       _scan_card      ; 繰り返し

;; スートのスキャン
_scan_suit:
        ;; 最初のカードならそのままフラグをセット
        cmpli   cr7, r5, 5
        beq     cr7, _scan_first_suit

        ;; 二枚目以降
        cmpli   cr7, r7, 0      ; フラグがゼロならフラッシュの可能性もゼロ
        beqlr   cr7
        cmpl    cr7, r7, r6     ; 前のスートと同じなら戻る
        beqlr   cr7
        li      r7, 0           ; 前のスートと異なるならフラグをクリア
        blr                     ; サブルーチン終了

;; 最初のカードのスートのスキャン
_scan_first_suit:
        add     r7, r0, r6      ; r0 は 0 とみなされるので、r7 = r6
        blr                     ; サブルーチン終了

;; ランクのスキャン
_scan_rank:
        ;; ASCIIコードを 0-12 の整数にする
        cmpli   cr7, r6, 65     ; &#39;A&#39;
        beq     cr7, _scan_rank_ace
        cmpli   cr7, r6, 84     ; &#39;T&#39;
        beq     cr7, _scan_rank_ten
        cmpli   cr7, r6, 74     ; &#39;J&#39;
        beq     cr7, _scan_rank_jack
        cmpli   cr7, r6, 81     ; &#39;Q&#39;
        beq     cr7, _scan_rank_queen
        cmpli   cr7, r6, 75     ; &#39;K&#39;
        beq     cr7, _scan_rank_king
        
        ;; 2-9
        subi    r6, r6, 49
        b       _scan_rank_body

_scan_rank_ace:
        li      r6, 0
        b       _scan_rank_body

_scan_rank_ten:
        li      r6, 9
        b       _scan_rank_body

_scan_rank_jack:
        li      r6, 10
        b       _scan_rank_body

_scan_rank_queen:
        li      r6, 11
        b       _scan_rank_body

_scan_rank_king:
        li      r6, 12
        b       _scan_rank_body

;; r15: ランクのビット表現
;; r16: 論理演算結果
_scan_rank_body:
        li      r0, 1
        slw     r15, r0, r6     ; 左シフト (1&lt;&lt;r6)
        
        ;; フォーカード：同ランクのカードが三枚あるかチェック
        and     r16, r10, r15
        cmpli   cr7, r16, 0
        bgt     cr7, _switch_four_kind_flag

        ;; スリーカード：同ランクのカードが二枚あるかチェック
        and     r16, r9, r15
        cmpli   cr7, r16, 0
        bgt     cr7, _switch_three_kind_flag

        ;; ワンペア：同ランクのカードが一枚あるかチェック
        and     r16, r8, r15
        cmpli   cr7, r16, 0
        bgt     cr7, _switch_one_pair_flag
        
        ;; ノーペア
        or      r8, r8, r15     ; ビットフラグを立てる
        blr                     ; サブルーチン終了

;; ワンペア
_switch_one_pair_flag:
        or      r9, r9, r15     ; ビットフラグを立てる
        xor     r8, r8, r15     ; ノーペアのフラグを下ろす
        blr                     ; サブルーチン終了

;; スリーカード
_switch_three_kind_flag:
        or      r10, r10, r15   ; ビットフラグを立てる
        xor     r9, r9, r15     ; ワンペアのフラグを下ろす
        blr                     ; サブルーチン終了

;; フォーカード
_switch_four_kind_flag:
        or      r11, r11, r15   ; ビットフラグを立てる
        xor     r8, r8, r15     ; スリーカードのフラグを下ろす
        blr                     ; サブルーチン終了

;; 役の表示
_show_hand:
        ;; フラッシュ、ストレートフラッシュ、
        ;; ロイヤルフラッシュのチェック
        cmpli   cr7, r7, 0
        bne     cr7, _check_flushes

        ;; フォーカードのチェック
        andi.   r0, r11, 8191   ; (1&lt;&lt;13)-1
        cmpli   cr7, r0, 0
        bgt     cr7, _show_four_kind

        ;; フルハウス、スリーカードのチェック
        andi.   r0, r10, 8191
        cmpli   cr7, r0, 0
        bgt     cr7, _check_full_house_or_three_kind

        ;; ワンペア、ツーペアのチェック
        andi.   r0, r9, 8191
        cmpli   cr7, r0, 0
        bgt     cr7, _check_one_or_two_pair

        ;; ストレートのチェック
        bl      _check_straight
        cmpli   cr7, r2, 0
        bne     cr7, _show_straight

        ;; ノーペア
        b       _show_no_pair

;; フラッシュ、ストレートフラッシュ、ロイヤルフラッシュ
_check_flushes:
        ;; ロイヤルフラッシュのチェック
        ;; ランク ATJQK のビットマスク
        li      r0, 1|(1&lt;&lt;9)|(1&lt;&lt;10)|(1&lt;&lt;11)|(1&lt;&lt;12)
        and     r2, r8, r0
        cmpl    cr7, r2, r0
        beq     cr7, _show_royal_flush
        
        ;; ストレートフラッシュのチェック
        bl      _check_straight
        cmpli   cr7, r2, 0
        bne     cr7, _show_straight_flush
        
        ;; フラッシュ
        b       _show_flush

;; ストレートのチェック（サブルーチン）
;; ストレートなら r2 &gt; 0 にして戻る
_check_straight:
        ;; ビットマスク 11111 を左にずらしながら9回AND演算する
        li      r0, (1&lt;&lt;5)-1    ; ビットマスク
        li      r2, 0           ; 左シフト数

_find_straight:
        slw     r15, r0, r2     ; 左シフト
        and     r17, r8, r15    ; ノーペア用フラグを調べる
        cmpl    cr7, r17, r15
        beq     cr7, _found_straight
        addi    r2, r2, 1       ; 次のループの準備
        cmpli   cr7, r2, 9
        ble     cr7, _find_straight
        
        li      r2, 0           ; 5つの連続した数字がなかった
        blr                     ; サブルーチン終了

_found_straight:
        li      r2, 1           ; 5つの連続した数字を発見
        blr                     ; サブルーチン終了

;; フルハウスかスリーカード
_check_full_house_or_three_kind:
        ;; ワンペアがあればフルハウス
        andi.   r0, r9, 8191
        cmpli   cr7, r0, 0
        bgt     cr7, _show_full_house
        b       _show_three_kind

;; ワンペアかツーペア
_check_one_or_two_pair:
        li      r0, 1           ; これをシフト
        li      r2, 0           ; 左シフト数
        li      r16, 0          ; ペアの数

;; ペア用フラグからペアの数をカウントする
_find_pairs:
        slw     r15, r0, r2
        and     r17, r9, r15
        addi    r2, r2, 1
        cmpli   cr7, r17, 0
        bgt     cr7, _found_pair
        cmpli   cr7, r2, 13     ; 0-12 の 13 回チェック
        ble     cr7, _find_pairs

        ;; ペアの数で分岐
        cmpli   cr7, r16, 1
        beq     cr7, _show_one_pair     
        b       _show_two_pair

;; 見つけたペアの数を増加
_found_pair:
        addi    r16, r16, 1
        b       _find_pairs     ; 戻る

;; ノーペア
_show_no_pair:
        lis     r4, hi16(no_pair)
        addi    r4, r4, lo16(no_pair)
        li      r5, 8
        b       _print_and_exit

;; ワンペア
_show_one_pair:
        lis     r4, hi16(one_pair)
        addi    r4, r4, lo16(one_pair)
        li      r5, 9
        b       _print_and_exit

;; ツーペア
_show_two_pair:
        lis     r4, hi16(two_pair)
        addi    r4, r4, lo16(two_pair)
        li      r5, 9
        b       _print_and_exit

;; スリーカード
_show_three_kind:
        lis     r4, hi16(three_kind)
        addi    r4, r4, lo16(three_kind)
        li      r5, 16
        b       _print_and_exit

;; ストレート
_show_straight:
        lis     r4, hi16(straight)
        addi    r4, r4, lo16(straight)
        li      r5, 9
        b       _print_and_exit
        
;; フラッシュ
_show_flush:
        lis     r4, hi16(flush)
        addi    r4, r4, lo16(flush)
        li      r5, 6
        b       _print_and_exit 

;; フルハウス
_show_full_house:
        lis     r4, hi16(full_house)
        addi    r4, r4, lo16(full_house)
        li      r5, 11
        b       _print_and_exit 

;; ストレートフラッシュ
_show_straight_flush:
        lis     r4, hi16(straight_flush)
        addi    r4, r4, lo16(straight_flush)
        li      r5, 15
        b       _print_and_exit 

;; フォーカード
_show_four_kind:
        lis     r4, hi16(four_kind)
        addi    r4, r4, lo16(four_kind)
        li      r5, 15
        b       _print_and_exit

;; ロイヤルフラッシュ
_show_royal_flush:
        lis     r4, hi16(royal_flush)
        addi    r4, r4, lo16(royal_flush)
        li      r5, 12
        b       _print_and_exit 

;; 文字列を出力して終了する
;; r4 に文字列のアドレスを、r5 に文字列の長さをセットしておく
_print_and_exit:
        ;; sys_write()
        li      r3, 1           ; 標準出力
        li      r0, 4           ; sys_write
        sc                      ; 呼び出し
        b       _exit

_exit:
        ;; sys_exit()
        li      r3, 0
        li      r0, 1
        sc


;; 定数

        .data
        .align 2

no_pair:
        .asciz  &quot;No pair\n&quot;
        .align  2

one_pair:
        .asciz  &quot;One pair\n&quot;
        .align  2

two_pair:
        .asciz  &quot;Two pair\n&quot;
        .align  2

three_kind:
        .asciz  &quot;Three of a kind\n&quot;
        .align  2

straight:
        .asciz  &quot;Straight\n&quot;
        .align  2

flush:
        .asciz  &quot;Flush\n&quot;
        .align  2

full_house:
        .asciz  &quot;Full house\n&quot;
        .align  2

four_kind:
        .asciz  &quot;Four of a kind\n&quot;
        .align  2

straight_flush:
        .asciz  &quot;Straight flush\n&quot;
        .align  2
        
royal_flush:
        .asciz  &quot;Royal flush\n&quot;
        .align  2
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5183/addtag/" class="addtag" id="addtag_5183">タグ</a>:
	
    
    <a href="/web/20080309030640/http://ja.doukaku.org/tag/Assembly/">Assembly</a>
    
    <a href="/web/20080309030640/http://ja.doukaku.org/tag/MacOSX/">MacOSX</a>
    
    <a href="/web/20080309030640/http://ja.doukaku.org/tag/PowerPC/">PowerPC</a>
    
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5183/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5183/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5183"
  >-</span><span
  class="button yellow"
  id="rating_z_5183"
  >0</span><span 
  class="button green"
  id="rating_p_5183"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5183/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5184">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/448/" target="_top">naranja</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5184/">#5184</a>(<script language="JavaScript">print_time(new Date("2008/01/05 06:23 GMT"));</script><noscript>2008/01/05 06:23 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/d/">
	  D
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="n">std</span>.<span class="n">stdio</span>;
<span class="k">import</span> <span class="n">std</span>.<span class="n">string</span>;

<span class="n">string</span> <span class="n">poker</span>(<span class="n">string</span> <span class="n">cards</span>){
    <span class="k">auto</span> <span class="n">suit</span> = <span class="s">&quot;SDHC&quot;</span>;
    <span class="k">auto</span> <span class="n">rankOrder</span> = <span class="s">&quot;A23456789TJQK&quot;</span>;
    <span class="k">auto</span> <span class="n">transRankOrder</span> = <span class="s">&quot;abcdefghijklm&quot;</span>;
    <span class="k">auto</span> <span class="n">transRank</span> = <span class="n">translate</span>(<span class="n">cards</span>, <span class="n">maketrans</span>(<span class="n">rankOrder</span>, <span class="n">transRankOrder</span>), <span class="n">suit</span>).<span class="n">sort</span>;

    <span class="kt">int</span>[<span class="kt">char</span>] <span class="n">rankCount</span>;
    <span class="k">foreach</span>(<span class="n">c</span>; <span class="n">transRank</span>){
        <span class="n">rankCount</span>[<span class="n">c</span>]++;
    }
    <span class="k">auto</span> <span class="n">pairPattern</span> = <span class="n">rankCount</span>.<span class="n">values</span>.<span class="n">sort</span>;
    <span class="k">auto</span> <span class="n">hand</span> = <span class="n">pairPattern</span> == [<span class="mi">1</span>, <span class="mi">1</span>, <span class="mi">1</span>, <span class="mi">2</span>] ? <span class="s">&quot;One pair&quot;</span> :
                <span class="n">pairPattern</span> == [<span class="mi">1</span>, <span class="mi">2</span>, <span class="mi">2</span>] ? <span class="s">&quot;Two pair&quot;</span> :
                <span class="n">pairPattern</span> == [<span class="mi">1</span>, <span class="mi">1</span>, <span class="mi">3</span>] ? <span class="s">&quot;Three of a kind&quot;</span> :
                <span class="n">pairPattern</span> == [<span class="mi">2</span>, <span class="mi">3</span>] ? <span class="s">&quot;Full house&quot;</span> :
                <span class="n">pairPattern</span> == [<span class="mi">1</span>, <span class="mi">4</span>] ? <span class="s">&quot;Four of a kind&quot;</span> : <span class="s">&quot;&quot;</span>;
    <span class="k">if</span>(<span class="n">hand</span> == <span class="s">&quot;&quot;</span>){
        <span class="k">auto</span> <span class="n">isFlush</span> = <span class="n">cards</span>[<span class="mi">0</span>] == <span class="n">cards</span>[<span class="mi">2</span>] &amp;&amp; <span class="n">cards</span>[<span class="mi">0</span>] == <span class="n">cards</span>[<span class="mi">4</span>] &amp;&amp;
                       <span class="n">cards</span>[<span class="mi">0</span>] == <span class="n">cards</span>[<span class="mi">6</span>] &amp;&amp; <span class="n">cards</span>[<span class="mi">0</span>] == <span class="n">cards</span>[<span class="mi">8</span>];
        <span class="n">hand</span> = <span class="n">find</span>(<span class="n">transRankOrder</span>, <span class="n">transRank</span>) != -<span class="mi">1</span> ?
                   (<span class="n">isFlush</span> ? <span class="s">&quot;Straight flush&quot;</span> : <span class="s">&quot;Straight&quot;</span>) :
               <span class="n">transRank</span> == (<span class="n">transRankOrder</span>[<span class="mi">0</span>] ~ <span class="n">transRankOrder</span>[($ - <span class="mi">4</span>)..$]) ?
                   (<span class="n">isFlush</span> ? <span class="s">&quot;Royal flush&quot;</span> : <span class="s">&quot;Straight&quot;</span>) :
               (<span class="n">isFlush</span> ? <span class="s">&quot;Flush&quot;</span> : <span class="s">&quot;No pair&quot;</span>);
    }
    <span class="k">return</span> <span class="n">hand</span>;
}

<span class="kt">void</span> <span class="n">main</span>(){
    <span class="n">writefln</span>(<span class="n">poker</span>(<span class="s">&quot;SQSJSASKST&quot;</span>)); <span class="c">// Royal flush</span>
    <span class="n">writefln</span>(<span class="n">poker</span>(<span class="s">&quot;D9D7D6D5D8&quot;</span>)); <span class="c">// Straight flush</span>
    <span class="n">writefln</span>(<span class="n">poker</span>(<span class="s">&quot;C2D2S2H3H2&quot;</span>)); <span class="c">// Four of a kind</span>
    <span class="n">writefln</span>(<span class="n">poker</span>(<span class="s">&quot;C2D3S2H3H2&quot;</span>)); <span class="c">// Full house</span>
    <span class="n">writefln</span>(<span class="n">poker</span>(<span class="s">&quot;S9S4S8STSJ&quot;</span>)); <span class="c">// Flush</span>
    <span class="n">writefln</span>(<span class="n">poker</span>(<span class="s">&quot;C4H7D5S6H3&quot;</span>)); <span class="c">// Straight</span>
    <span class="n">writefln</span>(<span class="n">poker</span>(<span class="s">&quot;S6H6C5DQC6&quot;</span>)); <span class="c">// Three of a kind</span>
    <span class="n">writefln</span>(<span class="n">poker</span>(<span class="s">&quot;S6HQC5DQC6&quot;</span>)); <span class="c">// Two pair</span>
    <span class="n">writefln</span>(<span class="n">poker</span>(<span class="s">&quot;S6H4C5DQC6&quot;</span>)); <span class="c">// One pair</span>
    <span class="n">writefln</span>(<span class="n">poker</span>(<span class="s">&quot;SJSQSKSAC2&quot;</span>)); <span class="c">// No pair</span>
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5184/addtag/" class="addtag" id="addtag_5184">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/d/">
		D
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5184/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5184/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5184"
  >-</span><span
  class="button yellow"
  id="rating_z_5184"
  >0</span><span 
  class="button green"
  id="rating_p_5184"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5184/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5185">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5185/">#5185</a>(<script language="JavaScript">print_time(new Date("2008/01/05 06:25 GMT"));</script><noscript>2008/01/05 06:25 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">sys</span>

<span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">c</span><span class="p">):</span>
  <span class="n">d</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;A&#39;</span><span class="p">:</span> <span class="s">&#39;1&#39;</span><span class="p">,</span> <span class="s">&#39;T&#39;</span><span class="p">:</span> <span class="s">&#39;a&#39;</span><span class="p">,</span> <span class="s">&#39;J&#39;</span><span class="p">:</span> <span class="s">&#39;b&#39;</span><span class="p">,</span> <span class="s">&#39;Q&#39;</span><span class="p">:</span> <span class="s">&#39;c&#39;</span><span class="p">,</span> <span class="s">&#39;K&#39;</span><span class="p">:</span> <span class="s">&#39;d&#39;</span><span class="p">}</span>
  <span class="n">s</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">set</span><span class="p">([</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)]))</span> <span class="o">==</span> <span class="mi">1</span>
  <span class="n">r</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">sorted</span><span class="p">([</span><span class="n">d</span><span class="p">[</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="k">if</span> <span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">in</span> <span class="n">d</span> <span class="k">else</span> <span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">2</span><span class="p">)]))</span>
  <span class="n">l</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">set</span><span class="p">(</span><span class="n">r</span><span class="p">))</span>
  <span class="k">if</span> <span class="n">l</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">&#39;Four of a kind&#39;</span> <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span> <span class="k">else</span> <span class="s">&#39;Full house&#39;</span>
  <span class="k">elif</span> <span class="n">l</span> <span class="o">==</span> <span class="mi">5</span><span class="p">:</span>
    <span class="k">if</span> <span class="s">&#39;123456789abcd 1abcd&#39;</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
      <span class="k">print</span> <span class="p">(</span><span class="s">&#39;Royal flush &#39;</span><span class="k">if</span> <span class="n">r</span> <span class="o">==</span> <span class="s">&#39;1abcd&#39;</span> <span class="k">else</span> <span class="s">&#39;Straight flush&#39;</span><span class="p">)</span> <span class="k">if</span> <span class="n">s</span> <span class="k">else</span> <span class="s">&#39;Straight&#39;</span>
    <span class="k">elif</span> <span class="n">s</span><span class="p">:</span>
      <span class="k">print</span> <span class="s">&#39;Flush&#39;</span>
    <span class="k">else</span><span class="p">:</span>
      <span class="k">print</span> <span class="s">&#39;No pair&#39;</span>
  <span class="k">elif</span> <span class="n">s</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">&#39;Flush&#39;</span>
  <span class="k">elif</span> <span class="n">l</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">&#39;One pair&#39;</span>
  <span class="k">elif</span> <span class="n">l</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">&#39;Three of a kind&#39;</span> <span class="k">if</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">set</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">]</span> <span class="k">else</span> <span class="s">&#39;Two pair&#39;</span>

<span class="n">f</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5185/addtag/" class="addtag" id="addtag_5185">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5185/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5185/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5185"
  >-</span><span
  class="button yellow"
  id="rating_z_5185"
  >0</span><span 
  class="button green"
  id="rating_p_5185"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080309030640/http://ja.doukaku.org/comment/5185/">
    1
    reply
  </a>

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5185/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5209">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5209/">#5209</a>(<script language="JavaScript">print_time(new Date("2008/01/06 14:57 GMT"));</script><noscript>2008/01/06 14:57 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>こういうときに便利なスライスの記法を思い出したのと
文字の置換も必要なかったので、ちょっと書き直しました。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">sys</span>

<span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">c</span><span class="p">):</span>
  <span class="n">s</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">set</span><span class="p">(</span><span class="n">c</span><span class="p">[</span><span class="mi">0</span><span class="p">::</span><span class="mi">2</span><span class="p">]))</span> <span class="o">==</span> <span class="mi">1</span>
  <span class="n">r</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">sorted</span><span class="p">(</span><span class="n">c</span><span class="p">[</span><span class="mi">1</span><span class="p">::</span><span class="mi">2</span><span class="p">]))</span>
  <span class="n">l</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">set</span><span class="p">(</span><span class="n">r</span><span class="p">))</span>
  <span class="k">if</span> <span class="n">l</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">&#39;Four of a kind&#39;</span> <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span> <span class="k">else</span> <span class="s">&#39;Full house&#39;</span>
  <span class="k">elif</span> <span class="n">l</span> <span class="o">==</span> <span class="mi">5</span><span class="p">:</span>
    <span class="k">if</span> <span class="s">&#39;2345A23456789T789JT89JQT9JKQTAJKQT&#39;</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
      <span class="k">print</span> <span class="p">(</span><span class="s">&#39;Royal flush&#39;</span> <span class="k">if</span> <span class="n">r</span> <span class="o">==</span> <span class="s">&#39;AJKQT&#39;</span> <span class="k">else</span> <span class="s">&#39;Straight flush&#39;</span><span class="p">)</span> <span class="k">if</span> <span class="n">s</span> <span class="k">else</span> <span class="s">&#39;Straight&#39;</span>
    <span class="k">elif</span> <span class="n">s</span><span class="p">:</span>
      <span class="k">print</span> <span class="s">&#39;Flush&#39;</span>
    <span class="k">else</span><span class="p">:</span>
      <span class="k">print</span> <span class="s">&#39;No pair&#39;</span>
  <span class="k">elif</span> <span class="n">s</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">&#39;Flush&#39;</span>
  <span class="k">elif</span> <span class="n">l</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">&#39;Three of a kind&#39;</span> <span class="k">if</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">set</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">]</span> <span class="k">else</span> <span class="s">&#39;Two pair&#39;</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">&#39;One pair&#39;</span>

<span class="n">f</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5209/addtag/" class="addtag" id="addtag_5209">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5209/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5209/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5209"
  >-</span><span
  class="button yellow"
  id="rating_z_5209"
  >0</span><span 
  class="button green"
  id="rating_p_5209"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5185/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5209/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5209/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment5186">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/343/" target="_top">shimakuma</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5186/">#5186</a>(<script language="JavaScript">print_time(new Date("2008/01/05 07:23 GMT"));</script><noscript>2008/01/05 07:23 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">doukaku121</span><span class="p">(</span><span class="nx">hand</span><span class="p">){</span>
  <span class="k">var</span> <span class="nx">S</span> <span class="o">=</span> <span class="p">[]</span><span class="o">,</span> <span class="nx">R</span> <span class="o">=</span> <span class="p">[]</span><span class="o">,</span> <span class="nx">sd</span> <span class="o">=</span> <span class="p">{</span><span class="nx">S</span><span class="o">:</span><span class="mi">0</span><span class="o">,</span> <span class="nx">H</span><span class="o">:</span><span class="mi">1</span><span class="o">,</span> <span class="nx">D</span><span class="o">:</span><span class="mi">2</span><span class="o">,</span> <span class="nx">C</span><span class="o">:</span><span class="mi">3</span><span class="p">}</span><span class="o">,</span> <span class="nx">rd</span> <span class="o">=</span> <span class="p">{</span><span class="nx">A</span><span class="o">:</span><span class="mi">1</span><span class="o">,</span> <span class="nx">T</span><span class="o">:</span><span class="mi">10</span><span class="o">,</span> <span class="nx">J</span><span class="o">:</span><span class="mi">11</span><span class="o">,</span> <span class="nx">Q</span><span class="o">:</span><span class="mi">12</span><span class="o">,</span> <span class="nx">K</span><span class="o">:</span><span class="mi">13</span><span class="p">};</span>
  <span class="nx">hand</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([SHDC])([2-9TJQKA])/g</span><span class="o">,</span> <span class="k">function</span><span class="p">(</span><span class="nx">_</span><span class="o">,</span> <span class="nx">s</span><span class="o">,</span> <span class="nx">r</span><span class="p">){</span>
    <span class="o">++</span><span class="nx">S</span><span class="p">[</span><span class="nx">s</span> <span class="o">=</span> <span class="nx">sd</span><span class="p">[</span><span class="nx">s</span><span class="p">]]</span>      <span class="o">||</span> <span class="p">(</span><span class="nx">S</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">);</span>
    <span class="o">++</span><span class="nx">R</span><span class="p">[</span><span class="nx">r</span> <span class="o">=</span> <span class="nx">rd</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span> <span class="o">||</span> <span class="nx">r</span><span class="p">]</span> <span class="o">||</span> <span class="p">(</span><span class="nx">R</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">);</span>
  <span class="p">});</span>
  <span class="k">var</span> <span class="nx">flush</span> <span class="o">=</span> <span class="sr">/5/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">S</span> <span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">);</span>
  <span class="k">if</span><span class="p">(</span><span class="sr">/1,1,1,1,1/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">R</span> <span class="o">+</span><span class="s1">&#39;,&#39;</span><span class="o">+</span> <span class="nx">R</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span>
    <span class="k">return</span> <span class="nx">flush</span> <span class="o">?</span> <span class="p">(</span><span class="nx">R</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="nx">R</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span> <span class="o">?</span> <span class="s1">&#39;Royal &#39;</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="o">+</span><span class="s1">&#39;Straight Flush&#39;</span> <span class="o">:</span> <span class="s1">&#39;Straight&#39;</span><span class="o">;</span>
  <span class="nx">switch</span><span class="p">((</span><span class="nx">R</span> <span class="o">=</span> <span class="nx">R</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nx">x</span><span class="o">,</span> <span class="nx">y</span><span class="p">){</span> <span class="k">return</span> <span class="nx">y</span> <span class="o">-</span> <span class="nx">x</span> <span class="p">}))[</span><span class="mi">0</span><span class="p">]){</span>
   <span class="nx">case</span> <span class="mi">1</span><span class="o">:</span> <span class="k">return</span> <span class="nx">flush</span>     <span class="o">?</span> <span class="s1">&#39;Flush&#39;</span>      <span class="o">:</span> <span class="s1">&#39;No Pair&#39;</span><span class="o">;</span>
   <span class="nx">case</span> <span class="mi">2</span><span class="o">:</span> <span class="k">return</span> <span class="nx">R</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">?</span> <span class="s1">&#39;Two Pair&#39;</span>   <span class="o">:</span> <span class="s1">&#39;One Pair&#39;</span><span class="o">;</span>
   <span class="nx">case</span> <span class="mi">3</span><span class="o">:</span> <span class="k">return</span> <span class="nx">R</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">?</span> <span class="s1">&#39;Full House&#39;</span> <span class="o">:</span> <span class="s1">&#39;Three of a Kind&#39;</span><span class="o">;</span>
   <span class="nx">case</span> <span class="mi">4</span><span class="o">:</span> <span class="k">return</span> <span class="s1">&#39;Four of a Kind&#39;</span><span class="o">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5186/addtag/" class="addtag" id="addtag_5186">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5186/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5186/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5186"
  >-</span><span
  class="button yellow"
  id="rating_z_5186"
  >0</span><span 
  class="button green"
  id="rating_p_5186"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5186/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5187">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/650/" target="_top">GEOJ</a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5187/">#5187</a>(<script language="JavaScript">print_time(new Date("2008/01/05 07:48 GMT"));</script><noscript>2008/01/05 07:48 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>sedで書けそうな気がするのですが、めんどくさがってsortを使うことにしたのでシェルスクリプトになってしまいました。
行が長いです。ごめんなさい。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre><span class="c">#!/bin/sh</span>

<span class="k">if </span><span class="nb">echo</span> <span class="nv">$1</span> | grep -q -v <span class="s1">&#39;^\([CDHS][A2-9TJQK]\)\{5\}$&#39;</span>; <span class="k">then</span>
<span class="k">    </span><span class="nb">echo</span> <span class="s1">&#39;Error: Invalid hand&#39;</span>
    <span class="nb">exit </span>1
<span class="k">fi</span>

<span class="nb">declare </span><span class="nv">n</span><span class="o">=</span><span class="s">`echo $1 | sed &#39;s/[CDHS]\(.\)/\1\n/g&#39; | tr &#39;A2-9TJQK&#39; &#39;a-m&#39; | sort | tr -d &#39;\n&#39; | sed -e &#39;/[a-e]$/y/abcde/ijklm/&#39; -e &#39;/[f-i]$/y/abcdefghi/efghijklm/&#39; -e &#39;/[jk]$/y/abcdefghijk/cdefghijklm/&#39; -e &#39;/l$/y/abcdefghijkl/bcdefghijklm/&#39;`</span>

<span class="k">if </span><span class="nb">echo</span> <span class="nv">$1</span> | grep -q <span class="s1">&#39;\(.\).\(\1.\)\{4\}&#39;</span>; <span class="k">then</span>
<span class="k">    </span><span class="nb">echo</span> <span class="nv">$n</span> | sed -e <span class="s1">&#39;s/ajklm/Royal flush/&#39;</span> -e <span class="s1">&#39;s/ijklm/Straight flush/&#39;</span> -e <span class="s1">&#39;s/....m/Flush/&#39;</span>
elif <span class="nb">echo</span> <span class="nv">$n</span> | grep -q <span class="s1">&#39;[ai]jklm&#39;</span>; <span class="k">then</span>
<span class="k">    </span><span class="nb">echo </span>Straight
elif <span class="nb">echo</span> <span class="nv">$n</span> | grep -q <span class="s1">&#39;\(.\)\1\1\1&#39;</span>; <span class="k">then</span>
<span class="k">    </span><span class="nb">echo </span>Four of a kind
<span class="k">else</span>
<span class="k">    </span><span class="nb">echo</span> <span class="nv">$n</span> | sed -e <span class="s1">&#39;s/\(.\)\1\1//&#39;</span> -e <span class="s1">&#39;s/\(.\)\1//g&#39;</span> -e <span class="s1">&#39;s/^.....$/No pair/&#39;</span> -e <span class="s1">&#39;s/^...$/One pair/&#39;</span> -e <span class="s1">&#39;s/^..$/Three of a kind/&#39;</span> -e <span class="s1">&#39;s/^.$/Two pair/&#39;</span> -e <span class="s1">&#39;s/^$/Full house/&#39;</span>
<span class="k">fi</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5187/addtag/" class="addtag" id="addtag_5187">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5187/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5187/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5187"
  >-</span><span
  class="button yellow"
  id="rating_z_5187"
  >0</span><span 
  class="button green"
  id="rating_p_5187"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080309030640/http://ja.doukaku.org/comment/5187/">
    1
    reply
  </a>

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5187/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5191">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/650/" target="_top">GEOJ</a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5191/">#5191</a>(<script language="JavaScript">print_time(new Date("2008/01/05 10:51 GMT"));</script><noscript>2008/01/05 10:51 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/sed/">
	  sed
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>その後、まじめにsedで書いてみました。こっちのほうがきれいかも。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre>#!/bin/sed -f

/^\([CDHS][A2-9TJQK]\)\{5\}$/!b
/\([CDHS][A2-9TJQK]\).*\1/b

/\(.\).\(\1.\)\{4\}/{
    s/^/X/
}

s/[CDHS]//g

s/\([2468TQK]\+\)\([A3579J]\+\)/\2\1/g
s/\([2468TQK]\+\)\([A3579J]\+\)/\2\1/

s/\([3478JQK]\+\)\([A2569T]\+\)/\2\1/g
s/\([3478JQK]\+\)\([A2569T]\+\)/\2\1/

s/\([5-8K]\+\)\([A2349TJQ]\+\)/\2\1/g
s/\([5-8K]\+\)\([A2349TJQ]\+\)/\2\1/

s/\([9TJQK]\+\)\([A2-8]\+\)/\2\1/g
s/\([9TJQK]\+\)\([A2-8]\+\)/\2\1/

/[2-5]$/y/A2345/9TJQK/
/[6-9]$/y/A23456789/56789TJQK/
/[TJ]$/y/A23456789TJ/3456789TJQK/
/Q$/y/A23456789TJQ/23456789TJQK/

s/^\(.\)\1\1\1K$\|^.KKKK$/Four of a kind/

s/\(.\)\1\+//g

s/^$/Full house/
s/^.$/Two pair/
s/^..$/Three of a kind/
s/^...$/One pair/
s/^[A9]TJQK$/Straight/
s/^.....$/No pair/
s/^XATJQK$/Royal flush/
s/^X9TJQK$/Straight flush/
s/^X.....$/Flush/
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5191/addtag/" class="addtag" id="addtag_5191">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/sed/">
		sed
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5191/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5191/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5191"
  >-</span><span
  class="button yellow"
  id="rating_z_5191"
  >0</span><span 
  class="button green"
  id="rating_p_5191"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5187/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5191/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5191/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment5188">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/399/" target="_top">いげ太</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5188/">#5188</a>(<script language="JavaScript">print_time(new Date("2008/01/05 07:54 GMT"));</script><noscript>2008/01/05 07:54 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>素直に</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39</pre></td><td class="code"><div class="highlight"><pre><span class="k">#</span><span class="n">light</span>
<span class="kr">open</span> <span class="n">List</span>

<span class="kr">let</span> <span class="n">poker</span> <span class="n">cs</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">is_all_elems_same</span> <span class="n">l</span> <span class="k">=</span> <span class="n">tryfind</span> <span class="k">((&lt;&gt;)</span> <span class="k">(</span><span class="n">hd</span> <span class="n">l</span><span class="k">))</span> <span class="k">(</span><span class="n">tl</span> <span class="n">l</span><span class="k">)</span> <span class="k">|&gt;</span> <span class="n">Option</span><span class="k">.</span><span class="n">is_none</span>
  <span class="kr">let</span> <span class="n">tally</span> <span class="n">l</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">h</span> <span class="k">=</span> <span class="n">Hashtbl</span><span class="k">.</span><span class="n">create</span> <span class="k">(</span><span class="n">length</span> <span class="n">l</span><span class="k">)</span>
    <span class="kr">for</span> <span class="n">x</span> <span class="kr">in</span> <span class="n">l</span> <span class="kr">do</span>
      <span class="kr">if</span> <span class="n">Hashtbl</span><span class="k">.</span><span class="n">mem</span> <span class="n">h</span> <span class="n">x</span> <span class="kr">then</span> <span class="n">Hashtbl</span><span class="k">.</span><span class="n">replace</span> <span class="n">h</span> <span class="n">x</span> <span class="k">(</span><span class="n">Hashtbl</span><span class="k">.</span><span class="n">find</span> <span class="n">h</span> <span class="n">x</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span>
                         <span class="kr">else</span> <span class="n">Hashtbl</span><span class="k">.</span><span class="n">add</span>     <span class="n">h</span> <span class="n">x</span> <span class="mi">1</span>
    <span class="n">h</span>
  <span class="c">(* 手札の情報をスートとランクの 2 つの情報に分離 *)</span>
  <span class="kr">let</span> <span class="n">maxi</span> <span class="k">=</span> <span class="n">String</span><span class="k">.</span><span class="n">length</span> <span class="n">cs</span> <span class="k">-</span> <span class="mi">1</span>
  <span class="kr">let</span> <span class="n">suit</span> <span class="k">=</span> <span class="k">[</span><span class="kr">for</span> <span class="n">i</span> <span class="kr">in</span> <span class="mi">0</span><span class="k">..</span><span class="mi">2</span><span class="k">..</span><span class="n">maxi</span> <span class="k">-&gt;</span> <span class="n">cs</span><span class="k">.[</span><span class="n">i</span><span class="k">]]</span>
  <span class="kr">let</span> <span class="n">rank</span> <span class="k">=</span> <span class="k">[</span><span class="kr">for</span> <span class="n">i</span> <span class="kr">in</span> <span class="mi">1</span><span class="k">..</span><span class="mi">2</span><span class="k">..</span><span class="n">maxi</span> <span class="k">-&gt;</span> <span class="n">String</span><span class="k">.</span><span class="n">index</span> <span class="s2">&quot;A23456789TJQK&quot;</span> <span class="n">cs</span><span class="k">.[</span><span class="n">i</span><span class="k">]</span> <span class="k">+</span> <span class="mi">1</span><span class="k">]</span>
             <span class="k">|&gt;</span> <span class="n">sort</span> <span class="k">(-)</span>
  <span class="c">(* 判定基準となる条件役を算出 *)</span>
  <span class="kr">let</span> <span class="n">rst</span> <span class="k">=</span> <span class="n">rank</span> <span class="k">=</span> <span class="k">[</span><span class="mi">1</span><span class="k">;</span><span class="mi">10</span><span class="k">;</span><span class="mi">11</span><span class="k">;</span><span class="mi">12</span><span class="k">;</span><span class="mi">13</span><span class="k">]</span>
  <span class="kr">let</span> <span class="n">flu</span> <span class="k">=</span> <span class="n">is_all_elems_same</span> <span class="n">suit</span>
  <span class="kr">let</span> <span class="n">str</span> <span class="k">=</span> <span class="n">is_all_elems_same</span> <span class="k">(</span><span class="n">mapi</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">i</span> <span class="n">x</span> <span class="k">-&gt;</span> <span class="n">x</span> <span class="k">-</span> <span class="n">i</span><span class="k">)</span> <span class="n">rank</span><span class="k">)</span>
  <span class="kr">let</span> <span class="n">pnt</span> <span class="k">=</span> <span class="k">[</span><span class="kr">for</span> <span class="n">p</span> <span class="kr">in</span> <span class="k">(</span><span class="n">tally</span> <span class="n">rank</span><span class="k">)</span> <span class="kr">when</span> <span class="n">p</span><span class="k">.</span><span class="n">Value</span> <span class="k">&gt;</span> <span class="mi">1</span> <span class="k">-&gt;</span> <span class="n">p</span><span class="k">.</span><span class="n">Value</span><span class="k">]</span> <span class="k">|&gt;</span> <span class="n">sort</span> <span class="k">(-)</span>
  <span class="c">(* 役判定 *)</span>
  <span class="kr">match</span> <span class="n">rst</span><span class="k">,</span> <span class="n">flu</span><span class="k">,</span> <span class="n">str</span><span class="k">,</span> <span class="n">pnt</span> <span class="kr">with</span>
    <span class="kr">true</span><span class="k">,</span> <span class="kr">true</span><span class="k">,</span> <span class="k">_,</span>    <span class="k">_</span>     <span class="k">-&gt;</span> <span class="s2">&quot;Royal flush&quot;</span>
  <span class="k">|</span> <span class="k">_,</span>    <span class="kr">true</span><span class="k">,</span> <span class="kr">true</span><span class="k">,</span> <span class="k">_</span>     <span class="k">-&gt;</span> <span class="s2">&quot;Straight flush&quot;</span>
  <span class="k">|</span> <span class="k">_,</span>    <span class="k">_,</span>    <span class="k">_,</span>    <span class="k">[</span><span class="mi">4</span><span class="k">]</span>   <span class="k">-&gt;</span> <span class="s2">&quot;Four of a kind&quot;</span>
  <span class="k">|</span> <span class="k">_,</span>    <span class="k">_,</span>    <span class="k">_,</span>    <span class="k">[</span><span class="mi">2</span><span class="k">;</span><span class="mi">3</span><span class="k">]</span> <span class="k">-&gt;</span> <span class="s2">&quot;Full house&quot;</span>
  <span class="k">|</span> <span class="k">_,</span>    <span class="kr">true</span><span class="k">,</span> <span class="k">_,</span>    <span class="k">_</span>     <span class="k">-&gt;</span> <span class="s2">&quot;Flush&quot;</span>
  <span class="k">|</span> <span class="k">_,</span>    <span class="k">_,</span>    <span class="kr">true</span><span class="k">,</span> <span class="k">_</span>     <span class="k">-&gt;</span> <span class="s2">&quot;Straight&quot;</span>
  <span class="k">|</span> <span class="k">_,</span>    <span class="k">_,</span>    <span class="k">_,</span>    <span class="k">[</span><span class="mi">3</span><span class="k">]</span>   <span class="k">-&gt;</span> <span class="s2">&quot;Three of a kind&quot;</span>
  <span class="k">|</span> <span class="k">_,</span>    <span class="k">_,</span>    <span class="k">_,</span>    <span class="k">[</span><span class="mi">2</span><span class="k">;</span><span class="mi">2</span><span class="k">]</span> <span class="k">-&gt;</span> <span class="s2">&quot;Two pair&quot;</span>
  <span class="k">|</span> <span class="k">_,</span>    <span class="k">_,</span>    <span class="k">_,</span>    <span class="k">[</span><span class="mi">2</span><span class="k">]</span>   <span class="k">-&gt;</span> <span class="s2">&quot;One pair&quot;</span>
  <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="s2">&quot;No pair&quot;</span>

<span class="kr">let</span> <span class="k">_</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="k">(</span><span class="o">$</span><span class="k">)</span> <span class="n">f</span> <span class="n">g</span> <span class="n">x</span> <span class="k">=</span> <span class="n">f</span> <span class="k">(</span><span class="n">g</span> <span class="n">x</span><span class="k">)</span>
  <span class="k">[</span><span class="s2">&quot;SQSJSASKST&quot;</span><span class="k">;</span><span class="s2">&quot;D9D7D6D5D8&quot;</span><span class="k">;</span><span class="s2">&quot;C2D2S2H3H2&quot;</span><span class="k">;</span><span class="s2">&quot;C2D3S2H3H2&quot;</span><span class="k">;</span><span class="s2">&quot;S9S4S8STSJ&quot;</span>
   <span class="s2">&quot;C4H7D5S6H3&quot;</span><span class="k">;</span><span class="s2">&quot;S6H6C5DQC6&quot;</span><span class="k">;</span><span class="s2">&quot;S6HQC5DQC6&quot;</span><span class="k">;</span><span class="s2">&quot;S6H4C5DQC6&quot;</span><span class="k">;</span><span class="s2">&quot;SJSQSKSAC2&quot;</span><span class="k">]</span>
  <span class="k">|&gt;</span> <span class="n">iter</span> <span class="k">(</span><span class="n">printfn</span> <span class="s2">&quot;%s&quot;</span> <span class="o">$</span> <span class="n">poker</span><span class="k">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5188/addtag/" class="addtag" id="addtag_5188">タグ</a>:
	
    
    <a href="/web/20080309030640/http://ja.doukaku.org/tag/F%23/">F#</a>
    
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5188/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5188/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5188"
  >-</span><span
  class="button yellow"
  id="rating_z_5188"
  >0</span><span 
  class="button green"
  id="rating_p_5188"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5188/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5190">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/647/" target="_top">KUROSAKI Luka</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5190/">#5190</a>(<script language="JavaScript">print_time(new Date("2008/01/05 09:39 GMT"));</script><noscript>2008/01/05 09:39 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  以下の様にコールすると役を表示します。<br/><br/>echo&nbsp;Poker('SQSJSASKST');<br/><br/>パラメータチェックを怠っています。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">Poker</span><span class="p">(</span><span class="nv">$c</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nx">CSort</span><span class="p">(</span><span class="nv">$c</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">IsFlush</span><span class="p">(</span><span class="nv">$c</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">IsStraight</span><span class="p">(</span><span class="nv">$c</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$c</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;A&#39;</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="s1">&#39;Royal flush&#39;</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">return</span> <span class="s1">&#39;Straight flush&#39;</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="s1">&#39;Flush&#39;</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">IsStraight</span><span class="p">(</span><span class="nv">$c</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">return</span> <span class="s1">&#39;Straight&#39;</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nv">$wk</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
        <span class="nv">$wk</span><span class="p">[</span><span class="nv">$c</span><span class="p">[</span><span class="m">1</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>
        <span class="nv">$wk</span><span class="p">[</span><span class="nv">$c</span><span class="p">[</span><span class="m">3</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>
        <span class="nv">$wk</span><span class="p">[</span><span class="nv">$c</span><span class="p">[</span><span class="m">5</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>
        <span class="nv">$wk</span><span class="p">[</span><span class="nv">$c</span><span class="p">[</span><span class="m">7</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>
        <span class="nv">$wk</span><span class="p">[</span><span class="nv">$c</span><span class="p">[</span><span class="m">9</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>
        <span class="nf">arsort</span><span class="p">(</span><span class="nv">$wk</span><span class="p">);</span>
        <span class="k">switch</span> <span class="p">(</span><span class="nf">array_shift</span><span class="p">(</span><span class="nv">$wk</span><span class="p">)</span><span class="o">.</span><span class="nf">array_shift</span><span class="p">(</span><span class="nv">$wk</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">case</span> <span class="s1">&#39;41&#39;</span><span class="o">:</span>    <span class="k">return</span> <span class="s1">&#39;Four of a kind&#39;</span><span class="p">;</span>
        <span class="k">case</span> <span class="s1">&#39;32&#39;</span><span class="o">:</span>    <span class="k">return</span> <span class="s1">&#39;Full house&#39;</span><span class="p">;</span>
        <span class="k">case</span> <span class="s1">&#39;31&#39;</span><span class="o">:</span>    <span class="k">return</span> <span class="s1">&#39;Three of a kind&#39;</span><span class="p">;</span>
        <span class="k">case</span> <span class="s1">&#39;22&#39;</span><span class="p">;</span>    <span class="k">return</span> <span class="s1">&#39;Two pair&#39;</span><span class="p">;</span>
        <span class="k">case</span> <span class="s1">&#39;21&#39;</span><span class="p">;</span>    <span class="k">return</span> <span class="s1">&#39;One pair&#39;</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="s1">&#39;No pair&#39;</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">IsFlush</span><span class="p">(</span><span class="nv">$c</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$c</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="o">==</span> <span class="nv">$c</span><span class="p">[</span><span class="m">2</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="nv">$c</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="o">==</span> <span class="nv">$c</span><span class="p">[</span><span class="m">4</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="nv">$c</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="o">==</span> <span class="nv">$c</span><span class="p">[</span><span class="m">6</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="nv">$c</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="o">==</span> <span class="nv">$c</span><span class="p">[</span><span class="m">8</span><span class="p">])</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">TRUE</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="k">FALSE</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">IsStraight</span><span class="p">(</span><span class="nv">$c</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$rank</span> <span class="o">=</span> <span class="s1">&#39;A23456789TJQK&#39;</span><span class="p">;</span>
    <span class="nv">$num</span> <span class="o">=</span> <span class="nv">$c</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">.</span><span class="nv">$c</span><span class="p">[</span><span class="m">3</span><span class="p">]</span><span class="o">.</span><span class="nv">$c</span><span class="p">[</span><span class="m">5</span><span class="p">]</span><span class="o">.</span><span class="nv">$c</span><span class="p">[</span><span class="m">7</span><span class="p">]</span><span class="o">.</span><span class="nv">$c</span><span class="p">[</span><span class="m">9</span><span class="p">];</span>
    <span class="k">if</span> <span class="p">(</span><span class="nf">strpos</span><span class="p">(</span><span class="nv">$rank</span><span class="p">,</span> <span class="nv">$num</span><span class="p">)</span> <span class="o">!==</span> <span class="k">FALSE</span> <span class="o">||</span> <span class="nv">$num</span> <span class="o">==</span> <span class="s1">&#39;ATJQK&#39;</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">TRUE</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="k">FALSE</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nf">CSort</span><span class="p">(</span><span class="o">&amp;</span><span class="nv">$c</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$rep</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;1&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;A&#39;</span><span class="p">,</span> <span class="s1">&#39;10&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;T&#39;</span><span class="p">,</span> <span class="s1">&#39;11&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;J&#39;</span><span class="p">,</span> <span class="s1">&#39;12&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;Q&#39;</span><span class="p">,</span> <span class="s1">&#39;13&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;K&#39;</span><span class="p">);</span>
    <span class="nv">$wk</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="nv">$c</span><span class="p">[</span><span class="m">0</span><span class="p">]</span><span class="o">.</span><span class="nv">$c</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nv">$c</span><span class="p">[</span><span class="m">1</span><span class="p">],</span> <span class="nv">$c</span><span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="o">.</span><span class="nv">$c</span><span class="p">[</span><span class="m">3</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nv">$c</span><span class="p">[</span><span class="m">3</span><span class="p">],</span>
                <span class="nv">$c</span><span class="p">[</span><span class="m">4</span><span class="p">]</span><span class="o">.</span><span class="nv">$c</span><span class="p">[</span><span class="m">5</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nv">$c</span><span class="p">[</span><span class="m">5</span><span class="p">],</span> <span class="nv">$c</span><span class="p">[</span><span class="m">6</span><span class="p">]</span><span class="o">.</span><span class="nv">$c</span><span class="p">[</span><span class="m">7</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nv">$c</span><span class="p">[</span><span class="m">7</span><span class="p">],</span>
                <span class="nv">$c</span><span class="p">[</span><span class="m">8</span><span class="p">]</span><span class="o">.</span><span class="nv">$c</span><span class="p">[</span><span class="m">9</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nv">$c</span><span class="p">[</span><span class="m">9</span><span class="p">]);</span>
    <span class="nv">$wk</span> <span class="o">=</span> <span class="nf">str_ireplace</span><span class="p">(</span><span class="nv">$rep</span><span class="p">,</span> <span class="nf">array_flip</span><span class="p">(</span><span class="nv">$rep</span><span class="p">),</span> <span class="nv">$wk</span><span class="p">);</span>
    <span class="nf">asort</span><span class="p">(</span><span class="nv">$wk</span><span class="p">);</span>
    <span class="nv">$c</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$wk</span> <span class="k">as</span> <span class="nv">$key</span> <span class="o">=&gt;</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$c</span> <span class="o">.=</span> <span class="nv">$key</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="cp">?&gt;</span><span class="x"></span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5190/addtag/" class="addtag" id="addtag_5190">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5190/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5190/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5190"
  >-</span><span
  class="button yellow"
  id="rating_z_5190"
  >0</span><span 
  class="button green"
  id="rating_p_5190"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5190/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment5192">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/642/" target="_top">saws</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5192/">#5192</a>(<script language="JavaScript">print_time(new Date("2008/01/05 11:45 GMT"));</script><noscript>2008/01/05 11:45 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>rankとsuitを分離して扱いました.</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">poker</span><span class="p">(</span><span class="n">hand</span><span class="p">)</span>
  <span class="k">def</span> <span class="nf">one_pair</span><span class="p">(</span><span class="n">rank</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="n">rank</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">x</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">2</span><span class="p">}</span>
    <span class="n">count</span> <span class="o">==</span> <span class="mi">1</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">two_pair</span><span class="p">(</span><span class="n">rank</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="n">rank</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">x</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">2</span><span class="p">}</span>
    <span class="n">count</span> <span class="o">==</span> <span class="mi">2</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">three_cards</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span>
    <span class="n">rank</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">3</span> <span class="o">?</span> <span class="kp">true</span> <span class="p">:</span> <span class="kp">nil</span><span class="p">}</span><span class="o">.</span><span class="n">compact</span><span class="o">.</span><span class="n">shift</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">straight</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span>
    <span class="n">rank</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">5</span> <span class="o">?</span> <span class="n">rank</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">first</span> <span class="o">+</span> <span class="mi">4</span> <span class="o">==</span> <span class="n">rank</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">last</span> <span class="p">:</span> <span class="kp">false</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">flush</span><span class="p">(</span><span class="n">suit</span><span class="p">);</span> <span class="n">suit</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">;</span><span class="k">end</span>
  <span class="k">def</span> <span class="nf">fourcards</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span>
    <span class="n">rank</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">4</span> <span class="o">?</span> <span class="kp">true</span> <span class="p">:</span> <span class="kp">nil</span><span class="p">}</span><span class="o">.</span><span class="n">compact</span><span class="o">.</span><span class="n">shift</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">convert</span><span class="p">(</span><span class="n">char</span><span class="p">)</span>
    <span class="k">case</span> <span class="n">char</span>
    <span class="k">when</span> <span class="s1">&#39;T&#39;</span><span class="p">:</span> <span class="mi">10</span>
    <span class="k">when</span> <span class="s1">&#39;J&#39;</span><span class="p">:</span> <span class="mi">11</span>
    <span class="k">when</span> <span class="s1">&#39;Q&#39;</span><span class="p">:</span> <span class="mi">12</span>
    <span class="k">when</span> <span class="s1">&#39;K&#39;</span><span class="p">:</span> <span class="mi">13</span>
    <span class="k">when</span> <span class="s1">&#39;A&#39;</span><span class="p">:</span> <span class="mi">14</span>
    <span class="k">else</span>
      <span class="n">char</span><span class="o">.</span><span class="n">to_i</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">div_suit_and_rank</span><span class="p">(</span><span class="n">hand</span><span class="p">)</span>
    <span class="n">suit_hash</span><span class="p">,</span> <span class="n">rank_hash</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">,</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
    <span class="n">cards</span> <span class="o">=</span> <span class="n">hand</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
    <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">hand</span><span class="o">.</span><span class="n">size</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="mi">2</span><span class="p">)){</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="mi">2</span><span class="o">*</span><span class="n">i</span><span class="p">}</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
      <span class="n">suit</span> <span class="o">=</span> <span class="n">cards</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>
      <span class="n">rank</span> <span class="o">=</span> <span class="n">convert</span><span class="p">(</span><span class="n">cards</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span><span class="p">)</span>
      <span class="nb">eval</span><span class="p">(</span><span class="s2">&quot;suit_hash[suit] </span><span class="si">#{</span><span class="p">(</span><span class="n">suit_hash</span><span class="o">[</span><span class="n">suit</span><span class="o">]</span> <span class="p">?</span> <span class="s1">&#39;&lt;&lt; rank&#39;</span> <span class="p">:</span> <span class="s1">&#39;= [rank]&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
      <span class="nb">eval</span><span class="p">(</span><span class="s2">&quot;rank_hash[rank] </span><span class="si">#{</span><span class="p">(</span><span class="n">rank_hash</span><span class="o">[</span><span class="n">rank</span><span class="o">]</span> <span class="p">?</span> <span class="s1">&#39;&lt;&lt; suit&#39;</span> <span class="p">:</span> <span class="s1">&#39;= [suit]&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="o">[</span><span class="n">suit_hash</span><span class="p">,</span> <span class="n">rank_hash</span><span class="o">]</span>
  <span class="k">end</span>
  <span class="n">suit</span><span class="p">,</span> <span class="n">rank</span> <span class="o">=</span> <span class="o">*</span><span class="n">div_suit_and_rank</span><span class="p">(</span><span class="n">hand</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">straight</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span>
    <span class="s2">&quot;</span><span class="si">#{</span><span class="n">rank</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">first</span> <span class="o">==</span> <span class="mi">10</span> <span class="o">?</span> <span class="s1">&#39;Loyal &#39;</span> <span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="si">}</span><span class="s2">Straight </span><span class="si">#{</span><span class="p">(</span><span class="n">flush</span><span class="p">(</span><span class="n">suit</span><span class="p">)</span> <span class="p">?</span> <span class="s1">&#39;Flush&#39;</span> <span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
  <span class="k">elsif</span> <span class="n">fourcards</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span>
    <span class="s2">&quot;Four of a Kind&quot;</span>
  <span class="k">elsif</span> <span class="n">three_cards</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span> <span class="ow">and</span> <span class="n">one_pair</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span>
    <span class="s2">&quot;Full House&quot;</span>
  <span class="k">elsif</span> <span class="n">flush</span><span class="p">(</span><span class="n">suit</span><span class="p">)</span>
    <span class="s2">&quot;Flush&quot;</span>
  <span class="k">elsif</span> <span class="n">three_cards</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span>
    <span class="s2">&quot;Three of a Kind&quot;</span>
  <span class="k">elsif</span> <span class="n">two_pair</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span>
    <span class="s2">&quot;Two Pair&quot;</span>
  <span class="k">elsif</span> <span class="n">one_pair</span><span class="p">(</span><span class="n">rank</span><span class="p">)</span>
    <span class="s2">&quot;One Pair&quot;</span>
  <span class="k">else</span>
    <span class="s2">&quot;No Pair&quot;</span>
  <span class="k">end</span>
<span class="k">end</span>
<span class="n">hands</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;SQSJSASKST&#39;</span><span class="p">,</span> <span class="s1">&#39;D9D7D6D5D8&#39;</span><span class="p">,</span> <span class="s1">&#39;C2D2S2H3H2&#39;</span><span class="p">,</span> <span class="s1">&#39;C2D3S2H3H2&#39;</span><span class="p">,</span> <span class="s1">&#39;S9S4S8STSJ&#39;</span><span class="p">,</span> <span class="s1">&#39;C4H7D5S6H3&#39;</span><span class="p">,</span> <span class="s1">&#39;S6H6C5DQC6&#39;</span><span class="p">,</span> <span class="s1">&#39;S6HQC5DQC6&#39;</span><span class="p">,</span> <span class="s1">&#39;S6H4C5DQC6&#39;</span><span class="p">,</span> <span class="s1">&#39;SJSQSKSAC2&#39;</span><span class="o">]</span>
<span class="n">hands</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">poker</span><span class="p">(</span><span class="n">x</span><span class="p">)}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5192/addtag/" class="addtag" id="addtag_5192">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5192/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5192/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5192"
  >-</span><span
  class="button yellow"
  id="rating_z_5192"
  >0</span><span 
  class="button green"
  id="rating_p_5192"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080309030640/http://ja.doukaku.org/comment/5192/">
    2
    replies
  </a>

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5192/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5195">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/154/" target="_top">xsd</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5195/">#5195</a>(<script language="JavaScript">print_time(new Date("2008/01/05 14:31 GMT"));</script><noscript>2008/01/05 14:31 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>残念ながらこれだと、xAx2x3x4x5の形のランクの並びがストレートと判断されないようです。</p>
<p>Aは最初または最後とされているみたいですね。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5195/addtag/" class="addtag" id="addtag_5195">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5195"
  >-</span><span
  class="button yellow"
  id="rating_z_5195"
  >0</span><span 
  class="button green"
  id="rating_p_5195"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5192/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5195/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5195/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5312">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/642/" target="_top">saws</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5312/">#5312</a>(<script language="JavaScript">print_time(new Date("2008/01/14 04:50 GMT"));</script><noscript>2008/01/14 04:50 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>確かに,  Aを14としたのが敗因でした.
straightメソッドに場合分けを追加する必要がありますね.</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5312/addtag/" class="addtag" id="addtag_5312">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5312"
  >-</span><span
  class="button yellow"
  id="rating_z_5312"
  >0</span><span 
  class="button green"
  id="rating_p_5312"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5192/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5312/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5312/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment5193">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5193/">#5193</a>(<script language="JavaScript">print_time(new Date("2008/01/05 11:59 GMT"));</script><noscript>2008/01/05 11:59 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ストレートの判定がなかなかきれいにまとまりませんね。ソートしておいて隣り合う数の差で判断してみましたが……うーん。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span> <span class="nv">as</span> <span class="n">List</span>

<span class="nv">hand</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">String</span><span class="p">,</span> <span class="n">Bool</span><span class="p">)</span>
<span class="nv">hand</span> <span class="nv">cards</span> <span class="o">=</span>
    <span class="p">(</span><span class="kr">case</span> <span class="nv">kinds</span> <span class="kr">of</span>
       <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="s">&quot;Four of a kind&quot;</span>
       <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="s">&quot;Full house&quot;</span>
       <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="s">&quot;Three of a kind&quot;</span>
       <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="s">&quot;Two pair&quot;</span>
       <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="s">&quot;One pair&quot;</span>
       <span class="nv">otherwise</span> <span class="o">-&gt;</span>
           <span class="kr">case</span> <span class="nv">rdiff</span> <span class="kr">of</span>
               <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span> <span class="o">|</span> <span class="nv">head</span> <span class="nv">ranks</span> <span class="o">==</span> <span class="mi">10</span> <span class="o">&amp;&amp;</span> <span class="nv">isFlush</span> <span class="o">-&gt;</span> <span class="s">&quot;Royal&quot;</span>
                            <span class="o">|</span> <span class="n">True</span> <span class="o">-&gt;</span> <span class="s">&quot;Straight&quot;</span>
               <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="s">&quot;Straight&quot;</span>
               <span class="nv">otherwise</span> <span class="o">-&gt;</span> <span class="s">&quot;No pair&quot;</span>
    <span class="p">,</span> <span class="nv">isFlush</span><span class="p">)</span>
    <span class="kr">where</span> <span class="nv">suits</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="nv">nub</span> <span class="p">[</span><span class="nv">cards</span> <span class="o">!!</span> <span class="nv">n</span> <span class="o">|</span> <span class="nv">n</span> <span class="o">&lt;-</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">..</span><span class="mi">8</span><span class="p">]]</span>
          <span class="nv">isFlush</span> <span class="o">=</span> <span class="nv">length</span> <span class="nv">suits</span> <span class="o">==</span> <span class="mi">1</span>
          <span class="nv">ranks</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="nv">sort</span> <span class="p">[</span><span class="nv">rankToInt</span> <span class="o">$</span> <span class="nv">cards</span> <span class="o">!!</span> <span class="nv">n</span> <span class="o">|</span> <span class="nv">n</span> <span class="o">&lt;-</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="o">..</span><span class="mi">9</span><span class="p">]]</span>
          <span class="nv">rankToInt</span> <span class="nv">r</span> <span class="o">=</span> <span class="kr">case</span> <span class="n">List</span><span class="o">.</span><span class="nv">elemIndex</span> <span class="nv">r</span> <span class="s">&quot;23456789TJQKA&quot;</span> <span class="kr">of</span> <span class="n">Just</span> <span class="nv">n</span> <span class="o">-&gt;</span> <span class="nv">n</span><span class="o">+</span><span class="mi">2</span>
          <span class="nv">kinds</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="nv">sort</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">length</span> <span class="o">$</span> <span class="n">List</span><span class="o">.</span><span class="nv">group</span> <span class="nv">ranks</span>
          <span class="nv">rdiff</span> <span class="o">=</span> <span class="nv">zipWith</span> <span class="p">(</span><span class="o">-</span><span class="p">)</span> <span class="p">(</span><span class="nv">tail</span> <span class="nv">ranks</span><span class="p">)</span> <span class="nv">ranks</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">mapM</span> <span class="nv">test</span> <span class="p">[</span><span class="s">&quot;SQSJSASKST&quot;</span><span class="p">,</span> <span class="s">&quot;D9D7D6D5D8&quot;</span><span class="p">,</span> <span class="s">&quot;C2D2S2H3H2&quot;</span><span class="p">,</span> <span class="s">&quot;C2D3S2H3H2&quot;</span><span class="p">,</span>
                  <span class="s">&quot;S9S4S8STSJ&quot;</span><span class="p">,</span> <span class="s">&quot;C4H7D5S6H3&quot;</span><span class="p">,</span> <span class="s">&quot;S6H6C5DQC6&quot;</span><span class="p">,</span> <span class="s">&quot;S6HQC5DQC6&quot;</span><span class="p">,</span>
                  <span class="s">&quot;S6H4C5DQC6&quot;</span> <span class="p">,</span><span class="s">&quot;SJSQSKSAC2&quot;</span><span class="p">]</span>
    <span class="kr">where</span> <span class="nv">test</span> <span class="nv">s</span> <span class="o">=</span> <span class="nv">putStrLn</span> <span class="p">(</span><span class="nv">s</span> <span class="o">++</span> <span class="s">&quot; =&gt; &quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">showHand</span> <span class="o">$</span> <span class="nv">hand</span> <span class="nv">s</span><span class="p">))</span>
          <span class="nv">showHand</span> <span class="p">(</span><span class="s">&quot;No pair&quot;</span><span class="p">,</span> <span class="n">True</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;Flush&quot;</span>
          <span class="nv">showHand</span> <span class="p">(</span><span class="nv">s</span><span class="p">,</span> <span class="n">True</span><span class="p">)</span> <span class="o">=</span> <span class="nv">s</span> <span class="o">++</span> <span class="s">&quot; flush&quot;</span>
          <span class="nv">showHand</span> <span class="p">(</span><span class="nv">s</span><span class="p">,</span> <span class="n">False</span><span class="p">)</span> <span class="o">=</span> <span class="nv">s</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5193/addtag/" class="addtag" id="addtag_5193">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5193/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5193/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5193"
  >-</span><span
  class="button yellow"
  id="rating_z_5193"
  >0</span><span 
  class="button green"
  id="rating_p_5193"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5193/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment5196">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/415/" target="_top">yohei</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5196/">#5196</a>(<script language="JavaScript">print_time(new Date("2008/01/05 15:19 GMT"));</script><noscript>2008/01/05 15:19 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/prolog/">
	  Prolog
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>permutationとパターンマッチで簡単に．効率は犠牲に．．．</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre>pokerHand([X,X,X,X,X], R, &#39;Royal flush&#39;) :-
    permutation(R, [&#39;T&#39;,&#39;J&#39;,&#39;Q&#39;,&#39;K&#39;,&#39;A&#39;]).

pokerHand([X,X,X,X,X], R, &#39;Straight flush&#39;) :-
    sub_atom(&#39;A23456789TJQK&#39;, _, 5, _, A),
    atom_chars(A, P), permutation(R, P).

pokerHand([X,X,X,X,X], _, &#39;Flush&#39;).

pokerHand(_, R, &#39;Straight&#39;) :-
    sub_atom(&#39;A23456789TJQKA&#39;, _, 5, _, A),
    atom_chars(A, P), permutation(R, P).

pokerHand(_, R, &#39;Four of a kind&#39; ) :- permutation(R, [X,X,X,X,_]).
pokerHand(_, R, &#39;Full house&#39;     ) :- permutation(R, [X,X,X,Y,Y]).
pokerHand(_, R, &#39;Three of a kind&#39;) :- permutation(R, [X,X,X,_,_]).
pokerHand(_, R, &#39;Two pair&#39;       ) :- permutation(R, [X,X,Y,Y,_]).
pokerHand(_, R, &#39;One pair&#39;       ) :- permutation(R, [X,X,_,_,_]).
pokerHand(_, _, &#39;No pair&#39;        ).

poker(Card) :-
    atom_chars(Card, [S1,R1,S2,R2,S3,R3,S4,R4,S5,R5]),
    pokerHand([S1,S2,S3,S4,S5], [R1,R2,R3,R4,R5], H), !,
    writeln(H).
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5196/addtag/" class="addtag" id="addtag_5196">タグ</a>:
	
    
    <a href="/web/20080309030640/http://ja.doukaku.org/tag/SWI-Prolog/">SWI-Prolog</a>
    
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/prolog/">
		Prolog
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5196/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5196/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5196"
  >-</span><span
  class="button yellow"
  id="rating_z_5196"
  >0</span><span 
  class="button green"
  id="rating_p_5196"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080309030640/http://ja.doukaku.org/comment/5196/">
    1
    reply
  </a>

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5196/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5200">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5200/">#5200</a>(<script language="JavaScript">print_time(new Date("2008/01/05 16:55 GMT"));</script><noscript>2008/01/05 16:55 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>なるほど。permutationでリスト中の順番に関係なくパターンとつきあわせることができるんですか。
ソートとかしなくてもいいんだ。（効率を考えなければ）
勉強になります。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5200/addtag/" class="addtag" id="addtag_5200">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5200"
  >-</span><span
  class="button yellow"
  id="rating_z_5200"
  >0</span><span 
  class="button green"
  id="rating_p_5200"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5196/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080309030640/http://ja.doukaku.org/comment/5200/root/"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5200/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment5199">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/651/" target="_top">lethevert</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5199/">#5199</a>(<script language="JavaScript">print_time(new Date("2008/01/05 15:56 GMT"));</script><noscript>2008/01/05 15:56 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/clean/">
	  Clean
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>初投稿です。Cleanです。この辺のライブラリを使ってます。</p>
<p>http://sourceforge.net/projects/cleanoptenv</p>
</div>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65</pre></td><td class="code"><div class="highlight"><pre>module Main

import System, Int, Char, String, List, Misc, MergeSort, ValueCast

Start
  | flush cards
    | straight cards
      | 14 == num (head cards)
        = &quot;Royal flush&quot;
      = &quot;Straight flush&quot;
    = &quot;Flush&quot;
  | straight cards
    = &quot;Straight&quot;
  | 4 == head groups
    = &quot;Four of a kind&quot;
  | 3 == head groups
    | 2 == groups !! 1
      = &quot;Full house&quot;
    = &quot;Three of a kind&quot;
  | 2 == head groups
    | 2 == groups !! 1
      = &quot;Two pair&quot;
    = &quot;One pair&quot;
  = &quot;No pair&quot;
  where
  cards = sortBy (&gt;) $ parseCards getCommandLine.[1]
  groups = sortBy (&gt;) $ map length $ groupCards [[]] 0 cards

:: Card = Card !Char !Int //suit num(2..14)
instance &lt; Card where
  (&lt;) (Card s0 n0) (Card s1 n1) = n0 &lt; n1

suit (Card s n) = s
num (Card s n) = n

parseCards t = p 0
  where
  l = size t
  p i | i &gt;= l = []
      = [Card s n: p (i+2)]
    where
    s = t.[i]
    n = case t.[i+1] of
          &#39;A&#39; = 14
          &#39;K&#39; = 13
          &#39;Q&#39; = 12
          &#39;J&#39; = 11
          &#39;T&#39; = 10
          c   = toInt (c - &#39;0&#39;)

groupCards ls _ [] = ls
groupCards [l:ll] m [c=:Card s n: rest]
  | m == n = groupCards [[c:l]:ll] n rest
           = groupCards [[c],l:ll] n rest

flush cards = and $ zipWith (==) suits (tail suits)
  where
  suits = map suit cards

straight cards = (and $ zipWith (\a b = a == b + 1) nums (tail nums))
              || caseAce nums
  where
  nums = map num cards
  caseAce [14,5,4,3,2] = True
  caseAce _ = False
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5199/addtag/" class="addtag" id="addtag_5199">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/clean/">
		Clean
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5199/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5199/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5199"
  >-</span><span
  class="button yellow"
  id="rating_z_5199"
  >0</span><span 
  class="button green"
  id="rating_p_5199"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5199/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  
    





<div class="comment" id="comment5210">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/154/" target="_top">xsd</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5210/">#5210</a>(<script language="JavaScript">print_time(new Date("2008/01/06 16:31 GMT"));</script><noscript>2008/01/06 16:31 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  出題者です。<br/><br/>初めにこのお題を思いついたときは、ただのif文の山をどう片付けるかという要素しかないものかと思っていたのですが、試しに自分で解いたときに、<br/><br/>(1)フラッシュかどうかをどう判断するか<br/>(2)ストレートかどうかをどう判断するか<br/>(3)ランクの構造はどうなっているか<br/>(4)上記３つの判断要素をどう組み合わせるか<br/><br/>などが、言語によって特色がでそうなので出題してみました。<br/><br/>(4)の処理はHaskell、OCaml、Scalaなどパターンマッチがある言語や、PythonやD言語などリストの一致を簡単に比較できる言語では書きやすそうに見えましたが、#5186&nbsp;shimakumaさんのJavaScript版はパターンマッチ/リスト比較など無しでかなりコンパクトにまとめていてうまいと思いました。<br/><br/>そんな中、#5187&nbsp;GEOJさんのA2-9TJQKをa-mに置換して扱うというアイデアが面白かったので、Perlで真似してみました。<br/>ランクの構造は、ソートした後に正規表現を使って調べています。<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!/usr/bin/perl</span>

<span class="p">(</span><span class="nv">$_</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">)</span> <span class="o">=~</span> <span class="nb">tr</span> <span class="sr">/A2-9TJQK/</span><span class="n">a</span><span class="o">-</span><span class="n">m</span><span class="o">/</span><span class="p">;</span>
<span class="nv">$rank</span> <span class="o">=</span> <span class="nb">join</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span> <span class="nb">sort</span><span class="p">(</span><span class="nb">split</span> <span class="sr">/[SCDH]/</span><span class="p">));</span>
<span class="nv">$flag</span> <span class="o">=</span> <span class="p">(</span><span class="sr">/^(.).((\1).){4}/</span><span class="p">)</span> <span class="o">*</span> <span class="mi">4</span> <span class="o">+</span> <span class="p">(</span><span class="nv">$rank</span> <span class="ow">eq</span> <span class="s">&quot;ajklm&quot;</span><span class="p">)</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">+</span> <span class="p">(</span><span class="s">&quot;abcdefghijklm&quot;</span> <span class="o">=~</span><span class="sr"> /$rank/</span><span class="p">);</span>

<span class="nb">die</span> <span class="s">&quot;Royal flush\n&quot;</span>     <span class="k">if</span> <span class="p">(</span><span class="nv">$flag</span> <span class="o">==</span> <span class="mi">6</span><span class="p">);</span>
<span class="nb">die</span> <span class="s">&quot;Straight flush\n&quot;</span>  <span class="k">if</span> <span class="p">(</span><span class="nv">$flag</span> <span class="o">==</span> <span class="mi">5</span><span class="p">);</span>
<span class="nb">die</span> <span class="s">&quot;Flush\n&quot;</span>           <span class="k">if</span> <span class="p">(</span><span class="nv">$flag</span> <span class="o">==</span> <span class="mi">4</span><span class="p">);</span>
<span class="nb">die</span> <span class="s">&quot;Straight\n&quot;</span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$flag</span><span class="p">);</span>
<span class="nb">die</span> <span class="s">&quot;Four of a kind\n&quot;</span>  <span class="k">if</span> <span class="p">(</span><span class="nv">$rank</span> <span class="o">=~</span><span class="sr"> /(.)\1{3}/</span><span class="p">);</span>
<span class="nb">die</span> <span class="s">&quot;Full house\n&quot;</span>      <span class="k">if</span> <span class="p">(</span><span class="nv">$rank</span> <span class="o">=~</span><span class="sr"> /((.)\2\2(.)\3)|((.)\5(.)\6\6)/</span><span class="p">);</span>
<span class="nb">die</span> <span class="s">&quot;Three of a kind\n&quot;</span> <span class="k">if</span> <span class="p">(</span><span class="nv">$rank</span> <span class="o">=~</span><span class="sr"> /(.)\1\1/</span><span class="p">);</span>
<span class="nb">die</span> <span class="s">&quot;Two pair\n&quot;</span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$rank</span> <span class="o">=~</span><span class="sr"> /(.)\1.?(.)\2/</span><span class="p">);</span>
<span class="nb">die</span> <span class="s">&quot;One pair\n&quot;</span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$rank</span> <span class="o">=~</span><span class="sr"> /(.)\1/</span><span class="p">);</span>
<span class="nb">die</span> <span class="s">&quot;No pair\n&quot;</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5210/addtag/" class="addtag" id="addtag_5210">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5210/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5210/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5210"
  >-</span><span
  class="button yellow"
  id="rating_z_5210"
  >0</span><span 
  class="button green"
  id="rating_p_5210"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5210/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment5456">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/249/" target="_top">sshi</a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5456/">#5456</a>(<script language="JavaScript">print_time(new Date("2008/01/25 15:14 GMT"));</script><noscript>2008/01/25 15:14 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>data使いたがりなhaskellコード。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">System</span>
<span class="kr">import</span> <span class="n">List</span><span class="p">(</span><span class="nv">sort</span><span class="p">,</span><span class="nv">group</span><span class="p">,</span><span class="nv">elemIndex</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Maybe</span><span class="p">(</span><span class="nv">fromJust</span><span class="p">)</span>

<span class="kr">data</span> <span class="n">Card</span> <span class="o">=</span> <span class="n">Card</span> <span class="p">{</span><span class="nv">suits</span><span class="o">::</span><span class="n">Suits</span><span class="p">,</span><span class="nv">rank</span><span class="o">::</span><span class="n">Int</span><span class="p">}</span> <span class="kr">deriving</span> <span class="n">Show</span>
<span class="kr">data</span> <span class="n">Suits</span> <span class="o">=</span> <span class="n">S</span> <span class="o">|</span> <span class="n">D</span> <span class="o">|</span> <span class="n">H</span> <span class="o">|</span> <span class="n">C</span> <span class="kr">deriving</span> <span class="p">(</span><span class="n">Read</span><span class="p">,</span><span class="n">Eq</span><span class="p">,</span><span class="n">Show</span><span class="p">)</span>
<span class="kr">data</span> <span class="n">Hand</span> <span class="o">=</span> <span class="n">RF</span> <span class="o">|</span> <span class="n">STF</span> <span class="o">|</span> <span class="n">FK</span> <span class="o">|</span> <span class="n">FH</span> <span class="o">|</span> <span class="n">F</span> <span class="o">|</span> <span class="n">ST</span> <span class="o">|</span> <span class="n">TK</span> <span class="o">|</span> <span class="n">TP</span> <span class="o">|</span> <span class="n">OP</span> <span class="o">|</span> <span class="n">NO</span>

<span class="nv">read_cards</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Card</span><span class="p">]</span>
<span class="nv">read_cards</span> <span class="nv">str</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">read_card</span> <span class="o">$</span> <span class="nv">split_2</span> <span class="nv">str</span>
    <span class="kr">where</span> 
      <span class="nv">read_card</span> <span class="p">[</span><span class="nv">s</span><span class="p">,</span><span class="nv">r</span><span class="p">]</span> <span class="o">=</span> <span class="n">Card</span> <span class="p">(</span><span class="nv">read</span> <span class="p">[</span><span class="nv">s</span><span class="p">])</span>
                        <span class="p">(</span><span class="nv">fromJust</span> <span class="p">(</span><span class="nv">elemIndex</span> <span class="nv">r</span> <span class="s">&quot;DD23456789TJQKA&quot;</span><span class="p">))</span>
      <span class="nv">split_2</span> <span class="p">[]</span> <span class="o">=</span> <span class="p">[]</span>
      <span class="nv">split_2</span> <span class="nv">list</span> <span class="o">=</span> <span class="kr">let</span> <span class="p">(</span><span class="nv">hd</span><span class="p">,</span><span class="nv">rest</span><span class="p">)</span> <span class="o">=</span> <span class="nv">splitAt</span> <span class="mi">2</span> <span class="nv">list</span> <span class="kr">in</span>  <span class="nv">hd</span> <span class="o">:</span> <span class="nv">split_2</span> <span class="nv">rest</span>

<span class="kr">instance</span> <span class="n">Show</span> <span class="n">Hand</span> <span class="kr">where</span>
    <span class="nv">show</span> <span class="nv">h</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">h</span> <span class="kr">of</span>
               <span class="n">RF</span>  <span class="o">-&gt;</span> <span class="s">&quot;Royal flush&quot;</span>
               <span class="n">STF</span> <span class="o">-&gt;</span> <span class="s">&quot;Straight flush&quot;</span>
               <span class="n">FK</span>  <span class="o">-&gt;</span> <span class="s">&quot;Four of a kind&quot;</span>
               <span class="n">FH</span>  <span class="o">-&gt;</span> <span class="s">&quot;Full House&quot;</span>
               <span class="n">F</span>   <span class="o">-&gt;</span> <span class="s">&quot;Flush&quot;</span>
               <span class="n">ST</span>  <span class="o">-&gt;</span> <span class="s">&quot;Straight&quot;</span>
               <span class="n">TK</span>  <span class="o">-&gt;</span> <span class="s">&quot;Three of a kind&quot;</span>
               <span class="n">TP</span>  <span class="o">-&gt;</span> <span class="s">&quot;Two pair&quot;</span>
               <span class="n">OP</span>  <span class="o">-&gt;</span> <span class="s">&quot;One pair&quot;</span>
               <span class="n">NO</span>  <span class="o">-&gt;</span> <span class="s">&quot;No pair&quot;</span>

<span class="nv">hand</span> <span class="o">::</span> <span class="p">[</span><span class="n">Card</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">Hand</span>
<span class="nv">hand</span>  <span class="nv">cards</span>
    <span class="o">|</span> <span class="nv">check_st</span>  <span class="o">&amp;&amp;</span> <span class="nv">check_flush</span>  <span class="o">&amp;&amp;</span> <span class="nv">head</span> <span class="nv">rank_seq</span> <span class="o">==</span> <span class="mi">10</span> <span class="o">=</span> <span class="n">RF</span>
    <span class="o">|</span> <span class="nv">check_st</span>  <span class="o">&amp;&amp;</span> <span class="nv">check_flush</span>  <span class="o">=</span> <span class="n">STF</span>
    <span class="o">|</span> <span class="nv">max_group</span> <span class="o">==</span> <span class="mi">4</span> <span class="o">=</span> <span class="n">FK</span>
    <span class="o">|</span> <span class="nv">sort</span> <span class="nv">group_count</span> <span class="o">==</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">FH</span>
    <span class="o">|</span> <span class="nv">check_flush</span>  <span class="o">=</span> <span class="n">F</span>
    <span class="o">|</span> <span class="nv">check_st</span> <span class="o">=</span> <span class="n">ST</span>
    <span class="o">|</span> <span class="nv">max_group</span> <span class="o">==</span>  <span class="mi">3</span> <span class="o">=</span> <span class="n">TK</span>
    <span class="o">|</span> <span class="nv">pair_count</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">=</span> <span class="n">TP</span>
    <span class="o">|</span> <span class="nv">pair_count</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">=</span> <span class="n">OP</span>
    <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">=</span> <span class="n">NO</span>
    <span class="kr">where</span>
      <span class="nv">rank_seq</span> <span class="o">=</span> <span class="nv">sort</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">rank</span> <span class="nv">cards</span>
      <span class="nv">groups</span> <span class="o">=</span> <span class="nv">group</span> <span class="nv">rank_seq</span>
      <span class="nv">group_count</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">length</span> <span class="nv">groups</span>
      <span class="nv">max_group</span> <span class="o">=</span> <span class="nv">foldl1</span> <span class="nv">max</span> <span class="nv">group_count</span>
      <span class="nv">pair_count</span> <span class="o">=</span> <span class="nv">length</span> <span class="p">(</span><span class="nv">filter</span> <span class="p">(</span><span class="o">\</span><span class="nv">l</span><span class="o">-&gt;</span><span class="nv">length</span> <span class="nv">l</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span> <span class="nv">groups</span><span class="p">)</span>

      <span class="nv">check_flush</span> <span class="o">=</span> <span class="nv">all</span> <span class="p">(</span><span class="o">\</span><span class="nv">c</span><span class="o">-&gt;</span><span class="nv">suits</span> <span class="nv">c</span><span class="o">==</span><span class="nv">suits</span> <span class="p">(</span><span class="nv">head</span> <span class="nv">cards</span><span class="p">))</span> <span class="nv">cards</span>
      <span class="nv">check_st</span> <span class="o">=</span> <span class="nv">normal</span> <span class="o">||</span> <span class="nv">rank_seq</span> <span class="o">==</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">14</span><span class="p">]</span>
          <span class="kr">where</span>
            <span class="nv">normal</span> <span class="o">=</span> <span class="nv">and</span> <span class="o">$</span> <span class="nv">zipWith</span> <span class="p">(</span><span class="o">\</span><span class="nv">a</span> <span class="nv">b</span><span class="o">-&gt;</span><span class="nv">a</span><span class="o">-</span><span class="nv">b</span> <span class="o">==</span> <span class="nv">head</span> <span class="nv">rank_seq</span><span class="p">)</span> <span class="nv">rank_seq</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="p">]</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">getArgs</span> <span class="o">&gt;&gt;=</span> <span class="nv">print</span> <span class="o">.</span> <span class="nv">hand</span> <span class="o">.</span> <span class="nv">read_cards</span> <span class="o">.</span> <span class="nv">head</span>

<span class="c1">-- Test</span>

<span class="nv">test</span> <span class="o">=</span> <span class="nv">zip</span> <span class="nv">testlist</span> <span class="p">(</span><span class="nv">map</span> <span class="p">(</span><span class="nv">hand</span> <span class="o">.</span><span class="nv">read_cards</span><span class="p">)</span> <span class="nv">testlist</span><span class="p">)</span>

<span class="nv">testlist</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;SQSJSASKST&quot;</span><span class="p">,</span>
            <span class="s">&quot;D9D7D6D5D8&quot;</span><span class="p">,</span>
            <span class="s">&quot;C2D2S2H3H2&quot;</span><span class="p">,</span>
            <span class="s">&quot;C2D3S2H3H2&quot;</span><span class="p">,</span>
            <span class="s">&quot;S9S4S8STSJ&quot;</span><span class="p">,</span>
            <span class="s">&quot;C4H7D5S6H3&quot;</span><span class="p">,</span>
            <span class="s">&quot;S6H6C5DQC6&quot;</span><span class="p">,</span>
            <span class="s">&quot;S6HQC5DQC6&quot;</span><span class="p">,</span>
            <span class="s">&quot;S6H4C5DQC6&quot;</span><span class="p">,</span>
            <span class="s">&quot;SJSQSKSAC2&quot;</span><span class="p">]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5456/addtag/" class="addtag" id="addtag_5456">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5456/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5456/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5456"
  >-</span><span
  class="button yellow"
  id="rating_z_5456"
  >0</span><span 
  class="button green"
  id="rating_p_5456"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5456/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5602">
  <p class="banner"><a href="/web/20080309030640/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080309030640/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5602/">#5602</a>(<script language="JavaScript">print_time(new Date("2008/01/31 12:03 GMT"));</script><noscript>2008/01/31 12:03 GMT</noscript>)
	
	
	
	[<a href="/web/20080309030640/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>短さ優先。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre><span class="n">ranks</span> <span class="o">=</span> <span class="o">[]</span>
<span class="mi">1</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">ranks</span> <span class="o">&lt;&lt;</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="n">i</span><span class="p">,</span> <span class="mi">1</span><span class="o">]</span> <span class="k">end</span>
<span class="n">rank_hash</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">ranks</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">rank</span><span class="o">|</span> <span class="n">rank_hash</span><span class="o">[</span><span class="n">rank</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span> <span class="k">end</span>
<span class="n">flush</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">count</span><span class="p">(</span><span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="o">].</span><span class="n">to_s</span><span class="p">)</span> <span class="o">==</span> <span class="mi">5</span>
<span class="n">straight</span> <span class="o">=</span> <span class="p">(</span><span class="s2">&quot;23456789AJKQT&quot;</span><span class="o">.</span><span class="n">include?</span> <span class="n">ranks</span><span class="o">.</span><span class="n">sort!</span><span class="o">.</span><span class="n">to_s</span> <span class="ow">or</span> <span class="s2">&quot;2345A&quot;</span><span class="o">.</span><span class="n">include?</span> <span class="n">ranks</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span>
<span class="k">case</span>
<span class="k">when</span> <span class="p">(</span><span class="n">ranks</span><span class="o">.</span><span class="n">to_s</span> <span class="o">==</span> <span class="s2">&quot;AJKQT&quot;</span> <span class="ow">and</span> <span class="n">flush</span><span class="p">)</span> <span class="k">then</span> <span class="nb">puts</span> <span class="s2">&quot;Royal Flush&quot;</span>
<span class="k">when</span> <span class="p">(</span><span class="n">straight</span> <span class="ow">and</span> <span class="n">flush</span><span class="p">)</span> <span class="k">then</span> <span class="nb">puts</span> <span class="s2">&quot;Straight Flush&quot;</span>
<span class="k">when</span> <span class="n">rank_hash</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">max</span> <span class="o">==</span> <span class="mi">4</span> <span class="k">then</span> <span class="nb">puts</span> <span class="s2">&quot;Four of a Kind&quot;</span>
<span class="k">when</span> <span class="p">(</span><span class="n">rank_hash</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">max</span> <span class="o">==</span> <span class="mi">3</span> <span class="ow">and</span> <span class="n">rank_hash</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">include?</span> <span class="mi">2</span><span class="p">)</span> <span class="k">then</span> <span class="nb">puts</span> <span class="s2">&quot;Full House&quot;</span>
<span class="k">when</span> <span class="n">flush</span> <span class="k">then</span> <span class="nb">puts</span> <span class="s2">&quot;Flush&quot;</span>
<span class="k">when</span> <span class="n">straight</span> <span class="k">then</span> <span class="nb">puts</span> <span class="s2">&quot;Straight&quot;</span>
<span class="k">when</span> <span class="n">rank_hash</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">max</span> <span class="o">==</span> <span class="mi">3</span> <span class="k">then</span> <span class="nb">puts</span> <span class="s2">&quot;Three of a Kind&quot;</span>
<span class="k">when</span> <span class="n">rank_hash</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">2</span> <span class="k">then</span> <span class="nb">puts</span> <span class="s2">&quot;Two Pair&quot;</span>
<span class="k">when</span> <span class="n">rank_hash</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">max</span> <span class="o">==</span> <span class="mi">2</span> <span class="k">then</span> <span class="nb">puts</span> <span class="s2">&quot;One Pair&quot;</span>
<span class="k">else</span> <span class="nb">puts</span> <span class="s2">&quot;No Pair&quot;</span> 
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080309030640/http://ja.doukaku.org/comment/5602/addtag/" class="addtag" id="addtag_5602">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080309030640/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5602/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080309030640/http://ja.doukaku.org/comment/5602/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5602"
  >-</span><span
  class="button yellow"
  id="rating_z_5602"
  >0</span><span 
  class="button green"
  id="rating_p_5602"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080309030640/http://ja.doukaku.org/121/reply_to/5602/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20080309030640if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20080309030640/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20080309030640/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20080309030640/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20080309030640/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20080309030640/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20080309030640/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20080309030640/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20080309030640/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20080309030640/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20080309030640/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20080309030640im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20080309030640/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20080309030640/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20080309030640/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20080309030640/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20080309030640/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20080309030640/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20080309030640/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20080309030640/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20080309030640im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20080309030640/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20080309030640/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20080309030640/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20080309030640js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 3:06:40 Mar 9, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:58:11 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
