
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
ソートするコードの生成
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20080325151040cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20080325151040cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20080325151040cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20080325151040/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20080325151040/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20080325151040js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20080325151040js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20080325151040js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20080325151040js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app12.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/63\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "25";
var displayMonth = "Mar";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/63/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20080325151040" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080123113539/http://ja.doukaku.org/63/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="23 Jan 2008"><strong>JAN</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 15:10:40 Mar 25, 2008">MAR</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Apr
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080123113539/http://ja.doukaku.org/63/nested/" title="11:35:39 Jan 23, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 15:10:40 Mar 25, 2008">25</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2007
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 15:10:40 Mar 25, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20080325151040*/http://ja.doukaku.org/63/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>3 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 25 Mar 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000000_2008:2:101000000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20080325151040/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20080325151040/http://ja.doukaku.org/63/">ソートするコードの生成</a>
</h2>

    





<div class="comment" id="comment3419">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3419/">#3419</a>(<script language="JavaScript">print_time(new Date("2007/09/21 16:17 GMT"));</script><noscript>2007/09/21 16:17 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffcf;">1/3=0.33</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <a href="/web/20080325151040/http://acm.uva.es/p/v1/110.html">Meta-Loopless Sorts</a>の改題です．
<p>
n個の整数をソートするプログラムを生成するプログラム gensort を
書いて下さい．条件は以下のとおり
<p>
<ol>
<li> 生成するプログラム，生成されたプログラムは同じ言語にして下さい．
<li> 生成したプログラムはファイルに書き込んでください．
<li> 生成されたプログラムでは最初に n 個の整数を読み込んで，
   n個の変数を初期化してください．「可能なら」変数名は，アルファベット
   一文字で a，b，c ... の順で使ってください．n = 5 なら
   変数は a, b, c, d, e です．
<li> 生成されたプログラムでは，if 文あるいは if 式で2つの変数を比較して
   いって，変数の順が確定したら，その順で変数の値を出力するようにして
   下さい．
<li>生成される側のプログラムでのアルゴリズムやデータ構造を工夫する問題では
   ありません :)
</ol>
<p>
gensort 3 で生成した Pascal のプログラム例は以下のとおりです．
<p>
<pre>
program sort(input,output);
var
a,b,c : integer;
begin
  readln(a,b,c);
  if a &lt; b then
    if b &lt; c then
      writeln(a,b,c)
    else if a &lt; c then
      writeln(a,c,b)
    else
      writeln(c,a,b)
  else
    if a &lt; c then
      writeln(b,a,c)
    else if b &lt; c then
      writeln(b,c,a)
    else
      writeln(c,b,a)
end.
</pre>
<p>

n の値を 2 〜 10 くらいまで変化させて以下の処理時間を測定してください．
<p>

<pre>
1. gensort n の処理
2. 生成したプログラムの処理
   2-1. コンパイル言語の場合は，コンパイル時間と実行時間
   2-2. インタプリタ言語の場合，可能ならロード時間と実行時間を別測定，
        分解できないなら実行時間
</pre>

ごさっしのとおり，出力されたプログラムは n の値で急激に大きくなります．
 n が大きいと gensort n で文法的に正しいプログラムは生成できてもコンパ イル
や実行ができないということもありえると思います．処理系ごとの限界がわか
ると面白いのではないかと思います．オリジナルの問題は Pascal のプログラム
コードを生成するプログラムを書けという問題でしたが，生成する側とされる側
の言語を同じにするほうが面白いですよね．

<hr>
この問題はnobsunさんからの投稿です。ご投稿ありがとうございました。助かります。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3419/addtag/" class="addtag" id="addtag_3419">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffcf;"
  >1/3=0.33</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3419"
  >-</span><span
  class="button yellow"
  id="rating_z_3419"
  >0</span><span 
  class="button green"
  id="rating_p_3419"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3419/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20080325151040/http://ja.doukaku.org/63/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20080325151040/http://ja.doukaku.org/63/flatten/">フラット表示</a> 
<a href="/web/20080325151040/http://ja.doukaku.org/63/">非表示</a> 


  
    





<div class="comment" id="comment3159">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3159/">#3159</a>(<script language="JavaScript">print_time(new Date("2007/09/22 01:38 GMT"));</script><noscript>2007/09/22 01:38 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>これはなかなか良い処理系いじめですね。

ナイーブに書いてみましたが、生成されるコード量と生成速度は O(n!)、
ロード&amp;コンパイルに O(n・n!)くらいかかっているようです。
n=9, 10はロードを諦めました。予想ではそれぞれ30分と5時間ですが、
n=10だと32bitマシンでは実行できないかも。


ベンチマーク結果 (サイズはbyte、時間は秒単位。 Pentium 4 @2GHz, 2GMem)
     filesize      gen (usr/sys)  load (usr/sys)   run (usr/sys)
n=2          134      0.0/0.0         0.0/0.0          0.0/0.0 
n=3          276      0.0/0.0         0.0/0.0          0.0/0.0
n=4          938      0.0/0.0        0.01/0.0          0.0/0.0
n=5         4636      0.0/0.0        0.01/0.0          0.0/0.0
n=6        28878     0.01/0.0        0.08/0.0          0.0/0.0
n=7       211760     0.08/0.0        2.39/0.04         0.0/0.0
n=8      1774162     0.53/0.02     213.94/1.93         0.0/0.0
n=9     16692564     5.87/0.28          -/-              -/-
n=10   174182487    65.83/2.94          -/-              -/-
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">util</span><span class="o">.</span><span class="nv">match</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-42</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">gensort</span> <span class="nv">n</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">rec</span> <span class="nv">xs</span> <span class="nv">ss</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">match</span> <span class="nv">xs</span>
      <span class="err">[</span><span class="p">()</span> <span class="o">`</span><span class="p">(</span><span class="nb">write </span><span class="p">(</span><span class="nb">list </span><span class="o">,@</span><span class="p">(</span><span class="nb">reverse </span><span class="nv">ss</span><span class="p">)))</span><span class="err">]</span>
      <span class="err">[</span><span class="p">(</span><span class="nf">x</span> <span class="o">.</span> <span class="nv">xs</span><span class="p">)</span>
       <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">ss</span> <span class="nv">ss</span><span class="p">)</span> <span class="p">(</span><span class="nf">rs</span> <span class="o">&#39;</span><span class="p">()))</span>
         <span class="p">(</span><span class="nf">match</span> <span class="nv">ss</span>
           <span class="err">[</span><span class="p">()</span>       <span class="p">(</span><span class="nf">rec</span> <span class="nv">xs</span> <span class="p">(</span><span class="nb">reverse </span><span class="p">(</span><span class="nb">cons </span><span class="nv">x</span> <span class="nv">rs</span><span class="p">)))</span><span class="err">]</span>
           <span class="err">[</span><span class="p">(</span><span class="k">and </span><span class="p">(</span><span class="nf">y</span> <span class="o">.</span> <span class="nv">ys</span><span class="p">)</span> <span class="nv">ss</span><span class="p">)</span>
            <span class="o">`</span><span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&lt; </span><span class="o">,</span><span class="nv">y</span> <span class="o">,</span><span class="nv">x</span><span class="p">)</span>
               <span class="o">,</span><span class="p">(</span><span class="nf">rec</span> <span class="nv">xs</span> <span class="p">(</span><span class="nb">append </span><span class="p">(</span><span class="nb">reverse </span><span class="p">(</span><span class="nb">cons </span><span class="nv">x</span> <span class="nv">rs</span><span class="p">))</span> <span class="nv">ss</span><span class="p">))</span>
               <span class="o">,</span><span class="p">(</span><span class="nf">loop</span> <span class="nv">ys</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">y</span> <span class="nv">rs</span><span class="p">)))</span><span class="err">]</span><span class="p">))</span><span class="err">]</span><span class="p">))</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">wrap</span> <span class="nv">vars</span><span class="p">)</span>
    <span class="o">`</span><span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">main</span> <span class="nv">args</span><span class="p">)</span>
       <span class="p">(</span><span class="nb">apply </span><span class="p">(</span><span class="k">lambda </span><span class="o">,</span><span class="nv">vars</span> <span class="o">,</span><span class="p">(</span><span class="nf">rec</span> <span class="nv">vars</span> <span class="o">&#39;</span><span class="p">()))</span> <span class="p">(</span><span class="nf">list-ec</span> <span class="p">(</span><span class="nf">:</span> <span class="nv">i</span> <span class="o">,</span><span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">read</span><span class="p">)))</span> <span class="mi">0</span><span class="p">))</span>
  <span class="p">(</span><span class="nb">write </span><span class="o">&#39;</span><span class="p">(</span><span class="nv">use</span> <span class="nv">srfi-42</span><span class="p">))</span>
  <span class="p">(</span><span class="nb">write </span><span class="p">(</span><span class="nf">wrap</span> <span class="p">(</span><span class="nf">list-ec</span> <span class="p">(</span><span class="nf">:</span> <span class="nv">i</span> <span class="nv">n</span><span class="p">)</span>
                        <span class="p">(</span><span class="nf">string-&gt;symbol</span>
                         <span class="p">(</span><span class="nb">string </span><span class="p">(</span><span class="nf">integer-&gt;digit</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">10</span><span class="p">)</span> <span class="mi">36</span><span class="p">)))))))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3159/addtag/" class="addtag" id="addtag_3159">タグ</a>:
	
    
    <a href="/web/20080325151040/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3159/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3159/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3159"
  >-</span><span
  class="button yellow"
  id="rating_z_3159"
  >0</span><span 
  class="button green"
  id="rating_p_3159"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080325151040/http://ja.doukaku.org/comment/3159/">
    1
    reply
  </a>

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3159/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3160">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3160/">#3160</a>(<script language="JavaScript">print_time(new Date("2007/09/22 01:43 GMT"));</script><noscript>2007/09/22 01:43 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  いや、ロード時間の予想は甘いですね。もうひとつnのファクターがかかるから、5時間と2日、かな。<br/><br/>ベンチマークに使ったコードもつけておきます。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre><span class="c1">;; benchmark code</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">time</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-27</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">bench</span> <span class="nv">n</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">gutimer</span> <span class="p">(</span><span class="nf">make</span> <span class="nv">&lt;user-time-counter&gt;</span><span class="p">))</span>
        <span class="p">(</span><span class="nf">gstimer</span> <span class="p">(</span><span class="nf">make</span> <span class="nv">&lt;system-time-counter&gt;</span><span class="p">))</span>
        <span class="p">(</span><span class="nf">lutimer</span> <span class="p">(</span><span class="nf">make</span> <span class="nv">&lt;user-time-counter&gt;</span><span class="p">))</span>
        <span class="p">(</span><span class="nf">lstimer</span> <span class="p">(</span><span class="nf">make</span> <span class="nv">&lt;system-time-counter&gt;</span><span class="p">))</span>
        <span class="p">(</span><span class="nf">rutimer</span> <span class="p">(</span><span class="nf">make</span> <span class="nv">&lt;user-time-counter&gt;</span><span class="p">))</span>
        <span class="p">(</span><span class="nf">rstimer</span> <span class="p">(</span><span class="nf">make</span> <span class="nv">&lt;system-time-counter&gt;</span><span class="p">))</span>
        <span class="p">(</span><span class="nf">data</span> <span class="p">(</span><span class="nf">with-output-to-string</span>
                <span class="p">(</span><span class="k">lambda </span><span class="p">()</span> <span class="p">(</span><span class="nf">do-ec</span> <span class="p">(</span><span class="nf">:</span> <span class="nv">i</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">print</span> <span class="p">(</span><span class="nf">random-integer</span> <span class="mi">100</span><span class="p">)))))))</span>
    <span class="p">(</span><span class="nf">with-time-counter</span> <span class="nv">gutimer</span>
      <span class="p">(</span><span class="nf">with-time-counter</span> <span class="nv">gstimer</span>
        <span class="p">(</span><span class="nb">with-output-to-file </span><span class="o">#`</span><span class="s">&quot;sort-,|n|.scm&quot;</span> <span class="p">(</span><span class="nf">cut</span> <span class="nv">gensort</span> <span class="nv">n</span><span class="p">))))</span>
    <span class="p">(</span><span class="nf">with-time-counter</span> <span class="nv">lutimer</span>
      <span class="p">(</span><span class="nf">with-time-counter</span> <span class="nv">lstimer</span>
        <span class="p">(</span><span class="nb">load </span><span class="o">#`</span><span class="s">&quot;./sort-,|n|.scm&quot;</span><span class="p">)))</span>
    <span class="p">(</span><span class="nf">with-time-counter</span> <span class="nv">rutimer</span>
      <span class="p">(</span><span class="nf">with-time-counter</span> <span class="nv">rstimer</span>
        <span class="p">(</span><span class="nb">with-output-to-file </span><span class="s">&quot;/dev/null&quot;</span>
          <span class="p">(</span><span class="nf">cut</span> <span class="nv">with-input-from-string</span> <span class="nv">data</span> <span class="p">(</span><span class="nf">cut</span> <span class="nv">main</span> <span class="o">&#39;</span><span class="p">())))))</span>
    <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;n=~d gen=~s/~s load=~s/~s run=~s/~s\n&quot;</span> <span class="nv">n</span>
            <span class="p">(</span><span class="nf">time-counter-value</span> <span class="nv">gutimer</span><span class="p">)</span>
            <span class="p">(</span><span class="nf">time-counter-value</span> <span class="nv">gstimer</span><span class="p">)</span>
            <span class="p">(</span><span class="nf">time-counter-value</span> <span class="nv">lutimer</span><span class="p">)</span>
            <span class="p">(</span><span class="nf">time-counter-value</span> <span class="nv">lstimer</span><span class="p">)</span>
            <span class="p">(</span><span class="nf">time-counter-value</span> <span class="nv">rutimer</span><span class="p">)</span>
            <span class="p">(</span><span class="nf">time-counter-value</span> <span class="nv">rstimer</span><span class="p">)</span>
            <span class="p">)))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3160/addtag/" class="addtag" id="addtag_3160">タグ</a>:
	
    
    <a href="/web/20080325151040/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3160/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3160/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3160"
  >-</span><span
  class="button yellow"
  id="rating_z_3160"
  >0</span><span 
  class="button green"
  id="rating_p_3160"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3159/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3160/root/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3160/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment3162">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3162/">#3162</a>(<script language="JavaScript">print_time(new Date("2007/09/22 02:48 GMT"));</script><noscript>2007/09/22 02:48 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  生成コードは最適化されていません（二分探索していない）。この例では&nbsp;6&nbsp;変数までが限界（7変数では「コードが大きすぎます。」というエラー）です。以下は&nbsp;6&nbsp;変数での実行例<br/><br/>生成に要した時間<br/>0.691u&nbsp;0.252s&nbsp;0:01.05&nbsp;89.5%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0+0k&nbsp;0+13io&nbsp;0pf+0w<br/><br/>コンパイル時間<br/>2.020u&nbsp;0.273s&nbsp;0:02.52&nbsp;90.8%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0+0k&nbsp;0+15io&nbsp;0pf+0w<br/><br/>実行時間（ロード時間含む）<br/>0.326u&nbsp;0.159s&nbsp;0:00.56&nbsp;83.9%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0+0k&nbsp;0+30io&nbsp;0pf+0w<br/><br/>CPU<br/>1.67GHz&nbsp;PowerPC&nbsp;G4<br/><br/>Javaのバージョン<br/>Java&nbsp;HotSpot(TM)&nbsp;Client&nbsp;VM&nbsp;(build&nbsp;1.5.0_07-87,&nbsp;mixed&nbsp;mode,&nbsp;sharing)
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">GenSort</span> <span class="o">{</span>
    <span class="k">static</span> <span class="n">PrintStream</span> <span class="n">out</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">genPrintCode</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">sorted</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&quot;¥tSystem.out.println(&quot;</span><span class="o">);</span>
        <span class="n">Iterator</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">i</span> <span class="o">=</span> <span class="n">sorted</span><span class="o">.</span><span class="na">iterator</span><span class="o">();</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">i</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%c%s&quot;</span><span class="o">,</span> <span class="sc">&#39;a&#39;</span><span class="o">+</span><span class="n">i</span><span class="o">.</span><span class="na">next</span><span class="o">(),</span> <span class="o">(</span><span class="n">i</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())?</span><span class="s">&quot;+ ¥&quot;</span><span class="o">,</span> <span class="err">¥</span><span class="s">&quot; + &quot;</span> <span class="o">:</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;);&quot;</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">genSort</span><span class="o">(</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">sorted</span><span class="o">,</span> <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">unsort</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">unsort</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">genPrintCode</span><span class="o">(</span><span class="n">sorted</span><span class="o">);</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="n">unsort</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="n">unsort</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">ele</span> <span class="o">=</span> <span class="n">unsort</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">sorted</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;¥t%sif (%c &lt; %c) {%n&quot;</span><span class="o">,</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)?</span><span class="s">&quot;&quot;</span> <span class="o">:</span> <span class="s">&quot;} else &quot;</span><span class="o">,</span> <span class="sc">&#39;a&#39;</span><span class="o">+</span><span class="n">ele</span><span class="o">,</span> <span class="sc">&#39;a&#39;</span><span class="o">+</span><span class="n">sorted</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
            <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">s2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="n">sorted</span><span class="o">);</span>
            <span class="n">s2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">ele</span><span class="o">);</span>
            <span class="n">genSort</span><span class="o">(</span><span class="n">s2</span><span class="o">,</span> <span class="n">unsort</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;¥t} else {%n&quot;</span><span class="o">);</span>
        <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">s2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="n">sorted</span><span class="o">);</span>
        <span class="n">s2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sorted</span><span class="o">.</span><span class="na">size</span><span class="o">(),</span> <span class="n">ele</span><span class="o">);</span>
        <span class="n">genSort</span><span class="o">(</span><span class="n">s2</span><span class="o">,</span> <span class="n">unsort</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;¥t}%n&quot;</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="k">throws</span> <span class="n">IOException</span> <span class="o">{</span>
        <span class="n">out</span>  <span class="o">=</span> <span class="k">new</span> <span class="n">PrintStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="s">&quot;Sort.java&quot;</span><span class="o">));</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;import java.io.*;&quot;</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;public class Sort {&quot;</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;    public static void main(String[] args) throws IOException{&quot;</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;¥tBufferedReader r = new BufferedReader(new InputStreamReader(System.in));&quot;</span><span class="o">);</span>
        <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">unsort</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;();</span>
        <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">sorted</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;¥tint %c = Integer.parseInt(r.readLine());%n&quot;</span><span class="o">,</span> <span class="sc">&#39;a&#39;</span><span class="o">+</span><span class="n">i</span><span class="o">);</span>
            <span class="n">unsort</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">sorted</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">unsort</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
        <span class="n">genSort</span><span class="o">(</span><span class="n">sorted</span><span class="o">,</span> <span class="n">unsort</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;    }&quot;</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;}&quot;</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3162/addtag/" class="addtag" id="addtag_3162">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3162/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3162/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3162"
  >-</span><span
  class="button yellow"
  id="rating_z_3162"
  >0</span><span 
  class="button green"
  id="rating_p_3162"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080325151040/http://ja.doukaku.org/comment/3162/">
    1
    reply
  </a>

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3162/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3164">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3164/">#3164</a>(<script language="JavaScript">print_time(new Date("2007/09/22 03:57 GMT"));</script><noscript>2007/09/22 03:57 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>1〜9 で生成時間を計ってみました（10の時は時間がかかりすぎるので計れていません）。

生成時間
 1: 0.330u 0.143s 0:00.58 81.0%     0+0k 0+6io 0pf+0w
 2: 0.332u 0.150s 0:00.50 96.0%     0+0k 0+13io 0pf+0w
 3: 0.340u 0.149s 0:00.59 81.3%     0+0k 0+13io 0pf+0w
 4: 0.394u 0.154s 0:00.64 84.3%     0+0k 0+0io 0pf+0w
 5: 0.506u 0.174s 0:00.74 90.5%     0+0k 0+13io 0pf+0w
 6: 0.682u 0.245s 0:01.04 88.4%     0+0k 0+0io 0pf+0w
 7: 1.687u 0.777s 0:03.35 73.1%     0+0k 0+6io 0pf+0w
 8: 10.038u 5.275s 0:16.47 92.8%    0+0k 0+13io 0pf+0w
 9: 92.618u 49.432s 2:27.27 96.4%   0+0k 0+27io 0pf+0w

コンパイル時間
 1: 0.636u 0.210s 0:01.14 73.6%     0+0k 0+3io 0pf+0w
 2: 0.681u 0.212s 0:01.00 89.0%     0+0k 0+15io 0pf+0w
 3: 0.724u 0.211s 0:01.07 86.9%     0+0k 0+2io 0pf+0w
 4: 0.794u 0.217s 0:01.55 64.5%     0+0k 0+0io 0pf+0w
 5: 1.098u 0.230s 0:01.44 91.6%     0+0k 0+15io 0pf+0w
 6: 2.026u 0.280s 0:02.51 91.6%     0+0k 0+0io 0pf+0w

7以上はコンパイルできず

実行時間
 1: 0.275u 0.136s 0:00.50 80.0%     0+0k 0+0io 0pf+0w
 2: 0.275u 0.132s 0:00.48 83.3%     0+0k 0+0io 0pf+0w
 3: 0.275u 0.132s 0:00.48 83.3%     0+0k 0+13io 0pf+0w
 4: 0.276u 0.135s 0:00.49 81.6%     0+0k 0+0io 0pf+0w
 5: 0.282u 0.135s 0:00.49 83.6%     0+0k 0+0io 0pf+0w
 6: 0.323u 0.142s 0:00.54 85.1%     0+0k 0+13io 0pf+0w</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3164/addtag/" class="addtag" id="addtag_3164">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3164"
  >-</span><span
  class="button yellow"
  id="rating_z_3164"
  >0</span><span 
  class="button green"
  id="rating_p_3164"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3162/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3164/root/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3164/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment3163">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3163/">#3163</a>(<script language="JavaScript">print_time(new Date("2007/09/22 03:41 GMT"));</script><noscript>2007/09/22 03:41 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>最初、問題を良く理解しないで、condと(&lt;= a b c d ..)使っで作成してしまいまいました。
そのcondの部分を無理矢理ifに展開しています…。
…もしかして、&lt;=も使ってはいけないのでしょうか？… ('-'*;)

srfi:partitionは、srfiのpartitionと同じ動きをするものだと思って下さい。

ベンチマークですが、生成は、N=6までできて、他は、N=5までで、それ以上は、
HEAP-EXHAUSTED-ERRORとなってしまいます。
勿論、プログラムがまずいんだと思うのですが、この辺が自分の限界です…。


~~~ 計測結果~~~ 
               環境:Pentium III 1GHz Mem 768MB

生成:
== real   user     system   cons(B) ==
2: 0.02   0.0      0.0      20,480
3: 0.025  0.0      0.004001 24,576
4: 0.053  0.008001 0.0      77,816
5: 0.251  0.088005 0.008    450,288
6: 5.307  1.42809  0.088006 3,258,632
7+: ~~HEAP-EXHAUSTED-ERROR~~

コンパイル:
== real   user      system   cons(B) ==
2: 0.153  0.024002  0.0      290,288
3: 0.172  0.064004  0.004    765,768
4: 0.387  0.272017  0.024002 4,796,240
5: 6.708  6.040377  0.344021 90,714,536
6+: ~~HEAP-EXHAUSTED-ERROR~~

実行:
== real   user system  cons(B) ==
2: 0.0    0.0  0.0     0
3: 0.0    0.0  0.0     3,816
4: 0.001  0.0  0.0     11,896
5: 0.0    0.0  0.0     15,944
6+: ~~HEAP-EXHAUSTED-ERROR~~</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57</pre></td><td class="code"><div class="highlight"><pre>(defpackage doukaku-63 (:use #:cl))
(in-package :doukaku-63)

(defmacro gen-sort (n)
  (let* ((args-lst &#39;(Z Y X W V U T S R Q P O N M L K J I H G F E D C B A))
         (args (reverse (last args-lst n))))
    `(defun ,(intern (format nil &quot;SORT-~2,&#39;0D&quot; n)) ,args
       (let ((res ,(gen-if (apply #&#39;perm-n args))))
         (format t &quot;~{~A ~}~%&quot; res)
         res))))

;; 式の組み合わせを生成
(defun perm-n (&amp;rest args)
  (let ((alen (length args)))
    (cond ((&gt; 1 alen) () )
          ((= 1 alen) args )
          ((= 2 (length args))
           (destructuring-bind (x y) args
             `((,x ,y) (,y ,x))))
          ((&lt;= 3 (length args))
           (mapcan (lambda (x)
                     (multiple-value-bind (top rest)
                         (srfi:partition (lambda (z) (eq x z)) args)
                       (mapcar (lambda (r) (append top r))
                               (apply #&#39;perm-n rest))))
                   args) )
          (&#39;T &#39;(()) ))))

;; 妙なif式を生成
(defun gen-if (clauses)
  (let (res)
    (dolist (cl clauses)
      (push `(if ,(gen-pred cl) (list ,@cl)) res))
    (reduce (lambda (res x) (append x (list res)))
            res
            :initial-value () )))

;; 妙な条件式を生成
(defun gen-pred (clause)
  (let ((pred (mapcar (lambda (x y) (list x y)) clause (cdr clause))))
    (reduce (lambda (x res) `(if (&lt;= ,@x) ,res))
            pred
            :initial-value &#39;T
            :from-end &#39;T )))

;; ファイルへ書き出す関数(生成のベンチマークはこれの時間を測定)
(defun save-func-to-file (func-gen-expr &amp;optional file)
  (let ((file 
         (or file (merge-pathnames 
                   (format nil &quot;doukaku-63-SORT-~2,&#39;0D.lisp&quot; (cadr func-gen-expr))
                   (user-homedir-pathname)))))
    (with-open-file (out file 
                         :direction :output
                         :if-exists :overwrite
                         :if-does-not-exist :create)
      (and (print (macroexpand-1 func-gen-expr) out)
           t))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3163/addtag/" class="addtag" id="addtag_3163">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3163/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3163/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3163"
  >-</span><span
  class="button yellow"
  id="rating_z_3163"
  >0</span><span 
  class="button green"
  id="rating_p_3163"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3163/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment3165">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3165/">#3165</a>(<script language="JavaScript">print_time(new Date("2007/09/25 08:10 GMT"));</script><noscript>2007/09/25 08:10 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>連休中、サイト落ちてました？

生成時間
ifsort02.py  0.007164Sec       117Byte
ifsort03.py  0.000267Sec       281Byte
ifsort04.py  0.000533Sec      1103Byte
ifsort05.py  0.002043Sec      6077Byte
ifsort06.py  0.026461Sec     41123Byte
ifsort07.py  0.113250Sec    322649Byte
ifsort08.py  0.583306Sec   2862815Byte
ifsort09.py  5.099527Sec  28304741Byte
ifsort10.py 51.678381Sec 308448108Byte

実行時間は n &lt;= 8 までは瞬時、 n &gt;= 9 は実行不能でした。

ちなみに標準出力にprintすると n = 10 ではものすごく時間がかかりました。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">sys</span>

<span class="k">def</span> <span class="nf">gensort</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="p">):</span>
  <span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">l</span><span class="p">,</span> <span class="n">i</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">l</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">:</span>
      <span class="k">print</span> <span class="o">&gt;&gt;</span> <span class="n">out</span><span class="p">,</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s">print [</span><span class="si">%s</span><span class="s">]&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="s">&#39;  &#39;</span> <span class="o">*</span> <span class="n">i</span><span class="p">,</span> <span class="s">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">l</span><span class="p">))</span>
      <span class="k">return</span>
    <span class="n">l</span> <span class="o">=</span> <span class="n">l</span><span class="p">[:]</span>
    <span class="k">print</span> <span class="o">&gt;&gt;</span> <span class="n">out</span><span class="p">,</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s">if </span><span class="si">%s</span><span class="s"> &lt; </span><span class="si">%s</span><span class="s">:&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="s">&#39;  &#39;</span> <span class="o">*</span> <span class="n">i</span><span class="p">,</span> <span class="n">l</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">l</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span>
    <span class="n">f</span><span class="p">(</span><span class="n">l</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
      <span class="n">l</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">l</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">l</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span> <span class="n">l</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
      <span class="k">print</span> <span class="o">&gt;&gt;</span> <span class="n">out</span><span class="p">,</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s">elif </span><span class="si">%s</span><span class="s"> &lt; </span><span class="si">%s</span><span class="s">:&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="s">&#39;  &#39;</span> <span class="o">*</span> <span class="n">i</span><span class="p">,</span> <span class="n">l</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="n">l</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
      <span class="n">f</span><span class="p">(</span><span class="n">l</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">l</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">l</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">l</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">print</span> <span class="o">&gt;&gt;</span> <span class="n">out</span><span class="p">,</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s">else:&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="s">&#39;  &#39;</span> <span class="o">*</span> <span class="n">i</span><span class="p">)</span>
    <span class="n">f</span><span class="p">(</span><span class="n">l</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>

  <span class="k">print</span> <span class="o">&gt;&gt;</span> <span class="n">out</span><span class="p">,</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s"> = </span><span class="si">%s</span><span class="s">[:</span><span class="si">%d</span><span class="s">]&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="s">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">abc</span><span class="p">(</span><span class="n">n</span><span class="p">)),</span> <span class="s">&quot;[int(c) for c in raw_input().split(&#39; &#39;) if c]&quot;</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
  <span class="k">print</span> <span class="o">&gt;&gt;</span> <span class="n">out</span><span class="p">,</span> <span class="s">&#39;print [</span><span class="si">%s</span><span class="s">],&#39;</span> <span class="o">%</span> <span class="s">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">abc</span><span class="p">(</span><span class="n">n</span><span class="p">))</span>
  <span class="n">f</span><span class="p">(</span><span class="n">abc</span><span class="p">(</span><span class="n">n</span><span class="p">),</span> <span class="mi">0</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">abc</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
  <span class="k">return</span> <span class="p">[</span><span class="nb">chr</span><span class="p">(</span><span class="nb">ord</span><span class="p">(</span><span class="s">&#39;a&#39;</span><span class="p">)</span><span class="o">+</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">)]</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
  <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">:</span>
    <span class="n">n</span> <span class="o">=</span> <span class="mi">3</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
  <span class="n">gensort</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">test</span><span class="p">():</span>
  <span class="k">from</span> <span class="nn">time</span> <span class="k">import</span> <span class="n">time</span>

  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">11</span><span class="p">):</span>
    <span class="n">fn</span> <span class="o">=</span> <span class="s">&#39;ifsort</span><span class="si">%02d</span><span class="s">.py&#39;</span> <span class="o">%</span> <span class="n">i</span>
    <span class="n">fp</span> <span class="o">=</span> <span class="nb">file</span><span class="p">(</span><span class="n">fn</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>
    <span class="n">gensort</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">fp</span><span class="p">)</span>
    <span class="n">size</span> <span class="o">=</span> <span class="n">fp</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
    <span class="k">print</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s">Sec </span><span class="si">%9d</span><span class="s">Byte&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">fn</span><span class="p">,</span> <span class="p">(</span><span class="s">&#39;</span><span class="si">%.6f</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t</span><span class="p">))</span><span class="o">.</span><span class="n">rjust</span><span class="p">(</span><span class="mi">9</span><span class="p">),</span> <span class="n">size</span><span class="p">)</span>
    <span class="n">fp</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
<span class="c">#  main()</span>
  <span class="n">test</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3165/addtag/" class="addtag" id="addtag_3165">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3165/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3165/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3165"
  >-</span><span
  class="button yellow"
  id="rating_z_3165"
  >0</span><span 
  class="button green"
  id="rating_p_3165"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3165/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3166">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3166/">#3166</a>(<script language="JavaScript">print_time(new Date("2007/09/25 10:38 GMT"));</script><noscript>2007/09/25 10:38 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Squeak&nbsp;Smalltalk&nbsp;で。これまでのものと違い、do&nbsp;it&nbsp;(alt/cmd&nbsp;+&nbsp;D)&nbsp;ではなく&nbsp;file&nbsp;it&nbsp;in&nbsp;(alt/cmd&nbsp;+&nbsp;shift&nbsp;+&nbsp;G)&nbsp;して使うコードになっています。<br/><br/>条件文の生成は、考えているうちに頭が痛くなってきたので自力解決は断念して&nbsp;shiro&nbsp;さんのを参考にさせていただきました。どうかお許しを。あと、残念ながら&nbsp;Squeak&nbsp;Smalltalk&nbsp;のバイトコードにおける仕様上の制約（1&nbsp;KB&nbsp;以上のジャンプができない…）から&nbsp;n&nbsp;=&nbsp;5&nbsp;以上では生成コードは、コンパイラにはじかれてしまうようです。<br/><br/>仕方がないのでコードの生成のみの測定（単位はミリ秒）の結果を。<br/><br/>(1&nbsp;to:&nbsp;9)&nbsp;collect:&nbsp;[:n&nbsp;|&nbsp;n&nbsp;-&gt;&nbsp;[nil&nbsp;genSort:&nbsp;n]&nbsp;timeToRun]<br/>"=&gt;&nbsp;{1-&gt;11&nbsp;.&nbsp;2-&gt;8&nbsp;.&nbsp;3-&gt;12&nbsp;.&nbsp;4-&gt;29&nbsp;.&nbsp;5-&gt;151&nbsp;.&nbsp;6-&gt;720&nbsp;.&nbsp;7-&gt;4682&nbsp;.&nbsp;8-&gt;38510&nbsp;.&nbsp;9-&gt;362363}"<br/><br/>n&nbsp;=&nbsp;9&nbsp;で６分強、出力コードのファイルサイズは&nbsp;14.5&nbsp;MB&nbsp;でした（1&nbsp;GHz&nbsp;PowerPC&nbsp;-&nbsp;OS&nbsp;X）。n&nbsp;=&nbsp;10&nbsp;は怖くて試していません(^_^;)。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre>!SequenceableCollection methodsFor: &#39;doukaku63&#39;!
genCond: perm using: memo on: stream
	self ifEmpty: [
		stream nextPut: ${.
		perm do: [:var | stream nextPut: var] separatedBy: [stream nextPut: $.].
		stream nextPut: $}.
		^self].
	perm ifEmpty: [^self allButFirst genCond: (self first: 1), memo using: &#39;&#39; on: stream].
	stream nextPutAll: (&#39;{1}&lt;{2} ifTrue:[&#39; format: {perm last. self first}).
	self allButFirst genCond: perm, (self first: 1), memo using: &#39;&#39; on: stream.
	stream nextPutAll: &#39;]ifFalse:[&#39;.
	self genCond: perm allButLast using: (perm last: 1), memo on: stream.
	stream nextPutAll: &#39;]&#39;! !

!UndefinedObject methodsFor: &#39;doukaku63&#39;!
genSort: n
	| vars code |
	vars := ($a to: $z) first: n.
	code := FileStream forceNewFileNamed: &#39;sort.st&#39;.
	code nextPutAll: &#39;!!UndefinedObject methodsFor: &#39;&#39;doukaku63&#39;&#39;!!&#39;; cr.
	code nextPutAll: &#39;doukakuSort&#39;; cr.
	code nextPutAll: &#39;| in result &#39;.
	vars do: [:var | code nextPut: var; space].
	code nextPutAll: &#39;|&#39;; cr.
	code nextPutAll: &#39;in := FileStream fileNamed: &#39;&#39;in.txt&#39;&#39;.&#39;; cr.
	vars do: [:var | code nextPut: var; nextPutAll: &#39; := in nextLine asNumber.&#39;; cr].
	code nextPutAll: &#39;World findATranscript: nil.&#39;; cr.
	code nextPutAll: &#39;result := &#39;.
	vars genCond: &#39;&#39; using: &#39;&#39; on: code.
	code nextPutAll: &#39;.&#39;; cr.
	code nextPutAll: &#39;Transcript cr; show: result!! !!&#39;.
	code close! !

| file |
file := FileStream newFileNamed: &#39;io.txt&#39;.
(1 to: 10) asArray shuffled do: [:each | file nextPutAll: each printString; cr].
file close.

{   #generate -&gt; [nil genSort: 4] timeToRun.
	#compile -&gt; [(FileStream fileNamed: &#39;sort.st&#39;) fileIn] timeToRun.
	#perform -&gt; [nil perform: #doukakuSort] timeToRun}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3166/addtag/" class="addtag" id="addtag_3166">タグ</a>:
	
    
    <a href="/web/20080325151040/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3166/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3166/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3166"
  >-</span><span
  class="button yellow"
  id="rating_z_3166"
  >0</span><span 
  class="button green"
  id="rating_p_3166"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3166/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3168">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/415/" target="_top">yohei</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3168/">#3168</a>(<script language="JavaScript">print_time(new Date("2007/09/25 11:12 GMT"));</script><noscript>2007/09/25 11:12 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/prolog/">
	  Prolog
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>２分探索で．
--- 処理時間 ---
CPU：Xeon 2.40GHz (2 CPUs) メモリ：1GB OS:WinXP Pro
 N  生成   コンパイル 実行
 2  0.0     0.00      0.0
 3  0.0     0.00      0.0
 4  0.0     0.00      0.0
 5  0.015   0.02      0.0
 6  0.047   0.03      0.0
 7  0.375   0.22      0.0
 8  3.499   2.00      0.0
 9 33.563  21.02      0.0
10 ERROR: Out of local stack

--- gensort(3) の出力 ---
sort3(A, B, C) :-
  A &lt; B,
    (B &lt; C,
      write([A, B, C]);
      A &lt; C,
        write([A, C, B]);
        write([C, A, B])
    );
    A &lt; C,
      write([B, A, C]);
      B &lt; C,
        write([B, C, A]);
        write([C, B, A]).</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre>mid(X, M, L, R) :- 
	length(X, N), N1 is N // 2,
	nth0(N1, X, M), append(L, [M|R], X).

gen_begin(   [],    [], N) :- format(&#39;~n~t~*|&#39;, [N]).
gen_begin(   [], [_|_], N) :- format(&#39;~n~t~*|(&#39;, [N]).
gen_begin([_|_],     _, N) :- format(&#39;~n~t~*|(&#39;, [N]).

gen_end(   [],    [], N) :- format(&#39;;~n~t~*|&#39;, [N]).
gen_end(   [], [_|_], N) :- format(&#39;~n~t~*|);~n~t~*|&#39;, [N, N]).
gen_end([_|_],     _, N) :- format(&#39;~n~t~*|);~n~t~*|&#39;, [N, N]).

gen(L, [], R, [X], _) :-
	append(L, [X|R], S), format(&#39;write(~p)&#39;, [S]).
gen(L, [], R, [X,X1|Xs], N) :-
	append(L, [X|R], C), gen([], C, [], [X1|Xs], N).
gen(L, [C|Cs], R, [X|Xs], N) :- N1 is N + 2, 
	mid([C|Cs], M, CL, CR), format(&#39;~p &lt; ~p,&#39;, [M, X]),
	gen_begin(CR, Xs, N), append(L, CL, L1), append(L1, [M], L2),
	gen(L2, CR, R, [X|Xs], N1), gen_end(CR, Xs, N),
	append([M|CR], R, R1), gen(L, CL, R1, [X|Xs], N1).

gensort(N) :- N &gt; 1, tell(&#39;my_sort.pl&#39;),
	sub_atom(&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;, 0, N, _, A),
	atom_chars(A, [X|Xs]), concat_atom([X|Xs], &#39;, &#39;, T),
	format(&#39;sort~d(~p) :-~n  &#39;, [N, T]),
	findall(_, gen([], [X], [], Xs, 4), _),
	writeln(&#39;.&#39;), told.
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3168/addtag/" class="addtag" id="addtag_3168">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/prolog/">
		Prolog
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3168/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3168/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3168"
  >-</span><span
  class="button yellow"
  id="rating_z_3168"
  >0</span><span 
  class="button green"
  id="rating_p_3168"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080325151040/http://ja.doukaku.org/comment/3168/">
    1
    reply
  </a>

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3168/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3172">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/415/" target="_top">yohei</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3172/">#3172</a>(<script language="JavaScript">print_time(new Date("2007/09/26 03:55 GMT"));</script><noscript>2007/09/26 03:55 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/prolog/">
	  Prolog
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>冗長なコードを消して整理しました．
（特に，findall が無意味に入ってしまっていたので）
それと，タグに付け忘れましたが SWI-Prologです．</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre>mid(X, M, L, R) :- 
    length(X, N), N1 is N // 2,
    nth0(N1, X, M), append(L, [M|R], X).

gen_if([], [], N) :- !, format(&#39;~n~t~*|&#39;, [N]).
gen_if( _,  _, N) :- format(&#39;~n~t~*|(&#39;, [N]).

gen_else([], [], N) :- !, format(&#39;;~n~t~*|&#39;, [N]).
gen_else( _,  _, N) :- format(&#39;~n~t~*|);~n~t~*|&#39;, [N, N]).

gen(L, [], R, [X], _) :- !,
    append(L, [X|R], S), format(&#39;write(~p)&#39;, [S]).
gen(L, [], R, [X|Xs], N) :- !,
    append(L, [X|R], C), gen([], C, [], Xs, N).
gen(L, C, R, [X|Xs], N) :- N1 is N + 2, 
    mid(C, M, CL, CR), format(&#39;~p &lt; ~p,&#39;, [M, X]),
    gen_if(CR, Xs, N), flatten([L, CL, M], L1),
    gen(L1, CR, R, [X|Xs], N1), gen_else(CR, Xs, N),
    append([M|CR], R, R1), gen(L, CL, R1, [X|Xs], N1).

gensort(N) :- N &gt; 1, tell(&#39;my_sort.pl&#39;),
    sub_atom(&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;, 0, N, _, A),
    atom_chars(A, [X|Xs]), concat_atom([X|Xs], &#39;, &#39;, T),
    format(&#39;sort~d(~p) :-~n  &#39;, [N, T]),
    gen([], [X], [], Xs, 4), writeln(&#39;.&#39;), told.
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3172/addtag/" class="addtag" id="addtag_3172">タグ</a>:
	
    
    <a href="/web/20080325151040/http://ja.doukaku.org/tag/SWI-Prolog/">SWI-Prolog</a>
    
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/prolog/">
		Prolog
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3172/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3172/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3172"
  >-</span><span
  class="button yellow"
  id="rating_z_3172"
  >0</span><span 
  class="button green"
  id="rating_p_3172"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3168/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3172/root/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3172/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment3170">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3170/">#3170</a>(<script language="JavaScript">print_time(new Date("2007/09/25 15:25 GMT"));</script><noscript>2007/09/25 15:25 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>効率を上げる努力してないのですが
CLISP で n=9 まで試しました。

生成
n=5 0.016u 0.012s 0:00.02 100.0%    0+0k 0+0io 0pf+0w
n=6 0.048u 0.012s 0:00.05 100.0%    0+0k 0+0io 0pf+0w
n=7 0.284u 0.052s 0:00.38 86.8%     0+0k 0+0io 0pf+0w
n=8 2.068u 0.304s 0:02.46 95.9%     0+0k 0+0io 0pf+0w
n=9 18.369u 2.696s 0:21.71 96.9%    0+0k 0+0io 0pf+0w

コンパイル
n=5 0.080u 0.020s 0:00.10 100.0%    0+0k 0+0io 0pf+0w
n=6 2.148u 0.032s 0:02.18 99.5%     0+0k 0+0io 0pf+0w
n=7 133.388u 0.108s 2:13.63 99.8%   0+0k 0+0io 0pf+0w
n=8,9 は試してません

ロード (n=7 はバイトコード、他はソース)
n=7 0.017435 sec. 
n=8 1.690797 sec.
n=9 17.022305 sec.

実行は一瞬です。
ファイルサイズは n=9 で 23MB でした。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre>(defconstant *vars* &#39;(a b c d e f g h i j))

(defun gensort (n)
  (let ((vars (subseq *vars* 0 n)))
    `(defun ,(intern (format nil &quot;SORT-~D&quot; n)) ,vars
       (format t &quot;~{~A~^, ~}&quot; ,(gensort-1 () vars)))))

(defun gensort-1 (sorted unsorted)
  (if unsorted
      (let* ((x (car unsorted))
             (rest (cdr unsorted))
             (len (length sorted))
             (form (gensort-1 `(,@sorted ,x) rest)))
        (do ((i 1 (1+ i)))
            ((&gt; i len) form)
          (setf form
                `(if (&lt; ,x ,(nth (- len i) sorted))
                     ,(gensort-1 `(,@(butlast sorted i) ,x
                                   ,@(nthcdr (- len i) sorted))
                                 rest)
                   ,form))))
    `(list ,@sorted)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3170/addtag/" class="addtag" id="addtag_3170">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3170/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3170/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3170"
  >-</span><span
  class="button yellow"
  id="rating_z_3170"
  >0</span><span 
  class="button green"
  id="rating_p_3170"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080325151040/http://ja.doukaku.org/comment/3170/">
    1
    reply
  </a>

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3170/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3921">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3921/">#3921</a>(<script language="JavaScript">print_time(new Date("2007/11/13 02:37 GMT"));</script><noscript>2007/11/13 02:37 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  思い付きで出力サイズを小さくしてみました。<br/>n=9&nbsp;のときで&nbsp;10.4&nbsp;MB&nbsp;弱です。<br/>変更は以下の二点。<br/>*&nbsp;(if&nbsp;(&lt;&nbsp;...)&nbsp;...)&nbsp;と&nbsp;(list&nbsp;...)&nbsp;をそれぞれマクロにして字数を削った<br/>*&nbsp;出力の際に&nbsp;pretty&nbsp;print&nbsp;をしないようにして空白を減らした
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="highlight"><pre>(defconstant *vars* &#39;(a b c d e f g h i j))

(defun gensort (n)
  (let ((vars (subseq *vars* 0 n)))
    (write `(defun ,(intern (format nil &quot;SORT-~D&quot; n)) ,vars
              (macrolet (($ (small large then else)
                           `(if (&lt; ,small ,large) ,then ,else))
                         (% (&amp;rest vars) `(list ,@vars)))
                (format t &quot;~{~A~^, ~}&quot; ,(gensort-1 () vars))))
           :pretty nil)))

(defun gensort-1 (sorted unsorted)
  (if unsorted
      (let* ((x (car unsorted))
             (rest (cdr unsorted))
             (len (length sorted))
             (form (gensort-1 `(,@sorted ,x) rest)))
        (do ((i 1 (1+ i)))
            ((&gt; i len) form)
          (setf form
                `($ ,x ,(nth (- len i) sorted)
                    ,(gensort-1 `(,@(butlast sorted i) ,x
                                  ,@(nthcdr (- len i) sorted))
                                rest)
                    ,form))))
    `(% ,@sorted)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3921/addtag/" class="addtag" id="addtag_3921">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3921/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3921/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3921"
  >-</span><span
  class="button yellow"
  id="rating_z_3921"
  >0</span><span 
  class="button green"
  id="rating_p_3921"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3170/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3921/root/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080325151040/http://ja.doukaku.org/comment/3921/">
    1
    reply
  </a>

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3921/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3924">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3924/">#3924</a>(<script language="JavaScript">print_time(new Date("2007/11/13 04:57 GMT"));</script><noscript>2007/11/13 04:57 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>出力がかなり異様になりますがリードマクロならもっと短くなりますね。
これで n=9 が 4.5MB です。

分岐のところが n=4 のときだと
?BA?CB?DC!DCBA?DB!CDBA?DA!CBDA!CBAD?CA?DB!DBCA?DC!BDCA?DA!BCDA...
みたいになるんですが、? が (if (&lt; ...) ...) に、 ! が (list ...) に化けます。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre>(defconstant *vars* &#39;(a b c d e f g h i j))

(defun gensort (n)
  (let ((vars (subseq *vars* 0 n)))
    (write `(defun if-scanner (s c)
              (declare (ignore c))
              (let ((small (intern (string (read-char s))))
                    (large (intern (string (read-char s))))
                    (then (read s)) (else (read s)))
                `(if (&lt; ,small ,large) ,then ,else)))
           :pretty nil)
    (write `(defun list-scanner (s c)
              (declare (ignore c))
              `(list ,@(loop repeat ,n
                         collect (intern (string (read-char s))))))
           :pretty nil)
    (princ &quot;(set-macro-character #\\? #&#39;if-scanner)&quot;)
    (princ &quot;(set-macro-character #\\! #&#39;list-scanner)&quot;)
    (format t &quot;(defun SORT-~D ~A&quot; n vars)
    (princ &quot;(format t \&quot;~{~A~^, ~}\&quot;&quot;)
    (gensort-1 () vars)
    (princ &quot;))&quot;)))

(defun gensort-1 (sorted unsorted)
  (if unsorted
      (let* ((x (car unsorted))
             (rest (cdr unsorted))
             (len (length sorted)))
        (dotimes (i len)
          (format t &quot;?~A~A&quot; x (nth i sorted))
          (gensort-1 `(,@(butlast sorted (- len i)) ,x
                       ,@(nthcdr i sorted))
                     rest))
        (gensort-1 `(,@sorted ,x) rest))
    (format t &quot;!~{~A~}&quot; sorted)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3924/addtag/" class="addtag" id="addtag_3924">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3924/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3924/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3924"
  >-</span><span
  class="button yellow"
  id="rating_z_3924"
  >0</span><span 
  class="button green"
  id="rating_p_3924"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3921/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3924/root/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3924/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment3171">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3171/">#3171</a>(<script language="JavaScript">print_time(new Date("2007/09/26 02:11 GMT"));</script><noscript>2007/09/26 02:11 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>入れ子になったif式をツリーで表現してから
それをpretty printerで出力するようにして
モジュラリティを確保した。

pretty printer は Text.Pretty.HughesPJ ではなく
WadlerらのPrettier Printerライブラリを使ってみた
</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20080325151040/http://legacy.cs.uu.nl/daan/download/pprint/pprint.html">PPrint, a prettier printer</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Main</span> <span class="p">(</span><span class="nv">main</span><span class="p">)</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">Control</span><span class="o">.</span><span class="n">Applicative</span> <span class="p">((</span><span class="o">&lt;*&gt;</span><span class="p">))</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Tree</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Environment</span>
<span class="kr">import</span> <span class="n">Text</span><span class="o">.</span><span class="n">PrettyPrint</span><span class="o">.</span><span class="n">Leijen</span>

<span class="kr">type</span> <span class="n">AccType</span> <span class="o">=</span> <span class="p">(</span><span class="n">Char</span><span class="p">,[</span><span class="n">Char</span><span class="p">],[</span><span class="n">Char</span><span class="p">],[</span><span class="n">Char</span><span class="p">])</span>
<span class="kr">type</span> <span class="n">NodeType</span> <span class="o">=</span> <span class="n">Either</span> <span class="p">(</span><span class="n">Char</span><span class="p">,</span> <span class="n">Char</span><span class="p">)</span> <span class="p">[</span><span class="n">Char</span><span class="p">]</span>

<span class="nv">vars</span> <span class="o">::</span> <span class="p">[</span><span class="n">Char</span><span class="p">]</span>
<span class="nv">vars</span> <span class="o">=</span> <span class="p">[</span><span class="sc">&#39;a&#39;</span><span class="o">..</span><span class="p">]</span>

<span class="nv">gentree</span> <span class="o">::</span> <span class="p">[</span><span class="n">Char</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">Tree</span> <span class="n">NodeType</span>
<span class="nv">gentree</span> <span class="nv">ccs</span><span class="o">@</span><span class="p">(</span><span class="nv">c</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">unfoldTree</span> <span class="nv">phi</span> <span class="p">(</span><span class="nv">c</span><span class="p">,[],[],</span><span class="nv">cs</span><span class="p">)</span>

<span class="nv">phi</span> <span class="o">::</span> <span class="n">AccType</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">NodeType</span><span class="p">,</span> <span class="p">[</span><span class="n">AccType</span><span class="p">])</span>
<span class="nv">phi</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">xxs</span><span class="p">,</span><span class="nv">yys</span><span class="p">,[])</span>   <span class="o">=</span> <span class="p">(</span><span class="n">Right</span> <span class="p">(</span><span class="nv">reverse</span> <span class="nv">xxs</span><span class="o">++</span><span class="nv">w</span><span class="o">:</span><span class="nv">yys</span><span class="p">),</span> <span class="p">[])</span>
<span class="nv">phi</span> <span class="p">(</span><span class="nv">w</span><span class="p">,[]</span> <span class="p">,[]</span> <span class="p">,</span><span class="nv">z</span><span class="o">:</span><span class="nv">zs</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="n">Left</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">z</span><span class="p">),</span> <span class="p">[(</span><span class="nv">z</span><span class="p">,[</span><span class="nv">w</span><span class="p">],[],</span><span class="nv">zs</span><span class="p">),(</span><span class="nv">w</span><span class="p">,[</span><span class="nv">z</span><span class="p">],[],</span><span class="nv">zs</span><span class="p">)])</span>
<span class="nv">phi</span> <span class="p">(</span><span class="nv">w</span><span class="p">,[]</span> <span class="p">,</span><span class="nv">yys</span><span class="p">,</span><span class="nv">z</span><span class="o">:</span><span class="nv">zs</span><span class="p">)</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">reverse</span> <span class="nv">yys</span> <span class="kr">of</span>
 <span class="p">[]</span>   <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Left</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">z</span><span class="p">),</span> <span class="p">[(</span><span class="nv">z</span><span class="p">,[</span><span class="nv">w</span><span class="p">],[],</span><span class="nv">zs</span><span class="p">),(</span><span class="nv">w</span><span class="p">,[</span><span class="nv">z</span><span class="p">],[],</span><span class="nv">zs</span><span class="p">)])</span>
 <span class="nv">y</span><span class="o">:</span><span class="nv">ys</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Left</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">z</span><span class="p">),</span> <span class="p">[(</span><span class="nv">y</span><span class="p">,</span><span class="nv">ys</span><span class="o">++</span><span class="p">[</span><span class="nv">z</span><span class="p">,</span><span class="nv">w</span><span class="p">],[],</span><span class="nv">zs</span><span class="p">),(</span><span class="nv">y</span><span class="p">,</span><span class="nv">ys</span><span class="o">++</span><span class="p">[</span><span class="nv">w</span><span class="p">,</span><span class="nv">z</span><span class="p">],[],</span><span class="nv">zs</span><span class="p">)])</span>
<span class="nv">phi</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">xxs</span><span class="o">@</span><span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">),</span><span class="nv">yys</span><span class="p">,</span><span class="nv">zzs</span><span class="o">@</span><span class="p">(</span><span class="nv">z</span><span class="o">:</span><span class="nv">zs</span><span class="p">))</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">reverse</span> <span class="nv">yys</span> <span class="kr">of</span>
 <span class="p">[]</span>   <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Left</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">z</span><span class="p">),</span> <span class="p">[(</span><span class="nv">z</span><span class="p">,</span><span class="nv">w</span><span class="o">:</span><span class="nv">xxs</span><span class="p">,[],</span><span class="nv">zs</span><span class="p">),(</span><span class="nv">x</span><span class="p">,</span><span class="nv">xs</span><span class="p">,[</span><span class="nv">w</span><span class="p">],</span><span class="nv">zzs</span><span class="p">)])</span>
 <span class="nv">y</span><span class="o">:</span><span class="nv">ys</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Left</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">z</span><span class="p">),</span> <span class="p">[(</span><span class="nv">y</span><span class="p">,</span><span class="nv">ys</span><span class="o">++</span><span class="nv">z</span><span class="o">:</span><span class="nv">w</span><span class="o">:</span><span class="nv">xxs</span><span class="p">,[],</span><span class="nv">zs</span><span class="p">),(</span><span class="nv">x</span><span class="p">,</span><span class="nv">xs</span><span class="p">,</span><span class="nv">w</span><span class="o">:</span><span class="nv">yys</span><span class="p">,</span><span class="nv">zzs</span><span class="p">)])</span>

<span class="p">(</span><span class="o">$$</span><span class="p">)</span> <span class="o">::</span> <span class="n">Doc</span> <span class="o">-&gt;</span> <span class="n">Doc</span> <span class="o">-&gt;</span> <span class="n">Doc</span>
<span class="nv">x</span> <span class="o">$$</span> <span class="nv">y</span> <span class="o">=</span> <span class="nv">align</span> <span class="p">(</span><span class="nv">x</span> <span class="o">&lt;$&gt;</span> <span class="nv">y</span><span class="p">)</span>

<span class="nv">pprHs</span> <span class="o">::</span> <span class="p">[</span><span class="n">Char</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">Doc</span> <span class="o">-&gt;</span> <span class="n">Doc</span>
<span class="nv">pprHs</span> <span class="nv">vs</span> <span class="nv">ifpart</span>
 <span class="o">=</span>   <span class="nv">text</span> <span class="s">&quot;module Main (main) where&quot;</span>
 <span class="o">&lt;$&gt;</span> <span class="nv">text</span> <span class="s">&quot;import System.Environment&quot;</span>
 <span class="o">&lt;$&gt;</span> <span class="nv">text</span> <span class="s">&quot;main :: IO ()&quot;</span>
 <span class="o">&lt;$&gt;</span> <span class="nv">text</span> <span class="s">&quot;main = do&quot;</span>
     <span class="o">&lt;+&gt;</span> <span class="p">((</span><span class="nv">varlist</span> <span class="o">&lt;+&gt;</span> <span class="nv">text</span> <span class="s">&quot;&lt;- return . map read =&lt;&lt; getArgs&quot;</span><span class="p">)</span> <span class="o">$$</span> <span class="nv">ifpart</span><span class="p">)</span>
  <span class="kr">where</span> <span class="nv">varlist</span> <span class="o">=</span> <span class="nv">text</span> <span class="o">$</span> <span class="s">&quot;[&quot;</span> <span class="o">++</span> <span class="nv">intersperse</span> <span class="sc">&#39;,&#39;</span> <span class="nv">vs</span> <span class="o">++</span> <span class="s">&quot;] :: [Int]&quot;</span>

<span class="nv">pprHsIf</span> <span class="p">(</span><span class="n">Node</span> <span class="p">(</span><span class="n">Right</span> <span class="nv">vs</span><span class="p">)</span> <span class="p">[])</span>
 <span class="o">=</span> <span class="nv">text</span> <span class="s">&quot;print&quot;</span> <span class="o">&lt;+&gt;</span> <span class="nv">brackets</span> <span class="p">(</span><span class="nv">text</span> <span class="nv">vs&#39;</span><span class="p">)</span>
   <span class="kr">where</span> <span class="nv">vs&#39;</span> <span class="o">=</span> <span class="nv">intersperse</span> <span class="sc">&#39;,&#39;</span> <span class="nv">vs</span>
<span class="nv">pprHsIf</span> <span class="p">(</span><span class="n">Node</span> <span class="p">(</span><span class="n">Left</span> <span class="p">(</span><span class="nv">x</span><span class="p">,</span><span class="nv">y</span><span class="p">))</span> <span class="p">[</span><span class="nv">t</span><span class="p">,</span><span class="nv">e</span><span class="p">])</span>
 <span class="o">=</span>   <span class="nv">nest</span> <span class="mi">3</span> <span class="p">(</span>    <span class="nv">text</span> <span class="s">&quot;if&quot;</span> <span class="o">&lt;+&gt;</span> <span class="nv">char</span> <span class="nv">x</span> <span class="o">&lt;+&gt;</span> <span class="nv">char</span> <span class="sc">&#39;&lt;&#39;</span> <span class="o">&lt;+&gt;</span> <span class="nv">char</span> <span class="nv">y</span>
             <span class="o">&lt;$&gt;</span> <span class="p">(</span><span class="nv">nest</span> <span class="mi">3</span> <span class="p">((</span><span class="nv">text</span> <span class="s">&quot;then&quot;</span> <span class="o">&lt;$&gt;</span> <span class="nv">pprHsIf</span> <span class="nv">t</span><span class="p">))</span>
                 <span class="o">&lt;$&gt;</span>
                 <span class="p">(</span><span class="nv">nest</span> <span class="mi">3</span> <span class="p">(</span><span class="nv">text</span> <span class="s">&quot;else&quot;</span> <span class="o">&lt;$&gt;</span> <span class="nv">pprHsIf</span> <span class="nv">e</span><span class="p">))))</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">vs</span> <span class="o">&lt;-</span> <span class="nv">return</span> <span class="o">.</span> <span class="nv">flip</span> <span class="nv">take</span> <span class="nv">vars</span> <span class="o">.</span> <span class="nv">read</span> <span class="o">.</span> <span class="nv">head</span> <span class="o">=&lt;&lt;</span> <span class="nv">getArgs</span> 
	  <span class="p">;</span> <span class="nv">putDoc</span> <span class="o">$</span> <span class="nv">pprHs</span> <span class="o">&lt;*&gt;</span> <span class="nv">pprHsIf</span> <span class="o">.</span> <span class="nv">gentree</span> <span class="o">$</span> <span class="nv">vs</span>
	  <span class="p">;</span> <span class="nv">putStrLn</span> <span class="s">&quot;&quot;</span>
	  <span class="p">}</span>

<span class="cm">{- </span>
<span class="cm">./gensort  2 &gt; sort2.hs    0.00s user  0.00s system 110% cpu    0.004 total</span>
<span class="cm">./gensort  3 &gt; sort3.hs    0.00s user  0.00s system   0% cpu    0.003 total</span>
<span class="cm">./gensort  4 &gt; sort4.hs    0.00s user  0.00s system  86% cpu    0.005 total</span>
<span class="cm">./gensort  5 &gt; sort5.hs    0.01s user  0.00s system  91% cpu    0.013 total</span>
<span class="cm">./gensort  6 &gt; sort6.hs    0.02s user  0.00s system  65% cpu    0.042 total</span>
<span class="cm">./gensort  7 &gt; sort7.hs    0.16s user  0.00s system  89% cpu    0.179 total</span>
<span class="cm">./gensort  8 &gt; sort8.hs    1.35s user  0.08s system  97% cpu    1.462 total</span>
<span class="cm">./gensort  9 &gt; sort9.hs   13.25s user  0.88s system  98% cpu   14.353 total</span>
<span class="cm">./gensort 10 &gt; sort10.hs 145.34s user 11.68s system  98% cpu 2:40.15  total</span>

<span class="cm">-rw-r--r-- 1 nobsun nobsun        234 2007-09-26 08:43 sort2.hs</span>
<span class="cm">-rw-r--r-- 1 nobsun nobsun        748 2007-09-26 08:43 sort3.hs</span>
<span class="cm">-rw-r--r-- 1 nobsun nobsun       4020 2007-09-26 08:43 sort4.hs</span>
<span class="cm">-rw-r--r-- 1 nobsun nobsun      27974 2007-09-26 08:43 sort5.hs</span>
<span class="cm">-rw-r--r-- 1 nobsun nobsun     226336 2007-09-26 08:43 sort6.hs</span>
<span class="cm">-rw-r--r-- 1 nobsun nobsun    2060322 2007-09-26 08:43 sort7.hs</span>
<span class="cm">-rw-r--r-- 1 nobsun nobsun   20796020 2007-09-26 08:43 sort8.hs</span>
<span class="cm">-rw-r--r-- 1 nobsun nobsun  230466934 2007-09-26 08:43 sort9.hs</span>
<span class="cm">-rw-r--r-- 1 nobsun nobsun 2782218360 2007-09-26 08:46 sort10.hs</span>

<span class="cm">*Main&gt; :load sort2.hs</span>
<span class="cm">[1 of 1] Compiling Main             ( sort2.hs, interpreted )</span>
<span class="cm">Ok, modules loaded: Main.</span>
<span class="cm">(0.02 secs, 1076068 bytes)</span>
<span class="cm">*Main&gt; :main 2 1</span>
<span class="cm">[1,2]</span>
<span class="cm">(0.00 secs, 0 bytes)</span>
<span class="cm">*Main&gt; :load sort3.hs</span>
<span class="cm">[1 of 1] Compiling Main             ( sort3.hs, interpreted )</span>
<span class="cm">Ok, modules loaded: Main.</span>
<span class="cm">(0.02 secs, 2126920 bytes)</span>
<span class="cm">*Main&gt; :main 3 2 1</span>
<span class="cm">[1,2,3]</span>
<span class="cm">(0.00 secs, 0 bytes)</span>
<span class="cm">*Main&gt; :load sort4.hs</span>
<span class="cm">[1 of 1] Compiling Main             ( sort4.hs, interpreted )</span>
<span class="cm">Ok, modules loaded: Main.</span>
<span class="cm">(0.05 secs, 7363040 bytes)</span>
<span class="cm">*Main&gt; :main 4 3 2 1</span>
<span class="cm">[1,2,3,4]</span>
<span class="cm">(0.00 secs, 526936 bytes)</span>
<span class="cm">*Main&gt; :load sort5.hs</span>
<span class="cm">[1 of 1] Compiling Main             ( sort5.hs, interpreted )</span>
<span class="cm">Ok, modules loaded: Main.</span>
<span class="cm">(0.18 secs, 40947564 bytes)</span>
<span class="cm">*Main&gt; :main 5 4 3 2 1</span>
<span class="cm">[1,2,3,4,5]</span>
<span class="cm">(0.01 secs, 1595940 bytes)</span>
<span class="cm">*Main&gt; :load sort6.hs</span>
<span class="cm">[1 of 1] Compiling Main             ( sort6.hs, interpreted )</span>
<span class="cm">Ok, modules loaded: Main.</span>
<span class="cm">(1.10 secs, 297051132 bytes)</span>
<span class="cm">*Main&gt; :main 6 5 4 3 2 1</span>
<span class="cm">[1,2,3,4,5,6]</span>
<span class="cm">(0.05 secs, 8558272 bytes)</span>
<span class="cm">*Main&gt; :load sort7.hs</span>
<span class="cm">[1 of 1] Compiling Main             ( sort7.hs, interpreted )</span>
<span class="cm">Ok, modules loaded: Main.</span>
<span class="cm">(9.02 secs, 2552779536 bytes)</span>
<span class="cm">*Main&gt; :main 7 6 5 4 3 2 1</span>
<span class="cm">[1,2,3,4,5,6,7]</span>
<span class="cm">(0.16 secs, 66078212 bytes)</span>
<span class="cm">*Main&gt; :load sort8.hs</span>
<span class="cm">[1 of 1] Compiling Main             ( sort8.hs, interpreted )</span>
<span class="cm">Ok, modules loaded: Main.</span>
<span class="cm">(85.68 secs, 24937876628 bytes)</span>
<span class="cm">*Main&gt; :main 8 7 6 5 4 3 2 1</span>
<span class="cm">[1,2,3,4,5,6,7,8]</span>
<span class="cm">(1.30 secs, 566054384 bytes)</span>
<span class="cm">sort9.hs と sort10.hs はメモリが足りずロードできなかった．</span>
<span class="cm">-}</span>			  
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3171/addtag/" class="addtag" id="addtag_3171">タグ</a>:
	
    
    <a href="/web/20080325151040/http://ja.doukaku.org/tag/Text.PrettyPrint.HughesPJ/">Text.PrettyPrint.HughesPJ</a>
    
    <a href="/web/20080325151040/http://ja.doukaku.org/tag/Text.PrettyPrint.Leijen/">Text.PrettyPrint.Leijen</a>
    
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3171/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3171/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3171"
  >-</span><span
  class="button yellow"
  id="rating_z_3171"
  >0</span><span 
  class="button green"
  id="rating_p_3171"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080325151040/http://ja.doukaku.org/comment/3171/">
    1
    reply
  </a>

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3171/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3182">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/424/" target="_top">satooM</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3182/">#3182</a>(<script language="JavaScript">print_time(new Date("2007/09/27 10:41 GMT"));</script><noscript>2007/09/27 10:41 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>いつも勉強させていただいています。
unfoldTreeは初めて知りましたが、目から鱗が落ちる思いでした。
やっぱりHaskellって面白いですね。

蛇足ながら、phiの部分をちょっと整理してみました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre><span class="nv">phi</span>   <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">xs</span><span class="p">,</span><span class="nv">ys</span><span class="p">,[])</span>   <span class="o">=</span> <span class="p">(</span><span class="n">Right</span> <span class="p">(</span><span class="nv">reverse</span> <span class="nv">xs</span><span class="o">++</span><span class="nv">w</span><span class="o">:</span><span class="nv">ys</span><span class="p">),</span> <span class="p">[])</span>
<span class="nv">phi</span> <span class="nv">a</span><span class="o">@</span><span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">xs</span><span class="p">,</span><span class="nv">ys</span><span class="p">,</span><span class="nv">z</span><span class="o">:</span><span class="nv">zs</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="n">Left</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">z</span><span class="p">),</span> <span class="p">[</span><span class="nv">next</span> <span class="nv">a</span><span class="p">,</span> <span class="nv">back</span> <span class="nv">a</span><span class="p">])</span>
  <span class="kr">where</span>
    <span class="nv">next</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">xs</span><span class="p">,</span><span class="nv">ys</span><span class="p">,</span><span class="nv">z</span><span class="o">:</span><span class="nv">zs</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">w&#39;</span><span class="p">,</span><span class="nv">xs&#39;</span><span class="p">,[],</span><span class="nv">zs</span><span class="p">)</span> <span class="kr">where</span> <span class="p">(</span><span class="nv">w&#39;</span><span class="o">:</span><span class="nv">xs&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="nv">reverse</span> <span class="nv">ys</span> <span class="o">++</span> <span class="nv">z</span><span class="o">:</span><span class="nv">w</span><span class="o">:</span><span class="nv">xs</span>
    <span class="nv">back</span> <span class="p">(</span><span class="nv">w</span><span class="p">,[],</span><span class="nv">ys</span><span class="p">,</span><span class="nv">z</span><span class="o">:</span><span class="nv">zs</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">w&#39;</span><span class="p">,</span><span class="nv">xs&#39;</span><span class="p">,[],</span><span class="nv">zs</span><span class="p">)</span> <span class="kr">where</span> <span class="p">(</span><span class="nv">w&#39;</span><span class="o">:</span><span class="nv">xs&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="nv">reverse</span> <span class="nv">ys</span> <span class="o">++</span> <span class="p">[</span><span class="nv">w</span><span class="p">,</span><span class="nv">z</span><span class="p">]</span>
    <span class="nv">back</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">,</span><span class="nv">ys</span><span class="p">,</span><span class="nv">zs</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">x</span><span class="p">,</span><span class="nv">xs</span><span class="p">,(</span><span class="nv">w</span><span class="o">:</span><span class="nv">ys</span><span class="p">),</span><span class="nv">zs</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3182/addtag/" class="addtag" id="addtag_3182">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3182/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3182/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3182"
  >-</span><span
  class="button yellow"
  id="rating_z_3182"
  >0</span><span 
  class="button green"
  id="rating_p_3182"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3171/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3182/root/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3182/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment3174">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/84/" target="_top">shuyo</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3174/">#3174</a>(<script language="JavaScript">print_time(new Date("2007/09/26 05:14 GMT"));</script><noscript>2007/09/26 05:14 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>コード書いたところで達成感を得てしまって、まじめに計測してません……
n=8までは楽勝、n=9 は生成に２０秒くらい？　実行に５秒くらい。n=10 はディスク使い切ったりしたらやだなと思って実行してません……</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">compare</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">idx</span><span class="p">,</span> <span class="n">vlist</span><span class="p">,</span> <span class="n">indent</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">vlist</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">0</span>
    <span class="no">OUTPUT</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">indent</span><span class="si">}</span><span class="s2">p [</span><span class="si">#{</span><span class="n">x</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">]&quot;</span>
    <span class="k">return</span>
  <span class="k">end</span>
  
  <span class="n">y</span> <span class="o">=</span> <span class="n">vlist</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
  <span class="no">OUTPUT</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">indent</span><span class="si">}</span><span class="s2">if </span><span class="si">#{</span><span class="n">x</span><span class="o">[</span><span class="n">idx</span><span class="o">]</span><span class="si">}</span><span class="s2">&lt;</span><span class="si">#{</span><span class="n">y</span><span class="si">}</span><span class="s2">&quot;</span>
    <span class="k">if</span> <span class="n">idx</span><span class="o">+</span><span class="mi">1</span> <span class="o">&lt;</span> <span class="n">x</span><span class="o">.</span><span class="n">length</span>
      <span class="n">compare</span> <span class="n">x</span><span class="p">,</span> <span class="n">idx</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">vlist</span><span class="p">,</span> <span class="n">indent</span><span class="o">+</span><span class="s2">&quot;  &quot;</span>
    <span class="k">else</span>
      <span class="n">compare</span> <span class="n">x</span><span class="o">.</span><span class="n">dup</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">y</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="n">vlist</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="n">indent</span><span class="o">+</span><span class="s2">&quot;  &quot;</span>
    <span class="k">end</span>
  <span class="no">OUTPUT</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">indent</span><span class="si">}</span><span class="s2">else&quot;</span>
    <span class="n">compare</span> <span class="n">x</span><span class="o">.</span><span class="n">dup</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">idx</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="n">vlist</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="n">indent</span><span class="o">+</span><span class="s2">&quot;  &quot;</span>
  <span class="no">OUTPUT</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">indent</span><span class="si">}</span><span class="s2">end&quot;</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">gensort</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
  <span class="n">vlist</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.n</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="p">(</span><span class="mi">96</span><span class="o">+</span><span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">chr</span><span class="p">}</span>
  <span class="no">OUTPUT</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">vlist</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2"> = $stdin.read.split(/</span><span class="se">\s</span><span class="s2">+/).map{|x|x.to_i}&quot;</span>
  <span class="n">x</span> <span class="o">=</span> <span class="n">vlist</span><span class="o">.</span><span class="n">shift</span>
  <span class="n">compare</span> <span class="o">[</span><span class="n">x</span><span class="o">]</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">vlist</span><span class="o">.</span><span class="n">dup</span><span class="p">,</span> <span class="s2">&quot;&quot;</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3174/addtag/" class="addtag" id="addtag_3174">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3174/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3174/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3174"
  >-</span><span
  class="button yellow"
  id="rating_z_3174"
  >0</span><span 
  class="button green"
  id="rating_p_3174"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3174/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3178">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3178/">#3178</a>(<script language="JavaScript">print_time(new Date("2007/09/26 11:34 GMT"));</script><noscript>2007/09/26 11:34 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #4fff4f;">11/11=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>当然のことながら、プログラムというのは、マシン語を出力して初めて「生成できる」と言うのです。

というわけでELFバイナリを直接生成してみました。Linux x86 (32bit)限定。
gensortは1バイトのバイナリ値nを標準入力から受け取り、標準出力にプログラムを吐き出します。
生成されたプログラムは、標準入力からn個のバイナリ整数値(各4バイト、little endian)を読み込み、
ソート結果を標準出力にバイナリで書き出します。

ビルドと生成例：
 $ cc -nostdlib -o gensort gensort.s
 $ echo -e '\005' | ./gensort &gt; sort5
 $ chmod +x sort5
 
生成されたコードを走らせる：
 $ od -t d4 input
 0000000           4           2           3           0
 0000020           1
 0000024
 $ ./sort5 &lt;input | od -t d4
 0000000           0           1           2           3
 0000020           4
 0000024

ベンチマーク：
         filesize   gen(real/user/sys)
 n=2          252     0.003/ 0.001/ 0.001
 n=3          428     0.003/ 0.000/ 0.003
 n=4         1268     0.003/ 0.001/ 0.002
 n=5         6164     0.006/ 0.001/ 0.005
 n=6        39764     0.018/ 0.002/ 0.015
 n=7       304724     0.097/ 0.008/ 0.089
 n=8      2663444     0.597/ 0.042/ 0.550
 n=9     26049044     5.542/ 0.421/ 5.083
 n=10   281516564    57.628/ 3.949/52.343

実行はn=10でも一瞬です。
n=11になるとファイルサイズが2Gを越え、プログラムも正しくなくなるので
(ジャンプオフセットがオーバフローする)やってません。
なお、「ソースはアセンブリなのに出力はバイナリじゃないか」というツッコミは無しの方向で…
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136</pre></td><td class="code"><div class="highlight"><pre>        .data
base:                                    /* %ebp */
N:      .long   3                        /* +0  */
cmpbuf: .byte   0x8b,0x56,0,0x8b,0x46,0,0x39,0xc2,0x0f,0x8d,0,0,0,0 /* +4 */
pad:    .byte   0
senti:  .byte   -4
permtab:.space  32,0                     /* +20 */
outsiz: .long   0                        /* +52 */
outbuf: .byte   0x8b,0x46,0,0x89,0x47,0  /* +56 */
        .space  180,0
hdr_buf:
        .long   0x464c457f, 0x00010101, 0, 0, 0x00030002, 0x00000001
        .long   0x08048074, 0x00000034, 0, 0, 0x00200034, 2, 0
        .long   1, 0, 0x08048000, 0x08048000, 0, 0, 5, 0x1000
        .long   1, 0x180, 0x7f049180, 0x7f049180, 0, 0x84, 6, 0x1000
        .long   0x0491c4b9, 0xba7f, 0xbb0000, 0xb8000000, 3, 0xb880cd
        .long   0xa3800000, 0x7f0491c0, 0x0491c4be, 0x9180bf7f, 0xa5bd7f04
        .long   0xeb080480, 0xbaf9891f, 0, 0x1bb, 0x4b800, 0x80cd0000
        .long   0xbb, 0x1b800, 0x80cd0000
        .text
.globl _start
_start: movl    $base, %ebp     /* %ebp = base */
getN:   movl    %ebp, %ecx
        movl    $1, %edx
        movl    $0, %ebx
        movl    $3, %eax
        int     $0x80
prep:   movl    (%ebp), %ebx    /* prepare out buf */
        movl    %ebx, %edx
        decl    %ebx
        movl    $4, %eax
        lea     56(%ebp), %esi
        lea     62(%ebp), %edi
        cld
prep1:  movl    $6, %ecx
        rep     movsb
        movb    %al, -1(%edi)
        addl    $4, %eax
        decl    %ebx
        jnz     prep1
        lea     2(%eax,%edx,2), %eax
        movl    %eax, 52(%ebp)   /* out chunk size */
        movw    $0xe5ff, %ax
        movw    %ax, (%edi)
header: movl    $hdr_buf, %ecx 
        movl    (%ebp), %eax
        shl     $2, %eax
        movl    %eax, 122(%ecx)  /* patch code+6 */
        movl    %eax, 168(%ecx)  /* patch code+52 */
        xor     %edx, %edx
        call    offset
        addl    $196, %eax
        movl    %eax, 68(%ecx)   /* patch filesiz */
        movl    %eax, 72(%ecx)   /* patch memsiz */
        movl    $196, %edx
        call    write
        movl    $1, %edx         /* start generating body */
        call    recur
        movl    $0, %ebx
        movl    $1, %eax
        int     $0x80            /* exit */
recur:                           /* %edx = depth */
        lea     20(%edx,%ebp), %edi
        movl    %edx, %eax
        shl     $2, %eax
        movb    %al, (%edi)
        movl    %edx, %ecx
        pushl   %edx
recur0: pushl   %ecx
        movl    4(%esp), %edx
        call    write_cmp
        movl    4(%esp), %edx
        movl    (%ebp), %eax
        decl    %eax
        cmpl    %eax, %edx
        jne     recur1
        call    write_out
        jmp     recur2
recur1: inc     %edx
        call    recur
recur2: popl    %ecx
        lea     20(%ecx,%ebp), %edi
        movw    -1(%edi), %ax
        movb    %ah,-1(%edi)
        movb    %al,(%edi)
        decl    %ecx
        jns     recur0
        lea     20(%ebp), %esi
        lea     19(%ebp), %edi
        movl    $16, %ecx
        rep     movsb
        popl    %edx
        ret
offset:                         /* %edx = depth. returns %eax. preserve %ecx */
        movl    (%ebp), %eax
        decl    %eax
        cmpl    %eax, %edx
        jne     offset1
        movl    52(%ebp), %eax
        ret
offset1:
        pushl   %edx
        incl    %edx
        call    offset
        popl    %edx
        addl    $14, %eax
        addl    $2, %edx
        mull    %edx
        ret
write_out:                      /* write out part. */
        movl    (%ebp), %ecx
        lea     58(%ebp), %edi
        lea     20(%ebp), %esi
        cld
write_out1:
        movsb
        addl    $5, %edi
        decl    %ecx
        jnz     write_out1
        lea     56(%ebp), %ecx
        movl    52(%ebp), %edx
        jmp     write
write_cmp:                      /* write cmp part.  %ecx: dd, %edx: depth */
        lea     20(%ecx,%ebp), %esi
        lea     4(%ebp), %ecx
        movw    -1(%esi), %ax
        movb    %ah, 5(%ecx)
        movb    %al, 2(%ecx)
        call    offset
        movl    %eax, 14(%ebp)  /* fill relative jump offset */
        movl    $14, %edx
write:                          /* write.  in: %ecx: ptr, %edx: size */
        movl    $1, %ebx
        movl    $4, %eax
        int     $0x80
        ret        
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3178/addtag/" class="addtag" id="addtag_3178">タグ</a>:
	
    
    <a href="/web/20080325151040/http://ja.doukaku.org/tag/x86assembly/">x86assembly</a>
    
    <a href="/web/20080325151040/http://ja.doukaku.org/tag/%E3%81%8A%E3%82%82%E3%81%97%E3%82%8D%E3%81%8A%E3%81%8B%E3%81%97%E3%81%84/">おもしろおかしい</a>
    
    <a href="/web/20080325151040/http://ja.doukaku.org/tag/%E3%81%99%E3%81%B0%E3%82%89%E3%81%97%E3%81%84%E6%B4%9E%E5%AF%9F/">すばらしい洞察</a>
    
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3178/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3178/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #4fff4f;"
  >11/11=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3178"
  >-</span><span
  class="button yellow"
  id="rating_z_3178"
  >0</span><span 
  class="button green"
  id="rating_p_3178"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3178/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment3188">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3188/">#3188</a>(<script language="JavaScript">print_time(new Date("2007/09/27 15:38 GMT"));</script><noscript>2007/09/27 15:38 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>shiro さんの WiLiKi に以下のような言及があった．

&gt; (追記) このお題についてはもうひとつネタを思いついていたのだが
&gt; アセンブラと戯れていたら時間がなくなってしまった。
&gt; アイディアをここに記しておくので興味のある人はチャレンジしてみては。
&gt; 基本的なアイディアは、コード生成をlazyにやるということ
&gt; (お題を満たすかどうかは微妙だが)
&gt; 
&gt; - gensortは入力数Nを受け取ると、ソートプログラム sorter0 を生成する。
&gt; - sorter0 は最初の入力を受け取ると、「残りのN-1個の入力を受け取り、それをソートしてN個の値を出力するプログラムsorter1」を生成してただちに実行する。
&gt; - sorter1も実は同様に、入力を一個受け取ると「残りのN-2個の入力を受け取り、それをソートしてN個の値を出力するプログラムsorter2」を生成してただちに実行する。
&gt; - 以下、入力が全て消費されるまで再帰。
&gt; 
&gt; プログラムをカリー化してる、と考えられなくもない。Partial Evaluationの
&gt; 限定的な応用とも言えるかな?
&gt; 
&gt; 各ステージのプログラムは次のステージの生成規則を持っていればいいはずだし、
&gt; 既に受け取った入力によって大幅に枝刈りが出来るから、
&gt; 元のお題のようにn!で大きくなるってことは無いと思うけど、
&gt; どんな姿になるのかは興味がある。
&gt; あと、「「「プログラムを生成するプログラム」を生成するプログラム」…」
&gt; というふうに入れ子になってゆくとS式が圧倒的に有利になるんじゃないかと
&gt; 思うんだが、実はそうでもないかもしれない。

そこでお題とはすこし離れるけれど，Haskellで書いてみた．用意するのは2つ

* Gensort.hs
* sorter0.hs

Gensort.hs はモジュールとして使う．sorter0.hs が最初に実行するプログラム．
あらかじめ，sorter0.hs をコンパイルしておく(実行ファイルは，sorter0)

たとえば，

$ ./sorter0 3 1 2

のように sorter0 に 3 引数 3 1 2 を与えると

1. sorter0 は sorter1.hs を生成し，コンパイルして ./sorter1 1 2 を呼ぶ
2. sorter1 は sorter2.hs を生成し，コンパイルして ./sorter2. 2 を呼ぶ
3. sorter2 は sorter3.hs を生成し，コンパイルして ./sorter3 を呼ぶ
4. sorter3 はソート結果 [1,2,3] を出力する．

となっています．

上の場合に生成される sorter2.hs は以下のとおり

import System.Environment
import Gensort

prev :: [Int]
prev@[a,b] = [1,3]
nextprog = "sorter"++show (length prev + 1)

main = do
{ args &lt;- getArgs
; case map read args of
   []   -&gt; print prev
   c:rs -&gt; if c &lt; a
    then
        prog nextprog [c,a,b] rs
    else
        if c &lt; b
            then
                prog nextprog [a,c,b] rs
            else
                prog nextprog [a,b,c] rs

}
</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20080325151040/http://practical-scheme.net/wiliki/wiliki.cgi?Shiro">Shiro</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68</pre></td><td class="code"><div class="highlight"><pre><span class="c1">-- sorter0.hs --------------------------------------------------------</span>

<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Environment</span>
<span class="kr">import</span> <span class="n">Gensort</span>

<span class="nv">prev</span> <span class="o">::</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span>
<span class="nv">prev</span><span class="o">@</span><span class="p">[]</span> <span class="o">=</span> <span class="p">[]</span>
<span class="nv">nextprog</span> <span class="o">=</span> <span class="s">&quot;sorter&quot;</span><span class="o">++</span><span class="nv">show</span> <span class="p">(</span><span class="nv">length</span> <span class="nv">prev</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>

<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">args</span> <span class="o">&lt;-</span> <span class="nv">getArgs</span>
          <span class="p">;</span> <span class="kr">case</span> <span class="nv">map</span> <span class="nv">read</span> <span class="nv">args</span> <span class="kr">of</span> 
              <span class="p">[]</span>   <span class="o">-&gt;</span> <span class="nv">print</span> <span class="nv">prev</span>
              <span class="nv">a</span><span class="o">:</span><span class="nv">rs</span> <span class="o">-&gt;</span> <span class="nv">prog</span> <span class="nv">nextprog</span> <span class="p">[</span><span class="nv">a</span><span class="p">]</span> <span class="nv">rs</span>
          <span class="p">}</span>

<span class="c1">-- Gensort.hs --------------------------------------------------------</span>

<span class="kr">module</span> <span class="n">Gensort</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Char</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Cmd</span>

<span class="nv">vars</span> <span class="o">::</span> <span class="p">[</span><span class="n">Char</span><span class="p">]</span>
<span class="nv">vars</span> <span class="o">=</span> <span class="p">[</span><span class="sc">&#39;a&#39;</span><span class="o">..</span><span class="p">]</span>

<span class="nv">prog</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">prog</span> <span class="nv">next</span> <span class="nv">vs</span> <span class="nv">rs</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">writeFile</span> <span class="p">(</span><span class="nv">next</span><span class="o">++</span><span class="s">&quot;.hs&quot;</span><span class="p">)</span> <span class="p">(</span><span class="nv">gensort</span> <span class="nv">vs</span> <span class="nv">rs</span><span class="p">)</span>
                     <span class="p">;</span> <span class="nv">system</span> <span class="p">(</span><span class="s">&quot;ghc -v0 --make &quot;</span><span class="o">++</span><span class="nv">next</span><span class="o">++</span><span class="s">&quot;.hs&quot;</span><span class="p">)</span>
                     <span class="p">;</span> <span class="nv">system</span> <span class="p">(</span><span class="s">&quot;./&quot;</span><span class="o">++</span><span class="nv">next</span><span class="o">++</span><span class="sc">&#39; &#39;</span><span class="o">:</span><span class="nv">unwords</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">show</span> <span class="nv">rs</span><span class="p">))</span>
                     <span class="p">;</span> <span class="nv">return</span> <span class="p">()</span>
                     <span class="p">}</span>

<span class="nv">indent</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">indent</span> <span class="mi">0</span> <span class="o">=</span> <span class="nv">id</span>
<span class="nv">indent</span> <span class="nv">n</span> <span class="o">=</span> <span class="p">(</span><span class="sc">&#39; &#39;</span><span class="o">:</span><span class="p">)</span> <span class="o">.</span> <span class="nv">indent</span> <span class="p">(</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

<span class="nv">gensort</span> <span class="o">::</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">gensort</span> <span class="nv">vs</span> <span class="nv">rs</span> <span class="o">=</span> <span class="nv">unlines</span>
  <span class="p">[</span><span class="s">&quot;import System.Environment&quot;</span>
  <span class="p">,</span><span class="s">&quot;import Gensort&quot;</span>
  <span class="p">,</span><span class="s">&quot;&quot;</span>
  <span class="p">,</span><span class="s">&quot;prev :: [Int]&quot;</span>
  <span class="p">,</span><span class="s">&quot;prev@[&quot;</span><span class="o">++</span><span class="nv">intersperse</span> <span class="sc">&#39;,&#39;</span> <span class="p">(</span><span class="nv">take</span> <span class="p">(</span><span class="nv">length</span> <span class="nv">vs</span><span class="p">)</span> <span class="nv">vars</span><span class="p">)</span><span class="o">++</span><span class="s">&quot;] = &quot;</span><span class="o">++</span><span class="nv">show</span> <span class="nv">vs</span>
  <span class="p">,</span><span class="s">&quot;nextprog = \&quot;</span><span class="nv">sorter</span><span class="o">\</span><span class="s">&quot;++show (length prev + 1)&quot;</span>
  <span class="p">,</span><span class="s">&quot;&quot;</span>
  <span class="p">,</span><span class="s">&quot;main = do&quot;</span>
  <span class="p">,</span><span class="s">&quot;{ args &lt;- getArgs&quot;</span>
  <span class="p">,</span><span class="s">&quot;; case map read args of&quot;</span>
  <span class="p">,</span><span class="s">&quot;   []   -&gt; print prev&quot;</span>
  <span class="p">,</span><span class="s">&quot;   &quot;</span><span class="o">++</span><span class="p">[</span><span class="nv">c</span><span class="p">]</span><span class="o">++</span><span class="s">&quot;:rs -&gt; &quot;</span><span class="o">++</span><span class="nv">unlines</span> <span class="p">(</span><span class="nv">genif</span> <span class="nv">c</span> <span class="p">[]</span> <span class="p">(</span><span class="nv">zipWith</span> <span class="nv">const</span> <span class="nv">vars</span> <span class="nv">vs</span><span class="p">))</span>
  <span class="p">,</span><span class="s">&quot;}&quot;</span>
  <span class="p">]</span>
  <span class="kr">where</span> <span class="nv">c</span> <span class="o">=</span> <span class="nv">vars</span> <span class="o">!!</span> <span class="nv">length</span> <span class="nv">vs</span>

<span class="nv">genif</span> <span class="o">::</span> <span class="n">Char</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Char</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Char</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
<span class="nv">genif</span> <span class="nv">c</span> <span class="nv">acc</span> <span class="p">[]</span>
 <span class="o">=</span> <span class="p">[</span><span class="s">&quot;prog nextprog [&quot;</span><span class="o">++</span><span class="nv">intersperse</span> <span class="sc">&#39;,&#39;</span> <span class="p">(</span><span class="nv">reverse</span> <span class="p">(</span><span class="nv">c</span><span class="o">:</span><span class="nv">acc</span><span class="p">))</span><span class="o">++</span><span class="s">&quot;] rs&quot;</span><span class="p">]</span>
<span class="nv">genif</span> <span class="nv">c</span> <span class="nv">acc</span> <span class="p">(</span><span class="nv">v</span><span class="o">:</span><span class="nv">vs</span><span class="p">)</span>
 <span class="o">=</span> <span class="p">[</span><span class="s">&quot;if &quot;</span><span class="o">++</span><span class="p">[</span><span class="nv">c</span><span class="p">]</span><span class="o">++</span><span class="s">&quot; &lt; &quot;</span><span class="o">++</span><span class="p">[</span><span class="nv">v</span><span class="p">]</span>
   <span class="p">,</span><span class="nv">indent</span> <span class="mi">4</span> <span class="s">&quot;then&quot;</span>
   <span class="p">,</span><span class="nv">indent</span> <span class="mi">8</span> <span class="s">&quot;prog nextprog [&quot;</span><span class="o">++</span><span class="nv">intersperse</span> <span class="sc">&#39;,&#39;</span> <span class="p">(</span><span class="nv">reverse</span> <span class="nv">acc</span><span class="o">++</span><span class="nv">c</span><span class="o">:</span><span class="nv">v</span><span class="o">:</span><span class="nv">vs</span><span class="p">)</span><span class="o">++</span><span class="s">&quot;] rs&quot;</span>
   <span class="p">,</span><span class="nv">indent</span> <span class="mi">4</span> <span class="s">&quot;else&quot;</span><span class="p">]</span>
   <span class="o">++</span>
   <span class="nv">map</span> <span class="p">(</span><span class="nv">indent</span> <span class="mi">8</span><span class="p">)</span> <span class="p">(</span><span class="nv">genif</span> <span class="nv">c</span> <span class="p">(</span><span class="nv">v</span><span class="o">:</span><span class="nv">acc</span><span class="p">)</span> <span class="nv">vs</span><span class="p">)</span>

  
 
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3188/addtag/" class="addtag" id="addtag_3188">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3188/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3188/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3188"
  >-</span><span
  class="button yellow"
  id="rating_z_3188"
  >0</span><span 
  class="button green"
  id="rating_p_3188"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080325151040/http://ja.doukaku.org/comment/3188/">
    1
    reply
  </a>

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3188/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3190">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3190/">#3190</a>(<script language="JavaScript">print_time(new Date("2007/09/27 16:13 GMT"));</script><noscript>2007/09/27 16:13 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>time による実行時間(引数10個の場合)

% time ./sorter0 9 8 7 6 5 4 3 2 1 0
[0,1,2,3,4,5,6,7,8,9]
./sorter0 9 8 7 6 5 4 3 2 1 0  6.81s user 0.70s system 99% cpu 7.564 total


生成されたソースコードサイズ

% ls -rSl sorter{1..10}.hs
-rw-r--r-- 1 nobsun nobsun  293 2007-09-28 01:08 sorter1.hs
-rw-r--r-- 1 nobsun nobsun  401 2007-09-28 01:08 sorter2.hs
-rw-r--r-- 1 nobsun nobsun  545 2007-09-28 01:08 sorter3.hs
-rw-r--r-- 1 nobsun nobsun  725 2007-09-28 01:08 sorter4.hs
-rw-r--r-- 1 nobsun nobsun  941 2007-09-28 01:08 sorter5.hs
-rw-r--r-- 1 nobsun nobsun 1193 2007-09-28 01:08 sorter6.hs
-rw-r--r-- 1 nobsun nobsun 1481 2007-09-28 01:08 sorter7.hs
-rw-r--r-- 1 nobsun nobsun 1805 2007-09-28 01:08 sorter8.hs
-rw-r--r-- 1 nobsun nobsun 2165 2007-09-28 01:08 sorter9.hs
-rw-r--r-- 1 nobsun nobsun 2561 2007-09-28 01:08 sorter10.hs
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3190/addtag/" class="addtag" id="addtag_3190">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3190"
  >-</span><span
  class="button yellow"
  id="rating_z_3190"
  >0</span><span 
  class="button green"
  id="rating_p_3190"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3188/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080325151040/http://ja.doukaku.org/comment/3190/root/"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3190/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment3219">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3219/">#3219</a>(<script language="JavaScript">print_time(new Date("2007/10/01 15:49 GMT"));</script><noscript>2007/10/01 15:49 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>最近いろいろ忙しくてねえ・・・

生成
--------------------
2
Elapsed Time:     0:00:01.093
Process Time:     0:00:00.062
--------------------
3
Elapsed Time:     0:00:00.437
Process Time:     0:00:00.062
--------------------
4
Elapsed Time:     0:00:00.437
Process Time:     0:00:00.062
--------------------
5
Elapsed Time:     0:00:00.484
Process Time:     0:00:00.078
--------------------
6
Elapsed Time:     0:00:00.640
Process Time:     0:00:00.078
--------------------
7
Elapsed Time:     0:00:01.046
Process Time:     0:00:00.062
--------------------
8
Elapsed Time:     0:00:04.437
Process Time:     0:00:00.078
--------------------
9
Elapsed Time:     0:00:35.578
Process Time:     0:00:00.062
--------------------
10
Elapsed Time:     0:05:50.531
Process Time:     0:00:00.046

コンパイル
--------------------
2
Elapsed Time:     0:00:04.406
Process Time:     0:00:00.093
--------------------
3
Elapsed Time:     0:00:03.156
Process Time:     0:00:00.078
--------------------
4
Elapsed Time:     0:00:03.500
Process Time:     0:00:00.062
--------------------
5
Elapsed Time:     0:00:05.093
Process Time:     0:00:00.062
--------------------
6以上はエラー
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="highlight"><pre>import java.io._

object gensort {
  type Vars = List[String]

  def genSort(xs:Vars, ys:Vars, ident:String):unit = ys.size match {
    case 0 =&gt; 
      printf(&quot;{0}println({1}.mkString(\&quot;,\&quot;))\n&quot;,ident, xs)
    case _ =&gt;
      val z::zs = ys
      xs.zipWithIndex.foreach{p =&gt; 
        if(p._2 != 0) printf(&quot;{0}&#39;}else&quot;, ident)
        printf(&quot;{0}if({1} &lt; {2})&#39;{\n&quot;, (if(p._2&gt;0){&quot; &quot;}else{ident}), z, p._1)
        val (xs1, xs2) = xs.splitAt(p._2)
        genSort(xs1:::List(z):::xs2, zs, ident+&quot;  &quot;)
      }
      print(ident+&quot;}else{\n&quot;)
      genSort(xs:::List(z), zs, ident+&quot;  &quot;)
      print(ident+&quot;}\n&quot;)
  }

  def main(args:Array[String]) = {
    val n = args(0).toInt
    var out = new PrintStream(&quot;sort&quot;+n+&quot;.scala&quot;)
    Console.withOut(out){
      print(&quot;&quot;&quot;object sort {
  def main(args:Array[String]) = {
    var &quot;&quot;&quot;)
      val vars = (1 to n).map(x=&gt;(96+x).asInstanceOf[char]+&quot;&quot;).toList
      print(vars.mkString(&quot;,&quot;) + &quot; = 0\n&quot;)
      print(vars.map{&quot;    &quot;+_+&quot; = readInt&quot;}.mkString(&quot;\n&quot;)+&quot;\n&quot;)
      val (head,rest) = vars.splitAt(1)
      genSort(head, rest, &quot;    &quot;)
      print(&quot;  }\n}\n&quot;)
    }
    out.close
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3219/addtag/" class="addtag" id="addtag_3219">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3219/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3219/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3219"
  >-</span><span
  class="button yellow"
  id="rating_z_3219"
  >0</span><span 
  class="button green"
  id="rating_p_3219"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3219/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment3311">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3311/">#3311</a>(<script language="JavaScript">print_time(new Date("2007/10/12 09:53 GMT"));</script><noscript>2007/10/12 09:53 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>単純な方法で。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">List</span>

<span class="nv">gensort</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">putStr</span> <span class="o">$</span> <span class="nv">unlines</span> <span class="o">$</span> <span class="nv">code1</span> <span class="o">++</span> <span class="nv">code2</span>  <span class="kr">where</span>
  <span class="nv">vs</span> <span class="o">=</span> <span class="nv">take</span> <span class="nv">n</span> <span class="p">[</span><span class="sc">&#39;a&#39;</span><span class="o">..</span><span class="p">]</span>
  <span class="nv">code1</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s">&quot;module Main (main) where&quot;</span><span class="p">,</span>
    <span class="s">&quot;import System.Environment&quot;</span><span class="p">,</span>
    <span class="s">&quot;main :: IO ()&quot;</span><span class="p">,</span>
    <span class="s">&quot;main = do&quot;</span><span class="p">,</span>
    <span class="s">&quot;  &quot;</span> <span class="o">++</span> <span class="nv">vlist</span> <span class="nv">vs</span> <span class="o">++</span> <span class="s">&quot; &lt;- (return . map (read :: String -&gt; Int)) =&lt;&lt; getArgs&quot;</span><span class="p">]</span>
  <span class="nv">code2</span> <span class="o">=</span> <span class="nv">tail</span> <span class="o">$</span> <span class="nv">gensort&#39;</span> <span class="mi">0</span> <span class="s">&quot;&quot;</span> <span class="nv">vs</span>
  <span class="nv">vlist</span> <span class="nv">xs</span> <span class="o">=</span> <span class="s">&quot;[&quot;</span> <span class="o">++</span> <span class="nv">intersperse</span> <span class="sc">&#39;,&#39;</span> <span class="nv">xs</span> <span class="o">++</span> <span class="s">&quot;]&quot;</span>
  <span class="nv">indent</span> <span class="o">=</span> <span class="nv">iterate</span> <span class="p">(</span><span class="s">&quot;  &quot;</span><span class="o">++</span><span class="p">)</span> <span class="s">&quot;&quot;</span>
  <span class="nv">gensort&#39;</span> <span class="nv">m</span> <span class="nv">ws</span> <span class="p">[]</span> <span class="o">=</span> <span class="p">[</span><span class="nv">indent</span><span class="o">!!</span><span class="nv">m</span> <span class="o">++</span> <span class="s">&quot;print &quot;</span> <span class="o">++</span> <span class="nv">vlist</span> <span class="p">(</span><span class="nv">reverse</span> <span class="nv">ws</span><span class="p">)]</span>
  <span class="nv">gensort&#39;</span> <span class="nv">m</span> <span class="nv">ws</span> <span class="p">(</span><span class="nv">z</span><span class="o">:</span><span class="nv">zs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">splits</span> <span class="nv">ws</span> <span class="o">&gt;&gt;=</span> <span class="nv">f</span>  <span class="kr">where</span>
    <span class="nv">splits</span> <span class="nv">ws</span> <span class="o">=</span> <span class="nv">zip</span> <span class="p">(</span><span class="nv">inits</span> <span class="nv">ws</span><span class="p">)</span> <span class="p">(</span><span class="nv">tails</span> <span class="nv">ws</span><span class="p">)</span>
    <span class="nv">f</span> <span class="p">(</span><span class="nv">xs</span><span class="p">,</span> <span class="nv">ys</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">indent</span><span class="o">!!</span><span class="nv">m</span> <span class="o">++</span> <span class="nv">e_cond</span> <span class="nv">xs</span> <span class="o">++</span> <span class="nv">i_cond</span> <span class="nv">ys</span><span class="p">)</span><span class="o">:</span> <span class="nv">gensort&#39;</span> <span class="p">(</span><span class="nv">m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nv">xs</span><span class="o">++</span><span class="p">[</span><span class="nv">z</span><span class="p">]</span><span class="o">++</span><span class="nv">ys</span><span class="p">)</span> <span class="nv">zs</span>
    <span class="nv">e_cond</span> <span class="nv">xs</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">xs</span> <span class="kr">of</span><span class="p">;</span> <span class="p">[]</span> <span class="o">-&gt;</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="kr">_</span> <span class="o">-&gt;</span><span class="s">&quot; else &quot;</span>
    <span class="nv">i_cond</span> <span class="nv">ys</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">ys</span> <span class="kr">of</span>
      <span class="p">[]</span> <span class="o">-&gt;</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="p">(</span><span class="nv">y</span><span class="o">:</span><span class="kr">_</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">concat</span> <span class="p">[</span><span class="s">&quot;if (&quot;</span><span class="p">,</span> <span class="p">[</span><span class="nv">z</span><span class="p">],</span> <span class="s">&quot; &gt; &quot;</span><span class="p">,</span> <span class="p">[</span><span class="nv">y</span><span class="p">],</span> <span class="s">&quot;) then&quot;</span><span class="p">]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3311/addtag/" class="addtag" id="addtag_3311">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3311/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3311/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3311"
  >-</span><span
  class="button yellow"
  id="rating_z_3311"
  >0</span><span 
  class="button green"
  id="rating_p_3311"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3311/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment3783">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/26/" target="_top">dankogai</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3783/">#3783</a>(<script language="JavaScript">print_time(new Date("2007/11/09 20:24 GMT"));</script><noscript>2007/11/09 20:24 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  これまたPerlのCoverage向上のため。
アルゴリズム的にはRubyの

http://ja.doukaku.org/comment/3174/

と同じですが、ソースも表現もPerlっぽく(それもわけわかめっぽく)してあります。

Enjoy!

Dan the Perl Monger

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!/usr/local/bin/perl</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>

<span class="k">sub </span><span class="nf">gencomp</span><span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$x</span><span class="p">,</span> <span class="nv">$i</span><span class="p">,</span> <span class="nv">$v</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">return</span> <span class="s">&#39;(&#39;</span> <span class="o">.</span> <span class="nb">join</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">,</span> <span class="nv">@$x</span><span class="p">)</span> <span class="o">.</span> <span class="s">&#39;)&#39;</span> <span class="k">unless</span> <span class="nv">@$v</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$y</span> <span class="o">=</span> <span class="nv">$v</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="nb">join</span> <span class="s">&quot;&quot;</span><span class="p">,</span>
    <span class="s">&quot;$x-&gt;[$i] &lt; $y ? &quot;</span><span class="p">,</span>
    <span class="p">(</span><span class="nv">$i</span> <span class="o">&lt;</span> <span class="nv">@$x</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">?</span> <span class="n">gencomp</span><span class="p">(</span><span class="nv">$x</span><span class="p">,</span> <span class="nv">$i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$v</span><span class="p">)</span>
                 <span class="p">:</span> <span class="n">gencomp</span><span class="p">([</span><span class="nv">@$x</span><span class="p">,</span> <span class="nv">$y</span><span class="p">],</span> <span class="mi">0</span><span class="p">,</span> <span class="p">[</span> <span class="k">do</span><span class="p">{</span> <span class="k">my</span> <span class="nv">@v</span> <span class="o">=</span> <span class="nv">@$v</span><span class="p">;</span> <span class="nb">shift</span> <span class="nv">@v</span><span class="p">;</span> <span class="nv">@v</span><span class="p">}</span> <span class="p">]),</span>
    <span class="s">&quot;:&quot;</span><span class="p">,</span>
    <span class="n">gencomp</span><span class="p">([</span> <span class="k">do</span><span class="p">{</span><span class="k">my</span> <span class="nv">@x</span> <span class="o">=</span> <span class="nv">@$x</span><span class="p">;</span> <span class="nb">splice</span> <span class="nv">@x</span><span class="p">,</span> <span class="nv">$i</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">$y</span><span class="p">;</span> <span class="nv">@x</span><span class="p">}],</span>
            <span class="mi">0</span><span class="p">,</span>
            <span class="p">[</span><span class="k">do</span><span class="p">{</span><span class="k">my</span> <span class="nv">@v</span> <span class="o">=</span> <span class="nv">@$v</span><span class="p">;</span> <span class="nb">shift</span> <span class="nv">@v</span><span class="p">;</span> <span class="nv">@v</span><span class="p">}</span> <span class="p">]);</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">gensort</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$n</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">@v</span> <span class="o">=</span> <span class="nb">map</span><span class="p">{</span> <span class="s">&#39;$&#39;</span> <span class="o">.</span> <span class="nb">chr</span><span class="p">(</span><span class="nv">$_</span> <span class="o">+</span> <span class="mi">96</span><span class="p">)</span> <span class="p">}(</span><span class="mi">1</span><span class="o">..</span><span class="nv">$n</span><span class="p">);</span>
    <span class="k">my</span> <span class="nv">$x</span> <span class="o">=</span> <span class="nv">$v</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="nb">join</span> <span class="s">&quot;&quot;</span><span class="p">,</span>
        <span class="s">&quot;sub{ my (&quot;</span><span class="p">,</span> <span class="nb">join</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">,</span> <span class="nv">@v</span><span class="p">),</span> <span class="s">&#39;) = @_;&#39;</span><span class="p">,</span>
        <span class="n">gencomp</span><span class="p">([</span><span class="nv">$x</span><span class="p">],</span> <span class="mi">0</span><span class="p">,</span> <span class="p">[</span><span class="nv">@v</span><span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="nv">$#v</span><span class="p">]],</span> <span class="mi">0</span><span class="p">),</span> <span class="s">&#39;}&#39;</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1"># Test Code</span>

<span class="vg">$\</span><span class="o">=</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$order</span> <span class="o">=</span> <span class="nb">shift</span> <span class="o">||</span> <span class="mi">3</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$str</span> <span class="o">=</span> <span class="n">gensort</span><span class="p">(</span><span class="nv">$order</span><span class="p">);</span>
<span class="k">my</span> <span class="nv">$code</span> <span class="o">=</span> <span class="nb">eval</span> <span class="nv">$str</span><span class="p">;</span>
<span class="vg">$@</span> <span class="ow">and</span> <span class="nb">die</span> <span class="vg">$@</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">B::</span><span class="n">Deparse</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$bd</span> <span class="o">=</span> <span class="nn">B::</span><span class="n">Deparse</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">();</span>
<span class="k">print</span> <span class="nv">$bd</span><span class="o">-&gt;</span><span class="n">coderef2text</span><span class="p">(</span><span class="nv">$code</span><span class="p">);</span>
<span class="k">print</span> <span class="nb">join</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">,</span> <span class="nv">$code</span><span class="o">-&gt;</span><span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="nv">$order</span><span class="p">));</span>
<span class="cp">__END__</span>
<span class="cp">% perl sortgen.pl 3</span>
<span class="cp">{</span>
<span class="cp">    use warnings;</span>
<span class="cp">    use strict &#39;refs&#39;;</span>
<span class="cp">    my($a, $b, $c) = @_;</span>
<span class="cp">    $a &lt; $b ? $a &lt; $c ? $b &lt; $c ? ($a, $b, $c) : ($a, $c, $b) : ($c, $a, $b) : ($b &lt; $c ? $a &lt; $c ? ($b, $a, $c) : ($b, $c, $a) : ($c, $b, $a));</span>
<span class="cp">}</span>
<span class="cp">1, 2, 3</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3783/addtag/" class="addtag" id="addtag_3783">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3783/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3783/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3783"
  >-</span><span
  class="button yellow"
  id="rating_z_3783"
  >0</span><span 
  class="button green"
  id="rating_p_3783"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3783/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  
    





<div class="comment" id="comment3970">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/533/" target="_top">yappy</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3970/">#3970</a>(<script language="JavaScript">print_time(new Date("2007/11/13 16:30 GMT"));</script><noscript>2007/11/13 16:30 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Cはある一定の基準として必要だと思われるのでやってみました。<br/><br/>Windows&nbsp;XP&nbsp;+&nbsp;cygwin(gcc)<br/>800Mhz<br/>512MB<br/><br/>スペックの低さも相まって9,10あたりはかなりきつい。<br/>7あたりからコンパイルに時間がかかるようになってくるので最適化をOFF。すると7,8は待ちきれる時間で終わったが、9でOutOfMemory。<br/>実行時間から推測するに、8もぎりぎりだったような気がする・・・。<br/><br/>sort8.c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.53&nbsp;MB&nbsp;(3,703,729&nbsp;バイト)<br/>sort8.exe&nbsp;3.14&nbsp;MB&nbsp;(3,295,540&nbsp;バイト)<br/>sort9.c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;34.5&nbsp;MB&nbsp;(36,241,990&nbsp;バイト)<br/>sort10.c&nbsp;&nbsp;&nbsp;373&nbsp;MB&nbsp;(391,501,531&nbsp;バイト)<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257</pre></td><td class="code"><div class="highlight"><pre><span class="c">// USAGE</span>
<span class="c">// gensort n</span>

<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#define NMAX 26</span>
<span class="cp">#define BASE &#39;a&#39;</span>

<span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">order</span><span class="p">[</span><span class="n">NMAX</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="o">-</span><span class="mi">1</span><span class="p">};</span>

<span class="kt">void</span> <span class="n">print_tab</span><span class="p">(</span><span class="kt">int</span> <span class="n">num</span><span class="p">){</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">num</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;\t&#39;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">print_order</span><span class="p">(</span><span class="kt">int</span> <span class="n">max</span><span class="p">){</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">cur</span><span class="p">;</span>
    <span class="k">static</span> <span class="kt">int</span> <span class="n">result</span><span class="p">[</span><span class="n">NMAX</span><span class="p">];</span>
    <span class="n">cur</span> <span class="o">=</span> <span class="n">max</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">cur</span><span class="p">;</span>
        <span class="n">cur</span> <span class="o">=</span> <span class="n">order</span><span class="p">[</span><span class="n">cur</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;printf(</span><span class="se">\&quot;</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="n">i</span><span class="o">!=</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span> <span class="o">?</span> <span class="s">&quot;%%d &quot;</span> <span class="o">:</span> <span class="s">&quot;%%d&quot;</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\\</span><span class="s">n</span><span class="se">\&quot;</span><span class="s">, &quot;</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="n">printf</span><span class="p">(</span><span class="n">i</span><span class="o">!=</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span> <span class="o">?</span> <span class="s">&quot;%c, &quot;</span> <span class="o">:</span> <span class="s">&quot;%c&quot;</span><span class="p">,</span> <span class="n">BASE</span><span class="o">+</span><span class="n">result</span><span class="p">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="n">i</span><span class="p">]);</span>
    <span class="n">puts</span><span class="p">(</span><span class="s">&quot;);&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">gen_sort</span><span class="p">(</span><span class="kt">int</span> <span class="n">depth</span><span class="p">,</span> <span class="kt">int</span> <span class="n">max</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">depth</span> <span class="o">==</span> <span class="n">n</span><span class="p">){</span>
        <span class="n">print_tab</span><span class="p">(</span><span class="n">depth</span><span class="p">);</span>
        <span class="n">print_order</span><span class="p">(</span><span class="n">max</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span><span class="p">{</span>
        <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">cur</span> <span class="o">=</span> <span class="n">depth</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">prev</span> <span class="o">=</span> <span class="n">max</span><span class="p">;</span>
        <span class="c">// MAX &lt; cur</span>
        <span class="n">print_tab</span><span class="p">(</span><span class="n">depth</span><span class="p">);</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;if(%c &lt; %c)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">BASE</span><span class="o">+</span><span class="n">max</span><span class="p">,</span> <span class="n">BASE</span><span class="o">+</span><span class="n">cur</span><span class="p">);</span>
        <span class="n">order</span><span class="p">[</span><span class="n">cur</span><span class="p">]</span> <span class="o">=</span> <span class="n">max</span><span class="p">;</span>
        <span class="n">gen_sort</span><span class="p">(</span><span class="n">depth</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">cur</span><span class="p">);</span>
        <span class="c">// cur &lt; (*i) &lt; MAX</span>
        <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">depth</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
            <span class="n">order</span><span class="p">[</span><span class="n">cur</span><span class="p">]</span> <span class="o">=</span> <span class="n">order</span><span class="p">[</span><span class="n">prev</span><span class="p">];</span>
            <span class="n">order</span><span class="p">[</span><span class="n">prev</span><span class="p">]</span> <span class="o">=</span> <span class="n">cur</span><span class="p">;</span>
            <span class="n">print_tab</span><span class="p">(</span><span class="n">depth</span><span class="p">);</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;else if(%c &lt; %c)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">BASE</span><span class="o">+</span><span class="n">order</span><span class="p">[</span><span class="n">cur</span><span class="p">],</span> <span class="n">BASE</span><span class="o">+</span><span class="n">cur</span><span class="p">);</span>
            <span class="n">gen_sort</span><span class="p">(</span><span class="n">depth</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">max</span><span class="p">);</span>
            <span class="n">order</span><span class="p">[</span><span class="n">prev</span><span class="p">]</span> <span class="o">=</span> <span class="n">order</span><span class="p">[</span><span class="n">cur</span><span class="p">];</span>
            <span class="n">prev</span> <span class="o">=</span> <span class="n">order</span><span class="p">[</span><span class="n">prev</span><span class="p">];</span>
        <span class="p">}</span>
        <span class="c">// cur &lt; ALL</span>
        <span class="n">order</span><span class="p">[</span><span class="n">prev</span><span class="p">]</span> <span class="o">=</span> <span class="n">cur</span><span class="p">;</span>
        <span class="n">print_tab</span><span class="p">(</span><span class="n">depth</span><span class="p">);</span>
        <span class="n">puts</span><span class="p">(</span><span class="s">&quot;else&quot;</span><span class="p">);</span>
        <span class="n">gen_sort</span><span class="p">(</span><span class="n">depth</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">max</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[]){</span>
    <span class="k">static</span> <span class="kt">char</span> <span class="n">filename</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span>
        <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="n">sprintf</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">&quot;sort%s.c&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
    <span class="n">freopen</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">&quot;w&quot;</span><span class="p">,</span> <span class="n">stdout</span><span class="p">);</span>
    <span class="n">n</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
    <span class="n">puts</span><span class="p">(</span><span class="s">&quot;#include &lt;stdio.h&gt;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">puts</span><span class="p">(</span><span class="s">&quot;int main(){&quot;</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\t</span><span class="s">int &quot;</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="n">printf</span><span class="p">(</span><span class="n">i</span> <span class="o">!=</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span> <span class="o">?</span> <span class="s">&quot;%c, &quot;</span> <span class="o">:</span> <span class="s">&quot;%c;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">BASE</span> <span class="o">+</span> <span class="n">i</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\t</span><span class="s">scanf(</span><span class="se">\&quot;</span><span class="s">%%d</span><span class="se">\&quot;</span><span class="s">, &amp;%c);</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">BASE</span> <span class="o">+</span> <span class="n">i</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">gen_sort</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">puts</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\t</span><span class="s">return 0;&quot;</span><span class="p">);</span>
    <span class="n">puts</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/*本体のコンパイルおよび実行</span>
<span class="c">gcc -o gensort -O3 gensort.c</span>

<span class="c">./gensort 2</span>

<span class="c">real    0m0.751s</span>
<span class="c">user    0m0.020s</span>
<span class="c">sys    0m0.050s</span>

<span class="c">./gensort 3</span>

<span class="c">real    0m1.672s</span>
<span class="c">user    0m0.030s</span>
<span class="c">sys    0m0.060s</span>

<span class="c">./gensort 4</span>

<span class="c">real    0m0.120s</span>
<span class="c">user    0m0.040s</span>
<span class="c">sys    0m0.040s</span>

<span class="c">./gensort 5</span>

<span class="c">real    0m0.110s</span>
<span class="c">user    0m0.030s</span>
<span class="c">sys    0m0.020s</span>

<span class="c">./gensort 6</span>

<span class="c">real    0m0.221s</span>
<span class="c">user    0m0.040s</span>
<span class="c">sys    0m0.070s</span>

<span class="c">./gensort 7</span>

<span class="c">real    0m0.921s</span>
<span class="c">user    0m0.100s</span>
<span class="c">sys    0m0.010s</span>

<span class="c">./gensort 8</span>

<span class="c">real    0m4.066s</span>
<span class="c">user    0m1.602s</span>
<span class="c">sys    0m0.230s</span>

<span class="c">./gensort 9</span>

<span class="c">real    0m41.129s</span>
<span class="c">user    0m14.510s</span>
<span class="c">sys    0m2.062s</span>

<span class="c">./gensort 10</span>

<span class="c">real    4m9.279s</span>
<span class="c">user    2m52.768s</span>
<span class="c">sys    0m18.296s</span>

<span class="c">*/</span>

<span class="c">/*生成された各コードのコンパイルおよび実行</span>
<span class="c">gcc -o sort2 -O0 sort2.c</span>

<span class="c">real    0m6.078s</span>
<span class="c">user    0m0.330s</span>
<span class="c">sys    0m0.370s</span>

<span class="c">./sort2 &lt;input.txt</span>
<span class="c">5 8</span>

<span class="c">real    0m0.361s</span>
<span class="c">user    0m0.050s</span>
<span class="c">sys    0m0.010s</span>

<span class="c">gcc -o sort3 -O0 sort3.c</span>

<span class="c">real    0m1.112s</span>
<span class="c">user    0m0.360s</span>
<span class="c">sys    0m0.360s</span>

<span class="c">./sort3 &lt;input.txt</span>
<span class="c">5 8 9</span>

<span class="c">real    0m0.090s</span>
<span class="c">user    0m0.020s</span>
<span class="c">sys    0m0.040s</span>

<span class="c">gcc -o sort4 -O0 sort4.c</span>

<span class="c">real    0m3.214s</span>
<span class="c">user    0m0.380s</span>
<span class="c">sys    0m0.340s</span>

<span class="c">./sort4 &lt;input.txt</span>
<span class="c">2 5 8 9</span>

<span class="c">real    0m0.080s</span>
<span class="c">user    0m0.030s</span>
<span class="c">sys    0m0.050s</span>

<span class="c">gcc -o sort5 -O0 sort5.c</span>

<span class="c">real    0m1.562s</span>
<span class="c">user    0m0.560s</span>
<span class="c">sys    0m0.350s</span>

<span class="c">./sort5 &lt;input.txt</span>
<span class="c">1 2 5 8 9</span>

<span class="c">real    0m0.100s</span>
<span class="c">user    0m0.020s</span>
<span class="c">sys    0m0.050s</span>

<span class="c">gcc -o sort6 -O0 sort6.c</span>

<span class="c">real    0m3.665s</span>
<span class="c">user    0m1.842s</span>
<span class="c">sys    0m0.410s</span>

<span class="c">./sort6 &lt;input.txt</span>
<span class="c">1 2 5 6 8 9</span>

<span class="c">real    0m0.131s</span>
<span class="c">user    0m0.040s</span>
<span class="c">sys    0m0.020s</span>

<span class="c">gcc -o sort7 -O0 sort7.c</span>

<span class="c">real    0m20.299s</span>
<span class="c">user    0m13.788s</span>
<span class="c">sys    0m0.750s</span>

<span class="c">./sort7 &lt;input.txt</span>
<span class="c">1 2 5 6 8 9 10</span>

<span class="c">real    0m0.421s</span>
<span class="c">user    0m0.050s</span>
<span class="c">sys    0m0.060s</span>

<span class="c">gcc -o sort8 -O0 sort8.c</span>

<span class="c">real    12m59.961s</span>
<span class="c">user    8m4.334s</span>
<span class="c">sys    0m8.791s</span>

<span class="c">./sort8 &lt;input.txt</span>
<span class="c">1 2 4 5 6 8 9 10</span>

<span class="c">real    0m1.172s</span>
<span class="c">user    0m0.020s</span>
<span class="c">sys    0m0.050s</span>

<span class="c">gcc -o sort9 -O0 sort9.c</span>

<span class="c">cc1: out of memory allocating 1048576 bytes after a total of 401670144 bytes</span>

<span class="c">real    13m15.844s</span>
<span class="c">user    1m47.133s</span>
<span class="c">sys    0m6.028s</span>

<span class="c">./sort9 &lt;input.txt</span>
<span class="c">./run.sh: line 13: ./sort9: No such file or directory</span>

<span class="c">real    0m9.183s</span>
<span class="c">user    0m0.020s</span>
<span class="c">sys    0m0.020s</span>

<span class="c">gcc -o sort10 -O0 sort10.c</span>

<span class="c">*/</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/3970/addtag/" class="addtag" id="addtag_3970">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3970/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/3970/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3970"
  >-</span><span
  class="button yellow"
  id="rating_z_3970"
  >0</span><span 
  class="button green"
  id="rating_p_3970"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/3970/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4853">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/136/" target="_top">matarillo</a><a href="/web/20080325151040/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/4853/">#4853</a>(<script language="JavaScript">print_time(new Date("2007/12/17 07:38 GMT"));</script><noscript>2007/12/17 07:38 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>stringでだらだら書くのは.NETらしくないので、CodeDOMで書いてみた。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.CodeDom</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="k">using</span> <span class="nn">CSC</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">CodeDom</span><span class="p">.</span><span class="n">CodeStatementCollection</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">CVD</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">CodeDom</span><span class="p">.</span><span class="n">CodeVariableDeclarationStatement</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">CC</span>  <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">CodeDom</span><span class="p">.</span><span class="n">CodeConditionStatement</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">CTR</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">CodeDom</span><span class="p">.</span><span class="n">CodeTypeReferenceExpression</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">CMR</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">CodeDom</span><span class="p">.</span><span class="n">CodeMethodReferenceExpression</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">CMI</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">CodeDom</span><span class="p">.</span><span class="n">CodeMethodInvokeExpression</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">CVR</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">CodeDom</span><span class="p">.</span><span class="n">CodeVariableReferenceExpression</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">CP</span>  <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">CodeDom</span><span class="p">.</span><span class="n">CodePrimitiveExpression</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">CBO</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">CodeDom</span><span class="p">.</span><span class="n">CodeBinaryOperatorExpression</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="n">GenSort</span><span class="p">(</span><span class="m">5</span><span class="p">,</span> <span class="n">Console</span><span class="p">.</span><span class="n">Out</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
  <span class="k">}</span>

  <span class="k">static</span> <span class="k">void</span> <span class="nf">GenSort</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">TextWriter</span> <span class="n">writer</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="kt">string</span><span class="p">[]</span> <span class="n">vName</span> <span class="p">=</span> <span class="s">&quot;a b c d e f g h i j k l m n o p q r s t u v w x y z&quot;</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39; &#39;</span><span class="p">);</span>

    <span class="n">CodeCompileUnit</span> <span class="n">compileUnit</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CodeCompileUnit</span><span class="p">();</span>
    <span class="n">CodeNamespace</span> <span class="n">name</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CodeNamespace</span><span class="p">();</span>
    <span class="n">compileUnit</span><span class="p">.</span><span class="n">Namespaces</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>

    <span class="n">name</span><span class="p">.</span><span class="n">Imports</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">CodeNamespaceImport</span><span class="p">(</span><span class="s">&quot;System&quot;</span><span class="p">));</span>

    <span class="n">CodeTypeDeclaration</span> <span class="n">type</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CodeTypeDeclaration</span><span class="p">(</span><span class="s">&quot;Sort&quot;</span><span class="p">);</span>
    <span class="n">name</span><span class="p">.</span><span class="n">Types</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">type</span><span class="p">);</span>

    <span class="n">CodeMemberMethod</span> <span class="n">main</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CodeEntryPointMethod</span><span class="p">();</span>
    <span class="n">type</span><span class="p">.</span><span class="n">Members</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">main</span><span class="p">);</span>

    <span class="n">CMI</span> <span class="n">readLine</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CMI</span><span class="p">(</span><span class="k">new</span> <span class="n">CMR</span><span class="p">(</span><span class="k">new</span> <span class="n">CTR</span><span class="p">(</span><span class="s">&quot;Console&quot;</span><span class="p">),</span> <span class="s">&quot;ReadLine&quot;</span><span class="p">));</span>
    <span class="n">CMI</span> <span class="n">intParse</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CMI</span><span class="p">(</span><span class="k">new</span> <span class="n">CMR</span><span class="p">(</span><span class="k">new</span> <span class="n">CTR</span><span class="p">(</span><span class="s">&quot;System.Int32&quot;</span><span class="p">),</span> <span class="s">&quot;Parse&quot;</span><span class="p">),</span> <span class="n">readLine</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
      <span class="n">main</span><span class="p">.</span><span class="n">Statements</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">CVD</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="kt">int</span><span class="p">),</span> <span class="n">vName</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">intParse</span><span class="p">));</span>

    <span class="n">CMR</span> <span class="n">writeLine</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CMR</span><span class="p">(</span><span class="k">new</span> <span class="n">CTR</span><span class="p">(</span><span class="s">&quot;Console&quot;</span><span class="p">),</span> <span class="s">&quot;WriteLine&quot;</span><span class="p">);</span>

    <span class="kt">string</span><span class="p">[]</span> <span class="n">p</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">string</span><span class="p">[</span><span class="n">n</span><span class="p">];</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
      <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{{{0}}}&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
    <span class="n">CP</span> <span class="n">format</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CP</span><span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="n">Join</span><span class="p">(</span><span class="s">&quot; &quot;</span><span class="p">,</span> <span class="n">p</span><span class="p">));</span>

    <span class="n">CVR</span><span class="p">[]</span> <span class="n">vars</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CVR</span><span class="p">[</span><span class="n">n</span><span class="p">];</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
      <span class="n">vars</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CVR</span><span class="p">(</span><span class="n">vName</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>

    <span class="n">IList</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">orderd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;(</span><span class="n">n</span><span class="p">);</span>
    <span class="n">IList</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">notyet</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;(</span><span class="n">n</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
      <span class="n">notyet</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>

    <span class="n">GenIf</span><span class="p">(</span><span class="n">main</span><span class="p">.</span><span class="n">Statements</span><span class="p">,</span> <span class="n">orderd</span><span class="p">,</span> <span class="n">notyet</span><span class="p">,</span> <span class="n">writeLine</span><span class="p">,</span> <span class="n">format</span><span class="p">,</span> <span class="n">vars</span><span class="p">);</span>

    <span class="p">(</span><span class="k">new</span> <span class="n">Microsoft</span><span class="p">.</span><span class="n">CSharp</span><span class="p">.</span><span class="n">CSharpCodeProvider</span><span class="p">()).</span><span class="n">GenerateCodeFromCompileUnit</span>
      <span class="p">(</span><span class="n">compileUnit</span><span class="p">,</span> <span class="n">writer</span><span class="p">,</span> <span class="p">(</span><span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">CodeDom</span><span class="p">.</span><span class="n">Compiler</span><span class="p">.</span><span class="n">CodeGeneratorOptions</span><span class="p">()));</span>
  <span class="k">}</span>

  <span class="k">static</span> <span class="k">void</span> <span class="nf">GenIf</span><span class="p">(</span><span class="n">CSC</span> <span class="n">statements</span><span class="p">,</span> <span class="n">IList</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">compared</span><span class="p">,</span> <span class="n">IList</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">notyet</span><span class="p">,</span>
    <span class="n">CMR</span> <span class="n">writeLine</span><span class="p">,</span> <span class="n">CP</span> <span class="n">format</span><span class="p">,</span> <span class="n">CVR</span><span class="p">[]</span> <span class="n">vars</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">notyet</span><span class="p">.</span><span class="n">Count</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
    <span class="k">{</span>
      <span class="n">CMI</span> <span class="n">method</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CMI</span><span class="p">(</span><span class="n">writeLine</span><span class="p">);</span>
      <span class="n">method</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">format</span><span class="p">);</span>
      <span class="k">foreach</span> <span class="p">(</span><span class="kt">int</span> <span class="n">index</span> <span class="k">in</span> <span class="n">compared</span><span class="p">)</span>
        <span class="n">method</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">vars</span><span class="p">[</span><span class="n">index</span><span class="p">]);</span>
      <span class="n">statements</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">method</span><span class="p">);</span>
      <span class="k">return</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="kt">int</span> <span class="n">current</span> <span class="p">=</span> <span class="n">notyet</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
    <span class="n">notyet</span><span class="p">.</span><span class="n">RemoveAt</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">compared</span><span class="p">.</span><span class="n">Count</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
    <span class="k">{</span>
      <span class="n">compared</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">current</span><span class="p">);</span>
      <span class="n">GenIf</span><span class="p">(</span><span class="n">statements</span><span class="p">,</span> <span class="n">compared</span><span class="p">,</span> <span class="n">notyet</span><span class="p">,</span> <span class="n">writeLine</span><span class="p">,</span> <span class="n">format</span><span class="p">,</span> <span class="n">vars</span><span class="p">);</span>
      <span class="k">return</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">compared</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
    <span class="k">{</span>
      <span class="n">CC</span> <span class="n">ifStatement</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CC</span><span class="p">();</span>
      <span class="n">statements</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">ifStatement</span><span class="p">);</span>
      <span class="n">ifStatement</span><span class="p">.</span><span class="n">Condition</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CodeBinaryOperatorExpression</span>
        <span class="p">(</span><span class="n">vars</span><span class="p">[</span><span class="n">current</span><span class="p">],</span> <span class="n">CodeBinaryOperatorType</span><span class="p">.</span><span class="n">LessThan</span><span class="p">,</span> <span class="n">vars</span><span class="p">[</span><span class="n">compared</span><span class="p">[</span><span class="n">i</span><span class="p">]]);</span>
      <span class="n">compared</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">current</span><span class="p">);</span>
      <span class="n">GenIf</span><span class="p">(</span><span class="n">ifStatement</span><span class="p">.</span><span class="n">TrueStatements</span><span class="p">,</span> <span class="n">compared</span><span class="p">,</span> <span class="n">notyet</span><span class="p">,</span> <span class="n">writeLine</span><span class="p">,</span> <span class="n">format</span><span class="p">,</span> <span class="n">vars</span><span class="p">);</span>
      <span class="n">compared</span><span class="p">.</span><span class="n">RemoveAt</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
      <span class="n">statements</span> <span class="p">=</span> <span class="n">ifStatement</span><span class="p">.</span><span class="n">FalseStatements</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="n">compared</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">current</span><span class="p">);</span>
    <span class="n">GenIf</span><span class="p">(</span><span class="n">statements</span><span class="p">,</span> <span class="n">compared</span><span class="p">,</span> <span class="n">notyet</span><span class="p">,</span> <span class="n">writeLine</span><span class="p">,</span> <span class="n">format</span><span class="p">,</span> <span class="n">vars</span><span class="p">);</span>
  <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/4853/addtag/" class="addtag" id="addtag_4853">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/4853/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/4853/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4853"
  >-</span><span
  class="button yellow"
  id="rating_z_4853"
  >0</span><span 
  class="button green"
  id="rating_p_4853"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/4853/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5618">
  <p class="banner"><a href="/web/20080325151040/http://ja.doukaku.org/user/654/" target="_top">ika</a>

	
	&nbsp;
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/5618/">#5618</a>(<script language="JavaScript">print_time(new Date("2008/02/01 07:41 GMT"));</script><noscript>2008/02/01 07:41 GMT</noscript>)
	
	
	
	[<a href="/web/20080325151040/http://ja.doukaku.org/lang/d/">
	  D
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>コンパイラはDMD2.009を使用しました。
ソートコードのコンパイルは、最適化を有効にした場合、n=6までしか出来ませんでした。

* ソースコード生成
gensort 7  00:00.062
gensort 8  00:00.515
gensort 9  00:05.312
gensort 10 00:57.671

* コンパイル
sort5  00:00.125
sort6  00:00.156
sort7  00:01.328
sort8  00:54.937
// 9,10はメモリ不足でコンパイルできず</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="n">std</span>.<span class="n">stream</span>, <span class="n">std</span>.<span class="n">string</span>, <span class="n">std</span>.<span class="n">conv</span>

<span class="kt">void</span> <span class="n">gensort</span>(<span class="kt">uint</span> <span class="n">n</span>, <span class="n">Stream</span> <span class="n">o</span>) {
    <span class="k">enum</span> <span class="n">string</span> <span class="n">INDENT</span> = <span class="s">&quot;\t&quot;</span>;
    
    <span class="kt">void</span> <span class="n">_gensort</span>(<span class="n">string</span>[] <span class="n">checked</span>, <span class="kt">uint</span> <span class="n">index</span>, <span class="n">string</span>[] <span class="n">vars</span>, <span class="kt">uint</span> <span class="n">indent</span>) {
        <span class="k">if</span>(!<span class="n">vars</span>.<span class="n">length</span>) {
            <span class="n">o</span>.<span class="n">writefln</span>(<span class="s">&quot;%swriteln([%s]);&quot;</span>, <span class="n">INDENT</span>.<span class="n">repeat</span>(<span class="n">indent</span>), <span class="n">checked</span>.<span class="n">join</span>(<span class="s">&quot;, &quot;</span>));
            <span class="k">return</span>;
        }

        <span class="n">o</span>.<span class="n">writefln</span>(<span class="s">&quot;%sif(%s &lt; %s)&quot;</span>, <span class="n">INDENT</span>.<span class="n">repeat</span>(<span class="n">indent</span>), <span class="n">checked</span>[<span class="n">index</span>], <span class="n">vars</span>[<span class="mi">0</span>]);
        <span class="k">if</span>(<span class="n">index</span> + <span class="mi">1</span> &lt; <span class="n">checked</span>.<span class="n">length</span>) {
            <span class="n">_gensort</span>(<span class="n">checked</span>, <span class="n">index</span> + <span class="mi">1</span>, <span class="n">vars</span>, <span class="n">indent</span> + <span class="mi">1</span>);
        } <span class="k">else</span> {
            <span class="n">_gensort</span>(<span class="n">checked</span> ~ <span class="n">vars</span>[<span class="mi">0</span>], <span class="mi">0</span>, <span class="n">vars</span>[<span class="mf">1.</span>.$], <span class="n">indent</span> + <span class="mi">1</span>);
        }
        <span class="n">o</span>.<span class="n">writefln</span>(<span class="s">&quot;%selse&quot;</span>, <span class="n">INDENT</span>.<span class="n">repeat</span>(<span class="n">indent</span>));
        <span class="n">_gensort</span>(<span class="n">checked</span>[<span class="mf">0.</span>.<span class="n">index</span>] ~ <span class="n">vars</span>[<span class="mi">0</span>] ~ <span class="n">checked</span>[<span class="n">index</span>..$], <span class="mi">0</span>, <span class="n">vars</span>[<span class="mf">1.</span>.$], <span class="n">indent</span> + <span class="mi">1</span>);
    }
    
    <span class="n">string</span>[] <span class="n">_variables</span>(<span class="kt">uint</span> <span class="n">n</span>) {
        <span class="k">auto</span> <span class="n">vars</span> = <span class="k">new</span> <span class="n">string</span>[<span class="n">n</span>];
        <span class="n">vars</span>[<span class="mi">0</span>] = <span class="s">&quot;a&quot;</span>;
        <span class="k">foreach</span>(<span class="n">i</span>; <span class="mi">1</span> .. <span class="n">n</span>) {
            <span class="n">vars</span>[<span class="n">i</span>] = <span class="n">vars</span>[<span class="n">i</span> - <span class="mi">1</span>].<span class="n">succ</span>();
        }
        <span class="k">return</span> <span class="n">vars</span>;
    }
    
    <span class="n">o</span>.<span class="n">writefln</span>(<span class="s">&quot;import std.stdio, std.string, std.conv;&quot;</span>);
    <span class="n">o</span>.<span class="n">writefln</span>(<span class="s">&quot;void main() {&quot;</span>);
    
    <span class="k">auto</span> <span class="n">vars</span> = <span class="n">_variables</span>(<span class="n">n</span>);
    <span class="k">foreach</span>(<span class="n">var</span>; <span class="n">vars</span>) {
        <span class="n">o</span>.<span class="n">writefln</span>(<span class="s">&quot;%sint %s = to!(int)(strip(readln()));&quot;</span>, <span class="n">INDENT</span>, <span class="n">var</span>);
    }
    <span class="n">_gensort</span>([<span class="n">vars</span>[<span class="mi">0</span>]], <span class="mi">0</span>, <span class="n">vars</span>[<span class="mf">1.</span>.$], <span class="mi">1</span>);
    
    <span class="n">o</span>.<span class="n">writefln</span>(<span class="s">&quot;}&quot;</span>);
}

<span class="kt">void</span> <span class="n">main</span>(<span class="n">string</span>[] <span class="n">args</span>) {
    <span class="k">if</span>(<span class="n">args</span>.<span class="n">length</span>&gt;=<span class="mi">2</span>) {
        <span class="k">auto</span> <span class="n">o</span> = <span class="k">new</span> <span class="n">BufferedFile</span>(<span class="s">&quot;sort&quot;</span> ~ <span class="n">args</span>[<span class="mi">1</span>] ~ <span class="s">&quot;.d&quot;</span>, <span class="n">FileMode</span>.<span class="n">OutNew</span>);
        <span class="k">scope</span>(<span class="n">exit</span>) <span class="n">o</span>.<span class="n">close</span>();
        <span class="n">gensort</span>(<span class="n">to</span>!(<span class="kt">int</span>)(<span class="n">args</span>[<span class="mi">1</span>]), <span class="n">o</span>);
    }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080325151040/http://ja.doukaku.org/comment/5618/addtag/" class="addtag" id="addtag_5618">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080325151040/http://ja.doukaku.org/lang/d/">
		D
      </a>]
	  
      [<a href="/web/20080325151040/http://ja.doukaku.org/comment/5618/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080325151040/http://ja.doukaku.org/comment/5618/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5618"
  >-</span><span
  class="button yellow"
  id="rating_z_5618"
  >0</span><span 
  class="button green"
  id="rating_p_5618"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080325151040/http://ja.doukaku.org/63/reply_to/5618/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20080325151040if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20080325151040/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20080325151040/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20080325151040/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20080325151040/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20080325151040/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20080325151040/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20080325151040/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20080325151040/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20080325151040/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20080325151040/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20080325151040im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20080325151040/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20080325151040/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20080325151040/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20080325151040/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20080325151040/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20080325151040/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20080325151040/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20080325151040/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20080325151040im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20080325151040/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20080325151040/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20080325151040/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20080325151040js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 15:10:40 Mar 25, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:12:55 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
