
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
島の数をカウントする
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20100605045807cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20100605045807cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20100605045807cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20100605045807/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20100605045807/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20100605045807js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20100605045807js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20100605045807js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20100605045807js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app10.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/219\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "5";
var displayMonth = "Jun";
var displayYear = "2010";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/219/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20100605045807" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20090103073115/http://ja.doukaku.org/219/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="3 Jan 2009"><strong>JAN</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 4:58:07 Jun 5, 2010">JUN</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jul
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20090103073115/http://ja.doukaku.org/219/nested/" title="7:31:15 Jan 3, 2009" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 4:58:07 Jun 5, 2010">5</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20090103073115/http://ja.doukaku.org/219/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="3 Jan 2009"><strong>2009</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 4:58:07 Jun 5, 2010">2010</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2011
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20100605045807*/http://ja.doukaku.org/219/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">3 Jan 09 - 5 Jun 10</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:100000000000_2010:5:000001000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20100605045807/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20100605045807/http://ja.doukaku.org/219/">島の数をカウントする</a>
</h2>

    





<div class="comment" id="comment8053">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/893/" target="_top">ckbx</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8053/">#8053</a>(<script language="JavaScript">print_time(new Date("2008/11/19 12:51 GMT"));</script><noscript>2008/11/19 12:51 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #afff8f;">5/7=0.71</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>m×nの長方形のマス目のうちいくつかを黒く塗りつぶします。
このとき、白の島、黒の島がそれぞれいくつあるかをカウントしてください。

ただし、2つのマスは、同色マスの上下左右の移動で移れるとき、
同じ島にあると定義します。

例：
□■■□
□□■□
□■□□
□■■□
白の島は2つ
黒の島は2つ

例：
□□□□
■□■□
□■□□
□□□□
白の島は1つ
黒の島は3つ</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8053/addtag/" class="addtag" id="addtag_8053">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #afff8f;"
  >5/7=0.71</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8053"
  >-</span><span
  class="button yellow"
  id="rating_z_8053"
  >0</span><span 
  class="button green"
  id="rating_p_8053"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8053/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20100605045807/http://ja.doukaku.org/219/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20100605045807/http://ja.doukaku.org/219/flatten/">フラット表示</a> 
<a href="/web/20100605045807/http://ja.doukaku.org/219/">非表示</a> 


  

  
    





<div class="comment" id="comment8054">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/437/" target="_top">mamamoto</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8054/">#8054</a>(<script language="JavaScript">print_time(new Date("2008/11/19 19:29 GMT"));</script><noscript>2008/11/19 19:29 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>あんまりRubyである必要のないコードですが。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!ruby -Ku</span>

<span class="k">def</span> <span class="nf">fill</span><span class="p">(</span><span class="n">sima</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
  <span class="k">return</span> <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span>
    <span class="o">!</span><span class="n">sima</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">||</span> <span class="o">!</span><span class="n">sima</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span> <span class="o">||</span>
    <span class="n">sima</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span> <span class="o">!=</span> <span class="n">color</span>

  <span class="n">sima</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span> <span class="o">=</span> <span class="kp">nil</span>
  <span class="n">fill</span><span class="p">(</span><span class="n">sima</span><span class="p">,</span> <span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
  <span class="n">fill</span><span class="p">(</span><span class="n">sima</span><span class="p">,</span> <span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
  <span class="n">fill</span><span class="p">(</span><span class="n">sima</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
  <span class="n">fill</span><span class="p">(</span><span class="n">sima</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">next_point</span><span class="p">(</span><span class="n">sima</span><span class="p">)</span>
  <span class="n">sima</span><span class="o">.</span><span class="n">size</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">y</span><span class="o">|</span>
    <span class="n">sima</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">size</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span>
      <span class="k">return</span> <span class="o">[</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">]</span> <span class="k">if</span> <span class="n">sima</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="kp">nil</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">sima_scan</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
  <span class="n">sima</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/\n/</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">line</span><span class="o">|</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)}</span>
  <span class="n">result</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">{</span><span class="mi">0</span><span class="p">}</span>

  <span class="k">while</span> <span class="n">np</span> <span class="o">=</span> <span class="n">next_point</span><span class="p">(</span><span class="n">sima</span><span class="p">)</span>
    <span class="n">x</span><span class="p">,</span><span class="n">y</span> <span class="o">=</span> <span class="o">*</span><span class="n">np</span>
    <span class="n">result</span><span class="o">[</span><span class="n">sima</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]]</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="n">fill</span><span class="p">(</span><span class="n">sima</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">sima</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="n">result</span>
<span class="k">end</span>

<span class="n">a</span> <span class="o">=</span> <span class="s2">&quot;□■■□</span>
<span class="s2">□□■□</span>
<span class="s2">□■□□</span>
<span class="s2">□■■□&quot;</span>

<span class="n">b</span> <span class="o">=</span> <span class="s2">&quot;□□□□</span>
<span class="s2">■□■□</span>
<span class="s2">□■□□</span>
<span class="s2">□□□□&quot;</span>

<span class="nb">p</span> <span class="n">sima_scan</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="nb">p</span> <span class="n">sima_scan</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8054/addtag/" class="addtag" id="addtag_8054">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8054/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8054/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8054"
  >-</span><span
  class="button yellow"
  id="rating_z_8054"
  >0</span><span 
  class="button green"
  id="rating_p_8054"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8054/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8059">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8059/">#8059</a>(<script language="JavaScript">print_time(new Date("2008/11/20 09:07 GMT"));</script><noscript>2008/11/20 09:07 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="c"># -*- coding: utf-8 -*-</span>

<span class="k">from</span> <span class="nn">random</span> <span class="k">import</span> <span class="n">randint</span>

<span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span>

<span class="n">A</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">u&#39;□&#39;</span> <span class="k">if</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="k">else</span> <span class="s">u&#39;■&#39;</span> <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">)])</span><span class="o">+</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">)])</span>

<span class="n">a</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span> <span class="k">if</span> <span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="p">(</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="s">u&#39;□&#39;</span> <span class="k">else</span> <span class="mi">1</span> <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">)]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">)]</span>
<span class="c">#for i in a:</span>
<span class="c">#  print i</span>

<span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">):</span>
  <span class="n">k</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span>
  <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
  <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">k</span><span class="p">:</span> <span class="n">f</span><span class="p">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">k</span><span class="p">:</span> <span class="n">f</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="o">-</span><span class="mi">1</span> <span class="ow">and</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">k</span><span class="p">:</span> <span class="n">f</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span> <span class="ow">and</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">k</span><span class="p">:</span> <span class="n">f</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>

<span class="n">r</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
      <span class="n">r</span><span class="p">[</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]]</span> <span class="o">+=</span> <span class="mi">1</span>
      <span class="n">f</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span>

<span class="k">print</span> <span class="n">A</span>
<span class="k">print</span> <span class="s">&#39;white: </span><span class="si">%d</span><span class="se">\n</span><span class="s">black: </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8059/addtag/" class="addtag" id="addtag_8059">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8059/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8059/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8059"
  >-</span><span
  class="button yellow"
  id="rating_z_8059"
  >0</span><span 
  class="button green"
  id="rating_p_8059"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8059/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8060">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/852/" target="_top">emasaka</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8060/">#8060</a>(<script language="JavaScript">print_time(new Date("2008/11/20 05:38 GMT"));</script><noscript>2008/11/20 05:38 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>標準入力→標準出力です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58</pre></td><td class="code"><div class="highlight"><pre><span class="c">#!/bin/bash </span>
<span class="nb">declare</span> -a ISLANDS_WHITE
<span class="nb">declare</span> -a ISLANDS_BLACK

<span class="k">function </span>expand_islands<span class="o">()</span> <span class="o">{</span>
    <span class="nb">local</span> -i <span class="nv">x</span><span class="o">=</span><span class="nv">$1</span>
    <span class="nb">local</span> -i <span class="nv">y</span><span class="o">=</span><span class="nv">$2</span>
    <span class="nb">local </span><span class="nv">bw</span><span class="o">=</span><span class="nv">$3</span>

    <span class="nb">local</span> -a islands
    <span class="k">if</span> <span class="o">[</span> <span class="nv">$bw</span> <span class="o">=</span> □ <span class="o">]</span>; <span class="k">then</span>
<span class="k">        </span><span class="nv">islands</span><span class="o">=(</span><span class="s2">&quot;${ISLANDS_WHITE[@]}&quot;</span><span class="o">)</span>
    <span class="k">else</span>
<span class="k">        </span><span class="nv">islands</span><span class="o">=(</span><span class="s2">&quot;${ISLANDS_BLACK[@]}&quot;</span><span class="o">)</span>
    <span class="k">fi</span>

<span class="k">    </span><span class="nb">local </span>p found
    <span class="nb">local</span> -i i <span class="nv">n</span><span class="o">=</span><span class="k">${#</span><span class="nv">islands</span><span class="p">[@]</span><span class="k">}</span>
    <span class="k">for</span> <span class="o">((</span><span class="nv">i</span> <span class="o">=</span> 0; i &lt; <span class="nv">$n</span>; i++<span class="o">))</span>; <span class="k">do</span>
<span class="k">        for </span>p in <span class="k">${</span><span class="nv">islands</span><span class="p">[i]</span><span class="k">}</span>; <span class="k">do</span>
<span class="k">            </span><span class="nb">local</span> -i <span class="nv">px</span><span class="o">=</span><span class="k">${</span><span class="nv">p</span><span class="p">%,*</span><span class="k">}</span> <span class="nv">py</span><span class="o">=</span><span class="k">${</span><span class="nv">p</span><span class="p">#*,</span><span class="k">}</span>
            <span class="k">if</span> <span class="o">(((</span><span class="nv">x</span> <span class="o">==</span> px &amp;&amp; <span class="nv">y</span> <span class="o">==</span> py + 1<span class="o">)</span> ||
                 <span class="o">(</span><span class="nv">y</span> <span class="o">==</span> py &amp;&amp; <span class="nv">x</span> <span class="o">==</span> px + 1<span class="o">)</span> <span class="o">))</span>; <span class="k">then</span>
<span class="k">                if</span> <span class="o">[</span> -z <span class="s2">&quot;$found&quot;</span> <span class="o">]</span>; <span class="k">then</span>
<span class="k">                    </span>islands<span class="o">[</span>i<span class="o">]=</span><span class="s2">&quot;${islands[i]} $x,$y&quot;</span>
                    <span class="nv">found</span><span class="o">=</span><span class="nv">$i</span>
                <span class="k">else</span>    <span class="c"># join two islands</span>
                    islands<span class="o">[</span>found<span class="o">]=</span><span class="s2">&quot;${islands[found]} ${islands[i]} $x,$y&quot;</span>
                    <span class="nb">unset </span>islands<span class="o">[</span>i<span class="o">]</span>
                <span class="k">fi</span>
<span class="k">                </span><span class="nb">break</span>
<span class="nb">            </span><span class="k">fi</span>
<span class="k">        done</span>
<span class="k">    done</span>
    <span class="o">[</span> -z <span class="s2">&quot;$found&quot;</span> <span class="o">]</span> &amp;&amp; <span class="nv">islands</span><span class="o">=(</span><span class="s2">&quot;${islands[@]}&quot;</span> <span class="s2">&quot;$x,$y&quot;</span><span class="o">)</span>        <span class="c"># new island</span>

    <span class="k">if</span> <span class="o">[</span> <span class="nv">$bw</span> <span class="o">=</span> □ <span class="o">]</span>; <span class="k">then</span>
<span class="k">        </span><span class="nv">ISLANDS_WHITE</span><span class="o">=(</span><span class="s2">&quot;${islands[@]}&quot;</span><span class="o">)</span>
    <span class="k">else</span>
<span class="k">        </span><span class="nv">ISLANDS_BLACK</span><span class="o">=(</span><span class="s2">&quot;${islands[@]}&quot;</span><span class="o">)</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="k">function </span>check_islands<span class="o">()</span> <span class="o">{</span>
    <span class="nb">local </span>line
    <span class="nb">local</span> -i <span class="nv">y</span><span class="o">=</span>0
    <span class="k">while </span><span class="nb">read</span> -r line; <span class="k">do</span>
<span class="k">        </span><span class="nb">local</span> -i x
        <span class="k">for</span> <span class="o">((</span><span class="nv">x</span> <span class="o">=</span> 0; x &lt; <span class="k">${#</span><span class="nv">line</span><span class="k">}</span>; x++<span class="o">))</span>; <span class="k">do</span>
<span class="k">            </span>expand_islands <span class="nv">$x</span> <span class="nv">$y</span> <span class="k">${</span><span class="nv">line</span><span class="p">:$x:</span><span class="nv">1</span><span class="k">}</span>
        <span class="k">done</span>
        <span class="o">((</span>y++<span class="o">))</span>
    <span class="k">done</span>
<span class="o">}</span>

check_islands
<span class="nb">echo</span> 白の島は<span class="k">${#</span><span class="nv">ISLANDS</span><span class="p">_WHITE[@]</span><span class="k">}</span>
<span class="nb">echo</span> 黒の島は<span class="k">${#</span><span class="nv">ISLANDS</span><span class="p">_BLACK[@]</span><span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8060/addtag/" class="addtag" id="addtag_8060">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8060/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8060/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8060"
  >-</span><span
  class="button yellow"
  id="rating_z_8060"
  >0</span><span 
  class="button green"
  id="rating_p_8060"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8060/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8061">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8061/">#8061</a>(<script language="JavaScript">print_time(new Date("2008/11/21 00:07 GMT"));</script><noscript>2008/11/21 00:07 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ついでに島の大きさも数えてますが、今回は関係ないですね。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.awt.Point</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>


<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample219</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">char</span> <span class="n">NULL</span> <span class="o">=</span> <span class="sc">&#39; &#39;</span><span class="o">;</span>

    <span class="k">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">scanIslands</span><span class="o">(</span><span class="n">String</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">lines</span> <span class="o">=</span> <span class="n">map</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
        <span class="kt">char</span><span class="o">[][]</span> <span class="n">mapdata</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span><span class="o">[</span><span class="n">lines</span><span class="o">.</span><span class="na">length</span><span class="o">][];</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">lines</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">mapdata</span><span class="o">[</span><span class="n">index</span><span class="o">]</span> <span class="o">=</span> <span class="n">lines</span><span class="o">[</span><span class="n">index</span><span class="o">].</span><span class="na">toCharArray</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="n">Map</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">Point</span> <span class="n">p</span> <span class="o">=</span> <span class="n">getNextPoint</span><span class="o">(</span><span class="n">mapdata</span><span class="o">);</span> <span class="n">p</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">;</span> <span class="n">p</span> <span class="o">=</span> <span class="n">getNextPoint</span><span class="o">(</span><span class="n">mapdata</span><span class="o">))</span> <span class="o">{</span>
            <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="n">mapdata</span><span class="o">[</span><span class="n">p</span><span class="o">.</span><span class="na">y</span><span class="o">][</span><span class="n">p</span><span class="o">.</span><span class="na">x</span><span class="o">];</span>
            <span class="n">scan</span><span class="o">(</span><span class="n">mapdata</span><span class="o">,</span> <span class="n">p</span><span class="o">.</span><span class="na">x</span><span class="o">,</span> <span class="n">p</span><span class="o">.</span><span class="na">y</span><span class="o">,</span> <span class="n">c</span><span class="o">);</span>
            <span class="n">Integer</span> <span class="n">count</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">count</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">result</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">result</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="n">Point</span> <span class="n">getNextPoint</span><span class="o">(</span><span class="kt">char</span><span class="o">[][]</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">map</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">map</span><span class="o">[</span><span class="n">y</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">map</span><span class="o">[</span><span class="n">y</span><span class="o">][</span><span class="n">x</span><span class="o">]</span> <span class="o">!=</span> <span class="n">NULL</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="k">new</span> <span class="n">Point</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">scan</span><span class="o">(</span><span class="kt">char</span><span class="o">[][]</span> <span class="n">map</span><span class="o">,</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">char</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">map</span><span class="o">.</span><span class="na">length</span> <span class="o">&lt;=</span> <span class="n">y</span><span class="o">)</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">map</span><span class="o">[</span><span class="n">y</span><span class="o">].</span><span class="na">length</span> <span class="o">&lt;=</span> <span class="n">x</span><span class="o">)</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">map</span><span class="o">[</span><span class="n">y</span><span class="o">][</span><span class="n">x</span><span class="o">]</span> <span class="o">!=</span> <span class="n">c</span><span class="o">)</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="n">map</span><span class="o">[</span><span class="n">y</span><span class="o">][</span><span class="n">x</span><span class="o">]</span> <span class="o">=</span> <span class="n">NULL</span><span class="o">;</span>
        <span class="n">result</span> <span class="o">+=</span> <span class="n">scan</span><span class="o">(</span><span class="n">map</span><span class="o">,</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">c</span><span class="o">);</span>
        <span class="n">result</span> <span class="o">+=</span> <span class="n">scan</span><span class="o">(</span><span class="n">map</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">c</span><span class="o">);</span>
        <span class="n">result</span> <span class="o">+=</span> <span class="n">scan</span><span class="o">(</span><span class="n">map</span><span class="o">,</span> <span class="n">x</span> <span class="o">-</span> <span class="mi">1</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">c</span><span class="o">);</span>
        <span class="n">result</span> <span class="o">+=</span> <span class="n">scan</span><span class="o">(</span><span class="n">map</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span> <span class="o">-</span> <span class="mi">1</span><span class="o">,</span> <span class="n">c</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Sample219</span> <span class="n">sample</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sample219</span><span class="o">();</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sample</span><span class="o">.</span><span class="na">scanIslands</span><span class="o">(</span>
                <span class="s">&quot;□■■□\n&quot;</span> <span class="o">+</span>
                <span class="s">&quot;□□■□\n&quot;</span> <span class="o">+</span>
                <span class="s">&quot;□■□□\n&quot;</span> <span class="o">+</span>
                <span class="s">&quot;□■■□&quot;</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sample</span><span class="o">.</span><span class="na">scanIslands</span><span class="o">(</span>
                <span class="s">&quot;□□□□\n&quot;</span> <span class="o">+</span>
                <span class="s">&quot;■□■□\n&quot;</span> <span class="o">+</span>
                <span class="s">&quot;□■□□\n&quot;</span> <span class="o">+</span>
                <span class="s">&quot;□□□□&quot;</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8061/addtag/" class="addtag" id="addtag_8061">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8061/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8061/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8061"
  >-</span><span
  class="button yellow"
  id="rating_z_8061"
  >0</span><span 
  class="button green"
  id="rating_p_8061"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8061/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8062">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8062/">#8062</a>(<script language="JavaScript">print_time(new Date("2008/11/20 19:58 GMT"));</script><noscript>2008/11/20 19:58 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ナイーブに。

実行例
*Main&gt; :main
□■■□
□□■□
□■□□
□■■□
白の島: 2個
黒の島: 2個
□□□□
■□■□
□■□□
□□□□
白の島: 1個
黒の島: 3個
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Control</span><span class="o">.</span><span class="n">Arrow</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Function</span>
<span class="kr">import</span> <span class="nv">qualified</span> <span class="n">System</span><span class="o">.</span><span class="n">IO</span><span class="o">.</span><span class="n">UTF8</span> <span class="nv">as</span> <span class="n">U</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span>  <span class="nv">mapM_</span> <span class="nv">displayIsland</span> <span class="p">[</span><span class="nv">sample1</span><span class="p">,</span><span class="nv">sample2</span><span class="p">]</span>

<span class="nv">displayIsland</span> <span class="o">=</span> <span class="nv">uncurry</span> <span class="p">(</span><span class="o">&gt;&gt;</span><span class="p">)</span> <span class="o">.</span> <span class="p">(</span><span class="nv">printMAP</span> <span class="o">&amp;&amp;&amp;</span> <span class="p">(</span><span class="nv">printAnswer</span> <span class="o">.</span> <span class="nv">count</span> <span class="o">.</span> <span class="nv">islands</span><span class="p">))</span>
  <span class="kr">where</span>
    <span class="nv">printMAP</span> <span class="o">=</span> <span class="n">U</span><span class="o">.</span><span class="nv">putStr</span> <span class="o">.</span> <span class="nv">unlines</span> <span class="o">.</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">concatMap</span> <span class="nv">show</span><span class="p">)</span>
    <span class="nv">printAnswer</span> <span class="p">(</span><span class="nv">w</span><span class="p">,</span><span class="nv">b</span><span class="p">)</span> <span class="o">=</span> <span class="nv">mapM_</span> <span class="n">U</span><span class="o">.</span><span class="nv">putStrLn</span> <span class="p">[</span><span class="s">&quot;白の島: &quot;</span><span class="o">++</span><span class="nv">show</span> <span class="nv">w</span><span class="o">++</span><span class="s">&quot;個&quot;</span>
                                         <span class="p">,</span><span class="s">&quot;黒の島: &quot;</span><span class="o">++</span><span class="nv">show</span> <span class="nv">b</span><span class="o">++</span><span class="s">&quot;個&quot;</span><span class="p">]</span>

<span class="kr">data</span> <span class="n">BW</span> <span class="o">=</span> <span class="n">B</span> <span class="o">|</span> <span class="n">W</span> <span class="kr">deriving</span> <span class="p">(</span><span class="n">Eq</span><span class="p">)</span>

<span class="kr">instance</span> <span class="n">Show</span> <span class="n">BW</span> <span class="kr">where</span>
  <span class="nv">show</span> <span class="n">B</span> <span class="o">=</span> <span class="s">&quot;■&quot;</span>
  <span class="nv">show</span> <span class="n">W</span> <span class="o">=</span> <span class="s">&quot;□&quot;</span>

<span class="nv">grouping</span> <span class="o">::</span> <span class="p">[[(</span><span class="n">Int</span><span class="p">,</span><span class="n">BW</span><span class="p">)]]</span> <span class="o">-&gt;</span> <span class="p">[[(</span><span class="n">Int</span><span class="p">,</span><span class="n">BW</span><span class="p">)]]</span>
<span class="nv">grouping</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">concatMap</span> <span class="nv">renumber</span> <span class="o">.</span> <span class="nv">adjacent</span><span class="p">)</span>
  <span class="kr">where</span>
    <span class="nv">adjacent</span> <span class="o">=</span> <span class="nv">groupBy</span> <span class="p">((</span><span class="o">==</span><span class="p">)</span> <span class="p">`</span><span class="nv">on</span><span class="p">`</span> <span class="nv">snd</span><span class="p">)</span>
    <span class="nv">renumber</span> <span class="o">=</span> <span class="nv">uncurry</span> <span class="nv">replicate</span> <span class="o">.</span> <span class="p">(</span><span class="nv">length</span> <span class="o">&amp;&amp;&amp;</span> <span class="nv">minimumBy</span> <span class="p">(</span><span class="nv">compare</span> <span class="p">`</span><span class="nv">on</span><span class="p">`</span> <span class="nv">fst</span><span class="p">))</span>

<span class="nv">count</span> <span class="o">::</span> <span class="p">[[(</span><span class="n">Int</span><span class="p">,</span><span class="n">BW</span><span class="p">)]]</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Int</span><span class="p">,</span><span class="n">Int</span><span class="p">)</span>
<span class="nv">count</span> <span class="o">=</span> <span class="p">(</span><span class="nv">cnt</span> <span class="o">***</span> <span class="nv">cnt</span><span class="p">)</span> <span class="o">.</span> <span class="nv">partition</span> <span class="p">((</span><span class="n">W</span> <span class="o">==</span><span class="p">)</span> <span class="o">.</span> <span class="nv">snd</span><span class="p">)</span> <span class="o">.</span> <span class="nv">concat</span>
  <span class="kr">where</span> 
    <span class="nv">cnt</span> <span class="o">=</span> <span class="nv">length</span> <span class="o">.</span> <span class="nv">groupBy</span> <span class="p">((</span><span class="o">==</span><span class="p">)</span> <span class="p">`</span><span class="nv">on</span><span class="p">`</span> <span class="nv">fst</span><span class="p">)</span> <span class="o">.</span> <span class="nv">sortBy</span> <span class="p">(</span><span class="nv">compare</span> <span class="p">`</span><span class="nv">on</span><span class="p">`</span> <span class="nv">fst</span><span class="p">)</span>

<span class="nv">islands</span> <span class="o">::</span> <span class="p">[[</span><span class="n">BW</span><span class="p">]]</span> <span class="o">-&gt;</span> <span class="p">[[(</span><span class="n">Int</span><span class="p">,</span><span class="n">BW</span><span class="p">)]]</span>
<span class="nv">islands</span> <span class="o">=</span> <span class="nv">fst</span> <span class="o">.</span> <span class="nv">head</span>
        <span class="o">.</span> <span class="nv">filter</span> <span class="p">(</span><span class="nv">uncurry</span> <span class="p">((</span><span class="o">==</span><span class="p">)</span> <span class="o">.</span> <span class="nv">transpose</span><span class="p">))</span>
        <span class="o">.</span> <span class="nv">uncurry</span> <span class="nv">zip</span> 
        <span class="o">.</span> <span class="p">(</span><span class="nv">id</span> <span class="o">&amp;&amp;&amp;</span> <span class="nv">tail</span><span class="p">)</span> 
        <span class="o">.</span> <span class="nv">iterate</span> <span class="p">(</span><span class="nv">transpose</span> <span class="o">.</span> <span class="nv">grouping</span><span class="p">)</span>
        <span class="o">.</span> <span class="nv">numbering</span> 
  <span class="kr">where</span>
    <span class="nv">numbering</span> <span class="o">=</span> <span class="nv">snd</span> <span class="o">.</span> <span class="nv">mapAccumL</span> <span class="nv">number</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="p">]</span>  
    <span class="nv">number</span> <span class="p">(</span><span class="nv">n</span><span class="o">:</span><span class="nv">ns</span><span class="p">)</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">number</span> <span class="nv">ns</span> <span class="nv">xs</span> <span class="kr">of</span> <span class="p">(</span><span class="nv">ns&#39;</span><span class="p">,</span><span class="nv">ys</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">ns&#39;</span><span class="p">,(</span><span class="nv">n</span><span class="p">,</span><span class="nv">x</span><span class="p">)</span><span class="o">:</span><span class="nv">ys</span><span class="p">)</span>
    <span class="nv">number</span> <span class="nv">ns</span>     <span class="p">[]</span>     <span class="o">=</span> <span class="p">(</span><span class="nv">ns</span><span class="p">,[])</span>

<span class="nv">sample1</span> <span class="o">=</span> <span class="p">[[</span><span class="n">W</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">W</span><span class="p">]</span>
          <span class="p">,[</span><span class="n">W</span><span class="p">,</span><span class="n">W</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">W</span><span class="p">]</span>
          <span class="p">,[</span><span class="n">W</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">W</span><span class="p">,</span><span class="n">W</span><span class="p">]</span>
          <span class="p">,[</span><span class="n">W</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">W</span><span class="p">]]</span>

<span class="nv">sample2</span> <span class="o">=</span> <span class="p">[[</span><span class="n">W</span><span class="p">,</span><span class="n">W</span><span class="p">,</span><span class="n">W</span><span class="p">,</span><span class="n">W</span><span class="p">]</span>
          <span class="p">,[</span><span class="n">B</span><span class="p">,</span><span class="n">W</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">W</span><span class="p">]</span>
          <span class="p">,[</span><span class="n">W</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">W</span><span class="p">,</span><span class="n">W</span><span class="p">]</span>
          <span class="p">,[</span><span class="n">W</span><span class="p">,</span><span class="n">W</span><span class="p">,</span><span class="n">W</span><span class="p">,</span><span class="n">W</span><span class="p">]]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8062/addtag/" class="addtag" id="addtag_8062">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/ghc-6.10.1/">ghc-6.10.1</a>
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/utf8-string/">utf8-string</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8062/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8062/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8062"
  >-</span><span
  class="button yellow"
  id="rating_z_8062"
  >0</span><span 
  class="button green"
  id="rating_p_8062"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8062/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8063">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/793/" target="_top">genzou</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8063/">#8063</a>(<script language="JavaScript">print_time(new Date("2008/11/20 22:01 GMT"));</script><noscript>2008/11/20 22:01 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ロジックが汚いですね。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre>def text = &quot;&quot;&quot;\
□□□□
■□■□
□■□□
□□□□&quot;&quot;&quot;

def score = [&quot;■&quot;:0, &quot;□&quot;:0]

board = text.readLines().collect{ it.split(&quot;&quot;)[1..-1] }
XMAX = board.size() - 1
YMAX = board[0].size() - 1

def eat( mark, x, y ){
    [[&quot;x&quot;:x-1, &quot;y&quot;:y], [&quot;x&quot;:x+1, &quot;y&quot;:y], [&quot;x&quot;:x, &quot;y&quot;:y-1], [&quot;x&quot;:x, &quot;y&quot;:y+1]].findAll{
        (it.x in 0..XMAX) &amp;&amp; (it.y in 0..YMAX) &amp;&amp; board[it.x][it.y] == mark
    }.each{
        board[it.x][it.y] = &quot;×&quot;
        eat( mark, it.x, it.y )
    }
}

XMAX.times{ x -&gt;
    YMAX.times{ y -&gt;
        def mark = board[x][y]
        if( mark != &quot;×&quot; ){
            score[mark]++
            eat(mark, x, y)
        }
    }
}

println score
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8063/addtag/" class="addtag" id="addtag_8063">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/groovy/">groovy</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8063/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8063/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8063"
  >-</span><span
  class="button yellow"
  id="rating_z_8063"
  >0</span><span 
  class="button green"
  id="rating_p_8063"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8063/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8064">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/793/" target="_top">genzou</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8064/">#8064</a>(<script language="JavaScript">print_time(new Date("2008/11/21 04:20 GMT"));</script><noscript>2008/11/21 04:20 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>しまった・・・誤り発見です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre>def text = &quot;&quot;&quot;\
□■■□
■□□□
□□□■
□■■□&quot;&quot;&quot;

def score = [&quot;■&quot;:0, &quot;□&quot;:0]

board = text.readLines().collect{ it.split(&quot;&quot;)[1..-1] }
XMAX = board.size() - 1
YMAX = board[0].size() - 1

def eatAround( mark, x, y ){
    [[&quot;x&quot;:x-1, &quot;y&quot;:y], [&quot;x&quot;:x+1, &quot;y&quot;:y], [&quot;x&quot;:x, &quot;y&quot;:y-1], [&quot;x&quot;:x, &quot;y&quot;:y+1]].findAll{
        (it.x in 0..XMAX) &amp;&amp; (it.y in 0..YMAX) &amp;&amp; board[it.x][it.y] == mark
    }.each{
        board[it.x][it.y] = &quot;×&quot;
        eatAround( mark, it.x, it.y )
    }
}

(0..XMAX).each{ x -&gt;
    (0..YMAX).each{ y -&gt;
        def mark = board[x][y]
        if( mark != &quot;×&quot; ){
            score[mark]++
            eatAround(mark, x, y)
        }
    }
}

println score
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8064/addtag/" class="addtag" id="addtag_8064">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/groovy/">groovy</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8064/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8064/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8064"
  >-</span><span
  class="button yellow"
  id="rating_z_8064"
  >0</span><span 
  class="button green"
  id="rating_p_8064"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8064/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8065">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/793/" target="_top">genzou</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8065/">#8065</a>(<script language="JavaScript">print_time(new Date("2008/11/20 22:30 GMT"));</script><noscript>2008/11/20 22:30 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>何度もごめんなさい。
ほんのちょっと修正です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre>def text = &quot;&quot;&quot;\
□■■□
■□□■
□□■□
□■■□&quot;&quot;&quot;

def score = [&quot;■&quot;:0, &quot;□&quot;:0]

board = text.readLines().collect{ it.split(&quot;&quot;)[1..-1] }
XMAX = board.size() - 1
YMAX = board[0].size() - 1

def eat( mark, x, y ){
    board[x][y] = &quot;×&quot;
    // 周辺もいただきます♪
    [[&quot;x&quot;:x-1, &quot;y&quot;:y], [&quot;x&quot;:x+1, &quot;y&quot;:y], [&quot;x&quot;:x, &quot;y&quot;:y-1], [&quot;x&quot;:x, &quot;y&quot;:y+1]].findAll{
        (it.x in 0..XMAX) &amp;&amp; (it.y in 0..YMAX) &amp;&amp; board[it.x][it.y] == mark
    }.each{
        eat( mark, it.x, it.y )
    }
}

(0..XMAX).each{ x -&gt;
    (0..YMAX).each{ y -&gt;
        def mark = board[x][y]
        if( mark != &quot;×&quot; ){
            score[mark]++
            eat(mark, x, y)
        }
    }
}

println score
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8065/addtag/" class="addtag" id="addtag_8065">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/groovy/">groovy</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8065/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8065/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8065"
  >-</span><span
  class="button yellow"
  id="rating_z_8065"
  >0</span><span 
  class="button green"
  id="rating_p_8065"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8065/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8066">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8066/">#8066</a>(<script language="JavaScript">print_time(new Date("2008/11/20 23:56 GMT"));</script><noscript>2008/11/20 23:56 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  これで例の2問は解けました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90</pre></td><td class="code"><div class="highlight"><pre><span class="c">//http://ja.doukaku.org/219/</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Drawing</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>

<span class="k">namespace</span> <span class="err">どう書く</span><span class="nn">_org</span><span class="err">島の数をカウントする</span> <span class="k">{</span>
    <span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
            <span class="kt">string</span> <span class="n">map</span> <span class="p">=</span> <span class="s">@&quot;</span>
<span class="s">□□□□</span>
<span class="s">■□■□</span>
<span class="s">□■□□</span>
<span class="s">□□□□</span>
<span class="s">&quot;</span><span class="p">;</span>
            <span class="n">islandCount</span><span class="p">(</span><span class="n">map</span><span class="p">);</span>

            <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
        <span class="k">}</span>

        <span class="k">static</span> <span class="k">void</span> <span class="nf">islandCount</span><span class="p">(</span><span class="kt">string</span> <span class="n">map_</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">map</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="n">map_</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="k">new</span> <span class="kt">string</span><span class="p">[]</span> <span class="k">{</span> <span class="n">Environment</span><span class="p">.</span><span class="n">NewLine</span> <span class="k">}</span><span class="p">,</span> <span class="n">StringSplitOptions</span><span class="p">.</span><span class="n">RemoveEmptyEntries</span><span class="p">));</span>
            <span class="n">List</span><span class="p">&lt;</span><span class="n">Island</span><span class="p">&gt;</span> <span class="n">islandList</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Island</span><span class="p">&gt;();</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">y</span> <span class="p">&lt;</span> <span class="n">map</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">y</span><span class="p">++)</span> <span class="k">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&lt;</span> <span class="n">map</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Length</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span> <span class="k">{</span>
                    <span class="kt">char</span> <span class="n">cell</span> <span class="p">=</span> <span class="n">map</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">];</span>
                    <span class="kt">bool</span> <span class="n">flag</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">islandIndex</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">islandIndex</span> <span class="p">&lt;</span> <span class="n">islandList</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">islandIndex</span><span class="p">++)</span> <span class="k">{</span>
                        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">cellIndex</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">cellIndex</span> <span class="p">&lt;</span> <span class="n">islandList</span><span class="p">[</span><span class="n">islandIndex</span><span class="p">].</span><span class="n">Count</span><span class="p">;</span> <span class="n">cellIndex</span><span class="p">++)</span> <span class="k">{</span>
                            <span class="k">if</span><span class="p">(</span><span class="n">isNext</span><span class="p">(</span><span class="n">islandList</span><span class="p">[</span><span class="n">islandIndex</span><span class="p">][</span><span class="n">cellIndex</span><span class="p">],</span> <span class="k">new</span> <span class="n">Point</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span> <span class="p">&amp;&amp;</span> <span class="n">map</span><span class="p">[</span><span class="n">islandList</span><span class="p">[</span><span class="n">islandIndex</span><span class="p">][</span><span class="m">0</span><span class="p">].</span><span class="n">Y</span><span class="p">][</span><span class="n">islandList</span><span class="p">[</span><span class="n">islandIndex</span><span class="p">][</span><span class="m">0</span><span class="p">].</span><span class="n">X</span><span class="p">]</span> <span class="p">==</span> <span class="n">cell</span><span class="p">)</span> <span class="k">{</span>
                                <span class="n">islandList</span><span class="p">[</span><span class="n">islandIndex</span><span class="p">].</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">Point</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">));</span>
                                <span class="n">flag</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
                                <span class="k">break</span><span class="p">;</span>
                            <span class="k">}</span>
                        <span class="k">}</span>
                    <span class="k">}</span>
                    <span class="k">if</span><span class="p">(!</span><span class="n">flag</span><span class="p">)</span> <span class="k">{</span>
                        <span class="n">Island</span> <span class="n">island</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Island</span><span class="p">();</span>
                        <span class="n">island</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">Point</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">));</span>
                        <span class="n">islandList</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">island</span><span class="p">);</span>
                    <span class="k">}</span>
                <span class="k">}</span>
            <span class="k">}</span>

            <span class="k">while</span><span class="p">(</span><span class="n">islandListMarge</span><span class="p">(</span><span class="n">islandList</span><span class="p">,</span> <span class="n">map</span><span class="p">))</span> <span class="k">{</span> <span class="k">}</span>

            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;白の島は&quot;</span> <span class="p">+</span> <span class="n">islandList</span><span class="p">.</span><span class="n">Count</span><span class="p">&lt;</span><span class="n">Island</span><span class="p">&gt;((</span><span class="n">x</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="n">map</span><span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Y</span><span class="p">][</span><span class="n">x</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">X</span><span class="p">]</span> <span class="p">==</span> <span class="sc">&#39;□&#39;</span><span class="p">)).</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;つ&quot;</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;黒の島は&quot;</span> <span class="p">+</span> <span class="n">islandList</span><span class="p">.</span><span class="n">Count</span><span class="p">&lt;</span><span class="n">Island</span><span class="p">&gt;((</span><span class="n">x</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="n">map</span><span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Y</span><span class="p">][</span><span class="n">x</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">X</span><span class="p">]</span> <span class="p">==</span> <span class="sc">&#39;■&#39;</span><span class="p">)).</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;つ&quot;</span><span class="p">);</span>
        <span class="k">}</span>

        <span class="k">static</span> <span class="kt">bool</span> <span class="nf">islandListMarge</span><span class="p">(</span><span class="n">List</span><span class="p">&lt;</span><span class="n">Island</span><span class="p">&gt;</span> <span class="n">islandList</span><span class="p">,</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">map</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">islandList</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;</span> <span class="n">islandList</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span> <span class="k">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="n">j</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
                    <span class="n">Island</span> <span class="n">a</span> <span class="p">=</span> <span class="n">islandList</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                    <span class="n">Island</span> <span class="n">b</span> <span class="p">=</span> <span class="n">islandList</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">map</span><span class="p">[</span><span class="n">a</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Y</span><span class="p">][</span><span class="n">a</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">X</span><span class="p">]</span> <span class="p">!=</span> <span class="n">map</span><span class="p">[</span><span class="n">b</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Y</span><span class="p">][</span><span class="n">b</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">X</span><span class="p">])</span> <span class="k">continue</span><span class="p">;</span>
                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">a_</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">a_</span> <span class="p">&lt;</span> <span class="n">a</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">a_</span><span class="p">++)</span> <span class="k">{</span>
                        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">b_</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span><span class="n">b_</span> <span class="p">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">b_</span><span class="p">++)</span> <span class="k">{</span>
                            <span class="k">if</span><span class="p">(</span><span class="n">isNext</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">a_</span><span class="p">],</span> <span class="n">b</span><span class="p">[</span><span class="n">b_</span><span class="p">]))</span> <span class="k">{</span>
                                <span class="n">a</span><span class="p">.</span><span class="n">AddRange</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
                                <span class="n">islandList</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
                                <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
                            <span class="k">}</span>
                        <span class="k">}</span>
                    <span class="k">}</span>
                <span class="k">}</span>
            <span class="k">}</span>
            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
        <span class="k">}</span>

        <span class="k">static</span> <span class="kt">bool</span> <span class="nf">isNext</span><span class="p">(</span><span class="n">Point</span> <span class="n">a</span><span class="p">,</span> <span class="n">Point</span> <span class="n">b</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">Point</span> <span class="n">tmpB</span> <span class="p">=</span> <span class="n">b</span><span class="p">;</span>
            <span class="kt">bool</span> <span class="n">r</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="p">-</span><span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="p">-</span><span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span> <span class="k">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="p">*</span> <span class="n">j</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
                    <span class="n">tmpB</span><span class="p">.</span><span class="n">Offset</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">a</span> <span class="p">==</span> <span class="n">tmpB</span><span class="p">)</span> <span class="n">r</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
                    <span class="n">tmpB</span> <span class="p">=</span> <span class="n">b</span><span class="p">;</span>
                <span class="k">}</span>
            <span class="k">}</span>
            <span class="k">return</span> <span class="n">r</span><span class="p">;</span>
        <span class="k">}</span>
    <span class="k">}</span>

    <span class="k">class</span> <span class="nc">Island</span> <span class="p">:</span><span class="n">List</span><span class="p">&lt;</span><span class="n">Point</span><span class="p">&gt;</span> <span class="k">{</span>

    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8066/addtag/" class="addtag" id="addtag_8066">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/C%233.0/">C#3.0</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8066/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8066/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8066"
  >-</span><span
  class="button yellow"
  id="rating_z_8066"
  >0</span><span 
  class="button green"
  id="rating_p_8066"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8066/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8067">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/591/" target="_top">99yen</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8067/">#8067</a>(<script language="JavaScript">print_time(new Date("2008/11/21 06:21 GMT"));</script><noscript>2008/11/21 06:21 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/nadesico/">
	  なでしこ
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>画像に変換して、塗っていってます。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre>map=&quot;□■■□
□□■□
□■□□
□■■□&quot;
tmpとは配列
mapを改行で区切るを反復
    tmpの回数-1に(対象を文字列分解の表行列交換)を配列一括挿入
map_h=aで改行の出現回数+1
map_w=aから改行まで切り取るの文字数
island_black=0
island_white=0
島とはイメージ
島の高さはmap_h
島の幅はmap_w
Iで0からmap_h-1まで繰り返す
    Jで0からmap_w-1まで繰り返す
        もし、tmp[I,J]=&quot;■&quot;ならば
            島のJ,Iへ黒色を点描画
Iで0からmap_h-1まで繰り返す
    Jで0からmap_w-1まで繰り返す
        島のJ,Iを点取得で条件分岐
            黒色ならば
                island_black=island_black+1
                島のJ,Iを緑色で塗る
            白色ならば
                island_white=island_white+1
                島のJ,Iを緑色で塗る
「黒い島は{island_black}個
白い島は{island_white}個」を言う
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8067/addtag/" class="addtag" id="addtag_8067">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/nadesico/">
		なでしこ
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8067/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8067/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8067"
  >-</span><span
  class="button yellow"
  id="rating_z_8067"
  >0</span><span 
  class="button green"
  id="rating_p_8067"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8067/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8068">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8068/">#8068</a>(<script language="JavaScript">print_time(new Date("2008/11/21 08:02 GMT"));</script><noscript>2008/11/21 08:02 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>実質C言語ですね。
C++らしいのも考えたい…。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>

<span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">Width</span>  <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
<span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">Height</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>

<span class="kt">void</span> <span class="n">markCell</span><span class="p">(</span><span class="kt">int</span> <span class="n">row</span><span class="p">,</span> <span class="kt">int</span> <span class="n">col</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">cells</span><span class="p">[</span><span class="n">Height</span><span class="p">][</span><span class="n">Width</span><span class="p">],</span> <span class="kt">bool</span> <span class="n">marks</span><span class="p">[</span><span class="n">Height</span><span class="p">][</span><span class="n">Width</span><span class="p">])</span>
<span class="p">{</span>
    <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="k">if</span><span class="p">((</span><span class="n">row</span> <span class="o">&gt;</span> <span class="mi">0</span>         <span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span> <span class="o">!</span> <span class="n">marks</span><span class="p">[</span><span class="n">row</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">col</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">==</span> <span class="n">cells</span><span class="p">[</span><span class="n">row</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">col</span><span class="p">]))</span> <span class="n">markCell</span><span class="p">(</span><span class="n">row</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">cells</span><span class="p">,</span> <span class="n">marks</span><span class="p">);</span>
    <span class="k">if</span><span class="p">((</span><span class="n">row</span> <span class="o">&lt;</span> <span class="n">Height</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span> <span class="o">!</span> <span class="n">marks</span><span class="p">[</span><span class="n">row</span> <span class="o">+</span> <span class="mi">1</span><span class="p">][</span><span class="n">col</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">==</span> <span class="n">cells</span><span class="p">[</span><span class="n">row</span> <span class="o">+</span> <span class="mi">1</span><span class="p">][</span><span class="n">col</span><span class="p">]))</span> <span class="n">markCell</span><span class="p">(</span><span class="n">row</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">cells</span><span class="p">,</span> <span class="n">marks</span><span class="p">);</span>
    <span class="k">if</span><span class="p">((</span><span class="n">col</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>          <span class="o">&amp;&amp;</span> <span class="p">(</span> <span class="o">!</span> <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">==</span> <span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]))</span> <span class="n">markCell</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">cells</span><span class="p">,</span> <span class="n">marks</span><span class="p">);</span>
    <span class="k">if</span><span class="p">((</span><span class="n">col</span> <span class="o">&lt;</span> <span class="n">Width</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>  <span class="o">&amp;&amp;</span> <span class="p">(</span> <span class="o">!</span> <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span> <span class="o">+</span> <span class="mi">1</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">==</span> <span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]))</span> <span class="n">markCell</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">cells</span><span class="p">,</span> <span class="n">marks</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">doukaku219</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="n">cells</span><span class="p">[</span><span class="n">Height</span><span class="p">][</span><span class="n">Width</span><span class="p">])</span>
<span class="p">{</span>
    <span class="kt">int</span>  <span class="n">countWhite</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span>  <span class="n">countBlack</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">marks</span><span class="p">[</span><span class="n">Height</span><span class="p">][</span><span class="n">Width</span><span class="p">];</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">row</span> <span class="o">&lt;</span> <span class="n">Height</span><span class="p">;</span> <span class="o">++</span><span class="n">row</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">col</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">col</span> <span class="o">&lt;</span> <span class="n">Width</span><span class="p">;</span> <span class="o">++</span><span class="n">col</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">row</span> <span class="o">&lt;</span> <span class="n">Height</span><span class="p">;</span> <span class="o">++</span><span class="n">row</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">col</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">col</span> <span class="o">&lt;</span> <span class="n">Width</span><span class="p">;</span> <span class="o">++</span><span class="n">col</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span> <span class="o">!</span> <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="o">++</span><span class="n">countWhite</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="o">++</span><span class="n">countBlack</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">markCell</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">cells</span><span class="p">,</span> <span class="n">marks</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;白の島は&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">countWhite</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;つ&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;黒の島は&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">countBlack</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;つ&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="p">[])</span>
<span class="p">{</span>
    <span class="k">const</span> <span class="kt">char</span> <span class="n">probrem0</span><span class="p">[</span><span class="n">Width</span><span class="p">][</span><span class="n">Height</span><span class="p">]</span> <span class="o">=</span>
    <span class="p">{</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span> <span class="p">}</span>
    <span class="p">};</span>

    <span class="k">const</span> <span class="kt">char</span> <span class="n">probrem1</span><span class="p">[</span><span class="n">Width</span><span class="p">][</span><span class="n">Height</span><span class="p">]</span> <span class="o">=</span>
    <span class="p">{</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">}</span> 
    <span class="p">};</span>

    <span class="n">doukaku219</span><span class="p">(</span><span class="n">probrem0</span><span class="p">);</span>
    <span class="n">doukaku219</span><span class="p">(</span><span class="n">probrem1</span><span class="p">);</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8068/addtag/" class="addtag" id="addtag_8068">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8068/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8068/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8068"
  >-</span><span
  class="button yellow"
  id="rating_z_8068"
  >0</span><span 
  class="button green"
  id="rating_p_8068"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100605045807/http://ja.doukaku.org/comment/8068/">
    1
    reply
  </a>

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8068/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8069">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/833/" target="_top">mattsan</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8069/">#8069</a>(<script language="JavaScript">print_time(new Date("2008/11/21 08:03 GMT"));</script><noscript>2008/11/21 08:03 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ログインし忘れた orz。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8069/addtag/" class="addtag" id="addtag_8069">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8069"
  >-</span><span
  class="button yellow"
  id="rating_z_8069"
  >0</span><span 
  class="button green"
  id="rating_p_8069"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8068/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8069/root/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100605045807/http://ja.doukaku.org/comment/8069/">
    1
    reply
  </a>

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8069/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8070">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/833/" target="_top">mattsan</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8070/">#8070</a>(<script language="JavaScript">print_time(new Date("2008/11/21 14:12 GMT"));</script><noscript>2008/11/21 14:12 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>おまけにこまかいミスがちらほら。とほほ orz。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>

<span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">Width</span>  <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
<span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">Height</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>

<span class="kt">void</span> <span class="n">markCell</span><span class="p">(</span><span class="kt">int</span> <span class="n">row</span><span class="p">,</span> <span class="kt">int</span> <span class="n">col</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">cells</span><span class="p">[</span><span class="n">Height</span><span class="p">][</span><span class="n">Width</span><span class="p">],</span> <span class="kt">bool</span> <span class="n">marks</span><span class="p">[</span><span class="n">Height</span><span class="p">][</span><span class="n">Width</span><span class="p">])</span>
<span class="p">{</span>
    <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="k">if</span><span class="p">((</span><span class="n">row</span> <span class="o">&gt;</span> <span class="mi">0</span>         <span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span> <span class="o">!</span> <span class="n">marks</span><span class="p">[</span><span class="n">row</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">col</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">==</span> <span class="n">cells</span><span class="p">[</span><span class="n">row</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">col</span><span class="p">]))</span> <span class="n">markCell</span><span class="p">(</span><span class="n">row</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">cells</span><span class="p">,</span> <span class="n">marks</span><span class="p">);</span>
    <span class="k">if</span><span class="p">((</span><span class="n">row</span> <span class="o">&lt;</span> <span class="n">Height</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span> <span class="o">!</span> <span class="n">marks</span><span class="p">[</span><span class="n">row</span> <span class="o">+</span> <span class="mi">1</span><span class="p">][</span><span class="n">col</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">==</span> <span class="n">cells</span><span class="p">[</span><span class="n">row</span> <span class="o">+</span> <span class="mi">1</span><span class="p">][</span><span class="n">col</span><span class="p">]))</span> <span class="n">markCell</span><span class="p">(</span><span class="n">row</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">cells</span><span class="p">,</span> <span class="n">marks</span><span class="p">);</span>
    <span class="k">if</span><span class="p">((</span><span class="n">col</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>          <span class="o">&amp;&amp;</span> <span class="p">(</span> <span class="o">!</span> <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">==</span> <span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]))</span> <span class="n">markCell</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">cells</span><span class="p">,</span> <span class="n">marks</span><span class="p">);</span>
    <span class="k">if</span><span class="p">((</span><span class="n">col</span> <span class="o">&lt;</span> <span class="n">Width</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>  <span class="o">&amp;&amp;</span> <span class="p">(</span> <span class="o">!</span> <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span> <span class="o">+</span> <span class="mi">1</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">==</span> <span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]))</span> <span class="n">markCell</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">cells</span><span class="p">,</span> <span class="n">marks</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">doukaku219</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="n">cells</span><span class="p">[</span><span class="n">Height</span><span class="p">][</span><span class="n">Width</span><span class="p">])</span>
<span class="p">{</span>
    <span class="kt">int</span>  <span class="n">countWhite</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span>  <span class="n">countBlack</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">marks</span><span class="p">[</span><span class="n">Height</span><span class="p">][</span><span class="n">Width</span><span class="p">];</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">row</span> <span class="o">&lt;</span> <span class="n">Height</span><span class="p">;</span> <span class="o">++</span><span class="n">row</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">col</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">col</span> <span class="o">&lt;</span> <span class="n">Width</span><span class="p">;</span> <span class="o">++</span><span class="n">col</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">row</span> <span class="o">&lt;</span> <span class="n">Height</span><span class="p">;</span> <span class="o">++</span><span class="n">row</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">col</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">col</span> <span class="o">&lt;</span> <span class="n">Width</span><span class="p">;</span> <span class="o">++</span><span class="n">col</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span> <span class="o">!</span> <span class="n">marks</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">cells</span><span class="p">[</span><span class="n">row</span><span class="p">][</span><span class="n">col</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="o">++</span><span class="n">countWhite</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="o">++</span><span class="n">countBlack</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="n">markCell</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">,</span> <span class="n">cells</span><span class="p">,</span> <span class="n">marks</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;白の島は&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">countWhite</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;つ&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;黒の島は&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">countBlack</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;つ&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="p">[])</span>
<span class="p">{</span>
    <span class="k">const</span> <span class="kt">char</span> <span class="n">problem0</span><span class="p">[</span><span class="n">Width</span><span class="p">][</span><span class="n">Height</span><span class="p">]</span> <span class="o">=</span>
    <span class="p">{</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span> <span class="p">}</span>
    <span class="p">};</span>

    <span class="k">const</span> <span class="kt">char</span> <span class="n">problem1</span><span class="p">[</span><span class="n">Width</span><span class="p">][</span><span class="n">Height</span><span class="p">]</span> <span class="o">=</span>
    <span class="p">{</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">}</span> 
    <span class="p">};</span>

    <span class="n">doukaku219</span><span class="p">(</span><span class="n">problem0</span><span class="p">);</span>
    <span class="n">doukaku219</span><span class="p">(</span><span class="n">problem1</span><span class="p">);</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8070/addtag/" class="addtag" id="addtag_8070">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8070/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8070/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8070"
  >-</span><span
  class="button yellow"
  id="rating_z_8070"
  >0</span><span 
  class="button green"
  id="rating_p_8070"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8069/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8070/root/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8070/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  

  
    





<div class="comment" id="comment8071">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8071/">#8071</a>(<script language="JavaScript">print_time(new Date("2008/11/21 11:15 GMT"));</script><noscript>2008/11/21 11:15 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>

<span class="k">static</span>
<span class="kt">void</span> <span class="nf">walk</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">board</span><span class="p">,</span> <span class="kt">int</span> <span class="n">W</span><span class="p">,</span> <span class="kt">int</span> <span class="n">H</span><span class="p">,</span> <span class="kt">int</span> <span class="n">pos</span><span class="p">,</span> <span class="kt">int</span> <span class="n">color</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">board</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span> <span class="o">==</span> <span class="n">color</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">/</span> <span class="n">W</span><span class="p">,</span> <span class="n">col</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">%</span> <span class="n">W</span><span class="p">;</span>
        <span class="n">board</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">col</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="n">walk</span><span class="p">(</span><span class="n">board</span><span class="p">,</span> <span class="n">W</span><span class="p">,</span> <span class="n">H</span><span class="p">,</span> <span class="n">pos</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">color</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">row</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="n">walk</span><span class="p">(</span><span class="n">board</span><span class="p">,</span> <span class="n">W</span><span class="p">,</span> <span class="n">H</span><span class="p">,</span> <span class="n">pos</span> <span class="o">-</span> <span class="n">W</span><span class="p">,</span> <span class="n">color</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">col</span> <span class="o">&lt;</span> <span class="n">W</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="n">walk</span><span class="p">(</span><span class="n">board</span><span class="p">,</span> <span class="n">W</span><span class="p">,</span> <span class="n">H</span><span class="p">,</span> <span class="n">pos</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">color</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">row</span> <span class="o">&lt;</span> <span class="n">H</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="n">walk</span><span class="p">(</span><span class="n">board</span><span class="p">,</span> <span class="n">W</span><span class="p">,</span> <span class="n">H</span><span class="p">,</span> <span class="n">pos</span> <span class="o">+</span> <span class="n">W</span><span class="p">,</span> <span class="n">color</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="k">static</span>
<span class="kt">void</span> <span class="nf">solve</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">board</span><span class="p">,</span> <span class="kt">int</span> <span class="n">width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">height</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">result</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">pos</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="n">width</span> <span class="o">*</span> <span class="n">height</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">pos</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">pos</span> <span class="o">&lt;</span> <span class="n">size</span><span class="p">;</span> <span class="o">++</span><span class="n">pos</span><span class="p">)</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">board</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="o">++</span><span class="n">result</span><span class="p">[</span><span class="n">board</span><span class="p">[</span><span class="n">pos</span><span class="p">]];</span>
            <span class="n">walk</span><span class="p">(</span><span class="n">board</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">pos</span><span class="p">,</span> <span class="n">board</span><span class="p">[</span><span class="n">pos</span><span class="p">]);</span>
        <span class="p">}</span>
<span class="p">}</span>
<span class="k">static</span>
<span class="kt">void</span> <span class="nf">pr</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">**</span><span class="n">colors</span><span class="p">,</span> <span class="k">const</span> <span class="kt">int</span> <span class="o">*</span><span class="n">result</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">colors</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%sの島は%dつ</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">colors</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">colors</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="s">&quot;白&quot;</span><span class="p">,</span> <span class="s">&quot;黒&quot;</span><span class="p">,</span> <span class="mi">0</span> <span class="p">};</span>
    <span class="kt">char</span> <span class="n">a1</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span> <span class="p">};</span>
    <span class="kt">char</span> <span class="n">a2</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span> <span class="p">};</span>
    <span class="kt">int</span> <span class="n">r1</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">},</span> <span class="n">r2</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">};</span>
    <span class="n">solve</span><span class="p">(</span><span class="n">a1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">r1</span><span class="p">),</span> <span class="n">pr</span><span class="p">(</span><span class="n">colors</span><span class="p">,</span> <span class="n">r1</span><span class="p">);</span>
    <span class="n">solve</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">r2</span><span class="p">),</span> <span class="n">pr</span><span class="p">(</span><span class="n">colors</span><span class="p">,</span> <span class="n">r2</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8071/addtag/" class="addtag" id="addtag_8071">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8071/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8071/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8071"
  >-</span><span
  class="button yellow"
  id="rating_z_8071"
  >0</span><span 
  class="button green"
  id="rating_p_8071"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8071/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8072">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/840/" target="_top">leque</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8072/">#8072</a>(<script language="JavaScript">print_time(new Date("2008/11/22 00:41 GMT"));</script><noscript>2008/11/22 00:41 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>特にひねりもなく。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-43</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">count-island</span> <span class="nv">target</span> <span class="nv">board</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">h</span> <span class="p">(</span><span class="nb">vector-length </span><span class="nv">board</span><span class="p">))</span>
        <span class="p">(</span><span class="nf">w</span> <span class="p">(</span><span class="nb">vector-length </span><span class="p">(</span><span class="nb">vector-ref </span><span class="nv">board</span> <span class="mi">0</span><span class="p">)))</span>
        <span class="p">(</span><span class="nf">v</span> <span class="p">(</span><span class="nf">vector-map</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">i</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nf">vector-copy</span> <span class="nv">x</span><span class="p">))</span> <span class="nv">board</span><span class="p">))</span>
        <span class="p">(</span><span class="nf">c</span> <span class="p">(</span><span class="nf">gensym</span><span class="p">)))</span>
    <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">bref</span> <span class="nv">b</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">)</span> <span class="p">(</span><span class="nb">vector-ref </span><span class="p">(</span><span class="nb">vector-ref </span><span class="nv">b</span> <span class="nv">y</span><span class="p">)</span> <span class="nv">x</span><span class="p">))</span>
    <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">bset!</span> <span class="nv">b</span> <span class="nv">x</span> <span class="nv">y</span> <span class="nv">o</span><span class="p">)</span> <span class="p">(</span><span class="nb">vector-set! </span><span class="p">(</span><span class="nb">vector-ref </span><span class="nv">b</span> <span class="nv">y</span><span class="p">)</span> <span class="nv">x</span> <span class="nv">o</span><span class="p">))</span>
    <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">fill-paint!</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">)</span>
      <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">x</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nf">y</span> <span class="nv">y</span><span class="p">))</span>
        <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="k">or </span><span class="p">(</span><span class="nb">negative? </span><span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nb">&gt;= </span><span class="nv">y</span> <span class="nv">h</span><span class="p">)))</span>
              <span class="p">((</span><span class="nb">&gt;= </span><span class="nv">x</span> <span class="nv">w</span><span class="p">)</span>
               <span class="p">(</span><span class="nf">loop</span> <span class="mi">0</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">y</span> <span class="mi">1</span><span class="p">)))</span>
              <span class="p">((</span><span class="nb">equal? </span><span class="p">(</span><span class="nf">bref</span> <span class="nv">v</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">)</span> <span class="nv">target</span><span class="p">)</span>
               <span class="p">(</span><span class="nf">bset!</span> <span class="nv">v</span> <span class="nv">x</span> <span class="nv">y</span> <span class="nv">c</span><span class="p">)</span>
               <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">- </span><span class="nv">x</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">y</span><span class="p">)</span>
               <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">x</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">y</span><span class="p">)</span>
               <span class="p">(</span><span class="nf">loop</span> <span class="nv">x</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">y</span> <span class="mi">1</span><span class="p">))))))</span>
    <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">x</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">y</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">n</span> <span class="mi">0</span><span class="p">))</span>
      <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nb">&gt;= </span><span class="nv">y</span> <span class="nv">h</span><span class="p">)</span>
             <span class="nv">n</span><span class="p">)</span>
            <span class="p">((</span><span class="nb">&gt;= </span><span class="nv">x</span> <span class="nv">w</span><span class="p">)</span>
             <span class="p">(</span><span class="nf">loop</span> <span class="mi">0</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">y</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">n</span><span class="p">))</span>
            <span class="p">((</span><span class="nb">equal? </span><span class="p">(</span><span class="nf">bref</span> <span class="nv">v</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">)</span> <span class="nv">target</span><span class="p">)</span>
             <span class="p">(</span><span class="nf">fill-paint!</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">)</span>
             <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">x</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">y</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)))</span>
            <span class="p">(</span><span class="nf">else</span>
             <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">x</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">y</span> <span class="nv">n</span><span class="p">))))))</span>

<span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">bs</span> <span class="o">&#39;</span><span class="p">(</span><span class="o">#</span><span class="p">(</span><span class="o">#</span><span class="p">(</span><span class="mi">0</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">0</span><span class="p">)</span>
              <span class="o">#</span><span class="p">(</span><span class="mi">0</span> <span class="mi">0</span> <span class="mi">1</span> <span class="mi">0</span><span class="p">)</span>
              <span class="o">#</span><span class="p">(</span><span class="mi">0</span> <span class="mi">1</span> <span class="mi">0</span> <span class="mi">0</span><span class="p">)</span>
              <span class="o">#</span><span class="p">(</span><span class="mi">0</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">0</span><span class="p">))</span>
            <span class="o">#</span><span class="p">(</span><span class="o">#</span><span class="p">(</span><span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span><span class="p">)</span>
              <span class="o">#</span><span class="p">(</span><span class="mi">1</span> <span class="mi">0</span> <span class="mi">1</span> <span class="mi">0</span><span class="p">)</span>
              <span class="o">#</span><span class="p">(</span><span class="mi">0</span> <span class="mi">1</span> <span class="mi">0</span> <span class="mi">0</span><span class="p">)</span>
              <span class="o">#</span><span class="p">(</span><span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span><span class="p">)))))</span>
  <span class="p">(</span><span class="nb">for-each </span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">b</span><span class="p">)</span>
              <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;白の島は‾Aつ‾%黒の島は‾Aつ‾%&quot;</span>
                      <span class="p">(</span><span class="nf">count-island</span> <span class="mi">0</span> <span class="nv">b</span><span class="p">)</span>
                      <span class="p">(</span><span class="nf">count-island</span> <span class="mi">1</span> <span class="nv">b</span><span class="p">)))</span>
            <span class="nv">bs</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8072/addtag/" class="addtag" id="addtag_8072">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8072/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8072/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8072"
  >-</span><span
  class="button yellow"
  id="rating_z_8072"
  >0</span><span 
  class="button green"
  id="rating_p_8072"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8072/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8073">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/957/" target="_top">mtoyoshi</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8073/">#8073</a>(<script language="JavaScript">print_time(new Date("2008/11/22 23:07 GMT"));</script><noscript>2008/11/22 23:07 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="highlight"><pre><span class="no">WHITE</span> <span class="o">=</span> <span class="s2">&quot;□&quot;</span>
<span class="no">BLACK</span> <span class="o">=</span> <span class="s2">&quot;■&quot;</span>

<span class="no">AREA</span> <span class="o">=</span> <span class="o">[</span>
  <span class="sx">%w[□ □ □ □]</span><span class="p">,</span>
  <span class="sx">%w[■ □ ■ □]</span><span class="p">,</span>
  <span class="sx">%w[□ ■ □ □]</span><span class="p">,</span>
  <span class="sx">%w[□ □ □ □]</span>
<span class="o">]</span>

<span class="no">Mark</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">AREA</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">AREA</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">size</span><span class="p">,</span> <span class="kp">false</span><span class="p">)</span> <span class="p">}</span>

<span class="k">def</span> <span class="nf">marking</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
  <span class="k">return</span> <span class="kp">false</span> <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="no">AREA</span><span class="o">.</span><span class="n">size</span> <span class="o">||</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="no">AREA</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">size</span> <span class="o">||</span> <span class="no">AREA</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span> <span class="o">!=</span> <span class="n">color</span> <span class="o">||</span> <span class="no">Mark</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span> <span class="o">!=</span> <span class="kp">false</span>

  <span class="no">Mark</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span> <span class="o">=</span> <span class="kp">true</span>

  <span class="n">marking</span><span class="p">(</span><span class="n">x</span><span class="p">,</span>   <span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
  <span class="n">marking</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span>   <span class="n">color</span><span class="p">)</span>
  <span class="n">marking</span><span class="p">(</span><span class="n">x</span><span class="p">,</span>   <span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
  <span class="n">marking</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span>   <span class="n">color</span><span class="p">)</span>

  <span class="kp">true</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">loop</span><span class="p">(</span><span class="n">counter</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">AREA</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
    <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">AREA</span><span class="o">[</span><span class="n">x</span><span class="o">].</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">y</span><span class="o">|</span>
      <span class="n">counter</span> <span class="o">+=</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">marking</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">color</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">counter</span>
<span class="k">end</span>

<span class="nb">puts</span> <span class="s2">&quot;白の島は</span><span class="si">#{</span><span class="kp">loop</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="no">WHITE</span><span class="p">)</span><span class="si">}</span><span class="s2">です。&quot;</span>
<span class="nb">puts</span> <span class="s2">&quot;黒の島は</span><span class="si">#{</span><span class="kp">loop</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="no">BLACK</span><span class="p">)</span><span class="si">}</span><span class="s2">です。&quot;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8073/addtag/" class="addtag" id="addtag_8073">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8073/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8073/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8073"
  >-</span><span
  class="button yellow"
  id="rating_z_8073"
  >0</span><span 
  class="button green"
  id="rating_p_8073"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8073/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8074">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8074/">#8074</a>(<script language="JavaScript">print_time(new Date("2008/11/22 23:13 GMT"));</script><noscript>2008/11/22 23:13 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Scalaの練習として。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52</pre></td><td class="code"><div class="highlight"><pre>object Tile extends Enumeration {
  val White, Black, Fill = Value
}
import Tile._
  
class Q8053 {
  def countIsland(str : String, target : Value) = {
    var data = parse(str)
    var result = 0
    for (y &lt;- 0 to data.length - 1; x &lt;- 0 to data(y).length - 1) {
      if (data(y)(x) == target) {
        fill(data, y, x, target)
        result += 1
      }
    }
    result
  }

  def parse(str : String) = {
    str.lines.toList.map(_.toList.map( x =&gt; if (x == &#39;□&#39;) White else Black).toArray).toArray
  }

  def fill(data : Array[Array[Value]], y :Int, x :Int, target : Value):Unit = {
    if (y &lt; 0 || y &gt;= data.length || x &lt; 0 || x &gt;= data(y).length || data(y)(x) != target) {
      return
    }
    data(y)(x) = Fill
    fill(data, y-1, x, target)
    fill(data, y+1, x, target)
    fill(data, y, x-1, target)
    fill(data, y, x+1, target)
  }
}

object Main {
  val sample1 = &quot;&quot;&quot;□■■□
                  |□□■□
                  |□■□□
                  |□■■□&quot;&quot;&quot;.stripMargin

  val sample2 = &quot;&quot;&quot;□□□□
                  |■□■□
                  |□■□□
                  |□□□□&quot;&quot;&quot;.stripMargin

  def main(args : Array[String]) = {
    var q = new Q8053
    println(q countIsland(sample1, White)) // 2
    println(q countIsland(sample1, Black)) // 2
    println(q countIsland(sample2, White)) // 1
    println(q countIsland(sample2, Black)) // 3
  }
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8074/addtag/" class="addtag" id="addtag_8074">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8074/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8074/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8074"
  >-</span><span
  class="button yellow"
  id="rating_z_8074"
  >0</span><span 
  class="button green"
  id="rating_p_8074"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100605045807/http://ja.doukaku.org/comment/8074/">
    1
    reply
  </a>

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8074/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8076">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/912/" target="_top">kiris</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8076/">#8076</a>(<script language="JavaScript">print_time(new Date("2008/11/23 22:40 GMT"));</script><noscript>2008/11/23 22:40 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>匿名で投稿してしまったのと気に食わない部分があったので少し修正して。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre>object Q8053 {
  object Tile extends Enumeration {
    val White, Black, Fill = Value
  }
  import Tile._
  
  def countIsland(str : String, target : Value) = {
    var data = parse(str)
    var result = 0
    for (y &lt;- 0 to data.length - 1; x &lt;- 0 to data(y).length - 1) {
      if (data(y)(x) == target) {
        fill(data, y, x, target)
        result += 1
      }
    }
    result
  }

  def parse(str : String) = {
    str.lines.toList.map(_.toList.map( x =&gt; if (x == &#39;□&#39;) White else Black).toArray).toArray
  }

  def fill(data : Array[Array[Value]], y :Int, x :Int, target : Value):Unit = {
    if (y &lt; 0 || y &gt;= data.length || x &lt; 0 || x &gt;= data(y).length || data(y)(x) != target) {
      return
    }
    data(y)(x) = Fill
    fill(data, y-1, x, target)
    fill(data, y+1, x, target)
    fill(data, y, x-1, target)
    fill(data, y, x+1, target)
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8076/addtag/" class="addtag" id="addtag_8076">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8076/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8076/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8076"
  >-</span><span
  class="button yellow"
  id="rating_z_8076"
  >0</span><span 
  class="button green"
  id="rating_p_8076"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8074/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8076/root/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8076/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment8075">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8075/">#8075</a>(<script language="JavaScript">print_time(new Date("2008/11/23 05:37 GMT"));</script><noscript>2008/11/23 05:37 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Squeak Smalltalk で。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre>| map islands deltas |
map := Matrix rows: 4 columns: 4 contents: 
    &#39;□□□□&#39;,
    &#39;■□■□&#39;,
    &#39;□■□□&#39;,
    &#39;□□□□&#39;.
deltas := {0@0. -1@0. 0@-1. 0@1. 1@0}.
islands := OrderedCollection new.
map withIndicesDo: [:elem :row :col |
    | neighs |
    neighs := (deltas select: [:dt |
        (map at: row + dt y at: col + dt x ifInvalid: nil) = elem]) asSet + (col@row).
    islands copy do: [:is |
        (is intersection: neighs) ifNotEmpty: [neighs addAll: (islands remove: is)]].
    islands add: neighs].
^(islands collect: [:is |
    | pos |
    pos := is anyOne.
    map at: pos y at: pos x]) asBag sortedCounts asArray
&quot;=&gt; {3-&gt;$■ . 1-&gt;$□} &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8075/addtag/" class="addtag" id="addtag_8075">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8075/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8075/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8075"
  >-</span><span
  class="button yellow"
  id="rating_z_8075"
  >0</span><span 
  class="button green"
  id="rating_p_8075"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8075/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment8078">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8078/">#8078</a>(<script language="JavaScript">print_time(new Date("2008/11/24 14:07 GMT"));</script><noscript>2008/11/24 14:07 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>普通なやり方で。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre>(defun fill-map (a c i j)
  (destructuring-bind (h w) (array-dimensions a)
    (and (&lt; -1 i h)
         (&lt; -1 j w)
         (eql (aref a i j) c)
         (let ((c1 (aref a i j)))
           (setf (aref a i j) nil)
           (fill-map a c1 (1- i) j)
           (fill-map a c1 (1+ i) j)
           (fill-map a c1 i (1- j))
           (fill-map a c1 i (1+ j))))))

(defun count-islands (m)
  (let ((a (list (cons :W 0) (cons :B 0))))
    (dotimes (i (array-dimension m 0))
      (dotimes (j (array-dimension m 1))
        (when (aref m i j)
          (incf (cdr (assoc (aref m i j) a)))
          (fill-map m (aref m i j) i j))))
    a))

;;; tests
(defun print-map (m)
  (dotimes (i (array-dimension m 0))
    (dotimes (j (array-dimension m 1) (terpri))
      (princ (ecase (aref m i j)
               (:B (or (name-char &quot;BLACK_SQUARE&quot;) #\B))
               (:W (or (name-char &quot;WHITE_SQUARE&quot;) #\W)))))))

(defun test (m)
  (format t &quot;Map:~%&quot;)
  (print-map m)
  (let ((a (count-islands m)))
    (format t &quot;white: ~D~%black:~D~%&quot;
            (cdr (assoc :W a)) (cdr (assoc :B a)))))

(test #2A((:W :B :B :W)
          (:W :W :B :W)
          (:W :B :W :W)
          (:W :B :B :W)))
(test #2A((:W :W :W :W)
          (:B :W :B :W)
          (:W :B :W :W)
          (:W :W :W :W)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8078/addtag/" class="addtag" id="addtag_8078">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8078/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8078/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8078"
  >-</span><span
  class="button yellow"
  id="rating_z_8078"
  >0</span><span 
  class="button green"
  id="rating_p_8078"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8078/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8081">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8081/">#8081</a>(<script language="JavaScript">print_time(new Date("2008/11/25 03:19 GMT"));</script><noscript>2008/11/25 03:19 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>・１行ずつ処理。
・列をビットに対応させて連結情報は整数のリストで保持。
  （例えば [W,B,W,W] という行は [[1,12],[2]] に変換）
・縦に連結しているかはビット論理積が非０かで判定。
・連結は加算。（例えば [W,B,W,W] で左の１個の W と右の２個の W が
  連結していることがわかった場合は 1+12（つまり 13）で表せる）
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Bits</span>

<span class="kr">data</span> <span class="n">BW</span> <span class="o">=</span> <span class="n">B</span> <span class="o">|</span> <span class="n">W</span> <span class="kr">deriving</span> <span class="p">(</span><span class="n">Eq</span><span class="p">)</span>

<span class="nv">conv</span> <span class="o">::</span> <span class="p">[</span><span class="n">BW</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[[</span><span class="n">Int</span><span class="p">]]</span>
<span class="nv">conv</span> <span class="nv">xs</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">map</span> <span class="p">(</span><span class="nv">sum</span><span class="o">.</span><span class="nv">map</span> <span class="nv">snd</span><span class="p">)</span><span class="o">.</span><span class="nv">filter</span> <span class="p">(</span><span class="nv">not</span><span class="o">.</span><span class="nv">null</span><span class="p">))</span>
  <span class="o">$</span> <span class="nv">transpose</span> <span class="o">$</span> <span class="nv">unfoldr</span> <span class="nv">f</span> <span class="o">$</span> <span class="nv">zip</span> <span class="nv">xs</span> <span class="o">$</span> <span class="nv">iterate</span> <span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="p">)</span> <span class="mi">1</span>  <span class="kr">where</span>
  <span class="nv">f</span> <span class="p">[]</span> <span class="o">=</span> <span class="n">Nothing</span> 
  <span class="nv">f</span> <span class="nv">zs</span> <span class="o">=</span> <span class="n">Just</span><span class="p">([</span><span class="nv">ws</span><span class="p">,</span><span class="nv">bs</span><span class="p">],</span><span class="nv">zs&#39;&#39;</span><span class="p">)</span> <span class="kr">where</span>
    <span class="p">(</span><span class="nv">ws</span><span class="p">,</span><span class="nv">zs&#39;</span> <span class="p">)</span> <span class="o">=</span> <span class="nv">span</span> <span class="p">((</span><span class="o">==</span><span class="n">W</span><span class="p">)</span><span class="o">.</span><span class="nv">fst</span><span class="p">)</span> <span class="nv">zs</span>
    <span class="p">(</span><span class="nv">bs</span><span class="p">,</span><span class="nv">zs&#39;&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="nv">span</span> <span class="p">((</span><span class="o">==</span><span class="n">B</span><span class="p">)</span><span class="o">.</span><span class="nv">fst</span><span class="p">)</span> <span class="nv">zs&#39;</span>

<span class="nv">count</span> <span class="o">::</span> <span class="p">[[</span><span class="n">BW</span><span class="p">]]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span>
<span class="nv">count</span> <span class="nv">rows</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">sum</span><span class="o">.</span><span class="nv">concat</span><span class="p">)</span> <span class="o">$</span> <span class="nv">transpose</span> <span class="o">$</span> <span class="nv">snd</span>
  <span class="o">$</span> <span class="nv">mapAccumL</span> <span class="nv">g</span> <span class="p">[[],[]]</span> <span class="o">$</span> <span class="p">(</span><span class="o">++</span> <span class="p">[[[],[]]])</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">conv</span> <span class="nv">rows</span>  <span class="kr">where</span>
  <span class="nv">g</span> <span class="nv">yss</span> <span class="nv">xss</span> <span class="o">=</span> <span class="nv">unzip</span> <span class="o">$</span> <span class="nv">zipWith</span> <span class="p">(</span><span class="nv">mapAccumL</span> <span class="nv">h</span><span class="p">)</span> <span class="nv">xss</span> <span class="nv">yss</span>
  <span class="nv">h</span> <span class="nv">xs</span> <span class="nv">y</span> <span class="o">=</span> <span class="kr">if</span> <span class="nv">null</span> <span class="nv">cs</span> <span class="kr">then</span> <span class="p">(</span><span class="nv">ds</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="kr">else</span> <span class="p">(</span><span class="nv">sum</span> <span class="nv">cs</span><span class="o">:</span> <span class="nv">ds</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>  <span class="kr">where</span>
    <span class="p">(</span><span class="nv">cs</span><span class="p">,</span><span class="nv">ds</span><span class="p">)</span> <span class="o">=</span> <span class="nv">partition</span> <span class="p">((</span><span class="o">/=</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="p">(</span><span class="nv">y</span><span class="o">.&amp;.</span><span class="p">))</span> <span class="nv">xs</span>

<span class="cm">{-</span>
<span class="cm">&gt; count [[W,W,W,W],[B,W,B,W],[W,B,W,W],[W,W,W,W]]</span>
<span class="cm">[1,3]</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8081/addtag/" class="addtag" id="addtag_8081">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8081/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8081/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8081"
  >-</span><span
  class="button yellow"
  id="rating_z_8081"
  >0</span><span 
  class="button green"
  id="rating_p_8081"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100605045807/http://ja.doukaku.org/comment/8081/">
    1
    reply
  </a>

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8081/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8089">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8089/">#8089</a>(<script language="JavaScript">print_time(new Date("2008/11/28 03:47 GMT"));</script><noscript>2008/11/28 03:47 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>#8081 を ruby で。
each を使うか inject を使うか迷う。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">conv</span><span class="p">(</span><span class="n">xs</span><span class="p">)</span>
  <span class="n">d</span><span class="p">,</span> <span class="n">wbs</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="o">[[]</span><span class="p">,</span><span class="o">[]]</span>
  <span class="n">xs</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(W*)(B*)/</span><span class="p">){</span><span class="o">|</span><span class="n">wb</span><span class="o">|</span>
    <span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="o">].</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
      <span class="n">m</span> <span class="o">=</span> <span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">wb</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">length</span>
      <span class="n">wbs</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">d</span> <span class="k">if</span> <span class="p">(</span><span class="n">m</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
      <span class="n">d</span> <span class="o">*=</span> <span class="n">m</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="p">{</span><span class="ss">:w</span> <span class="o">=&gt;</span> <span class="n">wbs</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="ss">:b</span> <span class="o">=&gt;</span> <span class="n">wbs</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">}</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">count</span><span class="p">(</span><span class="n">rows</span><span class="p">)</span>
  <span class="n">zs2</span> <span class="o">=</span> <span class="p">(</span><span class="n">rows</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">xs</span><span class="o">|</span><span class="n">conv</span> <span class="n">xs</span><span class="p">}</span><span class="o">+[</span><span class="p">{</span><span class="ss">:w</span><span class="o">=&gt;[]</span><span class="p">,</span><span class="ss">:b</span><span class="o">=&gt;[]</span><span class="p">}</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="ss">:w</span><span class="o">=&gt;[[]</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span><span class="ss">:b</span><span class="o">=&gt;[[]</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">){</span><span class="o">|</span><span class="n">zs</span><span class="p">,</span><span class="n">xs</span><span class="o">|</span>
    <span class="p">{</span><span class="ss">:w</span> <span class="o">=&gt;</span> <span class="n">g</span><span class="p">(</span><span class="n">xs</span><span class="o">[</span><span class="ss">:w</span><span class="o">]</span><span class="p">,</span><span class="o">*</span><span class="n">zs</span><span class="o">[</span><span class="ss">:w</span><span class="o">]</span><span class="p">),</span> <span class="ss">:b</span> <span class="o">=&gt;</span> <span class="n">g</span><span class="p">(</span><span class="n">xs</span><span class="o">[</span><span class="ss">:b</span><span class="o">]</span><span class="p">,</span><span class="o">*</span><span class="n">zs</span><span class="o">[</span><span class="ss">:b</span><span class="o">]</span><span class="p">)}</span>
  <span class="p">}</span>
  <span class="p">{</span><span class="ss">:w</span> <span class="o">=&gt;</span> <span class="n">zs2</span><span class="o">[</span><span class="ss">:w</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="ss">:b</span> <span class="o">=&gt;</span> <span class="n">zs2</span><span class="o">[</span><span class="ss">:b</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span><span class="p">}</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">g</span><span class="p">(</span><span class="n">xs</span><span class="p">,</span><span class="n">ys</span><span class="p">,</span><span class="n">m</span><span class="p">)</span>
  <span class="n">ys2</span> <span class="o">=</span> <span class="n">ys</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="n">xs</span><span class="p">){</span><span class="o">|</span><span class="n">as</span><span class="p">,</span><span class="n">y</span><span class="o">|</span>
      <span class="n">bs</span><span class="p">,</span> <span class="n">c</span> <span class="o">=</span> <span class="o">[]</span><span class="p">,</span> <span class="mi">0</span>
      <span class="n">as</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">z</span><span class="o">|</span> <span class="k">if</span> <span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="n">y</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">then</span> <span class="n">c</span> <span class="o">+=</span> <span class="n">z</span><span class="p">;</span> <span class="k">else</span> <span class="n">bs</span> <span class="o">&lt;&lt;</span> <span class="n">z</span><span class="p">;</span> <span class="k">end</span><span class="p">}</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">then</span> <span class="n">bs</span> <span class="o">&lt;&lt;</span> <span class="n">c</span><span class="p">;</span> <span class="k">else</span> <span class="n">m</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">bs</span><span class="p">;</span> <span class="k">end</span>
  <span class="p">}</span>
  <span class="o">[</span><span class="n">ys2</span><span class="p">,</span><span class="n">m</span><span class="o">]</span>
<span class="k">end</span>

<span class="nb">p</span><span class="p">(</span><span class="n">count</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;WBBW&quot;</span><span class="p">,</span><span class="s2">&quot;WWBW&quot;</span><span class="p">,</span><span class="s2">&quot;WBWW&quot;</span><span class="p">,</span><span class="s2">&quot;WBBW&quot;</span><span class="o">]</span><span class="p">))</span> <span class="c1"># =&gt; {:b=&gt;2, :w=&gt;2}</span>
<span class="nb">p</span><span class="p">(</span><span class="n">count</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;WWWW&quot;</span><span class="p">,</span><span class="s2">&quot;BWBW&quot;</span><span class="p">,</span><span class="s2">&quot;WBWW&quot;</span><span class="p">,</span><span class="s2">&quot;WWWW&quot;</span><span class="o">]</span><span class="p">))</span> <span class="c1"># =&gt; {:b=&gt;3, :w=&gt;1}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8089/addtag/" class="addtag" id="addtag_8089">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8089/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8089/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8089"
  >-</span><span
  class="button yellow"
  id="rating_z_8089"
  >0</span><span 
  class="button green"
  id="rating_p_8089"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8081/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8089/root/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8089/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment8093">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8093/">#8093</a>(<script language="JavaScript">print_time(new Date("2008/11/28 17:08 GMT"));</script><noscript>2008/11/28 17:08 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Perl がないようなので１つ。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$m</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">rand</span> <span class="mi">3</span><span class="p">)</span> <span class="o">+</span> <span class="mi">4</span><span class="p">;</span> <span class="k">my</span> <span class="nv">$n</span> <span class="o">=</span> <span class="nv">$m</span> <span class="o">+</span> <span class="nb">int</span><span class="p">(</span><span class="nb">rand</span><span class="p">(</span><span class="mi">7</span> <span class="o">-</span> <span class="nv">$m</span><span class="p">));</span>
<span class="k">my</span> <span class="p">(</span><span class="nv">%board</span><span class="p">,</span> <span class="nv">%group</span><span class="p">);</span>

<span class="k">foreach</span> <span class="k">my</span> <span class="nv">$i</span> <span class="p">(</span><span class="mi">1</span> <span class="o">..</span> <span class="nv">$m</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">foreach</span> <span class="k">my</span> <span class="nv">$j</span> <span class="p">(</span><span class="mi">1</span> <span class="o">..</span> <span class="nv">$n</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">my</span> <span class="nv">$key</span> <span class="o">=</span> <span class="nv">$i</span> <span class="o">.</span> <span class="nv">$j</span><span class="p">;</span>
    <span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">rand</span> <span class="mi">2</span><span class="p">);</span>
    <span class="k">print</span> <span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}</span> <span class="p">?</span> <span class="s">&#39;■&#39;</span> <span class="p">:</span> <span class="s">&#39;□&#39;</span><span class="p">;</span>
    <span class="k">print</span> <span class="s">&quot;\n&quot;</span> <span class="k">if</span> <span class="nv">$j</span> <span class="o">==</span> <span class="nv">$n</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$flag</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">my</span> <span class="nv">$up_key</span> <span class="o">=</span> <span class="nv">$key</span> <span class="o">-</span> <span class="mi">10</span><span class="p">;</span>
      <span class="k">if</span> <span class="p">(</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}</span> <span class="o">==</span> <span class="nv">$board</span><span class="p">{</span><span class="nv">$up_key</span><span class="p">})</span> <span class="p">{</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="nv">$item</span> <span class="p">(</span><span class="nv">@</span><span class="p">{</span><span class="nv">$group</span><span class="p">{</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}}})</span> <span class="p">{</span>
          <span class="k">if</span> <span class="p">(</span><span class="nv">$item</span> <span class="o">=~</span><span class="sr"> /$up_key/</span><span class="p">)</span> <span class="p">{</span> <span class="nv">$item</span> <span class="o">.=</span> <span class="s">&quot;:$key&quot;</span><span class="p">;</span> <span class="nv">$flag</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
      <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$j</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">my</span> <span class="nv">$left_key</span> <span class="o">=</span> <span class="nv">$key</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
      <span class="k">if</span> <span class="p">(</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}</span> <span class="o">==</span> <span class="nv">$board</span><span class="p">{</span><span class="nv">$left_key</span><span class="p">})</span> <span class="p">{</span>
        <span class="nv">$flag</span><span class="o">++</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$flag</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
          <span class="k">foreach</span> <span class="k">my</span> <span class="nv">$item</span> <span class="p">(</span><span class="nv">@</span><span class="p">{</span><span class="nv">$group</span><span class="p">{</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}}})</span> <span class="p">{</span>
            <span class="nv">$item</span> <span class="o">.=</span> <span class="s">&quot;:$key&quot;</span> <span class="k">if</span> <span class="nv">$item</span> <span class="o">=~</span><span class="sr"> /$left_key/</span><span class="p">;</span>
          <span class="p">}</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
          <span class="k">my</span> <span class="p">(</span><span class="nv">$same</span><span class="p">)</span> <span class="o">=</span> <span class="nb">grep</span> <span class="p">{</span> <span class="nv">$group</span><span class="p">{</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}}</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">$_</span><span class="p">]</span> <span class="o">=~</span><span class="sr"> /$key/</span> <span class="p">}</span> <span class="mi">0</span> <span class="o">..</span> <span class="nv">$#</span><span class="p">{</span><span class="nv">$group</span><span class="p">{</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}}};</span>
          <span class="k">my</span> <span class="p">(</span><span class="nv">$left</span><span class="p">)</span> <span class="o">=</span> <span class="nb">grep</span> <span class="p">{</span> <span class="nv">$group</span><span class="p">{</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}}</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">$_</span><span class="p">]</span> <span class="o">=~</span><span class="sr"> /$left_key/</span> <span class="p">}</span> <span class="mi">0</span> <span class="o">..</span> <span class="nv">$#</span><span class="p">{</span><span class="nv">$group</span><span class="p">{</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}}};</span>
          <span class="k">if</span> <span class="p">(</span><span class="nv">$same</span> <span class="o">!=</span> <span class="nv">$left</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$group</span><span class="p">{</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}}</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">$same</span><span class="p">]</span> <span class="o">=</span> <span class="nb">join</span> <span class="s">&#39;:&#39;</span><span class="p">,</span> <span class="nb">sort</span>
              <span class="nb">split</span> <span class="sr">/:/</span><span class="p">,</span> <span class="s">&quot;$group{$board{$key}}-&gt;[$same]:$group{$board{$key}}-&gt;[$left]&quot;</span><span class="p">;</span>
            <span class="nb">splice</span><span class="p">(</span><span class="nv">@</span><span class="p">{</span><span class="nv">$group</span><span class="p">{</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}}},</span> <span class="nv">$left</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
          <span class="p">}</span>
        <span class="p">}</span>
      <span class="p">}</span>
    <span class="p">}</span>
    <span class="nb">push</span> <span class="nv">@</span><span class="p">{</span><span class="nv">$group</span><span class="p">{</span><span class="nv">$board</span><span class="p">{</span><span class="nv">$key</span><span class="p">}}},</span> <span class="nv">$key</span> <span class="k">unless</span> <span class="nv">$flag</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="k">print</span> <span class="s">&quot;\n□の島: &quot;</span><span class="p">,</span> <span class="nb">scalar</span><span class="p">(</span><span class="nv">@</span><span class="p">{</span><span class="nv">$group</span><span class="p">{</span><span class="mi">0</span><span class="p">}}),</span> <span class="s">&quot;\n  &quot;</span><span class="p">,</span> <span class="nb">join</span><span class="p">(</span><span class="s">&#39;, &#39;</span><span class="p">,</span> <span class="nv">@</span><span class="p">{</span><span class="nv">$group</span><span class="p">{</span><span class="mi">0</span><span class="p">}}),</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="s">&quot;\n■の島: &quot;</span><span class="p">,</span> <span class="nb">scalar</span><span class="p">(</span><span class="nv">@</span><span class="p">{</span><span class="nv">$group</span><span class="p">{</span><span class="mi">1</span><span class="p">}}),</span> <span class="s">&quot;\n  &quot;</span><span class="p">,</span> <span class="nb">join</span><span class="p">(</span><span class="s">&#39;, &#39;</span><span class="p">,</span> <span class="nv">@</span><span class="p">{</span><span class="nv">$group</span><span class="p">{</span><span class="mi">1</span><span class="p">}}),</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8093/addtag/" class="addtag" id="addtag_8093">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8093/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8093/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8093"
  >-</span><span
  class="button yellow"
  id="rating_z_8093"
  >0</span><span 
  class="button green"
  id="rating_p_8093"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8093/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8096">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/959/" target="_top">uehaj</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8096/">#8096</a>(<script language="JavaScript">print_time(new Date("2008/11/30 06:52 GMT"));</script><noscript>2008/11/30 06:52 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>BASICのpaint文の処理に近いのかな。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre>def paint(s, x, y, value) {
    if (x &lt; 0 || y &lt; 0 || x &gt;= s[0].size() || y &gt;= s.size() || s[y][x]==value) {
        return
    }
    s[y][x] = value
    paint(s, x+1, y, value)
    paint(s, x-1, y, value)
    paint(s, x, y+1, value)
    paint(s, x, y-1, value)
}
def count(data) {
    [0,1].each { color -&gt;
        s = data.collect{it.collect{it==&quot;■&quot;?0:1}};
        count = 0
        (0..&lt;s.size()).each {y-&gt;
            (0..&lt;s[y].size()).each { x-&gt;
                if (s[y][x] != color) {
                    paint(s, x, y, color)
                    count++
                }
            }
        }
        println count
    }
}

count([&quot;□■■□&quot;,
       &quot;□□■□&quot;,
       &quot;□■□□&quot;,
       &quot;□■■□&quot;])

count([&quot;□□□□&quot;,
       &quot;■□■□&quot;,
       &quot;□■□□&quot;,
       &quot;□□□□&quot;])
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8096/addtag/" class="addtag" id="addtag_8096">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/groovy/">groovy</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8096/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8096/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8096"
  >-</span><span
  class="button yellow"
  id="rating_z_8096"
  >0</span><span 
  class="button green"
  id="rating_p_8096"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8096/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8104">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/971/" target="_top">bushimichi</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8104/">#8104</a>(<script language="JavaScript">print_time(new Date("2008/12/02 06:12 GMT"));</script><noscript>2008/12/02 06:12 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>PHPで書く人がいなかったので。
１．基本的に左上から右下へ捜査していく

２．特定の位置から、右、下の位置を基本的につながっているか確認する。
つながっている場合は、同じ島の番号を振る

３．途中でぐるっと回ってつながっていることがわかったらその時点で、
島の番号を振りなおして、島の数を修正する。

上下左右の４点を調べていく方法は
なんとなくありきたりなのでやめました。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73</pre></td><td class="code"><div class="highlight"><pre><span class="x">$w = $h = 4;</span>

<span class="x">$a = array(</span>
<span class="x">      array(</span>
<span class="x">        array(0,1,1,0)</span>
<span class="x">       ,array(0,1,0,0)</span>
<span class="x">       ,array(0,0,1,0)</span>
<span class="x">       ,array(0,1,1,0)</span>
<span class="x">      ),</span>
<span class="x">      array(</span>
<span class="x">        array(0,0,0,0)</span>
<span class="x">       ,array(1,0,1,0)</span>
<span class="x">       ,array(0,1,0,0)</span>
<span class="x">       ,array(0,0,0,0)</span>
<span class="x">      )</span>
<span class="x">    );</span>


<span class="x">function revSima($a0){</span>
<span class="x">  global $w,$h;</span>
<span class="x">    $a1 = array();</span>
<span class="x">    for($i=0;$i&lt;$w;$i++){</span>
<span class="x">      for($j=0;$j&lt;$h;$j++){</span>
<span class="x">        $a1[$i][$j] = $a0[$i][$j] === 0 ? 1 : 0;</span>
<span class="x">      }</span>
<span class="x">    }</span>
<span class="x">    return $a1;</span>
<span class="x">}</span>

<span class="x">function countSima($a0){</span>
<span class="x">  global $w,$h;</span>
<span class="x">  </span>
<span class="x">  $k = array();</span>
<span class="x">    $g = 1;</span>
<span class="x">    </span>
<span class="x">    for($i=0;$i&lt;$w;$i++){</span>

<span class="x">      for($j=0;$j&lt;$h;$j++){</span>
<span class="x">    </span>
<span class="x">        if($a0[$i][$j] === 0) continue;</span>

<span class="x">            if($a0[$i][$j] === 1){</span>
<span class="x">              $a0[$i][$j] = ++$g;</span>
<span class="x">              $k[$g] = 1;</span>
<span class="x">            }</span>
<span class="x">          $c = $a0[$i][$j];</span>

<span class="x">          if($i + 1 &lt; $h &amp;&amp; $a0[$i + 1][$j] === 1){</span>
<span class="x">            $a0[$i + 1][$j] = $c;</span>
<span class="x">          }</span>
<span class="x">          </span>
<span class="x">          if($j + 1 &lt; $w &amp;&amp; $a0[$i][$j + 1] === 1){</span>
<span class="x">            $a0[$i][$j + 1] = $c;</span>
<span class="x">            </span>
<span class="x">          }elseif($j + 1 &lt; 4 &amp;&amp; $a0[$i][$j + 1] &gt; 1 ){</span>

<span class="x">            for($m=0;$m&lt;$i+1;$m++){</span>
<span class="x">              for($n=0;$n&lt;4;$n++){</span>
<span class="x">                if($a0[$m][$n] === $c){</span>
<span class="x">                  $a0[$m][$n] = $a0[$i][$j + 1];</span>
<span class="x">                    }</span>
<span class="x">              }</span>
<span class="x">            }</span>
<span class="x">            unset($k[$c]);</span>
<span class="x">          }</span>
<span class="x">      }</span>
<span class="x">    }</span>
<span class="x">    return count(array_keys($k));</span>
<span class="x">}</span>

<span class="x">foreach($a as $v){</span>
<span class="x">  echo &#39;(Black,White) = (&#39;. countSima($v) . &#39;,&#39;. countSima(revSima($v)) . &#39;)&#39; . &quot;\n&quot;;</span>
<span class="x">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8104/addtag/" class="addtag" id="addtag_8104">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/PHP/">PHP</a>
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/%E5%B3%B6/">島</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8104/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8104/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8104"
  >-</span><span
  class="button yellow"
  id="rating_z_8104"
  >0</span><span 
  class="button green"
  id="rating_p_8104"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100605045807/http://ja.doukaku.org/comment/8104/">
    1
    reply
  </a>

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8104/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8105">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/971/" target="_top">bushimichi</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8105/">#8105</a>(<script language="JavaScript">print_time(new Date("2008/12/02 10:48 GMT"));</script><noscript>2008/12/02 10:48 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>島の数を答えればいいので、
つながっていれば島の数を数えなおす
ループを改定しました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72</pre></td><td class="code"><div class="highlight"><pre>$w = $h = 4;

$a = array(
      array(
        array(0,1,1,0)
       ,array(0,1,0,0)
       ,array(0,0,1,0)
       ,array(0,1,1,0)
      ),
      array(
        array(0,0,0,0)
       ,array(1,0,1,0)
       ,array(0,1,0,0)
       ,array(0,0,0,0)
      )
    );


function revSima($a0){
  global $w,$h;
    $a1 = array();
    for($i=0;$i&lt;$w;$i++){
      for($j=0;$j&lt;$h;$j++){
        $a1[$i][$j] = $a0[$i][$j] === 0 ? 1 : 0;
      }
    }
    return $a1;
}

function countSima($a0){
  global $w,$h;
  
  $k = array();
    $g = $c = 1;
    for($i=0;$i&lt;$w;$i++){

      for($j=0;$j&lt;$h;$j++){
    
        if($a0[$i][$j] === 0) continue;

            if($a0[$i][$j] === 1){
              $a0[$i][$j] = ++$g;
              $k[$g] = 1;
            }
          $c = $a0[$i][$j];

          if($i + 1 &lt; $h &amp;&amp; $a0[$i + 1][$j] === 1){
            $a0[$i + 1][$j] = $c;
          }
          
          if($j + 1 &lt; $w &amp;&amp; $a0[$i][$j + 1] === 1){
            $a0[$i][$j + 1] = $c;
            
          }elseif($j + 1 &lt; $w &amp;&amp; $a0[$i][$j + 1] &gt; 1 &amp;&amp; $c &gt; $a0[$i][$j + 1] ){

            for($m=$i; $m&lt;=$i+1; $m++){
              for($n=0; $n&lt;=$j; $n++){
                if($a0[$m][$n] === $c){
                  $a0[$m][$n] = $a0[$i][$j + 1];
                }
              }
            }
            unset($k[$c]);
          }
      }
    }
    return count(array_keys($k));
}

foreach($a as $v){
  echo &#39;(Black,White) = (&#39;. countSima($v) . &#39;,&#39;. countSima(revSima($v)) . &#39;)&#39; . &quot;\n&quot;;
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8105/addtag/" class="addtag" id="addtag_8105">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8105/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8105/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8105"
  >-</span><span
  class="button yellow"
  id="rating_z_8105"
  >0</span><span 
  class="button green"
  id="rating_p_8105"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8104/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8105/root/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8105/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment8113">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/975/" target="_top">k20k</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8113/">#8113</a>(<script language="JavaScript">print_time(new Date("2008/12/05 00:33 GMT"));</script><noscript>2008/12/05 00:33 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/hidemaru_macro/">
	  秀丸マクロ
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>初投稿です。
変態的な実装ができないかと考えていたのですが、
最適化していくうちに#8104さんと似た考え方になってしまいました。
秀丸の新規窓の左上に島を書いて、マクロ実行です。

考え方は以下の通りです。
１．左上から右下に向かって横にスキャン
２．上と左の島連番取得
３．取得出来なければ新しい島＆島数プラス
４．上と左の島連番が一致しない場合、左の島連番を塗り直し＆島数マイナス
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84</pre></td><td class="code"><div class="highlight"><pre>#xcharlen=2;
$wchar=&quot;□&quot;;
$bchar=&quot;■&quot;;

#xlen=4;
#ylen=4;

#wcnt=0;
#bcnt=0;
##x=0;
##y=0;
##serial=1;

    while( ##y &lt; #ylen ) {
        ##x=0;
        while( ##x &lt; #xlen ) {
            call GETCHAR ##x, ##y;
            $$c = $$return;
            if( ##y == 0 ) {
                ##no = ##serial;
            } else {
                call GETCHAR ##x, ##y-1;
                if( $$return == $$c ) {
                    ##no = #mtx[##y-1][##x];
                } else {
                    ##no = ##serial;
                }
            }
            if( ##x &gt; 0 ) {
                call GETCHAR ##x-1, ##y;
                if( $$return == $$c ) {
                    if( ##no == ##serial ) {
                        ##no = #mtx[##y][##x-1];
                    } else if( ##no != #mtx[##y][##x-1] ) {
                        call RENUM ##no, #mtx[##y][##x-1], ##y, $$c;
                    }
                }
            }
            #mtx[##y][##x] = ##no;
            if( ##no == ##serial ) {
                call CNTISLAND $$c, 1;
                ##serial = ##serial+1;
            }
            ##x = ##x+1;
        }
        ##y = ##y+1;
    }

    message &quot;白の島は&quot; + str(#wcnt) + &quot;つ\n&quot; + &quot;黒の島は&quot; + str(#bcnt) + &quot;つ&quot;;

    endmacro;

RENUM:
    ##i=0;
    while( ##i &lt; ##3+1 ) {
        ##j=0;
        while( ##j &lt; #xlen ) {
            if( #mtx[##i][##j]==##2 ) {
                #mtx[##i][##j]=##1;
            }
            ##j=##j+1;
        }
        ##i=##i+1;
    }

    call CNTISLAND $$4, -1;

    return;

CNTISLAND:
    if( $$1 == $wchar ) {
        #wcnt=#wcnt+##2;
    } else {
        #bcnt=#bcnt+##2;
    }

    return;

GETCHAR:
    ##x1 = ##1 * #xcharlen;
    ##x2 = ##x1 + #xcharlen;
    $$res=gettext(##x1, ##2, ##x2, ##2, 0);

    return $$res;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8113/addtag/" class="addtag" id="addtag_8113">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/hidemaru_macro/">
		秀丸マクロ
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8113/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8113/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8113"
  >-</span><span
  class="button yellow"
  id="rating_z_8113"
  >0</span><span 
  class="button green"
  id="rating_p_8113"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100605045807/http://ja.doukaku.org/comment/8113/">
    1
    reply
  </a>

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8113/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8114">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/971/" target="_top">bushimichi</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8114/">#8114</a>(<script language="JavaScript">print_time(new Date("2008/12/05 03:56 GMT"));</script><noscript>2008/12/05 03:56 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>調べる位置が、右と下　左と上の違い
なのでそんな大差はないのかもしれないけど、
スキャンする方向が、左上から右下ということを
考えると、#8104 より、こっちのほうが、島の塗り直しがシンプルでいいですね。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8114/addtag/" class="addtag" id="addtag_8114">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8114"
  >-</span><span
  class="button yellow"
  id="rating_z_8114"
  >0</span><span 
  class="button green"
  id="rating_p_8114"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8113/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8114/root/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100605045807/http://ja.doukaku.org/comment/8114/">
    1
    reply
  </a>

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8114/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8301">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/975/" target="_top">k20k</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8301/">#8301</a>(<script language="JavaScript">print_time(new Date("2009/01/08 20:58 GMT"));</script><noscript>2009/01/08 20:58 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>遅くなりましたがありがとうございます。
普通のやりかたも考えたのですが、秀丸マクロはサブルーチンのネストが20階層までらしいので、マップが広がった時に対応出来ないので、この方法に至りました。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8301/addtag/" class="addtag" id="addtag_8301">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8301"
  >-</span><span
  class="button yellow"
  id="rating_z_8301"
  >0</span><span 
  class="button green"
  id="rating_p_8301"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8114/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8301/root/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8301/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  
    





<div class="comment" id="comment8121">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8121/">#8121</a>(<script language="JavaScript">print_time(new Date("2008/12/06 10:44 GMT"));</script><noscript>2008/12/06 10:44 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>かなりムダなことをしている…</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;algorithm&gt;</span>
<span class="cp">#include &lt;iterator&gt;</span>
<span class="cp">#include &lt;stdexcept&gt;</span>

<span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">cell</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">Field</span> <span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">Field</span><span class="p">(</span><span class="kt">int</span> <span class="n">width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">height</span><span class="p">)</span> <span class="o">:</span> <span class="n">width_</span><span class="p">(</span><span class="n">width</span><span class="p">),</span> <span class="n">height_</span><span class="p">(</span><span class="n">height</span><span class="p">),</span> <span class="n">v_</span><span class="p">(</span><span class="n">width</span> <span class="o">*</span> <span class="n">height</span><span class="p">)</span> <span class="p">{}</span>
    <span class="kt">void</span> <span class="n">initialize</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">data</span><span class="p">){</span>
        <span class="n">std</span><span class="o">::</span><span class="n">copy</span><span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">data</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">v_</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
    <span class="p">}</span>

    <span class="kt">void</span> <span class="n">print</span><span class="p">(){</span>
        <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">cell</span><span class="o">&gt;::</span><span class="n">const_iterator</span> <span class="n">ite</span><span class="o">=</span><span class="n">v_</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span><span class="n">ite</span><span class="o">!=</span><span class="n">v_</span><span class="p">.</span><span class="n">end</span><span class="p">();</span><span class="o">++</span><span class="n">ite</span><span class="p">){</span>
            <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="o">*</span><span class="n">ite</span><span class="p">;</span>
            <span class="o">++</span><span class="n">i</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="n">i</span><span class="o">%</span><span class="n">width_</span><span class="p">){</span>
                <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
                <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="n">cell</span><span class="o">&amp;</span> <span class="n">get</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="k">throw</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">out_of_range</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="n">width_</span><span class="p">)</span>
            <span class="k">throw</span> <span class="n">std</span><span class="o">::</span><span class="n">out_of_range</span><span class="p">(</span><span class="s">&quot;out of range by x&quot;</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="n">height_</span><span class="p">)</span>
            <span class="k">throw</span> <span class="n">std</span><span class="o">::</span><span class="n">out_of_range</span><span class="p">(</span><span class="s">&quot;out of range by y&quot;</span><span class="p">);</span>
        <span class="k">return</span> <span class="n">v_</span><span class="p">.</span><span class="n">at</span><span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">*</span> <span class="n">width_</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="kt">int</span> <span class="n">get_width</span><span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="n">width_</span><span class="p">;</span> <span class="p">}</span>
    <span class="kt">int</span> <span class="n">get_height</span><span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="n">height_</span><span class="p">;</span> <span class="p">}</span>

<span class="k">private</span><span class="o">:</span>
    <span class="kt">int</span> <span class="n">width_</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">height_</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">cell</span><span class="o">&gt;</span> <span class="n">v_</span><span class="p">;</span>
<span class="p">};</span>

<span class="k">typedef</span> <span class="kt">int</span> <span class="n">color</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Cell</span> <span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">Cell</span><span class="p">()</span> <span class="o">:</span> <span class="n">kind_</span><span class="p">(</span><span class="n">none</span><span class="p">),</span> <span class="n">c_code_</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">{}</span>
    <span class="n">Cell</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">&amp;</span> <span class="n">kind</span><span class="p">)</span> <span class="o">:</span> <span class="n">c_code_</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">switch</span><span class="p">(</span><span class="n">kind</span><span class="p">){</span>
        <span class="k">case</span> <span class="sc">&#39;W&#39;</span><span class="o">:</span>
            <span class="n">kind_</span> <span class="o">=</span> <span class="n">white</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="sc">&#39;B&#39;</span><span class="o">:</span>
            <span class="n">kind_</span> <span class="o">=</span> <span class="n">black</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">default</span><span class="o">:</span>
            <span class="n">kind_</span><span class="o">=</span> <span class="n">none</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">Cell</span><span class="p">(</span><span class="k">const</span> <span class="n">Cell</span><span class="o">&amp;</span> <span class="n">c</span><span class="p">)</span> <span class="o">:</span> <span class="n">kind_</span><span class="p">(</span><span class="n">c</span><span class="p">.</span><span class="n">kind_</span><span class="p">),</span> <span class="n">c_code_</span><span class="p">(</span><span class="n">c</span><span class="p">.</span><span class="n">c_code_</span><span class="p">)</span> <span class="p">{}</span>
    
    <span class="k">const</span> <span class="n">color</span><span class="o">&amp;</span> <span class="n">get_color</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="n">c_code_</span><span class="p">;}</span>

    <span class="k">const</span> <span class="kt">char</span> <span class="n">toString</span><span class="p">()</span> <span class="k">const</span><span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">kind_</span><span class="o">==</span><span class="n">white</span><span class="p">)</span>
            <span class="k">return</span> <span class="sc">&#39;W&#39;</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">kind_</span><span class="o">==</span><span class="n">black</span><span class="p">)</span>
            <span class="k">return</span> <span class="sc">&#39;B&#39;</span><span class="p">;</span>
        <span class="k">return</span> <span class="sc">&#39; &#39;</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">friend</span> <span class="kt">void</span> <span class="n">paint</span><span class="p">(</span><span class="n">Field</span><span class="o">&lt;</span><span class="n">Cell</span><span class="o">&gt;&amp;</span> <span class="n">f</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="n">Cell</span> <span class="o">*</span><span class="n">neighbor</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">);</span>

<span class="k">private</span><span class="o">:</span>
    <span class="k">enum</span> <span class="n">Kind</span> <span class="p">{</span> <span class="n">none</span><span class="p">,</span> <span class="n">white</span><span class="p">,</span> <span class="n">black</span> <span class="p">};</span>
    
    <span class="n">Kind</span> <span class="n">kind_</span><span class="p">;</span>
    <span class="k">mutable</span> <span class="n">color</span> <span class="n">c_code_</span><span class="p">;</span>
<span class="p">};</span>

<span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="p">(</span> <span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="n">os</span> <span class="p">,</span> <span class="k">const</span> <span class="n">Cell</span><span class="o">&amp;</span> <span class="n">c</span> <span class="p">){</span>
    <span class="n">os</span> <span class="o">&lt;&lt;</span> <span class="n">c</span><span class="p">.</span><span class="n">toString</span><span class="p">()</span> <span class="p">;</span>
    <span class="k">return</span>  <span class="n">os</span> <span class="p">;</span>
<span class="p">}</span>

<span class="k">static</span> <span class="n">color</span> <span class="n">black</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">white</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="kt">void</span> <span class="n">paint</span><span class="p">(</span><span class="n">Field</span><span class="o">&lt;</span><span class="n">Cell</span><span class="o">&gt;&amp;</span> <span class="n">f</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="n">Cell</span> <span class="o">*</span><span class="n">neighbor</span><span class="p">){</span>
    <span class="c">//範囲外指定の場合は、処理しない</span>
    <span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="n">f</span><span class="p">.</span><span class="n">get_width</span><span class="p">())</span> <span class="k">return</span> <span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="n">f</span><span class="p">.</span><span class="n">get_height</span><span class="p">())</span> <span class="k">return</span> <span class="p">;</span>

    <span class="n">Cell</span><span class="o">&amp;</span> <span class="n">c</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">c</span><span class="p">.</span><span class="n">c_code_</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="p">;</span> <span class="c">//既に塗られている場合は、必要ない</span>
    <span class="k">if</span><span class="p">(</span><span class="n">neighbor</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">){</span> <span class="c">//隣のセルから呼び出された</span>
        <span class="k">if</span><span class="p">(</span><span class="n">neighbor</span><span class="o">-&gt;</span><span class="n">kind_</span> <span class="o">!=</span> <span class="n">c</span><span class="p">.</span><span class="n">kind_</span><span class="p">)</span> <span class="k">return</span> <span class="p">;</span> <span class="c">//隣のセルと同種のセルでない場合は、処理しない</span>

        <span class="n">c</span><span class="p">.</span><span class="n">c_code_</span> <span class="o">=</span> <span class="n">neighbor</span><span class="o">-&gt;</span><span class="n">c_code_</span><span class="p">;</span><span class="c">//同じ色にする</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="n">color</span>  <span class="n">set_color</span><span class="p">;</span>
        <span class="k">switch</span><span class="p">(</span><span class="n">c</span><span class="p">.</span><span class="n">kind_</span><span class="p">){</span>
        <span class="k">case</span> <span class="n">Cell</span><span class="o">::</span><span class="n">Kind</span><span class="o">::</span><span class="nl">black:</span>
            <span class="n">set_color</span> <span class="o">=</span> <span class="o">--</span><span class="n">black</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="n">Cell</span><span class="o">::</span><span class="n">Kind</span><span class="o">::</span><span class="nl">white:</span>
            <span class="n">set_color</span> <span class="o">=</span> <span class="o">++</span><span class="n">white</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">default</span><span class="o">:</span>
        <span class="c">// 未初期化、あり得ない</span>
            <span class="k">throw</span> <span class="s">&quot;find unsetting kind of cell!&quot;</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">c</span><span class="p">.</span><span class="n">c_code_</span> <span class="o">=</span> <span class="n">set_color</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="c">//周りのセルを塗る</span>
    <span class="n">paint</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">c</span><span class="p">);</span>
    <span class="n">paint</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">c</span><span class="p">);</span>
    <span class="n">paint</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">c</span><span class="p">);</span>
    <span class="n">paint</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">c</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">painter</span><span class="p">(</span><span class="n">Field</span><span class="o">&lt;</span><span class="n">Cell</span><span class="o">&gt;&amp;</span> <span class="n">f</span><span class="p">){</span>
    <span class="kt">int</span> <span class="n">width</span> <span class="o">=</span><span class="n">f</span><span class="p">.</span><span class="n">get_width</span><span class="p">();</span>
    <span class="kt">int</span> <span class="n">height</span><span class="o">=</span><span class="n">f</span><span class="p">.</span><span class="n">get_height</span><span class="p">();</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">x</span> <span class="o">&lt;</span> <span class="n">width</span> <span class="p">;</span> <span class="o">++</span><span class="n">x</span><span class="p">)</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">height</span> <span class="p">;</span> <span class="o">++</span><span class="n">y</span><span class="p">)</span>
            <span class="n">paint</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">data1</span><span class="p">(</span>
        <span class="s">&quot;WBBW&quot;</span>
        <span class="s">&quot;WWBW&quot;</span>
        <span class="s">&quot;WBWW&quot;</span>
        <span class="s">&quot;WBBW&quot;</span>
    <span class="p">);</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">data2</span><span class="p">(</span>
        <span class="s">&quot;WWWW&quot;</span>
        <span class="s">&quot;BWBW&quot;</span>
        <span class="s">&quot;WBWW&quot;</span>
        <span class="s">&quot;WWWW&quot;</span>
    <span class="p">);</span>

    <span class="n">Field</span><span class="o">&lt;</span><span class="n">Cell</span><span class="o">&gt;</span> <span class="n">f1</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
    <span class="n">f1</span><span class="p">.</span><span class="n">initialize</span><span class="p">(</span><span class="n">data1</span><span class="p">);</span>
    <span class="n">f1</span><span class="p">.</span><span class="n">print</span><span class="p">();</span>
    <span class="n">painter</span><span class="p">(</span><span class="n">f1</span><span class="p">);</span> <span class="c">//f1 を塗り分ける</span>
    <span class="c">//塗り分けるのに要した色数</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;black:&quot;</span> <span class="o">&lt;&lt;</span> <span class="o">-</span><span class="n">black</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;white:&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">white</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>

    <span class="n">black</span><span class="o">=</span><span class="n">white</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="n">Field</span><span class="o">&lt;</span><span class="n">Cell</span><span class="o">&gt;</span> <span class="n">f2</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
    <span class="n">f2</span><span class="p">.</span><span class="n">initialize</span><span class="p">(</span><span class="n">data2</span><span class="p">);</span>
    <span class="n">f2</span><span class="p">.</span><span class="n">print</span><span class="p">();</span>
    <span class="n">painter</span><span class="p">(</span><span class="n">f2</span><span class="p">);</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;black:&quot;</span> <span class="o">&lt;&lt;</span> <span class="o">-</span><span class="n">black</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;white:&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">white</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8121/addtag/" class="addtag" id="addtag_8121">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8121/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8121/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8121"
  >-</span><span
  class="button yellow"
  id="rating_z_8121"
  >0</span><span 
  class="button green"
  id="rating_p_8121"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8121/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8123">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/976/" target="_top">bonotake</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8123/">#8123</a>(<script language="JavaScript">print_time(new Date("2008/12/06 22:17 GMT"));</script><noscript>2008/12/06 22:17 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>仕様記述言語Alloyでやってみました。</p>
<p>島の判別のロジックより、マップを書くほう（23行目以降）が長くなってしまいました。</p>
<p></p>
<p>最後のnoExampleはマップも自動生成しながら解きます。</p>
</div>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65</pre></td><td class="code"><div class="highlight"><pre>one sig Answer {
  width, height, blackIslands, whiteIslands: Int
}
{
  blackIslands = #{x: Island | some g:Square | g.island = x and g.color = Black} 
  whiteIslands = #{x: Island | some g:Square | g.island = x and g.color = White} 
}
sig Square {
  row, col: Int,
  left, down: lone Square,
  color: Color,
  island: Island
}
abstract sig Color {}
one sig White, Black extends Color {}
sig Island {}
fact islandLaw {
  all disj s,s&#39;: Square | s.island = s&#39;.island iff
      s&#39; in s.^{s1,s2: Square |
        (s2 in s1.(left+down) or s1 in s2.(left+down)) and s1.color = s2.color } 
}

fact squareLaws {
  all s1, s2: Square | s1.row = s2.row and s1.col = s2.col iff s1 = s2
  all g: Square {
    g.col = Answer.width - 1 =&gt; no g.left
      else g.left.row = g.row and g.left.col = g.col + 1
    g.row = Answer.height - 1 =&gt; no g.down
      else g.down.row = g.row + 1 and g.down.col = g.col
  }
}
pred setSquare (r,c: Int, cl: Color) {
  some g: Square | g.row = r and g.col = c and g.color = cl
}

pred example1 () {
  Answer.width = 4 and Answer.height = 4
  setSquare[0,0,White] and setSquare[0,1,Black]
    and setSquare[0,2,Black] and setSquare[0,3,White]
  setSquare[1,0,White] and setSquare[1,1,White]
    and setSquare[1,2,Black] and setSquare[1,3,White]
  setSquare[2,0,White] and setSquare[2,1,Black]
    and setSquare[2,2,White] and setSquare[2,3,White]
  setSquare[3,0,White] and setSquare[3,1,Black]
    and  setSquare[3,2,Black] and setSquare[3,3,White]
}
run example1 for 16

pred example2 () {
  Answer.width = 4 and Answer.height = 4
  setSquare[0,0,White] and setSquare[0,1,White]
    and setSquare[0,2,White] and setSquare[0,3,White]
  setSquare[1,0,Black] and setSquare[1,1,White]
    and setSquare[1,2,Black] and setSquare[1,3,White]
  setSquare[2,0,White] and setSquare[2,1,Black]
    and setSquare[2,2,White] and setSquare[2,3,White]
  setSquare[3,0,White] and setSquare[3,1,White]
    and setSquare[3,2,White] and setSquare[3,3,White]
}
run example2 for 16

pred noExample () {
  Answer.width = 4 and Answer.height = 4
}
run example2 for 16
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8123/addtag/" class="addtag" id="addtag_8123">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/Alloy/">Alloy</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8123/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8123/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8123"
  >-</span><span
  class="button yellow"
  id="rating_z_8123"
  >0</span><span 
  class="button green"
  id="rating_p_8123"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8123/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8126">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/642/" target="_top">saws</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8126/">#8126</a>(<script language="JavaScript">print_time(new Date("2008/12/07 09:14 GMT"));</script><noscript>2008/12/07 09:14 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>折角なので1行にしてみました.
内容は以下の通りです.</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#ruby -e &quot;puts proc{|w,b,c| w.each_with_index{|line,i| line.each_with_index{|x,j| b[(pos=[i,j]).first][pos.last] = (b.to_enum.map.with_index{|line,i| line.to_enum.map.with_index{|x,j| [x,[i,j]]}}.inject([]){|a,b| a + b}.detect(nil){|y,cpos| y &amp;&amp; y.match(/\A\d#{w[cpos.first][cpos.last]}/) &amp;&amp; proc{|w,pos,cpos,result| con_aux = proc{|b,pos,cpos,e,dir,his| result or pos == cpos &amp;&amp; result = true or dir.map{|d| d.zip(cpos).map{|a,b| a+b}}.select{|c| c.all?{|c| (0...4).include?(c)}}.each{|c| con_aux.(b,pos,c,e,dir,his+[c]) if e == b[c.first][c.last] and !his.include?(c)}} and w[pos.first][pos.last] == w[cpos.first][cpos.last] and con_aux.(w,pos,cpos,w[cpos.first][cpos.last],[*-1..1].product([*-1..1]).select{|a,b| (a+b).abs == 1},[cpos]) and result}.(w,pos,cpos,nil)} or [(c[x]+=1).to_s+x.to_s]).first}} and c}.(w=Array.new(n=4){Array.new(n){[:b,:w].choice}},Array.new(n){Array.new(n){nil}},{:b =&gt; 0, :w =&gt; 0}), w.map(&amp;:join)&quot;</span>
<span class="k">class</span> <span class="nc">World</span>
  <span class="kp">include</span> <span class="no">Enumerable</span>
  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span><span class="o">&amp;</span><span class="nb">proc</span><span class="p">)</span> <span class="vi">@a</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">n</span><span class="p">){</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="o">&amp;</span><span class="nb">proc</span><span class="p">)}</span>  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">each</span><span class="p">()</span>
    <span class="vi">@a</span><span class="o">.</span><span class="n">each_with_index</span><span class="p">{</span><span class="o">|</span><span class="n">line</span><span class="p">,</span><span class="n">i</span><span class="o">|</span> <span class="n">line</span><span class="o">.</span><span class="n">each_with_index</span><span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="p">,</span><span class="n">j</span><span class="o">|</span> <span class="k">yield</span> <span class="o">[</span><span class="n">e</span><span class="p">,</span><span class="o">[</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="o">]]</span><span class="p">}}</span> <span class="k">end</span>
  <span class="k">def</span> <span class="nf">[]=</span><span class="p">(</span><span class="n">pos</span><span class="p">,</span><span class="n">val</span><span class="p">)</span> <span class="vi">@a</span><span class="o">[</span><span class="n">pos</span><span class="o">.</span><span class="n">first</span><span class="o">][</span><span class="n">pos</span><span class="o">.</span><span class="n">last</span><span class="o">]</span> <span class="o">=</span> <span class="n">val</span> <span class="k">end</span>
  <span class="k">def</span> <span class="nf">[]</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>      <span class="vi">@a</span><span class="o">[</span><span class="n">pos</span><span class="o">.</span><span class="n">first</span><span class="o">][</span><span class="n">pos</span><span class="o">.</span><span class="n">last</span><span class="o">]</span> <span class="k">end</span>
  <span class="k">def</span> <span class="nf">inspect</span><span class="p">()</span>    <span class="vi">@a</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:join</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>  <span class="k">end</span>
<span class="k">end</span>
<span class="k">class</span> <span class="nc">Main</span>
  <span class="k">def</span> <span class="nf">initialize</span>
    <span class="vi">@w</span><span class="p">,</span> <span class="vi">@c</span> <span class="o">=</span> <span class="no">World</span><span class="o">.</span><span class="n">new</span><span class="p">{</span><span class="nb">rand</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">zero?</span> <span class="p">?</span> <span class="ss">:b</span> <span class="p">:</span> <span class="ss">:w</span><span class="p">},</span> <span class="p">{</span><span class="ss">:b</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span> <span class="ss">:w</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">}</span>
    <span class="nb">p</span> <span class="vi">@w</span><span class="p">,</span> <span class="nb">scan</span><span class="p">(</span><span class="no">World</span><span class="o">.</span><span class="n">new</span><span class="p">{</span><span class="kp">nil</span><span class="p">}),</span> <span class="vi">@c</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">scan</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
    <span class="vi">@w</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="p">,</span><span class="n">pos</span><span class="o">|</span> <span class="n">b</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">b</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="kp">nil</span><span class="p">){</span><span class="o">|</span><span class="n">y</span><span class="p">,</span><span class="n">cpos</span><span class="o">|</span> <span class="n">y</span> <span class="o">&amp;&amp;</span> <span class="n">y</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/\A\d</span><span class="si">#{</span><span class="vi">@w</span><span class="o">[</span><span class="n">cpos</span><span class="o">]</span><span class="si">}</span><span class="sr">/</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">connect?</span><span class="p">(</span><span class="n">pos</span><span class="p">,</span><span class="n">cpos</span><span class="p">)}</span> <span class="ow">or</span> <span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="vi">@c</span><span class="o">[</span><span class="n">x</span><span class="o">]+=</span><span class="mi">1</span><span class="si">}#{</span><span class="n">x</span><span class="si">}</span><span class="s2">&quot;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="p">}</span> <span class="ow">and</span> <span class="n">b</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">connect?</span><span class="p">(</span><span class="n">pos</span><span class="p">,</span><span class="n">cpos</span><span class="p">,</span><span class="n">result</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
    <span class="n">con_aux</span> <span class="o">=</span> <span class="nb">proc</span><span class="p">{</span><span class="o">|</span><span class="n">b</span><span class="p">,</span><span class="n">pos</span><span class="p">,</span><span class="n">cpos</span><span class="p">,</span><span class="n">e</span><span class="p">,</span><span class="n">dir</span><span class="p">,</span><span class="n">his</span><span class="o">|</span> <span class="n">result</span> <span class="ow">or</span> <span class="n">pos</span> <span class="o">==</span> <span class="n">cpos</span> <span class="o">&amp;&amp;</span> <span class="n">result</span> <span class="o">=</span> <span class="kp">true</span> <span class="ow">or</span> <span class="n">dir</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">c</span><span class="o">|</span> <span class="n">c</span><span class="o">.</span><span class="n">zip</span><span class="p">(</span><span class="n">cpos</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">|</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">}}</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="n">c</span><span class="o">|</span> <span class="n">c</span><span class="o">.</span><span class="n">all?</span><span class="p">{</span><span class="o">|</span><span class="n">c</span><span class="o">|</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">c</span><span class="p">)}}</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">c</span><span class="o">|</span> <span class="n">con_aux</span><span class="o">.</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">pos</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">e</span><span class="p">,</span><span class="n">dir</span><span class="p">,</span><span class="n">his</span><span class="o">+[</span><span class="n">c</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">e</span> <span class="o">==</span> <span class="n">b</span><span class="o">[</span><span class="n">c</span><span class="o">]</span> <span class="ow">and</span> <span class="o">!</span><span class="n">his</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">c</span><span class="p">)}}</span>
    <span class="vi">@w</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span> <span class="o">==</span> <span class="vi">@w</span><span class="o">[</span><span class="n">cpos</span><span class="o">]</span> <span class="ow">and</span> <span class="n">con_aux</span><span class="o">.</span><span class="p">(</span><span class="vi">@w</span><span class="p">,</span><span class="n">pos</span><span class="p">,</span><span class="n">cpos</span><span class="p">,</span><span class="vi">@w</span><span class="o">[</span><span class="n">cpos</span><span class="o">]</span><span class="p">,</span><span class="o">[*-</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">1</span><span class="o">].</span><span class="n">product</span><span class="p">(</span><span class="o">[*-</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">1</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">|</span> <span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">)</span><span class="o">.</span><span class="n">abs</span> <span class="o">==</span> <span class="mi">1</span><span class="p">},</span><span class="o">[</span><span class="n">cpos</span><span class="o">]</span><span class="p">)</span> <span class="ow">and</span> <span class="n">result</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8126/addtag/" class="addtag" id="addtag_8126">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/1.9.0/">1.9.0</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8126/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8126/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8126"
  >-</span><span
  class="button yellow"
  id="rating_z_8126"
  >0</span><span 
  class="button green"
  id="rating_p_8126"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8126/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8256">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/856/" target="_top">fumokmm</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8256/">#8256</a>(<script language="JavaScript">print_time(new Date("2008/12/24 12:15 GMT"));</script><noscript>2008/12/24 12:15 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>クラスを作ってやってみましたが、コードが増えてしまい、あんまりいいこと無しです。</p>
<p>まぁしかし、Groovyの勉強にはなったかな。</p>
</div>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123</pre></td><td class="code"><div class="highlight"><pre>def board1 = new Board(&#39;&#39;&#39;\
□□□□
■□■□
□■□□
□□□□&#39;&#39;&#39;
)
board1.out()
board1.search()
board1.outIslandNo()
println &quot;&quot;&quot;\
白の島は${board1.getIslandCount(&#39;□&#39;)}つ
黒の島は${board1.getIslandCount(&#39;■&#39;)}つ
&quot;&quot;&quot;

def board2 = new Board(&#39;&#39;&#39;\
□■■□
□□■□
□■□□
□■■□&#39;&#39;&#39;
)
board2.out()
board2.search()
board2.outIslandNo()
println &quot;&quot;&quot;\
白の島は${board2.getIslandCount(&#39;□&#39;)}つ
黒の島は${board2.getIslandCount(&#39;■&#39;)}つ
&quot;&quot;&quot;

/** ボードを表現するクラス */
class Board {
  /** タイル */
  def tiles
  /** コンストラクタ */
  def Board(String text) {
    tiles = text.readLines().collect{
      (it as List).collect{ color -&gt; new Tile(&#39;color&#39;:color) }
    }
    
    this.sizeY().times { y -&gt;
      this.sizeX().times { x -&gt;
        this.tiles[y][x].setAround(this, y, x)
      }
    }
  }
  /** Y方向のサイズ */
  Integer sizeY() { return this.tiles.size() as Integer }
  /** X方向のサイズ */
  Integer sizeX() { return this.tiles*.size().unique().first() as Integer }
  /** ボードの未設定の島の数 */
  def remain()    { return tiles.flatten().findAll{ !it.island } }
  /** 指定された色のタイルの島数 */
  def getIslandCount(String color) {
    return tiles.flatten().findAll{ it.color == color }.collect{ it.island }.unique().size()
  }

  /** 島をサーチする */
  def search() {
    // 島番号
    Integer islandNo = 0
    // 未設定のタイル分繰り返す
    remain().each{ tile -&gt;
      tile.island = tile.island ?: ++islandNo
      // 調べる方向
      &#39;urdl&#39;.each{ dir -&gt;
        def around = tile.around[dir]
        // 周りのタイルが同じ色の場合
        if (around?.color == tile.color) {
          // 島番号が設定済み
          if (around.island) {
            tiles.flatten().findAll{ it.island == tile.island }.each{
              it.island = around.island
            }
          // 島番号が未設定
          } else {
            around.island = tile.island
          }
        }
      }
    }
  }

  // デバッグ用
  def out()         { println tiles.collect{ it*.color.join() }.join(&#39;\n&#39;) + &#39;\n&#39; }
  // デバッグ用
  def outIslandNo() { println tiles.collect{ it*.island.join(&#39; &#39;) }.join(&#39;\n&#39;) + &#39;\n&#39; }
}

/** タイルを表現するクラス */
class Tile {
  /** タイルの色 */
  def color = &#39;&#39;
  /** 周りのタイル */
  def around
  /** 島番号 */
  def island = 0

  // 周りを設定するためのクロージャ
  def closAround = { dy, dx, board, y, x -&gt;
    def rangeY = 0..&lt;board.sizeY()
    def rangeX = 0..&lt;board.sizeX()
    if (rangeY.contains(y + dy) &amp;&amp; rangeX.contains(x + dx)) {
      return board.tiles[y + dy][x + dx]
    }
  }
  // 上方向を設定するためのクロージャ
  def closAroundUp    = closAround.curry(-1,  0)
  // 右方向を設定するためのクロージャ
  def closAroundRight = closAround.curry( 0,  1)
  // 下方向を設定するためのクロージャ
  def closAroundDown  = closAround.curry( 1,  0)
  // 左方向を設定するためのクロージャ
  def closAroundLeft  = closAround.curry( 0, -1)

  /** 周りを設定する */
  def setAround(Board board, int y, int x) {
    around = [
      u:closAroundUp   (board, y, x),
      r:closAroundRight(board, y, x),
      d:closAroundDown (board, y, x),
      l:closAroundLeft (board, y, x)
    ]
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8256/addtag/" class="addtag" id="addtag_8256">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8256/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8256/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8256"
  >-</span><span
  class="button yellow"
  id="rating_z_8256"
  >0</span><span 
  class="button green"
  id="rating_p_8256"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8256/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8257">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/985/" target="_top">るびゅ</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8257/">#8257</a>(<script language="JavaScript">print_time(new Date("2008/12/26 01:15 GMT"));</script><noscript>2008/12/26 01:15 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  (;;)って見るからに不安だよねー

あ。IEでエラーなのは気にしない方向で
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;&lt;</span><span class="nx">head</span><span class="o">&gt;&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="k">function</span> <span class="nx">shima</span><span class="p">(){</span>
  <span class="k">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="s2">&quot;&lt;br /&gt;&quot;</span><span class="o">,</span> <span class="nx">black</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="nx">white</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">,</span> <span class="nx">cells</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="mi">16</span><span class="o">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">){</span>
    <span class="nx">cells</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="mi">2</span><span class="p">);</span>
    <span class="nx">str</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">cells</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">?</span> <span class="s2">&quot;□&quot;</span><span class="o">:</span> <span class="s2">&quot;■&quot;</span> <span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="nx">i</span> <span class="o">%</span> <span class="mi">4</span><span class="o">?</span> <span class="s2">&quot;&lt;br /&gt;&quot;</span> <span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">);</span> 
  <span class="p">}</span>
  <span class="k">function</span> <span class="nx">search</span><span class="p">(){</span>
    <span class="k">for</span><span class="p">(;;){</span>
      <span class="k">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
      <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">cell</span> <span class="k">in</span> <span class="nx">cells</span><span class="p">){</span>
        <span class="nx">i</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">area</span><span class="o">:</span> <span class="p">[</span><span class="nx">cell</span><span class="p">]</span><span class="o">,</span> <span class="nx">flag</span><span class="o">:</span> <span class="nx">cells</span><span class="p">[</span><span class="nx">cell</span><span class="p">]</span> <span class="p">}</span>
        <span class="nx">delete</span> <span class="nx">cells</span><span class="p">[</span><span class="nx">cell</span><span class="p">];</span>
        <span class="k">break</span><span class="o">;</span>
      <span class="p">}</span>
      <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">)</span> <span class="k">break</span><span class="o">;</span>
      <span class="k">for</span><span class="p">(;;){</span>
        <span class="k">var</span> <span class="nx">len</span> <span class="o">=</span> <span class="nx">i</span><span class="p">.</span><span class="nx">area</span><span class="p">.</span><span class="nx">length</span><span class="o">;</span>
        <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="nx">j</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="o">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">){</span>
          <span class="k">var</span> <span class="nx">n</span> <span class="o">=</span> <span class="nx">i</span><span class="p">.</span><span class="nx">area</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span>
          <span class="k">for</span> <span class="p">(</span><span class="k">var</span> <span class="nx">cell</span> <span class="k">in</span> <span class="nx">cells</span><span class="p">){</span>
            <span class="nx">cell</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">cell</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span> <span class="nx">i</span><span class="p">.</span><span class="nx">flag</span> <span class="o">!=</span> <span class="nx">cells</span><span class="p">[</span><span class="nx">cell</span><span class="p">]</span> <span class="p">)</span> <span class="k">continue</span><span class="o">;</span>
            <span class="k">if</span>      <span class="p">(</span> <span class="mi">0</span> <span class="o">==</span> <span class="nx">cell</span> <span class="o">%</span> <span class="mi">4</span> <span class="p">){</span>
              <span class="k">if</span><span class="p">(</span> <span class="nx">n</span> <span class="o">!=</span> <span class="nx">cell</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="nx">n</span> <span class="o">!=</span> <span class="nx">cell</span> <span class="o">-</span> <span class="mi">4</span> <span class="o">&amp;&amp;</span> <span class="nx">n</span> <span class="o">!=</span> <span class="nx">cell</span> <span class="o">+</span> <span class="mi">4</span> <span class="p">)</span> <span class="k">continue</span><span class="o">;</span>
            <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span> <span class="mi">1</span> <span class="o">==</span> <span class="nx">cell</span> <span class="o">%</span> <span class="mi">4</span> <span class="p">){</span>
              <span class="k">if</span><span class="p">(</span> <span class="nx">n</span> <span class="o">!=</span> <span class="nx">cell</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="nx">n</span> <span class="o">!=</span> <span class="nx">cell</span> <span class="o">-</span> <span class="mi">4</span> <span class="o">&amp;&amp;</span> <span class="nx">n</span> <span class="o">!=</span> <span class="nx">cell</span> <span class="o">+</span> <span class="mi">4</span> <span class="p">)</span> <span class="k">continue</span><span class="o">;</span>
            <span class="p">}</span><span class="k">else</span><span class="p">{</span>
              <span class="k">if</span><span class="p">(</span> <span class="nx">n</span> <span class="o">!=</span> <span class="nx">cell</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="nx">n</span> <span class="o">!=</span> <span class="nx">cell</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="nx">n</span> <span class="o">!=</span> <span class="nx">cell</span> <span class="o">-</span> <span class="mi">4</span> <span class="o">&amp;&amp;</span> <span class="nx">n</span> <span class="o">!=</span> <span class="nx">cell</span> <span class="o">+</span> <span class="mi">4</span> <span class="p">)</span> <span class="k">continue</span><span class="o">;</span>
            <span class="p">}</span>
            <span class="nx">i</span><span class="p">.</span><span class="nx">area</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">cell</span><span class="p">);</span>
            <span class="nx">delete</span> <span class="nx">cells</span><span class="p">[</span><span class="nx">cell</span><span class="p">];</span>
            <span class="k">break</span><span class="o">;</span>
          <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">len</span> <span class="o">==</span> <span class="nx">i</span><span class="p">.</span><span class="nx">area</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="k">break</span><span class="o">;</span>
      <span class="p">}</span>
      <span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">flag</span><span class="p">){</span>
        <span class="nx">white</span><span class="o">++;</span>
      <span class="p">}</span><span class="k">else</span><span class="p">{</span>
        <span class="nx">black</span><span class="o">++;</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="nx">search</span><span class="p">();</span>
  <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">+=</span> <span class="nx">str</span> <span class="o">+</span> <span class="s2">&quot;white：&quot;</span> <span class="o">+</span> <span class="nx">white</span> <span class="o">+</span> <span class="s2">&quot; black:&quot;</span> <span class="o">+</span> <span class="nx">black</span><span class="o">;</span>
<span class="p">}</span>
<span class="o">&lt;/</span><span class="nx">script</span><span class="o">&gt;&lt;/</span><span class="nx">head</span><span class="o">&gt;&lt;</span><span class="nx">body</span><span class="o">&gt;&lt;</span><span class="nx">button</span> <span class="nx">onclick</span><span class="o">=</span><span class="s2">&quot;shima();&quot;</span><span class="o">&gt;</span><span class="nx">start</span><span class="o">&lt;/</span><span class="nx">button</span><span class="o">&gt;&lt;/</span><span class="nx">body</span><span class="o">&gt;&lt;/</span><span class="nx">html</span><span class="o">&gt;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8257/addtag/" class="addtag" id="addtag_8257">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8257/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8257/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8257"
  >-</span><span
  class="button yellow"
  id="rating_z_8257"
  >0</span><span 
  class="button green"
  id="rating_p_8257"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8257/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8261">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/581/" target="_top">割と普通</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8261/">#8261</a>(<script language="JavaScript">print_time(new Date("2008/12/28 12:51 GMT"));</script><noscript>2008/12/28 12:51 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>基本的にLINQ使いで</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55</pre></td><td class="code"><div class="highlight"><pre>    <span class="k">class</span> <span class="nc">MyMain</span>
    <span class="k">{</span>
        <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="kt">string</span> <span class="n">island</span> <span class="p">=</span> <span class="s">@&quot;</span>
<span class="s">□□□□</span>
<span class="s">■□■□</span>
<span class="s">□□■■</span>
<span class="s">□□□□</span>
<span class="s">&quot;</span><span class="p">;</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">island</span><span class="p">);</span>
            <span class="n">var</span> <span class="n">dict</span> <span class="p">=</span> <span class="n">CountUpIslandNum</span><span class="p">.</span><span class="n">returnIslandNum</span><span class="p">(</span><span class="n">island</span><span class="p">);</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="n">var</span> <span class="n">key</span> <span class="k">in</span> <span class="n">dict</span><span class="p">.</span><span class="n">Keys</span><span class="p">)</span>
            <span class="k">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}島の数は {1}&quot;</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">dict</span><span class="p">[</span><span class="n">key</span><span class="p">]);</span>
            <span class="k">}</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
        <span class="k">}</span>
    <span class="k">}</span>

    <span class="k">class</span> <span class="nc">CountUpIslandNum</span>
    <span class="k">{</span>
        <span class="k">public</span> <span class="k">static</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">char</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span> <span class="n">returnIslandNum</span><span class="p">(</span><span class="kt">string</span> <span class="n">island</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="kt">char</span><span class="p">[][]</span> <span class="n">map</span> <span class="p">=</span> <span class="n">island</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="k">new</span> <span class="kt">string</span><span class="p">[]</span> <span class="k">{</span> <span class="n">Environment</span><span class="p">.</span><span class="n">NewLine</span> <span class="k">}</span><span class="p">,</span> <span class="n">StringSplitOptions</span><span class="p">.</span><span class="n">RemoveEmptyEntries</span><span class="p">).</span><span class="n">Select</span><span class="p">(</span><span class="n">inst</span> <span class="p">=&gt;</span> <span class="n">inst</span><span class="p">.</span><span class="n">ToCharArray</span><span class="p">()).</span><span class="n">ToArray</span><span class="p">();</span>
            <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">char</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span> <span class="n">countDict</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">char</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;();</span>
            <span class="n">countDict</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="sc">&#39;■&#39;</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
            <span class="n">countDict</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="sc">&#39;□&#39;</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&lt;</span> <span class="n">map</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span>
            <span class="k">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">y</span> <span class="p">&lt;</span> <span class="n">map</span><span class="p">[</span><span class="n">x</span><span class="p">].</span><span class="n">Length</span><span class="p">;</span> <span class="n">y</span><span class="p">++)</span>
                <span class="k">{</span>
                    <span class="kt">char</span> <span class="n">c</span> <span class="p">=</span> <span class="n">map</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">];</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">countDict</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="n">c</span><span class="p">))</span>
                    <span class="k">{</span>
                        <span class="n">check</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">countDict</span><span class="p">[</span><span class="n">c</span><span class="p">],</span> <span class="n">c</span><span class="p">);</span>
                        <span class="n">countDict</span><span class="p">[</span><span class="n">c</span><span class="p">]++;</span>
                    <span class="k">}</span>
                <span class="k">}</span>
            <span class="k">}</span>
            <span class="k">return</span> <span class="n">countDict</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">protected</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">check</span><span class="p">(</span><span class="kt">char</span><span class="p">[][]</span> <span class="n">map</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="kt">int</span> <span class="n">value</span><span class="p">,</span> <span class="kt">char</span> <span class="n">block</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="p">&lt;</span> <span class="m">0</span> <span class="p">||</span> <span class="n">x</span> <span class="p">&gt;=</span> <span class="n">map</span><span class="p">.</span><span class="n">Length</span> <span class="p">||</span> <span class="n">y</span> <span class="p">&lt;</span> <span class="m">0</span> <span class="p">||</span> <span class="n">y</span> <span class="p">&gt;=</span> <span class="n">map</span><span class="p">[</span><span class="n">x</span><span class="p">].</span><span class="n">Length</span> <span class="p">||</span> <span class="n">map</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="p">!=</span> <span class="n">block</span><span class="p">)</span>
            <span class="k">{</span>
                <span class="k">return</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="n">map</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="p">=</span> <span class="p">(</span><span class="kt">char</span><span class="p">)</span><span class="n">value</span><span class="p">;</span>
            <span class="n">check</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">x</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">block</span><span class="p">);</span>
            <span class="n">check</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">x</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">block</span><span class="p">);</span>
            <span class="n">check</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">block</span><span class="p">);</span>
            <span class="n">check</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">block</span><span class="p">);</span>
        <span class="k">}</span>
    <span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8261/addtag/" class="addtag" id="addtag_8261">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8261/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8261/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8261"
  >-</span><span
  class="button yellow"
  id="rating_z_8261"
  >0</span><span 
  class="button green"
  id="rating_p_8261"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8261/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8265">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8265/">#8265</a>(<script language="JavaScript">print_time(new Date("2008/12/31 01:28 GMT"));</script><noscript>2008/12/31 01:28 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/matlab/">
	  Matlab
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre>input1 = [ 0 1 1 0; 0 0 1 0; 0 1 0 0; 0 1 1 0];
input2 = [ 0 0 0 0; 1 0 1 0; 0 1 0 0; 0 0 0 0];

nBlobs1 = count_blobs(input1);
nBlobs2 = count_blobs(input2);

%以下　function　count_blobs

function nBlobs = count_blobs(input_mtx)

nBlobs = 0;
for i = 1:size(input_mtx,2)
    
    if i==1
        previous_raw = zeros(size(input_mtx,1),1)
    else
        previous_raw = input_mtx(:,i-1)
    end
    
    for j = 1:size(input_mtx,1) 
        if input_mtx(j,i) ==1 &amp;&amp; previous_raw(j) ~=1
            if j==1 | (j &gt; 1 &amp;&amp; input_mtx(j-1,i) ~=1)
                    nBlobs = nBlobs+1;
            end
        end
    end

end
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8265/addtag/" class="addtag" id="addtag_8265">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/matlab/">
		Matlab
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8265/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8265/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8265"
  >-</span><span
  class="button yellow"
  id="rating_z_8265"
  >0</span><span 
  class="button green"
  id="rating_p_8265"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8265/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8286">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8286/">#8286</a>(<script language="JavaScript">print_time(new Date("2009/01/05 20:42 GMT"));</script><noscript>2009/01/05 20:42 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="nv">$m</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>  <span class="nv">$n</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>

<span class="k">for</span> <span class="k">my</span> <span class="nv">$i</span> <span class="p">(</span><span class="mi">0</span> <span class="o">..</span> <span class="nv">$m</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">for</span> <span class="k">my</span> <span class="nv">$j</span> <span class="p">(</span><span class="mi">0</span> <span class="o">..</span> <span class="nv">$n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$board</span><span class="p">[</span><span class="nv">$i</span><span class="p">][</span><span class="nv">$j</span><span class="p">]</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">rand</span> <span class="mi">2</span><span class="p">)</span> <span class="p">?</span> <span class="s">&#39;■&#39;</span> <span class="p">:</span> <span class="s">&#39;□&#39;</span><span class="p">;</span>
    <span class="k">print</span> <span class="nv">$board</span><span class="p">[</span><span class="nv">$i</span><span class="p">][</span><span class="nv">$j</span><span class="p">];</span>
  <span class="p">}</span>
  <span class="k">print</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">for</span> <span class="k">my</span> <span class="nv">$i</span> <span class="p">(</span><span class="mi">0</span> <span class="o">..</span> <span class="nv">$m</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">for</span> <span class="k">my</span> <span class="nv">$j</span> <span class="p">(</span><span class="mi">0</span> <span class="o">..</span> <span class="nv">$n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$board</span><span class="p">[</span><span class="nv">$i</span><span class="p">][</span><span class="nv">$j</span><span class="p">])</span> <span class="p">{</span>
      <span class="nv">$num</span><span class="p">{</span><span class="nv">$board</span><span class="p">[</span><span class="nv">$i</span><span class="p">][</span><span class="nv">$j</span><span class="p">]}</span><span class="o">++</span><span class="p">;</span>
      <span class="n">walk</span><span class="p">(</span><span class="nv">$i</span><span class="p">,</span> <span class="nv">$j</span><span class="p">,</span> <span class="nv">$board</span><span class="p">[</span><span class="nv">$i</span><span class="p">][</span><span class="nv">$j</span><span class="p">]);</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="k">print</span> <span class="s">&quot;■= $num{&#39;■&#39;}, □= $num{&#39;□&#39;}\n&quot;</span><span class="p">;</span>

<span class="k">sub </span><span class="nf">walk</span> <span class="p">{</span>
  <span class="k">my</span> <span class="p">(</span><span class="nv">$i</span><span class="p">,</span> <span class="nv">$j</span><span class="p">,</span> <span class="nv">$c</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
  <span class="k">return</span> <span class="k">if</span> <span class="nv">$c</span> <span class="ow">ne</span> <span class="nv">$board</span><span class="p">[</span><span class="nv">$i</span><span class="p">][</span><span class="nv">$j</span><span class="p">];</span>
  <span class="nv">$board</span><span class="p">[</span><span class="nv">$i</span><span class="p">][</span><span class="nv">$j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="n">walk</span> <span class="p">(</span><span class="nv">$i</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$j</span>  <span class="p">,</span> <span class="nv">$c</span><span class="p">)</span> <span class="k">if</span> <span class="nv">$i</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span>
  <span class="n">walk</span> <span class="p">(</span><span class="nv">$i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$j</span>  <span class="p">,</span> <span class="nv">$c</span><span class="p">)</span> <span class="k">if</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="nv">$m</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
  <span class="n">walk</span> <span class="p">(</span><span class="nv">$i</span>  <span class="p">,</span> <span class="nv">$j</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$c</span><span class="p">)</span> <span class="k">if</span> <span class="nv">$j</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span>
  <span class="n">walk</span> <span class="p">(</span><span class="nv">$i</span>  <span class="p">,</span> <span class="nv">$j</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$c</span><span class="p">)</span> <span class="k">if</span> <span class="nv">$j</span> <span class="o">&lt;</span> <span class="nv">$n</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8286/addtag/" class="addtag" id="addtag_8286">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8286/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8286/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8286"
  >-</span><span
  class="button yellow"
  id="rating_z_8286"
  >0</span><span 
  class="button green"
  id="rating_p_8286"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8286/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment8442">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8442/">#8442</a>(<script language="JavaScript">print_time(new Date("2009/02/04 15:51 GMT"));</script><noscript>2009/02/04 15:51 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre><span class="cm">=begin</span>
<span class="cm">1行読み込む毎にカウントしています。</span>
<span class="cm">島の数 = セル数 - 隣接している辺数 + (2x2の範囲が同色の箇所数)</span>
<span class="cm">例:  &quot;wwww,bwbw,wbww,wwww&quot;の場合、</span>
<span class="cm">w: 13 - 13 + 1 = 1</span>
<span class="cm">b: 3 - 0 + 0 = 3</span>
<span class="cm">=end</span>

<span class="k">class</span> <span class="nc">Sima</span>  
  <span class="k">def</span> <span class="nf">initialize</span>
    <span class="vi">@h</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
    <span class="vi">@s</span> <span class="o">=</span> <span class="o">[]</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">count</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
    <span class="vi">@s</span> <span class="o">&lt;&lt;</span> <span class="n">s</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)</span>
    <span class="vi">@s</span><span class="o">[-</span><span class="mi">1</span><span class="o">].</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span><span class="vi">@h</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">}</span>
    <span class="k">if</span> <span class="vi">@s</span><span class="o">.</span><span class="n">size</span> <span class="o">&gt;</span> <span class="mi">1</span>
      <span class="n">count_sq</span><span class="p">(</span><span class="n">w</span> <span class="o">=</span> <span class="vi">@s</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">zip</span><span class="p">(</span><span class="vi">@s</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
      <span class="n">count_sq</span><span class="p">(</span><span class="n">w</span><span class="o">.</span><span class="n">zip</span><span class="p">(</span><span class="n">w</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="p">),</span> <span class="mi">1</span><span class="p">)</span>
      <span class="vi">@s</span><span class="o">.</span><span class="n">shift</span>
    <span class="k">end</span>
    <span class="n">count_sq</span><span class="p">(</span><span class="vi">@s</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">zip</span><span class="p">(</span><span class="vi">@s</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">count_sq</span><span class="p">(</span><span class="n">ss</span><span class="p">,</span> <span class="n">delta</span><span class="p">)</span>
    <span class="n">ss</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span>
      <span class="n">x</span><span class="o">.</span><span class="n">flatten!</span>
      <span class="vi">@h</span><span class="o">[</span><span class="n">x</span><span class="o">[</span><span class="mi">0</span><span class="o">]]</span> <span class="o">+=</span> <span class="n">delta</span> <span class="k">if</span> <span class="n">x</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">1</span><span class="p">}</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">all</span> 
    <span class="vi">@h</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="o">[</span>
 <span class="s2">&quot;wbbw,wwbw,wbww,wbbw&quot;</span><span class="p">,</span> <span class="c1"># =&gt; {&quot;w&quot;=&gt;2, &quot;b&quot;=&gt;2}</span>
 <span class="s2">&quot;wwww,bwbw,wbww,wwww&quot;</span><span class="p">,</span> <span class="c1"># =&gt; {&quot;w&quot;=&gt;1, &quot;b&quot;=&gt;3}</span>
<span class="o">].</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span>
  <span class="n">sima</span> <span class="o">=</span> <span class="no">Sima</span><span class="o">.</span><span class="n">new</span>  
  <span class="n">x</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/,/</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
    <span class="n">sima</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">i</span><span class="p">)}</span>
  <span class="nb">p</span> <span class="n">sima</span><span class="o">.</span><span class="n">all</span><span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8442/addtag/" class="addtag" id="addtag_8442">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/1.8.6/">1.8.6</a>
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/ruby/">ruby</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8442/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8442/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8442"
  >-</span><span
  class="button yellow"
  id="rating_z_8442"
  >0</span><span 
  class="button green"
  id="rating_p_8442"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100605045807/http://ja.doukaku.org/comment/8442/">
    2
    replies
  </a>

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8442/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8450">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8450/">#8450</a>(<script language="JavaScript">print_time(new Date("2009/02/05 04:17 GMT"));</script><noscript>2009/02/05 04:17 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>#8442 の方法が気に入ったので Haskell で。
黒のセルを 1 に、白のセルを -1 に対応させて隣接セルとの
処理を加算と除算で済ますようにしました。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre><span class="cm">{-</span>
<span class="cm">島の数 = セル数 - 隣接している辺数 + (2x2の範囲が同色の箇所数)</span>
<span class="cm">-}</span>
<span class="kr">import</span> <span class="n">List</span> <span class="p">(</span><span class="nv">partition</span><span class="p">)</span>

<span class="kr">data</span> <span class="n">BW</span> <span class="o">=</span> <span class="n">B</span> <span class="o">|</span> <span class="n">W</span> <span class="kr">deriving</span> <span class="p">(</span><span class="n">Eq</span><span class="p">)</span>

<span class="nv">toInt</span> <span class="n">B</span> <span class="o">=</span> <span class="mi">1</span>
<span class="nv">toInt</span> <span class="n">W</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>

<span class="nv">count</span> <span class="nv">xss</span> <span class="o">=</span> <span class="p">(</span><span class="nv">n1</span><span class="p">,</span><span class="o">-</span><span class="nv">n2</span><span class="p">)</span> <span class="kr">where</span>
  <span class="p">([</span><span class="nv">n1</span><span class="p">,</span><span class="nv">n2</span><span class="p">],</span><span class="kr">_</span><span class="p">,</span><span class="kr">_</span><span class="p">)</span> <span class="o">=</span> <span class="nv">foldl</span> <span class="nv">f</span> <span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nv">zeros</span><span class="p">,</span><span class="nv">zeros</span><span class="p">)</span> <span class="o">$</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">toInt</span><span class="p">)</span> <span class="nv">xss</span>
  <span class="nv">f</span> <span class="p">(</span><span class="nv">ns</span><span class="p">,</span><span class="nv">xs0</span><span class="p">,</span><span class="nv">ys0</span><span class="p">)</span> <span class="nv">xs</span> <span class="o">=</span> <span class="p">(</span><span class="nv">ns&#39;</span><span class="p">,</span><span class="nv">xs</span><span class="p">,</span><span class="nv">ys</span><span class="p">)</span> <span class="kr">where</span>
    <span class="p">[</span><span class="nv">ys</span><span class="p">,</span><span class="nv">ys2</span><span class="p">,</span><span class="nv">zs</span><span class="p">]</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">g</span> <span class="p">[(</span><span class="nv">xs</span><span class="p">,</span><span class="nv">tail</span> <span class="nv">xs</span><span class="p">),(</span><span class="nv">xs0</span><span class="p">,</span><span class="nv">xs</span><span class="p">),(</span><span class="nv">ys0</span><span class="p">,</span><span class="nv">ys</span><span class="p">)]</span>
    <span class="p">[(</span><span class="nv">bp</span><span class="p">,</span><span class="nv">wp</span><span class="p">),(</span><span class="nv">bn</span><span class="p">,</span><span class="nv">wn</span><span class="p">)]</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">partition</span> <span class="p">(</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">))</span> <span class="p">[</span><span class="nv">ns</span><span class="o">++</span><span class="nv">xs</span><span class="o">++</span><span class="nv">zs</span><span class="p">,</span> <span class="nv">ys</span><span class="o">++</span><span class="nv">ys2</span><span class="p">]</span>
    <span class="nv">ns&#39;</span> <span class="o">=</span> <span class="p">[</span><span class="nv">sum</span> <span class="nv">bp</span> <span class="o">-</span> <span class="nv">sum</span> <span class="nv">bn</span><span class="p">,</span> <span class="nv">sum</span> <span class="nv">wp</span> <span class="o">-</span> <span class="nv">sum</span> <span class="nv">wn</span><span class="p">]</span>
  <span class="nv">g</span> <span class="p">(</span><span class="nv">as</span><span class="p">,</span><span class="nv">bs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(`</span><span class="nv">quot</span><span class="p">`</span><span class="mi">2</span><span class="p">)</span> <span class="o">$</span> <span class="nv">zipWith</span> <span class="p">(</span><span class="o">+</span><span class="p">)</span> <span class="nv">as</span> <span class="nv">bs</span>
  <span class="nv">zeros</span> <span class="o">=</span> <span class="nv">repeat</span> <span class="mi">0</span>

<span class="cm">{-</span>
<span class="cm">&gt; count [[W,W,W,W],[B,W,B,W],[W,B,W,W],[W,W,W,W]]</span>
<span class="cm">(3,1)</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8450/addtag/" class="addtag" id="addtag_8450">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8450/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8450/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8450"
  >-</span><span
  class="button yellow"
  id="rating_z_8450"
  >0</span><span 
  class="button green"
  id="rating_p_8450"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8442/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8450/root/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8450/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8491">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/893/" target="_top">ckbx</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8491/">#8491</a>(<script language="JavaScript">print_time(new Date("2009/02/12 07:32 GMT"));</script><noscript>2009/02/12 07:32 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>双対グラフのオイラー標数という発想ですね。
このままですと、島に穴が開いている場合にうまくカウントができないようですので・・・
■■■
■□■
■■■
8 - 8 + 0 = 0</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8491/addtag/" class="addtag" id="addtag_8491">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8491"
  >-</span><span
  class="button yellow"
  id="rating_z_8491"
  >0</span><span 
  class="button green"
  id="rating_p_8491"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8442/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100605045807/http://ja.doukaku.org/comment/8491/root/"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8491/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment8452">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8452/">#8452</a>(<script language="JavaScript">print_time(new Date("2009/02/05 05:59 GMT"));</script><noscript>2009/02/05 05:59 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre><span class="cm">=begin</span>
<span class="cm">#8442をruby1.9.0のEnumeratorで書き換えたものです。</span>
<span class="cm">=end</span>

<span class="k">class</span> <span class="nc">Sima</span>  
  <span class="k">def</span> <span class="nf">initialize</span>
    <span class="vi">@h</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">count</span><span class="p">(</span><span class="n">ss</span><span class="p">)</span>
    <span class="n">ss</span> <span class="o">=</span> <span class="n">ss</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span><span class="n">x</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)}</span><span class="o">.</span><span class="n">to_enum</span>
    <span class="n">ss</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">s</span><span class="o">|</span>
      <span class="n">s</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span><span class="vi">@h</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">}</span>
      <span class="n">count_sq</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">each_cons</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)}</span> 
    <span class="n">ss</span><span class="o">.</span><span class="n">each_cons</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">s</span><span class="o">|</span>
      <span class="n">count_sq</span><span class="p">(</span><span class="n">w</span><span class="o">=</span><span class="n">s</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">zip</span><span class="p">(</span><span class="n">s</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
      <span class="n">count_sq</span><span class="p">(</span><span class="n">w</span><span class="o">.</span><span class="n">each_cons</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="mi">1</span><span class="p">)}</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">count_sq</span><span class="p">(</span><span class="n">ss</span><span class="p">,</span> <span class="n">delta</span><span class="p">)</span>
    <span class="n">ss</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span>
      <span class="n">x</span><span class="o">.</span><span class="n">flatten!</span>
      <span class="vi">@h</span><span class="o">[</span><span class="n">x</span><span class="o">[</span><span class="mi">0</span><span class="o">]]</span> <span class="o">+=</span> <span class="n">delta</span> <span class="k">if</span> <span class="n">x</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">1</span><span class="p">}</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">all</span> 
    <span class="vi">@h</span>
  <span class="k">end</span>
<span class="k">end</span>
  
  <span class="o">[</span>
   <span class="s2">&quot;wbbw,wwbw,wbww,wbbw&quot;</span><span class="p">,</span> <span class="c1"># =&gt; {&quot;w&quot;=&gt;2, &quot;b&quot;=&gt;2}</span>
   <span class="s2">&quot;wwww,bwbw,wbww,wwww&quot;</span><span class="p">,</span> <span class="c1"># =&gt; {&quot;w&quot;=&gt;1, &quot;b&quot;=&gt;3}</span>
   <span class="s2">&quot;abcc,acbc,bccc,baca&quot;</span><span class="p">,</span> <span class="c1"># =&gt; {&quot;a&quot;=&gt;3, &quot;b&quot;=&gt;3, &quot;c&quot;=&gt;1}</span>
  <span class="o">].</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span>
    <span class="n">sima</span> <span class="o">=</span> <span class="no">Sima</span><span class="o">.</span><span class="n">new</span>  
    <span class="n">sima</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/,/</span><span class="p">)</span><span class="o">.</span><span class="n">to_enum</span><span class="p">)</span>
    <span class="nb">p</span> <span class="n">sima</span><span class="o">.</span><span class="n">all</span><span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/8452/addtag/" class="addtag" id="addtag_8452">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/1.9.0/">1.9.0</a>
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/ruby/">ruby</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8452/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/8452/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8452"
  >-</span><span
  class="button yellow"
  id="rating_z_8452"
  >0</span><span 
  class="button green"
  id="rating_p_8452"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/8452/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment9031">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/763/" target="_top">Songmu</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/9031/">#9031</a>(<script language="JavaScript">print_time(new Date("2009/06/02 02:42 GMT"));</script><noscript>2009/06/02 02:42 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#/usr/bin/perl</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">List::</span><span class="n">MoreUtils</span> <span class="n">qw</span><span class="sr">/uniq/</span><span class="p">;</span>

<span class="c1"># 天地創造</span>
<span class="k">my</span> <span class="nv">$earth</span> <span class="o">=</span> <span class="n">theCreation</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">);</span>

<span class="k">my</span> <span class="nv">@island_groups</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$idx</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="c1"># 2次元配列をなめて、隣接する土地が同じ色の場合、グループ化する。</span>
<span class="c1"># ざっくりグループ化する。</span>
<span class="k">for</span> <span class="k">my</span> <span class="nv">$y</span> <span class="p">(</span><span class="mi">0</span><span class="o">..</span><span class="nv">$#$earth</span><span class="p">){</span>
    <span class="k">my</span> <span class="nv">$same_with_left</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="k">my</span> <span class="nv">$x</span> <span class="p">(</span><span class="mi">0</span><span class="o">..</span><span class="nv">$#</span><span class="p">{</span><span class="nv">$earth</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">$y</span><span class="p">]}){</span>
        <span class="k">unless</span><span class="p">(</span><span class="nv">$same_with_left</span><span class="p">){</span>
            <span class="c1">#左が違う色の場合、新しいグループをアサインする。</span>
            <span class="nv">$island_groups</span><span class="p">[</span><span class="o">++</span><span class="nv">$idx</span><span class="p">]</span> <span class="o">=</span> <span class="o">[]</span><span class="p">;</span>
            <span class="nb">push</span> <span class="nv">@</span><span class="p">{</span><span class="nv">$island_groups</span><span class="p">[</span><span class="nv">$idx</span><span class="p">]},</span> <span class="s">&quot;$y-$x&quot;</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="nv">$x</span> <span class="o">!=</span> <span class="nv">$#</span><span class="p">{</span><span class="nv">$earth</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">$y</span><span class="p">]}</span> <span class="ow">and</span> <span class="nv">$earth</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">$y</span><span class="p">][</span><span class="nv">$x</span><span class="p">]</span> <span class="o">==</span> <span class="nv">$earth</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">$y</span><span class="p">][</span><span class="nv">$x</span><span class="o">+</span><span class="mi">1</span><span class="p">]){</span><span class="c1">#右と色が同じ</span>
            <span class="nv">$same_with_left</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="k">my</span> <span class="nv">$tmp</span> <span class="o">=</span> <span class="nv">$x</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
            <span class="nb">push</span> <span class="nv">@</span><span class="p">{</span><span class="nv">$island_groups</span><span class="p">[</span><span class="nv">$idx</span><span class="p">]},</span> <span class="s">&quot;$y-$tmp&quot;</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span><span class="p">{</span>
            <span class="nv">$same_with_left</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="nv">$y</span> <span class="o">!=</span> <span class="nv">$#$earth</span> <span class="ow">and</span> <span class="nv">$earth</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">$y</span><span class="p">][</span><span class="nv">$x</span><span class="p">]</span> <span class="o">==</span> <span class="nv">$earth</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">$y</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="nv">$x</span><span class="p">]){</span><span class="c1">#下と色が同じ</span>
            <span class="k">my</span> <span class="nv">$tmp</span> <span class="o">=</span> <span class="nv">$y</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
            <span class="nb">push</span> <span class="nv">@</span><span class="p">{</span><span class="nv">$island_groups</span><span class="p">[</span><span class="nv">$idx</span><span class="p">]},</span> <span class="s">&quot;$tmp-$x&quot;</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">#上で作ったグループ内で重複がある場合はマージ。無くなるまで繰り返す</span>
<span class="c1">#例 [&#39;1-3&#39;,&#39;2-2&#39;] [&#39;1-3&#39;,&#39;2,3&#39;] =&gt; [&#39;1-3&#39;,&#39;2-2&#39;,&#39;2-3&#39;]</span>
<span class="k">while</span><span class="p">(</span><span class="n">how_many_elms</span><span class="p">(</span><span class="nv">@island_groups</span><span class="p">)</span> <span class="o">!=</span> <span class="o">+</span><span class="p">(</span><span class="nv">$#$earth</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nv">$#</span><span class="p">{</span><span class="nv">$earth</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">]}</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)){</span>
    <span class="k">for</span> <span class="k">my</span> <span class="nv">$i</span> <span class="p">(</span><span class="mi">0</span><span class="o">..</span><span class="nv">$#island_groups</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="nv">$island_groups</span><span class="p">[</span><span class="nv">$i</span><span class="p">]){</span>
            <span class="k">for</span> <span class="k">my</span> <span class="nv">$j</span> <span class="p">(</span><span class="nv">$i</span><span class="o">+</span><span class="mi">1</span><span class="o">..</span><span class="nv">$#island_groups</span><span class="p">){</span><span class="c1">#積集合が存在すればマージ。後ろの集合は消去</span>
                <span class="k">my</span> <span class="nv">@tmp</span> <span class="o">=</span> <span class="n">uniq</span><span class="p">(</span><span class="nv">@</span><span class="p">{</span><span class="nv">$island_groups</span><span class="p">[</span><span class="nv">$i</span><span class="p">]},</span> <span class="nv">@</span><span class="p">{</span><span class="nv">$island_groups</span><span class="p">[</span><span class="nv">$j</span><span class="p">]});</span>
                <span class="k">if</span><span class="p">(</span><span class="nv">$#tmp</span> <span class="o">!=</span> <span class="nv">$#</span><span class="p">{</span><span class="nv">$island_groups</span><span class="p">[</span><span class="nv">$i</span><span class="p">]}</span> <span class="o">+</span> <span class="nv">$#</span><span class="p">{</span><span class="nv">$island_groups</span><span class="p">[</span><span class="nv">$j</span><span class="p">]}</span> <span class="o">+</span> <span class="mi">1</span><span class="p">){</span>
                    <span class="nv">@</span><span class="p">{</span><span class="nv">$island_groups</span><span class="p">[</span><span class="nv">$i</span><span class="p">]}</span> <span class="o">=</span> <span class="nv">@tmp</span><span class="p">;</span>
                    <span class="nv">$island_groups</span><span class="p">[</span><span class="nv">$j</span><span class="p">]</span> <span class="o">=</span> <span class="o">[]</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="nv">@island_groups</span> <span class="o">=</span> <span class="nb">grep</span> <span class="p">{(</span><span class="nb">scalar</span> <span class="nv">@$_</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">}</span> <span class="nv">@island_groups</span><span class="p">;</span>
<span class="p">}</span>
<span class="c1"># 結果を出力する</span>
<span class="k">my</span> <span class="p">(</span><span class="nv">$wht_i</span><span class="p">,</span> <span class="nv">$blk_i</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
<span class="k">for</span> <span class="k">my</span> <span class="nv">$group</span> <span class="p">(</span><span class="nv">@island_groups</span><span class="p">){</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$x</span><span class="p">,</span> <span class="nv">$y</span><span class="p">)</span> <span class="o">=</span> <span class="nb">split</span> <span class="s">&#39;-&#39;</span><span class="p">,</span><span class="nv">$group</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="nv">$earth</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">$x</span><span class="p">][</span><span class="nv">$y</span><span class="p">]</span> <span class="p">?</span> <span class="nv">$blk_i</span><span class="o">++</span> <span class="p">:</span> <span class="nv">$wht_i</span><span class="o">++</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">print</span> <span class="s">&quot;black: $blk_i, white: $wht_i&quot;</span><span class="p">;</span>


<span class="c1">###</span>
<span class="c1">#天地創造</span>
<span class="k">sub </span><span class="nf">theCreation</span><span class="p">{</span>
    <span class="k">my</span><span class="p">(</span><span class="nv">$n</span><span class="p">,</span> <span class="nv">$m</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">@result_arr</span><span class="p">;</span>
    <span class="k">for</span> <span class="k">my</span> <span class="nv">$x</span> <span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="nv">$n</span><span class="p">){</span>
        <span class="k">for</span> <span class="k">my</span> <span class="nv">$y</span> <span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="nv">$m</span><span class="p">){</span>
            <span class="nv">$result_arr</span><span class="p">[</span><span class="nv">$x</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="nv">$y</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">rand</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span>
            <span class="k">print</span> <span class="nv">$result_arr</span><span class="p">[</span><span class="nv">$x</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="nv">$y</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="p">?</span> <span class="s">&#39;■&#39;</span> <span class="p">:</span> <span class="s">&#39;□&#39;</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">print</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="o">\</span><span class="nv">@result_arr</span><span class="p">;</span>
<span class="p">}</span>
<span class="c1">#配列の各要素が配列参照の場合、合計いくつの要素があるか。</span>
<span class="c1">#例： ([1,2],[33,4,5,6],[2,3,3]) =&gt; 9 が返る</span>
<span class="k">sub </span><span class="nf">how_many_elms</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">@arr</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="nv">@arr</span><span class="p">){</span>
        <span class="nv">$count</span> <span class="o">+=</span> <span class="nb">scalar</span> <span class="nv">@$_</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nv">$count</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/9031/addtag/" class="addtag" id="addtag_9031">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/9031/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/9031/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9031"
  >-</span><span
  class="button yellow"
  id="rating_z_9031"
  >0</span><span 
  class="button green"
  id="rating_p_9031"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/9031/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9623">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/1107/" target="_top">T_GYOUTEN</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/9623/">#9623</a>(<script language="JavaScript">print_time(new Date("2009/10/05 12:25 GMT"));</script><noscript>2009/10/05 12:25 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  F# で、Discriminated unionを使用しました。
solve [| [|0;1;1;0|];[|0;0;1;0|];[|0;1;0;0|];[|0;1;1;0|] |]として
結果は
白の島は2つ
黒の島は2つ
    [W1][B1][B1][W2]    
    [W1][W1][B1][W2]    
    [W1][B2][W2][W2]    
    [W1][B2][B2][W2]  
という感じで答えが表示されます。  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72</pre></td><td class="code"><div class="highlight"><pre>type Color =
    |White
    |Black

type Piece =
    | Island of Color * Option &lt;int&gt;
    | Dummy
    
    member this.toStr () =
        match this with
        | Island (White,Some(n)) -&gt; sprintf &quot;[W%d]&quot; n
        | Island (Black,Some(n)) -&gt; sprintf &quot;[B%d]&quot; n
        | _ -&gt; &quot;    &quot;
             
let makeUpArr (rawArr : int [][]) =
    let tempArr = [| for i in 0 .. (Array.length rawArr) + 1 do
                            yield (Array.create (Array.length rawArr.[0] + 2)) Dummy|]
        
    for i in 0 .. (Array.length rawArr) - 1 do
        let t = rawArr.[i]
        for j in 0 .. (Array.length rawArr.[0])-1 do
            if rawArr.[i].[j] = 0 then
                tempArr.[i+1].[j+1] &lt;- Island(White,None)
            else 
                tempArr.[i+1].[j+1] &lt;- Island(Black,None)
            
    tempArr
    
let mutable WhiteCount =  0
let mutable BlackCount =  0

let rec nearCheck (i0,j0) (arr: Piece [] [] ) =
    for (v1,v2) in [(1,0);(-1,0);(0,1);(0,-1)] do
        let (i1,j1) = (i0 + v1,j0 + v2) 
        match arr.[i0].[j0] ,arr.[i1].[j1] with
        |Island (c1,Some(number)),Island(c2,None) when c1 = c2 -&gt; arr.[i1].[j1] &lt;- Island(c1,Some(number));nearCheck(i1,j1) arr
        | _ -&gt; ()

let check i j (arr: Piece [] [] ) =
    match arr.[i].[j] with
    |Island(c1,None) -&gt;match c1 with
                       | White -&gt; WhiteCount &lt;- WhiteCount + 1; arr.[i].[j] &lt;- Island (White,Some(WhiteCount))
                       | Black -&gt; BlackCount &lt;- BlackCount + 1; arr.[i].[j] &lt;- Island (Black,Some(BlackCount))
                       nearCheck (i,j) arr
    | _ -&gt; () 
   
let cope (arr : Piece [] []) =
 
    WhiteCount &lt;- 0
    BlackCount &lt;- 0
 
    for i = 1 to (Array.length arr - 2) do
        for j = 1 to (Array.length arr.[i] - 2) do
            check i j arr 

let dispResult (arr : Piece [] []) =
    printfn &quot;&quot;
    printfn &quot;白の島は%dつ&quot; WhiteCount
    printfn &quot;黒の島は%dつ&quot; BlackCount
    
    for i = 0 to (Array.length arr - 1) do
        for j = 0 to (Array.length arr.[i] - 1) do
            printf &quot;%s&quot; (arr.[i].[j].toStr()) 
        printf &quot;\n&quot;

let solve (rawArr : int [] [] ) =
    let data = makeUpArr rawArr
    cope data
    dispResult data

solve [| [|0;1;1;0|];[|0;0;1;0|];[|0;1;0;0|];[|0;1;1;0|] |]
solve [| [|0;0;0;0|];[|1;0;1;0|];[|0;1;0;0|];[|0;0;0;0|] |]
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/9623/addtag/" class="addtag" id="addtag_9623">タグ</a>:
	
    
    <a href="/web/20100605045807/http://ja.doukaku.org/tag/F%23/">F#</a>
    
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/9623/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/9623/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9623"
  >-</span><span
  class="button yellow"
  id="rating_z_9623"
  >0</span><span 
  class="button green"
  id="rating_p_9623"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/9623/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9723">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/1127/" target="_top">sasa</a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/9723/">#9723</a>(<script language="JavaScript">print_time(new Date("2009/12/15 10:15 GMT"));</script><noscript>2009/12/15 10:15 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>リンクリストを作って島を判別してます。
なるべく言語に依存しない感じに書こうとしたのですが、マップの解析とカウンター変数だけ.NETしてしまいました。
一次配列のループにしているので見辛くなっていたらすみません。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">IslandCounter</span> <span class="k">{</span>
    <span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span> <span class="k">{</span>
            <span class="kt">string</span> <span class="n">map</span> <span class="p">=</span>
<span class="s">@&quot;□■□□</span>
<span class="s">■□■□</span>
<span class="s">□■■■</span>
<span class="s">□□□□&quot;</span><span class="p">;</span>

            <span class="kt">int</span> <span class="n">m</span> <span class="p">=</span> <span class="n">map</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">NewLine</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
            <span class="kt">int</span> <span class="n">n</span> <span class="p">=</span> <span class="n">map</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">NewLine</span><span class="p">.</span><span class="n">ToCharArray</span><span class="p">(),</span> <span class="n">StringSplitOptions</span><span class="p">.</span><span class="n">RemoveEmptyEntries</span><span class="p">).</span><span class="n">Length</span><span class="p">;</span>

            <span class="n">map</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Join</span><span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="n">Empty</span><span class="p">,</span> <span class="n">map</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">NewLine</span><span class="p">.</span><span class="n">ToCharArray</span><span class="p">(),</span> <span class="n">StringSplitOptions</span><span class="p">.</span><span class="n">RemoveEmptyEntries</span><span class="p">));</span>
            <span class="kt">int</span><span class="p">[]</span> <span class="n">field</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">m</span> <span class="p">*</span> <span class="n">n</span><span class="p">];</span>

            <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">char</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span> <span class="n">counter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">char</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;();</span>
            <span class="n">counter</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="sc">&#39;□&#39;</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
            <span class="n">counter</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="sc">&#39;■&#39;</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>

            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">m</span> <span class="p">*</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                <span class="kt">char</span> <span class="n">c</span> <span class="p">=</span> <span class="n">map</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="n">counter</span><span class="p">[</span><span class="n">c</span><span class="p">]++;</span>
                <span class="n">field</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="n">i</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">%</span> <span class="n">m</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span> <span class="c">// x軸の二行目から</span>
                    <span class="kt">int</span> <span class="n">prev</span> <span class="p">=</span> <span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">;</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="p">==</span> <span class="n">map</span><span class="p">[</span><span class="n">prev</span><span class="p">])</span> <span class="k">{</span>
                        <span class="n">field</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="n">prev</span><span class="p">;</span>
                        <span class="n">counter</span><span class="p">[</span><span class="n">c</span><span class="p">]--;</span>
                    <span class="k">}</span>
                <span class="k">}</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&gt;=</span> <span class="n">m</span><span class="p">)</span> <span class="k">{</span> <span class="c">// y軸の二行目から</span>
                    <span class="kt">int</span> <span class="n">prev</span> <span class="p">=</span> <span class="n">i</span> <span class="p">-</span> <span class="n">m</span><span class="p">;</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="p">==</span> <span class="n">map</span><span class="p">[</span><span class="n">prev</span><span class="p">]</span> <span class="p">&amp;&amp;</span> <span class="n">GetParent</span><span class="p">(</span><span class="n">field</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span> <span class="p">!=</span> <span class="n">GetParent</span><span class="p">(</span><span class="n">field</span><span class="p">,</span> <span class="n">prev</span><span class="p">))</span> <span class="k">{</span>
                        <span class="n">field</span><span class="p">[</span><span class="n">GetParent</span><span class="p">(</span><span class="n">field</span><span class="p">,</span> <span class="n">i</span><span class="p">)]</span> <span class="p">=</span> <span class="n">prev</span><span class="p">;</span>
                        <span class="n">counter</span><span class="p">[</span><span class="n">c</span><span class="p">]--;</span>
                    <span class="k">}</span>
                <span class="k">}</span>
            <span class="k">}</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;白の島：&quot;</span> <span class="p">+</span> <span class="n">counter</span><span class="p">[</span><span class="sc">&#39;□&#39;</span><span class="p">].</span><span class="n">ToString</span><span class="p">());</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;黒の島：&quot;</span> <span class="p">+</span> <span class="n">counter</span><span class="p">[</span><span class="sc">&#39;■&#39;</span><span class="p">].</span><span class="n">ToString</span><span class="p">());</span>
        <span class="k">}</span>

        <span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">GetParent</span><span class="p">(</span><span class="kt">int</span><span class="p">[]</span> <span class="n">field</span><span class="p">,</span><span class="kt">int</span> <span class="n">i</span><span class="p">)</span> <span class="k">{</span>
            <span class="kt">int</span> <span class="n">current</span> <span class="p">=</span> <span class="n">i</span><span class="p">;</span>
            <span class="k">while</span> <span class="p">(</span><span class="n">field</span><span class="p">[</span><span class="n">current</span><span class="p">]</span> <span class="p">!=</span> <span class="n">current</span><span class="p">)</span> <span class="k">{</span>
                <span class="n">current</span> <span class="p">=</span> <span class="n">field</span><span class="p">[</span><span class="n">current</span><span class="p">];</span>
            <span class="k">}</span>
            <span class="k">return</span> <span class="n">current</span><span class="p">;</span>
        <span class="k">}</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/9723/addtag/" class="addtag" id="addtag_9723">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/9723/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/9723/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9723"
  >-</span><span
  class="button yellow"
  id="rating_z_9723"
  >0</span><span 
  class="button green"
  id="rating_p_9723"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/9723/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9742">
  <p class="banner"><a href="/web/20100605045807/http://ja.doukaku.org/user/1129/" target="_top">Lost_dog</a><a href="/web/20100605045807/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/9742/">#9742</a>(<script language="JavaScript">print_time(new Date("2009/12/27 05:59 GMT"));</script><noscript>2009/12/27 05:59 GMT</noscript>)
	
	
	
	[<a href="/web/20100605045807/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Lost_dogです。似たような問題は、他のコンテストでも時々みかけたのでやってみました。</p>
<p>コーディングのポイントは、Data.Graphのcomponents関数を使うっていうだけです。モジュールって便利ですね。。</p>
<p>あと入力を■□に制限する必要がなかったので、若干拡張的にしてあります。</p>
<p><strong>Sample Input 1</strong></p>
<hr class="docutils" />
<div class="line-block">
<div class="line">6 4</div>
<div class="line">□□■□□□</div>
<div class="line">■■■■■■</div>
<div class="line">□■□□□□</div>
<div class="line">■□□■■□</div>
</div>
<hr class="docutils" />
<p><strong>Sample Output 1</strong></p>
<hr class="docutils" />
<div class="line-block">
<div class="line">[3,4]</div>
</div>
<hr class="docutils" />
<p><strong>Sample Input 2</strong></p>
<hr class="docutils" />
<div class="line-block">
<div class="line">6 3</div>
<div class="line">abbccc</div>
<div class="line">aabbca</div>
<div class="line">aabacb</div>
</div>
<hr class="docutils" />
<p><strong>Sample Output 2</strong></p>
<hr class="docutils" />
<div class="line-block">
<div class="line">[3,2,1]</div>
</div>
<hr class="docutils" />
<p>です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Main</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">Prelude</span> <span class="nv">hiding</span> <span class="p">(</span><span class="nv">getLine</span><span class="p">,</span> <span class="nv">print</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Graph</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Tree</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Maybe</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Function</span>
<span class="kr">import</span> <span class="n">Control</span><span class="o">.</span><span class="n">Monad</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">IO</span><span class="o">.</span><span class="n">UTF8</span> 

<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">[</span><span class="nv">w</span><span class="p">,</span><span class="nv">h</span><span class="p">]</span> <span class="o">&lt;-</span> <span class="nv">fmap</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">read</span><span class="o">.</span><span class="nv">words</span><span class="p">)</span> <span class="nv">getLine</span>
          <span class="nv">xss</span>   <span class="o">&lt;-</span> <span class="nv">fmap</span> <span class="p">(</span><span class="nv">numbering</span> <span class="nv">w</span><span class="p">)</span> <span class="o">$</span> <span class="nv">replicateM</span> <span class="nv">h</span> <span class="nv">getLine</span>
          <span class="nv">print</span> <span class="o">$</span> <span class="nv">count</span> <span class="nv">xss</span> <span class="o">$</span> <span class="nv">components</span> <span class="o">$</span> <span class="nv">buildG</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nv">w</span><span class="o">*</span><span class="nv">h</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">$</span> <span class="nv">calEdge</span> <span class="nv">w</span> <span class="nv">xss</span>

<span class="nv">numbering</span> <span class="nv">w</span> <span class="nv">xss</span> <span class="o">=</span> <span class="nv">snd</span> <span class="o">$</span> <span class="nv">mapAccumL</span> <span class="nv">f</span> <span class="mi">0</span> <span class="nv">xss</span>
                  <span class="kr">where</span> <span class="nv">f</span> <span class="nv">i</span> <span class="nv">xs</span> <span class="o">=</span> <span class="p">(</span><span class="nv">i</span><span class="o">+</span><span class="nv">w</span><span class="p">,</span> <span class="nv">zip</span> <span class="p">[</span><span class="nv">i</span><span class="o">..</span><span class="p">]</span> <span class="nv">xs</span><span class="p">)</span>

<span class="nv">calEdge</span> <span class="nv">w</span> <span class="nv">xss</span> <span class="o">=</span> <span class="p">(</span><span class="nv">concatMap</span> <span class="nv">f</span> <span class="nv">xss</span><span class="p">)</span> <span class="o">++</span> <span class="p">(</span><span class="nv">concatMap</span> <span class="nv">f</span> <span class="o">$</span> <span class="nv">transpose</span> <span class="nv">xss</span><span class="p">)</span>
                <span class="kr">where</span> <span class="nv">f</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">catMaybes</span> <span class="o">$</span> <span class="nv">snd</span> <span class="o">$</span> <span class="nv">mapAccumL</span> <span class="nv">g</span> <span class="nv">x</span> <span class="nv">xs</span>
                      <span class="nv">g</span> <span class="p">(</span><span class="nv">i</span><span class="p">,</span><span class="nv">x</span><span class="p">)</span> <span class="nv">r</span><span class="o">@</span><span class="p">(</span><span class="nv">j</span><span class="p">,</span><span class="nv">y</span><span class="p">)</span> <span class="o">|</span> <span class="nv">x</span> <span class="o">==</span> <span class="nv">y</span>    <span class="o">=</span> <span class="p">(</span><span class="nv">r</span><span class="p">,</span><span class="n">Just</span><span class="p">(</span><span class="nv">i</span><span class="p">,</span><span class="nv">j</span><span class="p">))</span>
                                      <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">=</span> <span class="p">(</span><span class="nv">r</span><span class="p">,</span><span class="n">Nothing</span><span class="p">)</span>

<span class="nv">count</span> <span class="nv">xss</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">length</span><span class="o">.</span><span class="nv">groupBy</span> <span class="p">((</span><span class="o">==</span><span class="p">)`</span><span class="nv">on</span><span class="p">`</span><span class="nv">c</span><span class="p">)</span><span class="o">.</span><span class="nv">sortBy</span> <span class="p">(</span><span class="nv">compare</span><span class="p">`</span><span class="nv">on</span><span class="p">`</span><span class="nv">c</span><span class="p">)</span>
            <span class="kr">where</span> <span class="nv">c</span> <span class="o">=</span> <span class="nv">snd</span><span class="o">.</span><span class="p">(</span><span class="nv">concat</span> <span class="nv">xss</span><span class="o">!!</span><span class="p">)</span><span class="o">.</span><span class="nv">rootLabel</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100605045807/http://ja.doukaku.org/comment/9742/addtag/" class="addtag" id="addtag_9742">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100605045807/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100605045807/http://ja.doukaku.org/comment/9742/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100605045807/http://ja.doukaku.org/comment/9742/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9742"
  >-</span><span
  class="button yellow"
  id="rating_z_9742"
  >0</span><span 
  class="button green"
  id="rating_p_9742"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100605045807/http://ja.doukaku.org/219/reply_to/9742/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20100605045807if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20100605045807/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20100605045807/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20100605045807/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20100605045807/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20100605045807/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20100605045807/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20100605045807/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20100605045807/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100605045807/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100605045807/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20100605045807im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20100605045807/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20100605045807/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20100605045807/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20100605045807/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20100605045807/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20100605045807/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20100605045807/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20100605045807/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20100605045807im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20100605045807/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20100605045807/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20100605045807/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20100605045807js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 4:58:07 Jun 5, 2010 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:29:48 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
