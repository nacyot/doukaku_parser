
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
マルバツゲーム：賢いプレイヤー
DouKaku? </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20080908104019cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20080908104019cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20080908104019cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20080908104019/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20080908104019/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20080908104019js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20080908104019js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20080908104019js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20080908104019js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app16.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/174\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "8";
var displayMonth = "Sep";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/174/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20080908104019" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Aug
                       
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 10:40:19 Sep 8, 2008">SEP</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Oct
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_prv_off.png" alt="Previous capture" width="14" height="16" border="0" />
                       
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 10:40:19 Sep 8, 2008">8</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2007
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 10:40:19 Sep 8, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20080908104019*/http://ja.doukaku.org/174/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>1 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">8 Sep 08 - 8 Sep 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:8:000000001000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20080908104019/http://ja.doukaku.org/">DouKaku?</a><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20080908104019im_/http://ja.doukaku.org/static/image/star_gold.png' alt=challenge>
<a href="/web/20080908104019/http://ja.doukaku.org/174/">マルバツゲーム：賢いプレイヤー</a>
</h2>

    





<div class="comment" id="comment6207">
  <p class="banner"><a href="/web/20080908104019/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6207/">#6207</a>(<script language="JavaScript">print_time(new Date("2008/04/23 13:29 GMT"));</script><noscript>2008/04/23 13:29 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  #6190&nbsp;の続編です。<br/>マルバツゲームで、賢いプレイヤーの思考ルーチンを実装してください。<br/><br/>賢いといってもいろいろありますが、<br/>１．負けない<br/>２．できるだけ勝つ<br/>という条件でいってみたいと思います。<br/><br/>ランダムプレイヤーと１万回バトルした結果（勝ち・負け・分け）を表示してください。<br/>先攻になっても後攻になっても無敗！となれば言うことなしです。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6207/addtag/" class="addtag" id="addtag_6207">Tags</a>:
	
    
    <a href="/web/20080908104019/http://ja.doukaku.org/tag/e/">e</a>
    
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6207"
  >-</span><span
  class="button yellow"
  id="rating_z_6207"
  >0</span><span 
  class="button green"
  id="rating_p_6207"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080908104019/http://ja.doukaku.org/174/reply_to/6207/">
  reply
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20080908104019/http://ja.doukaku.org/174/post_comment/">
post comment
</a>
</div>


<h2>Posted feedbacks - Nested</h2>
<a href="/web/20080908104019/http://ja.doukaku.org/174/flatten/">Flatten</a> 
<a href="/web/20080908104019/http://ja.doukaku.org/174/">Hidden</a> 


  

  
    





<div class="comment" id="comment6234">
  <p class="banner"><a href="/web/20080908104019/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6234/">#6234</a>(<script language="JavaScript">print_time(new Date("2008/04/30 08:24 GMT"));</script><noscript>2008/04/30 08:24 GMT</noscript>)
	
	
	
	[<a href="/web/20080908104019/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>前回のソースに、新たにPlayerを追加しました。
RandomPlayerと対決した場合、完封できることを確認しました。
また、追加したPlayer同士だと常に引き分けになります。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.HashSet</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Random</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Set</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">TicTacToe</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">SIZE</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>

    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">Pair</span><span class="o">[][]</span> <span class="n">lines_</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">[][]</span> <span class="o">{</span>
            <span class="o">{</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">)</span> <span class="o">},</span>
            <span class="o">{</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">)</span> <span class="o">},</span>
            <span class="o">{</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">2</span><span class="o">)</span> <span class="o">},</span>
            <span class="o">{</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">)</span> <span class="o">},</span>
            <span class="o">{</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">)</span> <span class="o">},</span>
            <span class="o">{</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">2</span><span class="o">)</span> <span class="o">},</span>
            <span class="o">{</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">2</span><span class="o">)</span> <span class="o">},</span>
            <span class="o">{</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">)</span> <span class="o">},</span> <span class="o">};</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;&gt;</span> <span class="n">LineList</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;&gt;();</span>
    <span class="k">static</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">Pair</span><span class="o">[]</span> <span class="nl">line:</span> <span class="n">lines_</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">List</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;();</span>
            <span class="k">for</span> <span class="o">(</span><span class="n">Pair</span> <span class="nl">pair:</span> <span class="n">line</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pair</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="n">LineList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Collections</span><span class="o">.</span><span class="na">unmodifiableList</span><span class="o">(</span><span class="n">list</span><span class="o">));</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">final</span> <span class="n">Mark</span><span class="o">[][]</span> <span class="n">fields_</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Mark</span><span class="o">[</span><span class="n">SIZE</span><span class="o">][</span><span class="n">SIZE</span><span class="o">];</span>

    <span class="k">public</span> <span class="n">TicTacToe</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">SIZE</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">SIZE</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">fields_</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span> <span class="o">=</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">Mark</span> <span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span> <span class="n">pair</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">fields_</span><span class="o">[</span><span class="n">pair</span><span class="o">.</span><span class="na">x</span><span class="o">][</span><span class="n">pair</span><span class="o">.</span><span class="na">y</span><span class="o">];</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">void</span> <span class="n">setMark</span><span class="o">(</span><span class="n">Pair</span> <span class="n">pair</span><span class="o">,</span> <span class="n">Mark</span> <span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">fields_</span><span class="o">[</span><span class="n">pair</span><span class="o">.</span><span class="na">x</span><span class="o">][</span><span class="n">pair</span><span class="o">.</span><span class="na">y</span><span class="o">]</span> <span class="o">=</span> <span class="n">mark</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">boolean</span> <span class="n">nextStep</span><span class="o">(</span><span class="n">Pair</span> <span class="n">pair</span><span class="o">,</span> <span class="n">Mark</span> <span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">pair</span><span class="o">)</span> <span class="o">!=</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">)</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="n">setMark</span><span class="o">(</span><span class="n">pair</span><span class="o">,</span> <span class="n">mark</span><span class="o">);</span>
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">Mark</span> <span class="n">isEndGame</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">Pair</span><span class="o">[]</span> <span class="n">row</span> <span class="o">:</span> <span class="n">lines_</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">Mark</span> <span class="n">m</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
            <span class="kt">boolean</span> <span class="n">isSame</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="n">Pair</span> <span class="n">cell</span> <span class="o">:</span> <span class="n">row</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">Mark</span> <span class="n">mark</span> <span class="o">=</span> <span class="n">fields_</span><span class="o">[</span><span class="n">cell</span><span class="o">.</span><span class="na">x</span><span class="o">][</span><span class="n">cell</span><span class="o">.</span><span class="na">y</span><span class="o">];</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">m</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">m</span> <span class="o">=</span> <span class="n">mark</span><span class="o">;</span>
                    <span class="k">continue</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">m</span> <span class="o">!=</span> <span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">isSame</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">isSame</span><span class="o">)</span>
                <span class="k">return</span> <span class="n">m</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="k">public</span> <span class="n">String</span> <span class="n">toString</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%s|%s|%s%n&quot;</span><span class="o">,</span>
                <span class="n">toString</span><span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">))),</span>
                <span class="n">toString</span><span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">))),</span>
                <span class="n">toString</span><span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">)))));</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;-+-+-%n&quot;</span><span class="o">));</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%s|%s|%s%n&quot;</span><span class="o">,</span>
                <span class="n">toString</span><span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">))),</span>
                <span class="n">toString</span><span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">))),</span>
                <span class="n">toString</span><span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">)))));</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;-+-+-%n&quot;</span><span class="o">));</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%s|%s|%s%n&quot;</span><span class="o">,</span>
                <span class="n">toString</span><span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">))),</span>
                <span class="n">toString</span><span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">))),</span>
                <span class="n">toString</span><span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">2</span><span class="o">)))));</span>
        <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="n">String</span> <span class="n">toString</span><span class="o">(</span><span class="n">Mark</span> <span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">switch</span> <span class="o">(</span><span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">case</span> <span class="nl">O:</span>
            <span class="k">case</span> <span class="nl">X:</span>
                <span class="k">return</span> <span class="n">mark</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
            <span class="k">case</span> <span class="nl">E:</span>
            <span class="k">default</span><span class="o">:</span>
                <span class="k">return</span> <span class="s">&quot; &quot;</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Player</span> <span class="n">random1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RandomPlayer</span><span class="o">(</span><span class="n">Mark</span><span class="o">.</span><span class="na">O</span><span class="o">,</span> <span class="s">&quot;random1&quot;</span><span class="o">);</span>
        <span class="n">Player</span> <span class="n">random2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RandomPlayer</span><span class="o">(</span><span class="n">Mark</span><span class="o">.</span><span class="na">X</span><span class="o">,</span> <span class="s">&quot;random2&quot;</span><span class="o">);</span>
        <span class="n">Player</span> <span class="n">think1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ThinkingPlayer</span><span class="o">(</span><span class="n">Mark</span><span class="o">.</span><span class="na">O</span><span class="o">,</span> <span class="s">&quot;think1&quot;</span><span class="o">);</span>
        <span class="n">Player</span> <span class="n">think2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ThinkingPlayer</span><span class="o">(</span><span class="n">Mark</span><span class="o">.</span><span class="na">X</span><span class="o">,</span> <span class="s">&quot;think2&quot;</span><span class="o">);</span>

        <span class="n">playGame</span><span class="o">(</span><span class="n">random1</span><span class="o">,</span> <span class="n">random2</span><span class="o">);</span>
        <span class="n">playGame</span><span class="o">(</span><span class="n">think1</span><span class="o">,</span> <span class="n">random2</span><span class="o">);</span>
        <span class="n">playGame</span><span class="o">(</span><span class="n">random1</span><span class="o">,</span> <span class="n">think2</span><span class="o">);</span>
        <span class="n">playGame</span><span class="o">(</span><span class="n">think1</span><span class="o">,</span> <span class="n">think2</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">playGame</span><span class="o">(</span><span class="n">Player</span> <span class="n">player1</span><span class="o">,</span> <span class="n">Player</span> <span class="n">player2</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">maxTurn</span> <span class="o">=</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span> <span class="o">*</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">round</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">round</span> <span class="o">&lt;</span> <span class="mi">10000</span><span class="o">;</span> <span class="n">round</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">TicTacToe</span> <span class="n">game</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TicTacToe</span><span class="o">();</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">turn</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">turn</span> <span class="o">&lt;=</span> <span class="n">maxTurn</span><span class="o">;</span> <span class="n">turn</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">turn</span> <span class="o">==</span> <span class="n">maxTurn</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">result</span><span class="o">[</span><span class="mi">2</span><span class="o">]++;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">turn</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">player1</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">game</span><span class="o">);</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="n">player2</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">game</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="n">Mark</span> <span class="n">mark</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">isEndGame</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">mark</span> <span class="o">==</span> <span class="n">Mark</span><span class="o">.</span><span class="na">O</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">result</span><span class="o">[</span><span class="mi">0</span><span class="o">]++;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">mark</span> <span class="o">==</span> <span class="n">Mark</span><span class="o">.</span><span class="na">X</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">result</span><span class="o">[</span><span class="mi">1</span><span class="o">]++;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Result:&quot;</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%s won: %d%n&quot;</span><span class="o">,</span> <span class="n">player1</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="n">result</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%s won: %d%n&quot;</span><span class="o">,</span> <span class="n">player2</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="n">result</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;draw game  : %d%n&quot;</span><span class="o">,</span> <span class="n">result</span><span class="o">[</span><span class="mi">2</span><span class="o">]);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="k">enum</span> <span class="n">Mark</span> <span class="o">{</span>
    <span class="n">E</span> <span class="o">{</span>
        <span class="nd">@Override</span> <span class="k">public</span> <span class="n">Mark</span> <span class="n">getOpponent</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">E</span><span class="o">;</span> <span class="o">}</span>
    <span class="o">},</span>
    <span class="n">O</span> <span class="o">{</span>
        <span class="nd">@Override</span> <span class="k">public</span> <span class="n">Mark</span> <span class="n">getOpponent</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">X</span><span class="o">;</span> <span class="o">}</span>
    <span class="o">},</span>
    <span class="n">X</span> <span class="o">{</span>
        <span class="nd">@Override</span> <span class="k">public</span> <span class="n">Mark</span> <span class="n">getOpponent</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">O</span><span class="o">;</span> <span class="o">}</span>
    <span class="o">};</span>

    <span class="k">public</span> <span class="k">abstract</span> <span class="n">Mark</span> <span class="n">getOpponent</span><span class="o">();</span>
<span class="o">}</span>

<span class="k">class</span> <span class="nc">Pair</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">x</span><span class="o">;</span>
    <span class="k">public</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">y</span><span class="o">;</span>

    <span class="k">private</span> <span class="n">Pair</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">cache</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;();</span>
    <span class="k">static</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">cache</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">));</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Pair</span> <span class="n">get</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">cache</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">x</span> <span class="o">*</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span> <span class="o">+</span> <span class="n">y</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">hashCode</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="n">y</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="nd">@Override</span>
    <span class="k">public</span> <span class="kt">boolean</span> <span class="n">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">obj</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">obj</span> <span class="o">==</span> <span class="k">this</span><span class="o">)</span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(!(</span><span class="n">obj</span> <span class="k">instanceof</span> <span class="n">Pair</span><span class="o">))</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="n">Pair</span> <span class="n">other</span> <span class="o">=</span> <span class="o">(</span><span class="n">Pair</span><span class="o">)</span> <span class="n">obj</span><span class="o">;</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="na">x</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="na">y</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="k">abstract</span> <span class="k">class</span> <span class="nc">Player</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">final</span> <span class="n">Mark</span> <span class="n">mark</span><span class="o">;</span>
    <span class="k">public</span> <span class="k">final</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>

    <span class="k">public</span> <span class="n">Player</span><span class="o">(</span><span class="n">Mark</span> <span class="n">mark</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">mark</span> <span class="o">=</span> <span class="n">mark</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="k">abstract</span> <span class="kt">void</span> <span class="n">put</span><span class="o">(</span><span class="n">TicTacToe</span> <span class="n">game</span><span class="o">);</span>
<span class="o">}</span>

<span class="k">class</span> <span class="nc">RandomPlayer</span> <span class="k">extends</span> <span class="n">Player</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">final</span> <span class="n">Random</span> <span class="n">random_</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>

    <span class="k">public</span> <span class="n">RandomPlayer</span><span class="o">(</span><span class="n">Mark</span> <span class="n">mark</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">super</span><span class="o">(</span><span class="n">mark</span><span class="o">,</span> <span class="n">name</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="k">public</span> <span class="kt">void</span> <span class="n">put</span><span class="o">(</span><span class="n">TicTacToe</span> <span class="n">game</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">isEndGame</span><span class="o">()</span> <span class="o">!=</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(;;)</span> <span class="o">{</span>
            <span class="n">Pair</span> <span class="n">pair</span> <span class="o">=</span> <span class="n">getNextPair</span><span class="o">();</span>
            <span class="kt">boolean</span> <span class="n">res</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">pair</span><span class="o">,</span> <span class="n">mark</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">res</span><span class="o">)</span>
                <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="n">Pair</span> <span class="n">getNextPair</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">random_</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">),</span> <span class="n">random_</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="k">class</span> <span class="nc">ThinkingPlayer</span> <span class="k">extends</span> <span class="n">Player</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">Pair</span> <span class="n">CENTER</span> <span class="o">=</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">CORNER</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;();</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">SIDES</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;();</span>

    <span class="k">public</span> <span class="n">ThinkingPlayer</span><span class="o">(</span><span class="n">Mark</span> <span class="n">mark</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">super</span><span class="o">(</span><span class="n">mark</span><span class="o">,</span> <span class="n">name</span><span class="o">);</span>
        <span class="n">CORNER</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
        <span class="n">CORNER</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">2</span><span class="o">));</span>
        <span class="n">CORNER</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
        <span class="n">CORNER</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">));</span>
        <span class="n">SIDES</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
        <span class="n">SIDES</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">));</span>
        <span class="n">SIDES</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
        <span class="n">SIDES</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="k">public</span> <span class="kt">void</span> <span class="n">put</span><span class="o">(</span><span class="n">TicTacToe</span> <span class="n">game</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">isEndGame</span><span class="o">()</span> <span class="o">!=</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
        
        <span class="kt">int</span> <span class="n">turn</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">Map</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">Pair</span> <span class="n">pair</span> <span class="o">=</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">);</span>
                <span class="n">Mark</span> <span class="n">mark</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">getMark</span><span class="o">(</span><span class="n">pair</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">mark</span> <span class="o">==</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
                <span class="n">turn</span><span class="o">++;</span>
                <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">pair</span><span class="o">,</span> <span class="n">mark</span> <span class="o">==</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">switch</span> <span class="o">(</span><span class="n">turn</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">case</span> <span class="mi">0</span><span class="o">:</span>
            <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
                <span class="n">priorityStep</span><span class="o">(</span><span class="n">game</span><span class="o">);</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
                <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">CENTER</span><span class="o">)</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">CENTER</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">size</span> <span class="o">=</span> <span class="n">CORNER</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">size</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">CORNER</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">))</span> <span class="o">==</span> <span class="n">Boolean</span><span class="o">.</span><span class="na">FALSE</span><span class="o">)</span> <span class="o">{</span>
                                <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="o">(</span><span class="n">index</span> <span class="o">&amp;</span> <span class="mi">2</span><span class="o">)</span> <span class="o">+</span> <span class="o">(~</span><span class="n">index</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="o">);</span>
                                <span class="kt">boolean</span> <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">CORNER</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                                <span class="k">if</span> <span class="o">(</span><span class="n">step</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
                            <span class="o">}</span>
                        <span class="o">}</span>
                        <span class="n">priorityStep</span><span class="o">(</span><span class="n">game</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
                <span class="o">{</span>
                    <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">winPair</span> <span class="o">=</span> <span class="n">searchWinPair</span><span class="o">(</span><span class="n">game</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">.</span><span class="na">getOpponent</span><span class="o">());</span>
                    <span class="k">if</span> <span class="o">(!</span><span class="n">winPair</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
                        <span class="kt">boolean</span> <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">winPair</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">Pair</span><span class="o">[</span><span class="mi">0</span><span class="o">])[</span><span class="mi">0</span><span class="o">],</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                        <span class="k">if</span> <span class="o">(!</span><span class="n">step</span><span class="o">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                        <span class="k">return</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">getMark</span><span class="o">(</span><span class="n">CENTER</span><span class="o">)</span> <span class="o">==</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">if</span> <span class="o">((</span><span class="n">game</span><span class="o">.</span><span class="na">getMark</span><span class="o">(</span><span class="n">CORNER</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">))</span> <span class="o">==</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">.</span><span class="na">getOpponent</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">game</span><span class="o">.</span><span class="na">getMark</span><span class="o">(</span><span class="n">CORNER</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">))</span> <span class="o">==</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">.</span><span class="na">getOpponent</span><span class="o">())</span>
                                <span class="o">||</span> <span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">getMark</span><span class="o">(</span><span class="n">CORNER</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">))</span> <span class="o">==</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">.</span><span class="na">getOpponent</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">game</span><span class="o">.</span><span class="na">getMark</span><span class="o">(</span><span class="n">CORNER</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">3</span><span class="o">))</span> <span class="o">==</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">.</span><span class="na">getOpponent</span><span class="o">()))</span> <span class="o">{</span>
                            <span class="k">for</span> <span class="o">(</span><span class="n">Pair</span> <span class="nl">pair:</span> <span class="n">SIDES</span><span class="o">)</span> <span class="o">{</span>
                                <span class="kt">boolean</span> <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">pair</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                                <span class="k">if</span> <span class="o">(</span><span class="n">step</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
                            <span class="o">}</span>
                        <span class="o">}</span>
                    <span class="o">}</span>
                    <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">goodPair</span> <span class="o">=</span> <span class="n">searchGoodPair</span><span class="o">(</span><span class="n">game</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">.</span><span class="na">getOpponent</span><span class="o">());</span>
                    <span class="k">if</span> <span class="o">(!</span><span class="n">goodPair</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
                        <span class="kt">boolean</span> <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">goodPair</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">Pair</span><span class="o">[</span><span class="mi">0</span><span class="o">])[</span><span class="mi">0</span><span class="o">],</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                        <span class="k">if</span> <span class="o">(!</span><span class="n">step</span><span class="o">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                        <span class="k">return</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="n">priorityStep</span><span class="o">(</span><span class="n">game</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="k">default</span><span class="o">:</span>
                <span class="o">{</span>
                    <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">winPair</span> <span class="o">=</span> <span class="n">searchWinPair</span><span class="o">(</span><span class="n">game</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                    <span class="k">if</span> <span class="o">(!</span><span class="n">winPair</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
                        <span class="kt">boolean</span> <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">winPair</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">Pair</span><span class="o">[</span><span class="mi">0</span><span class="o">])[</span><span class="mi">0</span><span class="o">],</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                        <span class="k">if</span> <span class="o">(!</span><span class="n">step</span><span class="o">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                        <span class="k">return</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">losePair</span> <span class="o">=</span> <span class="n">searchWinPair</span><span class="o">(</span><span class="n">game</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">.</span><span class="na">getOpponent</span><span class="o">());</span>
                    <span class="k">if</span> <span class="o">(!</span><span class="n">losePair</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
                        <span class="kt">boolean</span> <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">losePair</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">Pair</span><span class="o">[</span><span class="mi">0</span><span class="o">])[</span><span class="mi">0</span><span class="o">],</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                        <span class="k">if</span> <span class="o">(!</span><span class="n">step</span><span class="o">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                        <span class="k">return</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">noGoodPair</span> <span class="o">=</span> <span class="n">searchGoodPair</span><span class="o">(</span><span class="n">game</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">.</span><span class="na">getOpponent</span><span class="o">());</span>
                    <span class="k">if</span> <span class="o">(!</span><span class="n">noGoodPair</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
                        <span class="kt">boolean</span> <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">noGoodPair</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">Pair</span><span class="o">[</span><span class="mi">0</span><span class="o">])[</span><span class="mi">0</span><span class="o">],</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                        <span class="k">if</span> <span class="o">(!</span><span class="n">step</span><span class="o">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                        <span class="k">return</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">goodPair</span> <span class="o">=</span> <span class="n">searchGoodPair</span><span class="o">(</span><span class="n">game</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                    <span class="k">if</span> <span class="o">(!</span><span class="n">goodPair</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
                        <span class="kt">boolean</span> <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">goodPair</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">Pair</span><span class="o">[</span><span class="mi">0</span><span class="o">])[</span><span class="mi">0</span><span class="o">],</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
                        <span class="k">if</span> <span class="o">(!</span><span class="n">step</span><span class="o">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                        <span class="k">return</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="n">priorityStep</span><span class="o">(</span><span class="n">game</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="kt">void</span> <span class="n">priorityStep</span><span class="o">(</span><span class="n">TicTacToe</span> <span class="n">game</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">boolean</span> <span class="n">step</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">{</span>
            <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">CENTER</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">step</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">Pair</span> <span class="nl">pair:</span> <span class="n">CORNER</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">pair</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">step</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">Pair</span> <span class="nl">pair:</span> <span class="n">SIDES</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">step</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">pair</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mark</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">step</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">searchWinPair</span><span class="o">(</span><span class="n">TicTacToe</span> <span class="n">game</span><span class="o">,</span> <span class="n">Mark</span> <span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="nl">line:</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">LineList</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="n">Pair</span> <span class="n">empty</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="n">Pair</span> <span class="nl">pair:</span> <span class="n">line</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">getMark</span><span class="o">(</span><span class="n">pair</span><span class="o">)</span> <span class="o">==</span> <span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">count</span><span class="o">++;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">getMark</span><span class="o">(</span><span class="n">pair</span><span class="o">)</span> <span class="o">==</span> <span class="n">mark</span><span class="o">.</span><span class="na">getOpponent</span><span class="o">())</span> <span class="o">{</span>
                    <span class="n">count</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="n">empty</span> <span class="o">=</span> <span class="n">pair</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">count</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="n">empty</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">empty</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">searchGoodPair</span><span class="o">(</span><span class="n">TicTacToe</span> <span class="n">game</span><span class="o">,</span> <span class="n">Mark</span> <span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">Pair</span> <span class="n">pair</span> <span class="o">=</span> <span class="n">Pair</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">game</span><span class="o">.</span><span class="na">getMark</span><span class="o">(</span><span class="n">pair</span><span class="o">)</span> <span class="o">==</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">game</span><span class="o">.</span><span class="na">setMark</span><span class="o">(</span><span class="n">pair</span><span class="o">,</span> <span class="n">mark</span><span class="o">);</span>
                    <span class="n">Set</span><span class="o">&lt;</span><span class="n">Pair</span><span class="o">&gt;</span> <span class="n">winPair</span> <span class="o">=</span> <span class="n">searchWinPair</span><span class="o">(</span><span class="n">game</span><span class="o">,</span> <span class="n">mark</span><span class="o">);</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">winPair</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pair</span><span class="o">);</span>
                    <span class="n">game</span><span class="o">.</span><span class="na">setMark</span><span class="o">(</span><span class="n">pair</span><span class="o">,</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6234/addtag/" class="addtag" id="addtag_6234">Tags</a>:
	
    
    <a href="/web/20080908104019/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20080908104019/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080908104019/http://ja.doukaku.org/comment/6234/download/">
		download code
      </a>]
	  [<a href="/web/20080908104019/http://ja.doukaku.org/comment/6234/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6234"
  >-</span><span
  class="button yellow"
  id="rating_z_6234"
  >0</span><span 
  class="button green"
  id="rating_p_6234"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080908104019/http://ja.doukaku.org/comment/6234/">
    1
    reply
  </a>

  [<a href="/web/20080908104019/http://ja.doukaku.org/174/reply_to/6234/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment6236">
  <p class="banner"><a href="/web/20080908104019/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6236/">#6236</a>(<script language="JavaScript">print_time(new Date("2008/04/30 13:37 GMT"));</script><noscript>2008/04/30 13:37 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  無敗のアルゴリズムはネット上にあんまり転がっていないと思って出題したのですが、結構あっさり解かれてしまいますね。。。<br/><br/>これから投稿される方も、ぜひ自力でアルゴリズムを考えてみてください。自分だったらこうするという手順をプログラムに落とし込んでいくのは結構楽しいですよ！<br/><br/>ちなみに出題者の実装は&nbsp;#6235&nbsp;の&nbsp;yuin&nbsp;さんの書かれた戦略とほぼ同じものになりました。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6236/addtag/" class="addtag" id="addtag_6236">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6236"
  >-</span><span
  class="button yellow"
  id="rating_z_6236"
  >0</span><span 
  class="button green"
  id="rating_p_6236"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080908104019/http://ja.doukaku.org/comment/6234/"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080908104019/http://ja.doukaku.org/comment/6236/root/"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080908104019/http://ja.doukaku.org/174/reply_to/6236/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment6235">
  <p class="banner"><a href="/web/20080908104019/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6235/">#6235</a>(<script language="JavaScript">print_time(new Date("2008/04/30 09:42 GMT"));</script><noscript>2008/04/30 09:42 GMT</noscript>)
	
	
	
	[<a href="/web/20080908104019/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
<p>微妙な感じですがとりあえず･･･CleverPlayerを追加しました。
</p>
<p>1万回対戦させてみたところ
</p>
<p>Cleverが先行
</p>
<pre><code>Clever won:9,379
Random won:0
draw      :621
</code></pre><p>Randomが先行
</p>
<pre><code>Clever won:8,596
Random won:0
draw      :1,404
</code></pre><p>Clever vs Clever
</p>
<pre><code>Clever won:0
Clever won:0
draw      :10,000
</code></pre><p>という感じでした。戦略は優先度順に
</p>
<ol>
 <li>
     置けば勝ち、置かなければ負ける、という位置があればそこに置く
 </li>

 <li>
     自分が後手で1ターン目に相手が真ん中に置かなかった場合の2ターン目<ul>
 <li>
     相手が置いているところが全て角なら角以外の淵に置く
 </li>

 <li>
     でなければ相手の置いているところから距離が一番近い角に置く
 </li>
</ul>

 </li>

 <li>
     真ん中が空いていれば真ん中に置く
 </li>

 <li>
     角が空いていれば角に置く
 </li>

 <li>
     置けるところに置く
 </li>
</ol>
<p>としてみました。
</p>



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74</pre></td><td class="code"><div class="highlight"><pre>import java.util.Random

class TicTacToe(val players:List[Player]) {
  val size = 3
  protected val field = new Array[Array[char]](size,size)
  val lines = (_stline((v,v2) =&gt; (v,v2))++_stline((v,v2) =&gt; (v2,v))++
              List(((size-1).until(-1,-1)).map(v=&gt; (v,(size-1-v)))) ++
              List((0 until size).map(v=&gt;(v,v)))).map(_.toList)

  def _stline(f:(int,int) =&gt; Pair[int,int]) = 
    (0 until size).map(v =&gt; (0 until size).map(v2 =&gt; f(v,v2)))

  def start:Option[Player] = {
    for(val i&lt;-(0 until size); val j&lt;-(0 until size)) { field(i)(j) = &#39; &#39;}
    Stream.const(players).flatMap(v=&gt;v).take(size*size).find {player =&gt; 
      val p@Pair(y,x) = player.put(this)
      if(!available_?(p)) error(&quot;Oops!&quot;)
      field(y)(x) = player.mark
      judge
    }
  }

  def judge = lines.exists(l =&gt; l.forall(!available_?(_)) &amp;&amp; l.forall(v =&gt; at(l(0)) == at(v)))
  def available_?(pos:Pair[int,int]) = at(pos) equals &#39; &#39;
  def at(pos:Pair[int,int]) = field(pos._1)(pos._2)
  def at_eq(pos:Pair[int,int], mark:char) = at(pos) equals mark
  def enemy_of(player:Player) = players.find{_.mark != player.mark}.get
}

abstract class Player{
  val mark:char
  val name:String
  def put(ttt:TicTacToe):Pair[int,int]
}

class RandomPlayer(override val mark:char, override val name:String) extends Player{
  val rnd = new Random
  override def put(ttt:TicTacToe) = {
    def _n = (rnd.nextInt(ttt.size), rnd.nextInt(ttt.size))
    def next(v:Pair[int,int]):Stream[Pair[int,int]] = Stream.cons(v, next(_n))
    next(_n).find(ttt.available_?).get
  }
}

class CleverPlayer(override val mark:char, override val name:String) extends Player {
  override def put(ttt:TicTacToe):Pair[int,int] = {
    val enemy = ttt.enemy_of(this)
    val return_if_available_find = (l:Seq[Pair[int,int]]) =&gt; l.find(ttt.available_?) match {
      case Some(pos) =&gt; return pos
      case _ =&gt; ()
    }

    def line2(v:char) = ttt.lines.filter(_.count(ttt.at_eq(_,v)) == 2)
    return_if_available_find(List(mark, enemy.mark).flatMap(line2).flatMap(v=&gt;v))

    val all  = (for(val i&lt;-(0 until ttt.size); val j&lt;-(0 until ttt.size)) yield (i,j)).toList
    val center = (ttt.size/2, ttt.size/2)
    val corners = List((0,0), (ttt.size-1,ttt.size-1), (0,ttt.size-1), (ttt.size-1, 0))
    val others = all.diff(center::corners)

    if(all.count(ttt.at_eq(_, enemy.mark)) == 2 &amp;&amp; ttt.at_eq(center, this.mark)) {
      if(!others.forall(ttt.available_?)) {
        val ps = all.filter(ttt.at_eq(_, enemy.mark))
        def vecv(a:Pair[int,int]) = (0 /: ps){(r, p) =&gt; r+(a._1 - p._1).abs+(a._2 - p._2).abs}
        return_if_available_find(corners.sort(vecv(_) &lt; vecv(_)))
      }
      return_if_available_find(others)
    }

    return_if_available_find(List(center))
    return_if_available_find(corners)
    others.find(ttt.available_?).get
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6235/addtag/" class="addtag" id="addtag_6235">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20080908104019/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20080908104019/http://ja.doukaku.org/comment/6235/download/">
		download code
      </a>]
	  [<a href="/web/20080908104019/http://ja.doukaku.org/comment/6235/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6235"
  >-</span><span
  class="button yellow"
  id="rating_z_6235"
  >0</span><span 
  class="button green"
  id="rating_p_6235"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080908104019/http://ja.doukaku.org/174/reply_to/6235/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment6237">
  <p class="banner"><a href="/web/20080908104019/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6237/">#6237</a>(<script language="JavaScript">print_time(new Date("2008/04/30 15:25 GMT"));</script><noscript>2008/04/30 15:25 GMT</noscript>)
	
	
	
	[<a href="/web/20080908104019/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>こんにちは。前回投稿した#6205を改造してプレイヤをつくりました。今回は1ソースのお手軽実装です。
元のシステムの流れを変えないようにしながらも幾らか追加点がありますがシステムのコードが長いので省略させていただきます。
で、ベターなほうのプレイヤ同士だと全部引き分けでした。ランダム要素が無いのでしょうがないですね。
あと、盤面の幅は３に依存しています。
あぁ、バグ取りはしましたけど保障はしません。</p>
<p>Result:</p>
<p>Random Player.[103] BetterThinkPlayer.[7210] Draw[2687]</p>
<p>BetterThinkPlayer.[9287] Random Player.[0] Draw[713]</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &quot;Player.h&quot;</span>

<span class="k">class</span> <span class="nc">BetterPlayer</span><span class="o">:</span><span class="k">public</span> <span class="n">Player</span><span class="p">{</span><span class="c">//長さ３専用</span>
<span class="k">public</span><span class="o">:</span>
    <span class="kt">char</span><span class="o">*</span><span class="n">GetName</span><span class="p">(){</span> <span class="k">return</span> <span class="s">&quot;BetterThinkPlayer.&quot;</span><span class="p">;}</span>
    <span class="kt">void</span> <span class="n">Play</span><span class="p">(</span><span class="n">MBGame</span><span class="o">&amp;</span> <span class="n">in</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">in</span><span class="p">.</span><span class="n">HasEmpty</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">in</span><span class="p">.</span><span class="n">Length</span><span class="p">()</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">while</span><span class="p">(</span><span class="n">in</span><span class="p">.</span><span class="n">SetStone</span><span class="p">(</span><span class="n">rand</span><span class="p">()</span><span class="o">%</span><span class="n">in</span><span class="p">.</span><span class="n">Length</span><span class="p">(),</span><span class="n">rand</span><span class="p">()</span><span class="o">%</span><span class="n">in</span><span class="p">.</span><span class="n">Length</span><span class="p">(),</span><span class="n">Mark_</span><span class="p">));</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="c">//マスの重み</span>
        <span class="kt">short</span> <span class="n">Point</span><span class="p">[]</span><span class="o">=</span><span class="p">{</span>    <span class="mi">43</span><span class="p">,</span><span class="mi">27</span> <span class="p">,</span><span class="mi">41</span><span class="p">,</span>
                        <span class="mi">28</span><span class="p">,</span><span class="mi">100</span><span class="p">,</span><span class="mi">26</span><span class="p">,</span>
                        <span class="mi">42</span><span class="p">,</span><span class="mi">29</span> <span class="p">,</span><span class="mi">44</span><span class="p">,</span>
        <span class="p">};</span>
        <span class="kt">int</span> <span class="n">op</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
        <span class="k">do</span><span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">in</span><span class="p">.</span><span class="n">HasEmpty</span><span class="p">())</span> <span class="k">return</span><span class="p">;</span>
            <span class="n">think</span><span class="p">(</span><span class="n">in</span><span class="p">,</span><span class="n">Point</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">Point</span><span class="p">));</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="k">sizeof</span><span class="p">(</span><span class="n">Point</span><span class="p">);</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
                <span class="k">if</span><span class="p">(</span><span class="n">Point</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span><span class="n">Point</span><span class="p">[</span><span class="n">op</span><span class="p">]){</span>
                    <span class="n">op</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="n">Point</span><span class="p">[</span><span class="n">op</span><span class="p">]</span><span class="o">=-</span><span class="mi">10000</span><span class="p">;</span>
        <span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">in</span><span class="p">.</span><span class="n">SetStone</span><span class="p">(</span><span class="n">op</span><span class="o">%</span><span class="mi">3</span><span class="p">,</span><span class="n">op</span><span class="o">/</span><span class="mi">3</span><span class="p">,</span><span class="n">Mark_</span><span class="p">));</span>
        
    <span class="p">}</span>
<span class="k">protected</span><span class="o">:</span>
    
    <span class="kt">void</span> <span class="n">think</span><span class="p">(</span><span class="n">MBGame</span><span class="o">&amp;</span> <span class="n">in</span><span class="p">,</span><span class="kt">short</span> <span class="n">Point</span><span class="p">[],</span><span class="kt">int</span> <span class="n">N</span><span class="p">){</span>
        <span class="k">const</span> <span class="kt">short</span> <span class="n">Posi</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
        <span class="k">const</span> <span class="kt">short</span> <span class="n">Nega</span> <span class="o">=</span> <span class="o">-</span><span class="mi">5</span><span class="p">;</span>
        <span class="k">const</span> <span class="kt">short</span> <span class="n">denger</span> <span class="o">=</span><span class="mi">9999</span><span class="p">;</span>
        <span class="kt">char</span> <span class="n">Lines</span><span class="p">[</span><span class="mi">8</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="p">{</span>
                        <span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">},{</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">},{</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">},</span><span class="c">//横</span>
                        <span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">},{</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">7</span><span class="p">},{</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">8</span><span class="p">},</span><span class="c">//縦</span>
                        <span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">8</span><span class="p">},{</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">},</span><span class="c">//斜め</span>
        <span class="p">};</span>
        <span class="kt">char</span> <span class="n">Side</span><span class="p">[</span><span class="mi">9</span><span class="p">][</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="p">{</span>    
                        <span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="c">//-1は番兵</span>
                        <span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span>
                        <span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span>
                        <span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span>
                        <span class="p">{</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span>
                        <span class="p">{</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span>
                        <span class="p">{</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span>
                        <span class="p">{</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span>    
                        <span class="p">{</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span>
        <span class="p">};</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">9</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span><span class="c">//こまの配置による判定</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">Side</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
                <span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
                <span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="n">Side</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
                <span class="n">x</span> <span class="o">=</span> <span class="n">N</span><span class="o">%</span><span class="mi">3</span><span class="p">;</span>
                <span class="n">y</span> <span class="o">=</span> <span class="n">N</span><span class="o">/</span><span class="mi">3</span><span class="p">;</span>
                <span class="n">Mark</span> <span class="n">M</span><span class="o">=</span> <span class="n">in</span><span class="p">.</span><span class="n">At</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">M</span> <span class="o">==</span> <span class="n">Mark_</span><span class="p">)</span> <span class="n">Point</span><span class="p">[</span><span class="n">Side</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]]</span><span class="o">+=</span> <span class="n">Posi</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">M</span> <span class="o">!=</span> <span class="n">Mark_</span> <span class="o">&amp;&amp;</span> <span class="n">M</span> <span class="o">!=</span> <span class="n">None</span> <span class="p">)</span> <span class="n">Point</span><span class="p">[</span><span class="n">Side</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]]</span><span class="o">+=</span> <span class="n">Nega</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">8</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span><span class="c">//超危ない時の判定</span>
            <span class="kt">int</span> <span class="n">P</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
                <span class="kt">int</span> <span class="n">N</span><span class="o">=</span> <span class="n">Lines</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
                <span class="n">x</span> <span class="o">=</span> <span class="n">N</span><span class="o">%</span><span class="mi">3</span><span class="p">;</span>
                <span class="n">y</span> <span class="o">=</span> <span class="n">N</span><span class="o">/</span><span class="mi">3</span><span class="p">;</span>
                <span class="n">Mark</span> <span class="n">M</span> <span class="o">=</span> <span class="n">in</span><span class="p">.</span><span class="n">At</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">M</span> <span class="o">==</span> <span class="n">Mark_</span><span class="p">)</span> <span class="n">P</span><span class="o">++</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">M</span> <span class="o">!=</span> <span class="n">None</span> <span class="o">&amp;&amp;</span> <span class="n">M</span> <span class="o">!=</span> <span class="n">Mark_</span><span class="p">)</span> <span class="n">P</span><span class="o">--</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
                <span class="k">if</span><span class="p">(</span><span class="n">P</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span> <span class="n">Point</span><span class="p">[</span><span class="n">Lines</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]]</span><span class="o">+=</span><span class="n">denger</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">P</span> <span class="o">==</span> <span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="n">Point</span><span class="p">[</span><span class="n">Lines</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]]</span><span class="o">+=</span><span class="n">denger</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

<span class="p">};</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6237/addtag/" class="addtag" id="addtag_6237">Tags</a>:
	
    
    <a href="/web/20080908104019/http://ja.doukaku.org/tag/VC2008Express/">VC2008Express</a>
    
	&nbsp;

	
      [<a href="/web/20080908104019/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20080908104019/http://ja.doukaku.org/comment/6237/download/">
		download code
      </a>]
	  [<a href="/web/20080908104019/http://ja.doukaku.org/comment/6237/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6237"
  >-</span><span
  class="button yellow"
  id="rating_z_6237"
  >0</span><span 
  class="button green"
  id="rating_p_6237"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080908104019/http://ja.doukaku.org/comment/6237/">
    2
    replies
  </a>

  [<a href="/web/20080908104019/http://ja.doukaku.org/174/reply_to/6237/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment6238">
  <p class="banner"><a href="/web/20080908104019/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6238/">#6238</a>(<script language="JavaScript">print_time(new Date("2008/04/30 16:00 GMT"));</script><noscript>2008/04/30 16:00 GMT</noscript>)
	
	
	
	[<a href="/web/20080908104019/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>バグ見つけてしまいました。面目ない。
コメントの位置を参考にして必要なら差し替えてください。</p>
<p>Random Player.[293] BetterThinkPlayer.[8721] Draw[986]</p>
<p>BetterThinkPlayer.[9858] Random Player.[0] Draw[142]</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre>        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">9</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span><span class="c">//こまの配置による判定</span>
            <span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">;</span>
                <span class="n">x</span> <span class="o">=</span> <span class="n">i</span><span class="o">%</span><span class="mi">3</span><span class="p">;</span>
                <span class="n">y</span> <span class="o">=</span> <span class="n">i</span><span class="o">/</span><span class="mi">3</span><span class="p">;</span>
            <span class="n">Mark</span> <span class="n">M</span><span class="o">=</span> <span class="n">in</span><span class="p">.</span><span class="n">At</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">);</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">Side</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
                <span class="k">if</span><span class="p">(</span><span class="n">M</span> <span class="o">==</span> <span class="n">Mark_</span><span class="p">)</span> <span class="n">Point</span><span class="p">[</span><span class="n">Side</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]]</span><span class="o">+=</span> <span class="n">Posi</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">M</span> <span class="o">!=</span> <span class="n">Mark_</span> <span class="o">&amp;&amp;</span> <span class="n">M</span> <span class="o">!=</span> <span class="n">None</span> <span class="p">)</span> <span class="n">Point</span><span class="p">[</span><span class="n">Side</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]]</span><span class="o">+=</span> <span class="n">Nega</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6238/addtag/" class="addtag" id="addtag_6238">Tags</a>:
	
    
    <a href="/web/20080908104019/http://ja.doukaku.org/tag/VC2008Express%E3%80%80D%EF%BD%89ff/">VC2008Express　Dｉff</a>
    
	&nbsp;

	
      [<a href="/web/20080908104019/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20080908104019/http://ja.doukaku.org/comment/6238/download/">
		download code
      </a>]
	  [<a href="/web/20080908104019/http://ja.doukaku.org/comment/6238/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6238"
  >-</span><span
  class="button yellow"
  id="rating_z_6238"
  >0</span><span 
  class="button green"
  id="rating_p_6238"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080908104019/http://ja.doukaku.org/comment/6237/"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080908104019/http://ja.doukaku.org/comment/6238/root/"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080908104019/http://ja.doukaku.org/174/reply_to/6238/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment6240">
  <p class="banner"><a href="/web/20080908104019/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6240/">#6240</a>(<script language="JavaScript">print_time(new Date("2008/05/01 06:04 GMT"));</script><noscript>2008/05/01 06:04 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>プレイヤの説明が抜けてましたね。</p>
<p>基本構造。</p>
<p>評価関数というものを使っています。</p>
<p>説明。</p>
<p>Ｐｌａｙの中の変数Ｐｏｉｎｔにマスの重みを持たせています。優先順位は「１、真ん中。２、隅。３、残り。」　重みの高い順に選んでいっておける場所を発見したら手を終了します。
で、重みは変化します。
あるポイントに自分のコマがあったら周りをポイント＋。逆に相手のコマがあったらポイント-しています。さらに危険な場所を発見したら巨数を＋して回避にあてます。重みをいじれば幾らかバリエーションがだせます。そんな感じの流れです。</p>
<p>最後に。</p>
<p>幾らか急いだために作りこみが甘かったことをここに懺悔いたします。
修正版だと先手が常に勝つようになってしまいました。重みを調整すれば平等になります。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6240/addtag/" class="addtag" id="addtag_6240">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6240"
  >-</span><span
  class="button yellow"
  id="rating_z_6240"
  >0</span><span 
  class="button green"
  id="rating_p_6240"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080908104019/http://ja.doukaku.org/comment/6237/"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080908104019/http://ja.doukaku.org/comment/6240/root/"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080908104019/http://ja.doukaku.org/comment/6240/">
    1
    reply
  </a>

  [<a href="/web/20080908104019/http://ja.doukaku.org/174/reply_to/6240/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment6244">
  <p class="banner"><a href="/web/20080908104019/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6244/">#6244</a>(<script language="JavaScript">print_time(new Date("2008/05/01 15:12 GMT"));</script><noscript>2008/05/01 15:12 GMT</noscript>)
	
	
	
	[<a href="/web/20080908104019/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>AIぽい解だと思います。この方法を使えば、評価関数をうまく設定することで４×４などへの応用がききそうです。</p>
<p>一つ言わせていただくと、BetterThinkPlayerが後攻の場合、わずかですがランダムプレイヤーに負ける結果があります。実は匿名さんのBetterThinkPlayerには急所があり、そこを先攻に狙われると負けてしまうのです。その部分を改善すれば、無敗のBestThinkPlayerになると思います。ぜひやってみてください。</p>
<p>（出題者としては、ここで皆さんが悩んでくれることを期待していました）</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre>ヒント：
short Point[]={    20,15 ,18,
                    14,16,13,
                    17,12 ,19,
        };
このような重み付けの相手に弱くはありませんか？
（実際に試してはいないので、違ったらスミマセン。）
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6244/addtag/" class="addtag" id="addtag_6244">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20080908104019/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20080908104019/http://ja.doukaku.org/comment/6244/download/">
		download code
      </a>]
	  [<a href="/web/20080908104019/http://ja.doukaku.org/comment/6244/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6244"
  >-</span><span
  class="button yellow"
  id="rating_z_6244"
  >0</span><span 
  class="button green"
  id="rating_p_6244"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080908104019/http://ja.doukaku.org/comment/6240/"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080908104019/http://ja.doukaku.org/comment/6244/root/"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080908104019/http://ja.doukaku.org/comment/6244/">
    1
    reply
  </a>

  [<a href="/web/20080908104019/http://ja.doukaku.org/174/reply_to/6244/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment6251">
  <p class="banner"><a href="/web/20080908104019/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6251/">#6251</a>(<script language="JavaScript">print_time(new Date("2008/05/02 10:30 GMT"));</script><noscript>2008/05/02 10:30 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>すごい面白いです。
自分はデバッグ時には思いつきませんでした。orz</p>
<p>割り切り方で負けちゃうんですね。
対策したいと思います。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6251/addtag/" class="addtag" id="addtag_6251">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6251"
  >-</span><span
  class="button yellow"
  id="rating_z_6251"
  >0</span><span 
  class="button green"
  id="rating_p_6251"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080908104019/http://ja.doukaku.org/comment/6244/"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080908104019/http://ja.doukaku.org/comment/6251/root/"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080908104019/http://ja.doukaku.org/comment/6251/">
    1
    reply
  </a>

  [<a href="/web/20080908104019/http://ja.doukaku.org/174/reply_to/6251/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment6253">
  <p class="banner"><a href="/web/20080908104019/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908104019/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908104019im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908104019/http://ja.doukaku.org/comment/6253/">#6253</a>(<script language="JavaScript">print_time(new Date("2008/05/02 15:57 GMT"));</script><noscript>2008/05/02 15:57 GMT</noscript>)
	
	
	
	[<a href="/web/20080908104019/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>できるとわかっていても結構骨が折れますね。大分思考のコードが変わってしまいました。はぁ～。限界！</p>
<p>色々考えながら、みながら、こねていった感じです。5時間くらいかかりましたよ。
データテーブルたくさん書いたので読みにくいと思います。自分でも明日になったらよめないとおもいます。orz</p>
<p>結果は重要でない奴は適当に端折っています。</p>
<p>Result:</p>
<p>Random Player.[36] BetterThinkPlayer.[882] Draw[82]</p>
<p>Random Player.[40] BetterThinkKiller.[870] Draw[90]</p>
<p>BetterThinkKiller.[1] BetterThinkPlayer.[0] Draw[0]　ランダム要素なし</p>
<p>BetterThinkPlayer.[0] MoreBetterPlayer.[0] Draw[1]　ランダム要素なし</p>
<p>BetterThinkKiller.[0] MoreBetterPlayer.[0] Draw[1]　ランダム要素なし</p>
<p>MoreBetterPlayer.[0] BetterThinkKiller.[0] Draw[1]　ランダム要素なし</p>
<p>MoreBetterPlayer.[953] Random Player.[0] Draw[47]</p>
<p>Random Player.[0] MoreBetterPlayer.[8331] Draw[1669]</p>
<p>システムのコードをさらにマイナーアップデートしましたが、長すぎるので省略します。アップローダがあれば融通きくんですけどねぇ。プロジェクトをZip圧縮して８kbくらいでした。おっと。これはいいか。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#pragma once</span>
<span class="cp">#include &quot;Player.h&quot;</span>
<span class="k">class</span> <span class="nc">MoreBetterPlayer</span><span class="o">:</span><span class="k">public</span> <span class="n">Player</span><span class="p">{</span><span class="c">//長さ３専用っていうか最適化しちゃった。。。</span>
<span class="k">public</span><span class="o">:</span>
    <span class="kt">char</span><span class="o">*</span><span class="n">GetName</span><span class="p">(){</span> <span class="k">return</span> <span class="s">&quot;MoreBetterPlayer.&quot;</span><span class="p">;}</span>
    <span class="kt">void</span> <span class="n">Play</span><span class="p">(</span><span class="n">MBGame</span><span class="o">&amp;</span> <span class="n">in</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">in</span><span class="p">.</span><span class="n">HasEmpty</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">in</span><span class="p">.</span><span class="n">Length</span><span class="p">()</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">while</span><span class="p">(</span><span class="n">in</span><span class="p">.</span><span class="n">SetStone</span><span class="p">(</span><span class="n">rand</span><span class="p">()</span><span class="o">%</span><span class="n">in</span><span class="p">.</span><span class="n">Length</span><span class="p">(),</span><span class="n">rand</span><span class="p">()</span><span class="o">%</span><span class="n">in</span><span class="p">.</span><span class="n">Length</span><span class="p">(),</span><span class="n">Mark_</span><span class="p">));</span>
            <span class="k">return</sp>




<!--
     FILE ARCHIVED ON 10:40:19 Sep 8, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:44:45 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
