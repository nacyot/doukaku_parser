
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
分数を小数に展開
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20100619070804cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20100619070804cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20100619070804cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20100619070804/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20100619070804/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20100619070804js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20100619070804js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20100619070804js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20100619070804js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app14.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/9\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "19";
var displayMonth = "Jun";
var displayYear = "2010";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/9/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20100619070804" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20091113065637/http://ja.doukaku.org/9/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="13 Nov 2009"><strong>NOV</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 7:08:04 Jun 19, 2010">JUN</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jul
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20091113065637/http://ja.doukaku.org/9/nested/" title="6:56:37 Nov 13, 2009" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 7:08:04 Jun 19, 2010">19</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20081202175815/http://ja.doukaku.org/9/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="2 Dec 2008"><strong>2008</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 7:08:04 Jun 19, 2010">2010</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2011
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20100619070804*/http://ja.doukaku.org/9/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>4 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 19 Jun 10</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000000_2008:-1:000000000001_2009:-1:000000000010_2010:5:000001000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20100619070804/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20100619070804/http://ja.doukaku.org/9/">分数を小数に展開</a>
</h2>

    





<div class="comment" id="comment3365">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/3365/">#3365</a>(<script language="JavaScript">print_time(new Date("2007/07/05 06:17 GMT"));</script><noscript>2007/07/05 06:17 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  整数a, bを受け取り，分数a/bを小数に展開した文字列を返す関数/メソッドを作成してください。結果が循環小数になる場合は，循環部を{}でくくってください。例：
<pre>
a=3, b=8 → 0.375
a=3, b=14 → 0.2{142857}
</pre>
<p>
与えられる整数a, bは次の条件を満たすものと仮定して構いません。
1 ≦ a ＜ b ≦ 2147483647。なお2147483647は2^31-1です。
<p>
このお題はtnkさんの投稿を元に作成しました。ご投稿ありがとうございます。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/3365/addtag/" class="addtag" id="addtag_3365">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3365"
  >-</span><span
  class="button yellow"
  id="rating_z_3365"
  >0</span><span 
  class="button green"
  id="rating_p_3365"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/3365/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20100619070804/http://ja.doukaku.org/9/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20100619070804/http://ja.doukaku.org/9/flatten/">フラット表示</a> 
<a href="/web/20100619070804/http://ja.doukaku.org/9/">非表示</a> 


  
    





<div class="comment" id="comment177">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/52/" target="_top">mattn</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/177/">#177</a>(<script language="JavaScript">print_time(new Date("2007/07/05 07:52 GMT"));</script><noscript>2007/07/05 07:52 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/vim/">
	  Vim
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  君はやれば出来るんだから、ちゃんと宿題やってきなさい！ってよく言われたなぁ...(意味不明)

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="k">fun</span><span class="p">!</span> Frac<span class="p">(</span>a<span class="p">,</span> <span class="k">b</span><span class="p">)</span>
  <span class="k">let</span> a <span class="p">=</span> a:a
  <span class="k">let</span> <span class="k">b</span> <span class="p">=</span> a:<span class="k">b</span>
  <span class="k">let</span> i <span class="p">=</span> <span class="m">0</span>
  <span class="k">let</span> <span class="k">col</span> <span class="p">=</span> range<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="k">b</span>*<span class="k">b</span><span class="p">)</span>
  <span class="k">let</span> <span class="k">col</span>[<span class="m">0</span>] <span class="p">=</span> <span class="m">0</span>
  <span class="k">let</span> <span class="k">col</span>[<span class="k">b</span>] <span class="p">=</span> <span class="m">0</span>
  <span class="k">let</span> s <span class="p">=</span> <span class="p">(</span>a / <span class="k">b</span><span class="p">)</span> . <span class="s2">&quot;.&quot;</span>
  <span class="k">while</span> <span class="m">1</span>
    <span class="k">let</span> i <span class="p">=</span> i <span class="p">+</span> <span class="m">1</span>
    <span class="k">let</span> a <span class="p">=</span> a % <span class="k">b</span>
    <span class="k">let</span> <span class="k">col</span>[<span class="k">b</span><span class="p">+</span>i] <span class="p">=</span> a
    <span class="k">let</span> <span class="k">j</span> <span class="p">=</span> <span class="k">col</span>[a]
    <span class="k">if</span> <span class="k">j</span> <span class="p">&gt;=</span> <span class="m">0</span> &amp;&amp; <span class="k">j</span> <span class="p">&lt;</span> i &amp;&amp; <span class="k">col</span>[<span class="k">b</span><span class="p">+</span><span class="k">j</span>] <span class="p">==</span> a
      <span class="k">break</span>
    <span class="k">endif</span>
    <span class="k">let</span> <span class="k">col</span>[a] <span class="p">=</span> i
    <span class="k">let</span> a <span class="p">=</span> a * <span class="m">10</span>
    <span class="k">let</span> s .<span class="p">=</span> <span class="p">(</span>a / <span class="k">b</span><span class="p">)</span>
  <span class="k">endwhile</span>
  <span class="k">if</span> a <span class="p">==</span> <span class="m">0</span>
    <span class="k">return</span> s
  <span class="k">endif</span>
  <span class="k">if</span> <span class="k">col</span>[a] <span class="p">==</span> <span class="p">(</span>i<span class="m">-1</span><span class="p">)</span>
    <span class="k">let</span> i <span class="p">=</span> <span class="m">1</span>
  <span class="k">endif</span>
  <span class="k">let</span> s <span class="p">=</span> strpart<span class="p">(</span>s<span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="k">col</span>[a]<span class="p">+</span><span class="m">1</span><span class="p">)</span> . <span class="c">&quot;{&quot; . strpart(s, col[a]+1, i) . &quot;}&quot;</span>
  <span class="k">return</span> s
endfun
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/177/addtag/" class="addtag" id="addtag_177">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/vim/">
		Vim
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/177/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/177/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_177"
  >-</span><span
  class="button yellow"
  id="rating_z_177"
  >0</span><span 
  class="button green"
  id="rating_p_177"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/177/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment179">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/115/" target="_top">shn</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/179/">#179</a>(<script language="JavaScript">print_time(new Date("2007/07/05 07:59 GMT"));</script><noscript>2007/07/05 07:59 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  素直に書いたらこんなのになりました･･･
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">modulo</span><span class="p">(</span><span class="n">numerator</span><span class="p">,</span> <span class="n">denominator</span><span class="p">):</span>
    <span class="k">while</span> <span class="n">numerator</span><span class="p">:</span>
        <span class="n">div</span><span class="p">,</span> <span class="n">numerator</span> <span class="o">=</span> <span class="n">numerator</span> <span class="o">//</span> <span class="n">denominator</span><span class="p">,</span> <span class="n">numerator</span> <span class="o">%</span> <span class="n">denominator</span>
        <span class="k">yield</span> <span class="n">div</span><span class="p">,</span> <span class="n">numerator</span>
        <span class="n">numerator</span> <span class="o">*=</span> <span class="mi">10</span>

<span class="k">def</span> <span class="nf">recurring_decimal</span><span class="p">(</span><span class="n">numerator</span><span class="p">,</span> <span class="n">denominator</span><span class="p">):</span>
    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">reminds</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">for</span> <span class="n">u</span><span class="p">,</span> <span class="n">r</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">modulo</span><span class="p">(</span><span class="n">numerator</span><span class="p">,</span> <span class="n">denominator</span><span class="p">)):</span>
        <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
        <span class="k">if</span> <span class="n">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="n">reminds</span><span class="p">:</span>
            <span class="c"># 循環有り</span>
            <span class="n">idx</span> <span class="o">=</span> <span class="n">reminds</span><span class="p">[</span><span class="n">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span><span class="o">+</span><span class="mi">1</span>
            <span class="k">return</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s">.</span><span class="si">%s</span><span class="s">{</span><span class="si">%s</span><span class="s">}&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="n">idx</span><span class="p">]),</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="n">idx</span><span class="p">:]))</span>
        <span class="n">reminds</span><span class="p">[</span><span class="n">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">u</span>
    <span class="c"># 循環無し</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="o">==</span><span class="mi">1</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s">.</span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">:]))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/179/addtag/" class="addtag" id="addtag_179">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/179/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/179/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_179"
  >-</span><span
  class="button yellow"
  id="rating_z_179"
  >0</span><span 
  class="button green"
  id="rating_p_179"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/179/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/179/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment183">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/183/">#183</a>(<script language="JavaScript">print_time(new Date("2007/07/05 08:49 GMT"));</script><noscript>2007/07/05 08:49 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>基本的な流れは同じですが、いらないと思うところを削るとこうなりました。
・問題条件でa &lt; bなので整数部は0に決まっている
・単にwhileでループするだけなのでジェネレータ使うまでもない？
・組み込み関数にdivmodがある
・文字列化を後でやればremindsはいらない
という感じでしょうか。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">fraction_to_decimal</span><span class="p">(</span><span class="n">numerator</span><span class="p">,</span> <span class="n">denominator</span><span class="p">):</span>
    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">num</span> <span class="o">=</span> <span class="n">numerator</span> <span class="o">*</span> <span class="mi">10</span>
    <span class="n">den</span> <span class="o">=</span> <span class="n">denominator</span>
    <span class="k">while</span> <span class="n">num</span><span class="p">:</span>
        <span class="n">div</span><span class="p">,</span> <span class="n">num</span> <span class="o">=</span> <span class="nb">divmod</span><span class="p">(</span><span class="n">num</span><span class="p">,</span> <span class="n">den</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">div</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span>
            <span class="c"># repeating</span>
            <span class="n">idx</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">div</span><span class="p">)</span>
            <span class="k">return</span> <span class="s">&quot;0.</span><span class="si">%s</span><span class="s">{</span><span class="si">%s</span><span class="s">}&quot;</span> <span class="o">%</span> <span class="p">(</span>
                <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">result</span><span class="p">[:</span><span class="n">idx</span><span class="p">]),</span>
                <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">result</span><span class="p">[</span><span class="n">idx</span><span class="p">:]))</span>

        <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">div</span><span class="p">)</span>
        <span class="n">num</span> <span class="o">*=</span> <span class="mi">10</span>

    <span class="k">return</span> <span class="s">&quot;0.&quot;</span> <span class="o">+</span> <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">result</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/183/addtag/" class="addtag" id="addtag_183">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/Python2.5/">Python2.5</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/183/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/183/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_183"
  >-</span><span
  class="button yellow"
  id="rating_z_183"
  >0</span><span 
  class="button green"
  id="rating_p_183"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/179/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/183/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/183/">
    4
    replies
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/183/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment184">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/184/">#184</a>(<script language="JavaScript">print_time(new Date("2007/07/05 08:52 GMT"));</script><noscript>2007/07/05 08:52 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>あー、denominatorが使われるのは1回だけだから
名前を付け替える必要はなかったか…。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/184/addtag/" class="addtag" id="addtag_184">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_184"
  >-</span><span
  class="button yellow"
  id="rating_z_184"
  >0</span><span 
  class="button green"
  id="rating_p_184"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/183/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/184/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/184/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment187">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/115/" target="_top">shn</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/187/">#187</a>(<script language="JavaScript">print_time(new Date("2007/07/05 09:20 GMT"));</script><noscript>2007/07/05 09:20 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  divmod なんてあるんすねぇ。

divじゃなくて、numの2回目で跳ねないと 1 / 191とかで間違えますぜ
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/187/addtag/" class="addtag" id="addtag_187">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_187"
  >-</span><span
  class="button yellow"
  id="rating_z_187"
  >0</span><span 
  class="button green"
  id="rating_p_187"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/183/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/187/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/187/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment188">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/120/" target="_top">naruse</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/188/">#188</a>(<script language="JavaScript">print_time(new Date("2007/07/05 09:21 GMT"));</script><noscript>2007/07/05 09:21 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  &gt;&gt;&gt; fraction_to_decimal(3,14)
'0.{214}'
となってしまうので、remindsは必要だと思います。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/188/addtag/" class="addtag" id="addtag_188">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_188"
  >-</span><span
  class="button yellow"
  id="rating_z_188"
  >0</span><span 
  class="button green"
  id="rating_p_188"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/183/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/188/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/188/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/188/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment189">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/189/">#189</a>(<script language="JavaScript">print_time(new Date("2007/07/05 09:47 GMT"));</script><noscript>2007/07/05 09:47 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ああっ、確かにそうですね。
うっかりしてました。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/189/addtag/" class="addtag" id="addtag_189">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_189"
  >-</span><span
  class="button yellow"
  id="rating_z_189"
  >0</span><span 
  class="button green"
  id="rating_p_189"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/188/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/189/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/189/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment201">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/30/" target="_top">tnk</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/201/">#201</a>(<script language="JavaScript">print_time(new Date("2007/07/05 16:04 GMT"));</script><noscript>2007/07/05 16:04 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>どこかおかしいですよ。

Python 2.5 (r25:51908, Sep 19 2006, 09:52:17) [MSC v.1310 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; def fraction_to_decimal(numerator, denominator):
...     result = []
...     num = numerator * 10
...     den = denominator
...     while num:
...         div, num = divmod(num, den)
...         if div in result:
...             # repeating
...             idx = result.index(div)
...             return "0.%s{%s}" % (
...                 "".join(str(x) for x in result[:idx]),
...                 "".join(str(x) for x in result[idx:]))
...         result.append(div)
...         num *= 10
...     return "0." + "".join(str(x) for x in result)
...
&gt;&gt;&gt; fraction_to_decimal(3,8)
'0.375'
&gt;&gt;&gt; fraction_to_decimal(3,14)
'0.{214}'</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/201/addtag/" class="addtag" id="addtag_201">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_201"
  >-</span><span
  class="button yellow"
  id="rating_z_201"
  >0</span><span 
  class="button green"
  id="rating_p_201"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/183/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/201/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/201/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment182">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/182/">#182</a>(<script language="JavaScript">print_time(new Date("2007/07/05 08:29 GMT"));</script><noscript>2007/07/05 08:29 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  schemeですけど、gaucheでしか動かないと思います。エレガントではないので申し訳ないです。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">text</span><span class="o">.</span><span class="nv">tree</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">div</span> <span class="nv">a</span> <span class="nv">b</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">tree-&gt;string</span> <span class="o">`</span><span class="p">(</span><span class="s">&quot;0.&quot;</span> <span class="o">,</span><span class="p">(</span><span class="nf">div2</span> <span class="p">(</span><span class="nb">* </span><span class="nv">a</span> <span class="mi">10</span><span class="p">)</span> <span class="nv">b</span> <span class="p">(</span><span class="nf">make-hash-table</span> <span class="ss">&#39;eqv?</span><span class="p">)))))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">div2</span> <span class="nv">a</span> <span class="nv">b</span> <span class="nv">h</span><span class="p">)</span>
  <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nf">hash-table-get</span> <span class="nv">h</span> <span class="nv">a</span> <span class="no">#f</span><span class="p">)</span>
         <span class="k">=&gt; </span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x</span><span class="p">)</span>
              <span class="p">(</span><span class="nb">set-car! </span><span class="nv">x</span> <span class="o">`</span><span class="p">(</span><span class="s">&quot;{&quot;</span> <span class="o">,</span><span class="p">(</span><span class="nb">car </span><span class="nv">x</span><span class="p">)))</span>
              <span class="o">`</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">)))</span>
        <span class="p">(</span><span class="nf">else</span>
          <span class="p">(</span><span class="nf">call-with-values</span>
            <span class="p">(</span><span class="nf">cut</span> <span class="nv">quotient&amp;remainder</span> <span class="nv">a</span> <span class="nv">b</span><span class="p">)</span>
            <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">q</span> <span class="nv">r</span><span class="p">)</span>
              <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">zero? </span><span class="nv">r</span><span class="p">)</span> <span class="o">`</span><span class="p">(</span><span class="o">,</span><span class="nv">q</span><span class="p">)</span>
                  <span class="p">(</span><span class="nf">let1</span> <span class="nv">p</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">q</span> <span class="no">#f</span><span class="p">)</span>
                    <span class="p">(</span><span class="nf">hash-table-put!</span> <span class="nv">h</span> <span class="nv">a</span> <span class="nv">p</span><span class="p">)</span>
                    <span class="p">(</span><span class="nb">set-cdr! </span><span class="nv">p</span> <span class="p">(</span><span class="nf">div2</span> <span class="p">(</span><span class="nb">* </span><span class="nv">r</span> <span class="mi">10</span><span class="p">)</span> <span class="nv">b</span> <span class="nv">h</span><span class="p">))</span>
                    <span class="nv">p</span><span class="p">)))))))</span>

<span class="p">(</span><span class="nf">print</span> <span class="p">(</span><span class="nf">div</span> <span class="mi">3</span> <span class="mi">8</span><span class="p">))</span>
<span class="p">(</span><span class="nf">print</span> <span class="p">(</span><span class="nf">div</span> <span class="mi">3</span> <span class="mi">14</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/182/addtag/" class="addtag" id="addtag_182">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/182/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/182/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_182"
  >-</span><span
  class="button yellow"
  id="rating_z_182"
  >0</span><span 
  class="button green"
  id="rating_p_182"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/182/">
    2
    replies
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/182/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment212">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/212/">#212</a>(<script language="JavaScript">print_time(new Date("2007/07/06 01:25 GMT"));</script><noscript>2007/07/06 01:25 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  2147483645 / 2147483647 でOut of Memoryが出ちゃいました。
スタックの事もあるし、考え直します。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/212/addtag/" class="addtag" id="addtag_212">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_212"
  >-</span><span
  class="button yellow"
  id="rating_z_212"
  >0</span><span 
  class="button green"
  id="rating_p_212"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/182/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/212/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/212/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment218">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/218/">#218</a>(<script language="JavaScript">print_time(new Date("2007/07/06 06:04 GMT"));</script><noscript>2007/07/06 06:04 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  副作用無し版。gaucheです。
検索が遅いので、桁が多いと遅くなります。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">text</span><span class="o">.</span><span class="nv">tree</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-1</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-11</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">sequence</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">div3</span> <span class="nv">a</span> <span class="nv">b</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">tree-&gt;string</span> <span class="p">(</span><span class="nb">cons </span><span class="s">&quot;0.&quot;</span>
    <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">a</span> <span class="p">(</span><span class="nb">* </span><span class="mi">10</span> <span class="nv">a</span><span class="p">))</span> <span class="p">(</span><span class="nf">b</span> <span class="nv">b</span><span class="p">)</span> <span class="p">(</span><span class="nf">r</span> <span class="p">())</span> <span class="p">(</span><span class="nf">l</span> <span class="p">()))</span>
      <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nf">find-index</span> <span class="p">(</span><span class="nf">pa$</span> <span class="nv">=</span> <span class="nv">a</span><span class="p">)</span> <span class="nv">l</span><span class="p">)</span> <span class="nv">=&gt;</span>
             <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">m</span><span class="p">)</span>
               <span class="p">(</span><span class="nf">reverse</span>
                 <span class="p">(</span><span class="nb">call-with-values </span><span class="p">(</span><span class="nf">cut</span> <span class="nv">split-at</span> <span class="nv">r</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">m</span> <span class="mi">1</span><span class="p">))</span>
                                   <span class="p">(</span><span class="nf">cut</span> <span class="nv">append</span> <span class="o">&#39;</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">)</span> <span class="nv">&lt;&gt;</span> <span class="o">&#39;</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">)</span> <span class="nv">&lt;&gt;</span><span class="p">)))))</span>
            <span class="p">((</span><span class="nb">&lt; </span><span class="nv">a</span> <span class="nv">b</span><span class="p">)</span> <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">* </span><span class="nv">a</span> <span class="mi">10</span><span class="p">)</span> <span class="nv">b</span> <span class="p">(</span><span class="nb">cons </span><span class="mi">0</span> <span class="nv">r</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">a</span> <span class="nv">l</span><span class="p">)))</span>
            <span class="p">(</span><span class="k">else </span><span class="p">(</span><span class="nf">let-values</span> <span class="p">(((</span><span class="nf">quo</span> <span class="nv">rem</span><span class="p">)</span> <span class="p">(</span><span class="nf">quotient&amp;remainder</span> <span class="nv">a</span> <span class="nv">b</span><span class="p">)))</span>
                    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">zero? </span><span class="nv">rem</span><span class="p">)</span>
                      <span class="p">(</span><span class="nb">reverse </span><span class="p">(</span><span class="nb">cons </span><span class="nv">quo</span> <span class="nv">r</span><span class="p">))</span>
                      <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">* </span><span class="nv">rem</span> <span class="mi">10</span><span class="p">)</span> <span class="nv">b</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">quo</span> <span class="nv">r</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">a</span> <span class="nv">l</span><span class="p">))))))))))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/218/addtag/" class="addtag" id="addtag_218">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/218/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/218/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_218"
  >-</span><span
  class="button yellow"
  id="rating_z_218"
  >0</span><span 
  class="button green"
  id="rating_p_218"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/182/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/218/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/218/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  

  
    





<div class="comment" id="comment185">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/14/" target="_top">kawauchi</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/185/">#185</a>(<script language="JavaScript">print_time(new Date("2007/07/05 09:16 GMT"));</script><noscript>2007/07/05 09:16 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  未検証
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;rational&#39;</span>

<span class="k">def</span> <span class="nf">func</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
  <span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">/</span> <span class="n">b</span>
  <span class="n">dst</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">c</span><span class="si">}</span><span class="s2">.&quot;</span><span class="o">]</span>
  <span class="n">d</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="p">,</span> <span class="no">Rational</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="o">-</span> <span class="n">c</span><span class="o">]</span>
  <span class="n">h</span> <span class="o">=</span> <span class="o">[]</span>
  <span class="mi">1</span><span class="o">.</span><span class="n">upto</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
    <span class="n">d</span> <span class="o">=</span> <span class="n">d</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">divmod</span><span class="p">(</span><span class="no">Rational</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span> <span class="o">**</span> <span class="n">i</span><span class="p">))</span>
    <span class="n">k</span> <span class="o">=</span> <span class="o">[</span><span class="n">d</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="n">d</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">numerator</span><span class="p">,</span> <span class="n">d</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">denominator</span> <span class="o">/</span> <span class="mi">10</span> <span class="o">**</span> <span class="n">i</span><span class="o">]</span>
    <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="o">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="o">]</span>
      <span class="k">return</span> <span class="n">dst</span><span class="o">.</span><span class="n">to_s</span>
    <span class="k">end</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">=</span> <span class="n">h</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
      <span class="k">return</span> <span class="p">(</span><span class="n">dst</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.n</span><span class="o">]</span> <span class="o">+</span> <span class="o">[</span><span class="s2">&quot;{&quot;</span><span class="o">]</span> <span class="o">+</span> <span class="n">dst</span><span class="o">[</span><span class="n">n</span> <span class="o">+</span> <span class="mi">1</span><span class="o">.</span><span class="n">.dst</span><span class="o">.</span><span class="n">size</span><span class="o">]</span> <span class="o">+</span> <span class="o">[</span><span class="s2">&quot;}&quot;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
    <span class="k">end</span>
    <span class="n">h</span> <span class="o">&lt;&lt;</span> <span class="n">k</span>
    <span class="n">dst</span> <span class="o">&lt;&lt;</span> <span class="n">d</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
  <span class="p">}</span>
  <span class="n">dst</span><span class="o">.</span><span class="n">to_s</span> <span class="o">+</span> <span class="s2">&quot;...&quot;</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/185/addtag/" class="addtag" id="addtag_185">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/185/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/185/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_185"
  >-</span><span
  class="button yellow"
  id="rating_z_185"
  >0</span><span 
  class="button green"
  id="rating_p_185"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/185/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment186">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/120/" target="_top">naruse</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/186/">#186</a>(<script language="JavaScript">print_time(new Date("2007/07/05 09:17 GMT"));</script><noscript>2007/07/05 09:17 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">flac_to_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
  <span class="n">r</span> <span class="o">=</span> <span class="s1">&#39;0.&#39;</span>
  <span class="n">m</span> <span class="o">=</span> <span class="o">[]</span>
  <span class="k">while</span> <span class="n">a</span> <span class="o">!=</span> <span class="mi">0</span>
    <span class="n">m</span> <span class="o">&lt;&lt;</span> <span class="n">a</span>
    <span class="n">a</span> <span class="o">*=</span> <span class="mi">10</span>
    <span class="n">r</span> <span class="o">+=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">a</span><span class="sx">%=b)</span>
<span class="sx">      r[i+2,0] =</span> <span class="s1">&#39;{&#39;</span>
      <span class="n">r</span> <span class="o">+=</span> <span class="s1">&#39;}&#39;</span>
      <span class="k">break</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="n">r</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/186/addtag/" class="addtag" id="addtag_186">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/186/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/186/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_186"
  >-</span><span
  class="button yellow"
  id="rating_z_186"
  >0</span><span 
  class="button green"
  id="rating_p_186"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/186/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/186/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment202">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/28/" target="_top">minke</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/202/">#202</a>(<script language="JavaScript">print_time(new Date("2007/07/05 16:24 GMT"));</script><noscript>2007/07/05 16:24 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  ほぼ同じなんですが、Hashを使ったほうが効率良いですよね。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">frac_to_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
  <span class="n">r</span> <span class="o">=</span> <span class="s1">&#39;0.&#39;</span>
  <span class="n">m</span> <span class="o">=</span> <span class="p">{}</span>
  <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="k">while</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mi">0</span>
    <span class="n">m</span><span class="o">[</span><span class="n">a</span><span class="o">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">i</span><span class="o">+=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">a</span> <span class="o">*=</span> <span class="mi">10</span>
    <span class="n">r</span> <span class="o">+=</span> <span class="p">(</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
    <span class="k">if</span> <span class="n">m</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="n">a</span><span class="o">%=</span><span class="n">b</span><span class="p">)</span>
      <span class="n">r</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">m</span><span class="o">[</span><span class="n">a</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;{&#39;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s1">&#39;}&#39;</span>
      <span class="k">break</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="n">r</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/202/addtag/" class="addtag" id="addtag_202">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/202/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/202/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_202"
  >-</span><span
  class="button yellow"
  id="rating_z_202"
  >0</span><span 
  class="button green"
  id="rating_p_202"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/186/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/202/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/202/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/202/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment3919">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/26/" target="_top">dankogai</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/3919/">#3919</a>(<script language="JavaScript">print_time(new Date("2007/11/12 17:52 GMT"));</script><noscript>2007/11/12 17:52 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
<p>ストレートフォワードかつきれいなコードなので、Perlにも移植させていただきました。何をやっているかを解りやすくするため、変数名をもう少しdescriptiveにし、10より大きな整数の場合にもきちんと動くようにしてあります。
</p>
<p>Dan the Math Monger
</p>



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!/usr/local/bin/perl</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>

<span class="c1"># cf. http://ja.doukaku.org/comment/202/</span>

<span class="k">sub </span><span class="nf">rat2dec</span> <span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span> <span class="nv">$num</span><span class="p">,</span> <span class="nv">$den</span> <span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$result</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span> <span class="nv">$num</span> <span class="o">/</span> <span class="nv">$den</span> <span class="p">);</span>
    <span class="k">my</span> <span class="nv">$offset</span> <span class="o">=</span> <span class="nb">length</span> <span class="nv">$result</span><span class="p">;</span>
    <span class="nv">$result</span> <span class="o">.=</span> <span class="s">&#39;.&#39;</span><span class="p">;</span>
    <span class="nv">$num</span> <span class="nv">%</span><span class="err">=</span> <span class="err">$</span><span class="nv">den</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">%repeat</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span> <span class="nv">$num</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">)</span> <span class="p">{</span>
        <span class="nv">$repeat</span><span class="p">{</span><span class="nv">$num</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$i</span><span class="o">++</span><span class="p">;</span>
        <span class="nv">$num</span> <span class="o">*=</span> <span class="mi">10</span><span class="p">;</span>
        <span class="nv">$result</span> <span class="o">.=</span> <span class="nb">int</span><span class="p">(</span> <span class="nv">$num</span> <span class="o">/</span> <span class="nv">$den</span> <span class="p">);</span>
        <span class="k">next</span> <span class="k">unless</span> <span class="nv">$repeat</span><span class="p">{</span> <span class="nv">$num</span> <span class="nv">%</span><span class="err">=</span> <span class="err">$</span><span class="nv">den</span> <span class="p">};</span>
        <span class="nb">substr</span><span class="p">(</span> <span class="nv">$result</span><span class="p">,</span> <span class="nv">$repeat</span><span class="p">{</span><span class="nv">$num</span><span class="p">}</span> <span class="o">+</span> <span class="nv">$offset</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&#39;{&#39;</span> <span class="p">);</span>
        <span class="nv">$result</span> <span class="o">.=</span> <span class="s">&#39;}&#39;</span><span class="p">;</span>
        <span class="k">last</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nv">$result</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">print</span> <span class="n">rat2dec</span><span class="p">(</span><span class="nv">@ARGV</span><span class="p">),</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/3919/addtag/" class="addtag" id="addtag_3919">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/math/">math</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/3919/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/3919/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3919"
  >-</span><span
  class="button yellow"
  id="rating_z_3919"
  >0</span><span 
  class="button green"
  id="rating_p_3919"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/202/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/3919/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/3919/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  

  

  
    





<div class="comment" id="comment193">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/76/" target="_top">satyri</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/193/">#193</a>(<script language="JavaScript">print_time(new Date("2007/07/05 12:44 GMT"));</script><noscript>2007/07/05 12:44 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>んー、いまいち。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">decimal</span><span class="p">(</span><span class="nv">$numerator</span><span class="p">,</span> <span class="nv">$denominator</span><span class="p">){</span>
	<span class="nv">$remainders</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
	<span class="nv">$fraction</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
	<span class="nv">$remainder</span> <span class="o">=</span> <span class="nv">$numerator</span> <span class="o">%</span> <span class="nv">$denominator</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nf">in_array</span><span class="p">(</span><span class="nv">$remainder</span><span class="p">,</span> <span class="nv">$remainders</span><span class="p">)</span> <span class="o">||</span> <span class="nv">$remainder</span> <span class="o">==</span> <span class="m">0</span><span class="p">)){</span>
		<span class="nv">$numerator</span> <span class="o">=</span> <span class="nv">$remainder</span> <span class="o">*</span> <span class="m">10</span><span class="p">;</span>
		<span class="nv">$quotient</span> <span class="o">=</span> <span class="nf">floor</span><span class="p">(</span><span class="nv">$numerator</span> <span class="o">/</span> <span class="nv">$denominator</span><span class="p">);</span>
		<span class="nv">$remainders</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$remainder</span><span class="p">;</span>
		<span class="nv">$fraction</span><span class="p">[]</span><span class="o">=</span> <span class="nv">$quotient</span><span class="p">;</span>
		<span class="nv">$remainder</span> <span class="o">=</span> <span class="nv">$numerator</span> <span class="o">%</span> <span class="nv">$denominator</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nf">floor</span><span class="p">(</span><span class="nv">$remainder</span> <span class="o">*</span> <span class="m">10</span> <span class="o">/</span> <span class="nv">$denominator</span><span class="p">)</span> <span class="o">==</span> <span class="m">0</span> <span class="o">&amp;&amp;</span> <span class="nv">$remainder</span> <span class="o">==</span> <span class="m">0</span><span class="p">)){</span>
		<span class="nv">$loop_start</span> <span class="o">=</span> <span class="nf">array_search</span><span class="p">(</span><span class="nv">$remainder</span><span class="p">,</span> <span class="nv">$remainders</span><span class="p">);</span>
		<span class="nv">$fraction</span><span class="p">[</span><span class="nv">$loop_start</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;{&#39;</span><span class="o">.</span><span class="nv">$fraction</span><span class="p">[</span><span class="nv">$loop_start</span><span class="p">];</span>
		<span class="nv">$fraction</span><span class="p">[]</span> <span class="o">=</span> <span class="s1">&#39;}&#39;</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="s1">&#39;0.&#39;</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="nv">$fraction</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">echo</span><span class="p">(</span><span class="nx">decimal</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">14</span><span class="p">));</span>
<span class="cp">?&gt;</span><span class="x"></span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/193/addtag/" class="addtag" id="addtag_193">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/PHP/">PHP</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/193/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/193/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_193"
  >-</span><span
  class="button yellow"
  id="rating_z_193"
  >0</span><span 
  class="button green"
  id="rating_p_193"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/193/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/193/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment204">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/130/" target="_top">rucker</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/204/">#204</a>(<script language="JavaScript">print_time(new Date("2007/07/05 16:30 GMT"));</script><noscript>2007/07/05 16:30 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>無駄を省いてみた。
$remainders の使い方を変えてみた。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">decimal</span><span class="p">(</span><span class="nv">$numerator</span><span class="p">,</span> <span class="nv">$denominator</span><span class="p">)</span>
<span class="p">{</span>
	<span class="nv">$remainders</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
	<span class="nv">$fraction</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
	<span class="nv">$remainder</span> <span class="o">=</span> <span class="nv">$numerator</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(;;)</span>
	<span class="p">{</span>	<span class="nv">$remainder</span> <span class="o">*=</span> <span class="m">10</span><span class="p">;</span>
		<span class="nv">$fraction</span><span class="p">[]</span> <span class="o">=</span> <span class="nf">floor</span><span class="p">(</span><span class="nv">$remainder</span> <span class="o">/</span> <span class="nv">$denominator</span><span class="p">);</span>
		<span class="nv">$remainder</span> <span class="o">%=</span> <span class="nv">$denominator</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nv">$remainder</span><span class="p">)</span>
			<span class="k">break</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="nf">isset</span><span class="p">(</span><span class="nv">$remainders</span><span class="p">[</span><span class="nv">$remainder</span><span class="p">]))</span>
		<span class="p">{</span>	<span class="nv">$loop_start</span> <span class="o">=</span> <span class="nv">$remainders</span><span class="p">[</span><span class="nv">$remainder</span><span class="p">];</span>
			<span class="nv">$fraction</span><span class="p">[</span><span class="nv">$loop_start</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;{&#39;</span><span class="o">.</span><span class="nv">$fraction</span><span class="p">[</span><span class="nv">$loop_start</span><span class="p">];</span>
			<span class="nv">$fraction</span><span class="p">[]</span> <span class="o">=</span> <span class="s1">&#39;}&#39;</span><span class="p">;</span>
			<span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="nv">$remainders</span><span class="p">[</span><span class="nv">$remainder</span><span class="p">]</span> <span class="o">=</span> <span class="nf">count</span><span class="p">(</span><span class="nv">$fraction</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="s1">&#39;0.&#39;</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="nv">$fraction</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">echo</span> <span class="nx">decimal</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">14</span><span class="p">),</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/204/addtag/" class="addtag" id="addtag_204">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/204/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/204/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_204"
  >-</span><span
  class="button yellow"
  id="rating_z_204"
  >0</span><span 
  class="button green"
  id="rating_p_204"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/193/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/204/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/204/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/204/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment205">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/130/" target="_top">rucker</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/205/">#205</a>(<script language="JavaScript">print_time(new Date("2007/07/05 16:41 GMT"));</script><noscript>2007/07/05 16:41 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  う、早速バグ発見。修正
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">decimal</span><span class="p">(</span><span class="nv">$numerator</span><span class="p">,</span> <span class="nv">$denominator</span><span class="p">)</span>
<span class="p">{</span>
	<span class="nv">$remainders</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
	<span class="nv">$fraction</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
	<span class="nv">$remainder</span> <span class="o">=</span> <span class="nv">$numerator</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(;;)</span>
	<span class="p">{</span>	<span class="nv">$remainders</span><span class="p">[</span><span class="nv">$remainder</span><span class="p">]</span> <span class="o">=</span> <span class="nf">count</span><span class="p">(</span><span class="nv">$fraction</span><span class="p">);</span>
		<span class="nv">$remainder</span> <span class="o">*=</span> <span class="m">10</span><span class="p">;</span>
		<span class="nv">$fraction</span><span class="p">[]</span> <span class="o">=</span> <span class="nf">floor</span><span class="p">(</span><span class="nv">$remainder</span> <span class="o">/</span> <span class="nv">$denominator</span><span class="p">);</span>
		<span class="nv">$remainder</span> <span class="o">%=</span> <span class="nv">$denominator</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nv">$remainder</span><span class="p">)</span>
			<span class="k">break</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="nf">isset</span><span class="p">(</span><span class="nv">$remainders</span><span class="p">[</span><span class="nv">$remainder</span><span class="p">]))</span>
		<span class="p">{</span>	<span class="nv">$loop_start</span> <span class="o">=</span> <span class="nv">$remainders</span><span class="p">[</span><span class="nv">$remainder</span><span class="p">];</span>
			<span class="nv">$fraction</span><span class="p">[</span><span class="nv">$loop_start</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;{&#39;</span><span class="o">.</span><span class="nv">$fraction</span><span class="p">[</span><span class="nv">$loop_start</span><span class="p">];</span>
			<span class="nv">$fraction</span><span class="p">[]</span> <span class="o">=</span> <span class="s1">&#39;}&#39;</span><span class="p">;</span>
			<span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="s1">&#39;0.&#39;</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="nv">$fraction</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">echo</span> <span class="nx">decimal</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">14</span><span class="p">),</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
<span class="k">echo</span> <span class="nx">decimal</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="m">17</span><span class="p">),</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/205/addtag/" class="addtag" id="addtag_205">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/205/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/205/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_205"
  >-</span><span
  class="button yellow"
  id="rating_z_205"
  >0</span><span 
  class="button green"
  id="rating_p_205"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/204/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/205/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/205/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment196">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/196/">#196</a>(<script language="JavaScript">print_time(new Date("2007/07/05 14:05 GMT"));</script><noscript>2007/07/05 14:05 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>CL-USER&gt; (rational-&gt;decimal 3/14)
"0.2{142857}"
CL-USER&gt; (rational-&gt;decimal 1/4)
"0.25"
CL-USER&gt; (rational-&gt;decimal 17/14)
"1.2{142857}"
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre>(defun %rational-&gt;decimal-calc (rat)
  (let ((a (numerator rat))
        (b (denominator rat))
        ret mods)
    (loop
       do
         (setf a (* 10 a))
         (push (floor (/ a b)) ret)
         (setf a (mod a b))
       until
         (or (zerop a) (member a mods))
       do
         (push a mods)
       finally
         (setf ret (nreverse ret)))
    (if (zerop a)
        ret
        (nconc (insert ret (position (floor (/ (* 10 a) b)) ret :from-end t) &quot;{&quot;) &#39;(&quot;}&quot;)))))

(defun insert (list n newelt)
  `(,@(butlast list (- (length list) n)) ,newelt ,@(nthcdr n list)))

(defun rational-&gt;decimal (rat)
  (multiple-value-bind (int frac) (truncate rat)
    (format nil &quot;~a.~{~a~}&quot; int (%rational-&gt;decimal-calc frac))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/196/addtag/" class="addtag" id="addtag_196">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/196/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/196/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_196"
  >-</span><span
  class="button yellow"
  id="rating_z_196"
  >0</span><span 
  class="button green"
  id="rating_p_196"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/196/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment197">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/122/" target="_top">malark</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/197/">#197</a>(<script language="JavaScript">print_time(new Date("2007/07/05 14:41 GMT"));</script><noscript>2007/07/05 14:41 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Java1.6(1.5+?)です。
1&lt;=a&lt;b&lt;2^32-1って条件は無視しちゃいました、a=int &amp; b=int &amp; b!=0 なら…
…故に?長くなっててすみません(汗</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58</pre></td><td class="code"><div class="highlight"><pre><span class="c">/**</span>
<span class="c"> * </span>
<span class="c"> * @param dividend (a) 被除数</span>
<span class="c"> * @param divisor (b) 除数</span>
<span class="c"> * @return 商</span>
<span class="c"> */</span>
<span class="k">public</span> <span class="k">static</span> <span class="n">String</span> <span class="n">getResult</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span> <span class="n">dividend</span><span class="o">,</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">divisor</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">generateResultString</span><span class="o">(</span><span class="n">getDigits</span><span class="o">(</span><span class="n">dividend</span><span class="o">,</span> <span class="n">divisor</span><span class="o">));</span>
<span class="o">}</span>

<span class="k">private</span> <span class="k">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">getDigits</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span> <span class="n">dividend</span><span class="o">,</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">divisor</span><span class="o">)</span> <span class="o">{</span>

    <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">dividends</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;();</span>
    <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">digits</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;();</span>

    <span class="n">getDigits</span><span class="o">(</span><span class="n">dividend</span><span class="o">,</span> <span class="n">divisor</span><span class="o">,</span> <span class="n">digits</span><span class="o">,</span> <span class="n">dividends</span><span class="o">);</span>
    <span class="k">return</span> <span class="n">digits</span><span class="o">;</span>
<span class="o">}</span>

<span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">getDigits</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span> <span class="n">dividend</span><span class="o">,</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">divisor</span><span class="o">,</span>
        <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">digits</span><span class="o">,</span> <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">dividends</span><span class="o">)</span> <span class="o">{</span>

    <span class="k">final</span> <span class="kt">int</span> <span class="n">containedIndex</span> <span class="o">=</span> <span class="n">dividends</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">dividend</span><span class="o">));</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">containedIndex</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">digits</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">containedIndex</span> <span class="o">-</span> <span class="n">digits</span><span class="o">.</span><span class="na">size</span><span class="o">()));</span>
        <span class="k">return</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="n">digits</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">dividend</span> <span class="o">/</span> <span class="n">divisor</span><span class="o">));</span>

    <span class="k">final</span> <span class="kt">int</span> <span class="n">remainder</span> <span class="o">=</span> <span class="n">dividend</span> <span class="o">%</span> <span class="n">divisor</span><span class="o">;</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">remainder</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">dividends</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">dividend</span><span class="o">));</span>
        <span class="n">getDigits</span><span class="o">(</span><span class="n">remainder</span> <span class="o">*</span> <span class="mi">10</span><span class="o">,</span> <span class="n">divisor</span><span class="o">,</span> <span class="n">digits</span><span class="o">,</span> <span class="n">dividends</span><span class="o">);</span>

    <span class="o">}</span>
<span class="o">}</span>

<span class="k">private</span> <span class="k">static</span> <span class="n">String</span> <span class="n">generateResultString</span><span class="o">(</span><span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">digits</span><span class="o">)</span> <span class="o">{</span>
    
    <span class="k">final</span> <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
    <span class="k">assert</span> <span class="n">digits</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">;</span>
    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">digits</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
    
    <span class="k">if</span> <span class="o">(</span><span class="n">digits</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;.&quot;</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="k">final</span> <span class="n">Iterator</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">itr</span> <span class="o">=</span> <span class="n">digits</span><span class="o">.</span><span class="na">listIterator</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span> <span class="n">itr</span><span class="o">.</span><span class="na">hasNext</span><span class="o">();)</span> <span class="o">{</span>
            <span class="k">final</span> <span class="kt">int</span> <span class="n">digit</span> <span class="o">=</span> <span class="n">itr</span><span class="o">.</span><span class="na">next</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">digit</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">digit</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span> <span class="n">digit</span><span class="o">,</span> <span class="s">&quot;{&quot;</span><span class="o">);</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;}&quot;</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/197/addtag/" class="addtag" id="addtag_197">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/197/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/197/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_197"
  >-</span><span
  class="button yellow"
  id="rating_z_197"
  >0</span><span 
  class="button green"
  id="rating_p_197"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/197/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/197/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment200">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/122/" target="_top">malark</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/200/">#200</a>(<script language="JavaScript">print_time(new Date("2007/07/05 15:38 GMT"));</script><noscript>2007/07/05 15:38 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>バグ混在…a=10,b=17を与えたときに
"0.{14084507042253521126760563380281690}"となるべきところが
"0{.1408450704225352112676056338028169}"に…

整数部から循環?してる場合に再現…といっても他の例がないので何とも言えないけど、とりあえず応急措置を…</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre><span class="k">private</span> <span class="k">static</span> <span class="n">String</span> <span class="n">generateResultString</span><span class="o">(</span><span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">digits</span><span class="o">)</span> <span class="o">{</span>

    <span class="k">final</span> <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
    <span class="k">assert</span> <span class="n">digits</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">;</span>
    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">digits</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>

    <span class="k">if</span> <span class="o">(</span><span class="n">digits</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="sc">&#39;.&#39;</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="k">final</span> <span class="n">Iterator</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">itr</span> <span class="o">=</span> <span class="n">digits</span><span class="o">.</span><span class="na">listIterator</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span> <span class="n">itr</span><span class="o">.</span><span class="na">hasNext</span><span class="o">();)</span> <span class="o">{</span>
            <span class="k">final</span> <span class="kt">int</span> <span class="n">digit</span> <span class="o">=</span> <span class="n">itr</span><span class="o">.</span><span class="na">next</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">digit</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">digit</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">insertPoint</span> <span class="o">=</span> <span class="n">sb</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span> <span class="n">digit</span><span class="o">;</span>
                <span class="k">if</span> <span class="o">(</span><span class="sc">&#39;.&#39;</span> <span class="o">==</span> <span class="n">sb</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">insertPoint</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">insertPoint</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">insertPoint</span><span class="o">,</span> <span class="sc">&#39;{&#39;</span><span class="o">);</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="sc">&#39;}&#39;</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/200/addtag/" class="addtag" id="addtag_200">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/200/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/200/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_200"
  >-</span><span
  class="button yellow"
  id="rating_z_200"
  >0</span><span 
  class="button green"
  id="rating_p_200"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/197/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/200/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/200/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment198">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/96/" target="_top">ether</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/198/">#198</a>(<script language="JavaScript">print_time(new Date("2007/07/05 15:02 GMT"));</script><noscript>2007/07/05 15:02 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre>
#  pretty_fmt (decimal_of_frac 3 8);;
- : string = "0.375"
#  pretty_fmt (decimal_of_frac 3 14);;
- : string = "0.2{142857}"
# pretty_fmt (decimal_of_frac 355 113);;
- : string =
"3.{1415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168}"
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="kr">let</span> <span class="n">find_index_of</span> <span class="n">e</span> <span class="n">l</span> <span class="k">=</span>
  <span class="kr">try</span>
    <span class="kr">let</span> <span class="k">(</span><span class="n">i</span><span class="k">,</span> <span class="k">_)</span> <span class="k">=</span> <span class="n">List</span><span class="k">.</span><span class="n">findi</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">i&#39;</span> <span class="n">e&#39;</span> <span class="k">-&gt;</span> <span class="n">e</span> <span class="k">=</span> <span class="n">e&#39;</span><span class="k">)</span> <span class="n">l</span> <span class="kr">in</span> <span class="n">Some</span> <span class="n">i</span>
  <span class="kr">with</span> <span class="n">Not_found</span> <span class="k">-&gt;</span> <span class="n">None</span>

<span class="kr">let</span> <span class="n">decimal_of_frac</span> <span class="n">a</span> <span class="n">b</span> <span class="k">=</span> 
  <span class="kr">let</span> <span class="kr">rec</span> <span class="n">decimal_of_frac&#39;</span> <span class="n">a</span> <span class="n">quots</span> <span class="n">rems</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">quot</span> <span class="k">=</span> <span class="n">a</span> <span class="o">/</span> <span class="n">b</span> <span class="kr">and</span> <span class="n">rem</span> <span class="k">=</span> <span class="n">a</span> <span class="kr">mod</span> <span class="n">b</span> <span class="kr">in</span>
    <span class="kr">match</span> <span class="n">find_index_of</span> <span class="k">(</span><span class="n">a</span> <span class="kr">mod</span> <span class="n">b</span><span class="k">)</span> <span class="n">rems</span> <span class="kr">with</span>
    <span class="k">|</span> <span class="n">Some</span> <span class="n">i</span> <span class="k">-&gt;</span> <span class="k">(</span><span class="n">quot</span><span class="k">::</span><span class="n">quots</span><span class="k">,</span> <span class="n">i</span><span class="k">)</span>
    <span class="k">|</span> <span class="n">None</span>   <span class="k">-&gt;</span> <span class="n">decimal_of_frac&#39;</span> <span class="k">(</span><span class="n">rem</span> <span class="k">*</span> <span class="mi">10</span><span class="k">)</span> <span class="k">(</span><span class="n">quot</span><span class="k">::</span><span class="n">quots</span><span class="k">)</span> <span class="k">(</span><span class="n">rem</span><span class="k">::</span><span class="n">rems</span><span class="k">)</span>
  <span class="kr">in</span>
  <span class="n">decimal_of_frac&#39;</span> <span class="n">a</span> <span class="k">[]</span> <span class="k">[]</span>

<span class="kr">let</span> <span class="n">pretty_fmt</span> <span class="k">(</span><span class="n">numbers</span><span class="k">,</span> <span class="n">i</span><span class="k">)</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">loop</span> <span class="k">=</span> <span class="n">List</span><span class="k">.</span><span class="n">rev</span> <span class="k">(</span><span class="n">List</span><span class="k">.</span><span class="n">take</span> <span class="k">(</span><span class="n">i</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="n">numbers</span><span class="k">)</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">d</span><span class="k">::</span><span class="n">ds</span> <span class="k">=</span> <span class="n">List</span><span class="k">.</span><span class="n">rev</span> <span class="k">(</span><span class="n">List</span><span class="k">.</span><span class="n">drop</span> <span class="k">(</span><span class="n">i</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="n">numbers</span><span class="k">)</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">string_of_nums</span> <span class="n">ns</span> <span class="k">=</span> <span class="n">String</span><span class="k">.</span><span class="n">concat</span> <span class="s2">&quot;&quot;</span> <span class="k">(</span><span class="n">List</span><span class="k">.</span><span class="n">map</span> <span class="n">string_of_int</span> <span class="n">ns</span><span class="k">)</span> <span class="kr">in</span>
  <span class="k">(</span><span class="n">string_of_int</span> <span class="n">d</span><span class="k">)</span> <span class="o">^</span> <span class="s2">&quot;.&quot;</span> <span class="o">^</span> <span class="k">(</span><span class="n">string_of_nums</span> <span class="n">ds</span><span class="k">)</span> <span class="o">^</span> 
    <span class="kr">if</span> <span class="n">loop</span> <span class="k">=</span> <span class="k">[</span><span class="mi">0</span><span class="k">]</span> <span class="kr">then</span> <span class="s2">&quot;&quot;</span> <span class="kr">else</span> <span class="s2">&quot;{&quot;</span> <span class="o">^</span> <span class="k">(</span><span class="n">string_of_nums</span> <span class="n">loop</span><span class="k">)</span> <span class="o">^</span> <span class="s2">&quot;}&quot;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/198/addtag/" class="addtag" id="addtag_198">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/198/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/198/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_198"
  >-</span><span
  class="button yellow"
  id="rating_z_198"
  >0</span><span 
  class="button green"
  id="rating_p_198"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/198/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/198/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment199">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/96/" target="_top">ether</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/199/">#199</a>(<script language="JavaScript">print_time(new Date("2007/07/05 15:12 GMT"));</script><noscript>2007/07/05 15:12 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  コメント崩れちゃった。失礼しました。

あと List.findi を使うのに ExtLib を読んで open ExtList しないといけないのを書き忘れました。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/199/addtag/" class="addtag" id="addtag_199">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_199"
  >-</span><span
  class="button yellow"
  id="rating_z_199"
  >0</span><span 
  class="button green"
  id="rating_p_199"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/198/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/199/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/199/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/199/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment437">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/437/">#437</a>(<script language="JavaScript">print_time(new Date("2007/07/10 05:39 GMT"));</script><noscript>2007/07/10 05:39 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  コメント崩れを修正しました。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/437/addtag/" class="addtag" id="addtag_437">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_437"
  >-</span><span
  class="button yellow"
  id="rating_z_437"
  >0</span><span 
  class="button green"
  id="rating_p_437"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/199/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/437/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/437/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  

  

  

  
    





<div class="comment" id="comment203">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/103/" target="_top">mimizu</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/203/">#203</a>(<script language="JavaScript">print_time(new Date("2007/07/05 16:25 GMT"));</script><noscript>2007/07/05 16:25 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  こんなところでしょうか
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Fraction</span> <span class="o">{</span>
	
	<span class="k">public</span> <span class="k">static</span> <span class="n">String</span> <span class="n">toRepeatingDecimal</span><span class="o">(</span><span class="kt">int</span> <span class="n">numerator</span><span class="o">,</span> <span class="kt">int</span> <span class="n">denominator</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Map</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">remainders</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;();</span>
		<span class="kt">long</span> <span class="n">d</span><span class="o">,</span> <span class="n">q</span><span class="o">,</span> <span class="n">r</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="n">StringBuffer</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>
		<span class="n">d</span> <span class="o">=</span> <span class="n">denominator</span><span class="o">;</span>
		<span class="n">r</span> <span class="o">=</span> <span class="n">numerator</span><span class="o">;</span>
		<span class="n">q</span> <span class="o">=</span> <span class="n">r</span> <span class="o">/</span> <span class="n">d</span><span class="o">;</span>
		<span class="n">r</span> <span class="o">=</span> <span class="n">r</span> <span class="o">%</span> <span class="n">d</span><span class="o">;</span>
		<span class="n">remainders</span><span class="o">.</span><span class="na">put</span><span class="o">((</span><span class="kt">int</span><span class="o">)</span><span class="n">r</span><span class="o">,</span> <span class="n">i</span><span class="o">++);</span>
		<span class="n">r</span> <span class="o">*=</span> <span class="mi">10</span><span class="o">;</span>
		<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">q</span><span class="o">);</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">r</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="sc">&#39;.&#39;</span><span class="o">);</span>
			<span class="k">do</span> <span class="o">{</span>
				<span class="n">q</span> <span class="o">=</span> <span class="n">r</span> <span class="o">/</span> <span class="n">d</span><span class="o">;</span>
				<span class="n">r</span> <span class="o">=</span> <span class="n">r</span> <span class="o">%</span> <span class="n">d</span><span class="o">;</span>
				<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">q</span><span class="o">);</span>
				<span class="n">Integer</span> <span class="n">index</span> <span class="o">=</span> <span class="n">remainders</span><span class="o">.</span><span class="na">get</span><span class="o">((</span><span class="kt">int</span><span class="o">)</span><span class="n">r</span><span class="o">);</span>
				<span class="k">if</span> <span class="o">(</span><span class="n">index</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">sb</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="n">i</span> <span class="o">+</span> <span class="n">index</span><span class="o">,</span> <span class="sc">&#39;{&#39;</span><span class="o">);</span>
					<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="sc">&#39;}&#39;</span><span class="o">);</span>
					<span class="k">break</span><span class="o">;</span>
				<span class="o">}</span>
				<span class="n">remainders</span><span class="o">.</span><span class="na">put</span><span class="o">((</span><span class="kt">int</span><span class="o">)</span><span class="n">r</span><span class="o">,</span> <span class="n">i</span><span class="o">++);</span>
				<span class="n">r</span> <span class="o">*=</span> <span class="mi">10</span><span class="o">;</span>
			<span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">r</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/203/addtag/" class="addtag" id="addtag_203">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/Java1.6/">Java1.6</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/203/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/203/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_203"
  >-</span><span
  class="button yellow"
  id="rating_z_203"
  >0</span><span 
  class="button green"
  id="rating_p_203"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/203/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  
    





<div class="comment" id="comment206">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/30/" target="_top">tnk</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/206/">#206</a>(<script language="JavaScript">print_time(new Date("2007/07/05 17:12 GMT"));</script><noscript>2007/07/05 17:12 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>出題者が回答していいのかな・・・。
Java 1.5以降です。Auto Boxingって楽だなあ。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre><span class="k">public</span> <span class="k">static</span> <span class="n">String</span> <span class="n">getDecimal</span><span class="o">(</span><span class="kt">long</span> <span class="n">a</span><span class="o">,</span> <span class="kt">long</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Vector</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">&gt;</span> <span class="n">nums</span> <span class="o">=</span> <span class="k">new</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Vector</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">&gt;();</span>
    <span class="n">StringBuffer</span> <span class="n">res</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">(</span><span class="s">&quot;0.&quot;</span><span class="o">);</span>
    <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">nums</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
        <span class="n">a</span> <span class="o">*=</span> <span class="mi">10</span><span class="o">;</span>
        <span class="n">res</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="o">);</span>
        <span class="n">a</span> <span class="o">%=</span> <span class="n">b</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">res</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">nums</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">a</span><span class="o">))</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">off</span> <span class="o">=</span> <span class="n">nums</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">a</span><span class="o">)</span> <span class="o">+</span> <span class="mi">2</span><span class="o">;</span>
            <span class="k">return</span> <span class="n">res</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="n">off</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;{&quot;</span> <span class="o">+</span> <span class="n">res</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">off</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;}&quot;</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/206/addtag/" class="addtag" id="addtag_206">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/206/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/206/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_206"
  >-</span><span
  class="button yellow"
  id="rating_z_206"
  >0</span><span 
  class="button green"
  id="rating_p_206"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/206/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment211">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/211/">#211</a>(<script language="JavaScript">print_time(new Date("2007/07/06 00:29 GMT"));</script><noscript>2007/07/06 00:29 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Cでがんばってみたあんなに短くなるほかの言語がうらやましい。
もっと効率のいい書き方ないかなぁ。
循環小数の判定がむずかしい。。。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &lt;assert.h&gt;</span>

<span class="kt">int</span> <span class="nf">cal</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">ans</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufsize</span><span class="p">,</span> <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="k">const</span> <span class="n">head</span>   <span class="o">=</span> <span class="n">ans</span><span class="p">;</span>
    <span class="kt">char</span>       <span class="o">*</span><span class="n">jyunkan_start</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>  <span class="c">// 循環の始点</span>
    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">match_start</span>   <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span> <span class="c">// </span>
    <span class="n">size_t</span>      <span class="n">match_count</span>   <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="n">memset</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="sc">&#39;\0&#39;</span><span class="p">,</span> <span class="n">bufsize</span><span class="p">);</span>

    <span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span> <span class="o">%</span> <span class="n">b</span><span class="p">)</span> <span class="o">*</span> <span class="mi">10</span><span class="p">;</span> 
    <span class="k">for</span><span class="p">(</span> <span class="n">size_t</span> <span class="n">n</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">n</span><span class="o">&lt;</span><span class="n">bufsize</span><span class="p">;</span> <span class="n">n</span> <span class="o">++</span><span class="p">,</span> <span class="n">ans</span> <span class="o">++</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="c">// 計算</span>
        <span class="o">*</span><span class="n">ans</span> <span class="o">=</span> <span class="sc">&#39;0&#39;</span> <span class="o">+</span> <span class="n">a</span> <span class="o">/</span> <span class="n">b</span><span class="p">;</span>
        <span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span> <span class="o">%</span> <span class="n">b</span><span class="p">)</span> <span class="o">*</span> <span class="mi">10</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">a</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span> <span class="k">break</span><span class="p">;</span>

        <span class="c">/**********************/</span>
        <span class="c">/* 循環小数のチェック */</span>
        <span class="c">/**********************/</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">match_start</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span> <span class="n">jyunkan_start</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="p">)</span>
            <span class="p">{</span>
                <span class="n">jyunkan_start</span> <span class="o">=</span> <span class="n">ans</span><span class="p">;</span>
                <span class="k">continue</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">jyunkan_start</span> <span class="o">==</span> <span class="o">*</span><span class="n">ans</span> <span class="p">)</span>
            <span class="p">{</span>
                <span class="c">// 循環の開始位置かもしれない</span>
                <span class="n">match_start</span> <span class="o">=</span> <span class="n">ans</span><span class="p">;</span>
                <span class="n">match_count</span> <span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="c">// 循環の可能性あり</span>
            <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="p">(</span><span class="n">jyunkan_start</span><span class="o">+</span><span class="n">match_count</span><span class="p">)</span> <span class="o">==</span> <span class="o">*</span><span class="n">ans</span> <span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">size_t</span><span class="p">)(</span><span class="n">match_start</span><span class="o">-</span><span class="n">jyunkan_start</span><span class="p">)</span><span class="o">==</span><span class="n">match_count</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="c">// ロジック上開始位置がずれるので巻き戻し</span>
                    <span class="k">while</span><span class="p">(</span> <span class="n">head</span> <span class="o">!=</span> <span class="n">jyunkan_start</span> <span class="p">)</span>
                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="p">(</span><span class="n">jyunkan_start</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="o">*</span><span class="p">(</span><span class="n">ans</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
                        <span class="p">{</span>
                            <span class="n">jyunkan_start</span> <span class="o">--</span><span class="p">;</span>
                            <span class="n">ans</span> <span class="o">--</span><span class="p">;</span>
                        <span class="p">}</span>
                        <span class="k">else</span> 
                        <span class="p">{</span>
                            <span class="k">break</span><span class="p">;</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                    <span class="c">// 循環部分を {}</span>
                    <span class="n">memmove</span><span class="p">(</span><span class="n">jyunkan_start</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">jyunkan_start</span><span class="p">,</span> <span class="n">match_count</span><span class="p">);</span>
                    <span class="n">jyunkan_start</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;{&#39;</span><span class="p">;</span>
                    <span class="n">jyunkan_start</span><span class="p">[</span><span class="n">match_count</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;}&#39;</span><span class="p">;</span>
                    <span class="n">jyunkan_start</span><span class="p">[</span><span class="n">match_count</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="n">match_count</span> <span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="c">// はずれ</span>
                <span class="n">jyunkan_start</span> <span class="o">++</span><span class="p">;</span>
                <span class="n">match_start</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
                <span class="n">match_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="kt">char</span>   <span class="n">ans</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span> <span class="c">// 循環する小数部の倍以上必要</span>
    <span class="k">struct</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span>
        <span class="kt">char</span> <span class="n">ans</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
    <span class="p">}</span> 
    <span class="n">test</span><span class="p">[]</span> <span class="o">=</span> 
    <span class="p">{</span>
        <span class="p">{</span>  <span class="mi">1</span><span class="p">,</span>  <span class="mi">2</span><span class="p">,</span> <span class="s">&quot;5&quot;</span> <span class="p">},</span>
        <span class="p">{</span>  <span class="mi">1</span><span class="p">,</span>  <span class="mi">3</span><span class="p">,</span> <span class="s">&quot;{3}&quot;</span> <span class="p">},</span>
        <span class="p">{</span>  <span class="mi">1</span><span class="p">,</span>  <span class="mi">7</span><span class="p">,</span> <span class="s">&quot;{142857}&quot;</span> <span class="p">},</span>
        <span class="p">{</span>  <span class="mi">3</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="s">&quot;2{142857}&quot;</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="s">&quot;{9803921568627450}&quot;</span> <span class="p">},</span>
        <span class="p">{</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">191</span><span class="p">,</span><span class="s">&quot;068062827225130890052356020942408376963350785340314136125654450&quot;</span> <span class="p">}</span>
    <span class="p">};</span>

    <span class="k">for</span><span class="p">(</span> <span class="n">size_t</span> <span class="n">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">n</span><span class="o">&lt;</span><span class="k">sizeof</span><span class="p">(</span><span class="n">test</span><span class="p">)</span><span class="o">/</span><span class="k">sizeof</span><span class="p">(</span><span class="o">*</span><span class="n">test</span><span class="p">);</span> <span class="n">n</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cal</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ans</span><span class="p">),</span> <span class="n">test</span><span class="p">[</span><span class="n">n</span><span class="p">].</span><span class="n">a</span><span class="p">,</span> <span class="n">test</span><span class="p">[</span><span class="n">n</span><span class="p">].</span><span class="n">b</span><span class="p">);</span> 
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;ans=0.%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">ans</span><span class="p">);</span>
        <span class="n">assert</span><span class="p">(</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="n">test</span><span class="p">[</span><span class="n">n</span><span class="p">].</span><span class="n">ans</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/211/addtag/" class="addtag" id="addtag_211">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/211/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/211/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_211"
  >-</span><span
  class="button yellow"
  id="rating_z_211"
  >0</span><span 
  class="button green"
  id="rating_p_211"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/211/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/211/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment246">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/246/">#246</a>(<script language="JavaScript">print_time(new Date("2007/07/06 10:38 GMT"));</script><noscript>2007/07/06 10:38 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>別にいいやと放置していたらバグだったorz</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre><span class="o">-</span> <span class="mi">36</span><span class="o">:</span> <span class="n">match_count</span> <span class="o">++</span><span class="p">;</span>
<span class="o">+</span> <span class="mi">36</span><span class="o">:</span> <span class="n">match_count</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="o">-</span> <span class="mi">71</span><span class="o">:</span> <span class="n">jyunkan_start</span> <span class="o">++</span><span class="p">;</span>
<span class="o">+</span> <span class="mi">71</span><span class="o">:</span> <span class="n">jyunkan_start</span> <span class="o">=</span> <span class="n">ans</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/246/addtag/" class="addtag" id="addtag_246">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/246/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/246/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_246"
  >-</span><span
  class="button yellow"
  id="rating_z_246"
  >0</span><span 
  class="button green"
  id="rating_p_246"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/211/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/246/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/246/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment213">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/213/">#213</a>(<script language="JavaScript">print_time(new Date("2007/07/06 01:48 GMT"));</script><noscript>2007/07/06 01:48 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  とりあえず書いてみた。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>

<span class="kt">char</span><span class="o">*</span> <span class="n">flac2decimals</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">,</span><span class="kt">char</span><span class="o">*</span> <span class="n">ans</span><span class="p">){</span>
	<span class="kt">char</span> <span class="n">point</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>	<span class="c">//小数点以下</span>
	<span class="kt">int</span> <span class="n">num</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>		<span class="c">//循環チェック</span>
	<span class="kt">int</span> <span class="n">pos</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
	
	<span class="n">sprintf</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
	
	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">%=</span><span class="n">b</span><span class="p">){</span>
		<span class="n">strcat</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="s">&quot;.&quot;</span><span class="p">);</span>
		<span class="n">pos</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
		<span class="k">do</span><span class="p">{</span>
			<span class="n">a</span><span class="o">*=</span><span class="mi">10</span><span class="p">;</span>
			<span class="n">num</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span><span class="o">=</span><span class="n">a</span><span class="p">;</span>
			<span class="c">//循環チェック</span>
			<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">pos</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
				<span class="c">//循環していたら</span>
				<span class="k">if</span><span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="n">a</span><span class="p">){</span>
					<span class="c">//循環部以前の処理</span>
					<span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="n">strncat</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="n">point</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
					<span class="c">//循環部の処理</span>
					<span class="n">strcat</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
					<span class="n">strcat</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="n">point</span><span class="o">+</span><span class="n">i</span><span class="p">);</span>
					<span class="n">strcat</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
					<span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
				<span class="p">}</span>
			<span class="p">}</span>
			<span class="n">point</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span><span class="o">=</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="o">+</span><span class="sc">&#39;0&#39;</span><span class="p">;</span>
			<span class="n">point</span><span class="p">[</span><span class="n">pos</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="sc">&#39;\0&#39;</span><span class="p">;</span>
			<span class="n">pos</span><span class="o">++</span><span class="p">;</span>
		<span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">a</span><span class="o">%=</span><span class="n">b</span><span class="p">);</span>
		<span class="n">strcat</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="n">point</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
	<span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;9/ 3 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span><span class="n">buf</span><span class="p">));</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;3/ 8 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span><span class="n">buf</span><span class="p">));</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;3/14 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="n">buf</span><span class="p">));</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;1/ 3 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span><span class="n">buf</span><span class="p">));</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;1/11 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="n">buf</span><span class="p">));</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/213/addtag/" class="addtag" id="addtag_213">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/213/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/213/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_213"
  >-</span><span
  class="button yellow"
  id="rating_z_213"
  >0</span><span 
  class="button green"
  id="rating_p_213"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/213/">
    2
    replies
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/213/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment217">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/138/" target="_top">yuki</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/217/">#217</a>(<script language="JavaScript">print_time(new Date("2007/07/06 05:13 GMT"));</script><noscript>2007/07/06 05:13 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  書いてみたけど、ほとんど同じくなったので投稿は省略します。
でもこのままだと、31/701とか101/1999とかが通りません。
最悪ケースだと、分母bの長さ分＋ÃÂ±の配列が必要なのかな？
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/217/addtag/" class="addtag" id="addtag_217">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_217"
  >-</span><span
  class="button yellow"
  id="rating_z_217"
  >0</span><span 
  class="button green"
  id="rating_p_217"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/213/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/217/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/217/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/217/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment223">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/223/">#223</a>(<script language="JavaScript">print_time(new Date("2007/07/06 07:35 GMT"));</script><noscript>2007/07/06 07:35 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  そうですね。このままではバッファが足りませんでした。
+ÃÂ±はいくつなんだろ？やっぱり動的に配列確保しかないか。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/223/addtag/" class="addtag" id="addtag_223">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_223"
  >-</span><span
  class="button yellow"
  id="rating_z_223"
  >0</span><span 
  class="button green"
  id="rating_p_223"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/217/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/223/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/223/">
    2
    replies
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/223/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment238">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/130/" target="_top">rucker</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/238/">#238</a>(<script language="JavaScript">print_time(new Date("2007/07/06 09:57 GMT"));</script><noscript>2007/07/06 09:57 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>出力バッファを動的に確保してみた。
循環チェックのバッファはb-1あればOK</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>

<span class="kt">char</span><span class="o">*</span> <span class="n">flac2decimals</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">){</span>
	<span class="kt">int</span> <span class="n">bufsize</span><span class="o">=</span><span class="mi">256</span><span class="p">;</span>
	<span class="kt">char</span> <span class="o">*</span><span class="n">ans</span><span class="o">=</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">bufsize</span><span class="o">+</span><span class="mi">3</span><span class="p">);</span>	<span class="c">//出力(+3は{}とターミネータの分)</span>

	<span class="n">snprintf</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="n">bufsize</span><span class="p">,</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>

	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">%=</span><span class="n">b</span><span class="p">){</span>
		<span class="kt">int</span> <span class="o">*</span><span class="n">num</span><span class="o">=</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span><span class="n">calloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">),</span><span class="n">b</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>		<span class="c">//循環チェック</span>
		<span class="kt">int</span> <span class="n">pos</span><span class="o">=</span><span class="n">strchr</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="sc">&#39;\0&#39;</span><span class="p">)</span><span class="o">-</span><span class="n">ans</span><span class="p">;</span>
		<span class="n">ans</span><span class="p">[</span><span class="n">pos</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="sc">&#39;.&#39;</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(;;){</span>
			<span class="n">num</span><span class="p">[</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="n">pos</span><span class="p">;</span>
			<span class="n">a</span><span class="o">*=</span><span class="mi">10</span><span class="p">;</span>
			<span class="n">ans</span><span class="p">[</span><span class="n">pos</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="o">+</span><span class="sc">&#39;0&#39;</span><span class="p">;</span>
			<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">a</span><span class="o">%=</span><span class="n">b</span><span class="p">))</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">if</span><span class="p">(</span><span class="n">num</span><span class="p">[</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
			<span class="p">{</span>	<span class="c">//循環していたら</span>
				<span class="n">memmove</span><span class="p">(</span><span class="n">ans</span><span class="o">+</span><span class="n">num</span><span class="p">[</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">ans</span><span class="o">+</span><span class="n">num</span><span class="p">[</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="n">pos</span><span class="o">-</span><span class="n">num</span><span class="p">[</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span>
				<span class="n">ans</span><span class="p">[</span><span class="n">num</span><span class="p">[</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">]]</span><span class="o">=</span><span class="sc">&#39;{&#39;</span><span class="p">;</span>
				<span class="o">++</span><span class="n">pos</span><span class="p">;</span>
				<span class="n">ans</span><span class="p">[</span><span class="n">pos</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="sc">&#39;}&#39;</span><span class="p">;</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="p">}</span>
			<span class="k">if</span><span class="p">(</span><span class="n">pos</span><span class="o">&gt;=</span><span class="n">bufsize</span><span class="p">)</span>
				<span class="n">ans</span><span class="o">=</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">realloc</span><span class="p">(</span><span class="n">ans</span><span class="p">,(</span><span class="n">bufsize</span><span class="o">+=</span><span class="mi">256</span><span class="p">)</span><span class="o">+</span><span class="mi">3</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="n">ans</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span><span class="o">=</span><span class="sc">&#39;\0&#39;</span><span class="p">;</span>
		<span class="n">free</span><span class="p">(</span><span class="n">num</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
	<span class="kt">char</span> <span class="o">*</span><span class="n">ans</span><span class="p">;</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot; 9/ 3 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="o">=</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="mi">3</span><span class="p">));</span> <span class="n">free</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot; 3/ 8 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="o">=</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">));</span> <span class="n">free</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot; 3/14 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="o">=</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">14</span><span class="p">));</span> <span class="n">free</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot; 1/ 3 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="o">=</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">));</span> <span class="n">free</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot; 1/11 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="o">=</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">11</span><span class="p">));</span> <span class="n">free</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;10/17 = %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="o">=</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">17</span><span class="p">));</span> <span class="n">free</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;31/701= %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="o">=</span><span class="n">flac2decimals</span><span class="p">(</span><span class="mi">31</span><span class="p">,</span><span class="mi">701</span><span class="p">));</span> <span class="n">free</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/238/addtag/" class="addtag" id="addtag_238">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/238/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/238/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_238"
  >-</span><span
  class="button yellow"
  id="rating_z_238"
  >0</span><span 
  class="button green"
  id="rating_p_238"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/223/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/238/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/238/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment444">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/444/">#444</a>(<script language="JavaScript">print_time(new Date("2007/07/10 07:02 GMT"));</script><noscript>2007/07/10 07:02 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  蛇足的に大量メモリ不要版を書いてみた。結果は標準出力に変更。
実際は循環節の終了点が分かるのでそのサイズで文字列用バッファを取ればいいんだろうけど。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>

<span class="kt">void</span> <span class="n">put_decimals2</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">){</span>
	<span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">loop_start_num</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">mod</span><span class="p">;</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d/%d=%d&quot;</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">){</span>
	<span class="c">//割り切れない場合、小数点以下を表示</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">);</span>

	<span class="c">//循環節の開始位置を探す。</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="c">//開始位置の仮定</span>
		<span class="n">loop_start_num</span><span class="o">=</span><span class="n">mod</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">b</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
			<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">j</span><span class="o">+</span><span class="n">b</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
				<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
				<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
				<span class="c">//循環しないなら表示して終了</span>
					<span class="n">mod</span><span class="o">=</span><span class="n">a</span><span class="p">;</span>
					<span class="k">while</span><span class="p">(</span><span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">){</span>
						<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
					<span class="p">}</span>
					<span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
					<span class="k">return</span><span class="p">;</span>
				<span class="p">}</span>
				<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="o">==</span><span class="n">loop_start_num</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>	<span class="c">//終端を見つけたら終わり</span>
			<span class="p">}</span>
			<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="o">==</span><span class="n">loop_start_num</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>	<span class="c">//終端を見つけたら終わり</span>
			
			<span class="c">//開始位置の仮定を一桁移す。</span>
			<span class="n">loop_start_num</span><span class="o">=</span><span class="p">(</span><span class="n">loop_start_num</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="p">}</span>

	<span class="c">//循環ありの場合の表示</span>
		<span class="n">mod</span><span class="o">=</span><span class="n">a</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">j</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
			<span class="c">//循環節までを表示</span>
			<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
			<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
		<span class="c">//循環節を表示</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="k">do</span><span class="p">{</span>
			<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
			<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">mod</span><span class="o">!=</span><span class="n">loop_start_num</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">&quot;}</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
	<span class="n">put_decimals2</span><span class="p">(</span>  <span class="mi">3</span><span class="p">,</span>    <span class="mi">8</span><span class="p">);</span>
	<span class="n">put_decimals2</span><span class="p">(</span>  <span class="mi">3</span><span class="p">,</span>   <span class="mi">14</span><span class="p">);</span>
	<span class="n">put_decimals2</span><span class="p">(</span>  <span class="mi">1</span><span class="p">,</span>    <span class="mi">3</span><span class="p">);</span>
	<span class="n">put_decimals2</span><span class="p">(</span>  <span class="mi">1</span><span class="p">,</span>   <span class="mi">11</span><span class="p">);</span>
	<span class="n">put_decimals2</span><span class="p">(</span> <span class="mi">31</span><span class="p">,</span>  <span class="mi">701</span><span class="p">);</span>
	<span class="n">put_decimals2</span><span class="p">(</span><span class="mi">101</span><span class="p">,</span> <span class="mi">1999</span><span class="p">);</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/444/addtag/" class="addtag" id="addtag_444">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/444/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/444/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_444"
  >-</span><span
  class="button yellow"
  id="rating_z_444"
  >0</span><span 
  class="button green"
  id="rating_p_444"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/223/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/444/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/444/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/444/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment446">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/446/">#446</a>(<script language="JavaScript">print_time(new Date("2007/07/10 07:23 GMT"));</script><noscript>2007/07/10 07:23 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  i、j、loop_start_num、modはlong longだな。

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/446/addtag/" class="addtag" id="addtag_446">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_446"
  >-</span><span
  class="button yellow"
  id="rating_z_446"
  >0</span><span 
  class="button green"
  id="rating_p_446"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/444/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/446/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/446/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


    </div>
  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment248">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/248/">#248</a>(<script language="JavaScript">print_time(new Date("2007/07/06 10:43 GMT"));</script><noscript>2007/07/06 10:43 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  そうか。商じゃなくて剰余で循環小数かをチェックすれば良かったのか。。。。

循環小数は 分母に指定した値の既約公数分まで増えるらしい(by ウィキペディア#循環小数)ので固定で取って制限かけちゃうのが現実的だと思います。

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/248/addtag/" class="addtag" id="addtag_248">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_248"
  >-</span><span
  class="button yellow"
  id="rating_z_248"
  >0</span><span 
  class="button green"
  id="rating_p_248"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/213/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/248/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/248/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/248/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment252">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/138/" target="_top">yuki</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/252/">#252</a>(<script language="JavaScript">print_time(new Date("2007/07/06 11:22 GMT"));</script><noscript>2007/07/06 11:22 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  メモリ節約という事でビットバッファ使ってみました。
a（とc）を64bitにしてバッファを256MBにすれば仕様が満たせますね。

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45</pre></td><td class="code"><div class="highlight"><pre><span class="kt">void</span> <span class="nf">frac_to_decimal</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">ans</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">c</span><span class="p">;</span>
	<span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">remain</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>
	<span class="kt">int</span> <span class="n">clip</span><span class="p">;</span>
	<span class="kt">char</span> <span class="n">digit</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>

	<span class="n">sprintf</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>

	<span class="n">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">;</span>
	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">c</span> <span class="o">=</span> <span class="n">a</span><span class="p">;</span>
		<span class="n">strcat</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="s">&quot;.&quot;</span><span class="p">);</span>

		<span class="k">while</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">remain</span><span class="p">[</span><span class="n">a</span><span class="o">/</span><span class="mi">8</span><span class="p">]</span> <span class="o">|=</span> <span class="mi">1</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="mi">8</span><span class="p">);</span>
			<span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span><span class="o">%</span><span class="n">b</span><span class="p">;</span>
			<span class="k">if</span><span class="p">(</span> <span class="n">remain</span><span class="p">[</span><span class="n">a</span><span class="o">/</span><span class="mi">8</span><span class="p">]</span> <span class="o">&amp;</span> <span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="mi">8</span><span class="p">))</span> <span class="p">)</span> <span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>

		<span class="n">digit</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="n">clip</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="k">while</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span><span class="p">(</span><span class="n">a</span> <span class="o">&amp;&amp;</span> <span class="n">a</span><span class="o">==</span><span class="n">c</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="k">if</span><span class="p">(</span><span class="n">clip</span><span class="p">)</span> <span class="p">{</span>
					<span class="n">strcat</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="s">&quot;{&quot;</span><span class="p">);</span>
					<span class="n">clip</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
				<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
					<span class="n">strcat</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="s">&quot;}&quot;</span><span class="p">);</span>
					<span class="k">return</span><span class="p">;</span>
				<span class="p">}</span>
			<span class="p">}</span>

			<span class="n">c</span> <span class="o">=</span> <span class="n">c</span><span class="o">*</span><span class="mi">10</span>
			<span class="n">digit</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;0&#39;</span> <span class="o">+</span> <span class="n">c</span><span class="o">/</span><span class="n">b</span><span class="p">;</span>
			<span class="n">strcat</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="n">digit</span><span class="p">);</span>
			<span class="n">c</span> <span class="o">=</span> <span class="n">c</span><span class="o">%</span><span class="n">b</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">return</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/252/addtag/" class="addtag" id="addtag_252">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/252/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/252/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_252"
  >-</span><span
  class="button yellow"
  id="rating_z_252"
  >0</span><span 
  class="button green"
  id="rating_p_252"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/248/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/252/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/252/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/252/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment299">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/138/" target="_top">yuki</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/299/">#299</a>(<script language="JavaScript">print_time(new Date("2007/07/07 08:37 GMT"));</script><noscript>2007/07/07 08:37 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  ちょっと解説。
循環する始点と終点では、剰余が同じになる事を利用して、前段のwhileループで剰余aを見つけだし（a=0の場合は割切れる）、後段のwhileで表示を行っています。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/299/addtag/" class="addtag" id="addtag_299">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_299"
  >-</span><span
  class="button yellow"
  id="rating_z_299"
  >0</span><span 
  class="button green"
  id="rating_p_299"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/252/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/299/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/299/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment214">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/214/">#214</a>(<script language="JavaScript">print_time(new Date("2007/07/06 02:48 GMT"));</script><noscript>2007/07/06 02:48 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>naruse さんの Ruby 版のまんまパクリですが(^_^;)。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre>| a b result memo index |
a := 3.
b := 14.
result := &#39;0.&#39;.
memo := OrderedCollection new.
[a isZero] whileFalse: [
   memo add: a.
   a := a * 10.
   result := result, (a // b) printString.
   a := a \\ b.
   (index := memo indexOf: a) &gt; 0
      ifTrue: [^(result first: index + 1), &#39;{&#39;, (result allButFirst: index + 1), &#39;}&#39;]].
^result

&quot;=&gt; &#39;0.2{142857}&#39; &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/214/addtag/" class="addtag" id="addtag_214">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/214/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/214/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_214"
  >-</span><span
  class="button yellow"
  id="rating_z_214"
  >0</span><span 
  class="button green"
  id="rating_p_214"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/214/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  

  

  

  

  

  
    





<div class="comment" id="comment265">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/124/" target="_top">tsekine</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/265/">#265</a>(<script language="JavaScript">print_time(new Date("2007/07/06 14:13 GMT"));</script><noscript>2007/07/06 14:13 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Bash でも、結構短く書けました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre>print_frac <span class="o">()</span> <span class="o">{</span>
  <span class="nb">local</span> -i <span class="nv">rem</span><span class="o">=</span><span class="s2">&quot;$1&quot;</span>
  <span class="nb">local</span> -i -r <span class="nv">b</span><span class="o">=</span><span class="nv">$2</span>
  <span class="nb">local</span> -i -a rem_hist
  <span class="nb">local</span> -i <span class="nv">i</span><span class="o">=</span>0
  <span class="nb">local </span><span class="nv">s</span><span class="o">=</span><span class="s2">&quot;0.&quot;</span>
  <span class="k">while</span> <span class="o">[</span> <span class="nv">$rem</span> -ne <span class="m">0</span> <span class="o">]</span>; <span class="k">do</span>
<span class="k">    </span><span class="nv">s</span><span class="o">=</span><span class="s2">&quot;$s$((rem * 10 / b))&quot;</span>
    rem_hist<span class="o">[</span>rem<span class="o">]=</span><span class="s2">&quot;i++&quot;</span>
    <span class="nv">rem</span><span class="o">=</span><span class="s2">&quot;rem * 10 % b&quot;</span>
    <span class="nb">let</span> <span class="s2">&quot;rem == 0&quot;</span> &amp;&amp; <span class="nb">break</span>
<span class="nb">    </span><span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;&quot;</span> !<span class="o">=</span> <span class="s2">&quot;${rem_hist[rem]}&quot;</span> <span class="o">]</span>; <span class="k">then</span>
<span class="k">      </span><span class="nv">s</span><span class="o">=</span><span class="s2">&quot;${s:0:2+rem_hist[rem]}{${s:2+rem_hist[rem]}}&quot;</span>
      <span class="nb">break</span>
<span class="nb">    </span><span class="k">fi</span>
<span class="k">  done</span>
<span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;$s&quot;</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/265/addtag/" class="addtag" id="addtag_265">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/265/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/265/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_265"
  >-</span><span
  class="button yellow"
  id="rating_z_265"
  >0</span><span 
  class="button green"
  id="rating_p_265"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/265/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment294">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/155/" target="_top">nkmrtks</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/294/">#294</a>(<script language="JavaScript">print_time(new Date("2007/07/07 04:21 GMT"));</script><noscript>2007/07/07 04:21 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>循環無し：a/b = x/(10^r)
循環あり：a/b = x/(10^r * 9*ÃÂ£(10^i)) {i=0～s}
a,b,x,r,sは全て整数
として表すことできる。

上記の前提で愚直に数学的アプローチ。
少数を扱わない（truncateとか使わない）ために馬鹿なことしてます:p
分母が大きいと大抵stack overflow</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59</pre></td><td class="code"><div class="highlight"><pre>(defun div (aa bb)
  (let ((a (/ aa (gcd aa bb)))
        (b (/ bb (gcd aa bb))))
    (labels
        ((pow (x y)
           (labels
               ((pow1 (num x y)
                  (if (&lt;= y 0)
                      num
                    (pow1 (* num x) x (1- y)))))
             (pow1 1 x y)))
         (divd (n d)
           (case n
             (0 (values 0 0))
             (t (labels
                    ((divn1 (n d r)
                       (if (= (mod n d) 0)
                           (divn1 (/ n d) d (1+ r))
                         (values n r))))
                  (divn1 n d 0)))))
         (div9 (n)
           (case n
             ((list 0 1) (values 0 0))
             (t (labels
                    ((div9d (n rec dd fig)
                       (labels
                           ((lsd9 (n dd)
                              (labels
                                  ((lsd9-d (n m d)
                                     (if (= (mod (* n m) 10) d)
                                         m
                                       (lsd9-d n (1+ m) d))))
                                (lsd9-d (mod n 10) 0 (- 9 (mod dd 10))))))
                         (when (and rec (= dd 0))
                           (when (= (car rec) 0) (pop rec) (decf fig))
                           (return-from div9d
                             (values (dolist (x (cdr rec) (car rec))
                                       (setf (car rec) (+ (* (car rec) 10) x)))
                                     fig)))
                         (push (lsd9 n dd) rec)
                         (div9d n rec (/ (- (+ dd (* n (car rec))) (mod (+ dd (* n (car rec))) 10)) 10) (1+ fig)))))
                  (multiple-value-bind (rec s) (div9d n nil 0 0)
                    (values (* rec n) s)))))))
      (multiple-value-bind (n r2) (divd b 2)
        (multiple-value-bind (n r5) (divd n 5)
          (multiple-value-bind (dd s) (div9 n)
            (let* ((r (max r2 r5))
                   (x (/ (* a (if (= s 0) 1 dd) (pow 10 r)) b)))
              (if (= s 0)
                  (if (= r 0)
                      (format nil &quot;~D&quot; x)
                    (format nil (format nil &quot;~D.~~~D,&#39;0D&quot; (/ (- x (mod x (pow 10 r))) (pow 10 r)) r) (mod x (pow 10 r))))
                (let* ((rec (mod x dd))
                       (fix (/ (- x rec) dd)))
                  (format nil &quot;~A~A&quot;
                          (if (= r 0)
                              (format nil &quot;~D.&quot; fix)
                            (format nil (format nil &quot;~D.~~~D,&#39;0D&quot; (/ (- fix (mod fix (pow 10 r))) (pow 10 r)) r) (mod fix (pow 10 r))))
                          (format nil (format nil &quot;{~~~D,&#39;0D}&quot; s) rec)))))))))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/294/addtag/" class="addtag" id="addtag_294">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/294/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/294/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_294"
  >-</span><span
  class="button yellow"
  id="rating_z_294"
  >0</span><span 
  class="button green"
  id="rating_p_294"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/294/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment312">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/312/">#312</a>(<script language="JavaScript">print_time(new Date("2007/07/07 12:40 GMT"));</script><noscript>2007/07/07 12:40 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>これ条件が厳しすぎませんか？
循環部が何億桁とかどう処理すればよいのやら</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/312/addtag/" class="addtag" id="addtag_312">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_312"
  >-</span><span
  class="button yellow"
  id="rating_z_312"
  >0</span><span 
  class="button green"
  id="rating_p_312"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/312/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/312/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment379">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/138/" target="_top">yuki</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/379/">#379</a>(<script language="JavaScript">print_time(new Date("2007/07/09 04:58 GMT"));</script><noscript>2007/07/09 04:58 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  完全回答編：仕様を満たすように組んでみました。
約21億桁の文字列をメモリ上に持つのが事実上不可能なので、若干仕様を拡大解釈して結果を標準出力にしています

最大で約256MBのメモリを消費します。
仕様内での最長の循環小数は分母(b)が2147483639の時で、
結果をファイルにリダイレクトさせて約30分で約2GBのファイルができあがります。（Pentium4-3GHzマシン使用。前段に約9分後段に約20分かかります）

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &lt;math.h&gt;</span>


<span class="kt">int</span> <span class="nf">mod10</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>	/* (a*10)%b */
<span class="p">{</span>
	<span class="k">return</span><span class="p">(</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">fmod</span><span class="p">(</span> <span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">a</span> <span class="o">*</span><span class="mi">10</span><span class="p">,</span> <span class="kt">double</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="p">)</span> <span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">div10</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>	/* (a*10)/b */
<span class="p">{</span>
	<span class="k">return</span><span class="p">(</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">floor</span><span class="p">(</span> <span class="p">((</span><span class="kt">double</span><span class="p">)</span><span class="n">a</span> <span class="o">*</span><span class="mi">10</span><span class="p">)</span> <span class="o">/</span> <span class="kt">double</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="p">)</span> <span class="p">);</span>
<span class="p">}</span>


<span class="kt">int</span> <span class="nf">f2d_mod</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">remain</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">remain</span><span class="p">[</span><span class="n">a</span><span class="o">/</span><span class="mi">8</span><span class="p">]</span> <span class="o">|=</span> <span class="mi">1</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="mi">8</span><span class="p">);</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">mod10</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
		<span class="k">if</span><span class="p">(</span> <span class="n">remain</span><span class="p">[</span><span class="n">a</span><span class="o">/</span><span class="mi">8</span><span class="p">]</span> <span class="o">&amp;</span> <span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="mi">8</span><span class="p">))</span> <span class="p">)</span> <span class="k">break</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="n">a</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">f2d</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">,</span> <span class="kt">int</span> <span class="n">mod</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">clip</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>

	<span class="n">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">;</span>
	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">);</span>

		<span class="k">while</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span><span class="p">(</span><span class="n">mod</span> <span class="o">&amp;&amp;</span> <span class="n">a</span><span class="o">==</span><span class="n">mod</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="k">if</span><span class="p">(</span><span class="n">clip</span><span class="p">)</span> <span class="p">{</span>
					<span class="n">printf</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
					<span class="k">return</span><span class="p">;</span>
				<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
					<span class="n">printf</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
					<span class="n">clip</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
				<span class="p">}</span>
			<span class="p">}</span>

			<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="n">div10</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">));</span>
			<span class="n">a</span> <span class="o">=</span> <span class="n">mod10</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
	<span class="k">return</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">frac_to_decimal</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">remain</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">mod</span><span class="p">;</span>

	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">&lt;</span><span class="mi">0</span> <span class="o">||</span> <span class="n">b</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>

	<span class="n">remain</span> <span class="o">=</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">b</span><span class="o">/</span><span class="mi">8</span> <span class="o">+</span><span class="mi">1</span><span class="p">);</span>
	<span class="n">memset</span><span class="p">(</span><span class="n">remain</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span><span class="p">)</span> <span class="o">*</span><span class="p">(</span><span class="n">b</span><span class="o">/</span><span class="mi">8</span> <span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="p">);</span>
	<span class="n">mod</span> <span class="o">=</span> <span class="n">f2d_mod</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">remain</span><span class="p">);</span>
	<span class="n">free</span><span class="p">(</span><span class="n">remain</span><span class="p">);</span>
	<span class="n">f2d</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">mod</span><span class="p">);</span>

	<span class="k">return</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">;</span>

	<span class="k">if</span><span class="p">(</span> <span class="n">argc</span><span class="o">==</span><span class="mi">3</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
		<span class="n">b</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>

		<span class="n">printf</span><span class="p">(</span><span class="s">&quot;a=%d, b=%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">);</span>
		<span class="n">frac_to_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>

	<span class="p">}</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/379/addtag/" class="addtag" id="addtag_379">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/379/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/379/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_379"
  >-</span><span
  class="button yellow"
  id="rating_z_379"
  >0</span><span 
  class="button green"
  id="rating_p_379"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/312/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/379/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/379/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/379/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment426">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/138/" target="_top">yuki</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/426/">#426</a>(<script language="JavaScript">print_time(new Date("2007/07/10 04:00 GMT"));</script><noscript>2007/07/10 04:00 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  コピペミスりました。
最長は2147483629（=2^31-19）の時でした。
アルゴリズム的にはこの辺が限界かなぁ？

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/426/addtag/" class="addtag" id="addtag_426">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_426"
  >-</span><span
  class="button yellow"
  id="rating_z_426"
  >0</span><span 
  class="button green"
  id="rating_p_426"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/379/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/426/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/426/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/426/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment487">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/487/">#487</a>(<script language="JavaScript">print_time(new Date("2007/07/10 13:32 GMT"));</script><noscript>2007/07/10 13:32 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>#312です。
標準出力参りました(^_^)

1回目のループで循環部の始点終点をチェックすると2回目のループで一回に一桁ずつではなく
何桁かいっぺんに処理出来るので除算剰余の回数が減って速くなるかもしれません。
64bitINTを使うと9桁かな。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/487/addtag/" class="addtag" id="addtag_487">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_487"
  >-</span><span
  class="button yellow"
  id="rating_z_487"
  >0</span><span 
  class="button green"
  id="rating_p_487"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/426/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/487/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/487/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/487/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment520">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/138/" target="_top">yuki</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/520/">#520</a>(<script language="JavaScript">print_time(new Date("2007/07/11 02:18 GMT"));</script><noscript>2007/07/11 02:18 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  64bit intが使える環境が手元にないのでdoubleを使用してますけど、その辺は同じように高速化できますね。

　こう。さんの#444を参考にして中間解を作ってみました。
#444の、循環開始点の仮定を移動して再検索する代わりに、
非循環部分＋循環部分１桁を配列に持って検索しています。

　相変わらず（メモリ上に持てないので）結果は標準出力です。
最長桁のケース（b=2147483629 =2^31-19）で、
前段に約6分後段に約5分半、計11分半かかります。（Pentium4-3GHzマシン使用）
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &lt;math.h&gt;</span>

<span class="kt">int</span> <span class="nf">f2d_mod2</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">count</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">double</span> <span class="n">_b</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">d</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">remain</span><span class="p">[</span><span class="mi">30</span><span class="p">];</span>

	<span class="o">*</span><span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="n">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="n">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="mi">30</span><span class="p">;</span> <span class="n">d</span><span class="o">++</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">remain</span><span class="p">[</span><span class="n">d</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">;</span>
		<span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">fmod</span><span class="p">(</span> <span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">a</span> <span class="o">*</span><span class="mi">10</span><span class="p">,</span> <span class="n">_b</span> <span class="p">);</span>
		<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">d</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span><span class="p">(</span> <span class="n">a</span> <span class="o">==</span> <span class="n">remain</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">)</span>
			<span class="p">{</span>
				<span class="o">*</span><span class="n">count</span> <span class="o">=</span> <span class="n">d</span> <span class="o">-</span><span class="n">i</span> <span class="o">+</span><span class="mi">1</span><span class="p">;</span>
				<span class="k">return</span> <span class="n">a</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">for</span><span class="p">(;;</span><span class="n">d</span><span class="o">++</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">fmod</span><span class="p">(</span> <span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">a</span> <span class="o">*</span><span class="mi">10</span><span class="p">,</span> <span class="n">_b</span> <span class="p">);</span>
			<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">30</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="k">if</span><span class="p">(</span> <span class="n">a</span> <span class="o">==</span> <span class="n">remain</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">)</span>
				<span class="p">{</span>
					<span class="o">*</span><span class="n">count</span> <span class="o">=</span> <span class="n">d</span> <span class="o">-</span><span class="n">i</span> <span class="o">+</span><span class="mi">1</span><span class="p">;</span>
					<span class="k">return</span> <span class="n">a</span><span class="p">;</span>
				<span class="p">}</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">f2d_print</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">,</span> <span class="kt">int</span> <span class="n">mod</span><span class="p">,</span> <span class="kt">int</span> <span class="n">count</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">double</span> <span class="n">_a</span><span class="p">;</span>
	<span class="kt">double</span> <span class="n">_b</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>

	<span class="n">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">;</span>
	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">_a</span> <span class="o">=</span> <span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">a</span><span class="p">;</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">);</span>

		<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">while</span><span class="p">((</span><span class="kt">int</span><span class="p">)</span><span class="n">_a</span><span class="o">!=</span><span class="n">mod</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">floor</span><span class="p">(</span> <span class="n">_a</span><span class="o">*</span><span class="mi">10</span> <span class="o">/</span> <span class="n">_b</span> <span class="p">));</span>
				<span class="n">_a</span> <span class="o">=</span> <span class="n">fmod</span><span class="p">(</span> <span class="n">_a</span><span class="o">*</span><span class="mi">10</span><span class="p">,</span> <span class="n">_b</span> <span class="p">);</span>
			<span class="p">}</span>
			<span class="n">printf</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span>
			<span class="k">while</span><span class="p">(</span><span class="n">count</span><span class="o">&gt;</span><span class="mi">9</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">count</span> <span class="o">-=</span> <span class="mi">9</span><span class="p">;</span>
				<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%09d&quot;</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">floor</span><span class="p">(</span> <span class="n">_a</span><span class="o">*</span><span class="mi">1000000000</span> <span class="o">/</span> <span class="n">_b</span> <span class="p">));</span>
				<span class="n">_a</span> <span class="o">=</span> <span class="n">fmod</span><span class="p">(</span> <span class="n">_a</span><span class="o">*</span><span class="mi">1000000000</span><span class="p">,</span> <span class="n">_b</span> <span class="p">);</span>
			<span class="p">};</span>
		<span class="p">}</span>

		<span class="k">do</span> <span class="p">{</span>
			<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">floor</span><span class="p">(</span> <span class="n">_a</span><span class="o">*</span><span class="mi">10</span> <span class="o">/</span> <span class="n">_b</span> <span class="p">));</span>
			<span class="n">_a</span> <span class="o">=</span> <span class="n">fmod</span><span class="p">(</span> <span class="n">_a</span><span class="o">*</span><span class="mi">10</span><span class="p">,</span> <span class="n">_b</span> <span class="p">);</span>
		<span class="p">}</span> <span class="k">while</span><span class="p">((</span><span class="kt">int</span><span class="p">)</span><span class="n">_a</span><span class="o">!=</span><span class="n">mod</span><span class="p">);</span>

		<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
	<span class="k">return</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">frac_to_decimal</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">mod</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">count</span><span class="p">;</span>

	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">&lt;</span><span class="mi">0</span> <span class="o">||</span> <span class="n">b</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>

	<span class="n">mod</span> <span class="o">=</span> <span class="n">f2d_mod2</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">count</span><span class="p">);</span>
	<span class="n">f2d_print</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">mod</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>

	<span class="k">return</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">;</span>

	<span class="k">if</span><span class="p">(</span> <span class="n">argc</span><span class="o">==</span><span class="mi">3</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
		<span class="n">b</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>

<span class="c">//		printf(&quot;a=%d, b=%d\n&quot;, a, b);</span>
		<span class="n">frac_to_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>

	<span class="p">}</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/520/addtag/" class="addtag" id="addtag_520">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/520/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/520/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_520"
  >-</span><span
  class="button yellow"
  id="rating_z_520"
  >0</span><span 
  class="button green"
  id="rating_p_520"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/487/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/520/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/520/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/520/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment521">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/138/" target="_top">yuki</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/521/">#521</a>(<script language="JavaScript">print_time(new Date("2007/07/11 02:36 GMT"));</script><noscript>2007/07/11 02:36 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  配列remainが30にしてあるのは、
最長桁の割り切れる場合のケース(b=1073741824 =2^30)が小数点以下30桁で、
最長桁の非循環部分を持つ割り切れない場合のケース(b=1610612736 =3*2^29)が
非循環部分29桁と循環部分1桁になる為で、
　つまり、小数点から30桁までに必ず循環開始点（または割り切れる点）が
出現することを利用して30にしています。
一般的には最長の循環開始点はlog2(b)桁なのですが、コード上では固定にしてあります。
　
この問題は中々奥が深いですね。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/521/addtag/" class="addtag" id="addtag_521">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_521"
  >-</span><span
  class="button yellow"
  id="rating_z_521"
  >0</span><span 
  class="button green"
  id="rating_p_521"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/520/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/521/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/521/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/521/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment567">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/567/">#567</a>(<script language="JavaScript">print_time(new Date("2007/07/11 12:25 GMT"));</script><noscript>2007/07/11 12:25 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  かなり奥深いですね。
数学的に解いてみました。

本とはもう少し厳密に出来るとは思うんですが。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>

<span class="c">//非循環小数の表示</span>
<span class="c">//put_decimals4で小数点まで表示しているのでその残りのみ表示</span>
<span class="kt">void</span> <span class="n">put_decimal_nlp</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">){</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod</span><span class="p">;</span>
	<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="kt">long</span> <span class="kt">long</span><span class="p">)(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	<span class="k">do</span><span class="p">{</span>
<span class="c">//		printf(&quot;%d&quot;,(int)(mod/b));</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">+</span><span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">));</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	<span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">mod</span><span class="p">);</span>
	<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">);</span>
<span class="p">}</span>

<span class="c">//循環小数の表示</span>
<span class="c">//put_decimals4で小数点まで表示しているのでその残りのみ表示</span>
<span class="kt">void</span> <span class="n">put_decimal_lp</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">,</span><span class="kt">int</span> <span class="n">loop_start_pos</span><span class="p">){</span>
	<span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">loop_start_mod</span><span class="p">;</span>
	<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="kt">long</span> <span class="kt">long</span><span class="p">)(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	
	<span class="c">//循環節までを表示</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">loop_start_pos</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
<span class="c">//		printf(&quot;%d&quot;,(int)(mod/b));</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">+</span><span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">));</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="n">loop_start_mod</span><span class="o">=</span><span class="n">mod</span><span class="p">;</span>
	<span class="c">//循環節を表示</span>
	<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;{&#39;</span><span class="p">);</span>
	<span class="k">do</span><span class="p">{</span>
<span class="c">//		printf(&quot;%d&quot;,(int)(mod/b));</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">+</span><span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">));</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="n">i</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">mod</span><span class="o">!=</span><span class="n">loop_start_mod</span><span class="p">);</span>
	<span class="n">puts</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">put_decimals4</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">){</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">,</span><span class="n">k</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod_buf</span><span class="p">[</span><span class="mi">31</span><span class="p">];</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">num_2</span><span class="p">,</span><span class="n">num_5</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">nonloop_max</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">loop_max</span><span class="p">;</span>
	
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d/%d=%d&quot;</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;.&#39;</span><span class="p">);</span>
	
	<span class="c">//bの２，５についての素因数分解</span>
	<span class="n">num_2</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
	<span class="n">mod</span><span class="o">=</span><span class="n">b</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">mod</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
		<span class="n">num_2</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="n">num_5</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
	<span class="n">mod</span><span class="o">=</span><span class="n">b</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="mi">5</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">mod</span><span class="o">/=</span><span class="mi">5</span><span class="p">;</span>
		<span class="n">num_5</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="n">nonloop_max</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">num_2</span><span class="p">,</span><span class="n">num_5</span><span class="p">);</span>
	<span class="k">if</span><span class="p">(</span><span class="n">nonloop_max</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="c">/*純循環小数なら表示*/</span>
		<span class="n">put_decimal_lp</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="n">loop_max</span><span class="o">=</span><span class="p">(</span><span class="n">b</span><span class="o">&gt;&gt;</span><span class="n">num_2</span><span class="p">);</span>
	<span class="k">if</span><span class="p">(</span><span class="n">num_5</span><span class="p">)</span> <span class="n">loop_max</span><span class="o">/=</span><span class="p">(</span><span class="mi">5</span><span class="o">^</span><span class="n">num_5</span><span class="p">);</span>
	
	<span class="k">if</span><span class="p">(</span><span class="n">loop_max</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span>
		<span class="c">//非循環関数なので表示</span>
		<span class="n">put_decimal_nlp</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="n">mod</span><span class="o">=</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">;</span>
	<span class="c">//非循環候補の取り込み</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">nonloop_max</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="c">//循環しないなら表示して終了</span>
			<span class="n">put_decimal_nlp</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
			<span class="k">return</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="n">mod_buf</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">mod</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="n">mod</span><span class="o">=</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">;</span>
	<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	
	<span class="c">//循環節の開始位置を探す。</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">loop_max</span><span class="o">+</span><span class="n">nonloop_max</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="c">//バッファ内との循環チェック</span>
		<span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">nonloop_max</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="o">==</span><span class="n">mod_buf</span><span class="p">[</span><span class="n">j</span><span class="p">]){</span>
				<span class="n">put_decimal_lp</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">j</span><span class="p">);</span>
				<span class="k">return</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>
	
	<span class="c">//必ず非循環か循環のはずなのでここに来ることはない。</span>
	<span class="k">return</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">3</span><span class="p">,</span>        <span class="mi">30</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">3</span><span class="p">,</span>         <span class="mi">8</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">3</span><span class="p">,</span>        <span class="mi">14</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">1</span><span class="p">,</span>         <span class="mi">3</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">1</span><span class="p">,</span>        <span class="mi">11</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>        <span class="mi">31</span><span class="p">,</span>       <span class="mi">701</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>       <span class="mi">101</span><span class="p">,</span>      <span class="mi">1999</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">1</span><span class="p">,</span><span class="mi">2097152000</span><span class="p">);</span>	<span class="c">//最小の非循環小数？</span>
	<span class="n">put_decimals4</span><span class="p">(</span><span class="mi">1073741823</span><span class="p">,</span><span class="mi">1073741824</span><span class="p">);</span><span class="c">//最小の非循環小数？</span>
	<span class="n">put_decimals4</span><span class="p">(</span>  <span class="mi">21474836</span><span class="p">,</span><span class="mi">2147483629</span><span class="p">);</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/567/addtag/" class="addtag" id="addtag_567">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/567/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/567/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_567"
  >-</span><span
  class="button yellow"
  id="rating_z_567"
  >0</span><span 
  class="button green"
  id="rating_p_567"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/521/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/567/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/567/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/567/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment568">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/568/">#568</a>(<script language="JavaScript">print_time(new Date("2007/07/11 12:29 GMT"));</script><noscript>2007/07/11 12:29 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  一応、循環小数についての考察結果を載せておきます。
これを元に考えたらこうなりました^^;;

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="highlight"><pre>分数n/mの非循環時30桁、循環時m-1桁、非循環部29桁の証明。
まずA mod Bが必ず0になる条件はAがBの倍数の場合。
次に((A mod B)*10)mod Bを考える。これはA/Bで小数点以下一位を求めた時の余りであり、
これが必ず0になるのは前条件の通りBが2または5の場合。

これより必ず割り切れる非循環小数になるn/mはn&#39;/(2^x*5^y)と書ける。
(n&#39;はnを、nとmの公約数で割ったものになる。)

これを変形すると
n/m=n*5^(x-y)/10^x=n*2^(y-x)/10^y

これより非循環小数で小数点以下の最長桁数はMAX(x,y)になることがわかる。
今、m&lt;2^31であるのでxまたはyが最大になるmは2^30であり、最長桁数は30桁になる。

純循環小数になるn/mはmの素因数に2,5を含まない。
x mod mを考えると取り得る値は０～m-1。しかし、0の場合は割り切れて循環しないという
ことになるので1～m-1のm-1個。よって最大でもm-1しか循環しません。

では非循環部を持たない循環小数はというとここまでで出てこなかったもの
n/m=n/(m&#39;*2^x*5^y)　※m&#39;は2,5を素因数に含まない。
となる。

これは変形して n/m=n1/m&#39;+n2/(2^x*5^y)と書け、純循環小数+非循環小数の形になる。
つまり、非循環部は非循環小数の長さとなり、循環部の長さはm&#39;-1より短くなる。
今、m&lt;2^31であるのでxまたはyが最大になるmを考えると、m&#39;は最小の3、その場合のxは29と
なり、非循環部の最長桁数は29桁になる。
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/568/addtag/" class="addtag" id="addtag_568">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/568/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/568/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_568"
  >-</span><span
  class="button yellow"
  id="rating_z_568"
  >0</span><span 
  class="button green"
  id="rating_p_568"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/567/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/568/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/568/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/568/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment603">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/603/">#603</a>(<script language="JavaScript">print_time(new Date("2007/07/12 01:31 GMT"));</script><noscript>2007/07/12 01:31 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  多分、この辺がベストかな？表示以外にはほとんど時間はかからないはず。関数名は考えるのまんどくなったｗ
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>

<span class="c">//小数の表示</span>
<span class="kt">void</span> <span class="n">put_decimal</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">,</span><span class="kt">int</span> <span class="n">loop_start_pos</span><span class="p">){</span>
	<span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">loop_start_mod</span><span class="p">;</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d/%d=%d.&quot;</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
	<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="kt">long</span> <span class="kt">long</span><span class="p">)(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	
	<span class="c">//循環節までを表示</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">loop_start_pos</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">+</span><span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">));</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
			<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">);</span>
			<span class="k">return</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="n">loop_start_mod</span><span class="o">=</span><span class="n">mod</span><span class="p">;</span>
	<span class="c">//循環節を表示</span>
	<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;{&#39;</span><span class="p">);</span>
	<span class="k">do</span><span class="p">{</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">+</span><span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">));</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="n">i</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">mod</span><span class="o">!=</span><span class="n">loop_start_mod</span><span class="p">);</span>
	<span class="n">puts</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">put_decimals4</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">){</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod_buf</span><span class="p">[</span><span class="mi">31</span><span class="p">];</span>	<span class="c">//循環開始位置チェック用のバッファ</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod</span><span class="p">;</span>	<span class="c">//余り</span>
	<span class="kt">int</span> <span class="n">num_2</span><span class="p">,</span><span class="n">num_5</span><span class="p">;</span>		<span class="c">//素因数分解の結果：2の乗数、5の乗数</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">nonloop_max</span><span class="p">;</span>	<span class="c">//非循環部の最大桁数</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">loop_max</span><span class="p">;</span>		<span class="c">//循環部の最大桁数</span>
	<span class="kt">int</span> <span class="n">denom</span><span class="p">;</span>			<span class="c">//計算用分母</span>
	
	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d/%d=%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="n">denom</span><span class="o">=</span><span class="n">b</span><span class="p">;</span>
	
	<span class="c">//bの２，５についての素因数分解</span>
	<span class="n">num_2</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
	<span class="n">num_5</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
	
	<span class="k">while</span><span class="p">(</span><span class="n">denom</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">denom</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
		<span class="n">num_2</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="k">while</span><span class="p">(</span><span class="n">denom</span><span class="o">%</span><span class="mi">5</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">denom</span><span class="o">/=</span><span class="mi">5</span><span class="p">;</span>
		<span class="n">num_5</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="n">nonloop_max</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">num_2</span><span class="p">,</span><span class="n">num_5</span><span class="p">);</span>
	<span class="n">loop_max</span><span class="o">=</span><span class="n">denom</span><span class="p">;</span>
	
	<span class="c">//素因数に2,5を含まなければ純循環関数</span>
	<span class="k">if</span><span class="p">(</span><span class="n">nonloop_max</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="c">//純循環小数なので表示</span>
		<span class="n">put_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="c">//もし分子がdenomの倍数なら約分できる。</span>
	<span class="c">//分母が2^x*5^yであるなら非循環小数</span>
	<span class="k">if</span><span class="p">(</span><span class="n">loop_max</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="n">a</span><span class="o">%</span><span class="n">denom</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="c">//非循環関数なので表示</span>
		<span class="n">put_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">nonloop_max</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="c">//循環節ありの循環小数</span>
	<span class="n">mod</span><span class="o">=</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	<span class="n">mod_buf</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="n">mod</span><span class="p">;</span>
	
	<span class="c">//循環節の開始位置を探す。</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">loop_max</span><span class="o">+</span><span class="n">nonloop_max</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="c">//非循環候補の取り込み</span>
		<span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">nonloop_max</span><span class="p">){</span>
			<span class="n">mod_buf</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">mod</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="c">//バッファ内との循環チェック</span>
		<span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">min</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">nonloop_max</span><span class="p">);</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="o">==</span><span class="n">mod_buf</span><span class="p">[</span><span class="n">j</span><span class="p">]){</span>
				<span class="c">//循環開始位置がわかったら表示</span>
				<span class="n">put_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">j</span><span class="p">);</span>
				<span class="k">return</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>
	
	<span class="c">//必ず非循環か循環のはずなのでここに来ることはない。</span>
	<span class="k">return</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">3</span><span class="p">,</span>        <span class="mi">30</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">3</span><span class="p">,</span>         <span class="mi">8</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">3</span><span class="p">,</span>        <span class="mi">14</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">1</span><span class="p">,</span>         <span class="mi">3</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">9</span><span class="p">,</span>         <span class="mi">3</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">1</span><span class="p">,</span>        <span class="mi">11</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>        <span class="mi">31</span><span class="p">,</span>       <span class="mi">701</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>       <span class="mi">101</span><span class="p">,</span>      <span class="mi">1999</span><span class="p">);</span>
	<span class="n">put_decimals4</span><span class="p">(</span>         <span class="mi">1</span><span class="p">,</span><span class="mi">2097152000</span><span class="p">);</span>	<span class="c">//最小の非循環小数？</span>
	<span class="n">put_decimals4</span><span class="p">(</span><span class="mi">1073741823</span><span class="p">,</span><span class="mi">1073741824</span><span class="p">);</span>	<span class="c">//最長の非循環小数？</span>
	<span class="n">put_decimals4</span><span class="p">(</span>  <span class="mi">21474836</span><span class="p">,</span><span class="mi">2147483629</span><span class="p">);</span>	<span class="c">//最長の循環小数？</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/603/addtag/" class="addtag" id="addtag_603">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/603/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/603/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_603"
  >-</span><span
  class="button yellow"
  id="rating_z_603"
  >0</span><span 
  class="button green"
  id="rating_p_603"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/568/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/603/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/603/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/603/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment604">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/604/">#604</a>(<script language="JavaScript">print_time(new Date("2007/07/12 01:41 GMT"));</script><noscript>2007/07/12 01:41 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  やっぱちょっと修正。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111</pre></td><td class="code"><div class="highlight"><pre><span class="c">//小数の表示</span>
<span class="kt">void</span> <span class="n">put_decimal</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">,</span><span class="kt">int</span> <span class="n">non_loop_size</span><span class="p">){</span>
	<span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">loop_start_mod</span><span class="p">;</span>

	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d/%d=%d.&quot;</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
	<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="kt">long</span> <span class="kt">long</span><span class="p">)(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	
	<span class="c">//循環節までを表示</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">non_loop_size</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">+</span><span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">));</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
			<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">);</span>
			<span class="k">return</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="n">loop_start_mod</span><span class="o">=</span><span class="n">mod</span><span class="p">;</span>
	<span class="c">//循環節を表示</span>
	<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;{&#39;</span><span class="p">);</span>
	<span class="k">do</span><span class="p">{</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">+</span><span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">));</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="n">i</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">mod</span><span class="o">!=</span><span class="n">loop_start_mod</span><span class="p">);</span>
	<span class="n">puts</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">put_decimals4</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">){</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod_buf</span><span class="p">[</span><span class="mi">31</span><span class="p">];</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">num_2</span><span class="p">,</span><span class="n">num_5</span><span class="p">;</span>		<span class="c">//素因数分解の結果：2の乗数、5の乗数</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">nonloop_max</span><span class="p">;</span>	<span class="c">//非循環部の最大桁数</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">loop_max</span><span class="p">;</span>		<span class="c">//循環部の最大桁数</span>
	<span class="kt">int</span> <span class="n">num</span><span class="p">,</span><span class="n">denom</span><span class="p">;</span>			<span class="c">//判別計算用分子、分母</span>
	
	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d/%d=%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="n">num</span><span class="o">=</span><span class="n">a</span><span class="p">;</span>
	<span class="n">denom</span><span class="o">=</span><span class="n">b</span><span class="p">;</span>
	<span class="c">//２，５で約分</span>
	<span class="k">while</span><span class="p">(</span><span class="n">num</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">denom</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">num</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
		<span class="n">denom</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">while</span><span class="p">(</span><span class="n">num</span><span class="o">%</span><span class="mi">5</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">denom</span><span class="o">%</span><span class="mi">5</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">num</span><span class="o">/=</span><span class="mi">5</span><span class="p">;</span>
		<span class="n">denom</span><span class="o">/=</span><span class="mi">5</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="c">//分母の２，５についての素因数分解</span>
	<span class="n">num_2</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
	<span class="n">num_5</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
	
	<span class="k">while</span><span class="p">(</span><span class="n">denom</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">denom</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
		<span class="n">num_2</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="k">while</span><span class="p">(</span><span class="n">denom</span><span class="o">%</span><span class="mi">5</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">denom</span><span class="o">/=</span><span class="mi">5</span><span class="p">;</span>
		<span class="n">num_5</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="n">nonloop_max</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">num_2</span><span class="p">,</span><span class="n">num_5</span><span class="p">);</span>
	<span class="n">loop_max</span><span class="o">=</span><span class="n">denom</span><span class="p">;</span>
	
	<span class="c">//素因数に2,5を含まなければ純循環関数</span>
	<span class="k">if</span><span class="p">(</span><span class="n">nonloop_max</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="c">//純循環小数なので表示</span>
		<span class="n">put_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="c">//もし分子がdenomの倍数なら約分できる。</span>
	<span class="c">//分母が2^x*5^yであるなら非循環小数</span>
	<span class="k">if</span><span class="p">(</span><span class="n">loop_max</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="n">a</span><span class="o">%</span><span class="n">denom</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="c">//非循環関数なので表示</span>
		<span class="n">put_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">nonloop_max</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="c">//循環節ありの循環小数</span>
	<span class="n">mod</span><span class="o">=</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	<span class="n">mod_buf</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="n">mod</span><span class="p">;</span>
	
	<span class="c">//循環節の開始位置を探す。</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">loop_max</span><span class="o">+</span><span class="n">nonloop_max</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="c">//非循環候補の取り込み</span>
		<span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">nonloop_max</span><span class="p">){</span>
			<span class="n">mod_buf</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">mod</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="c">//バッファ内との循環チェック</span>
		<span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">min</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">nonloop_max</span><span class="p">);</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="o">==</span><span class="n">mod_buf</span><span class="p">[</span><span class="n">j</span><span class="p">]){</span>
				<span class="c">//循環開始位置がわかったら表示</span>
				<span class="n">put_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">j</span><span class="p">);</span>
				<span class="k">return</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>
	
	<span class="c">//必ず非循環か循環のはずなのでここに来ることはない。</span>
	<span class="k">return</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/604/addtag/" class="addtag" id="addtag_604">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/604/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/604/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_604"
  >-</span><span
  class="button yellow"
  id="rating_z_604"
  >0</span><span 
  class="button green"
  id="rating_p_604"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/603/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/604/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/604/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/604/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment608">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/608/">#608</a>(<script language="JavaScript">print_time(new Date("2007/07/12 04:22 GMT"));</script><noscript>2007/07/12 04:22 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  さらにミス発見orz



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="highlight"><pre><span class="err">Ã</span>
<span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">min</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">nonloop_max</span><span class="p">);</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
<span class="err">○</span>
<span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">min</span><span class="p">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">nonloop_max</span><span class="p">);</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/608/addtag/" class="addtag" id="addtag_608">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/608/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/608/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_608"
  >-</span><span
  class="button yellow"
  id="rating_z_608"
  >0</span><span 
  class="button green"
  id="rating_p_608"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/604/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/608/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/608/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/608/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment611">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/611/">#611</a>(<script language="JavaScript">print_time(new Date("2007/07/12 06:12 GMT"));</script><noscript>2007/07/12 06:12 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  結局のところ、これでよさげ。
もう少し計算したらloop_maxじゃなく、実際の循環部の長さも求められそうなんだけど、どうなんだろ？
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66</pre></td><td class="code"><div class="highlight"><pre><span class="kt">void</span> <span class="n">put_decimals5</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">){</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">i</span><span class="p">;</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">mod</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">num_2</span><span class="p">,</span><span class="n">num_5</span><span class="p">;</span>		<span class="c">//素因数分解の結果：2の乗数、5の乗数</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">nonloop_max</span><span class="p">;</span>	<span class="c">//非循環部の最大桁数</span>
<span class="c">//	long long loop_max;		//循環部の最大桁数</span>
	<span class="kt">long</span> <span class="kt">long</span> <span class="n">loop_start_mod</span><span class="p">;</span>	<span class="c">//循環節開始時の余り</span>
	<span class="kt">int</span> <span class="n">num</span><span class="p">,</span><span class="n">denom</span><span class="p">;</span>			<span class="c">//計算用分母</span>
	
	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d/%d=%d&quot;</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">);</span>
	<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">);</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="n">a</span><span class="o">%=</span><span class="n">b</span><span class="p">;</span>
	
	<span class="n">num</span><span class="o">=</span><span class="n">a</span><span class="p">;</span>
	<span class="n">denom</span><span class="o">=</span><span class="n">b</span><span class="p">;</span>
	<span class="c">//２，５で約分</span>
	<span class="k">while</span><span class="p">(</span><span class="n">num</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">denom</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">num</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
		<span class="n">denom</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">while</span><span class="p">(</span><span class="n">num</span><span class="o">%</span><span class="mi">5</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">denom</span><span class="o">%</span><span class="mi">5</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">num</span><span class="o">/=</span><span class="mi">5</span><span class="p">;</span>
		<span class="n">denom</span><span class="o">/=</span><span class="mi">5</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="c">//分母の２，５についての素因数分解</span>
	<span class="n">num_2</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
	<span class="n">num_5</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
	
	<span class="k">while</span><span class="p">(</span><span class="n">denom</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">denom</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
		<span class="n">num_2</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="k">while</span><span class="p">(</span><span class="n">denom</span><span class="o">%</span><span class="mi">5</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
		<span class="n">denom</span><span class="o">/=</span><span class="mi">5</span><span class="p">;</span>
		<span class="n">num_5</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="n">nonloop_max</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">num_2</span><span class="p">,</span><span class="n">num_5</span><span class="p">);</span>
<span class="c">//	loop_max=denom;</span>

	<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;.&#39;</span><span class="p">);</span>
	<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="kt">long</span> <span class="kt">long</span><span class="p">)(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	
	<span class="c">//非循環部を表示</span>
	<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">nonloop_max</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">+</span><span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">));</span>
		<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">if</span><span class="p">(</span><span class="n">mod</span><span class="p">){</span>
		<span class="c">//循環節を表示</span>
		<span class="n">loop_start_mod</span><span class="o">=</span><span class="n">mod</span><span class="p">;</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;{&#39;</span><span class="p">);</span>
		<span class="k">do</span><span class="p">{</span>
			<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">+</span><span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">mod</span><span class="o">/</span><span class="n">b</span><span class="p">));</span>
			<span class="n">mod</span><span class="o">=</span><span class="p">(</span><span class="n">mod</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">;</span>
		<span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">mod</span><span class="o">!=</span><span class="n">loop_start_mod</span><span class="p">);</span>
		<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;}&#39;</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">);</span>
	<span class="k">return</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/611/addtag/" class="addtag" id="addtag_611">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/611/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/611/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_611"
  >-</span><span
  class="button yellow"
  id="rating_z_611"
  >0</span><span 
  class="button green"
  id="rating_p_611"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/608/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/611/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/611/">
    2
    replies
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/611/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment644">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/644/">#644</a>(<script language="JavaScript">print_time(new Date("2007/07/12 11:50 GMT"));</script><noscript>2007/07/12 11:50 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>#312です。
Cだと商と剰余をいっぺんに取る関数ありませんでしたっけ？
ループ中に割り算が半分になるので速くなると思います。

あと速度にはあまり影響なさそうですけど約分は既約分数を求めるとかでしょうか。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/644/addtag/" class="addtag" id="addtag_644">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_644"
  >-</span><span
  class="button yellow"
  id="rating_z_644"
  >0</span><span 
  class="button green"
  id="rating_p_644"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/611/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/644/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/644/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment659">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/49/" target="_top">iwk</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/659/">#659</a>(<script language="JavaScript">print_time(new Date("2007/07/12 13:49 GMT"));</script><noscript>2007/07/12 13:49 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  ものすごく興ざめな話ですが、循環小数の指数については『数論入門 / 北村泰一著』あたりをどうぞ。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/659/addtag/" class="addtag" id="addtag_659">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_659"
  >-</span><span
  class="button yellow"
  id="rating_z_659"
  >0</span><span 
  class="button green"
  id="rating_p_659"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/611/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/659/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/659/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/659/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment711">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/138/" target="_top">yuki</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/711/">#711</a>(<script language="JavaScript">print_time(new Date("2007/07/13 02:05 GMT"));</script><noscript>2007/07/13 02:05 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  それはそれでありですけど、「どう書く？」っていうのがここの趣旨だと思います。
読んで（知った上で）または、読まずに（知らないなりに）、どう書くかが問われるのでは？
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/711/addtag/" class="addtag" id="addtag_711">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_711"
  >-</span><span
  class="button yellow"
  id="rating_z_711"
  >0</span><span 
  class="button green"
  id="rating_p_711"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/659/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/711/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/711/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/711/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment770">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/49/" target="_top">iwk</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/770/">#770</a>(<script language="JavaScript">print_time(new Date("2007/07/13 15:22 GMT"));</script><noscript>2007/07/13 15:22 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  だからものすごく興ざめな話なわけです。(^^;A
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/770/addtag/" class="addtag" id="addtag_770">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_770"
  >-</span><span
  class="button yellow"
  id="rating_z_770"
  >0</span><span 
  class="button green"
  id="rating_p_770"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/711/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/770/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/770/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment330">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/330/">#330</a>(<script language="JavaScript">print_time(new Date("2007/07/08 00:48 GMT"));</script><noscript>2007/07/08 00:48 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  バッファサイズの設定で小数部が一万桁を超える事はないという仮定を置いています。実際には2^31-1まで達し得る事を考えると、可変長にすべきとは思いますが、それよりも気になっているのは循環を検出するロジックが小数部の桁数の二乗のオーダーになってしまっている事です。もっと数学的な性質を理解すればスマートに解けるのでしょうか。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">BUFFSIZE</span> <span class="o">=</span> <span class="mi">10000</span><span class="o">;</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span>
            <span class="n">f</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]),</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">1</span><span class="o">])));</span>
    <span class="o">}</span>

    <span class="k">static</span> <span class="n">String</span> <span class="n">f</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">recurringChecker</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">BUFFSIZE</span><span class="o">];</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">quotient</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="n">BUFFSIZE</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">/</span> <span class="n">b</span><span class="o">;</span>
        <span class="n">StringBuffer</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">(</span><span class="mi">80</span><span class="o">);</span>
        <span class="n">answer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
        <span class="n">a</span> <span class="o">-=</span> <span class="n">c</span> <span class="o">*</span> <span class="n">b</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">answer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;.&quot;</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">recurringBegin</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        <span class="kt">boolean</span> <span class="n">recurring</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">a</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">recurring</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">recurringChecker</span><span class="o">[</span><span class="n">n</span><span class="o">]</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
            <span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">*</span> <span class="mi">10</span><span class="o">;</span>
            <span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">/</span> <span class="n">b</span><span class="o">;</span>
            <span class="n">quotient</span><span class="o">[</span><span class="n">n</span><span class="o">]</span> <span class="o">=</span> <span class="o">(</span><span class="kt">byte</span><span class="o">)</span><span class="n">c</span><span class="o">;</span>
            <span class="n">a</span> <span class="o">-=</span> <span class="n">c</span> <span class="o">*</span> <span class="n">b</span><span class="o">;</span>
            <span class="n">n</span><span class="o">++;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">==</span> <span class="n">recurringChecker</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">{</span>
                    <span class="n">recurringBegin</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
                    <span class="n">recurring</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">recurringBegin</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">answer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;{&quot;</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="n">answer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">quotient</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">recurring</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">answer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;}&quot;</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/330/addtag/" class="addtag" id="addtag_330">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/330/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/330/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_330"
  >-</span><span
  class="button yellow"
  id="rating_z_330"
  >0</span><span 
  class="button green"
  id="rating_p_330"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/330/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/330/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment396">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/396/">#396</a>(<script language="JavaScript">print_time(new Date("2007/07/09 13:38 GMT"));</script><noscript>2007/07/09 13:38 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  出題者のtnkさんのプログラムを参考に考えました（というか、ほとんどそのまんまか）。
バッファサイズを可変長にする事と、処理時間が出力の２乗に比例してしまう点をHashMapを使用する事で解決しました。（のつもりです）
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span>
           <span class="n">getDecimal</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]),</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">1</span><span class="o">])));</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="n">String</span> <span class="n">getDecimal</span><span class="o">(</span><span class="kt">long</span> <span class="n">a</span><span class="o">,</span> <span class="kt">long</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">nums</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;(</span><span class="mi">1000</span><span class="o">);</span>
        <span class="n">StringBuffer</span> <span class="n">res</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">(</span><span class="s">&quot;0.&quot;</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">nums</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">n</span><span class="o">++);</span>
            <span class="n">a</span> <span class="o">*=</span> <span class="mi">10</span><span class="o">;</span>
            <span class="n">res</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="o">);</span>
            <span class="n">a</span> <span class="o">%=</span> <span class="n">b</span><span class="o">;</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">res</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">nums</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">a</span><span class="o">))</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">off</span> <span class="o">=</span> <span class="n">nums</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">a</span><span class="o">)</span> <span class="o">+</span> <span class="mi">2</span><span class="o">;</span>
                <span class="k">return</span> <span class="n">res</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="n">off</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;{&quot;</span> <span class="o">+</span> <span class="n">res</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">off</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;}&quot;</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/396/addtag/" class="addtag" id="addtag_396">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/396/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/396/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_396"
  >-</span><span
  class="button yellow"
  id="rating_z_396"
  >0</span><span 
  class="button green"
  id="rating_p_396"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/330/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/396/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/396/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment340">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/340/">#340</a>(<script language="JavaScript">print_time(new Date("2007/07/08 07:35 GMT"));</script><noscript>2007/07/08 07:35 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  10/33が{0.3}になるのがどうか・・・
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">sys</span>

<span class="k">def</span> <span class="nf">to_decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="mi">1</span> <span class="o">&lt;=</span> <span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">:</span>
        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s">&quot;invalid value a=</span><span class="si">%d</span><span class="s">, b=</span><span class="si">%d</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">))</span>
    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">h</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">while</span> <span class="n">a</span><span class="p">:</span>
        <span class="k">if</span> <span class="s">&quot;.&quot;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">result</span> <span class="ow">and</span> <span class="n">a</span> <span class="o">&gt;=</span> <span class="n">b</span><span class="p">:</span>
            <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">)</span>
        <span class="n">i</span> <span class="o">=</span> <span class="n">h</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">i</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span> <span class="c"># cycling</span>
            <span class="n">result</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="s">&#39;{&#39;</span><span class="p">)</span>
            <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;}&#39;</span><span class="p">)</span>
            <span class="k">break</span>
        <span class="n">h</span><span class="p">[</span><span class="n">a</span><span class="p">]</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
        <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">a</span> <span class="o">//</span> <span class="n">b</span><span class="p">))</span>
        <span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span> <span class="o">%</span> <span class="n">b</span><span class="p">)</span> <span class="o">*</span> <span class="mi">10</span>
    <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="k">print</span> <span class="n">to_decimal</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/340/addtag/" class="addtag" id="addtag_340">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/340/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/340/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_340"
  >-</span><span
  class="button yellow"
  id="rating_z_340"
  >0</span><span 
  class="button green"
  id="rating_p_340"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/340/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/340/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment627">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/627/">#627</a>(<script language="JavaScript">print_time(new Date("2007/07/12 09:50 GMT"));</script><noscript>2007/07/12 09:50 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>自分なりに書き換えてみました。どんなもんでしょう。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>
        <span class="n">x</span> <span class="o">=</span> <span class="s">&#39;&#39;</span>
        <span class="n">h</span> <span class="o">=</span> <span class="p">{</span><span class="n">a</span><span class="p">:</span> <span class="mi">0</span><span class="p">}</span>
        <span class="k">while</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">i</span><span class="p">,</span> <span class="n">a</span> <span class="o">=</span> <span class="nb">divmod</span><span class="p">(</span><span class="n">a</span> <span class="o">*</span> <span class="mi">10</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
                <span class="n">x</span> <span class="o">+=</span> <span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
                <span class="k">if</span> <span class="n">a</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                        <span class="k">return</span> <span class="s">&#39;0.&#39;</span> <span class="o">+</span> <span class="n">x</span>
                <span class="k">if</span> <span class="n">h</span><span class="o">.</span><span class="n">has_key</span><span class="p">(</span><span class="n">a</span><span class="p">):</span>
                        <span class="k">return</span> <span class="s">&#39;0.</span><span class="si">%s</span><span class="s">{</span><span class="si">%s</span><span class="s">}&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">x</span><span class="p">[:</span><span class="n">h</span><span class="p">[</span><span class="n">a</span><span class="p">]],</span> <span class="n">x</span><span class="p">[</span><span class="n">h</span><span class="p">[</span><span class="n">a</span><span class="p">]:])</span>
                <span class="n">h</span><span class="p">[</span><span class="n">a</span><span class="p">]</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/627/addtag/" class="addtag" id="addtag_627">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/627/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/627/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_627"
  >-</span><span
  class="button yellow"
  id="rating_z_627"
  >0</span><span 
  class="button green"
  id="rating_p_627"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/340/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/627/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/627/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  

  
    





<div class="comment" id="comment403">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/49/" target="_top">iwk</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/403/">#403</a>(<script language="JavaScript">print_time(new Date("2007/07/09 19:43 GMT"));</script><noscript>2007/07/09 19:43 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></td><td class="code"><div class="highlight"><pre><span class="kr">open</span> <span class="n">System</span><span class="k">;;</span>

<span class="kr">let</span> <span class="n">simplify</span> <span class="k">(</span><span class="n">n</span><span class="k">,</span><span class="n">m</span><span class="k">)</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="kr">rec</span> <span class="n">gcd</span> <span class="n">a</span> <span class="n">b</span> <span class="k">=</span>
        <span class="kr">match</span> <span class="n">a</span><span class="k">,</span><span class="n">b</span> <span class="kr">with</span>
        <span class="k">|</span> <span class="k">_,</span><span class="mi">0</span> <span class="k">-&gt;</span> <span class="n">a</span>
        <span class="k">|</span> <span class="mi">0</span><span class="k">,_</span> <span class="k">-&gt;</span> <span class="n">b</span>
        <span class="k">|</span> <span class="n">a</span><span class="k">,</span><span class="n">b</span> <span class="k">-&gt;</span> <span class="n">gcd</span> <span class="n">b</span> <span class="k">(</span><span class="n">a</span> <span class="o">%</span> <span class="n">b</span><span class="k">)</span>
    <span class="kr">and</span> <span class="n">d</span> <span class="k">=</span> <span class="n">gcd</span> <span class="n">n</span> <span class="n">m</span> <span class="kr">in</span>
    <span class="k">(</span><span class="n">n</span> <span class="o">/</span> <span class="n">d</span><span class="k">,</span> <span class="n">m</span> <span class="o">/</span> <span class="n">d</span><span class="k">);;</span>

<span class="kr">let</span> <span class="n">pow</span> <span class="n">base</span> <span class="n">index</span> <span class="k">=</span>
    <span class="n">int_of_float</span> <span class="k">(</span> <span class="k">(</span><span class="n">float_of_int</span> <span class="n">base</span><span class="k">)</span> <span class="k">**</span> <span class="k">(</span><span class="n">float_of_int</span> <span class="n">index</span><span class="k">)</span> <span class="k">);;</span>

<span class="kr">let</span> <span class="kr">rec</span> <span class="n">count2And5Factors</span> <span class="n">n</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="kr">rec</span> <span class="n">count</span> <span class="n">base</span> <span class="n">cnt</span> <span class="k">=</span> <span class="kr">function</span>
        <span class="k">|</span> <span class="mi">0</span> <span class="k">-&gt;</span> <span class="n">cnt</span>
        <span class="k">|</span> <span class="n">m</span> <span class="kr">when</span> <span class="n">not</span> <span class="k">(</span><span class="n">m</span> <span class="o">%</span> <span class="n">base</span> <span class="k">=</span> <span class="mi">0</span><span class="k">)</span> <span class="k">-&gt;</span> <span class="n">cnt</span>
        <span class="k">|</span> <span class="n">m</span> <span class="k">-&gt;</span> <span class="n">count</span> <span class="n">base</span> <span class="k">(</span><span class="n">cnt</span><span class="k">+</span><span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">m</span><span class="o">/</span><span class="n">base</span><span class="k">)</span>
    <span class="kr">in</span> <span class="k">(</span><span class="n">count</span> <span class="mi">2</span> <span class="mi">0</span> <span class="n">n</span><span class="k">,</span> <span class="n">count</span> <span class="mi">5</span> <span class="mi">0</span> <span class="n">n</span><span class="k">);;</span>

<span class="kr">let</span> <span class="n">getRec</span> <span class="k">(</span><span class="n">m</span><span class="k">,</span><span class="n">n</span><span class="k">)</span> <span class="k">=</span>
   <span class="kr">let</span> <span class="kr">rec</span> <span class="n">recurring</span> <span class="n">index</span> <span class="k">=</span> <span class="kr">function</span>
       <span class="k">|</span> <span class="mi">1</span> <span class="k">-&gt;</span> <span class="mi">0</span>
       <span class="k">|</span> <span class="n">num</span> <span class="k">-&gt;</span> <span class="kr">if</span> <span class="k">((</span><span class="n">pow</span> <span class="mi">10</span> <span class="n">index</span><span class="k">)</span> <span class="k">-</span> <span class="mi">1</span><span class="k">)</span> <span class="o">%</span> <span class="n">num</span> <span class="k">=</span> <span class="mi">0</span>
                 <span class="kr">then</span> <span class="k">((</span><span class="n">pow</span> <span class="mi">10</span> <span class="n">index</span><span class="k">)</span> <span class="k">-</span> <span class="mi">1</span><span class="k">)</span> <span class="o">/</span> <span class="n">num</span>
                 <span class="kr">else</span> <span class="n">recurring</span> <span class="k">(</span><span class="n">index</span><span class="k">+</span><span class="mi">1</span><span class="k">)</span> <span class="n">num</span>
       <span class="kr">in</span> <span class="n">m</span> <span class="k">*</span> <span class="k">(</span><span class="n">recurring</span> <span class="mi">1</span> <span class="n">n</span><span class="k">);;</span>

<span class="kr">let</span> <span class="kr">rec</span> <span class="n">decimal_of_frac</span> <span class="k">(</span><span class="n">m</span><span class="k">,</span><span class="n">n</span><span class="k">)</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="k">(</span><span class="n">ixTwo</span><span class="k">,</span> <span class="n">ixFiv</span><span class="k">)</span> <span class="k">=</span> <span class="n">count2And5Factors</span> <span class="n">n</span> <span class="kr">in</span>
         <span class="kr">let</span> <span class="kr">rec</span> <span class="n">r</span> <span class="k">=</span> <span class="n">max</span> <span class="n">ixTwo</span> <span class="n">ixFiv</span>
         <span class="kr">and</span> <span class="n">divide</span> <span class="k">(</span><span class="n">k</span><span class="k">,</span><span class="n">l</span><span class="k">)</span> <span class="k">=</span> <span class="n">int_of_float</span> <span class="k">(</span><span class="n">float_of_int</span> <span class="n">k</span> <span class="o">/</span> <span class="n">float_of_int</span> <span class="n">l</span><span class="k">)</span>
         <span class="kr">and</span> <span class="n">n&#39;</span> <span class="k">=</span> <span class="n">n</span> <span class="o">/</span> <span class="k">(</span><span class="n">pow</span> <span class="mi">2</span> <span class="n">ixTwo</span><span class="k">)</span> <span class="o">/</span> <span class="k">(</span><span class="n">pow</span> <span class="mi">5</span> <span class="n">ixFiv</span><span class="k">)</span>
         <span class="kr">and</span> <span class="n">m&#39;</span> <span class="k">=</span> <span class="n">m</span> <span class="k">*</span> <span class="k">(</span><span class="n">pow</span> <span class="mi">2</span> <span class="k">(</span><span class="n">r</span><span class="k">-</span><span class="n">ixTwo</span><span class="k">))</span> <span class="k">*</span> <span class="k">(</span><span class="n">pow</span> <span class="mi">5</span> <span class="k">(</span><span class="n">r</span><span class="k">-</span><span class="n">ixFiv</span><span class="k">))</span>
         <span class="kr">and</span> <span class="n">finite_part</span> <span class="k">=</span> <span class="k">(</span><span class="n">divide</span> <span class="k">(</span><span class="n">m&#39;</span><span class="k">,</span><span class="n">n&#39;</span><span class="k">))</span>
         <span class="kr">and</span> <span class="n">proper_m</span> <span class="k">=</span> <span class="n">m&#39;</span><span class="k">-(</span><span class="n">finite_part</span> <span class="k">*</span> <span class="n">n&#39;</span><span class="k">)</span>
         <span class="kr">and</span> <span class="n">recurring</span> <span class="k">=</span> <span class="n">getRec</span> <span class="k">(</span><span class="n">simplify</span> <span class="k">(</span><span class="n">proper_m</span><span class="k">,</span><span class="n">n&#39;</span><span class="k">))</span>
         <span class="kr">and</span> <span class="n">finite_dec</span> <span class="k">=</span> <span class="k">(</span><span class="n">float_of_int</span> <span class="n">finite_part</span><span class="k">)</span> <span class="k">*</span> <span class="k">(</span><span class="mi">10</span><span class="k">.</span><span class="mi">0</span> <span class="k">**</span> <span class="k">-</span><span class="n">float_of_int</span> <span class="n">r</span><span class="k">)</span>
         <span class="kr">in</span> <span class="n">Printf</span><span class="k">.</span><span class="n">sprintf</span> <span class="s2">&quot;%g{%d}&quot;</span> <span class="n">finite_dec</span> <span class="n">recurring</span><span class="k">;;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/403/addtag/" class="addtag" id="addtag_403">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/F%23/">F#</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/403/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/403/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_403"
  >-</span><span
  class="button yellow"
  id="rating_z_403"
  >0</span><span 
  class="button green"
  id="rating_p_403"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/403/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment428">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/428/">#428</a>(<script language="JavaScript">print_time(new Date("2007/07/10 04:15 GMT"));</script><noscript>2007/07/10 04:15 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>バッファ使わないで頑張りました。巨大な数もほとんど使ってないつもり。
1/8388609 (1,398,101 桁で循環)ぐらいなら計算できました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49</pre></td><td class="code"><div class="highlight"><pre>(defun expand-rational (a b)
  (if (zerop (rem (expt 10 31) b))
      ;; b が 10 の冪で割り切れるなら有限
      (expand-terminating a b)
    ;; 割り切れないなら循環する
    (expand-recurring a b)))

(defun expand-terminating (a b)
  (do ((c (/ a b) (* c 10))
       (e 0 (1+ e)))
      ((integerp c)
       ;; a/b = c * 10^{-e}, c は 10 の倍数ではない整数
       (format t &quot;0.~V,&#39;0D&quot; e c))))

(defun normalize-denominator (b)
  (let ((tmp b) (i 0))
    (loop
      (let ((g (gcd tmp 10)))
	(if (= g 1)
	    (return (values i tmp))
	  (setq tmp (/ tmp g)
		i (1+ i)))))))

(defun expand-recurring (a b)
  (multiple-value-bind (e b1)
      (normalize-denominator b)
    ;; a/b = 10^{-e} * a / b1, (b1, 10) = 1
    ;; let n + x = a/b1, x &lt; 1
    (multiple-value-bind (n x)
	(truncate (/ a b1))
      (if (plusp n)
	  (format t &quot;0.~V,&#39;0D&quot; e n)
	(format t &quot;0.~V@{0~}&quot; e t))
      (princ &quot;{&quot;)
      (expand-recurring-part x)
      (princ &quot;}&quot;))))

;; 分母 b1 から循環節の長さを求める。b1 は 10 と互いに素と仮定
(defun rec-length (b1)
  (do ((x (mod 10 b1) (mod (* x 10) b1))
       (c 1 (+ c 1)))
      ((= x 1) c)))

;; x &lt; 1 の循環節を出力
(defun expand-recurring-part (x)
  (let ((len (rec-length (denominator x))) d)
    (dotimes (i len)
      (multiple-value-setq (d x) (truncate (* x 10)))
      (princ d))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/428/addtag/" class="addtag" id="addtag_428">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/428/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/428/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_428"
  >-</span><span
  class="button yellow"
  id="rating_z_428"
  >0</span><span 
  class="button green"
  id="rating_p_428"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/428/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment442">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/172/" target="_top">cats</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/442/">#442</a>(<script language="JavaScript">print_time(new Date("2007/07/10 06:27 GMT"));</script><noscript>2007/07/10 06:27 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">CalcFraction</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="p">-</span><span class="m">8</span><span class="p">));</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">CalcFraction</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">14</span><span class="p">));</span>
  <span class="k">}</span>
  <span class="k">static</span> <span class="kt">string</span> <span class="nf">CalcFraction</span><span class="p">(</span><span class="kt">int</span> <span class="n">num</span><span class="p">,</span> <span class="kt">int</span> <span class="n">den</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">den</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">DivideByZeroException</span><span class="p">();</span>
    <span class="kt">bool</span> <span class="n">bMinus</span> <span class="p">=</span> <span class="p">(</span><span class="n">num</span> <span class="p">&lt;</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">den</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="p">||</span> <span class="p">(</span><span class="n">num</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">den</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">);</span>
    <span class="n">num</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Abs</span><span class="p">(</span><span class="n">num</span><span class="p">);</span> <span class="n">den</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Abs</span><span class="p">(</span><span class="n">den</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">p</span><span class="p">,</span> <span class="n">k</span> <span class="p">=</span> <span class="n">num</span> <span class="p">/</span> <span class="n">den</span><span class="p">;</span>
    <span class="n">num</span> <span class="p">-=</span> <span class="n">k</span> <span class="p">*</span> <span class="n">den</span><span class="p">;</span>
    <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="p">((</span><span class="n">bMinus</span> <span class="p">?</span> <span class="s">&quot;-&quot;</span> <span class="p">:</span> <span class="s">&quot;&quot;</span><span class="p">)</span> <span class="p">+</span> <span class="n">k</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">num</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">sb</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
    <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="sc">&#39;.&#39;</span><span class="p">);</span>
    <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;</span> <span class="n">dic</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">&gt;();</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">num</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
    <span class="k">{</span>
      <span class="n">num</span> <span class="p">*=</span> <span class="m">10</span><span class="p">;</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">dic</span><span class="p">.</span><span class="n">TryGetValue</span><span class="p">(</span><span class="n">num</span><span class="p">,</span> <span class="k">out</span> <span class="n">p</span><span class="p">))</span>
      <span class="k">{</span>
        <span class="n">sb</span><span class="p">.</span><span class="n">Insert</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="s">&quot;{&quot;</span><span class="p">);</span>
        <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
      <span class="k">}</span>
      <span class="n">dic</span><span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="p">=</span> <span class="n">sb</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span>
      <span class="n">k</span> <span class="p">=</span> <span class="n">num</span> <span class="p">/</span> <span class="n">den</span><span class="p">;</span>
      <span class="n">num</span> <span class="p">-=</span> <span class="n">k</span> <span class="p">*</span> <span class="n">den</span><span class="p">;</span>
      <span class="n">sb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">k</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
    <span class="k">}</span>
    <span class="k">return</span> <span class="n">sb</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
  <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/442/addtag/" class="addtag" id="addtag_442">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/442/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/442/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_442"
  >-</span><span
  class="button yellow"
  id="rating_z_442"
  >0</span><span 
  class="button green"
  id="rating_p_442"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/442/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  

  

  

  

  

  
    





<div class="comment" id="comment581">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/101/" target="_top">沢渡 みかげ</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/581/">#581</a>(<script language="JavaScript">print_time(new Date("2007/07/11 14:24 GMT"));</script><noscript>2007/07/11 14:24 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/mathematica/">
	  Mathematica
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>循環小数はRealDigits一発で求まるのですが，題意を満たす文字列を生成するためにずいぶん長いコードを書きました．
もっとスマートに変換する方法もあるかもしれませんが・・・

単に手元で確認するだけであれば，
&lt;&lt; NumberTheory`ContinuedFractions`;
PeriodicForm[RealDigits[3/14]]
のようにすれば，循環部分の数字の上に「_」がついた形で表示されます．
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre>realdigit[a_, b_] :=
    Module[{data, norepeat, repeat, pos, result},
      data = RealDigits[a/b];
      If[VectorQ[Last@First@data],
        norepeat = Drop[First@data, -1];
        repeat = Last@First@data;
        ,
        norepeat = First@data;
        repeat = {};
        ];
      pos = Last@data;
      result = &quot;&quot;;
      If[pos == 0 ,
        result = result &lt;&gt; &quot;0.&quot;,];
      While[Length@norepeat &gt; 0,
        	result = result &lt;&gt; ToString@First@norepeat;
        	norepeat = Drop[norepeat, 1];
        	pos--;
        	If[pos == 0,
          	result = result &lt;&gt; &quot;.&quot;,];
        ];
      If[Length@repeat &gt; 0,
        result = result &lt;&gt; &quot;{&quot;;
        While[Length[repeat] &gt; 0,
          	result = result &lt;&gt; ToString@First@repeat;
          	repeat = Drop[repeat, 1];
          	pos--;
          	If[pos == 0,
            	result = result &lt;&gt; &quot;.&quot;,];
          ];
        result = result &lt;&gt; &quot;}&quot;;
        ,];
      result
      ];
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/581/addtag/" class="addtag" id="addtag_581">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/mathematica/">
		Mathematica
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/581/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/581/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_581"
  >-</span><span
  class="button yellow"
  id="rating_z_581"
  >0</span><span 
  class="button green"
  id="rating_p_581"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/581/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  

  

  

  

  
    





<div class="comment" id="comment645">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/645/">#645</a>(<script language="JavaScript">print_time(new Date("2007/07/12 11:51 GMT"));</script><noscript>2007/07/12 11:51 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/d/">
	  D
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></td><td class="code"><div class="highlight"><pre><span class="k">module</span> <span class="k">do</span><span class="n">ukaku</span>;

<span class="k">private</span> <span class="k">import</span> <span class="n">std</span>.<span class="n">string</span>;
<span class="k">private</span> <span class="k">import</span> <span class="n">std</span>.<span class="n">stdio</span>;
<span class="k">private</span> <span class="k">import</span> <span class="n">std</span>.<span class="n">math</span>;

<span class="k">struct</span> <span class="n">Decimal</span> {
    <span class="k">in</span><span class="n">t</span> <span class="k">in</span><span class="n">t_part</span>;
    <span class="kt">char</span>[] <span class="n">frac_part</span>;
    <span class="k">in</span><span class="n">t</span> <span class="n">period_idx</span>;
}

<span class="n">Decimal</span> <span class="n">rational2Decimal_aux</span>(<span class="k">in</span><span class="n">t</span> <span class="n">a</span>, <span class="k">in</span><span class="n">t</span> <span class="n">b</span>) {
    <span class="kt">char</span>[] <span class="n">ret</span>;
    <span class="kt">char</span>[] <span class="n">mods</span>;
    <span class="kt">char</span> <span class="n">firstp</span> = <span class="mi">1</span>;
    <span class="n">Decimal</span> <span class="n">dec</span>;

    <span class="k">do</span> {
        <span class="k">if</span> (!<span class="n">firstp</span>) <span class="n">mods</span> ~= <span class="n">a</span>;
        <span class="n">a</span> *= <span class="mi">10</span>;
        <span class="n">ret</span> ~= <span class="n">a</span>/<span class="n">b</span>;
        <span class="n">a</span> %= <span class="n">b</span>;
        <span class="n">firstp</span> = <span class="mi">0</span>;
    } <span class="k">while</span> (!( !<span class="n">a</span> || <span class="n">find</span>(<span class="n">mods</span>, <span class="n">a</span>) != -<span class="mi">1</span> ));

    <span class="n">dec</span>.<span class="n">frac_part</span> = <span class="n">ret</span>;
    <span class="n">dec</span>.<span class="n">period_idx</span> = <span class="n">a</span> ? <span class="n">find</span>(<span class="n">ret</span>, <span class="mi">10</span>*<span class="n">a</span>/<span class="n">b</span>) : -<span class="mi">1</span>;
    <span class="k">return</span> <span class="n">dec</span>;
}
    
<span class="n">Decimal</span> <span class="n">rational2Decimal</span>(<span class="k">in</span><span class="n">t</span> <span class="n">a</span>, <span class="k">in</span><span class="n">t</span> <span class="n">b</span>) {
    <span class="n">Decimal</span> <span class="n">dec</span>;
    <span class="n">dec</span> = <span class="n">rational2Decimal_aux</span>(<span class="n">a</span> % <span class="n">b</span>, <span class="n">b</span>);
    <span class="n">dec</span>.<span class="k">in</span><span class="n">t_part</span> = <span class="n">a</span>/<span class="n">b</span>;
    <span class="k">return</span> <span class="n">dec</span>;
}    

<span class="kt">void</span> <span class="n">write_Decimal</span>(<span class="n">Decimal</span> <span class="n">x</span>) {
    <span class="n">writef</span>(<span class="s">&quot;%d.&quot;</span>, <span class="n">x</span>.<span class="k">in</span><span class="n">t_part</span>);
    <span class="k">foreach</span>(<span class="n">i</span>, <span class="n">n</span>; <span class="n">x</span>.<span class="n">frac_part</span>) {
        <span class="k">if</span> (<span class="n">i</span> == <span class="n">x</span>.<span class="n">period_idx</span>) <span class="n">writef</span>(<span class="s">&quot;{&quot;</span>);
        <span class="n">writef</span>(<span class="s">&quot;%d&quot;</span>, <span class="n">n</span>);
    }
    <span class="k">if</span> (<span class="n">x</span>.<span class="n">period_idx</span> != -<span class="mi">1</span>) <span class="n">writef</span>(<span class="s">&quot;}&quot;</span>);
    <span class="n">writefln</span>(<span class="s">&quot;&quot;</span>);
}

<span class="kt">void</span> <span class="n">main</span>() {
    <span class="n">write_Decimal</span>(<span class="n">rational2Decimal</span>(<span class="mi">3</span>,<span class="mi">14</span>));  <span class="c">// 0.2{142857}</span>
    <span class="n">write_Decimal</span>(<span class="n">rational2Decimal</span>(<span class="mi">17</span>,<span class="mi">14</span>)); <span class="c">// 1.2{142857}</span>
    <span class="n">write_Decimal</span>(<span class="n">rational2Decimal</span>(<span class="mi">1</span>,<span class="mi">4</span>));   <span class="c">// 0.25</span>
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/645/addtag/" class="addtag" id="addtag_645">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/d/">
		D
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/645/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/645/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_645"
  >-</span><span
  class="button yellow"
  id="rating_z_645"
  >0</span><span 
  class="button green"
  id="rating_p_645"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/645/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  

  
    





<div class="comment" id="comment857">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/857/">#857</a>(<script language="JavaScript">print_time(new Date("2007/07/14 17:42 GMT"));</script><noscript>2007/07/14 17:42 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>import scala.collection.mutable._
def f(a:Int, b:Int):String = {
  var result = new ListBuffer[Int]
  val mods   = new LinkedHashSet[Int]
  mods += a%b
  def l(v:Int):Int = {
    result += (v*10)/b
    val mod = v*10%b
    if(mods.contains(mod)) mods.indexOf(mod)
    else if(mod == 0) -1 
    else {mods+=mod;l(mod)}
  }
  val i = l(a)
  var p = result.mkString(&quot;&quot;)
  if(i != -1) p = p.substring(0,i)+&quot;{&quot;+p.substring(i)+&quot;}&quot;
  &quot;0.&quot;+p
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/857/addtag/" class="addtag" id="addtag_857">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/857/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/857/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_857"
  >-</span><span
  class="button yellow"
  id="rating_z_857"
  >0</span><span 
  class="button green"
  id="rating_p_857"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/857/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment865">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/865/">#865</a>(<script language="JavaScript">print_time(new Date("2007/07/14 18:51 GMT"));</script><noscript>2007/07/14 18:51 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/emacslisp/">
	  Emacs Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre>(defun %rational-&gt;decimal-calc (a b)
  (let (ret mods)
    (loop
       do
         (setf a (* 10 a))
         (push (floor (/ a b)) ret)
         (setf a (mod a b))
       until
         (or (zerop a) (member a mods))
       do
         (push a mods)
       finally
         (setf ret (nreverse ret)))
    (if (zerop a)
        ret
        (nconc (%insert-list ret (position (floor (/ (* 10 a) b)) ret :from-end t) &quot;{&quot;) &#39;(&quot;}&quot;)))))

(defun %insert-list (list n newelt)
  `(,@(butlast list (- (length list) n)) ,newelt ,@(nthcdr n list)))

(defun rational-&gt;decimal (a b)
  (let* ((int (truncate a b))
         (numerator (% a b))
         (denominator b))
    (concat (format &quot;%d.&quot; int)
            (mapconcat (lambda (x) (format &quot;%s&quot; x))
                       (%rational-&gt;decimal-calc numerator denominator) &quot;&quot;))))

;; (rational-&gt;decimal 3 14)
;; (rational-&gt;decimal 17 14)
;; (rational-&gt;decimal 1 4)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/865/addtag/" class="addtag" id="addtag_865">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/emacslisp/">
		Emacs Lisp
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/865/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/865/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_865"
  >-</span><span
  class="button yellow"
  id="rating_z_865"
  >0</span><span 
  class="button green"
  id="rating_p_865"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/865/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment873">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/873/">#873</a>(<script language="JavaScript">print_time(new Date("2007/07/14 20:48 GMT"));</script><noscript>2007/07/14 20:48 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/lua/">
	  Lua
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nf">rational2Decimal_aux</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
  <span class="n">ret</span> <span class="o">=</span> <span class="p">{}</span>
  <span class="n">mods</span> <span class="o">=</span> <span class="p">{}</span>
  <span class="n">dec</span> <span class="o">=</span> <span class="p">{}</span>
  <span class="n">firstp</span> <span class="o">=</span> <span class="kc">true</span>
  <span class="k">repeat</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">firstp</span> <span class="k">then</span>
      <span class="nf">table.insert</span><span class="p">(</span><span class="n">mods</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="kc">true</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">*</span> <span class="mi">10</span>
    <span class="nf">table.insert</span><span class="p">(</span><span class="n">ret</span><span class="p">,</span> <span class="nf">math.floor</span><span class="p">(</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">))</span>
    <span class="n">a</span> <span class="o">=</span> <span class="n">math</span><span class="p">.</span><span class="n">mod</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
    <span class="n">firstp</span> <span class="o">=</span> <span class="kc">false</span>
  <span class="k">until</span> <span class="n">a</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">or</span> <span class="n">mods</span><span class="p">[</span><span class="n">a</span><span class="p">]</span> <span class="o">==</span> <span class="kc">true</span>
  <span class="n">dec</span><span class="p">.</span><span class="n">frac_part</span> <span class="o">=</span> <span class="n">ret</span>
  <span class="k">if</span> <span class="n">a</span> <span class="o">~=</span> <span class="mi">0</span> <span class="k">then</span>
    <span class="n">dec</span><span class="p">.</span><span class="n">period_idx</span> <span class="o">=</span> <span class="n">position</span><span class="p">(</span><span class="n">ret</span><span class="p">,</span> <span class="nf">math.floor</span><span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">))</span>
  <span class="k">else</span>
    <span class="n">dec</span><span class="p">.</span><span class="n">period_idx</span> <span class="o">=</span> <span class="kc">false</span>
  <span class="k">end</span>
  <span class="k">return</span> <span class="n">dec</span>
<span class="k">end</span>

<span class="k">function</span> <span class="nf">position</span><span class="p">(</span><span class="n">ary</span><span class="p">,</span> <span class="n">elt</span><span class="p">)</span>
  <span class="n">ret</span> <span class="o">=</span> <span class="kc">nil</span>
  <span class="n">table</span><span class="p">.</span><span class="n">foreachi</span><span class="p">(</span><span class="n">ary</span><span class="p">,</span> <span class="n">function</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
                        <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="n">elt</span> <span class="k">then</span>
                          <span class="n">ret</span> <span class="o">=</span> <span class="n">i</span>
                        <span class="k">end</span>
                      <span class="k">end</span><span class="p">)</span>
  <span class="k">return</span> <span class="n">ret</span>
<span class="k">end</span>

<span class="k">function</span> <span class="nf">rational2Decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
  <span class="n">dec</span> <span class="o">=</span> <span class="n">rational2Decimal_aux</span><span class="p">(</span><span class="n">math</span><span class="p">.</span><span class="n">mod</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">),</span> <span class="n">b</span><span class="p">)</span>
  <span class="n">dec</span><span class="p">.</span><span class="n">int_part</span> <span class="o">=</span> <span class="nf">math.floor</span><span class="p">(</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">)</span>
  <span class="k">return</span> <span class="n">dec</span>
<span class="k">end</span>
  
<span class="k">function</span> <span class="nf">write_Decimal</span><span class="p">(</span><span class="n">dec</span><span class="p">)</span>
  <span class="n">str</span> <span class="o">=</span> <span class="nf">string.format</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">%d.&quot;</span><span class="p">,</span> <span class="n">dec</span><span class="p">.</span><span class="n">int_part</span><span class="p">)</span>
  <span class="n">table</span><span class="p">.</span><span class="n">foreachi</span><span class="p">(</span><span class="n">dec</span><span class="p">.</span><span class="n">frac_part</span><span class="p">,</span> <span class="n">function</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
                                <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="n">dec</span><span class="p">.</span><span class="n">period_idx</span> <span class="k">then</span> <span class="n">str</span> <span class="o">=</span> <span class="n">str</span> <span class="p">..</span> <span class="s2">&quot;</span><span class="s">{&quot;</span> <span class="k">end</span>
                                <span class="n">str</span> <span class="o">=</span> <span class="n">str</span> <span class="p">..</span> <span class="nf">string.format</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">%d&quot;</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
                              <span class="k">end</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">dec</span><span class="p">.</span><span class="n">period_idx</span> <span class="k">then</span>
    <span class="n">str</span> <span class="o">=</span> <span class="n">str</span> <span class="p">..</span> <span class="s2">&quot;</span><span class="s">}&quot;</span>
  <span class="k">end</span>
  <span class="nf">print</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
<span class="k">end</span>

<span class="n">write_Decimal</span><span class="p">(</span><span class="n">rational2Decimal</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">14</span><span class="p">))</span>  <span class="c1">-- 0.2{142857}</span>
<span class="n">write_Decimal</span><span class="p">(</span><span class="n">rational2Decimal</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">14</span><span class="p">))</span> <span class="c1">-- 1.2{142857}</span>
<span class="n">write_Decimal</span><span class="p">(</span><span class="n">rational2Decimal</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>   <span class="c1">-- 0.25</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/873/addtag/" class="addtag" id="addtag_873">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/lua/">
		Lua
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/873/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/873/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_873"
  >-</span><span
  class="button yellow"
  id="rating_z_873"
  >0</span><span 
  class="button green"
  id="rating_p_873"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/873/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment895">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/247/" target="_top">ofk</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/895/">#895</a>(<script language="JavaScript">print_time(new Date("2007/07/15 06:01 GMT"));</script><noscript>2007/07/15 06:01 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>（　＾Ï＾）</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">f2d</span><span class="p">(</span><span class="nx">a</span><span class="o">,</span> <span class="nx">b</span><span class="p">){</span>
	<span class="k">function</span> <span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="o">,</span> <span class="nx">b</span><span class="o">,</span> <span class="nx">c</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="k">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="nx">j</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">j</span><span class="o">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span>
			<span class="k">if</span> <span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="nx">b</span> <span class="o">&amp;&amp;</span> <span class="nx">t</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="nx">c</span><span class="p">)</span>
				<span class="k">return</span> <span class="nx">i</span><span class="o">;</span>
		<span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
	<span class="p">}</span>
	<span class="k">function</span> <span class="nx">join</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">var</span> <span class="nx">r</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">;</span>
		<span class="k">for</span> <span class="p">(</span><span class="k">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="nx">j</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">j</span><span class="o">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span>
			<span class="nx">r</span> <span class="o">+=</span> <span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span>
		<span class="k">return</span> <span class="nx">r</span><span class="o">;</span>
	<span class="p">}</span>
	<span class="k">var</span> <span class="nx">t</span> <span class="o">=</span> <span class="p">[]</span><span class="o">,</span> <span class="nx">p</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
	<span class="k">while</span> <span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">a</span> <span class="o">&lt;</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
			<span class="nx">a</span> <span class="o">*=</span> <span class="mi">10</span><span class="o">;</span>
			<span class="k">continue</span><span class="o">;</span>
		<span class="p">}</span>
		<span class="k">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span> <span class="o">/</span> <span class="nx">b</span><span class="p">)</span><span class="o">,</span> <span class="nx">d</span> <span class="o">=</span> <span class="nx">a</span> <span class="o">%</span> <span class="nx">b</span><span class="o">;</span>
		<span class="nx">p</span> <span class="o">=</span> <span class="nx">indexOf</span><span class="p">(</span><span class="nx">t</span><span class="o">,</span> <span class="nx">c</span><span class="o">,</span> <span class="nx">d</span><span class="p">);</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">p</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
			<span class="k">break</span><span class="o">;</span>
		<span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">c</span><span class="o">,</span> <span class="nx">d</span><span class="p">]);</span>
		<span class="k">if</span> <span class="p">(</span><span class="nx">d</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
			<span class="k">break</span><span class="o">;</span>
		<span class="nx">a</span> <span class="o">%=</span> <span class="nx">b</span><span class="o">;</span>
	<span class="p">}</span>
	<span class="k">var</span> <span class="nx">r</span> <span class="o">=</span> <span class="s1">&#39;0.&#39;</span><span class="o">;</span>
	<span class="k">if</span> <span class="p">(</span><span class="nx">p</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
		<span class="k">return</span> <span class="nx">r</span> <span class="o">+</span> <span class="nx">join</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="o">,</span> <span class="nx">p</span><span class="p">))</span> <span class="o">+</span> <span class="s1">&#39;{&#39;</span> <span class="o">+</span> <span class="nx">join</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">p</span><span class="p">))</span> <span class="o">+</span> <span class="s1">&#39;}&#39;</span><span class="o">;</span>
	<span class="k">return</span> <span class="nx">r</span> <span class="o">+</span> <span class="nx">join</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">alert</span><span class="p">(</span><span class="nx">f2d</span><span class="p">(</span><span class="mi">3</span><span class="o">,</span> <span class="mi">8</span><span class="p">));</span> <span class="c">// 0.375</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">f2d</span><span class="p">(</span><span class="mi">3</span><span class="o">,</span> <span class="mi">14</span><span class="p">));</span> <span class="c">// 0.2{142857}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/895/addtag/" class="addtag" id="addtag_895">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/895/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/895/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_895"
  >-</span><span
  class="button yellow"
  id="rating_z_895"
  >0</span><span 
  class="button green"
  id="rating_p_895"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/895/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment924">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/924/">#924</a>(<script language="JavaScript">print_time(new Date("2007/07/15 12:54 GMT"));</script><noscript>2007/07/15 12:54 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  書いてて苦しい。リファレンスで頭おかしくなりそうorz
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="k">sub </span><span class="nf">find</span> <span class="p">{</span>
    <span class="k">my</span><span class="p">(</span><span class="nv">$aryref</span><span class="p">,</span> <span class="nv">$elt</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="k">my</span> <span class="nv">$i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span><span class="o">&lt;=</span><span class="nb">length</span><span class="p">(</span><span class="nv">@$aryref</span><span class="p">);</span> <span class="nv">$i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">return</span> <span class="nv">$i</span> <span class="k">if</span> <span class="nv">$elt</span> <span class="o">==</span> <span class="nv">$$aryref</span><span class="p">[</span><span class="nv">$i</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
    
<span class="k">sub </span><span class="nf">rational2Decimal_aux</span> <span class="p">{</span>
    <span class="k">my</span><span class="p">(</span><span class="nv">$a</span><span class="p">,</span> <span class="nv">$b</span><span class="p">)</span><span class="o">=</span><span class="nv">@_</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">@ret</span><span class="o">=</span><span class="p">(),</span> <span class="nv">@mods</span><span class="o">=</span><span class="p">();</span>
    <span class="k">my</span> <span class="nv">$firstp</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

  <span class="n">loop:</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$firstp</span><span class="p">)</span> <span class="p">{</span> <span class="nb">push</span><span class="p">(</span><span class="nv">@mods</span><span class="p">,</span><span class="nv">$a</span><span class="p">);</span> <span class="p">}</span>
    <span class="nv">$a</span> <span class="o">*=</span> <span class="mi">10</span><span class="p">;</span>
    <span class="nb">push</span><span class="p">(</span><span class="nv">@ret</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="nv">$a</span><span class="o">/</span><span class="nv">$b</span><span class="p">));</span>
    <span class="nv">$a</span> <span class="nv">%</span><span class="err">=</span> <span class="err">$</span><span class="nv">b</span><span class="p">;</span>
    <span class="nv">$firstp</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span> <span class="o">!</span><span class="nv">$a</span> <span class="o">||</span> <span class="nb">grep</span><span class="p">({</span><span class="nv">$_</span><span class="o">==</span><span class="nv">$a</span><span class="p">}</span> <span class="nv">@mods</span><span class="p">)))</span> <span class="p">{</span> <span class="nb">goto</span> <span class="n">loop</span> <span class="p">};</span> <span class="c1"># do-while</span>

    <span class="p">{</span><span class="n">frac_part</span> <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">@ret</span><span class="p">,</span>
     <span class="n">period_idx</span> <span class="o">=&gt;</span> <span class="nv">$a</span> <span class="p">?</span> <span class="n">find</span><span class="p">(</span><span class="o">\</span><span class="nv">@ret</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="nv">$a</span><span class="o">/</span><span class="nv">$b</span><span class="p">))</span> <span class="p">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">};</span>
<span class="p">}</span>
    
<span class="k">sub </span><span class="nf">rational2Decimal</span> <span class="p">{</span>
    <span class="k">my</span><span class="p">(</span><span class="nv">$a</span><span class="p">,</span> <span class="nv">$b</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$dec</span> <span class="o">=</span> <span class="n">rational2Decimal_aux</span><span class="p">(</span><span class="nv">$a</span> <span class="nv">%</span> <span class="err">$</span><span class="nv">b</span><span class="p">,</span> <span class="nv">$b</span><span class="p">);</span>
    <span class="nv">$$dec</span><span class="p">{</span><span class="n">int_part</span><span class="p">}</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nv">$a</span><span class="o">/</span><span class="nv">$b</span><span class="p">);</span>
    <span class="nv">$dec</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">write_Decimal</span> <span class="p">{</span>
    <span class="k">my</span> <span class="nv">$x</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="nb">printf</span><span class="p">(</span><span class="s">&quot;%d.&quot;</span><span class="p">,</span> <span class="nv">$$x</span><span class="p">{</span><span class="n">int_part</span><span class="p">});</span>
    <span class="k">my</span> <span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="nv">$n</span> <span class="p">(</span><span class="nv">@</span><span class="p">{</span><span class="nv">$$x</span><span class="p">{</span><span class="n">frac_part</span><span class="p">}})</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">==</span> <span class="nv">$$x</span><span class="p">{</span><span class="n">period_idx</span><span class="p">})</span> <span class="p">{</span> <span class="k">print</span><span class="p">(</span><span class="s">&quot;{&quot;</span><span class="p">);</span> <span class="p">}</span>
        <span class="nb">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="nv">$n</span><span class="p">);</span>
        <span class="nv">$i</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$$x</span><span class="p">{</span><span class="n">period_idx</span><span class="p">}</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="k">print</span><span class="p">(</span><span class="s">&quot;}&quot;</span><span class="p">);</span> <span class="p">}</span>
    <span class="k">print</span><span class="p">(</span><span class="s">&quot;\n&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="n">write_Decimal</span><span class="p">(</span><span class="n">rational2Decimal</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">14</span><span class="p">));</span>  <span class="c1"># 0.2{142857}</span>
<span class="n">write_Decimal</span><span class="p">(</span><span class="n">rational2Decimal</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">14</span><span class="p">));</span> <span class="c1"># 1.2{142857}</span>
<span class="n">write_Decimal</span><span class="p">(</span><span class="n">rational2Decimal</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">));</span>   <span class="c1"># 0.25</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/924/addtag/" class="addtag" id="addtag_924">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/924/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/924/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_924"
  >-</span><span
  class="button yellow"
  id="rating_z_924"
  >0</span><span 
  class="button green"
  id="rating_p_924"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/924/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1318">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1318/">#1318</a>(<script language="JavaScript">print_time(new Date("2007/07/22 02:18 GMT"));</script><noscript>2007/07/22 02:18 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/prolog/">
	  Prolog
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  他のハッシュ使ったのと同じアルゴリズムです。効率を保ったまま独自性が出せないので、悔しい。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre>div0(A,B,R,M):-R is A // B, M is A mod B.
div(A,B,R):-empty_assoc(C),div(A,B,C,D,D,R).
div(0,_,_,Dr,[],Dr).
div(A,_,C,Dh,[&#39;}&#39;],Dr):-get_assoc(A,C,Val),match0(Dh,Val,Dr),!.
div(A,B,C,Dh,[R|Dt],Dr):-A1 is A * 10, div0(A1,B,R,M), put_assoc(A,C,[R|Dt],C1), div(M,B,C1,Dh,Dt,Dr).

match0(D,V,R):-length(D,LenD),length(V,LenV),Len is LenD - LenV, t(Len,D,V,R).
t(0,_,V,[&#39;{&#39;| V]).
t(N,[D|Ds],V,[D|Rs]):-succ(N1,N),t(N1,Ds,V,Rs).

:- div(3,14,X0),concat_atom([&#39;0.&#39;|X0],X),writeln(X).
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1318/addtag/" class="addtag" id="addtag_1318">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/SWI-prolog/">SWI-prolog</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/prolog/">
		Prolog
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1318/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1318/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1318"
  >-</span><span
  class="button yellow"
  id="rating_z_1318"
  >0</span><span 
  class="button green"
  id="rating_p_1318"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/1318/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1358">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1358/">#1358</a>(<script language="JavaScript">print_time(new Date("2007/07/23 02:48 GMT"));</script><noscript>2007/07/23 02:48 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Haskell練習中。頭の中が富豪になってゆくのを感じる…

実行例:
*Main&gt; toFrac 1 91
"0.{010989}"
*Main&gt; toFrac 3 14
"0.2{142857}"
*Main&gt; toFrac 3 83
"0.{03614457831325301204819277108433734939759}"
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre><span class="nv">gen</span> <span class="nv">a</span> <span class="nv">b</span> <span class="nv">qrs</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">divMod</span> <span class="nv">a</span> <span class="nv">b</span> <span class="kr">of</span>
               <span class="p">(</span><span class="nv">q</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">rev_tos</span> <span class="p">((</span><span class="nv">q</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nv">qrs</span><span class="p">)</span>
               <span class="p">(</span><span class="nv">q</span><span class="p">,</span><span class="nv">r</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kr">case</span> <span class="nv">break</span> <span class="p">((</span><span class="nv">r</span><span class="o">==</span><span class="p">)</span> <span class="o">.</span> <span class="nv">snd</span><span class="p">)</span> <span class="nv">qrs</span> <span class="kr">of</span>
                             <span class="p">(</span><span class="kr">_</span><span class="p">,[])</span>  <span class="o">-&gt;</span> <span class="nv">gen</span> <span class="p">(</span><span class="nv">r</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span> <span class="nv">b</span> <span class="p">((</span><span class="nv">q</span><span class="p">,</span><span class="nv">r</span><span class="p">)</span><span class="o">:</span><span class="nv">qrs</span><span class="p">)</span>
                             <span class="p">(</span><span class="nv">rep</span><span class="p">,</span><span class="nv">pre</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">concat</span> <span class="p">[</span><span class="nv">rev_tos</span> <span class="nv">pre</span><span class="p">,</span><span class="s">&quot;{&quot;</span><span class="p">,</span><span class="nv">rev_tos</span> <span class="p">((</span><span class="nv">q</span><span class="p">,</span><span class="nv">r</span><span class="p">)</span><span class="o">:</span><span class="nv">rep</span><span class="p">),</span><span class="s">&quot;}&quot;</span><span class="p">]</span>
  <span class="kr">where</span> <span class="nv">rev_tos</span> <span class="nv">qrs</span> <span class="o">=</span> <span class="nv">concatMap</span> <span class="nv">show</span> <span class="o">$</span> <span class="nv">reverse</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">fst</span> <span class="nv">qrs</span>

<span class="c1">-- Inserts the decimal point. </span>
<span class="nv">toFrac</span> <span class="nv">a</span> <span class="nv">b</span> <span class="o">=</span> <span class="nv">d</span><span class="o">:</span><span class="sc">&#39;.&#39;</span><span class="o">:</span><span class="nv">rest</span>
  <span class="kr">where</span> <span class="nv">d</span><span class="o">:</span><span class="nv">rest</span> <span class="o">=</span> <span class="nv">gen</span> <span class="nv">a</span> <span class="nv">b</span> <span class="p">[]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1358/addtag/" class="addtag" id="addtag_1358">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1358/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1358/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1358"
  >-</span><span
  class="button yellow"
  id="rating_z_1358"
  >0</span><span 
  class="button green"
  id="rating_p_1358"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/1358/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1427">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1427/">#1427</a>(<script language="JavaScript">print_time(new Date("2007/07/24 15:16 GMT"));</script><noscript>2007/07/24 15:16 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>m/(2^x * 5^y) + n/p のように部分分数展開して、割り切れる部分(2^x * 5^y)と純循環小数部分(p)
に分ければフェルマーの小定理(？)で循環部の長さが分かるので、(割り切れる部分の長さ＋循環節の長さ)
が分かります。長さが分かればある程度まとまった桁ごとに(5桁ごととか)小数部分を計算できるので
高速化できるのでは・・・

と、ここまで考えて、任意の倍長整数(多分最大で10^2147483646 mod 2147483647)を扱えるようにしないと
無理では・・・？と思えてきたので断念することにしました。普通に実装しています。

&gt; decimal(1, 7)
[1] "0.{142857}"
&gt; decimal(1, 7*2)
[1] "0.0{714285}"
&gt; decimal(1, 7*2*4)
[1] "0.017{857142}"
&gt; decimal(1, 7*2*4*8)
[1] "0.002232{142857}"
&gt; decimal(1, 7*2*4*8*16)
[1] "0.0001395089{285714}"</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>decimal &lt;- function(a, b){
   int &lt;- paste(a%/%b, &quot;.&quot;, sep=&quot;&quot;)
   num &lt;- a%%b
   mod &lt;- rep(0, b)
   div &lt;- NULL
   i   &lt;- 0
   repeat{
       mod[num] &lt;- (i &lt;- i+1)
       div &lt;- c(div, (num &lt;- num*10)%/%b)
       if((num &lt;- num%%b) == 0){
           return(paste(c(int, div), collapse=&quot;&quot;))
       }
       else if(mod[num]){
           return(paste(c(int, append(div, &quot;{&quot;, after=mod[num]-1),&quot;}&quot;), collapse=&quot;&quot;))
       }
   }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1427/addtag/" class="addtag" id="addtag_1427">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1427/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1427/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1427"
  >-</span><span
  class="button yellow"
  id="rating_z_1427"
  >0</span><span 
  class="button green"
  id="rating_p_1427"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/1427/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1559">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1559/">#1559</a>(<script language="JavaScript">print_time(new Date("2007/07/29 05:54 GMT"));</script><noscript>2007/07/29 05:54 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/lua/">
	  Lua
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nf">decimal</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
  <span class="kd">local</span> <span class="n">r</span><span class="p">,</span><span class="n">t</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">z</span><span class="p">,</span><span class="n">p</span> <span class="o">=</span> <span class="p">{},{},</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span>
  <span class="k">while</span> <span class="n">a</span> <span class="o">&gt;=</span> <span class="n">b</span> <span class="k">do</span>
    <span class="n">b</span><span class="p">,</span><span class="n">z</span> <span class="o">=</span> <span class="n">b</span><span class="o">*</span><span class="mi">10</span><span class="p">,</span><span class="n">z</span><span class="o">+</span><span class="mi">1</span>
  <span class="k">end</span>
  <span class="k">while</span> <span class="n">a</span> <span class="o">~=</span> <span class="mi">0</span> <span class="k">do</span>
    <span class="n">t</span><span class="p">[</span><span class="n">a</span><span class="p">],</span><span class="n">i</span><span class="p">,</span><span class="n">a</span> <span class="o">=</span> <span class="n">i</span><span class="p">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">a</span><span class="o">*</span><span class="mi">10</span>
    <span class="nf">table.insert</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="nf">math.floor</span><span class="p">(</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">))</span>
    <span class="n">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span>
    <span class="k">if</span> <span class="n">t</span><span class="p">[</span><span class="n">a</span><span class="p">]</span> <span class="k">then</span>
      <span class="n">p</span> <span class="o">=</span> <span class="n">t</span><span class="p">[</span><span class="n">a</span><span class="p">]</span>
      <span class="k">break</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="k">if</span> <span class="n">p</span> <span class="k">then</span>
    <span class="n">r</span><span class="p">[</span><span class="n">p</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">{&quot;</span><span class="p">..</span><span class="n">r</span><span class="p">[</span><span class="n">p</span><span class="p">]</span>
    <span class="nf">table.insert</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">}&quot;</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="nf">table.insert</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">z</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">.&quot;</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">z</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">then</span>
    <span class="nf">table.insert</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">0&quot;</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="k">return</span> <span class="nf">table.concat</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
<span class="k">end</span>
<span class="nf">assert</span><span class="p">(</span><span class="n">decimal</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">8</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&quot;</span><span class="s">0.375&quot;</span><span class="p">)</span>
<span class="nf">assert</span><span class="p">(</span><span class="n">decimal</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">14</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&quot;</span><span class="s">0.2{142857}&quot;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1559/addtag/" class="addtag" id="addtag_1559">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/lua/">
		Lua
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1559/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1559/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1559"
  >-</span><span
  class="button yellow"
  id="rating_z_1559"
  >0</span><span 
  class="button green"
  id="rating_p_1559"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/1559/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1705">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/323/" target="_top">tomatsu</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1705/">#1705</a>(<script language="JavaScript">print_time(new Date("2007/08/02 12:23 GMT"));</script><noscript>2007/08/02 12:23 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/pnuts/">
	  Pnuts
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>function getDecimal(a, b){
  nums=list()
  res = StringBuilder(&quot;0.&quot;)
  n = 0
  while (true){
    nums.add(a)
    a *= 10
    res.append(a/b)
    a %= b
    if (a == 0) return string(res)
    if (nums.contains(a)){
      off = nums.indexOf(a) + 2
      return res[0..off-1] + &quot;{&quot; + res[off..] + &quot;}&quot;
    }
  }
}
println(getDecimal(3,14))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1705/addtag/" class="addtag" id="addtag_1705">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/pnuts/">
		Pnuts
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1705/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1705/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1705"
  >-</span><span
  class="button yellow"
  id="rating_z_1705"
  >0</span><span 
  class="button green"
  id="rating_p_1705"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/1705/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1882">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/335/" target="_top">yattom</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1882/">#1882</a>(<script language="JavaScript">print_time(new Date("2007/08/05 15:42 GMT"));</script><noscript>2007/08/05 15:42 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/awk/">
	  awk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ex)
&gt; type test.txt
3 8
3 14
1 3

&gt; gawk -fdiv.awk test.txt
0.375
0.2{142857}
0.{3}

実装は function div (a,b) です。
循環が始まるかどうか調べるのに、
「&lt;a&gt;:&lt;x*b&gt;」という文字列をキーとした配列(ハッシュ)を
使っています。

9行目あたりが煩雑だなあ。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre>function div(a, b,   idx, x, i, result, mod) {
	result = &quot;0.&quot;
	idx = 0
	while(a &gt; 0) {
		a *= 10
		x = int(a / b)
		if((a &quot;:&quot; (x * b)) in mod) {
			i = mod[a &quot;:&quot; (x * b)]
			result = substr(result, 1, i + 2) &quot;{&quot; substr(result, i + 3) &quot;}&quot;
			break
		}
		result = result x
		mod[a &quot;:&quot; (x * b)] = idx
		a -= x * b
		idx++
	}
	return result
}

{
	print div($1, $2)
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/1882/addtag/" class="addtag" id="addtag_1882">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/awk/">
		awk
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1882/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/1882/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1882"
  >-</span><span
  class="button yellow"
  id="rating_z_1882"
  >0</span><span 
  class="button green"
  id="rating_p_1882"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/1882/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment2187">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/228/" target="_top">tell</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/2187/">#2187</a>(<script language="JavaScript">print_time(new Date("2007/08/14 23:42 GMT"));</script><noscript>2007/08/14 23:42 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  2と5以外の素数の法とそれ以外の数の法で生成する
巡回群を見て比べると，結構おもしろいかもしれない

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">rational_to_decimal</span><span class="p">(</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="p">)</span>
  <span class="n">series</span> <span class="o">=</span> <span class="o">[]</span>
  <span class="n">check</span> <span class="o">=</span> <span class="p">{}</span>
  <span class="kp">loop</span> <span class="p">{</span>
    <span class="n">quotient</span><span class="p">,</span> <span class="n">residu</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">divmod</span><span class="p">(</span> <span class="n">b</span> <span class="p">)</span>
    <span class="n">series</span><span class="o">.</span><span class="n">push</span><span class="p">(</span> <span class="n">quotient</span> <span class="p">)</span>
    <span class="k">if</span> <span class="mi">0</span> <span class="o">==</span> <span class="n">residu</span>
      <span class="k">return</span> <span class="s2">&quot;%d.%s&quot;</span> <span class="o">%</span> <span class="o">[</span> <span class="n">series</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="n">series</span><span class="o">[</span> <span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span> <span class="o">]</span> <span class="o">]</span>
    <span class="k">elsif</span> <span class="n">check</span><span class="o">[</span> <span class="n">residu</span> <span class="o">]</span>
      <span class="k">return</span> <span class="s2">&quot;%d.%s{%s}&quot;</span> <span class="o">%</span> <span class="o">[</span> <span class="n">series</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span>
                             <span class="n">series</span><span class="o">[</span> <span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">check</span><span class="o">[</span> <span class="n">residu</span> <span class="o">]</span> <span class="o">]</span><span class="p">,</span>
                             <span class="n">series</span><span class="o">[</span> <span class="n">check</span><span class="o">[</span> <span class="n">residu</span> <span class="o">].</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span> <span class="o">]</span> <span class="o">]</span>
    <span class="k">else</span>
      <span class="n">check</span><span class="o">[</span> <span class="n">residu</span> <span class="o">]</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">length</span>
    <span class="k">end</span>
    <span class="n">a</span> <span class="o">=</span> <span class="n">residu</span> <span class="o">*</span> <span class="mi">10</span>
  <span class="p">}</span>
<span class="k">end</span>

<span class="c1">## テスト</span>

<span class="mi">2</span><span class="o">.</span><span class="n">upto</span><span class="p">(</span> <span class="mi">100</span> <span class="p">)</span> <span class="p">{</span><span class="o">|</span> <span class="n">denominator</span> <span class="o">|</span>
  <span class="mi">1</span><span class="o">.</span><span class="n">upto</span><span class="p">(</span> <span class="n">denominator</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">)</span> <span class="p">{</span><span class="o">|</span> <span class="n">i</span> <span class="o">|</span>
    <span class="nb">puts</span><span class="p">(</span> <span class="s2">&quot;%4d / %4d = %s&quot;</span> <span class="o">%</span> <span class="o">[</span> <span class="n">i</span><span class="p">,</span>
                               <span class="n">denominator</span><span class="p">,</span>
                               <span class="n">rational_to_decimal</span><span class="p">(</span> <span class="n">i</span><span class="p">,</span> <span class="n">denominator</span> <span class="p">)</span><span class="o">]</span> <span class="p">)</span>
  <span class="p">}</span>
  <span class="nb">puts</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/2187/addtag/" class="addtag" id="addtag_2187">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/2187/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/2187/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2187"
  >-</span><span
  class="button yellow"
  id="rating_z_2187"
  >0</span><span 
  class="button green"
  id="rating_p_2187"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/2187/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  
    





<div class="comment" id="comment6144">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/6144/">#6144</a>(<script language="JavaScript">print_time(new Date("2008/04/05 14:23 GMT"));</script><noscript>2008/04/05 14:23 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ウサギとカメによる循環検出アルゴリズム
Floyd's cycle-finding algorithm（"tortoise and the hare" algorithm）
http://en.wikipedia.org/wiki/Floyd's_cycle-finding_algorithm
を使った方法。

計算オーダーは小数の長さの線形オーダーのはず。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Char</span>

<span class="c1">-- 余り列から循環部を探す</span>
<span class="c1">-- (A) ウサギは一つ飛ばしで進む</span>
<span class="c1">-- (B) カメと同時観察</span>
<span class="c1">-- (C) ウサギが 0 を見つけるか循環してカメと出会うまで待つ</span>
<span class="c1">-- (D) カメに循環部を見てきてもらう</span>

<span class="nv">cyclePart</span> <span class="nv">xs</span> <span class="o">=</span> <span class="kr">if</span> <span class="p">(</span><span class="nv">d</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
  <span class="kr">then</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span>
  <span class="kr">else</span> <span class="nv">c</span><span class="o">:</span> <span class="p">(</span><span class="nv">takeWhile</span> <span class="p">(</span><span class="o">/=</span> <span class="nv">c</span><span class="p">)</span> <span class="o">$</span> <span class="nv">fst</span> <span class="o">$</span> <span class="nv">unzip</span> <span class="nv">ys</span><span class="p">)</span>  <span class="kr">where</span>  <span class="c1">-- (D) </span>
  <span class="p">((</span><span class="nv">c</span><span class="p">,</span><span class="nv">d</span><span class="p">)</span><span class="o">:</span><span class="nv">ys</span><span class="p">)</span> <span class="o">=</span> <span class="nv">dropWhile</span> <span class="p">(</span><span class="o">\</span><span class="p">(</span><span class="nv">a</span><span class="p">,</span><span class="nv">b</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">b</span> <span class="o">/=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nv">b</span> <span class="o">/=</span> <span class="nv">a</span><span class="p">)</span> <span class="c1">-- (C)</span>
    <span class="o">$</span> <span class="nv">zip</span> <span class="nv">xs</span>                                          <span class="c1">-- (B)</span>
    <span class="o">$</span> <span class="nv">map</span> <span class="nv">head</span> <span class="o">$</span> <span class="nv">iterate</span> <span class="p">(</span><span class="nv">drop</span> <span class="mi">2</span><span class="p">)</span> <span class="o">$</span> <span class="nv">tail</span> <span class="nv">xs</span>           <span class="c1">-- (A)</span>

<span class="c1">-- (E) 商列と余り列</span>
<span class="c1">-- (F) 余り列の循環部</span>
<span class="c1">-- (G) 循環部の前までの長さ</span>
<span class="c1">-- (H) 商列を循環部以前と以降にわける</span>
<span class="c1">-- (I) 商列の循環部</span>
<span class="c1">--     qs3 = take (length rcycle) qs2 を zipWith を使って書いた</span>

<span class="nv">toDicimal</span> <span class="nv">m</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">show</span> <span class="nv">q0</span> <span class="o">++</span> <span class="s">&quot;.&quot;</span> <span class="o">++</span> <span class="nv">intsToStr</span> <span class="nv">qs1</span> <span class="o">++</span> <span class="nv">cyc</span>  <span class="kr">where</span>
  <span class="p">(</span><span class="nv">q0</span><span class="p">,</span><span class="nv">m&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="nv">divMod</span> <span class="nv">m</span> <span class="nv">n</span>
  <span class="p">(</span><span class="kr">_</span><span class="o">:</span><span class="nv">qs</span><span class="p">,</span><span class="nv">rs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">unzip</span>
    <span class="o">$</span> <span class="nv">iterate</span> <span class="p">((`</span><span class="nv">divMod</span><span class="p">`</span> <span class="nv">n</span><span class="p">)</span><span class="o">.</span><span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="p">)</span><span class="o">.</span><span class="nv">snd</span><span class="p">)</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nv">m&#39;</span><span class="p">)</span>         <span class="c1">-- (E)</span>
  <span class="nv">rcycle</span> <span class="o">=</span> <span class="nv">cyclePart</span> <span class="nv">rs</span>                               <span class="c1">-- (F)</span>
  <span class="nv">len</span> <span class="o">=</span> <span class="nv">length</span> <span class="o">$</span> <span class="nv">takeWhile</span> <span class="p">(`</span><span class="nv">notElem</span><span class="p">`</span> <span class="nv">rcycle</span><span class="p">)</span> <span class="nv">rs</span>      <span class="c1">-- (G)</span>
  <span class="p">(</span><span class="nv">qs1</span><span class="p">,</span><span class="nv">qs2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">splitAt</span> <span class="nv">len</span> <span class="nv">qs</span>                          <span class="c1">-- (H)</span>
  <span class="nv">cyc</span> <span class="o">=</span> <span class="kr">if</span> <span class="p">(</span><span class="nv">rcycle</span> <span class="o">==</span> <span class="p">[</span><span class="mi">0</span><span class="p">])</span>
    <span class="kr">then</span> <span class="s">&quot;&quot;</span>
    <span class="kr">else</span> <span class="s">&quot;{&quot;</span> <span class="o">++</span> <span class="nv">intsToStr</span> <span class="nv">qs3</span> <span class="o">++</span> <span class="s">&quot;}&quot;</span>  <span class="kr">where</span>
      <span class="nv">qs3</span> <span class="o">=</span> <span class="nv">zipWith</span> <span class="nv">const</span> <span class="nv">qs2</span> <span class="nv">rcycle</span>                  <span class="c1">-- (I)</span>
  <span class="nv">intsToStr</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">intToDigit</span>

<span class="cm">{-</span>
<span class="cm">&gt; toDicimal 3 14</span>
<span class="cm">0.2{142857}</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/6144/addtag/" class="addtag" id="addtag_6144">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/6144/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/6144/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6144"
  >-</span><span
  class="button yellow"
  id="rating_z_6144"
  >0</span><span 
  class="button green"
  id="rating_p_6144"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/6144/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/6144/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment6148">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/6148/">#6148</a>(<script language="JavaScript">print_time(new Date("2008/04/06 16:32 GMT"));</script><noscript>2008/04/06 16:32 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ウサギとカメによる循環検出アルゴリズム
Floyd's cycle-finding algorithm（"tortoise and the hare" algorithm）
http://en.wikipedia.org/wiki/Floyd's_cycle-finding_algorithm
を使った方法。

前回のは上記のアルゴリズム通りに書いていなかった
（計算コストも線形オーダーになっていなかった）
ので書き直し。今度こそ。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Char</span>

<span class="c1">-- 余り列からμ（循環部より前の長さ）とλ（循環部の長さ）を求める</span>
<span class="c1">-- (A) ウサギは一つ飛ばしで進む</span>
<span class="c1">-- (B) カメとウサギを同時観察</span>
<span class="c1">-- (C) ウサギが 0 を見つけるか循環してカメと出会うまで待つ</span>
<span class="c1">-- (D) mu はμ</span>
<span class="c1">-- (E) lm はμ＋λ</span>

<span class="nv">muLam</span> <span class="nv">xs</span> <span class="o">=</span> <span class="kr">if</span> <span class="p">(</span><span class="nv">d</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
  <span class="kr">then</span> <span class="p">(</span><span class="nv">length</span> <span class="o">$</span> <span class="nv">takeWhile</span> <span class="p">(</span><span class="o">/=</span> <span class="mi">0</span><span class="p">)</span> <span class="nv">xs</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
  <span class="kr">else</span> <span class="p">(</span><span class="nv">mu</span><span class="p">,</span> <span class="nv">lm</span><span class="o">-</span><span class="nv">mu</span><span class="p">)</span> <span class="kr">where</span>
  <span class="nv">ys</span><span class="o">@</span><span class="p">((</span><span class="kr">_</span><span class="p">,</span><span class="nv">d</span><span class="p">)</span><span class="o">:</span><span class="kr">_</span><span class="p">)</span> <span class="o">=</span> <span class="nv">dropWhile</span> <span class="p">(</span><span class="o">\</span><span class="p">(</span><span class="nv">a</span><span class="p">,</span><span class="nv">b</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">b</span> <span class="o">/=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nv">b</span> <span class="o">/=</span> <span class="nv">a</span><span class="p">)</span> <span class="c1">-- (C)</span>
    <span class="o">$</span> <span class="nv">zip</span> <span class="p">(</span><span class="nv">tail</span> <span class="nv">xs</span><span class="p">)</span>                                     <span class="c1">-- (B)</span>
    <span class="o">$</span> <span class="nv">map</span> <span class="nv">head</span> <span class="o">$</span> <span class="nv">tail</span> <span class="o">$</span> <span class="nv">iterate</span> <span class="p">(</span><span class="nv">drop</span> <span class="mi">2</span><span class="p">)</span> <span class="nv">xs</span>             <span class="c1">-- (A)</span>
  <span class="p">(</span><span class="kr">_</span><span class="p">,(</span><span class="nv">c</span><span class="p">,</span><span class="kr">_</span><span class="p">,</span><span class="nv">mu</span><span class="p">)</span><span class="o">:</span><span class="nv">zs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">span</span> <span class="p">(</span><span class="o">\</span><span class="p">(</span><span class="nv">a</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="kr">_</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">a</span> <span class="o">/=</span> <span class="nv">b</span><span class="p">)</span>           <span class="c1">-- (D)</span>
    <span class="o">$</span> <span class="nv">zip3</span> <span class="nv">xs</span> <span class="p">(</span><span class="nv">fst</span> <span class="o">$</span> <span class="nv">unzip</span> <span class="nv">ys</span><span class="p">)</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="p">]</span>
  <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="kr">_</span><span class="p">,</span><span class="nv">lm</span><span class="p">)</span> <span class="o">=</span> <span class="nv">head</span> <span class="o">$</span> <span class="nv">dropWhile</span> <span class="p">(</span><span class="o">\</span><span class="p">(</span><span class="nv">a</span><span class="p">,</span><span class="kr">_</span><span class="p">,</span><span class="kr">_</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">a</span> <span class="o">/=</span> <span class="nv">c</span><span class="p">)</span> <span class="nv">zs</span>   <span class="c1">-- (E)</span>
 
<span class="c1">-- (F) 商列と余り列</span>
<span class="c1">-- (G) 循環部の前までの長さと循環部の長さ</span>
<span class="c1">-- (H) 商列を循環部以前と以降にわける</span>
<span class="c1">-- (I) 商列の循環部</span>

<span class="nv">toDicimal</span> <span class="nv">m</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">show</span> <span class="nv">q0</span> <span class="o">++</span> <span class="s">&quot;.&quot;</span> <span class="o">++</span> <span class="nv">intsToStr</span> <span class="nv">qs1</span> <span class="o">++</span> <span class="nv">cyc</span>  <span class="kr">where</span>
  <span class="p">(</span><span class="nv">q0</span><span class="p">,</span><span class="nv">m&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="nv">divMod</span> <span class="nv">m</span> <span class="nv">n</span>
  <span class="p">(</span><span class="kr">_</span><span class="o">:</span><span class="nv">qs</span><span class="p">,</span><span class="nv">rs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">unzip</span>
    <span class="o">$</span> <span class="nv">iterate</span> <span class="p">((`</span><span class="nv">divMod</span><span class="p">`</span> <span class="nv">n</span><span class="p">)</span><span class="o">.</span><span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="p">)</span><span class="o">.</span><span class="nv">snd</span><span class="p">)</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nv">m&#39;</span><span class="p">)</span>     <span class="c1">-- (F)</span>
  <span class="p">(</span><span class="nv">mu</span><span class="p">,</span><span class="nv">lam</span><span class="p">)</span> <span class="o">=</span> <span class="nv">muLam</span> <span class="nv">rs</span>                             <span class="c1">-- (G)</span>
  <span class="p">(</span><span class="nv">qs1</span><span class="p">,</span><span class="nv">qs2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">splitAt</span> <span class="nv">mu</span> <span class="nv">qs</span>                       <span class="c1">-- (H)</span>
  <span class="nv">cyc</span> <span class="o">=</span> <span class="kr">if</span> <span class="p">(</span><span class="nv">lam</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
    <span class="kr">then</span> <span class="s">&quot;&quot;</span>
    <span class="kr">else</span> <span class="s">&quot;{&quot;</span> <span class="o">++</span> <span class="nv">intsToStr</span> <span class="p">(</span><span class="nv">take</span> <span class="nv">lam</span> <span class="nv">qs2</span><span class="p">)</span> <span class="o">++</span> <span class="s">&quot;}&quot;</span>   <span class="c1">-- (I)</span>
  <span class="nv">intsToStr</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">intToDigit</span>

<span class="cm">{-</span>
<span class="cm">&gt; toDicimal 3 14</span>
<span class="cm">0.2{142857}</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/6148/addtag/" class="addtag" id="addtag_6148">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/6148/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/6148/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6148"
  >-</span><span
  class="button yellow"
  id="rating_z_6148"
  >0</span><span 
  class="button green"
  id="rating_p_6148"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/6144/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/6148/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/6148/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/6148/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment6175">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/6175/">#6175</a>(<script language="JavaScript">print_time(new Date("2008/04/14 09:08 GMT"));</script><noscript>2008/04/14 09:08 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>http://en.wikipedia.org/wiki/Floyd's_cycle-finding_algorithm
に書いてあったもう一つの循環検出アルゴリズム
「Brent のアルゴリズム」を使ったバージョン。

Brent によるとこの循環検出方法は Floyd の方法より平均で約３６％速いそうです。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">List</span> <span class="p">(</span><span class="nv">unfoldr</span><span class="p">,</span><span class="nv">findIndex</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Monad</span> <span class="p">(</span><span class="nv">msum</span><span class="p">)</span>

<span class="cm">{-</span>
<span class="cm">余り列からμ（循環部より前の長さ）とλ（循環部の長さ）を求める</span>

<span class="cm">(A) xs を１個、２個、４個、８個・・・からなる区間に分ける。</span>
<span class="cm">  例えば xs = [1..] だったら [[1],[2,3],[4,5,6,7],..] に分けるように。</span>
<span class="cm">  （本当はさらにもうちょっと加工している）</span>
<span class="cm">(B) 各区間で先頭の値と同じものが区間中にあるか検索する</span>
<span class="cm">(C) 最初に見つかった検索成功情報を取ってくる。</span>
<span class="cm">  成功情報は Just i の形で i は λ-1 に等しい。</span>
<span class="cm">(D) インデックスを Just の中から取り出し１加える。</span>
<span class="cm">(E) λステップ進んだ位置とスタート位置から同時に進む（カウンタ付き）。</span>
<span class="cm">(F) 循環して出会うまで待つ。</span>
<span class="cm">-}</span>

<span class="nv">muLam</span> <span class="nv">xs</span> <span class="o">=</span> <span class="p">(</span><span class="nv">mu</span><span class="p">,</span> <span class="kr">if</span> <span class="p">(</span><span class="nv">d</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="kr">then</span> <span class="mi">0</span> <span class="kr">else</span> <span class="nv">lam</span><span class="p">)</span> <span class="kr">where</span>
  <span class="nv">ys</span> <span class="o">=</span> <span class="nv">unfoldr</span> <span class="nv">f</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span>                                         <span class="c1">-- (A)</span>
  <span class="nv">f</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">zs</span><span class="p">)</span> <span class="o">=</span> <span class="n">Just</span> <span class="p">(</span><span class="nv">splitAt</span> <span class="mi">1</span> <span class="nv">zs1</span><span class="p">,</span> <span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nv">m</span><span class="p">,</span><span class="nv">zs2</span><span class="p">))</span> <span class="kr">where</span>
    <span class="p">(</span><span class="nv">zs1</span><span class="p">,</span><span class="nv">zs2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">splitAt</span> <span class="nv">m</span> <span class="nv">zs</span>
  <span class="nv">lam</span> <span class="o">=</span> <span class="nv">maybe</span> <span class="mi">0</span> <span class="p">(</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>                                            <span class="c1">-- (D)</span>
    <span class="o">$</span> <span class="nv">msum</span>                                                      <span class="c1">-- (C)</span>
    <span class="o">$</span> <span class="nv">zipWith</span> <span class="p">(</span><span class="o">\</span><span class="p">([</span><span class="nv">a</span><span class="p">],</span><span class="nv">as</span><span class="p">)</span> <span class="p">([</span><span class="nv">b</span><span class="p">],</span><span class="kr">_</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">findIndex</span> <span class="p">(</span><span class="o">==</span><span class="nv">a</span><span class="p">)</span> <span class="p">(</span><span class="nv">as</span><span class="o">++</span><span class="p">[</span><span class="nv">b</span><span class="p">]))</span>  <span class="c1">-- (B)</span>
        <span class="nv">ys</span> <span class="p">(</span><span class="nv">tail</span> <span class="nv">ys</span><span class="p">)</span>
  <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="nv">d</span><span class="p">,</span><span class="nv">mu</span><span class="p">)</span> <span class="o">=</span> <span class="nv">head</span> <span class="o">$</span> <span class="nv">dropWhile</span> <span class="p">(</span><span class="o">\</span><span class="p">(</span><span class="nv">a</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="kr">_</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">a</span><span class="o">/=</span><span class="nv">b</span><span class="p">)</span>                <span class="c1">-- (F)</span>
    <span class="o">$</span> <span class="nv">zip3</span> <span class="nv">xs</span> <span class="p">(</span><span class="nv">drop</span> <span class="nv">lam</span> <span class="nv">xs</span><span class="p">)</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="p">]</span>                               <span class="c1">-- (E)</span>

<span class="nv">toDecimal</span> <span class="nv">m</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">show</span> <span class="nv">q0</span> <span class="o">++</span> <span class="s">&quot;.&quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">qs1</span> <span class="o">&gt;&gt;=</span> <span class="nv">show</span><span class="p">)</span> <span class="o">++</span> <span class="nv">cyc</span>  <span class="kr">where</span>
  <span class="p">(</span><span class="nv">q0</span><span class="p">,</span><span class="nv">m&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="nv">divMod</span> <span class="nv">m</span> <span class="nv">n</span>
  <span class="p">(</span><span class="kr">_</span><span class="o">:</span><span class="nv">qs</span><span class="p">,</span><span class="nv">rs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">unzip</span> <span class="o">$</span> <span class="nv">iterate</span> <span class="p">((`</span><span class="nv">divMod</span><span class="p">`</span> <span class="nv">n</span><span class="p">)</span><span class="o">.</span><span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="p">)</span><span class="o">.</span><span class="nv">snd</span><span class="p">)</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nv">m&#39;</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">mu</span><span class="p">,</span><span class="nv">lam</span><span class="p">)</span> <span class="o">=</span> <span class="nv">muLam</span> <span class="nv">rs</span>
  <span class="p">(</span><span class="nv">qs1</span><span class="p">,</span><span class="nv">qs2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">splitAt</span> <span class="nv">mu</span> <span class="nv">qs</span>
  <span class="nv">cyc</span> <span class="o">|</span> <span class="nv">lam</span> <span class="o">==</span> <span class="mi">0</span>  <span class="o">=</span> <span class="s">&quot;&quot;</span>
      <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">=</span> <span class="s">&quot;{&quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">take</span> <span class="nv">lam</span> <span class="nv">qs2</span> <span class="o">&gt;&gt;=</span> <span class="nv">show</span><span class="p">)</span> <span class="o">++</span> <span class="s">&quot;}&quot;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/6175/addtag/" class="addtag" id="addtag_6175">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/6175/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/6175/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6175"
  >-</span><span
  class="button yellow"
  id="rating_z_6175"
  >0</span><span 
  class="button green"
  id="rating_p_6175"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/6148/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/6175/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/6175/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  
    





<div class="comment" id="comment6173">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/6173/">#6173</a>(<script language="JavaScript">print_time(new Date("2008/04/12 07:48 GMT"));</script><noscript>2008/04/12 07:48 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>数学的な性質を使ったバージョン。
やっていることは kozimaさんの #428 とほとんど同じです。

golf的なところ

・(1+r0%n) と１加えてから計算を進め最後に (tail $ show q1) と
  結果の文字列を tail して先頭の「１」をとることにより循環部より
  前部分のリーディング０の生成処理。
・find ((/=r2).snd) [dM (10*r)] 
  は
  if (b /= r2) then Just (a,b) else Nothing where (a,b) = dM (10*r)
  の意。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Ratio</span>
<span class="kr">import</span> <span class="n">List</span>

<span class="nv">toDecimal</span> <span class="nv">m</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">show</span> <span class="nv">q0</span> <span class="o">++</span> <span class="s">&quot;.&quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">tail</span> <span class="o">$</span> <span class="nv">show</span> <span class="nv">q1</span><span class="p">)</span> <span class="o">++</span> <span class="nv">cyc</span>  <span class="kr">where</span>
  <span class="p">(</span><span class="nv">q0</span><span class="p">,</span><span class="nv">r0</span><span class="p">)</span> <span class="o">=</span> <span class="nv">divMod</span> <span class="nv">m</span> <span class="nv">n</span>
  <span class="nv">x</span> <span class="o">=</span> <span class="nv">until</span> <span class="p">((</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="nv">gcd</span> <span class="mi">10</span><span class="o">.</span><span class="nv">denominator</span><span class="p">)</span> <span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="p">)</span> <span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="nv">r0</span><span class="o">%</span><span class="nv">n</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">m&#39;</span><span class="p">,</span><span class="nv">n&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">numerator</span> <span class="nv">x</span><span class="p">,</span> <span class="nv">denominator</span> <span class="nv">x</span><span class="p">)</span>
  <span class="nv">dM</span> <span class="o">=</span> <span class="p">(`</span><span class="nv">divMod</span><span class="p">`</span> <span class="nv">n&#39;</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">q1</span><span class="p">,</span><span class="nv">r1</span><span class="p">)</span> <span class="o">=</span> <span class="nv">dM</span> <span class="nv">m&#39;</span>
  <span class="nv">cyc</span> <span class="o">|</span> <span class="nv">n&#39;</span> <span class="o">==</span> <span class="mi">1</span>   <span class="o">=</span> <span class="s">&quot;&quot;</span>
      <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">=</span> <span class="s">&quot;{&quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">rs</span> <span class="o">&gt;&gt;=</span> <span class="nv">show</span><span class="p">)</span> <span class="o">++</span> <span class="s">&quot;}&quot;</span>  <span class="kr">where</span>
          <span class="nv">rs</span> <span class="o">=</span> <span class="nv">q2</span><span class="o">:</span> <span class="nv">unfoldr</span> <span class="nv">f</span> <span class="nv">r2</span>  <span class="kr">where</span>
            <span class="p">(</span><span class="nv">q2</span><span class="p">,</span><span class="nv">r2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">dM</span> <span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="nv">r1</span><span class="p">)</span>
            <span class="nv">f</span> <span class="nv">r</span> <span class="o">=</span> <span class="nv">find</span> <span class="p">((</span><span class="o">/=</span><span class="nv">r2</span><span class="p">)</span><span class="o">.</span><span class="nv">snd</span><span class="p">)</span> <span class="p">[</span><span class="nv">dM</span> <span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="nv">r</span><span class="p">)]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/6173/addtag/" class="addtag" id="addtag_6173">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/6173/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/6173/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6173"
  >-</span><span
  class="button yellow"
  id="rating_z_6173"
  >0</span><span 
  class="button green"
  id="rating_p_6173"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/6173/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment8166">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/973/" target="_top">taninsw</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/8166/">#8166</a>(<script language="JavaScript">print_time(new Date("2008/12/14 06:23 GMT"));</script><noscript>2008/12/14 06:23 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>結構迷いました。</p>
<p>initsを使ったところがトリックーというか意味不明に見えるかもしれませんが、ちゃんと答は返します。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">List</span>

<span class="nv">fraction</span> <span class="nv">n</span> <span class="nv">d</span> <span class="o">=</span> <span class="nv">iterate</span> <span class="nv">f</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nv">n</span><span class="p">)</span>
  <span class="kr">where</span> <span class="nv">f</span> <span class="p">(</span><span class="nv">a</span><span class="p">,</span><span class="nv">b</span><span class="p">)</span> <span class="o">=</span> <span class="nv">divMod</span> <span class="p">(</span><span class="nv">b</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span> <span class="nv">d</span> 

<span class="nv">fractionToStr</span> <span class="nv">n</span> <span class="nv">d</span> <span class="o">=</span> <span class="kr">let</span> <span class="nv">frac</span>        <span class="o">=</span> <span class="nv">fraction</span> <span class="nv">n</span> <span class="nv">d</span>
                        <span class="nv">chopped</span>     <span class="o">=</span> <span class="nv">tail</span> <span class="o">$</span> <span class="nv">footChopped</span> <span class="nv">frac</span>
                        <span class="nv">cHead</span>       <span class="o">=</span> <span class="nv">cyclingHead</span> <span class="nv">frac</span>
                    <span class="kr">in</span>  <span class="kr">if</span> <span class="nv">cHead</span> <span class="o">==</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="kr">then</span> <span class="s">&quot;0.&quot;</span> <span class="o">++</span> <span class="nv">mkStr</span> <span class="nv">chopped</span>
                                         <span class="kr">else</span> <span class="kr">let</span> <span class="p">(</span><span class="nv">a</span><span class="p">,</span><span class="nv">b</span><span class="p">)</span> <span class="o">=</span> <span class="nv">break</span> <span class="p">(</span><span class="o">==</span><span class="nv">cHead</span><span class="p">)</span> <span class="nv">chopped</span>
                                              <span class="kr">in</span> <span class="s">&quot;0.&quot;</span> <span class="o">++</span> <span class="nv">mkStr</span> <span class="nv">a</span> <span class="o">++</span><span class="s">&quot;[&quot;</span><span class="o">++</span><span class="nv">mkStr</span> <span class="nv">b</span><span class="o">++</span><span class="s">&quot;]&quot;</span>
  <span class="kr">where</span> <span class="nv">mkStr</span> <span class="nv">xs</span> <span class="o">=</span> <span class="p">(</span><span class="nv">concat</span><span class="o">.</span><span class="nv">map</span> <span class="nv">show</span><span class="o">.</span><span class="nv">map</span> <span class="nv">fst</span><span class="p">)</span> <span class="nv">xs</span>


<span class="nv">all_different</span> <span class="nv">xs</span>  <span class="o">=</span> <span class="nv">nub</span> <span class="nv">xs</span>  <span class="o">==</span> <span class="nv">xs</span>
<span class="nv">dontHaveZero</span>  <span class="nv">xs</span>  <span class="o">=</span> <span class="nv">all</span> <span class="p">(</span><span class="o">/=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span>  <span class="nv">xs</span>

<span class="nv">footChopped</span>  <span class="nv">fraction</span> <span class="o">=</span> <span class="nv">last</span> <span class="o">$</span> <span class="nv">takeWhile</span> <span class="p">(</span><span class="o">\</span><span class="nv">x</span><span class="o">-&gt;</span><span class="nv">all_different</span> <span class="nv">x</span> <span class="o">&amp;&amp;</span> <span class="nv">dontHaveZero</span> <span class="nv">x</span><span class="p">)</span> <span class="o">$</span> <span class="nv">tail</span> <span class="o">$</span> <span class="nv">inits</span> <span class="o">$</span> <span class="nv">fraction</span>

<span class="nv">cyclingHead</span>  <span class="nv">fraction</span> <span class="o">=</span> <span class="nv">last</span> <span class="o">$</span> <span class="nv">head</span> <span class="o">$</span>  <span class="nv">dropWhile</span> <span class="p">(</span><span class="o">\</span><span class="nv">x</span><span class="o">-&gt;</span><span class="nv">all_different</span> <span class="nv">x</span> <span class="o">&amp;&amp;</span> <span class="nv">dontHaveZero</span> <span class="nv">x</span><span class="p">)</span><span class="o">$</span> 
                        <span class="nv">tail</span> <span class="o">$</span> <span class="nv">inits</span> <span class="o">$</span> <span class="nv">fraction</span>

<span class="cm">{-</span>
<span class="cm">*Main&gt; fractionToStr 3 14</span>
<span class="cm">&quot;0.2[142857]&quot;</span>
<span class="cm">*Main&gt; fractionToStr 3 8</span>
<span class="cm">&quot;0.375&quot;</span>
<span class="cm">*Main&gt; fractionToStr 2 125</span>
<span class="cm">&quot;0.016&quot;</span>
<span class="cm">*Main&gt; fractionToStr 1 3</span>
<span class="cm">&quot;0.[3]&quot;</span>
<span class="cm">*Main&gt; fractionToStr 1240 24090</span>
<span class="cm">&quot;0.[05147364]&quot;</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/8166/addtag/" class="addtag" id="addtag_8166">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/8166/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/8166/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8166"
  >-</span><span
  class="button yellow"
  id="rating_z_8166"
  >0</span><span 
  class="button green"
  id="rating_p_8166"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/8166/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8505">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/856/" target="_top">fumokmm</a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/8505/">#8505</a>(<script language="JavaScript">print_time(new Date("2009/02/15 07:26 GMT"));</script><noscript>2009/02/15 07:26 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>筆算のやり方を忠実に(？)再現してみました。

小数点第100位まで求めています。(35行目)
それ以上は...と表示させて終了するように
してあります。(四捨五入なし)
</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20100619070804/http://ja.wikipedia.org/wiki/%E5%BE%AA%E7%92%B0%E5%B0%8F%E6%95%B0">循環小数 - Wikipedia</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61</pre></td><td class="code"><div class="highlight"><pre>assert recurringDecimal(3, 8)     == &#39;0.375&#39;
assert recurringDecimal(3, 14)    == &#39;0.2{142857}&#39;
assert recurringDecimal(1, 3)     == &#39;0.{3}&#39;
assert recurringDecimal(1, 7)     == &#39;0.{142857}&#39;
assert recurringDecimal(3, 7)     == &#39;0.{428571}&#39;
assert recurringDecimal(269, 111) == &#39;2.{423}&#39;

/**
 * 循環小数に変換
 *     例) 3/14 → 0.2{142857}
 * @param numer 分子
 * @param denom 分母
 * @return 循環小数
 */
def recurringDecimal(int numer, int denom) {
    def rslt = &#39;&#39; &lt;&lt; &#39;&#39; // バッファ
    def remainMap = [:] // 剰余:小数点第n位
    def frac = []       // 小数部

    // とりあえずqとrを求める
    int q = numer / denom // quotient(商)
    int r = numer % denom // remainder(剰余)

    // 整数部を投入
    rslt &lt;&lt; q
    // 剰余が0なら終了
    if (r == 0) {
        return rslt.toString()
    }
    rslt &lt;&lt; &#39;.&#39;
    // 剰余を保持しておく
    remainMap[r] = 0

    // 小数第100位まで繰り返し
    for(digit in 0..&lt;100) {
        // numerをr * 10に置き換えて、q, rを求める
        numer = r * 10
        q = numer / denom
        r = numer % denom
        // 小数部分を追加
           frac &lt;&lt; q
        // 剰余がremainMapに含まれている場合、循環部分を取り出して返却して終了
        if (remainMap.containsKey(r)) {
            def beforeRecurr = frac[0..&lt;remainMap[r]]
            def recurr = frac[remainMap[r]..-1]
            rslt &lt;&lt; beforeRecurr.join() &lt;&lt; &quot;{${recurr.join()}}&quot;
            return rslt.toString()
        }
        // 剰余が0なら終了
        if (r == 0) {
            rslt &lt;&lt; frac.join()
            return rslt.toString()
        }
        // 剰余を保持しておく
        remainMap[r] = digit + 1
    }

    // 既定の小数点桁数を超過
    rslt &lt;&lt; frac.join() &lt;&lt; &#39;...&#39;
    return rslt.toString()
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/8505/addtag/" class="addtag" id="addtag_8505">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/8505/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/8505/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8505"
  >-</span><span
  class="button yellow"
  id="rating_z_8505"
  >0</span><span 
  class="button green"
  id="rating_p_8505"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/8505/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9214">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/759/" target="_top">egtra</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/9214/">#9214</a>(<script language="JavaScript">print_time(new Date("2009/06/21 12:27 GMT"));</script><noscript>2009/06/21 12:27 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>再帰にするぞ、と意気込んだものの、unfold使ったところで力尽きました。BOOST_FOREACHをstd::for_eachにすればもう少しましに思いますが、そうするにはラムダ式が欲しくなります……（今回、ラムダ式は控えました）。</p>
<p>中のBOOST_FOREACHは、有限小数なら有限回（桁数の分だけの回数）で終了します。無限小数の場合を拾ってbreakするコードが加わっているわけです。</p>
<p>VC++2008とg++ 3.4.4でコンパイルできることを確かめてあります。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20100619070804/http://ja.wikipedia.org/wiki/%E5%BE%AA%E7%92%B0%E5%B0%8F%E6%95%B0">循環小数 - Wikipedia</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;map&gt;</span>
<span class="cp">#include &lt;cstdlib&gt;</span>
<span class="cp">#include &lt;boost/foreach.hpp&gt;</span>
<span class="cp">#include &lt;pstade/oven/unfold.hpp&gt;</span>
<span class="cp">#include &lt;pstade/oven/dropped.hpp&gt;</span>
<span class="cp">#include &lt;boost/optional.hpp&gt;</span>
<span class="cp">#include &lt;boost/bind.hpp&gt;</span>

<span class="k">namespace</span> <span class="n">ov</span> <span class="o">=</span> <span class="n">pstade</span><span class="o">::</span><span class="n">oven</span><span class="p">;</span>

<span class="c">// div_tだと別途、比較関数を用意しないとmapに格納できないため、今回はpairのほうが便利。</span>
<span class="k">typedef</span> <span class="n">std</span><span class="o">::</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">div_pair</span><span class="p">;</span>

<span class="c">// 次の1桁と残りの値のpairを返す。</span>
<span class="n">div_pair</span> <span class="n">next_digit</span><span class="p">(</span><span class="n">div_pair</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">denom</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">div_t</span> <span class="n">d</span> <span class="o">=</span> <span class="n">div</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">second</span> <span class="o">*</span> <span class="mi">10</span><span class="p">,</span> <span class="n">denom</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">div_pair</span><span class="p">(</span><span class="n">d</span><span class="p">.</span><span class="n">quot</span><span class="p">,</span> <span class="n">d</span><span class="p">.</span><span class="n">rem</span><span class="p">);</span>
<span class="p">}</span>

<span class="c">// 最後の桁を出力したら、uninitialzed状態を返す。</span>
<span class="c">// なお、無限小数なら uninitialzed状態を返すことは永遠にない。</span>
<span class="n">boost</span><span class="o">::</span><span class="n">optional</span><span class="o">&lt;</span><span class="n">div_pair</span><span class="o">&gt;</span> <span class="n">last_digit_jadge</span><span class="p">(</span><span class="n">div_pair</span> <span class="n">d</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="n">d</span><span class="p">.</span><span class="n">first</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">d</span><span class="p">.</span><span class="n">second</span> <span class="o">==</span> <span class="mi">0</span>
        <span class="o">?</span> <span class="n">boost</span><span class="o">::</span><span class="n">optional</span><span class="o">&lt;</span><span class="n">div_pair</span><span class="o">&gt;</span><span class="p">()</span>
        <span class="o">:</span> <span class="n">d</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">template</span><span class="o">&lt;</span><span class="k">typename</span> <span class="n">Range</span><span class="o">&gt;</span>
<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">expand_digit</span><span class="p">(</span><span class="n">Range</span> <span class="k">const</span><span class="o">&amp;</span> <span class="n">r</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">typedef</span> <span class="n">std</span><span class="o">::</span><span class="n">map</span><span class="o">&lt;</span><span class="n">div_pair</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">rem_map</span><span class="p">;</span>
    <span class="n">rem_map</span> <span class="n">rem</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">s</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">BOOST_FOREACH</span><span class="p">(</span><span class="k">const</span> <span class="n">div_pair</span> <span class="n">d</span><span class="p">,</span> <span class="n">r</span> <span class="o">|</span> <span class="n">ov</span><span class="o">::</span><span class="n">dropped</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">rem_map</span><span class="o">::</span><span class="n">const_iterator</span><span class="p">,</span> <span class="kt">bool</span><span class="o">&gt;</span> <span class="n">res</span> <span class="o">=</span> <span class="n">rem</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">make_pair</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">i</span><span class="p">));</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">res</span><span class="p">.</span><span class="n">second</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c">// 無限小数（循環節2周目突入）の場合</span>
            <span class="n">s</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span> <span class="o">+</span> <span class="n">res</span><span class="p">.</span><span class="n">first</span><span class="o">-&gt;</span><span class="n">second</span><span class="p">,</span> <span class="sc">&#39;{&#39;</span><span class="p">);</span>
            <span class="n">s</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="sc">&#39;}&#39;</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="o">++</span><span class="n">i</span><span class="p">;</span>
        <span class="n">s</span> <span class="o">+=</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">char</span><span class="o">&gt;</span><span class="p">(</span><span class="n">d</span><span class="p">.</span><span class="n">first</span> <span class="o">+</span> <span class="sc">&#39;0&#39;</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">s</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">a</span> <span class="o">&gt;&gt;</span> <span class="n">b</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;0.&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">expand_digit</span><span class="p">(</span><span class="n">ov</span><span class="o">::</span><span class="n">unfold</span><span class="p">(</span>
        <span class="n">div_pair</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">a</span><span class="p">),</span> <span class="n">last_digit_jadge</span><span class="p">,</span> <span class="n">boost</span><span class="o">::</span><span class="n">bind</span><span class="p">(</span><span class="n">next_digit</span><span class="p">,</span> <span class="n">_1</span><span class="p">,</span> <span class="n">b</span><span class="p">)))</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/9214/addtag/" class="addtag" id="addtag_9214">タグ</a>:
	
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/Boost/">Boost</a>
    
    <a href="/web/20100619070804/http://ja.doukaku.org/tag/PStade.Oven/">PStade.Oven</a>
    
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/9214/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/9214/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9214"
  >-</span><span
  class="button yellow"
  id="rating_z_9214"
  >0</span><span 
  class="button green"
  id="rating_p_9214"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100619070804/http://ja.doukaku.org/comment/9214/">
    1
    reply
  </a>

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/9214/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment9215">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/759/" target="_top">egtra</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/9215/">#9215</a>(<script language="JavaScript">print_time(new Date("2009/06/21 12:34 GMT"));</script><noscript>2009/06/21 12:34 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>おまけ: unfold使うようにする前に作った、素朴なバージョン。</p>
<p>next_digit関数相当のコードがforループ内のあちこちに散らばっているのが美しくないですが、コード全体を見渡せば、こっちのほうがよっぽど素直なプログラムだと思います。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;map&gt;</span>
<span class="cp">#include &lt;functional&gt;</span>
<span class="cp">#include &lt;cstdlib&gt;</span>

<span class="c">// div_t を辞書式順序で比較する関数オブジェクト。</span>
<span class="c">// これは、小なり比較ができないと map に格納できないため。</span>
<span class="k">struct</span> <span class="n">div_lex_comp</span> <span class="o">:</span> <span class="n">std</span><span class="o">::</span><span class="n">binary_function</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">div_t</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">div_t</span><span class="p">,</span> <span class="kt">bool</span><span class="o">&gt;</span>
<span class="p">{</span>
    <span class="n">result_type</span> <span class="k">operator</span> <span class="p">()(</span><span class="n">first_argument_type</span> <span class="n">lhs</span><span class="p">,</span> <span class="n">second_argument_type</span> <span class="n">rhs</span><span class="p">)</span> <span class="k">const</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">lhs</span><span class="p">.</span><span class="n">quot</span> <span class="o">&lt;</span> <span class="n">rhs</span><span class="p">.</span><span class="n">quot</span>
            <span class="o">?</span> <span class="kc">true</span>
            <span class="o">:</span> <span class="n">lhs</span><span class="p">.</span><span class="n">rem</span> <span class="o">&lt;</span> <span class="n">rhs</span><span class="p">.</span><span class="n">rem</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kr">inline</span> <span class="kt">bool</span> <span class="k">operator</span> <span class="o">==</span><span class="p">(</span><span class="k">const</span> <span class="n">div_t</span><span class="o">&amp;</span> <span class="n">lhs</span><span class="p">,</span> <span class="k">const</span> <span class="n">div_t</span><span class="o">&amp;</span> <span class="n">rhs</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="n">lhs</span><span class="p">.</span><span class="n">quot</span> <span class="o">==</span> <span class="n">rhs</span><span class="p">.</span><span class="n">quot</span> <span class="o">&amp;&amp;</span> <span class="n">lhs</span><span class="p">.</span><span class="n">rem</span> <span class="o">==</span> <span class="n">rhs</span><span class="p">.</span><span class="n">rem</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">expand_digit</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">typedef</span> <span class="n">std</span><span class="o">::</span><span class="n">map</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">div_t</span><span class="p">,</span> <span class="kt">int</span><span class="p">,</span> <span class="n">div_lex_comp</span><span class="o">&gt;</span> <span class="n">rem_map</span><span class="p">;</span>
    <span class="n">rem_map</span> <span class="n">rem</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">s</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">a</span> <span class="o">*=</span> <span class="mi">10</span><span class="p">;</span>
        <span class="n">std</span><span class="o">::</span><span class="n">div_t</span> <span class="n">d</span> <span class="o">=</span> <span class="n">div</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">);</span>
        <span class="n">std</span><span class="o">::</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">rem_map</span><span class="o">::</span><span class="n">iterator</span><span class="p">,</span> <span class="kt">bool</span><span class="o">&gt;</span> <span class="n">res</span> <span class="o">=</span> <span class="n">rem</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">make_pair</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">i</span><span class="p">));</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">res</span><span class="p">.</span><span class="n">second</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c">// 無限小数（循環節2周目突入）の場合</span>
            <span class="n">s</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span> <span class="o">+</span> <span class="n">res</span><span class="p">.</span><span class="n">first</span><span class="o">-&gt;</span><span class="n">second</span><span class="p">,</span> <span class="sc">&#39;{&#39;</span><span class="p">);</span>
            <span class="n">s</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="sc">&#39;}&#39;</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">a</span> <span class="o">=</span> <span class="n">d</span><span class="p">.</span><span class="n">rem</span><span class="p">;</span>
        <span class="n">s</span> <span class="o">+=</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">char</span><span class="o">&gt;</span><span class="p">(</span><span class="n">d</span><span class="p">.</span><span class="n">quot</span> <span class="o">+</span> <span class="sc">&#39;0&#39;</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">d</span><span class="p">.</span><span class="n">rem</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="n">s</span><span class="p">;</span> <span class="c">// 有限小数だった場合</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">s</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">a</span> <span class="o">&gt;&gt;</span> <span class="n">b</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;0.&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">expand_digit</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/9215/addtag/" class="addtag" id="addtag_9215">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/9215/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/9215/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9215"
  >-</span><span
  class="button yellow"
  id="rating_z_9215"
  >0</span><span 
  class="button green"
  id="rating_p_9215"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/9214/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100619070804/http://ja.doukaku.org/comment/9215/root/"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/9215/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment9495">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/9495/">#9495</a>(<script language="JavaScript">print_time(new Date("2009/08/20 07:50 GMT"));</script><noscript>2009/08/20 07:50 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/actionscript/">
	  ActionScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>ActionScriptのカバレッジ稼ぎ。</p>
</div>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre>class CalcDecimal
{
    public static function getDecimal(a:int, b:int):String {
        var cache:/*Boolean*/Array = new Array();
        var res:String = &quot;&quot;;
        while (true) {
            cache[a] = true;
            a *= 10;
            res += String(int(a / b));
            a %= b;
            if (a == 0) {
                break;
            }
            if (cache[a]) {
                res = &quot;{&quot; + res + &quot;}&quot;;
                break;
            }
        }
        return &quot;0.&quot; + res;
    }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/9495/addtag/" class="addtag" id="addtag_9495">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/actionscript/">
		ActionScript
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/9495/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/9495/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9495"
  >-</span><span
  class="button yellow"
  id="rating_z_9495"
  >0</span><span 
  class="button green"
  id="rating_p_9495"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/9495/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9761">
  <p class="banner"><a href="/web/20100619070804/http://ja.doukaku.org/user/1129/" target="_top">Lost_dog</a><a href="/web/20100619070804/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/9761/">#9761</a>(<script language="JavaScript">print_time(new Date("2009/12/29 09:02 GMT"));</script><noscript>2009/12/29 09:02 GMT</noscript>)
	
	
	
	[<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Lost_dogです。なんかみなさんは計算量を気にしてコーディングしてるみたいですが、私はHaskellらしさを前面に出すべく、シンプルに書きました…というか、そんな実力がないのでｗ　また今度チャレンジしてみます。</p>
<p>あと、splitAtCycleっていう関数を書きましたが、汎用的な名前に反して、機能はしょぼいです。</p>
<p>小数の循環は、余りが既出の数字になった時点で繰り返しが決定するので、本当にサイクル列を探す必要がないわけです。</p>
<p>やってることは概して#1358のshiroさんと同じかな？と思います。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">List</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">[</span><span class="nv">x</span><span class="p">,</span><span class="nv">y</span><span class="p">]</span> <span class="o">&lt;-</span> <span class="nv">fmap</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">read</span><span class="o">.</span><span class="nv">words</span><span class="p">)</span> <span class="nv">getLine</span>
          <span class="nv">putStrLn</span> <span class="o">$</span> <span class="nv">p</span> <span class="o">$</span> <span class="nv">splitAtCycle</span> <span class="o">$</span> <span class="nv">decimal</span> <span class="nv">x</span> <span class="nv">y</span>

<span class="nv">p</span> <span class="o">::</span> <span class="n">Show</span> <span class="nv">a</span> <span class="o">=&gt;</span> <span class="p">([(</span><span class="nv">a</span><span class="p">,</span><span class="nv">b</span><span class="p">)],[(</span><span class="nv">a</span><span class="p">,</span><span class="nv">c</span><span class="p">)])</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">p</span> <span class="p">(</span><span class="nv">a</span><span class="p">,</span><span class="nv">b</span><span class="p">)</span> <span class="o">=</span> <span class="nv">concat</span> <span class="o">$</span> <span class="nv">delete</span> <span class="s">&quot;{0}&quot;</span> <span class="p">[</span><span class="s">&quot;0.&quot;</span><span class="o">++</span><span class="nv">f</span> <span class="nv">a</span><span class="p">,</span><span class="s">&quot;{&quot;</span><span class="o">++</span><span class="nv">f</span> <span class="nv">b</span><span class="o">++</span><span class="s">&quot;}&quot;</span><span class="p">]</span> <span class="kr">where</span> <span class="nv">f</span> <span class="o">=</span> <span class="p">(</span><span class="o">&gt;&gt;=</span><span class="nv">show</span><span class="o">.</span><span class="nv">fst</span><span class="p">)</span>

<span class="nv">decimal</span> <span class="o">::</span> <span class="n">Integral</span> <span class="nv">a</span> <span class="o">=&gt;</span> <span class="nv">a</span> <span class="o">-&gt;</span> <span class="nv">a</span> <span class="o">-&gt;</span> <span class="p">[(</span><span class="nv">a</span><span class="p">,</span><span class="nv">a</span><span class="p">)]</span>
<span class="nv">decimal</span> <span class="nv">x</span> <span class="nv">y</span> <span class="o">=</span> <span class="nv">p</span> <span class="o">:</span> <span class="nv">decimal</span> <span class="nv">r</span> <span class="nv">y</span> <span class="kr">where</span> <span class="nv">p</span><span class="o">@</span><span class="p">(</span><span class="nv">q</span><span class="p">,</span><span class="nv">r</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="nv">x</span><span class="p">)</span> <span class="p">`</span><span class="nv">divMod</span><span class="p">`</span> <span class="nv">y</span> 

<span class="nv">splitAtCycle</span> <span class="o">::</span> <span class="n">Eq</span> <span class="nv">a</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="nv">a</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">([</span><span class="nv">a</span><span class="p">],[</span><span class="nv">a</span><span class="p">])</span>
<span class="nv">splitAtCycle</span> <span class="nv">xs</span> <span class="o">=</span> <span class="nv">splitAtCycle&#39;</span> <span class="p">[]</span> <span class="nv">xs</span> 
  <span class="kr">where</span> <span class="nv">splitAtCycle&#39;</span> <span class="nv">xs</span> <span class="p">(</span><span class="nv">y</span><span class="o">:</span><span class="nv">ys</span><span class="p">)</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">y</span><span class="p">`</span><span class="nv">elemIndex</span><span class="p">`</span><span class="nv">xs</span> <span class="kr">of</span>
                                    <span class="n">Just</span> <span class="nv">k</span>  <span class="o">-&gt;</span> <span class="nv">splitAt</span> <span class="nv">k</span> <span class="nv">xs</span>
                                    <span class="n">Nothing</span> <span class="o">-&gt;</span> <span class="nv">splitAtCycle&#39;</span> <span class="p">(</span><span class="nv">xs</span><span class="o">++</span><span class="p">[</span><span class="nv">y</span><span class="p">])</span> <span class="nv">ys</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100619070804/http://ja.doukaku.org/comment/9761/addtag/" class="addtag" id="addtag_9761">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100619070804/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100619070804/http://ja.doukaku.org/comment/9761/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100619070804/http://ja.doukaku.org/comment/9761/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9761"
  >-</span><span
  class="button yellow"
  id="rating_z_9761"
  >0</span><span 
  class="button green"
  id="rating_p_9761"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100619070804/http://ja.doukaku.org/9/reply_to/9761/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20100619070804if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20100619070804/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20100619070804/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20100619070804/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20100619070804/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20100619070804/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20100619070804/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20100619070804/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20100619070804/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100619070804/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100619070804/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20100619070804im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20100619070804/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20100619070804/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20100619070804/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20100619070804/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20100619070804/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20100619070804/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20100619070804/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20100619070804/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20100619070804im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20100619070804/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20100619070804/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20100619070804/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20100619070804js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 7:08:04 Jun 19, 2010 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:29:06 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
