
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
魔方分割数
DouKaku? </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20081204132440cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20081204132440cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20081204132440cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20081204132440/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20081204132440/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20081204132440js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20081204132440js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20081204132440js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20081204132440js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app14.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/108\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "4";
var displayMonth = "Dec";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/108/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20081204132440" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080920023417/http://ja.doukaku.org/108/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="20 Sep 2008"><strong>SEP</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 13:24:40 Dec 4, 2008">DEC</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jan
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080920023417/http://ja.doukaku.org/108/nested/" title="2:34:17 Sep 20, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 13:24:40 Dec 4, 2008">4</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20070513180302/http://ja.doukaku.org/108/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="13 May 2007"><strong>2007</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 13:24:40 Dec 4, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20081204132440*/http://ja.doukaku.org/108/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>6 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 4 Dec 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000001_2008:11:001010001001_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20081204132440/http://ja.doukaku.org/">DouKaku?</a><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20081204132440im_/http://ja.doukaku.org/static/image/star_gold.png' alt=challenge>
<a href="/web/20081204132440/http://ja.doukaku.org/108/">魔方分割数</a>
</h2>

    





<div class="comment" id="comment4702">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/154/" target="_top">xsd</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4702/">#4702</a>(<script language="JavaScript">print_time(new Date("2007/12/09 10:26 GMT"));</script><noscript>2007/12/09 10:26 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #7fff7f;">8/8=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  1&nbsp;..&nbsp;N^2までの数をN個の数字の和が等しいN個のグループに分けたいと思います。<br/><br/>たとえば、N=3のときは、<br/>(1)&nbsp;{&nbsp;1,&nbsp;5,&nbsp;9&nbsp;},&nbsp;{&nbsp;2,&nbsp;6,&nbsp;7&nbsp;},&nbsp;{&nbsp;3,&nbsp;4,&nbsp;8&nbsp;}&nbsp;<br/>(2)&nbsp;{&nbsp;1,&nbsp;6,&nbsp;8&nbsp;},&nbsp;{&nbsp;2,&nbsp;4,&nbsp;9&nbsp;},&nbsp;{&nbsp;3,&nbsp;5,&nbsp;7&nbsp;}<br/>の2通りの方法があります。<br/><br/>ここで指定されたNに対して、何通りのグループ分けの方法があるかを数えるプログラムを作ってください。<br/>(何通りかという値だけが出力されればよいのですが、予め計算してある結果を返すのはダメですよ。)<br/>また、N=5を指定したときの実行時間もあわせて教えてください。<br/><br/>なお、数え上げるときの注意として、<br/><br/>・{&nbsp;1,&nbsp;5,&nbsp;9&nbsp;}&nbsp;と&nbsp;{&nbsp;1,&nbsp;9,&nbsp;5&nbsp;}は同じもの<br/><br/>・{&nbsp;1,&nbsp;5,&nbsp;9&nbsp;},&nbsp;{&nbsp;2,&nbsp;6,&nbsp;7&nbsp;},&nbsp;{&nbsp;3,&nbsp;4,&nbsp;8&nbsp;}と<br/>　{&nbsp;1,&nbsp;5,&nbsp;9&nbsp;},&nbsp;{&nbsp;3,&nbsp;4,&nbsp;8&nbsp;},&nbsp;{&nbsp;2,&nbsp;6,&nbsp;7&nbsp;}は同じもの<br/>とすることに注意してください。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4702/addtag/" class="addtag" id="addtag_4702">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #7fff7f;"
  >8/8=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4702"
  >-</span><span
  class="button yellow"
  id="rating_z_4702"
  >0</span><span 
  class="button green"
  id="rating_p_4702"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4702/">
  reply
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20081204132440/http://ja.doukaku.org/108/post_comment/">
post comment
</a>
</div>


<h2>Posted feedbacks - Nested</h2>
<a href="/web/20081204132440/http://ja.doukaku.org/108/flatten/">Flatten</a> 
<a href="/web/20081204132440/http://ja.doukaku.org/108/">Hidden</a> 


  

  
    





<div class="comment" id="comment4814">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4814/">#4814</a>(<script language="JavaScript">print_time(new Date("2007/12/14 20:44 GMT"));</script><noscript>2007/12/14 20:44 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>実装がナイーブ過ぎてN=4が実行できませんでした。

平均値計算の式が↓のようになっていて、これに気づくのに三十分かかった。
ave = N*(N*2+1) / 2

枝狩りをもうちょっとがんばるかなぁ。
アルゴリズムはこんな感じ。
１．総当りでペアを出す
２．ペアをソートする
３．文字列にキャストしてsetにぶち込んでユニーク化
４．何個残ってるか？

コード書き終わってから、魔方陣の書き方って確かあったよなぁ。
と思って、Wikipedia先生に聞いてみたら二次元用であった。
これを応用すれば、うまいこと出てこないかなぁ。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">copy</span>
<span class="k">import</span> <span class="nn">time</span>
<span class="k">def</span> <span class="nf">mahobunkatsu</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="n">m</span> <span class="o">=</span> <span class="n">set</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">N</span><span class="o">**</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">m</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="n">ave</span> <span class="o">=</span> <span class="n">N</span><span class="o">*</span><span class="p">(</span><span class="n">N</span><span class="o">**</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span>
    
    <span class="k">def</span> <span class="nf">createPair</span><span class="p">(</span><span class="n">restNumber</span><span class="p">,</span><span class="n">numberSum</span><span class="p">,</span> <span class="n">pair</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">pairList</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">restNumber</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">count</span> <span class="ow">and</span> <span class="p">(</span><span class="n">count</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="n">N</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">numberSum</span> <span class="o">+</span> <span class="n">i</span> <span class="o">==</span> <span class="n">ave</span><span class="p">:</span>
                    <span class="k">if</span> <span class="n">count</span><span class="o">+</span><span class="mi">1</span> <span class="o">==</span> <span class="n">N</span><span class="o">**</span><span class="mi">2</span><span class="p">:</span>
                        <span class="n">pair</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
                        <span class="n">pairList</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">copy</span><span class="o">.</span><span class="n">copy</span><span class="p">(</span><span class="n">pair</span><span class="p">))</span>
                        <span class="n">pair</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
                        <span class="k">continue</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="k">continue</span>
            <span class="k">if</span> <span class="n">numberSum</span> <span class="o">+</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="n">ave</span><span class="p">:</span>
                <span class="k">continue</span>
            <span class="n">restNumber</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
            <span class="n">pair</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
            <span class="n">createPair</span><span class="p">(</span><span class="n">restNumber</span><span class="p">,</span> <span class="p">(</span><span class="n">numberSum</span> <span class="o">+</span> <span class="n">i</span><span class="p">)</span> <span class="o">%</span> <span class="n">ave</span><span class="p">,</span> <span class="n">pair</span><span class="p">,</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">pairList</span><span class="p">)</span>
            <span class="n">restNumber</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
            <span class="n">pair</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
        <span class="k">return</span>

    <span class="n">pairList</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">createPair</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">[],</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pairList</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">listToSortedPairs</span><span class="p">(</span><span class="n">pairList</span><span class="p">):</span>
        <span class="n">temp</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">pairList</span><span class="p">:</span>
            <span class="n">temp</span><span class="o">.</span><span class="n">append</span><span class="p">([])</span>
            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
                <span class="n">temp</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">l</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="n">N</span><span class="p">:(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">N</span><span class="p">])</span>
                <span class="n">temp</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
                <span class="n">temp</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
        <span class="k">return</span> <span class="n">temp</span>

    <span class="n">sortedList</span> <span class="o">=</span> <span class="n">listToSortedPairs</span><span class="p">(</span><span class="n">pairList</span><span class="p">)</span>

    <span class="n">uniqueList</span> <span class="o">=</span> <span class="n">set</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">sortedList</span><span class="p">:</span>
        <span class="n">uniqueList</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>

    <span class="k">print</span> <span class="n">uniqueList</span>
    <span class="k">return</span> <span class="n">uniqueList</span>


<span class="n">t</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">6</span><span class="p">):</span>
    <span class="n">n</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">mahobunkatsu</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
    <span class="k">print</span> <span class="s">&quot;Size=&quot;</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="s">&quot;Mahozin_num=&quot;</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="s">&quot;time=&quot;</span><span class="p">,</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span><span class="o">-</span><span class="n">t</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4814/addtag/" class="addtag" id="addtag_4814">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4814/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4814/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4814"
  >-</span><span
  class="button yellow"
  id="rating_z_4814"
  >0</span><span 
  class="button green"
  id="rating_p_4814"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204132440/http://ja.doukaku.org/comment/4814/">
    1
    reply
  </a>

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4814/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4815">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4815/">#4815</a>(<script language="JavaScript">print_time(new Date("2007/12/14 20:55 GMT"));</script><noscript>2007/12/14 20:55 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>投稿してから、プログラムにあまり影響しないバグを見つけた。
39行目、タブが一個多いです。
要素を一個追加するごとにソートしているので、不毛。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4815/addtag/" class="addtag" id="addtag_4815">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4815"
  >-</span><span
  class="button yellow"
  id="rating_z_4815"
  >0</span><span 
  class="button green"
  id="rating_p_4815"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4814/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4815/root/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081204132440/http://ja.doukaku.org/comment/4815/">
    1
    reply
  </a>

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4815/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4831">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4831/">#4831</a>(<script language="JavaScript">print_time(new Date("2007/12/15 10:07 GMT"));</script><noscript>2007/12/15 10:07 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>タブが多いとバグになるというのが、python使わない人からすると新鮮です。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4831/addtag/" class="addtag" id="addtag_4831">Tags</a>:
	
    
    <a href="/web/20081204132440/http://ja.doukaku.org/tag/%E3%81%8A%E3%82%82%E3%81%97%E3%82%8D%E3%81%8A%E3%81%8B%E3%81%97%E3%81%84/">おもしろおかしい</a>
    
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4831"
  >-</span><span
  class="button yellow"
  id="rating_z_4831"
  >0</span><span 
  class="button green"
  id="rating_p_4831"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4815/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4831/root/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4831/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  
    





<div class="comment" id="comment4816">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/428/" target="_top">Y</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4816/">#4816</a>(<script language="JavaScript">print_time(new Date("2007/12/14 21:21 GMT"));</script><noscript>2007/12/14 21:21 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/mathematica/">
	  Mathematica
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>グループ未定の数字の最初のものpは、まだ決まってないグループ(X)に。
Xの残りの(n-1)個は、残っている数字から、和が(s/n-p)になるものとする。
最後まで行ったらカウンタに1加算。
初めに戻る。

（ComplementやSubsetsは常にソートされている）

In[3]:= f[3]
Out[3]= 2

In[4]:= f[4]
Out[4]= 392（Core2 6700で0.06秒）

In[5]:= f[5]
Out[5]= 3245664（Core2 6700で690秒）</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre>f[n_] := f[Range[n^2], n, Total@Range[n^2]/n]

f[in_, n_, s_] :=
  If[Length@in == n, 1,
    Total[f[Complement[Rest@in, #], n, s] &amp; /@ (
    Select[Subsets[Rest@in, {n - 1}], First@in + Total@# == s &amp;])]]
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4816/addtag/" class="addtag" id="addtag_4816">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/mathematica/">
		Mathematica
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4816/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4816/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4816"
  >-</span><span
  class="button yellow"
  id="rating_z_4816"
  >0</span><span 
  class="button green"
  id="rating_p_4816"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4816/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4817">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/582/" target="_top">jijixi</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4817/">#4817</a>(<script language="JavaScript">print_time(new Date("2007/12/14 23:42 GMT"));</script><noscript>2007/12/14 23:42 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffdfdf;">-2/2=-1.00</span></span><a href="/web/20081204132440/http://ja.doukaku.org/108/nested/#comment4817" onClick="$('#comment4817 .comment_content').show()">[open]</a>
  </p>
  <div class="comment_content" style="display: none">
	<div class="comment_body">
	  それなりの工夫はしたつもりだけど、それでも超遅い...orz<br/>答が合ってるのかすら心配。<br/><br/>Mac&nbsp;OS&nbsp;X&nbsp;10.5&nbsp;/&nbsp;PPC&nbsp;G5/1.6GHz&nbsp;mem&nbsp;1GB&nbsp;な環境で、<br/><br/>%&nbsp;time&nbsp;./numbers.native&nbsp;4<br/>n&nbsp;=&nbsp;4&nbsp;=&gt;&nbsp;151&nbsp;patterns<br/>./numbers.native&nbsp;4&nbsp;&nbsp;0.03s&nbsp;user&nbsp;0.01s&nbsp;system&nbsp;27%&nbsp;cpu&nbsp;0.141&nbsp;total<br/><br/>n&nbsp;=&nbsp;5&nbsp;は&nbsp;5&nbsp;分くらい待っても終わらなかったのであきらめた。<br/>方針としては、<br/><br/>*&nbsp;各セットの合計は&nbsp;1&nbsp;~&nbsp;n&nbsp;までの合計を&nbsp;n&nbsp;で割ったものになるので、そうなる組み合わせを生成<br/>*&nbsp;先頭が&nbsp;1&nbsp;~&nbsp;n&nbsp;のものが並ぶはずなので、そこまでしか計算しない<br/>*&nbsp;OCaml&nbsp;の&nbsp;Set&nbsp;モジュールは整列済みなので、それを利用して多少枝刈りしているつもり<br/><br/>といった感じ。<br/>n&nbsp;=&nbsp;5&nbsp;が終わらないのは、メモリ使用量の問題もありそうなので、完全なセットを作ってしまわずに逐次表示するようなアプローチにすれば、もう少し何とかなるかも。<br/><br/>でももう頭がパンクしそうなので、とりあえずこれで。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">NS</span> <span class="k">=</span> <span class="n">Set</span><span class="k">.</span><span class="n">Make</span><span class="k">(</span>
<span class="kr">struct</span>
   <span class="kr">type</span> <span class="n">t</span> <span class="k">=</span> <span class="n">int</span>
   <span class="kr">let</span> <span class="n">compare</span> <span class="k">=</span> <span class="n">Pervasives</span><span class="k">.</span><span class="n">compare</span>
<span class="kr">end</span><span class="k">)</span>

<span class="kr">module</span> <span class="n">SS</span> <span class="k">=</span> <span class="n">Set</span><span class="k">.</span><span class="n">Make</span><span class="k">(</span>
<span class="kr">struct</span>
   <span class="kr">type</span> <span class="n">t</span> <span class="k">=</span> <span class="n">NS</span><span class="k">.</span><span class="n">t</span>
   <span class="kr">let</span> <span class="n">compare</span> <span class="k">=</span> <span class="n">NS</span><span class="k">.</span><span class="n">compare</span>
<span class="kr">end</span><span class="k">)</span>

<span class="kr">module</span> <span class="n">LS</span> <span class="k">=</span> <span class="n">Set</span><span class="k">.</span><span class="n">Make</span><span class="k">(</span>
<span class="kr">struct</span>
   <span class="kr">type</span> <span class="n">t</span> <span class="k">=</span> <span class="n">SS</span><span class="k">.</span><span class="n">t</span>
   <span class="kr">let</span> <span class="n">compare</span> <span class="k">=</span> <span class="n">SS</span><span class="k">.</span><span class="n">compare</span>
<span class="kr">end</span><span class="k">)</span>

<span class="kr">let</span> <span class="n">make_set_with_sum</span> <span class="n">n</span> <span class="k">=</span>
   <span class="kr">let</span> <span class="kr">rec</span> <span class="n">loop</span> <span class="n">set</span> <span class="n">sum</span> <span class="k">=</span> <span class="kr">function</span>
      <span class="k">|</span> <span class="mi">0</span>  <span class="k">-&gt;</span> <span class="k">(</span><span class="n">set</span><span class="k">,</span> <span class="n">sum</span><span class="k">)</span>
      <span class="k">|</span> <span class="n">n&#39;</span> <span class="k">-&gt;</span> <span class="n">loop</span> <span class="k">(</span><span class="n">NS</span><span class="k">.</span><span class="n">add</span> <span class="n">n&#39;</span> <span class="n">set</span><span class="k">)</span> <span class="k">(</span><span class="n">sum</span> <span class="k">+</span> <span class="n">n&#39;</span><span class="k">)</span> <span class="k">(</span><span class="n">n&#39;</span> <span class="k">-</span> <span class="mi">1</span><span class="k">)</span>
   <span class="kr">in</span>
   <span class="n">loop</span> <span class="n">NS</span><span class="k">.</span><span class="n">empty</span> <span class="mi">0</span> <span class="n">n</span>

<span class="kr">let</span> <span class="n">ns_map</span> <span class="n">f</span> <span class="n">ns</span> <span class="k">=</span> <span class="n">NS</span><span class="k">.</span><span class="n">fold</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">s</span> <span class="n">acc</span> <span class="k">-&gt;</span> <span class="n">NS</span><span class="k">.</span><span class="n">add</span> <span class="k">(</span><span class="n">f</span> <span class="n">s</span><span class="k">)</span> <span class="n">acc</span><span class="k">)</span> <span class="n">ns</span> <span class="n">NS</span><span class="k">.</span><span class="n">empty</span>
<span class="kr">let</span> <span class="n">ss_map</span> <span class="n">f</span> <span class="n">ss</span> <span class="k">=</span> <span class="n">SS</span><span class="k">.</span><span class="n">fold</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">s</span> <span class="n">acc</span> <span class="k">-&gt;</span> <span class="n">SS</span><span class="k">.</span><span class="n">add</span> <span class="k">(</span><span class="n">f</span> <span class="n">s</span><span class="k">)</span> <span class="n">acc</span><span class="k">)</span> <span class="n">ss</span> <span class="n">SS</span><span class="k">.</span><span class="n">empty</span>
<span class="kr">let</span> <span class="n">ls_map</span> <span class="n">f</span> <span class="n">ls</span> <span class="k">=</span> <span class="n">LS</span><span class="k">.</span><span class="n">fold</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">s</span> <span class="n">acc</span> <span class="k">-&gt;</span> <span class="n">LS</span><span class="k">.</span><span class="n">add</span> <span class="k">(</span><span class="n">f</span> <span class="n">s</span><span class="k">)</span> <span class="n">acc</span><span class="k">)</span> <span class="n">ls</span> <span class="n">LS</span><span class="k">.</span><span class="n">empty</span>

<span class="kr">let</span> <span class="kr">rec</span> <span class="n">take_subsets</span> <span class="n">set</span> <span class="n">num</span> <span class="n">limit</span> <span class="k">=</span>
   <span class="kr">if</span> <span class="n">NS</span><span class="k">.</span><span class="n">is_empty</span> <span class="n">set</span> <span class="k">||</span> <span class="n">NS</span><span class="k">.</span><span class="n">cardinal</span> <span class="n">set</span> <span class="k">&lt;</span> <span class="n">num</span> <span class="k">||</span> <span class="n">NS</span><span class="k">.</span><span class="n">choose</span> <span class="n">set</span> <span class="k">&gt;</span> <span class="n">limit</span>
   <span class="kr">then</span> <span class="n">SS</span><span class="k">.</span><span class="n">empty</span>
   <span class="kr">else</span> <span class="kr">begin</span>
      <span class="kr">match</span> <span class="n">num</span> <span class="kr">with</span>
      <span class="k">|</span> <span class="mi">1</span> <span class="k">-&gt;</span>
           <span class="kr">if</span> <span class="n">NS</span><span class="k">.</span><span class="n">mem</span> <span class="n">limit</span> <span class="n">set</span>
           <span class="kr">then</span> <span class="n">SS</span><span class="k">.</span><span class="n">singleton</span> <span class="k">(</span><span class="n">NS</span><span class="k">.</span><span class="n">singleton</span> <span class="n">limit</span><span class="k">)</span>
           <span class="kr">else</span> <span class="n">SS</span><span class="k">.</span><span class="n">empty</span>
      <span class="k">|</span> <span class="n">n</span> <span class="kr">when</span> <span class="n">n</span> <span class="k">&gt;</span> <span class="mi">1</span> <span class="k">-&gt;</span>
           <span class="kr">let</span> <span class="n">result</span> <span class="k">=</span> <span class="n">ref</span> <span class="n">SS</span><span class="k">.</span><span class="n">empty</span> <span class="kr">in</span>
           <span class="n">NS</span><span class="k">.</span><span class="n">iter</span> <span class="kr">begin</span> <span class="kr">fun</span> <span class="n">i</span> <span class="k">-&gt;</span>
              <span class="kr">let</span> <span class="n">set&#39;</span> <span class="k">=</span> <span class="n">NS</span><span class="k">.</span><span class="n">remove</span> <span class="n">i</span> <span class="n">set</span> <span class="kr">in</span>
              <span class="kr">let</span> <span class="n">num&#39;</span> <span class="k">=</span> <span class="n">num</span> <span class="k">-</span> <span class="mi">1</span> <span class="kr">in</span>
              <span class="kr">let</span> <span class="n">limit&#39;</span> <span class="k">=</span> <span class="n">limit</span> <span class="k">-</span> <span class="n">i</span> <span class="kr">in</span>
              <span class="kr">begin</span> <span class="kr">match</span> <span class="n">take_subsets</span> <span class="n">set&#39;</span> <span class="n">num&#39;</span> <span class="n">limit&#39;</span> <span class="kr">with</span>
              <span class="k">|</span> <span class="n">s</span> <span class="kr">when</span> <span class="n">SS</span><span class="k">.</span><span class="n">is_empty</span> <span class="n">s</span> <span class="k">-&gt;</span> <span class="k">()</span>
              <span class="k">|</span> <span class="n">ss</span> <span class="k">-&gt;</span> <span class="n">result</span> <span class="k">:=</span> <span class="n">SS</span><span class="k">.</span><span class="n">union</span> <span class="o">!</span><span class="n">result</span> <span class="k">(</span><span class="n">ss_map</span> <span class="k">(</span><span class="n">NS</span><span class="k">.</span><span class="n">add</span> <span class="n">i</span><span class="k">)</span> <span class="n">ss</span><span class="k">)</span>
              <span class="kr">end</span>
           <span class="kr">end</span> <span class="n">set</span><span class="k">;</span>
           <span class="o">!</span><span class="n">result</span>
      <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="n">invalid_arg</span> <span class="s2">&quot;num is required positive number.&quot;</span>
   <span class="kr">end</span>

<span class="kr">let</span> <span class="n">make_sets</span> <span class="n">n</span> <span class="k">=</span>
   <span class="kr">if</span> <span class="n">n</span> <span class="k">&lt;</span> <span class="mi">2</span> <span class="kr">then</span> <span class="n">invalid_arg</span> <span class="s2">&quot;required greater than or equal to 2.&quot;</span><span class="k">;</span>
   <span class="kr">let</span> <span class="n">full</span><span class="k">,</span> <span class="n">max</span> <span class="k">=</span> <span class="n">make_set_with_sum</span> <span class="k">(</span><span class="n">n</span> <span class="k">*</span> <span class="n">n</span><span class="k">)</span> <span class="kr">in</span>
   <span class="kr">let</span> <span class="n">heads</span><span class="k">,</span> <span class="k">_</span>  <span class="k">=</span> <span class="n">make_set_with_sum</span> <span class="n">n</span> <span class="kr">in</span>
   <span class="kr">let</span> <span class="n">diff</span>  <span class="k">=</span> <span class="n">NS</span><span class="k">.</span><span class="n">diff</span> <span class="n">full</span> <span class="n">heads</span> <span class="kr">in</span>
   <span class="kr">let</span> <span class="n">limit</span> <span class="k">=</span> <span class="n">max</span> <span class="o">/</span> <span class="n">n</span> <span class="kr">in</span>
   <span class="kr">let</span> <span class="n">subsets</span> <span class="k">=</span>
      <span class="n">NS</span><span class="k">.</span><span class="n">fold</span> <span class="kr">begin</span> <span class="kr">fun</span> <span class="n">i</span> <span class="n">acc</span> <span class="k">-&gt;</span>
         <span class="n">LS</span><span class="k">.</span><span class="n">add</span>
            <span class="k">(</span><span class="n">ss_map</span> <span class="k">(</span><span class="n">NS</span><span class="k">.</span><span class="n">add</span> <span class="n">i</span><span class="k">)</span> <span class="k">(</span><span class="n">take_subsets</span> <span class="n">diff</span> <span class="k">(</span><span class="n">n</span> <span class="k">-</span> <span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">limit</span> <span class="k">-</span> <span class="n">i</span><span class="k">)))</span>
            <span class="n">acc</span>
      <span class="kr">end</span> <span class="n">heads</span> <span class="n">LS</span><span class="k">.</span><span class="n">empty</span>
   <span class="kr">in</span>
   <span class="kr">let</span> <span class="n">inters</span> <span class="k">=</span>
      <span class="kr">let</span> <span class="n">hd</span> <span class="k">=</span> <span class="n">LS</span><span class="k">.</span><span class="n">choose</span> <span class="n">subsets</span> <span class="kr">in</span>
      <span class="kr">let</span> <span class="n">tl</span> <span class="k">=</span> <span class="n">LS</span><span class="k">.</span><span class="n">remove</span> <span class="n">hd</span> <span class="n">subsets</span> <span class="kr">in</span>
      <span class="n">LS</span><span class="k">.</span><span class="n">fold</span> <span class="kr">begin</span> <span class="kr">fun</span> <span class="n">ss</span> <span class="n">acc</span> <span class="k">-&gt;</span>
         <span class="kr">let</span> <span class="n">result</span> <span class="k">=</span> <span class="n">ref</span> <span class="n">LS</span><span class="k">.</span><span class="n">empty</span> <span class="kr">in</span>
         <span class="n">LS</span><span class="k">.</span><span class="n">iter</span> <span class="kr">begin</span> <span class="kr">fun</span> <span class="n">ss&#39;</span> <span class="k">-&gt;</span>
            <span class="n">SS</span><span class="k">.</span><span class="n">iter</span> <span class="kr">begin</span> <span class="kr">fun</span> <span class="n">ns</span> <span class="k">-&gt;</span>
               <span class="kr">if</span> <span class="n">SS</span><span class="k">.</span><span class="n">for_all</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">s</span> <span class="k">-&gt;</span> <span class="n">NS</span><span class="k">.</span><span class="n">is_empty</span> <span class="k">(</span><span class="n">NS</span><span class="k">.</span><span class="n">inter</span> <span class="n">s</span> <span class="n">ns</span><span class="k">))</span> <span class="n">ss&#39;</span>
               <span class="kr">then</span> <span class="n">result</span> <span class="k">:=</span> <span class="n">LS</span><span class="k">.</span><span class="n">add</span> <span class="k">(</span><span class="n">SS</span><span class="k">.</span><span class="n">add</span> <span class="n">ns</span> <span class="n">ss&#39;</span><span class="k">)</span> <span class="o">!</span><span class="n">result</span>
            <span class="kr">end</span> <span class="n">ss</span>
         <span class="kr">end</span> <span class="n">acc</span><span class="k">;</span>
         <span class="o">!</span><span class="n">result</span>
      <span class="kr">end</span> <span class="n">tl</span> <span class="k">(</span><span class="n">SS</span><span class="k">.</span><span class="n">fold</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">e</span> <span class="n">acc</span> <span class="k">-&gt;</span> <span class="n">LS</span><span class="k">.</span><span class="n">add</span> <span class="k">(</span><span class="n">SS</span><span class="k">.</span><span class="n">singleton</span> <span class="n">e</span><span class="k">)</span> <span class="n">acc</span><span class="k">)</span> <span class="n">hd</span> <span class="n">LS</span><span class="k">.</span><span class="n">empty</span><span class="k">)</span>
   <span class="kr">in</span>
   <span class="n">inters</span>

<span class="kr">let</span> <span class="n">ns_print</span> <span class="n">ns</span> <span class="k">=</span>
   <span class="n">print_string</span> <span class="s2">&quot;{ &quot;</span><span class="k">;</span>
   <span class="n">NS</span><span class="k">.</span><span class="n">iter</span> <span class="k">(</span><span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;%d, &quot;</span><span class="k">)</span> <span class="n">ns</span><span class="k">;</span>
   <span class="n">print_string</span> <span class="s2">&quot;}&quot;</span>
<span class="kr">let</span> <span class="n">ss_print</span> <span class="n">ss</span> <span class="k">=</span>
   <span class="n">SS</span><span class="k">.</span><span class="n">iter</span> <span class="kr">begin</span> <span class="kr">fun</span> <span class="n">s</span> <span class="k">-&gt;</span>
      <span class="n">ns_print</span> <span class="n">s</span><span class="k">;</span>
      <span class="n">print_string</span> <span class="s2">&quot;, &quot;</span>
   <span class="kr">end</span> <span class="n">ss</span><span class="k">;</span>
   <span class="n">print_newline</span> <span class="k">()</span>
<span class="kr">let</span> <span class="n">ls_print</span> <span class="n">ls</span> <span class="k">=</span> <span class="n">LS</span><span class="k">.</span><span class="n">iter</span> <span class="n">ss_print</span> <span class="n">ls</span>

<span class="kr">let</span> <span class="n">exam</span> <span class="n">n</span> <span class="k">=</span> <span class="n">LS</span><span class="k">.</span><span class="n">cardinal</span> <span class="k">(</span><span class="n">make_sets</span> <span class="n">n</span><span class="k">)</span>

<span class="kr">let</span> <span class="n">main</span> <span class="k">()</span> <span class="k">=</span>
   <span class="kr">let</span> <span class="n">num</span> <span class="k">=</span>
      <span class="kr">match</span> <span class="n">Sys</span><span class="k">.</span><span class="n">argv</span> <span class="kr">with</span>
      <span class="k">|</span> <span class="k">[|_;</span> <span class="n">n</span> <span class="k">|]</span> <span class="k">-&gt;</span> <span class="n">int_of_string</span> <span class="n">n</span>
      <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="mi">3</span>
   <span class="kr">in</span>
   <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;n = %d =&gt; %d patterns</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="n">num</span> <span class="k">(</span><span class="n">exam</span> <span class="n">num</span><span class="k">)</span>
<span class="kr">let</span> <span class="k">()</span> <span class="k">=</span> <span class="kr">if</span> <span class="n">not</span> <span class="o">!</span><span class="n">Sys</span><span class="k">.</span><span class="n">interactive</span> <span class="kr">then</span> <span class="n">main</span> <span class="k">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4817/addtag/" class="addtag" id="addtag_4817">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4817/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4817/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffdfdf;"
  >-2/2=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4817"
  >-</span><span
  class="button yellow"
  id="rating_z_4817"
  >0</span><span 
  class="button green"
  id="rating_p_4817"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204132440/http://ja.doukaku.org/comment/4817/">
    1
    reply
  </a>

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4817/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4820">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4820/">#4820</a>(<script language="JavaScript">print_time(new Date("2007/12/15 04:26 GMT"));</script><noscript>2007/12/15 04:26 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>&gt;先頭が 1 ~ n のものが並ぶはず
確かに、そうなるかな？と思いたくなるんですが、違うみたいです:
{1, 2, 15, 16}, {3, 4, 13, 14}, {5, 6, 11, 12}, {7, 8, 9, 10}</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4820/addtag/" class="addtag" id="addtag_4820">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4820"
  >-</span><span
  class="button yellow"
  id="rating_z_4820"
  >0</span><span 
  class="button green"
  id="rating_p_4820"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4817/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4820/root/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081204132440/http://ja.doukaku.org/comment/4820/">
    1
    reply
  </a>

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4820/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4826">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/582/" target="_top">jijixi</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4826/">#4826</a>(<script language="JavaScript">print_time(new Date("2007/12/15 07:18 GMT"));</script><noscript>2007/12/15 07:18 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>がーん……ダメすぎる...orz</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4826/addtag/" class="addtag" id="addtag_4826">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4826"
  >-</span><span
  class="button yellow"
  id="rating_z_4826"
  >0</span><span 
  class="button green"
  id="rating_p_4826"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4820/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4826/root/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4826/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment4819">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/589/" target="_top">nido</a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4819/">#4819</a>(<script language="JavaScript">print_time(new Date("2007/12/15 03:21 GMT"));</script><noscript>2007/12/15 03:21 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  とりあえず単純に<br/>(1)合計が平均値になる組み合わせを生成<br/>(2)(1)から要素が重ならない組み合わせを生成<br/><br/>N=4で62秒（PenM&nbsp;1.7GHz）、解は392<br/>N=5はこのやり方では無理ですね。<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">gen_comb</span><span class="p">(</span><span class="n">list</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">n</span><span class="o">==</span><span class="mi">0</span>
    <span class="k">yield</span><span class="p">(</span><span class="o">[]</span><span class="p">)</span>
  <span class="k">else</span>
    <span class="p">(</span><span class="n">list</span><span class="o">.</span><span class="n">size</span><span class="o">-</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
      <span class="n">gen_comb</span><span class="p">(</span><span class="n">list</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">do</span><span class="o">|</span><span class="n">ls</span><span class="o">|</span>
        <span class="k">yield</span><span class="p">(</span><span class="o">[</span><span class="n">list</span><span class="o">[</span><span class="n">i</span><span class="o">]]+</span><span class="n">ls</span><span class="p">)</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">comb_num</span><span class="p">(</span><span class="n">list</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">sum</span><span class="p">)</span>
  <span class="n">ret</span><span class="o">=[]</span>
  <span class="n">gen_comb</span><span class="p">(</span><span class="n">list</span><span class="p">,</span><span class="n">n</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
    <span class="n">ret</span><span class="o">&lt;&lt;=</span><span class="n">a</span> <span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="mi">0</span><span class="p">){</span><span class="o">|</span><span class="n">r</span><span class="p">,</span><span class="n">e</span><span class="o">|</span> <span class="n">r</span><span class="o">+=</span><span class="n">e</span><span class="p">})</span><span class="o">==</span><span class="n">sum</span>
  <span class="k">end</span>
  <span class="n">ret</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">comb_array</span><span class="p">(</span><span class="n">list</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>
  <span class="n">ret</span><span class="o">=[]</span>
  <span class="n">gen_comb</span><span class="p">(</span><span class="n">list</span><span class="p">,</span><span class="n">n</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
    <span class="n">ret</span><span class="o">&lt;&lt;=</span><span class="n">a</span> <span class="k">if</span> <span class="n">a</span><span class="o">.</span><span class="n">inject</span><span class="p">{</span><span class="o">|</span><span class="n">r</span><span class="p">,</span><span class="n">e</span><span class="o">|</span> <span class="k">break</span> <span class="k">unless</span> <span class="p">(</span><span class="n">r</span><span class="o">&amp;</span><span class="n">e</span><span class="p">)</span><span class="o">.</span><span class="n">empty?</span><span class="p">;</span><span class="n">r</span><span class="o">+=</span><span class="n">e</span><span class="p">}</span>
  <span class="k">end</span>
  <span class="n">ret</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">maho</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
  <span class="n">m</span><span class="o">=</span><span class="n">n</span><span class="o">**</span><span class="mi">2</span>
  <span class="n">sum</span><span class="o">=</span><span class="n">m</span><span class="o">*</span><span class="p">(</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">/</span><span class="n">n</span>
  <span class="n">comb_array</span><span class="p">(</span><span class="n">comb_num</span><span class="p">((</span><span class="mi">1</span><span class="o">.</span><span class="n">.m</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">sum</span><span class="p">),</span><span class="n">n</span><span class="p">)</span>
<span class="k">end</span>

<span class="n">start_time</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span>
<span class="nb">puts</span> <span class="n">maho</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">size</span>
<span class="nb">puts</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">-</span><span class="n">start_time</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4819/addtag/" class="addtag" id="addtag_4819">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4819/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4819/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4819"
  >-</span><span
  class="button yellow"
  id="rating_z_4819"
  >0</span><span 
  class="button green"
  id="rating_p_4819"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4819/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment4821">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4821/">#4821</a>(<script language="JavaScript">print_time(new Date("2007/12/15 04:43 GMT"));</script><noscript>2007/12/15 04:43 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>和が N*(N^2+1)/2 になる組み合わせを昇順に列挙して交わらないものを探す。nido さんの #4819 と同じ方針かな？</p>
<p>5 のときは 20 分かかって答えが出ました。
3245664 だそうです。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45</pre></td><td class="code"><div class="highlight"><pre><span class="c">(* list solutions of</span>
<span class="c">     x1+...+xn=m</span>
<span class="c">     1&lt;=x1&lt;...&lt;xn&lt;=l *)</span>
<span class="kr">let</span> <span class="n">list_solutions</span> <span class="n">m</span> <span class="n">n</span> <span class="n">k</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="kr">rec</span> <span class="n">loop</span> <span class="n">m</span> <span class="n">n</span> <span class="n">lbd</span> <span class="n">tail</span> <span class="k">=</span>
    <span class="kr">if</span> <span class="n">m</span> <span class="k">&lt;</span> <span class="n">n</span> <span class="k">||</span> <span class="n">m</span> <span class="k">&lt;</span> <span class="n">lbd</span> <span class="kr">then</span> <span class="k">[]</span>
    <span class="kr">else</span> <span class="kr">if</span> <span class="n">n</span> <span class="k">=</span> <span class="mi">1</span> <span class="kr">then</span>
      <span class="kr">if</span> <span class="n">lbd</span> <span class="k">&lt;=</span> <span class="n">m</span> <span class="k">&amp;&amp;</span> <span class="n">m</span> <span class="k">&lt;=</span> <span class="n">k</span> <span class="kr">then</span> <span class="k">[</span><span class="n">m</span><span class="k">::</span><span class="n">tail</span><span class="k">]</span> <span class="kr">else</span> <span class="k">[]</span>
    <span class="kr">else</span>
      <span class="kr">let</span> <span class="n">acc</span> <span class="k">=</span> <span class="n">ref</span> <span class="k">[]</span> <span class="kr">in</span>
        <span class="kr">for</span> <span class="n">i</span> <span class="k">=</span> <span class="n">lbd</span> <span class="kr">to</span> <span class="k">(</span><span class="n">min</span> <span class="k">(</span><span class="n">m</span><span class="k">-</span><span class="n">n</span><span class="k">+</span><span class="mi">1</span><span class="k">)</span> <span class="n">k</span><span class="k">)</span> <span class="kr">do</span>
          <span class="n">acc</span> <span class="k">:=</span>
            <span class="n">List</span><span class="k">.</span><span class="n">map</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">sols</span> <span class="k">-&gt;</span> <span class="n">i</span><span class="k">::</span><span class="n">sols</span><span class="k">)</span>
              <span class="k">(</span><span class="n">loop</span> <span class="k">(</span><span class="n">m</span><span class="k">-</span><span class="n">i</span><span class="k">)</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">i</span><span class="k">+</span><span class="mi">1</span><span class="k">)</span> <span class="n">tail</span><span class="k">)</span> <span class="k">::</span> <span class="o">!</span><span class="n">acc</span>
        <span class="kr">done</span><span class="k">;</span>
        <span class="n">List</span><span class="k">.</span><span class="n">concat</span> <span class="o">!</span><span class="n">acc</span>
  <span class="kr">in</span> <span class="n">loop</span> <span class="n">m</span> <span class="n">n</span> <span class="mi">1</span>

<span class="kr">let</span> <span class="kr">rec</span> <span class="n">disjoint</span> <span class="n">xs</span> <span class="n">ys</span> <span class="k">=</span>
  <span class="kr">match</span> <span class="n">xs</span><span class="k">,</span> <span class="n">ys</span> <span class="kr">with</span>
    <span class="k">|</span> <span class="k">[],</span> <span class="k">_</span> <span class="k">|</span> <span class="k">_,</span> <span class="k">[]</span> <span class="k">-&gt;</span> <span class="kr">true</span>
    <span class="k">|</span> <span class="n">x</span><span class="k">::</span><span class="n">xs&#39;</span><span class="k">,</span> <span class="n">y</span><span class="k">::</span><span class="n">ys&#39;</span> <span class="k">-&gt;</span>
        <span class="kr">if</span> <span class="n">x</span> <span class="k">&gt;</span> <span class="n">y</span> <span class="kr">then</span> <span class="n">disjoint</span> <span class="n">xs</span> <span class="n">ys&#39;</span>
        <span class="kr">else</span> <span class="kr">if</span> <span class="n">x</span> <span class="k">&lt;</span> <span class="n">y</span> <span class="kr">then</span> <span class="n">disjoint</span> <span class="n">xs&#39;</span> <span class="n">ys</span>
        <span class="kr">else</span> <span class="kr">false</span>

<span class="kr">let</span> <span class="k">(</span><span class="o">@&lt;</span><span class="k">)</span> <span class="k">=</span> <span class="n">List</span><span class="k">.</span><span class="n">merge</span> <span class="n">compare</span>

<span class="kr">let</span> <span class="kr">rec</span> <span class="n">count_choices</span> <span class="n">n</span> <span class="n">lists</span> <span class="n">ex</span> <span class="k">=</span>
  <span class="kr">if</span> <span class="n">n</span> <span class="k">=</span> <span class="mi">1</span> <span class="kr">then</span>
    <span class="n">List</span><span class="k">.</span><span class="n">fold_left</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">i</span> <span class="n">x</span> <span class="k">-&gt;</span> <span class="kr">if</span> <span class="n">disjoint</span> <span class="n">x</span> <span class="n">ex</span> <span class="kr">then</span> <span class="n">i</span><span class="k">+</span><span class="mi">1</span> <span class="kr">else</span> <span class="n">i</span><span class="k">)</span> <span class="mi">0</span> <span class="n">lists</span>
  <span class="kr">else</span>
    <span class="kr">match</span> <span class="n">lists</span> <span class="kr">with</span>
      <span class="k">|</span> <span class="k">[]</span> <span class="k">-&gt;</span> <span class="mi">0</span>
      <span class="k">|</span> <span class="n">x</span><span class="k">::</span><span class="n">rest</span> <span class="k">-&gt;</span>
          <span class="kr">let</span> <span class="n">b</span> <span class="k">=</span> <span class="n">count_choices</span> <span class="n">n</span> <span class="n">rest</span> <span class="n">ex</span> <span class="kr">in</span>
            <span class="kr">if</span> <span class="n">disjoint</span> <span class="n">x</span> <span class="n">ex</span> <span class="kr">then</span>
              <span class="n">b</span> <span class="k">+</span> <span class="n">count_choices</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="n">rest</span> <span class="k">(</span><span class="n">x</span><span class="o">@&lt;</span><span class="n">ex</span><span class="k">)</span>
            <span class="kr">else</span>
              <span class="n">b</span>

<span class="kr">let</span> <span class="n">count_partitions</span> <span class="n">n</span> <span class="k">=</span>
  <span class="n">count_choices</span> <span class="n">n</span> <span class="k">(</span><span class="n">list_solutions</span> <span class="k">(</span><span class="n">n</span> <span class="k">*</span> <span class="k">(</span><span class="n">n</span><span class="k">*</span><span class="n">n</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="o">/</span> <span class="mi">2</span><span class="k">)</span> <span class="n">n</span> <span class="k">(</span><span class="n">n</span><span class="k">*</span><span class="n">n</span><span class="k">)</span> <span class="k">[])</span> <span class="k">[]</span>

<span class="kr">let</span> <span class="k">_</span> <span class="k">=</span> <span class="n">print_int</span> <span class="k">(</span><span class="n">count_partitions</span> <span class="mi">5</span><span class="k">);</span> <span class="n">exit</span> <span class="mi">0</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4821/addtag/" class="addtag" id="addtag_4821">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4821/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4821/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4821"
  >-</span><span
  class="button yellow"
  id="rating_z_4821"
  >0</span><span 
  class="button green"
  id="rating_p_4821"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204132440/http://ja.doukaku.org/comment/4821/">
    1
    reply
  </a>

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4821/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4833">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4833/">#4833</a>(<script language="JavaScript">print_time(new Date("2007/12/15 12:39 GMT"));</script><noscript>2007/12/15 12:39 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>枝刈りしようとしたらわけがわからなくなったので Common Lisp で書き直し。</p>
<p>最初に組み合わせを求めた後で「1を含む組」「1を含まなくて2を含む組」「1, 2を含まなくて3を含む組」……と分類します。こうすると、グループごとに探索の対象とするかしないかを決めることができてかなり範囲が狭まるようです。</p>
<p>disjoint がボトルネックになるようなのでここだけ最適化をかけています。実行時間は SBCL で 28 秒でした。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54</pre></td><td class="code"><div class="highlight"><pre>(defun list-solutions (m n lbd ubd)
  (cond ((not (&lt;= (* lbd n) m (* ubd n))) ())
        ((= n 1) `((,m)))
        (t
         (loop for i from lbd to ubd nconc
           (mapl (lambda (l) (push i (car l)))
                 (list-solutions (- m i) (1- n) (1+ i) ubd))))))

(defun group-solutions (m n lbd ubd)
  (loop with sols = (list-solutions m n lbd ubd)
    for i from 1
    for s1 = sols then s2
    for s2 = (member i s1 :key #&#39;car :test #&#39;/=)
    while s1 collect (cons i (ldiff s1 s2))))

(defun disjoint (l1 l2) ; l1, l2 must be sorted
  (declare (optimize (speed 3) (safety 0)))
  (or (null l1)
      (null l2)
      (let ((a (car l1)) (b (car l2)))
        (declare (fixnum a b))
        (cond ((&gt; a b) (disjoint l1 (cdr l2)))
              ((&lt; a b) (disjoint (cdr l1) l2))
              (t nil)))))

(defun merge-list (l1 l2) ; l1, l2 must be sorted
  (do* ((head (cons () ()))
        (tail head (cdr tail)))
      (())
    (cond ((endp l1) (setf (cdr tail) l2) (return (cdr head)))
          ((endp l2) (setf (cdr tail) l1) (return (cdr head)))
          (t
           (let ((a (car l1)) (b (car l2)))
             (cond ((&gt; a b)
                    (setf (cdr tail) (list b)
                          l2 (cdr l2)))
                   ((&lt; a b)
                    (setf (cdr tail) (list a)
                          l1 (cdr l1)))
                   (t
                    (setf (cdr tail) (list a)
                          l1 (cdr l1)
                          l2 (cdr l2)))))))))

(defun count-choices (n lists ex)
  (if (= n 1)
      (loop for x in (cdar lists) count (disjoint x ex))
    (loop for x in (cdar lists) if (disjoint x ex) sum
      (count-choices (1- n)
                     (remove-if (lambda (a) (member (car a) x)) (cdr lists))
                     (merge-list x ex)))))

(defun count-partitions (n)
  (count-choices n (group-solutions (/ (* n (1+ (* n n))) 2) n 1 (* n n)) ()))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4833/addtag/" class="addtag" id="addtag_4833">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4833/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4833/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4833"
  >-</span><span
  class="button yellow"
  id="rating_z_4833"
  >0</span><span 
  class="button green"
  id="rating_p_4833"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4821/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4833/root/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081204132440/http://ja.doukaku.org/comment/4833/">
    1
    reply
  </a>

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4833/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4834">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4834/">#4834</a>(<script language="JavaScript">print_time(new Date("2007/12/15 13:39 GMT"));</script><noscript>2007/12/15 13:39 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>無駄に読みにくい書き方をしてました。こっちのほうが普通でしょう。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre>(defun merge-list (l1 l2)
  (let (acc)
    (loop
      (if (endp l1) (return (nreconc acc l2)))
      (if (endp l2) (return (nreconc acc l1)))
      (let ((a (car l1)) (b (car l2)))
        (cond ((&gt; a b)
               (push b acc)
               (setf l2 (cdr l2)))
              ((&lt; a b)
               (push a acc)
               (setf l1 (cdr l1)))
              (t
               (push a acc)
               (setf l1 (cdr l1) l2 (cdr l2))))))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4834/addtag/" class="addtag" id="addtag_4834">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4834/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4834/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4834"
  >-</span><span
  class="button yellow"
  id="rating_z_4834"
  >0</span><span 
  class="button green"
  id="rating_p_4834"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4833/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4834/root/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4834/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment4824">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/352/" target="_top">186</a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4824/">#4824</a>(<script language="JavaScript">print_time(new Date("2007/12/15 07:10 GMT"));</script><noscript>2007/12/15 07:10 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  filterとcombinationsを覚えた<br/><br/>;Pen4&nbsp;3GHzで<br/>;(time&nbsp;(maho&nbsp;4))&nbsp;=&gt;&nbsp;392<br/>;real&nbsp;0.109/user&nbsp;0.109/sys&nbsp;0.000<br/>;(time&nbsp;(maho&nbsp;5))&nbsp;=&gt;&nbsp;3245664<br/>;real&nbsp;1528.250/user&nbsp;1423.391/sys&nbsp;104.187<br/>;(time&nbsp;(maho-by-enm&nbsp;4))&nbsp;=&gt;&nbsp;392<br/>;real&nbsp;254.094/user&nbsp;249.000/sys&nbsp;1.531<br/><br/>maho-by-enmは#4819や#4821と同じ方法です
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-1</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">util</span><span class="o">.</span><span class="nv">combinations</span><span class="p">)</span>
<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">maho</span> <span class="nv">n</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">maho-in</span> <span class="nv">m</span> <span class="nv">l</span><span class="p">)</span>
    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="nv">m</span> <span class="mi">0</span><span class="p">)</span> <span class="mi">1</span>
      <span class="p">(</span><span class="nf">letrec</span>
       <span class="p">((</span><span class="nf">cn</span> <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="mi">2</span><span class="p">))</span>
        <span class="p">(</span><span class="nf">mylist</span>
         <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">li</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">)</span> <span class="nv">li</span><span class="p">))</span>
              <span class="p">(</span><span class="nf">filter</span>
               <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">li</span><span class="p">)</span> <span class="p">(</span><span class="nb">= </span><span class="p">(</span><span class="nb">apply </span><span class="nv">+</span> <span class="nv">li</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">cn</span> <span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">))))</span>
               <span class="p">(</span><span class="nf">combinations</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">l</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">))))))</span>
       <span class="p">(</span><span class="nb">apply </span><span class="nv">+</span> <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">a</span><span class="p">)</span> <span class="p">(</span><span class="nf">maho-in</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">lset-difference</span> <span class="nv">equal?</span> <span class="nv">l</span> <span class="nv">a</span><span class="p">)))</span> <span class="nv">mylist</span><span class="p">)))))</span>
  <span class="p">(</span><span class="nf">maho-in</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">iota</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">maho-by-enm</span> <span class="nv">n</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">center</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="mi">2</span><span class="p">))</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">flatten2</span> <span class="nv">l</span> <span class="nv">c</span><span class="p">)</span>
    <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">flatten1</span> <span class="nv">l</span> <span class="nv">c</span><span class="p">)</span>
      <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">null? </span><span class="nv">l</span><span class="p">)</span> <span class="nv">c</span>
        <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">)</span> <span class="p">(</span><span class="nf">flatten1</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">l</span><span class="p">)</span> <span class="nv">c</span><span class="p">))))</span>
    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">null? </span><span class="nv">l</span><span class="p">)</span> <span class="nv">c</span>
      <span class="p">(</span><span class="nf">flatten2</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">l</span><span class="p">)</span> <span class="p">(</span><span class="nf">flatten1</span> <span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">)</span> <span class="nv">c</span><span class="p">))))</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">my-equal?</span> <span class="nv">l1</span> <span class="nv">l2</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">null? </span><span class="p">(</span><span class="nf">lset-xor</span> <span class="nv">eq?</span> <span class="p">(</span><span class="nf">flatten2</span> <span class="nv">l1</span> <span class="o">&#39;</span><span class="p">())</span> <span class="nv">l2</span><span class="p">)))</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">enm-n</span> <span class="nv">n</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">filter</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">l</span><span class="p">)</span> <span class="p">(</span><span class="nb">= </span><span class="p">(</span><span class="nb">apply </span><span class="nv">+</span> <span class="nv">l</span><span class="p">)</span> <span class="p">(</span><span class="nf">center</span> <span class="nv">n</span><span class="p">)))</span>
            <span class="p">(</span><span class="nf">combinations</span> <span class="p">(</span><span class="nf">iota</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">n</span><span class="p">)))</span>
  <span class="p">(</span><span class="nf">filter</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">l</span><span class="p">)</span> <span class="p">(</span><span class="nf">my-equal?</span> <span class="nv">l</span> <span class="p">(</span><span class="nf">iota</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">)))</span>
          <span class="p">(</span><span class="nf">combinations</span> <span class="p">(</span><span class="nf">enm-n</span> <span class="nv">n</span><span class="p">)</span> <span class="nv">n</span><span class="p">)))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4824/addtag/" class="addtag" id="addtag_4824">Tags</a>:
	
    
    <a href="/web/20081204132440/http://ja.doukaku.org/tag/Gauche/">Gauche</a>
    
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4824/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4824/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4824"
  >-</span><span
  class="button yellow"
  id="rating_z_4824"
  >0</span><span 
  class="button green"
  id="rating_p_4824"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204132440/http://ja.doukaku.org/comment/4824/">
    2
    replies
  </a>

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4824/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4827">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/352/" target="_top">186</a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4827/">#4827</a>(<script language="JavaScript">print_time(new Date("2007/12/15 08:24 GMT"));</script><noscript>2007/12/15 08:24 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  タグ付け忘れた.&nbsp;Gaucheです.
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4827/addtag/" class="addtag" id="addtag_4827">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4827"
  >-</span><span
  class="button yellow"
  id="rating_z_4827"
  >0</span><span 
  class="button green"
  id="rating_p_4827"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4824/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4827/root/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4827/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4829">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/352/" target="_top">186</a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4829/">#4829</a>(<script language="JavaScript">print_time(new Date("2007/12/15 09:22 GMT"));</script><noscript>2007/12/15 09:22 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  同じ計算を何回もしているので#1671を参考にメモ化しました.<br/>n=5で2分と少々です.&nbsp;メモリ使用量は11MB&nbsp;(多分).<br/>Pen4&nbsp;3GHzです.<br/><br/>gosh&gt;&nbsp;;(time&nbsp;(maho-memo&nbsp;4))<br/>;&nbsp;real&nbsp;&nbsp;&nbsp;0.078<br/>;&nbsp;user&nbsp;&nbsp;&nbsp;0.078<br/>;&nbsp;sys&nbsp;&nbsp;&nbsp;&nbsp;0.000<br/>392<br/>gosh&gt;&nbsp;;(time&nbsp;(maho-memo&nbsp;5))<br/>;&nbsp;real&nbsp;130.656<br/>;&nbsp;user&nbsp;124.562<br/>;&nbsp;sys&nbsp;&nbsp;&nbsp;&nbsp;4.828<br/>3245664<br/>
	</div>
	
	<p class="link">
	  see: <a href="/web/20081204132440/http://ja.doukaku.org/comment/1671/">どう書く？org #1671 shiro: メモ化をちょっと試してみた。 単純にn...(「組合せ型の最小完全ハッシュ関数」の逆関数)</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">maho-memo</span> <span class="nv">n</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="nv">cn</span> <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="mi">2</span><span class="p">))</span>
  <span class="p">(</span><span class="k">define </span><span class="nv">maho-in-memo</span>
    <span class="p">(</span><span class="nf">let1</span>
     <span class="nv">tab</span> <span class="p">(</span><span class="nf">make-hash-table</span> <span class="ss">&#39;equal?</span><span class="p">)</span>
     <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">memo</span> <span class="nv">m</span> <span class="nv">l</span> <span class="nv">v</span><span class="p">)</span> <span class="p">(</span><span class="nf">hash-table-put!</span> <span class="nv">tab</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">m</span> <span class="nv">l</span><span class="p">)</span> <span class="nv">v</span><span class="p">)</span> <span class="nv">v</span><span class="p">)</span>
     <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">m</span> <span class="nv">l</span><span class="p">)</span>
       <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nb">= </span><span class="nv">m</span> <span class="mi">0</span><span class="p">)</span> <span class="mi">1</span><span class="p">)</span>
             <span class="p">((</span><span class="nf">hash-table-get</span> <span class="nv">tab</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">m</span> <span class="nv">l</span><span class="p">)</span> <span class="no">#f</span><span class="p">))</span>
             <span class="p">(</span><span class="nf">else</span>
              <span class="p">(</span><span class="nf">memo</span> <span class="nv">m</span> <span class="nv">l</span>
                    <span class="p">(</span><span class="nf">apply</span>
                     <span class="nv">+</span>
                     <span class="p">(</span><span class="nf">map</span>
                      <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">a</span><span class="p">)</span> <span class="p">(</span><span class="nf">maho-in-memo</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">lset-difference</span> <span class="nv">equal?</span> <span class="nv">l</span> <span class="nv">a</span><span class="p">)))</span>
                      <span class="p">(</span><span class="nf">map</span>
                       <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">li</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">)</span> <span class="nv">li</span><span class="p">))</span>
                       <span class="p">(</span><span class="nf">filter</span>
                        <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">li</span><span class="p">)</span> <span class="p">(</span><span class="nb">= </span><span class="p">(</span><span class="nb">apply </span><span class="nv">+</span> <span class="nv">li</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">cn</span> <span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">))))</span>
                        <span class="p">(</span><span class="nf">combinations</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">l</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">))))))))))))</span>
  <span class="p">(</span><span class="nf">maho-in-memo</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">iota</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">)))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4829/addtag/" class="addtag" id="addtag_4829">Tags</a>:
	
    
    <a href="/web/20081204132440/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4829/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4829/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4829"
  >-</span><span
  class="button yellow"
  id="rating_z_4829"
  >0</span><span 
  class="button green"
  id="rating_p_4829"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4824/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4829/root/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081204132440/http://ja.doukaku.org/comment/4829/">
    2
    replies
  </a>

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4829/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4830">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/352/" target="_top">186</a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4830/">#4830</a>(<script language="JavaScript">print_time(new Date("2007/12/15 09:24 GMT"));</script><noscript>2007/12/15 09:24 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>二重投稿orz
申し訳ないんですが, #4828の方を消してもらえませんでしょうか?</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4830/addtag/" class="addtag" id="addtag_4830">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4830"
  >-</span><span
  class="button yellow"
  id="rating_z_4830"
  >0</span><span 
  class="button green"
  id="rating_p_4830"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4829/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4830/root/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4830/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4887">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/352/" target="_top">186</a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4887/">#4887</a>(<script language="JavaScript">print_time(new Date("2007/12/19 14:31 GMT"));</script><noscript>2007/12/19 14:31 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  無駄な計算を省いて1分切ったので再投稿<br/><br/>gosh&gt;<br/>;(time&nbsp;(maho-memo&nbsp;5))<br/>;&nbsp;real&nbsp;&nbsp;43.391<br/>;&nbsp;user&nbsp;&nbsp;42.625<br/>;&nbsp;sys&nbsp;&nbsp;&nbsp;&nbsp;0.641<br/>3245664
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-1</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">util</span><span class="o">.</span><span class="nv">combinations</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">maho-memo</span> <span class="nv">n</span><span class="p">)</span>
  <span class="c1">;tableに足してcnになるリストを入れておく</span>
  <span class="p">(</span><span class="k">define </span><span class="nv">table</span> 
    <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">cn</span> <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span> <span class="mi">2</span><span class="p">)))</span>
      <span class="p">(</span><span class="nf">filter</span>
       <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">li</span><span class="p">)</span> <span class="p">(</span><span class="nb">= </span><span class="p">(</span><span class="nb">apply </span><span class="nv">+</span> <span class="nv">li</span><span class="p">)</span> <span class="nv">cn</span><span class="p">))</span>
       <span class="p">(</span><span class="nf">combinations</span> <span class="p">(</span><span class="nf">iota</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">n</span><span class="p">))))</span>
  <span class="p">(</span><span class="k">define </span><span class="nv">maho-in-memo</span>
    <span class="p">(</span><span class="nf">let1</span>
     <span class="nv">tab</span> <span class="p">(</span><span class="nf">make-hash-table</span> <span class="ss">&#39;equal?</span><span class="p">)</span>
     <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">memo</span> <span class="nv">m</span> <span class="nv">l</span> <span class="nv">v</span><span class="p">)</span> <span class="p">(</span><span class="nf">hash-table-put!</span> <span class="nv">tab</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">m</span> <span class="nv">l</span><span class="p">)</span> <span class="nv">v</span><span class="p">)</span> <span class="nv">v</span><span class="p">)</span>
     <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">m</span> <span class="nv">l</span><span class="p">)</span>
       <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nb">= </span><span class="nv">m</span> <span class="mi">0</span><span class="p">)</span> <span class="mi">1</span><span class="p">)</span>
             <span class="p">((</span><span class="nf">hash-table-get</span> <span class="nv">tab</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">m</span> <span class="nv">l</span><span class="p">)</span> <span class="no">#f</span><span class="p">))</span>
             <span class="p">(</span><span class="nf">else</span>
              <span class="p">(</span><span class="nf">memo</span> <span class="nv">m</span> <span class="nv">l</span>
                    <span class="p">(</span><span class="nf">apply</span>
                     <span class="nv">+</span>
                     <span class="p">(</span><span class="nb">map </span><span class="c1">; 今のlからaを除いたリストでmaho-in-memoを呼ぶ</span>
                      <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">a</span><span class="p">)</span> <span class="p">(</span><span class="nf">maho-in-memo</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">lset-difference</span> <span class="nv">equal?</span> <span class="nv">l</span> <span class="nv">a</span><span class="p">)))</span>
                      <span class="p">(</span><span class="nf">filter</span> <span class="c1">;(car l)で始まるtableの中のリストを抜き出す</span>
                       <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">li</span><span class="p">)</span> <span class="p">(</span><span class="k">and </span><span class="p">(</span><span class="nb">equal? </span><span class="p">(</span><span class="nb">car </span><span class="nv">li</span><span class="p">)</span> <span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">))</span> <span class="p">(</span><span class="nf">lset&lt;=</span> <span class="nv">equal?</span> <span class="nv">li</span> <span class="nv">l</span><span class="p">)))</span>
                       <span class="nv">table</span><span class="p">)))))))))</span>
  <span class="p">(</span><span class="nf">maho-in-memo</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">iota</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">)))</span>
<span class="p">(</span><span class="nf">time</span> <span class="p">(</span><span class="nf">maho-memo</span> <span class="mi">5</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4887/addtag/" class="addtag" id="addtag_4887">Tags</a>:
	
    
    <a href="/web/20081204132440/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4887/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4887/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4887"
  >-</span><span
  class="button yellow"
  id="rating_z_4887"
  >0</span><span 
  class="button green"
  id="rating_p_4887"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4829/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204132440/http://ja.doukaku.org/comment/4887/root/"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4887/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  

  

  

  

  
    





<div class="comment" id="comment4832">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4832/">#4832</a>(<script language="JavaScript">print_time(new Date("2007/12/15 11:08 GMT"));</script><noscript>2007/12/15 11:08 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Pen4 2.4Gで実行して、</p>
<dl class="docutils">
<dt>4の場合</dt>
<dd>392 : 31(ms)</dd>
<dt>5の場合</dt>
<dd>3245664 : 224157(ms)</dd>
</dl>
<p>と、なりました。
簡単に枝狩りをしただけの、総当りです。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Answer108</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">size_</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">maxNumber_</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">average_</span><span class="o">;</span>

    <span class="k">private</span> <span class="kt">int</span> <span class="n">count_</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

    <span class="k">public</span> <span class="n">Answer108</span><span class="o">(</span><span class="kt">int</span> <span class="n">size</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">size_</span> <span class="o">=</span> <span class="n">size</span><span class="o">;</span>
        <span class="n">maxNumber_</span> <span class="o">=</span> <span class="n">size</span> <span class="o">*</span> <span class="n">size</span><span class="o">;</span>
        <span class="n">average_</span> <span class="o">=</span> <span class="n">size</span> <span class="o">*</span> <span class="o">(</span><span class="n">maxNumber_</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>

        <span class="n">countPair</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="kt">void</span> <span class="n">countPair</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">size_</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;&gt;</span> <span class="n">array</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">size_</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">array</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;());</span>
        <span class="o">}</span>
        <span class="n">array</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">add</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
        <span class="n">countPair</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">void</span> <span class="n">countPair</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;&gt;</span> <span class="n">array</span><span class="o">,</span> <span class="kt">int</span> <span class="n">nextNumber</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">nextNumber</span> <span class="o">&lt;=</span> <span class="n">maxNumber_</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">size_</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">array</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
                <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">size</span> <span class="o">==</span> <span class="n">size_</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">size</span> <span class="o">==</span> <span class="n">size_</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">sum</span><span class="o">(</span><span class="n">list</span><span class="o">)</span> <span class="o">+</span> <span class="n">nextNumber</span> <span class="o">!=</span> <span class="n">average_</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="kt">int</span> <span class="n">rest</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">lastIndex</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">lastIndex</span> <span class="o">&lt;</span> <span class="n">size_</span> <span class="o">-</span> <span class="n">size</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="n">lastIndex</span><span class="o">++)</span> <span class="o">{</span>
                        <span class="n">rest</span> <span class="o">+=</span> <span class="n">maxNumber_</span> <span class="o">-</span> <span class="n">lastIndex</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">sum</span><span class="o">(</span><span class="n">list</span><span class="o">)</span> <span class="o">+</span> <span class="n">nextNumber</span> <span class="o">+</span> <span class="n">rest</span> <span class="o">&lt;</span> <span class="n">average_</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
                <span class="o">}</span>

                <span class="k">if</span> <span class="o">(</span><span class="n">index</span> <span class="o">&gt;=</span> <span class="n">nextNumber</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
                <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">nextNumber</span><span class="o">);</span>
                <span class="n">countPair</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">nextNumber</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
                <span class="n">list</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">nextNumber</span><span class="o">));</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="c">//System.out.println(toString(array));</span>
            <span class="n">count_</span><span class="o">++;</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">sum</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">array</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="nl">num:</span> <span class="n">array</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">sum</span> <span class="o">+=</span> <span class="n">num</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">sum</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">int</span> <span class="n">getCount</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">count_</span><span class="o">;</span>
    <span class="o">}</span>


    <span class="k">public</span> <span class="k">static</span> <span class="n">String</span> <span class="n">toString</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;&gt;</span> <span class="n">array</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">strs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">array</span><span class="o">.</span><span class="na">size</span><span class="o">()];</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">strs</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">strs</span><span class="o">[</span><span class="n">index</span><span class="o">]</span> <span class="o">=</span> <span class="n">array</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">).</span><span class="na">toString</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">strs</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">Answer108</span> <span class="n">ans</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Answer108</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ans</span><span class="o">.</span><span class="na">getCount</span><span class="o">());</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;elapse: &quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span> <span class="o">-</span> <span class="n">start</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;(ms)&quot;</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4832/addtag/" class="addtag" id="addtag_4832">Tags</a>:
	
    
    <a href="/web/20081204132440/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4832/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4832/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4832"
  >-</span><span
  class="button yellow"
  id="rating_z_4832"
  >0</span><span 
  class="button green"
  id="rating_p_4832"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4832/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  

  

  
    





<div class="comment" id="comment4835">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/28/" target="_top">minke</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4835/">#4835</a>(<script language="JavaScript">print_time(new Date("2007/12/15 18:12 GMT"));</script><noscript>2007/12/15 18:12 GMT</noscript>)
	
	
	
	[<a href="/web/20081204132440/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #afffaf;">5/5=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>$ g++ -O3 maho.cpp &amp;&amp; time ./a.out
3245664

real    0m26.930s
user    0m22.310s
sys     0m4.560s

最初に和が (総和/n) となるn個の値の組を
ビット列として全パターン生成してしまいます。
そうしておいて、ビットパターンの中から排他的なものを選んでいくアルゴリズム。

それなりに速いかと。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>
<span class="k">typedef</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">bit_t</span><span class="p">;</span>

<span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">bit_t</span><span class="o">&gt;</span> <span class="n">bits</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">n2</span><span class="p">,</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="kt">void</span> <span class="n">comb</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">,</span> <span class="kt">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">bit_t</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">k</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">a</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n2</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
      <span class="n">comb</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">s</span><span class="o">-</span><span class="n">i</span><span class="p">,</span> <span class="n">b</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">));</span>
  <span class="k">else</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">a</span> <span class="o">&lt;=</span> <span class="n">s</span> <span class="o">&amp;&amp;</span> <span class="n">s</span> <span class="o">&lt;=</span> <span class="n">n2</span><span class="p">)</span>
      <span class="n">bits</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">b</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">s</span><span class="o">-</span><span class="mi">1</span><span class="p">));</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">calc</span><span class="p">(</span><span class="kt">int</span> <span class="n">s</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">,</span> <span class="n">bit_t</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">k</span> <span class="o">==</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span> <span class="o">++</span><span class="n">cnt</span><span class="p">;</span> <span class="k">return</span><span class="p">;</span> <span class="p">}</span>

  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">s</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">bits</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">b</span> <span class="o">&amp;</span> <span class="n">bits</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span>
      <span class="n">calc</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">b</span> <span class="o">|</span> <span class="n">bits</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">n</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
  <span class="n">n2</span> <span class="o">=</span> <span class="n">n</span> <span class="o">*</span> <span class="n">n</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="n">n</span> <span class="o">*</span> <span class="p">(</span><span class="n">n2</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>

  <span class="n">comb</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">m</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
  <span class="n">calc</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>

  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">cnt</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204132440/http://ja.doukaku.org/comment/4835/addtag/" class="addtag" id="addtag_4835">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204132440/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4835/download/">
		download code
      </a>]
	  [<a href="/web/20081204132440/http://ja.doukaku.org/comment/4835/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #afffaf;"
  >5/5=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4835"
  >-</span><span
  class="button yellow"
  id="rating_z_4835"
  >0</span><span 
  class="button green"
  id="rating_p_4835"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204132440/http://ja.doukaku.org/comment/4835/">
    3
    replies
  </a>

  [<a href="/web/20081204132440/http://ja.doukaku.org/108/reply_to/4835/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204132440im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4836">
  <p class="banner"><a href="/web/20081204132440/http://ja.doukaku.org/user/28/" target="_top">minke</a><a href="/web/20081204132440/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204132440im_/http://ja.doukaku.org/static">




<!--
     FILE ARCHIVED ON 13:24:40 Dec 4, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:01:43 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
