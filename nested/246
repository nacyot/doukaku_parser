
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
割り算の筆算
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20100628134244cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20100628134244cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20100628134244cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20100628134244/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20100628134244/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20100628134244js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20100628134244js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20100628134244js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20100628134244js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app3.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/246\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "28";
var displayMonth = "Jun";
var displayYear = "2010";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/246/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20100628134244" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20100419130419/http://ja.doukaku.org/246/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="19 Apr 2010"><strong>APR</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 13:42:44 Jun 28, 2010">JUN</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jul
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20100419130419/http://ja.doukaku.org/246/nested/" title="13:04:19 Apr 19, 2010" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 13:42:44 Jun 28, 2010">28</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20090519001831/http://ja.doukaku.org/246/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="19 May 2009"><strong>2009</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 13:42:44 Jun 28, 2010">2010</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2011
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20100628134244*/http://ja.doukaku.org/246/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>4 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">19 May 09 - 28 Jun 10</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000010000000_2010:5:000201000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20100628134244/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20100628134244im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20100628134244/http://ja.doukaku.org/246/">割り算の筆算</a>
</h2>

    





<div class="comment" id="comment8785">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/1024/" target="_top">rennos</a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8785/">#8785</a>(<script language="JavaScript">print_time(new Date("2009/04/05 09:35 GMT"));</script><noscript>2009/04/05 09:35 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #8fff8f;">7/7=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>整数 n, m を与えれば、 n ÷ m の筆算を出力するような
プロシージャ(関数)を創ってください。

ウィンドウに描画するもよし、
コンソールに出力するもよし、です。
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8785/addtag/" class="addtag" id="addtag_8785">タグ</a>:
	
    
    <a href="/web/20100628134244/http://ja.doukaku.org/tag/%EF%BC%95/">５</a>
    
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #8fff8f;"
  >7/7=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8785"
  >-</span><span
  class="button yellow"
  id="rating_z_8785"
  >0</span><span 
  class="button green"
  id="rating_p_8785"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8785/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20100628134244/http://ja.doukaku.org/246/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20100628134244/http://ja.doukaku.org/246/flatten/">フラット表示</a> 
<a href="/web/20100628134244/http://ja.doukaku.org/246/">非表示</a> 


  

  
    





<div class="comment" id="comment8801">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8801/">#8801</a>(<script language="JavaScript">print_time(new Date("2009/04/11 21:30 GMT"));</script><noscript>2009/04/11 21:30 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>gauche 0.8.13です。
商の0になる桁の計算過程表示が冗長ですが・・・

gosh&gt; (warizan 54321 5)
  10864 ... 1
  -----
5)54321
  5
  -----
   4
   0
  -----
   43
   40
  -----
    32
    30
  -----
     21
     20
  -----
      1
#&lt;undef&gt;
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">warizan</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">printf</span> <span class="nv">format-str</span> <span class="o">.</span> <span class="nv">data</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">display </span><span class="p">(</span><span class="nb">apply </span><span class="nv">format</span> <span class="nv">format-str</span> <span class="nv">data</span><span class="p">)))</span>

  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">width</span> <span class="nv">data</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">string-length </span><span class="p">(</span><span class="nf">format</span> <span class="s">&quot;~a&quot;</span> <span class="nv">data</span><span class="p">)))</span>

  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">num-at</span> <span class="nv">n</span> <span class="nv">scale</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">remainder </span><span class="p">(</span><span class="nb">quotient </span><span class="nv">n</span> <span class="nv">scale</span><span class="p">)</span> <span class="mi">10</span><span class="p">))</span>

  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">div-num</span> <span class="nv">x</span> <span class="nv">scale</span><span class="p">)</span>
    <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">q</span> <span class="p">(</span><span class="nb">quotient </span><span class="nv">x</span> <span class="nv">scale</span><span class="p">)))</span>
      <span class="p">(</span><span class="nf">string-append</span>
       <span class="p">(</span><span class="nb">make-string </span><span class="p">(</span><span class="nb">- </span><span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nf">width</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">width</span> <span class="nv">m</span><span class="p">)</span> <span class="mi">2</span><span class="p">)</span>
               <span class="p">(</span><span class="nf">width</span> <span class="nv">q</span><span class="p">)</span>
               <span class="p">(</span><span class="nf">width</span> <span class="nv">scale</span><span class="p">))</span>
            <span class="sc">#\space</span><span class="p">)</span>
       <span class="p">(</span><span class="nb">number-&gt;string </span><span class="nv">q</span><span class="p">))))</span>

  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">div-line</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">string-append</span>
     <span class="p">(</span><span class="nb">make-string </span><span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nf">width</span> <span class="nv">m</span><span class="p">)</span> <span class="mi">1</span><span class="p">)</span> <span class="sc">#\space</span><span class="p">)</span>
     <span class="p">(</span><span class="nb">make-string </span><span class="p">(</span><span class="nf">width</span> <span class="nv">n</span><span class="p">)</span> <span class="sc">#\-</span><span class="p">)))</span>

  <span class="p">(</span><span class="k">let* </span><span class="p">((</span><span class="nb">/ </span><span class="nv">quotient</span><span class="p">)</span> <span class="p">(</span><span class="nf">q</span> <span class="p">(</span><span class="nb">/ </span><span class="nv">n</span> <span class="nv">m</span><span class="p">)))</span>
    <span class="p">(</span><span class="nf">printf</span> <span class="s">&quot;~a ... ~a\n~a\n~a)~a\n&quot;</span>
        <span class="p">(</span><span class="nf">div-num</span> <span class="nv">q</span> <span class="mi">1</span><span class="p">)</span>
        <span class="p">(</span><span class="nb">remainder </span><span class="nv">n</span> <span class="nv">m</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">div-line</span><span class="p">)</span>
        <span class="nv">m</span> 
        <span class="nv">n</span><span class="p">)</span>

    <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">s0</span> <span class="p">(</span><span class="nb">expt </span><span class="mi">10</span> <span class="p">(</span><span class="nb">- </span><span class="p">(</span><span class="nf">width</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">))))</span>
      <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">s1</span> <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="nv">s0</span> <span class="mi">1</span><span class="p">)</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">/ </span><span class="nv">s0</span> <span class="mi">10</span><span class="p">))))</span>
    <span class="p">(</span><span class="nf">printf</span> <span class="s">&quot;~a\n~a\n~a\n&quot;</span> 
        <span class="p">(</span><span class="nf">div-num</span> <span class="p">(</span><span class="nb">* </span><span class="nv">m</span> <span class="nv">s0</span> <span class="p">(</span><span class="nf">num-at</span> <span class="nv">q</span> <span class="nv">s0</span><span class="p">))</span> <span class="nv">s0</span><span class="p">)</span>    
        <span class="p">(</span><span class="nf">div-line</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">div-num</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="p">(</span><span class="nb">* </span><span class="nv">m</span> <span class="p">(</span><span class="nb">/ </span><span class="nv">q</span> <span class="nv">s0</span><span class="p">)</span> <span class="nv">s0</span><span class="p">))</span> <span class="nv">s1</span><span class="p">))</span>
    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&gt; </span><span class="nv">s0</span> <span class="mi">1</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">loop</span> <span class="nv">s1</span><span class="p">))))))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8801/addtag/" class="addtag" id="addtag_8801">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8801/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8801/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8801"
  >-</span><span
  class="button yellow"
  id="rating_z_8801"
  >0</span><span 
  class="button green"
  id="rating_p_8801"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8801/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8803">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8803/">#8803</a>(<script language="JavaScript">print_time(new Date("2009/04/13 09:17 GMT"));</script><noscript>2009/04/13 09:17 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Squeak Smalltalk で。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre>| printWarizan |
printWarizan := [:n :m |
    | width line quo rem isFirst |

    n := n printString.
    m := m printString.
    width := n size + m size + 1.
    line := String new: n size + 1 withAll: $-.
    quo := n // m.
     
    Transcript cr.
    {quo. line. m, &#39;)&#39;, n} do: [:each |
        Transcript cr; show: (each forceTo: width paddingStartWith: $ )].

    rem := &#39;&#39;.
    isFirst := true.
    n size to: 1 by: -1 do: [:idx |
        | digit |
        rem := rem copyWith: (n atLast: idx).
        digit := (quo atLast: idx ifAbsent: [$0]) asString.
        digit ~= &#39;0&#39; ifTrue: [
            | elems |
            elems := {rem. width - idx + 1. digit * m. width - idx + 1. line. width}.
            isFirst ifTrue: [isFirst := false. elems := elems allButFirst: 2].
            elems pairsDo: [:each :len |
                Transcript cr; show: (each forceTo: len paddingStartWith: $ )]].
        rem := rem - (digit * m)].

        Transcript cr; show: (n \\ m forceTo: width paddingStartWith: $ )].

World findATranscript: nil.
printWarizan value: 123456 value: 77

&quot;=&gt;
     1603
  -------
77)123456
    77
  -------
    464
    462
  -------
      256
      231
  -------
       25
&quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8803/addtag/" class="addtag" id="addtag_8803">タグ</a>:
	
    
    <a href="/web/20100628134244/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8803/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8803/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8803"
  >-</span><span
  class="button yellow"
  id="rating_z_8803"
  >0</span><span 
  class="button green"
  id="rating_p_8803"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8803/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8806">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/573/" target="_top">greentea</a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8806/">#8806</a>(<script language="JavaScript">print_time(new Date("2009/04/14 07:23 GMT"));</script><noscript>2009/04/14 07:23 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Pythonでゴリゴリと。
文字列と整数の変換を繰り返したり、式が長かったり、無駄に条件分けがあったり、いろいろと汚いですが……</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="highlight"><pre><span class="c">#!/usr/bin/python                     </span>
<span class="c"># coding: utf-8                       </span>

<span class="c"># aわるbを実装します</span>
<span class="n">a</span> <span class="o">=</span> <span class="mi">123456</span>          
<span class="n">b</span> <span class="o">=</span> <span class="mi">77</span>              

<span class="c"># 割り算の筆算を表示する関数</span>
<span class="k">def</span> <span class="nf">warizan</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>          
        <span class="c"># 数字の桁数を求める関数</span>
        <span class="n">digit</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>

        <span class="n">ans_div</span> <span class="o">=</span> <span class="n">a</span> <span class="o">//</span> <span class="n">b</span>
        <span class="n">ans_mod</span> <span class="o">=</span> <span class="n">a</span> <span class="o">%</span> <span class="n">b</span> 

        <span class="k">print</span> <span class="p">(</span><span class="n">digit</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">+</span> <span class="n">digit</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">digit</span><span class="p">(</span><span class="n">ans_div</span><span class="p">))</span> <span class="o">*</span> <span class="s">&#39; &#39;</span> <span class="o">+</span> \
                <span class="nb">str</span><span class="p">(</span><span class="n">ans_div</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39; ... &#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">ans_mod</span><span class="p">)</span>
        <span class="k">print</span> <span class="n">digit</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="o">*</span> <span class="s">&#39; &#39;</span> <span class="o">+</span> <span class="p">(</span><span class="n">digit</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="s">&#39;-&#39;</span>
        <span class="k">print</span> <span class="nb">str</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;)&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

        <span class="n">start</span> <span class="o">=</span> <span class="p">(</span><span class="n">digit</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">+</span> <span class="n">digit</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">digit</span><span class="p">(</span><span class="n">ans_div</span><span class="p">))</span>
        <span class="c"># 引く数</span>
        <span class="n">minuses</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">ans_div</span><span class="p">)[</span><span class="n">i</span><span class="p">])</span> <span class="o">*</span> <span class="n">b</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">digit</span><span class="p">(</span><span class="n">ans_div</span><span class="p">))]</span>
        <span class="c"># 引かれる数</span>
        <span class="n">minuend</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">a</span><span class="p">)[</span><span class="mi">0</span><span class="p">:</span><span class="n">digit</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="o">-</span><span class="n">digit</span><span class="p">(</span><span class="n">ans_div</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span>
        <span class="c"># 引いた後に下に下ろしてくる数字(aを一桁ずつ)</span>
        <span class="n">downs</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">a</span><span class="p">)[</span><span class="n">i</span><span class="p">])</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">digit</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">-</span> <span class="n">digit</span><span class="p">(</span><span class="n">ans_div</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">digit</span><span class="p">(</span><span class="n">a</span><span class="p">))]</span>
        <span class="n">downs</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="bp">None</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">minus</span><span class="p">,</span> <span class="n">down</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">minuses</span><span class="p">,</span> <span class="n">downs</span><span class="p">):</span>
                <span class="k">if</span> <span class="n">minus</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
                        <span class="k">print</span> <span class="p">(</span><span class="n">start</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">digit</span><span class="p">(</span><span class="n">minus</span><span class="p">))</span> <span class="o">*</span> <span class="s">&#39; &#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">minus</span><span class="p">)</span>
                        <span class="k">print</span> <span class="p">(</span><span class="n">start</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">-</span> <span class="nb">max</span><span class="p">(</span><span class="n">digit</span><span class="p">(</span><span class="n">minuend</span><span class="p">),</span> <span class="n">digit</span><span class="p">(</span><span class="n">minus</span><span class="p">)))</span> <span class="o">*</span> <span class="s">&#39; &#39;</span> <span class="o">+</span> \ 
                                 <span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">digit</span><span class="p">(</span><span class="n">minuend</span><span class="p">),</span> <span class="n">digit</span><span class="p">(</span><span class="n">minus</span><span class="p">))</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="s">&#39;-&#39;</span>
                <span class="n">start</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="n">minuend</span> <span class="o">=</span> <span class="p">(</span><span class="n">minuend</span> <span class="o">-</span> <span class="n">minus</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span> <span class="o">+</span> <span class="n">down</span> <span class="k">if</span> <span class="n">down</span> <span class="o">!=</span> <span class="bp">None</span> <span class="k">else</span> <span class="n">minuend</span> <span class="o">-</span> <span class="n">minus</span>
                <span class="k">if</span> <span class="n">minuend</span> <span class="o">&gt;=</span> <span class="n">b</span> <span class="ow">or</span> <span class="n">down</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>
                        <span class="k">print</span> <span class="p">(</span><span class="n">start</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">digit</span><span class="p">(</span><span class="n">minuend</span><span class="p">))</span> <span class="o">*</span> <span class="s">&#39; &#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">minuend</span><span class="p">)</span>


<span class="c"># 関数呼び出し</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
        <span class="n">warizan</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8806/addtag/" class="addtag" id="addtag_8806">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8806/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8806/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8806"
  >-</span><span
  class="button yellow"
  id="rating_z_8806"
  >0</span><span 
  class="button green"
  id="rating_p_8806"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8806/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8811">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/852/" target="_top">emasaka</a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8811/">#8811</a>(<script language="JavaScript">print_time(new Date("2009/04/15 00:23 GMT"));</script><noscript>2009/04/15 00:23 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>$ wari 12345 67
     184
  ------
67)12345
    67
  ------
    564
    536
  ------
     285
     268
  ------
      17
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55</pre></td><td class="code"><div class="highlight"><pre><span class="k">function </span>wari<span class="o">()</span> <span class="o">{</span>
    <span class="nb">local</span> -i <span class="nv">m</span><span class="o">=</span><span class="nv">$1</span>
    <span class="nb">local</span> -i <span class="nv">n</span><span class="o">=</span><span class="nv">$2</span>
    <span class="nb">local </span><span class="nv">r</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s1">&#39;%*d&#39;</span> <span class="k">${#</span><span class="nv">m</span><span class="k">}</span> <span class="nv">$(</span><span class="o">(</span>m / n<span class="k">)</span><span class="o">))</span>
    write_head <span class="nv">$m</span> <span class="nv">$n</span> <span class="s2">&quot;$r&quot;</span>
    write_body <span class="nv">$m</span> <span class="nv">$n</span> <span class="s2">&quot;$r&quot;</span>
<span class="o">}</span>

<span class="k">function </span>write_head<span class="o">()</span> <span class="o">{</span>
    <span class="nb">local </span><span class="nv">m</span><span class="o">=</span><span class="nv">$1</span>
    <span class="nb">local </span><span class="nv">n</span><span class="o">=</span><span class="nv">$2</span>
    <span class="nb">local </span><span class="nv">r</span><span class="o">=</span><span class="nv">$3</span>

    repeat_char <span class="s1">&#39; &#39;</span> <span class="k">$(</span><span class="o">(</span><span class="k">${#</span><span class="nv">n</span><span class="k">}</span> + <span class="m">1</span><span class="k">)</span><span class="o">)</span>
    <span class="nb">echo</span> <span class="s2">&quot;$r&quot;</span>
    write_bar <span class="nv">$m</span> <span class="nv">$n</span>
    <span class="nb">echo</span> <span class="s2">&quot;$n)$m&quot;</span>
<span class="o">}</span>

<span class="k">function </span>write_body<span class="o">()</span> <span class="o">{</span>
    <span class="nb">local </span><span class="nv">m</span><span class="o">=</span><span class="nv">$1</span>
    <span class="nb">local </span><span class="nv">n</span><span class="o">=</span><span class="nv">$2</span>
    <span class="nb">local </span><span class="nv">r</span><span class="o">=</span><span class="nv">$3</span>
    <span class="nb">local </span>rest flag i

    <span class="k">for</span> <span class="o">((</span><span class="nv">i</span> <span class="o">=</span> 0; i &lt; <span class="k">${#</span><span class="nv">r</span><span class="k">}</span>; i++<span class="o">))</span> <span class="o">{</span>
        <span class="nb">local </span><span class="nv">c</span><span class="o">=</span><span class="k">${</span><span class="nv">r</span><span class="p">:</span><span class="nv">i</span><span class="p">:</span><span class="nv">1</span><span class="k">}</span>
        <span class="nv">rest</span><span class="o">=</span><span class="s2">&quot;$rest${m:i:1}&quot;</span>
        <span class="k">if</span> <span class="o">[[</span> <span class="s2">&quot;$c&quot;</span> <span class="o">==</span> <span class="o">[</span>1-9<span class="o">]</span> <span class="o">]]</span>; <span class="k">then</span>
            <span class="o">[</span> -n <span class="s2">&quot;$flag&quot;</span> <span class="o">]</span> &amp;&amp; <span class="nb">printf</span> <span class="s1">&#39;%*d\n&#39;</span> <span class="k">$(</span><span class="o">(</span>i + <span class="k">${#</span><span class="nv">n</span><span class="k">}</span> + <span class="m">2</span><span class="k">)</span><span class="o">)</span> <span class="nv">$rest</span>
            <span class="nb">printf</span> <span class="s1">&#39;%*d\n&#39;</span> <span class="k">$(</span><span class="o">(</span>i + <span class="k">${#</span><span class="nv">n</span><span class="k">}</span> + <span class="m">2</span><span class="k">)</span><span class="o">)</span> <span class="k">$(</span><span class="o">(</span>c * n<span class="k">)</span><span class="o">)</span>
            write_bar <span class="nv">$m</span> <span class="nv">$n</span>
            <span class="nv">rest</span><span class="o">=</span><span class="k">$(</span><span class="o">(</span>rest - <span class="o">(</span>c * n<span class="k">)</span><span class="o">))</span>
            <span class="nv">flag</span><span class="o">=</span>1
        <span class="k">fi</span>
    <span class="o">}</span>
    <span class="o">[</span> -z <span class="s2">&quot;$flag&quot;</span> <span class="o">]</span> &amp;&amp; write_bar <span class="nv">$m</span> <span class="nv">$n</span>
    <span class="nb">printf</span> <span class="s1">&#39;%*d\n&#39;</span> <span class="k">$(</span><span class="o">(</span>i + <span class="k">${#</span><span class="nv">n</span><span class="k">}</span> + <span class="m">1</span><span class="k">)</span><span class="o">)</span> <span class="nv">$rest</span>
<span class="o">}</span>

<span class="k">function </span>write_bar<span class="o">()</span> <span class="o">{</span>
    <span class="nb">local </span><span class="nv">m</span><span class="o">=</span><span class="nv">$1</span>
    <span class="nb">local </span><span class="nv">n</span><span class="o">=</span><span class="nv">$2</span>
    repeat_char <span class="s1">&#39; &#39;</span> <span class="k">${#</span><span class="nv">n</span><span class="k">}</span>
    repeat_char - <span class="k">$(</span><span class="o">(</span><span class="k">${#</span><span class="nv">m</span><span class="k">}</span> + <span class="m">1</span><span class="k">)</span><span class="o">)</span>
    <span class="nb">echo</span>
<span class="o">}</span>

<span class="k">function </span>repeat_char<span class="o">()</span> <span class="o">{</span>
    <span class="nb">local </span><span class="nv">c</span><span class="o">=</span><span class="nv">$1</span>
    <span class="nb">local </span><span class="nv">n</span><span class="o">=</span><span class="nv">$2</span>
    <span class="k">while</span> <span class="o">((</span>n--<span class="o">))</span>; <span class="k">do</span>
<span class="k">        </span><span class="nb">echo</span> -n <span class="s2">&quot;$c&quot;</span>
    <span class="k">done</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8811/addtag/" class="addtag" id="addtag_8811">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8811/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8811/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8811"
  >-</span><span
  class="button yellow"
  id="rating_z_8811"
  >0</span><span 
  class="button green"
  id="rating_p_8811"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8811/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8812">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/1026/" target="_top">airhead</a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8812/">#8812</a>(<script language="JavaScript">print_time(new Date("2009/04/15 08:16 GMT"));</script><noscript>2009/04/15 08:16 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>JavaScriptで。手抜きHTMLに入れてありますが、このままでも大抵のブラウザで動くと思います。</p>
<p>どうせすっきり書けないだろうしというわけで、整数範囲で割れるだけ割るのに加えて、商の各桁について「0」以外が得られてからf桁に達したら筆算を止める（f桁に達しないうちは小数点以下になっても続ける）、というのも入れてみました。で、予想以上にごちゃごちゃ。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20100628134244/http://slashdot.jp/~airhead/journal/473120">memo: 割り算の筆算</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95</pre></td><td class="code"><div class="highlight"><pre><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="k">function</span> <span class="nx">divOnPaper</span><span class="p">(</span><span class="nx">n</span><span class="o">,</span> <span class="nx">m</span><span class="o">,</span> <span class="nx">maxFigs</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">n</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">));</span> <span class="nx">n</span> <span class="o">=</span> <span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">||</span><span class="nx">n</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">)</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="nx">n</span><span class="o">;</span>
    <span class="nx">m</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Number</span><span class="p">(</span><span class="nx">m</span><span class="p">));</span> <span class="nx">m</span> <span class="o">=</span> <span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">||</span><span class="nx">m</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">)</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="nx">m</span><span class="o">;</span>
    <span class="nx">maxFigs</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Number</span><span class="p">(</span><span class="nx">maxFigs</span><span class="p">));</span> <span class="nx">maxFigs</span> <span class="o">=</span> <span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">maxFigs</span><span class="p">)</span><span class="o">||</span><span class="nx">maxFigs</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="nx">maxFigs</span><span class="o">;</span>

    <span class="k">var</span> <span class="nx">q</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">,</span> <span class="nx">strQ</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="o">,</span> <span class="nx">strN</span> <span class="o">=</span> <span class="nx">n</span><span class="p">.</span><span class="nx">toString</span><span class="p">()</span><span class="o">,</span> <span class="nx">qm</span><span class="o">,</span> <span class="nx">r</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="nx">exp</span> <span class="o">=</span> <span class="nx">strN</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
    <span class="k">var</span> <span class="nx">limitToInt</span> <span class="o">=</span> <span class="o">!</span><span class="nx">maxFigs</span><span class="o">,</span> <span class="nx">firstFig</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
    <span class="k">var</span> <span class="nx">note</span> <span class="o">=</span> <span class="nx">maxFigs</span> <span class="o">?</span> <span class="s2">&quot;(up to &quot;</span> <span class="o">+</span> <span class="nx">maxFigs</span> <span class="o">+</span> <span class="s2">&quot; figures)&quot;</span> <span class="o">:</span> <span class="s2">&quot;(within integer)&quot;</span><span class="o">,</span>
        <span class="nx">rowQ</span><span class="o">,</span> <span class="nx">rowMN</span> <span class="o">=</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot; ) &quot;</span> <span class="o">+</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">,</span> <span class="nx">rowsQMR</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="o">,</span> <span class="nx">rowR0</span><span class="o">,</span> <span class="nx">rowR1</span><span class="o">;</span>

    <span class="k">while</span> <span class="p">((</span><span class="nx">r</span> <span class="o">||</span> <span class="nx">strN</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">limitToInt</span> <span class="o">?</span> <span class="nx">exp</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">:</span> <span class="nx">maxFigs</span><span class="p">))</span> <span class="p">{</span>
        <span class="nx">r</span> <span class="o">*=</span> <span class="mi">10</span><span class="o">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">strN</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">r</span> <span class="o">+=</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">strN</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="p">));</span>
            <span class="nx">strN</span> <span class="o">=</span> <span class="nx">strN</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="nx">r</span> <span class="o">&gt;=</span> <span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">rowR1</span> <span class="o">=</span>       <span class="nx">repeatStr</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">,</span> <span class="p">(</span><span class="nx">rowMN</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">exp</span> <span class="o">-</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">r</span> <span class="p">).</span><span class="nx">length</span><span class="p">))</span> <span class="o">+</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">r</span> <span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">firstFig</span><span class="p">)</span> <span class="p">{</span><span class="nx">rowsQMR</span> <span class="o">+=</span> <span class="nx">rowR1</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">rowR0</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span><span class="o">;</span><span class="p">}</span> 

            <span class="nx">qm</span> <span class="o">=</span> <span class="nx">r</span> <span class="o">-</span> <span class="nx">r</span> <span class="o">%</span> <span class="nx">m</span><span class="o">;</span>
            <span class="nx">q</span><span class="p">[</span><span class="nx">exp</span><span class="p">]</span> <span class="o">=</span> <span class="nx">qm</span> <span class="o">/</span> <span class="nx">m</span><span class="o">;</span>
            <span class="nx">r</span> <span class="o">=</span> <span class="nx">r</span> <span class="o">%</span> <span class="nx">m</span><span class="o">;</span>

            <span class="nx">rowsQMR</span> <span class="o">+=</span> <span class="nx">repeatStr</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">,</span> <span class="p">(</span><span class="nx">rowMN</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">exp</span> <span class="o">-</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">qm</span><span class="p">).</span><span class="nx">length</span><span class="p">))</span> <span class="o">+</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">qm</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span><span class="o">;</span>
            <span class="nx">rowsQMR</span> <span class="o">+=</span> <span class="nx">repeatStr</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">,</span> <span class="p">(</span><span class="nx">rowMN</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">exp</span> <span class="o">-</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">qm</span><span class="p">).</span><span class="nx">length</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
            <span class="nx">rowsQMR</span> <span class="o">+=</span> <span class="nx">repeatStr</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="o">,</span> <span class="p">(</span><span class="nx">insSP</span><span class="p">(</span><span class="nx">qm</span><span class="p">).</span><span class="nx">length</span><span class="p">)</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span><span class="o">;</span>
            <span class="nx">rowR0</span> <span class="o">=</span>       <span class="nx">repeatStr</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">,</span> <span class="p">(</span><span class="nx">rowMN</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">exp</span> <span class="o">-</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">r</span> <span class="p">).</span><span class="nx">length</span><span class="p">))</span> <span class="o">+</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">r</span> <span class="p">);</span>
            <span class="nx">rowsQMR</span> <span class="o">+=</span> <span class="nx">rowR0</span><span class="o">;</span>

            <span class="nx">firstFig</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">firstFig</span> <span class="o">||</span> <span class="nx">exp</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="nx">q</span><span class="p">[</span><span class="nx">exp</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="p">}</span>

        <span class="nx">exp</span><span class="o">--;</span> 
        <span class="k">if</span> <span class="p">(</span><span class="nx">firstFig</span><span class="p">)</span> <span class="nx">maxFigs</span><span class="o">--;</span>
    <span class="p">}</span>

    <span class="k">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">exp</span><span class="o">;</span> <span class="k">while</span> <span class="p">(</span><span class="nx">i</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="nx">q</span><span class="p">[</span><span class="nx">i</span><span class="o">--</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

    <span class="nx">i</span> <span class="o">=</span> <span class="nx">q</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="k">while</span> <span class="p">(</span><span class="nx">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="nx">strQ</span> <span class="o">+=</span> <span class="nx">q</span><span class="p">[</span><span class="nx">i</span><span class="o">--</span><span class="p">].</span><span class="nx">toString</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">q</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;number&#39;</span><span class="p">)</span> <span class="nx">strQ</span> <span class="o">+=</span> <span class="s2">&quot;.&quot;</span><span class="o">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">q</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;number&#39;</span><span class="p">)</span> <span class="nx">strQ</span> <span class="o">+=</span> <span class="nx">q</span><span class="p">[</span><span class="nx">i</span><span class="o">--</span><span class="p">].</span><span class="nx">toString</span><span class="p">();</span>

    <span class="k">var</span> <span class="nx">summary</span> <span class="o">=</span> <span class="s2">&quot;n = m * q + r &quot;</span> <span class="o">+</span> <span class="nx">note</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
        <span class="s2">&quot;n: &quot;</span> <span class="o">+</span> <span class="nx">n</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
        <span class="s2">&quot;m: &quot;</span> <span class="o">+</span> <span class="nx">m</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
        <span class="s2">&quot;q: &quot;</span> <span class="o">+</span> <span class="nx">strQ</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
        <span class="s2">&quot;r: &quot;</span> <span class="o">+</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">r</span> <span class="o">+</span> <span class="s2">&quot;.&quot;</span> <span class="o">+</span> <span class="nx">strN</span> <span class="o">+</span> <span class="s2">&quot;e&quot;</span> <span class="o">+</span> <span class="p">(</span><span class="nx">exp</span> <span class="o">+</span> <span class="mi">1</span><span class="p">));</span>
    <span class="nx">rowQ</span> <span class="o">=</span> <span class="nx">repeatStr</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">,</span> <span class="p">(</span><span class="nx">rowMN</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">strQ</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(?:\d| )+/</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="p">))</span> <span class="o">+</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">strQ</span><span class="p">);</span>
    <span class="nx">rowQ</span> <span class="o">+=</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="nx">repeatStr</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">,</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">m</span><span class="p">).</span><span class="nx">length</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="nx">repeatStr</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="o">,</span> <span class="p">(</span><span class="nx">rowQ</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">m</span><span class="p">).</span><span class="nx">length</span><span class="p">));</span>

    <span class="k">return</span> <span class="nx">summary</span> <span class="o">+</span> <span class="s2">&quot;\n\n&quot;</span> <span class="o">+</span><span class="nx">rowQ</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="nx">rowMN</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="nx">rowsQMR</span> <span class="o">+</span> <span class="s2">&quot;\n\n\n&quot;</span><span class="o">;</span>

    <span class="k">function</span> <span class="nx">insSP</span><span class="p">(</span><span class="nx">str</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">str</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\d)(?=\d)/g</span><span class="o">,</span> <span class="s2">&quot;$1 &quot;</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">function</span> <span class="nx">repeatStr</span><span class="p">(</span><span class="nx">str</span><span class="o">,</span> <span class="nx">num</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">num</span><span class="o">+</span><span class="mi">1</span><span class="p">)).</span><span class="nx">join</span><span class="p">(</span><span class="nx">str</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="o">&lt;/</span><span class="nx">script</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="nx">form</span><span class="o">&gt;</span>
<span class="nx">n</span><span class="o">:</span> <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;n&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span><span class="o">&gt;&amp;</span><span class="nx">nbsp</span><span class="o">;&amp;</span><span class="nx">nbsp</span><span class="o">;&amp;</span><span class="nx">nbsp</span><span class="o">;&amp;</span><span class="nx">nbsp</span><span class="o">;</span>
<span class="nx">m</span><span class="o">:</span> <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;m&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span><span class="o">&gt;&amp;</span><span class="nx">nbsp</span><span class="o">;&amp;</span><span class="nx">nbsp</span><span class="o">;&amp;</span><span class="nx">nbsp</span><span class="o">;&amp;</span><span class="nx">nbsp</span><span class="o">;</span>
<span class="nx">f</span><span class="o">:</span> <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;f&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span><span class="o">&gt;&amp;</span><span class="nx">nbsp</span><span class="o">;&amp;</span><span class="nx">nbsp</span><span class="o">;&amp;</span><span class="nx">nbsp</span><span class="o">;&amp;</span><span class="nx">nbsp</span><span class="o">;</span>
<span class="o">&lt;</span><span class="nx">input</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;calc&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;button&quot;</span> <span class="nx">value</span><span class="o">=</span><span class="s2">&quot;calc&quot;</span><span class="o">&gt;&lt;</span><span class="nx">br</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="nx">textarea</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;rslt&quot;</span> <span class="nx">style</span><span class="o">=</span><span class="s2">&quot;font-size: 0.8em; line-height: 0.9em; width: 100%; height: 30em;&quot;</span><span class="o">&gt;&lt;/</span><span class="nx">textarea</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="nx">form</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="k">function</span> <span class="nx">calc</span><span class="p">(){</span>
    <span class="nx">n</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;n&quot;</span><span class="p">).</span><span class="nx">value</span><span class="o">;</span>
    <span class="nx">m</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;m&quot;</span><span class="p">).</span><span class="nx">value</span><span class="o">;</span>
    <span class="nx">f</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;f&quot;</span><span class="p">).</span><span class="nx">value</span><span class="o">;</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;rslt&quot;</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">divOnPaper</span><span class="p">(</span><span class="nx">n</span><span class="o">,</span> <span class="nx">m</span><span class="o">,</span> <span class="nx">f</span><span class="p">);</span>
<span class="p">}</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;calc&quot;</span><span class="p">).</span><span class="nx">onclick</span> <span class="o">=</span> <span class="nx">calc</span><span class="o">;</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;h4&gt;examples:&lt;/h4&gt;&lt;pre style=\&quot;font-size: 0.8em; line-height: 0.9em;\&quot;&gt;&quot;</span> <span class="o">+</span>
    <span class="nx">divOnPaper</span><span class="p">(</span><span class="mi">1000</span><span class="o">,</span> <span class="mi">71</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
    <span class="nx">divOnPaper</span><span class="p">(</span><span class="mi">1000</span><span class="o">,</span> <span class="mi">71</span><span class="o">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
    <span class="nx">divOnPaper</span><span class="p">(</span><span class="mi">123456789</span><span class="o">,</span> <span class="mi">57</span><span class="o">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
    <span class="nx">divOnPaper</span><span class="p">(</span><span class="mi">123456789</span><span class="o">,</span> <span class="mi">57</span><span class="o">,</span> <span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
    <span class="nx">divOnPaper</span><span class="p">(</span><span class="mi">1000</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
    <span class="nx">divOnPaper</span><span class="p">(</span><span class="mi">1000</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
    <span class="nx">divOnPaper</span><span class="p">(</span><span class="mi">1000</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
    <span class="nx">divOnPaper</span><span class="p">(</span><span class="mi">1000</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span>
    <span class="s2">&quot;&lt;/pre&gt;&quot;</span><span class="p">);</span>
<span class="o">&lt;/</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="nx">body</span><span class="o">&gt;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8812/addtag/" class="addtag" id="addtag_8812">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8812/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8812/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8812"
  >-</span><span
  class="button yellow"
  id="rating_z_8812"
  >0</span><span 
  class="button green"
  id="rating_p_8812"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8812/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8826">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/322/" target="_top">sawat</a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8826/">#8826</a>(<script language="JavaScript">print_time(new Date("2009/04/16 05:51 GMT"));</script><noscript>2009/04/16 05:51 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Javaで。割とコンパクトに書けたかな?
------
実行結果

    10775
   ------
13)140077
   13
   ------
    100
     91
    -----
      97
      91
      ---
       67
       65
       --
        2</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="k">package</span> <span class="n">doukaku</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Warizan</span> <span class="o">{</span>

   <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">print</span><span class="o">(</span><span class="k">new</span> <span class="n">PrintWriter</span><span class="o">(</span><span class="k">new</span> <span class="n">OutputStreamWriter</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">)),</span><span class="mi">140077</span><span class="o">,</span> <span class="mi">13</span><span class="o">);</span>
   <span class="o">}</span>

   <span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">xxx</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">return</span> <span class="o">(</span><span class="n">a</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="mi">10</span> <span class="o">*</span> <span class="n">xxx</span><span class="o">(</span><span class="n">a</span> <span class="o">/</span> <span class="mi">10</span><span class="o">);</span>
   <span class="o">}</span>

   <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">print</span><span class="o">(</span><span class="n">PrintWriter</span> <span class="n">w</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a0</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
      <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">a0</span><span class="o">;</span>
      <span class="kt">int</span> <span class="n">indent</span> <span class="o">=</span> <span class="o">(</span><span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">b</span><span class="o">).</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>

      <span class="n">String</span> <span class="n">sp</span> <span class="o">=</span> <span class="o">(</span><span class="n">b</span> <span class="o">+</span> <span class="s">&quot;)&quot;</span> <span class="o">+</span> <span class="n">a</span><span class="o">).</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;.&quot;</span><span class="o">,</span> <span class="s">&quot; &quot;</span><span class="o">);</span>
      <span class="n">String</span> <span class="n">bar</span> <span class="o">=</span> <span class="n">sp</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="sc">&#39; &#39;</span><span class="o">,</span> <span class="sc">&#39;-&#39;</span><span class="o">);</span>

      <span class="n">w</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%s%&quot;</span> <span class="o">+</span> <span class="o">(</span><span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">a</span><span class="o">).</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;d%n&quot;</span><span class="o">,</span> <span class="n">sp</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">indent</span><span class="o">),</span> <span class="n">a</span> <span class="o">/</span> <span class="n">b</span><span class="o">);</span>

      <span class="n">w</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%s%s%n&quot;</span><span class="o">,</span> <span class="n">sp</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">indent</span><span class="o">),</span> <span class="n">bar</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">indent</span><span class="o">));</span>
      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">xxx</span><span class="o">(</span><span class="n">a</span><span class="o">);</span> <span class="n">c</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">c</span> <span class="o">/=</span> <span class="mi">10</span><span class="o">)</span> <span class="o">{</span>
         <span class="k">final</span> <span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">a</span> <span class="o">/</span> <span class="n">c</span><span class="o">;</span>
         <span class="k">final</span> <span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="o">(</span><span class="n">d</span> <span class="o">/</span> <span class="n">b</span><span class="o">)</span> <span class="o">*</span> <span class="n">b</span><span class="o">;</span>

         <span class="k">if</span> <span class="o">(</span><span class="n">e</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>

         <span class="k">final</span> <span class="n">String</span> <span class="n">ds</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">d</span><span class="o">;</span>

         <span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">==</span> <span class="n">a0</span><span class="o">)</span> <span class="n">w</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%d)%d%n&quot;</span><span class="o">,</span> <span class="n">b</span><span class="o">,</span> <span class="n">a</span><span class="o">);</span>
         <span class="k">else</span> <span class="n">w</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%s%s%n&quot;</span><span class="o">,</span> <span class="n">sp</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">indent</span><span class="o">),</span> <span class="n">ds</span><span class="o">);</span>

         <span class="n">w</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%s%&quot;</span> <span class="o">+</span> <span class="n">ds</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;d%n&quot;</span><span class="o">,</span> <span class="n">sp</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">indent</span><span class="o">),</span> <span class="n">e</span><span class="o">);</span>
         <span class="n">w</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%s%s%n&quot;</span><span class="o">,</span> <span class="n">sp</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">indent</span><span class="o">),</span> <span class="n">bar</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">indent</span><span class="o">));</span>

         <span class="n">indent</span> <span class="o">+=</span> <span class="n">ds</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="n">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">d</span> <span class="o">-</span> <span class="n">e</span><span class="o">).</span><span class="na">length</span><span class="o">();</span>
         <span class="k">if</span><span class="o">(</span><span class="n">d</span> <span class="o">==</span> <span class="n">e</span><span class="o">)</span> <span class="n">indent</span><span class="o">++;</span>
         <span class="n">a</span> <span class="o">-=</span> <span class="n">e</span> <span class="o">*</span> <span class="n">c</span><span class="o">;</span>
      <span class="o">}</span>
      <span class="n">w</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%&quot;</span> <span class="o">+</span><span class="n">sp</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span><span class="s">&quot;d%n&quot;</span><span class="o">,</span>  <span class="n">a</span><span class="o">);</span>
      <span class="n">w</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
   <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8826/addtag/" class="addtag" id="addtag_8826">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8826/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8826/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8826"
  >-</span><span
  class="button yellow"
  id="rating_z_8826"
  >0</span><span 
  class="button green"
  id="rating_p_8826"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8826/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8830">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/763/" target="_top">Songmu</a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8830/">#8830</a>(<script language="JavaScript">print_time(new Date("2009/04/18 08:02 GMT"));</script><noscript>2009/04/18 08:02 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>15桁までしか対応しません。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!/usr/bin/perl</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>

<span class="n">div</span><span class="p">(</span><span class="nv">@ARGV</span><span class="p">);</span>

<span class="k">sub </span><span class="nf">div</span><span class="p">{</span>
    <span class="k">return</span> <span class="k">if</span> <span class="nb">scalar</span> <span class="nv">@_</span> <span class="o">!=</span> <span class="mi">2</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="nv">@_</span><span class="p">){</span> <span class="k">return</span> <span class="k">unless</span> <span class="sr">/^[1-9]\d*$/</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$x</span><span class="p">,</span> <span class="nv">$y</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    
    <span class="k">my</span> <span class="nv">$line_length</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="nv">$x</span><span class="p">)</span> <span class="o">+</span> <span class="nb">length</span><span class="p">(</span><span class="nv">$y</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$ans</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nv">$x</span> <span class="o">/</span> <span class="nv">$y</span><span class="p">);</span>
    <span class="k">my</span> <span class="nv">$mod</span> <span class="o">=</span> <span class="nv">$x</span> <span class="nv">%</span> <span class="err">$</span><span class="nv">y</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$field_length</span> <span class="o">=</span> <span class="k">my</span> <span class="nv">$offset</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="nv">$y</span><span class="p">);</span>
    <span class="nv">$field_length</span><span class="o">++</span><span class="p">;</span>
    
    <span class="nb">printf</span> <span class="s">&quot;%${line_length}d\n&quot;</span><span class="p">,</span> <span class="nv">$ans</span><span class="p">;</span>
    <span class="k">print</span>  <span class="s">&#39; &#39;</span> <span class="n">x</span> <span class="nv">$offset</span> <span class="o">.</span> <span class="s">&#39;-&#39;</span> <span class="n">x</span> <span class="p">(</span><span class="nv">$line_length</span> <span class="o">-</span> <span class="nv">$offset</span><span class="p">)</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
    <span class="k">print</span>  <span class="s">&quot;$y)$x\n&quot;</span><span class="p">;</span>
    
    <span class="k">return</span> <span class="k">if</span> <span class="nv">$ans</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="k">my</span> <span class="nv">@ans_nums</span> <span class="o">=</span> <span class="nb">split</span> <span class="sr">//</span><span class="p">,</span><span class="nv">$ans</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">@x</span> <span class="o">=</span> <span class="nb">split</span> <span class="sr">//</span><span class="p">,</span><span class="nv">$x</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$dest_minus</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$not_first_line</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="k">my</span> <span class="nv">$ans_num</span> <span class="o">=</span> <span class="nb">shift</span> <span class="nv">@ans_nums</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nv">$offset</span><span class="o">++</span><span class="p">){</span>
        <span class="k">next</span> <span class="k">if</span> <span class="nv">$ans_num</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
        
        <span class="k">my</span> <span class="nv">$src_minus</span> <span class="o">=</span> <span class="nv">$ans_num</span> <span class="o">*</span> <span class="nv">$y</span><span class="p">;</span>
        <span class="nv">$dest_minus</span> <span class="o">.=</span> <span class="nb">shift</span> <span class="nv">@x</span> <span class="k">while</span> <span class="p">(</span><span class="nv">$dest_minus</span> <span class="o">||</span> <span class="mi">0</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nv">$src_minus</span><span class="p">;</span>
        
        <span class="nb">printf</span> <span class="s">&#39; &#39;</span> <span class="n">x</span> <span class="nv">$offset</span> <span class="o">.</span> <span class="s">&quot;%${field_length}d\n&quot;</span><span class="p">,</span> <span class="nv">$dest_minus</span> <span class="k">if</span> <span class="nv">$not_first_line</span><span class="o">++</span><span class="p">;</span>
        <span class="nb">printf</span> <span class="s">&#39; &#39;</span> <span class="n">x</span> <span class="nv">$offset</span> <span class="o">.</span> <span class="s">&quot;%${field_length}d\n&quot;</span><span class="p">,</span> <span class="nv">$src_minus</span><span class="p">;</span>
        <span class="k">print</span>  <span class="s">&#39; &#39;</span> <span class="n">x</span> <span class="nv">$offset</span> <span class="o">.</span> <span class="s">&#39;-&#39;</span> <span class="n">x</span> <span class="p">(</span><span class="nv">$line_length</span> <span class="o">-</span> <span class="nv">$offset</span><span class="p">)</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
        
        <span class="nv">$dest_minus</span> <span class="o">-=</span> <span class="nv">$src_minus</span><span class="p">;</span>
            <span class="nv">$dest_minus</span> <span class="o">=</span> <span class="s">&#39;&#39;</span> <span class="k">if</span> <span class="nv">$dest_minus</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nb">printf</span> <span class="s">&quot;%${line_length}d\n&quot;</span><span class="p">,</span> <span class="nv">$mod</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8830/addtag/" class="addtag" id="addtag_8830">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8830/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8830/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8830"
  >-</span><span
  class="button yellow"
  id="rating_z_8830"
  >0</span><span 
  class="button green"
  id="rating_p_8830"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8830/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8840">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/1038/" target="_top">making</a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8840/">#8840</a>(<script language="JavaScript">print_time(new Date("2009/04/26 06:41 GMT"));</script><noscript>2009/04/26 06:41 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>(warizan 9876 11)の結果　# ずれて見えるけど端末上では一応揃っている．．．

      897 ... 9
   -----
11 |9876
    88
   -----
    107
     99
   -----
      86
      77
   -----
       9</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre>(defun warizan (n m)
  (let* ((ret (floor (/ n m)))
     (tochu n)     
     (calc-keta (lambda (x) (if (plusp x) (floor (log x 10)) 0)))
     (string-concatenate (lambda (x &amp;optional (s &quot; &quot;)) (apply &#39;concatenate &#39;string (make-list x :initial-element s))))
     (keta (funcall calc-keta n))
     (space-num (+ 3 (funcall calc-keta m)))
     (keisen (format nil &quot;~a~a~%&quot; (funcall string-concatenate (1- space-num)) (funcall string-concatenate (+ 2 (funcall calc-keta n)) &quot;-&quot;)))
     )
    (format t &quot;~a~d ... ~d~%&quot; (funcall string-concatenate (- (+ space-num keta) (funcall calc-keta ret))) ret (- n (* m ret)))
    (format t keisen)
    (format t &quot;~d |~d~%&quot; m n)
    (dotimes (i (1+ keta))
      (let* ((kurai (- keta i))
         (p (* (floor (/ ret (expt 10 kurai))) (expt 10 kurai)))
         (c (* p m))
         )
    (decf tochu c)
    (decf ret p)
    (when (&gt; c 0)
      (format t &quot;~a~d~%&quot; (funcall string-concatenate (- (+ space-num keta) (funcall calc-keta c))) (floor (/ c (expt 10 kurai))))
      (format t keisen)
      (format t &quot;~a~d~%&quot; (funcall string-concatenate (- (+ space-num keta) (funcall calc-keta tochu))) (floor (/ tochu (expt 10 (if (plusp kurai) (- kurai 1) kurai)))))
      )
    )
      )
    )
  )
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8840/addtag/" class="addtag" id="addtag_8840">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8840/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8840/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8840"
  >-</span><span
  class="button yellow"
  id="rating_z_8840"
  >0</span><span 
  class="button green"
  id="rating_p_8840"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8840/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8879">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/759/" target="_top">egtra</a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8879/">#8879</a>(<script language="JavaScript">print_time(new Date("2009/05/03 11:17 GMT"));</script><noscript>2009/05/03 11:17 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ふと無名関数が使いたくなったので、Visual Studio 2010 CTP付属のコンパイラを使いました。しかし、出来上がったものを見てみれば、ラムダ要らないのでは？という仕上がりですが、このまま投稿してしまいます。</p>
<pre class="literal-block">
除数・被除数を入力してください。
8956
12

   0746
   ----
12)8956
   0
   ----
   89
   84
   ----
    55
    48
   ----
     76
     72
   ----
      4
答え合わせ: 8956 / 12の商・剰余は746 … 4
</pre>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;sstream&gt;</span>
<span class="cp">#include &lt;iomanip&gt; </span><span class="c">// setw</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;cmath&gt; </span><span class="c">// log10</span>
<span class="cp">#include &lt;cstdlib&gt; </span><span class="c">// div</span>

<span class="kt">int</span> <span class="n">digit</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">log10</span><span class="p">(</span><span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span><span class="p">(</span><span class="n">n</span><span class="p">)))</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="n">print_c_n</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="n">os</span><span class="p">,</span> <span class="kt">char</span> <span class="n">c</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="n">n</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">unsigned</span><span class="o">&gt;</span><span class="p">(</span><span class="n">n</span><span class="p">);</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">os</span> <span class="o">&lt;&lt;</span> <span class="n">c</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">os</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">print_divition</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
    <span class="n">ostringstream</span> <span class="n">os</span><span class="p">;</span>
    <span class="n">os</span> <span class="o">&lt;&lt;</span> <span class="n">y</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;)&#39;</span><span class="p">;</span>
    <span class="kt">unsigned</span> <span class="n">left</span> <span class="o">=</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">unsigned</span><span class="o">&gt;</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">tellp</span><span class="p">());</span>
    <span class="n">os</span> <span class="o">&lt;&lt;</span> <span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
    <span class="n">print_c_n</span><span class="p">(</span><span class="n">cout</span><span class="p">,</span> <span class="sc">&#39; &#39;</span><span class="p">,</span> <span class="n">left</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">digit_x</span> <span class="o">=</span> <span class="n">digit</span><span class="p">(</span><span class="n">x</span><span class="p">);</span> <span class="c">// 十進法での桁数</span>

    <span class="c">// []の中は、外側の変数を「=」値渡し、ただしosのみ「&amp;」参照渡しで受け取るの意</span>
    <span class="k">auto</span> <span class="n">nextDigit</span> <span class="o">=</span> <span class="p">[</span><span class="o">=</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">os</span><span class="p">](</span><span class="kt">int</span> <span class="n">r</span><span class="p">,</span> <span class="kt">int</span> <span class="n">i</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">int</span> 
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">u</span> <span class="o">=</span> <span class="n">x</span> <span class="o">/</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">pow</span><span class="p">(</span><span class="mf">10.</span><span class="p">,</span> <span class="n">digit_x</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span> <span class="o">%</span> <span class="mi">10</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">r</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">u</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
            <span class="n">os</span> <span class="o">&lt;&lt;</span> <span class="n">u</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
        <span class="n">div_t</span> <span class="n">d</span> <span class="o">=</span> <span class="n">div</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">d</span><span class="p">.</span><span class="n">quot</span><span class="p">;</span>
        <span class="n">print_c_n</span><span class="p">(</span><span class="n">os</span><span class="p">,</span> <span class="sc">&#39; &#39;</span><span class="p">,</span> <span class="n">left</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">setw</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">d</span><span class="p">.</span><span class="n">quot</span> <span class="o">*</span> <span class="n">y</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
        <span class="n">print_c_n</span><span class="p">(</span><span class="n">os</span><span class="p">,</span> <span class="sc">&#39; &#39;</span><span class="p">,</span> <span class="n">left</span><span class="p">);</span>
        <span class="n">print_c_n</span><span class="p">(</span><span class="n">os</span><span class="p">,</span> <span class="sc">&#39;-&#39;</span><span class="p">,</span> <span class="n">digit_x</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
        <span class="n">print_c_n</span><span class="p">(</span><span class="n">os</span><span class="p">,</span> <span class="sc">&#39; &#39;</span><span class="p">,</span> <span class="n">left</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">setw</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">d</span><span class="p">.</span><span class="n">rem</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">d</span><span class="p">.</span><span class="n">rem</span><span class="p">;</span>
    <span class="p">};</span>
    <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">digit_x</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">r</span> <span class="o">=</span> <span class="n">nextDigit</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
    <span class="n">print_c_n</span><span class="p">(</span><span class="n">cout</span><span class="p">,</span> <span class="sc">&#39; &#39;</span><span class="p">,</span> <span class="n">left</span><span class="p">);</span>
    <span class="n">print_c_n</span><span class="p">(</span><span class="n">cout</span><span class="p">,</span> <span class="sc">&#39;-&#39;</span><span class="p">,</span> <span class="n">digit_x</span><span class="p">);</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span> <span class="o">&lt;&lt;</span> <span class="n">os</span><span class="p">.</span><span class="n">str</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
    <span class="n">div_t</span> <span class="n">d</span> <span class="o">=</span> <span class="n">div</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;答え合わせ: &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; / &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">y</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;の商・剰余は&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">d</span><span class="p">.</span><span class="n">quot</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; … &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">d</span><span class="p">.</span><span class="n">rem</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">m</span><span class="p">,</span> <span class="n">n</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;除数・被除数を入力してください。&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">m</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
    <span class="n">print_divition</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8879/addtag/" class="addtag" id="addtag_8879">タグ</a>:
	
    
    <a href="/web/20100628134244/http://ja.doukaku.org/tag/C%2B%2B0x/">C++0x</a>
    
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8879/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8879/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8879"
  >-</span><span
  class="button yellow"
  id="rating_z_8879"
  >0</span><span 
  class="button green"
  id="rating_p_8879"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8879/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8966">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/1045/" target="_top">ワサビ</a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8966/">#8966</a>(<script language="JavaScript">print_time(new Date("2009/05/21 11:09 GMT"));</script><noscript>2009/05/21 11:09 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>n と m を直接計算せずに求めています。

&gt; divide 123456 77;;
     1603
  -------
77)123456
    77
   ----
    464
    462
    -----
      256
      231
      ---
       25

val it : unit = ()</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="highlight"><pre><span class="k">#</span><span class="n">light</span>

<span class="kr">let</span> <span class="n">divide</span> <span class="n">n</span> <span class="n">m</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">digits</span> <span class="k">=</span>
        <span class="n">Seq</span><span class="k">.</span><span class="n">unfold</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">x</span> <span class="k">-&gt;</span> <span class="kr">if</span> <span class="n">x</span> <span class="k">&gt;</span> <span class="mi">0</span> <span class="kr">then</span> <span class="n">Some</span> <span class="k">(</span><span class="n">x</span> <span class="o">%</span> <span class="mi">10</span><span class="k">,</span> <span class="n">x</span> <span class="o">/</span> <span class="mi">10</span><span class="k">)</span> <span class="kr">else</span> <span class="n">None</span><span class="k">)</span>
        <span class="k">&gt;&gt;</span> <span class="n">Seq</span><span class="k">.</span><span class="n">to_list</span> <span class="k">&gt;&gt;</span> <span class="n">List</span><span class="k">.</span><span class="n">rev</span>

    <span class="kr">let</span> <span class="kr">rec</span> <span class="n">calc</span> <span class="n">result</span> <span class="n">index</span> <span class="n">remainder</span> <span class="k">=</span> <span class="kr">function</span>
        <span class="k">|</span> <span class="k">[]</span> <span class="k">-&gt;</span> <span class="k">(</span><span class="n">index</span> <span class="k">-</span> <span class="mi">1</span><span class="k">,</span> <span class="n">remainder</span><span class="k">,</span> <span class="n">None</span><span class="k">)::</span><span class="n">result</span> <span class="k">|&gt;</span> <span class="n">List</span><span class="k">.</span><span class="n">rev</span>
        <span class="k">|</span> <span class="n">n&#39;</span><span class="k">::</span><span class="n">ns</span> <span class="k">-&gt;</span>
            <span class="kr">let</span> <span class="n">dividend</span> <span class="k">=</span> <span class="n">remainder</span> <span class="k">*</span> <span class="mi">10</span> <span class="k">+</span> <span class="n">n&#39;</span>
            <span class="n">calc</span> <span class="k">((</span><span class="n">index</span><span class="k">,</span> <span class="n">dividend</span><span class="k">,</span> <span class="n">Some</span> <span class="k">(</span><span class="n">dividend</span> <span class="o">/</span> <span class="n">m</span><span class="k">))::</span><span class="n">result</span><span class="k">)</span> <span class="k">(</span><span class="n">index</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">dividend</span> <span class="o">%</span> <span class="n">m</span><span class="k">)</span> <span class="n">ns</span>

    <span class="kr">let</span> <span class="n">print</span> <span class="n">result</span> <span class="k">=</span>
        <span class="kr">let</span> <span class="n">length</span> <span class="n">x</span> <span class="k">=</span> <span class="k">(</span><span class="n">string</span> <span class="n">x</span><span class="k">).</span><span class="n">Length</span>
        <span class="kr">let</span> <span class="n">quotient</span> <span class="k">=</span> 
            <span class="n">result</span> <span class="k">|&gt;</span> <span class="n">List</span><span class="k">.</span><span class="n">fold_left</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">sum</span> <span class="k">(_,</span> <span class="k">_,</span> <span class="n">quot</span><span class="k">)</span> <span class="k">-&gt;</span>
                <span class="kr">match</span> <span class="n">quot</span> <span class="kr">with</span> <span class="n">Some</span> <span class="n">q</span> <span class="k">-&gt;</span> <span class="n">sum</span> <span class="k">*</span> <span class="mi">10</span> <span class="k">+</span> <span class="n">q</span> <span class="k">|</span> <span class="n">None</span> <span class="k">-&gt;</span> <span class="n">sum</span><span class="k">)</span> <span class="mi">0</span>
        <span class="kr">let</span> <span class="n">result&#39;</span> <span class="k">=</span>
            <span class="n">result</span> <span class="k">|&gt;</span> <span class="n">List</span><span class="k">.</span><span class="n">filter</span> <span class="k">(</span><span class="kr">function</span> <span class="k">_,</span> <span class="k">_,</span> <span class="n">Some</span> <span class="n">q</span> <span class="kr">when</span> <span class="n">q</span> <span class="k">=</span> <span class="mi">0</span> <span class="k">-&gt;</span> <span class="kr">false</span> <span class="k">|</span> <span class="k">_,</span> <span class="k">_,</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="kr">true</span><span class="k">)</span>
        <span class="kr">let</span> <span class="n">indent</span> <span class="k">=</span> <span class="n">length</span> <span class="n">m</span> <span class="k">+</span> <span class="mi">1</span>
        <span class="kr">let</span> <span class="n">numbers</span> <span class="k">=</span>
            <span class="n">result&#39;</span> <span class="k">|&gt;</span> <span class="n">List</span><span class="k">.</span><span class="n">mapi</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">i</span> <span class="k">(</span><span class="n">index</span><span class="k">,</span> <span class="n">dividend</span><span class="k">,</span> <span class="n">quot</span><span class="k">)</span> <span class="k">-&gt;</span>
                <span class="kr">let</span> <span class="n">indent&#39;</span> <span class="k">=</span> <span class="n">indent</span> <span class="k">+</span> <span class="n">index</span>
                <span class="k">(</span><span class="kr">if</span> <span class="n">i</span> <span class="k">=</span> <span class="mi">0</span> <span class="kr">then</span> <span class="s2">&quot;&quot;</span> <span class="kr">else</span> <span class="n">sprintf</span> <span class="s2">&quot;%*d</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="n">indent&#39;</span> <span class="n">dividend</span><span class="k">)</span> <span class="o">^</span>
                    <span class="k">(</span><span class="kr">match</span> <span class="n">quot</span> <span class="kr">with</span> <span class="n">None</span> <span class="k">-&gt;</span> <span class="s2">&quot;&quot;</span> <span class="k">|</span> <span class="n">Some</span> <span class="n">q</span> <span class="k">-&gt;</span> <span class="n">sprintf</span> <span class="s2">&quot;%*d</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="n">indent&#39;</span> <span class="k">(</span><span class="n">m</span> <span class="k">*</span> <span class="n">q</span><span class="k">)))</span>
        <span class="kr">let</span> <span class="n">lines</span> <span class="k">=</span>
            <span class="n">result&#39;</span> <span class="k">|&gt;</span> <span class="n">Seq</span><span class="k">.</span><span class="n">pairwise</span> <span class="k">|&gt;</span> <span class="n">Seq</span><span class="k">.</span><span class="n">to_list</span>
            <span class="k">|&gt;</span> <span class="n">List</span><span class="k">.</span><span class="n">map</span> <span class="k">(</span><span class="kr">fun</span> <span class="k">((</span><span class="n">index</span><span class="k">,</span> <span class="n">dividend</span><span class="k">,</span> <span class="k">_),</span> <span class="k">(</span><span class="n">index&#39;</span><span class="k">,</span> <span class="k">_,</span> <span class="k">_))</span> <span class="k">-&gt;</span>
                <span class="kr">new</span> <span class="n">string</span><span class="k">(</span><span class="sc">&#39;-&#39;</span><span class="k">,</span> <span class="n">index&#39;</span> <span class="k">-</span> <span class="n">index</span> <span class="k">+</span> <span class="n">length</span> <span class="n">dividend</span><span class="k">)</span> <span class="k">|&gt;</span> <span class="n">sprintf</span> <span class="s2">&quot;%*s</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="k">(</span><span class="n">indent</span> <span class="k">+</span> <span class="n">index&#39;</span><span class="k">))</span>
        <span class="kr">let</span> <span class="n">width</span> <span class="k">=</span> <span class="n">indent</span> <span class="k">+</span> <span class="n">length</span> <span class="n">n</span>
        <span class="n">printfn</span> <span class="s2">&quot;%*d&quot;</span> <span class="n">width</span> <span class="n">quotient</span>
        <span class="kr">new</span> <span class="n">string</span><span class="k">(</span><span class="sc">&#39;-&#39;</span><span class="k">,</span> <span class="n">length</span> <span class="n">n</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="k">|&gt;</span> <span class="n">printfn</span> <span class="s2">&quot;%*s&quot;</span> <span class="n">width</span>
        <span class="n">printfn</span> <span class="s2">&quot;%d)%d&quot;</span> <span class="n">m</span> <span class="n">n</span>
        <span class="n">List</span><span class="k">.</span><span class="n">map2</span> <span class="k">(</span><span class="o">^</span><span class="k">)</span> <span class="k">(</span><span class="s2">&quot;&quot;</span><span class="k">::</span><span class="n">lines</span><span class="k">)</span> <span class="n">numbers</span> <span class="k">|&gt;</span> <span class="n">String</span><span class="k">.</span><span class="n">concat</span> <span class="s2">&quot;&quot;</span> <span class="k">|&gt;</span> <span class="n">printfn</span> <span class="s2">&quot;%s&quot;</span>

    <span class="n">digits</span> <span class="n">n</span> <span class="k">|&gt;</span> <span class="n">calc</span> <span class="k">[]</span> <span class="mi">1</span> <span class="mi">0</span> <span class="k">|&gt;</span> <span class="n">print</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/8966/addtag/" class="addtag" id="addtag_8966">タグ</a>:
	
    
    <a href="/web/20100628134244/http://ja.doukaku.org/tag/F%23/">F#</a>
    
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8966/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/8966/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8966"
  >-</span><span
  class="button yellow"
  id="rating_z_8966"
  >0</span><span 
  class="button green"
  id="rating_p_8966"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/8966/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9188">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/1066/" target="_top">onoue</a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9188/">#9188</a>(<script language="JavaScript">print_time(new Date("2009/06/17 02:39 GMT"));</script><noscript>2009/06/17 02:39 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>*Main&gt; :main 222222 111
      2002
   -------
111)222222
    222
    ------
       222
       222
       ---
         0
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>                <span class="p">(</span> <span class="nv">mapAccumL</span><span class="p">,</span> <span class="nv">unfoldr</span> <span class="p">)</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Environment</span>       <span class="p">(</span> <span class="nv">getArgs</span> <span class="p">)</span>

<span class="nv">longDivision</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">longDivision</span> <span class="nv">n</span> <span class="nv">m</span> <span class="o">=</span> <span class="nv">unlines</span> <span class="o">$</span> <span class="nv">showProcess</span> <span class="nv">n</span> <span class="nv">m</span> <span class="o">$</span> <span class="nv">getComponents</span> <span class="nv">n</span> <span class="nv">m</span>

<span class="nv">getComponents</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Int</span><span class="p">,</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">Int</span><span class="p">)</span>
<span class="nv">getComponents</span> <span class="nv">n</span> <span class="nv">m</span> <span class="o">=</span> <span class="p">(</span><span class="nv">pack</span> <span class="nv">qs</span><span class="p">,</span> <span class="nv">ps</span><span class="p">,</span> <span class="nv">rs&#39;</span><span class="p">,</span> <span class="nv">last</span> <span class="nv">rs</span><span class="p">)</span>
  <span class="kr">where</span>
    <span class="nv">ns</span> <span class="o">=</span> <span class="nv">unpack</span> <span class="nv">n</span>
    <span class="p">(</span><span class="nv">qs</span><span class="p">,</span> <span class="nv">ps</span><span class="p">,</span> <span class="nv">rs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">unzip3</span> <span class="o">$</span> <span class="nv">snd</span> <span class="o">$</span> <span class="nv">mapAccumL</span> <span class="nv">dm</span> <span class="mi">0</span> <span class="nv">ns</span>
    <span class="nv">dm</span> <span class="nv">acc</span> <span class="nv">x</span> <span class="o">=</span> <span class="kr">let</span> <span class="p">{</span> <span class="p">(</span><span class="nv">q</span><span class="p">,</span> <span class="nv">r</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="nv">acc</span> <span class="o">+</span> <span class="nv">x</span><span class="p">)</span> <span class="p">`</span><span class="nv">divMod</span><span class="p">`</span> <span class="nv">m</span> <span class="p">}</span> <span class="kr">in</span> <span class="p">(</span><span class="nv">r</span><span class="p">,</span> <span class="p">(</span><span class="nv">q</span><span class="p">,</span> <span class="nv">q</span><span class="o">*</span><span class="nv">m</span><span class="p">,</span> <span class="nv">r</span><span class="p">))</span>
    <span class="nv">rs&#39;</span> <span class="o">=</span> <span class="p">[</span><span class="nv">head</span> <span class="nv">ns</span><span class="p">]</span> <span class="o">++</span> <span class="nv">zipWith</span> <span class="p">((</span><span class="o">+</span><span class="p">)</span> <span class="o">.</span> <span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="p">))</span> <span class="p">(</span><span class="nv">init</span> <span class="nv">rs</span><span class="p">)</span> <span class="p">(</span><span class="nv">tail</span> <span class="nv">ns</span><span class="p">)</span>

<span class="nv">showProcess</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Int</span><span class="p">,</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
<span class="nv">showProcess</span> <span class="nv">n</span> <span class="nv">m</span> <span class="p">(</span><span class="nv">q</span><span class="p">,</span> <span class="nv">ps</span><span class="p">,</span> <span class="nv">rs</span><span class="p">,</span> <span class="nv">r</span><span class="p">)</span> <span class="o">=</span> <span class="nv">quot_divs</span> <span class="o">++</span> <span class="nv">div_steps</span> <span class="o">++</span> <span class="nv">remainder</span>
  <span class="kr">where</span>
    <span class="p">[</span><span class="nv">w_n</span><span class="p">,</span> <span class="nv">w_m</span><span class="p">]</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">length</span> <span class="o">.</span> <span class="nv">show</span><span class="p">)</span> <span class="p">[</span><span class="nv">n</span><span class="p">,</span> <span class="nv">m</span><span class="p">]</span>
    <span class="nv">w_mn</span> <span class="o">=</span> <span class="nv">w_m</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">+</span> <span class="nv">w_n</span>

    <span class="nv">quot_divs</span> <span class="o">=</span> <span class="p">[</span> <span class="nv">showR</span> <span class="nv">q</span><span class="p">,</span> <span class="nv">divLineR</span> <span class="p">(</span><span class="nv">w_n</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span> <span class="nv">show</span> <span class="nv">m</span> <span class="o">++</span> <span class="s">&quot;)&quot;</span> <span class="o">++</span> <span class="nv">show</span> <span class="nv">n</span> <span class="p">]</span>
    <span class="nv">div_steps</span> <span class="o">=</span> <span class="nv">tail</span> <span class="o">$</span> <span class="nv">concat</span> <span class="o">$</span> <span class="nv">zipWith3</span> <span class="nv">mkStep</span> <span class="nv">rs</span> <span class="nv">ps</span> <span class="p">[</span><span class="nv">w_m</span><span class="o">+</span><span class="mi">2</span><span class="o">..</span><span class="p">]</span>
    <span class="nv">remainder</span> <span class="o">=</span> <span class="p">[</span> <span class="nv">showR</span> <span class="nv">r</span> <span class="p">]</span>

    <span class="nv">mkStep</span> <span class="kr">_</span> <span class="mi">0</span> <span class="kr">_</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="nv">mkStep</span> <span class="nv">r</span> <span class="nv">p</span> <span class="nv">k</span> <span class="o">=</span> <span class="p">[</span> <span class="nv">showAt</span> <span class="nv">k</span> <span class="nv">r</span><span class="p">,</span> <span class="nv">showAt</span> <span class="nv">k</span> <span class="nv">p</span><span class="p">,</span> <span class="nv">divLineR</span> <span class="p">(</span><span class="nv">w_mn</span> <span class="o">-</span> <span class="nv">k</span> <span class="o">+</span> <span class="nv">length</span> <span class="p">(</span><span class="nv">show</span> <span class="nv">r</span><span class="p">))</span> <span class="p">]</span>
    
    <span class="nv">showR</span> <span class="nv">x</span>    <span class="o">=</span> <span class="nv">rjustify</span> <span class="nv">w_mn</span> <span class="o">$</span> <span class="nv">show</span> <span class="nv">x</span>
    <span class="nv">divLineR</span> <span class="nv">w</span> <span class="o">=</span> <span class="nv">rjustify</span> <span class="nv">w_mn</span> <span class="o">$</span> <span class="nv">replicate</span> <span class="nv">w</span> <span class="sc">&#39;-&#39;</span>

<span class="c1">-- misc</span>
<span class="nv">rjustify</span> <span class="nv">w</span> <span class="nv">xs</span> <span class="o">=</span> <span class="nv">replicate</span> <span class="p">(</span><span class="nv">w</span> <span class="o">-</span> <span class="nv">length</span> <span class="nv">xs</span><span class="p">)</span> <span class="sc">&#39; &#39;</span> <span class="o">++</span> <span class="nv">xs</span>
<span class="nv">showAt</span>   <span class="nv">w</span> <span class="nv">x</span>  <span class="o">=</span> <span class="nv">rjustify</span> <span class="nv">w</span> <span class="o">$</span> <span class="nv">show</span> <span class="nv">x</span>

<span class="nv">pack</span>   <span class="o">=</span> <span class="nv">foldl</span> <span class="p">((</span><span class="o">+</span><span class="p">)</span> <span class="o">.</span> <span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="p">))</span> <span class="mi">0</span>
<span class="nv">unpack</span> <span class="o">=</span> <span class="nv">reverse</span> <span class="o">.</span> <span class="nv">unfoldr</span> <span class="nv">phi</span>
  <span class="kr">where</span>
    <span class="nv">phi</span> <span class="mi">0</span> <span class="o">=</span> <span class="n">Nothing</span>
    <span class="nv">phi</span> <span class="nv">n</span> <span class="o">=</span> <span class="n">Just</span> <span class="o">$</span> <span class="nv">swap</span> <span class="o">$</span> <span class="nv">n</span> <span class="p">`</span><span class="nv">divMod</span><span class="p">`</span> <span class="mi">10</span>

<span class="nv">swap</span> <span class="p">(</span><span class="nv">x</span><span class="p">,</span><span class="nv">y</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">y</span><span class="p">,</span><span class="nv">x</span><span class="p">)</span>

<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span>
  <span class="nv">args</span> <span class="o">&lt;-</span> <span class="nv">getArgs</span>
  <span class="kr">let</span> <span class="nv">n</span><span class="o">:</span><span class="nv">m</span><span class="o">:</span><span class="kr">_</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">read</span> <span class="nv">args</span>
  <span class="nv">putStr</span> <span class="o">$</span> <span class="nv">longDivision</span> <span class="nv">n</span> <span class="nv">m</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9188/addtag/" class="addtag" id="addtag_9188">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9188/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9188/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9188"
  >-</span><span
  class="button yellow"
  id="rating_z_9188"
  >0</span><span 
  class="button green"
  id="rating_p_9188"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/9188/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9237">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/136/" target="_top">matarillo</a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9237/">#9237</a>(<script language="JavaScript">print_time(new Date("2009/06/24 03:30 GMT"));</script><noscript>2009/06/24 03:30 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>出力例 (535325 / 423)

 423)535325
1000 423000
-----------
     112325
 200  84600
-----------
      27725
  60  25380
-----------
       2345
   5   2115
-----------
        230
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="highlight"><pre><span class="k">static</span> <span class="k">void</span> <span class="nf">Devide</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">m</span><span class="p">)</span>
<span class="k">{</span>
  <span class="kt">int</span> <span class="n">q</span> <span class="p">=</span> <span class="n">n</span> <span class="p">/</span> <span class="n">m</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">lw</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">Math</span><span class="p">.</span><span class="n">Log10</span><span class="p">(</span><span class="n">q</span> <span class="p">&gt;</span> <span class="n">m</span> <span class="p">?</span> <span class="n">q</span> <span class="p">:</span> <span class="n">m</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>
  <span class="kt">string</span> <span class="n">lf</span> <span class="p">=</span> <span class="s">&quot;{0,&quot;</span> <span class="p">+</span> <span class="n">lw</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;}&quot;</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">rw</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">Math</span><span class="p">.</span><span class="n">Log10</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>
  <span class="kt">string</span> <span class="n">rf</span> <span class="p">=</span> <span class="s">&quot;{0,&quot;</span> <span class="p">+</span> <span class="n">rw</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&quot;}&quot;</span><span class="p">;</span>
  <span class="kt">string</span> <span class="n">hl</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">string</span><span class="p">(</span><span class="sc">&#39;-&#39;</span><span class="p">,</span> <span class="n">lw</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="n">rw</span><span class="p">);</span>
  <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">lf</span><span class="p">,</span> <span class="n">m</span><span class="p">);</span>
  <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="sc">&#39;)&#39;</span><span class="p">);</span>
  <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">rf</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>

  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">lw</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
  <span class="k">{</span>
    <span class="kt">int</span> <span class="n">d</span> <span class="p">=</span> <span class="n">lw</span> <span class="p">-</span> <span class="m">1</span> <span class="p">-</span> <span class="n">i</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">u</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">Math</span><span class="p">.</span><span class="n">Pow</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="n">d</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">c</span> <span class="p">=</span> <span class="n">n</span> <span class="p">/</span> <span class="p">(</span><span class="n">u</span> <span class="p">*</span> <span class="n">m</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">a</span> <span class="p">=</span> <span class="n">c</span> <span class="p">*</span> <span class="n">u</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">b</span> <span class="p">=</span> <span class="n">a</span> <span class="p">*</span> <span class="n">m</span><span class="p">;</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">lf</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="sc">&#39; &#39;</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">rf</span><span class="p">,</span> <span class="n">b</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">hl</span><span class="p">);</span>
    <span class="n">n</span> <span class="p">-=</span> <span class="n">b</span><span class="p">;</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">lf</span><span class="p">,</span> <span class="sc">&#39; &#39;</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="sc">&#39; &#39;</span><span class="p">);</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">rf</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
  <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9237/addtag/" class="addtag" id="addtag_9237">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9237/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9237/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9237"
  >-</span><span
  class="button yellow"
  id="rating_z_9237"
  >0</span><span 
  class="button green"
  id="rating_p_9237"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/9237/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9346">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/100/" target="_top">konn</a><a href="/web/20100628134244/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9346/">#9346</a>(<script language="JavaScript">print_time(new Date("2009/07/12 10:26 GMT"));</script><noscript>2009/07/12 10:26 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>かなり愚直に実装してみました。

 $ ruby divide.rb 312456 521
        599
    -------
 521)312456
     2605
     -----
      5195
      4689
      -----
       5066
       4689
       ----
        377
 
       2002
    -------
 111)222222
      222
      ----
         2
         0
         --
         22
          0
         ---
         222
         222
         ---
          0</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">divide</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span> <span class="c1"># m / n</span>
  <span class="n">digit</span> <span class="o">=</span> <span class="n">keta</span><span class="p">(</span><span class="n">m</span><span class="p">)</span> <span class="o">-</span> <span class="n">keta</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
  <span class="k">until</span> <span class="p">(</span><span class="n">rem</span> <span class="o">=</span> <span class="n">m</span> <span class="o">/</span> <span class="p">(</span><span class="mi">10</span><span class="o">**</span><span class="n">digit</span><span class="p">))</span> <span class="o">&gt;</span> <span class="n">n</span>
    <span class="n">digit</span> <span class="o">-=</span> <span class="mi">1</span>
  <span class="k">end</span>
  <span class="n">dend</span> <span class="o">=</span> <span class="n">rem</span>
  <span class="n">m1</span> <span class="o">=</span> <span class="n">m</span> <span class="o">%</span> <span class="p">(</span><span class="mi">10</span><span class="o">**</span><span class="n">digit</span><span class="p">)</span>
  <span class="n">history</span> <span class="o">=</span> <span class="o">[]</span>
  <span class="n">digit</span><span class="o">.</span><span class="n">downto</span><span class="p">(</span><span class="mi">0</span><span class="p">){</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
    <span class="n">base</span>  <span class="o">=</span> <span class="mi">10</span> <span class="o">**</span> <span class="p">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">quot</span>  <span class="o">=</span> <span class="n">dend</span> <span class="o">/</span> <span class="n">n</span>
    <span class="n">rem</span>   <span class="o">=</span> <span class="n">dend</span> <span class="o">%</span> <span class="n">n</span>
    <span class="n">history</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="n">dend</span><span class="p">,</span> <span class="n">quot</span><span class="p">,</span> <span class="n">quot</span><span class="o">*</span><span class="n">n</span><span class="o">]</span>
    <span class="n">dend</span> <span class="o">=</span> <span class="n">rem</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">m1</span> <span class="o">/</span> <span class="n">base</span>
    <span class="n">m1</span> <span class="sx">%= base</span>
<span class="sx">  }</span>
<span class="sx">  (d,_,h) =</span> <span class="n">history</span><span class="o">[-</span><span class="mi">1</span><span class="o">]</span>
  <span class="k">return</span> <span class="n">history</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="n">d</span> <span class="o">-</span> <span class="n">h</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="o">]</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">keta</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
  <span class="k">return</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span>
  <span class="k">return</span> <span class="no">Math</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="n">n</span><span class="o">.</span><span class="n">to_i</span><span class="p">)</span><span class="o">.</span><span class="n">floor</span> <span class="o">+</span> <span class="mi">1</span>
<span class="k">end</span>

<span class="k">if</span> <span class="vg">$0</span> <span class="o">==</span> <span class="bp">__FILE__</span>
  <span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="p">,</span><span class="o">=</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_i</span><span class="p">)</span>
  <span class="n">mketa</span> <span class="o">=</span> <span class="n">keta</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
  <span class="n">nketa</span> <span class="o">=</span> <span class="n">keta</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
  <span class="n">rslt</span> <span class="o">=</span> <span class="n">divide</span><span class="p">(</span><span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>
  <span class="n">tochu</span><span class="p">,</span> <span class="n">last</span> <span class="o">=</span> <span class="n">rslt</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="n">rslt</span><span class="o">[-</span><span class="mi">1</span><span class="o">]</span>
  <span class="n">width</span> <span class="o">=</span> <span class="n">mketa</span><span class="o">+</span><span class="n">nketa</span><span class="o">+</span><span class="mi">1</span>
  <span class="nb">printf</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">width</span><span class="si">}</span><span class="s2">s</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">tochu</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="n">a</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">*</span><span class="n">nketa</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="o">*</span><span class="p">(</span><span class="n">mketa</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
  <span class="nb">printf</span> <span class="s2">&quot;%d)%d</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span>
  <span class="n">st</span> <span class="o">=</span> <span class="n">tochu</span><span class="o">.</span><span class="n">size</span> <span class="o">-</span> <span class="mi">1</span>
  <span class="n">tochu</span><span class="o">.</span><span class="n">each_with_index</span><span class="p">{</span><span class="o">|</span><span class="p">(</span><span class="n">dend</span><span class="p">,</span> <span class="n">quot</span><span class="p">,</span> <span class="n">hiku</span><span class="p">),</span> <span class="n">ind</span><span class="o">|</span>
    <span class="n">k</span> <span class="o">=</span> <span class="n">nketa</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">2</span><span class="o">+</span><span class="n">ind</span>
    <span class="k">if</span> <span class="n">ind</span> <span class="o">&gt;</span> <span class="mi">0</span>
      <span class="nb">printf</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">k</span><span class="si">}</span><span class="s2">d</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">dend</span>
    <span class="k">end</span>
    <span class="nb">printf</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">k</span><span class="si">}</span><span class="s2">d</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">hiku</span>
    <span class="n">hosei</span> <span class="o">=</span> <span class="n">st</span> <span class="o">==</span> <span class="n">ind</span> <span class="p">?</span> <span class="mi">0</span> <span class="p">:</span> <span class="mi">1</span>
    <span class="n">hw</span> <span class="o">=</span> <span class="n">keta</span><span class="p">(</span><span class="n">dend</span><span class="p">)</span> <span class="o">+</span> <span class="n">hosei</span>
    <span class="nb">printf</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">k</span><span class="o">+</span><span class="n">hosei</span><span class="si">}</span><span class="s2">s</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="s2">&quot;-&quot;</span> <span class="o">*</span> <span class="n">hw</span>
  <span class="p">}</span>
  <span class="nb">printf</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">width</span><span class="si">}</span><span class="s2">d</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">last</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9346/addtag/" class="addtag" id="addtag_9346">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9346/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9346/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9346"
  >-</span><span
  class="button yellow"
  id="rating_z_9346"
  >0</span><span 
  class="button green"
  id="rating_p_9346"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/9346/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9590">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/959/" target="_top">uehaj</a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9590/">#9590</a>(<script language="JavaScript">print_time(new Date("2009/09/20 08:50 GMT"));</script><noscript>2009/09/20 08:50 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
<p><a href="/web/20100628134244/http://ja.doukaku.org/comment/8826/">sawatさんによるJava版</a>の移植です。
</p>



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="highlight"><pre>int xxx(int a) {
  (a &lt; 10) ? 1 : 10 * xxx((int)a / 10);
}

Integer.metaClass.width = {(delegate as String).size()}
Integer.metaClass.padLeft = {n-&gt;(delegate as String).padLeft(n)}

def printexp(indent, exp, width)  {
  println(&#39; &#39;*indent + exp.padLeft(width))
  println(&#39; &#39;*indent + &#39;-&#39;*width)
}

def waru(int a0, int b) {
  int a = a0
  int indent = b.width() + 1

  printexp(indent, (int)a/b, a.width())

  for (int c = xxx(a); c != 0; c /= 10) {
    int d = a / c
    int e = (d / b) * b
    if (e == 0) continue
    
    if (a == a0) println(b+&quot;)&quot;+a)
    else println(&#39;&gt;&#39; * indent+d)

    printexp(indent, e, d.width())

    indent += d.width() - (d - e).width()
    if (d == e) indent++
    a -= e * c
  }
  println(a.padLeft(b.width()+a0.width()+1))
}

waru(140077, 13)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9590/addtag/" class="addtag" id="addtag_9590">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9590/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9590/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9590"
  >-</span><span
  class="button yellow"
  id="rating_z_9590"
  >0</span><span 
  class="button green"
  id="rating_p_9590"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/9590/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9622">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/1106/" target="_top">tsubo</a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9622/">#9622</a>(<script language="JavaScript">print_time(new Date("2009/10/04 07:05 GMT"));</script><noscript>2009/10/04 07:05 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Scalaらしく(？)作ってみました。#過去の課題でこっそり勉強中です。。

-- 実行結果
123456
77
     1603
   ------
77)123456
    77
   ------
    464
    462
   ------
      256
      231
   ------
       25
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre>object DivCalc {
    def main(args : Array[String]) : Unit = {
        val n = Console.in.readLine.toLong
        val m = Console.in.readLine.toLong
        Div(n, m).print
      }
}

case class Div(n:Long, m:Long) {
    def print = {
        println( idt + fmt(ans) )
        println( idt + line )
        println( m + &quot;)&quot; + fmt(n) )
        calc.take(1).foreach( x =&gt; println( idt + fmt(x._2, x._3) ) )
        calc.drop(1).foreach( x =&gt; {
            println( idt + line )
            println( idt + fmt(x._1, x._3) )
            println( idt + fmt(x._2, x._3) )
        })
        if (calc.isEmpty) println( idt + fmt(0) )
        println( idt + line )
        println( idt + fmt(mod) )
    }

    def len(a:Any) = a.toString.length
    def fmt(x:Any):String = fmt(x, 0)
    def fmt(x:Any, i:Int):String = idt(&quot; &quot;, len(n) - len(x) - i) + x
    def line = idt(&quot;-&quot;, len(n))
    def idt:String = idt(&quot; &quot;, len(m) + 1)
    def idt(c:String, i:Int):String = c * i

    val ans:Long = n / m
    lazy val mod:Long = n % m
    lazy val calc:List[(Long, Long, Int)] = {
        def process(n:Long, m:Long, c:Int):List[(Long, Long, Int)] = {
            val pow = Math.pow(10, c).toLong
            val x = if (pow == 0) { 0L } else { n / pow / m * m }
            (n,m,c,x) match {
                case (_,_,c,_) if (c &lt; 0) =&gt; Nil
                case (n,m,c,0) =&gt; process(n, m, c-1)
                case (n,m,c,x) =&gt; (n / pow, x, c) :: process(n - x * pow, m, c-1)
            }
        }
        process(n, m, len(n))
    }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9622/addtag/" class="addtag" id="addtag_9622">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9622/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9622/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9622"
  >-</span><span
  class="button yellow"
  id="rating_z_9622"
  >0</span><span 
  class="button green"
  id="rating_p_9622"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/9622/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9626">
  <p class="banner"><a href="/web/20100628134244/http://ja.doukaku.org/user/1107/" target="_top">T_GYOUTEN</a>

	
	&nbsp;
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9626/">#9626</a>(<script language="JavaScript">print_time(new Date("2009/10/09 18:54 GMT"));</script><noscript>2009/10/09 18:54 GMT</noscript>)
	
	
	
	[<a href="/web/20100628134244/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>F#で愚直な実装です。
&gt; DivByHand 222222 111;;
      2002
    ------
111)222222
    222
    ------
       222
       222
    ------
         0</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="highlight"><pre>//bDigDisp 3 &quot;k&quot; 2　で&quot;   kk&quot;を表示
let bDigDisp padCount str strCount  =
   let rec sub subStr count limit res =
        if count = limit then res
        else  sub subStr (count + 1) limit (res + subStr)
   printfn &quot;%s&quot; ((sub &quot; &quot; 0 padCount &quot;&quot;) + (sub str 0 strCount &quot;&quot;))  

//numToList 1234　で[1;2;3;4]が返る
let numToList n  =
    let rec NtlSub m res =
        if m = 0 then 
            res
        else
            NtlSub (m/10) ((m - (m/10)*10)::res)
    NtlSub n []

let DivByHand num div =
    let numList = numToList num
    let divPadLen = (div.ToString()).Length + 1 
    let numLen = (num.ToString()).Length
    bDigDisp (divPadLen + numLen - ((num/div).ToString()).Length) ((num/div).ToString()) 1 
    bDigDisp divPadLen &quot;-&quot; numLen 
    printfn &quot;%d)%d&quot;div num        
    let rec dbhSub (carryIn:int) (remDigLst:int list)   (padLen :int)   (isFirst : bool)=
        match remDigLst with
        | [] -&gt; bDigDisp  (padLen - (carryIn.ToString()).Length)   (carryIn.ToString()) 1
        | hd::tl -&gt; let targetNum = 10*carryIn + hd
                    if targetNum &lt; div then
                        dbhSub targetNum tl (padLen + 1) isFirst
                    else
                        let quoTemp = targetNum/div
                        let subNumStr = (div*quoTemp).ToString()
                        if(isFirst &lt;&gt; true) then 
                            bDigDisp (padLen - (targetNum.ToString()).Length + 1 ) (targetNum.ToString()) 1 
                        bDigDisp (padLen - subNumStr.Length + 1 ) subNumStr 1 
                        bDigDisp divPadLen &quot;-&quot; numLen 
                        dbhSub (targetNum % div) tl (padLen + 1)  false
    dbhSub 0 numList divPadLen true
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628134244/http://ja.doukaku.org/comment/9626/addtag/" class="addtag" id="addtag_9626">タグ</a>:
	
    
    <a href="/web/20100628134244/http://ja.doukaku.org/tag/F%23/">F#</a>
    
	&nbsp;

	
      [<a href="/web/20100628134244/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9626/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628134244/http://ja.doukaku.org/comment/9626/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9626"
  >-</span><span
  class="button yellow"
  id="rating_z_9626"
  >0</span><span 
  class="button green"
  id="rating_p_9626"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628134244/http://ja.doukaku.org/246/reply_to/9626/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20100628134244if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20100628134244/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20100628134244/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20100628134244/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20100628134244/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20100628134244/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20100628134244/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20100628134244/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20100628134244/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100628134244/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100628134244/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20100628134244im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20100628134244/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20100628134244/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20100628134244/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20100628134244/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20100628134244/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20100628134244/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20100628134244/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20100628134244/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20100628134244im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20100628134244/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20100628134244/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20100628134244/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20100628134244js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 13:42:44 Jun 28, 2010 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:22:28 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
