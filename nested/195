
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
tailの実装
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20090422212754cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20090422212754cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20090422212754cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20090422212754/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20090422212754/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20090422212754js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20090422212754js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20090422212754js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20090422212754js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app19.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/195\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "22";
var displayMonth = "Apr";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/195/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090422212754" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20090219195828/http://ja.doukaku.org/195/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="19 Feb 2009"><strong>FEB</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 21:27:54 Apr 22, 2009">APR</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       May
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20090323010650/http://ja.doukaku.org/195/nested/" title="1:06:50 Mar 23, 2009" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 21:27:54 Apr 22, 2009">22</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2008
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 21:27:54 Apr 22, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20090422212754*/http://ja.doukaku.org/195/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>9 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">16 Sep 08 - 22 Apr 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000001100_2009:3:122200000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20090422212754/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20090422212754/http://ja.doukaku.org/195/">tailの実装</a>
</h2>

    





<div class="comment" id="comment6818">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/850/" target="_top">takeru</a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/6818/">#6818</a>(<script language="JavaScript">print_time(new Date("2008/07/24 04:57 GMT"));</script><noscript>2008/07/24 04:57 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ff6f4f;">-9/11=-0.82</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>'tail'を実装してください。</p>
<p>巨大なファイルでも効率的に動作するようにしてください。</p>
<p></p>
<p>最低限必要な機能は、</p>
<ul>
<li>
行数指定
</li>
<li>「-f」パラメータの対応</li>
</ul>
<p>です。</p>
</div>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/6818/addtag/" class="addtag" id="addtag_6818">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ff6f4f;"
  >-9/11=-0.82</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6818"
  >-</span><span
  class="button yellow"
  id="rating_z_6818"
  >0</span><span 
  class="button green"
  id="rating_p_6818"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/6818/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20090422212754/http://ja.doukaku.org/195/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20090422212754/http://ja.doukaku.org/195/flatten/">フラット表示</a> 
<a href="/web/20090422212754/http://ja.doukaku.org/195/">非表示</a> 


  

  
    





<div class="comment" id="comment6992">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/840/" target="_top">leque</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/6992/">#6992</a>(<script language="JavaScript">print_time(new Date("2008/08/05 22:35 GMT"));</script><noscript>2008/08/05 22:35 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>愚直にキューをつかって。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">parseopt</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">selector</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">util</span><span class="o">.</span><span class="nv">queue</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">main</span> <span class="nv">args</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">let-args</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">args</span><span class="p">)</span>
      <span class="p">((</span><span class="nf">nlines</span> <span class="s">&quot;n=n&quot;</span> <span class="mi">10</span><span class="p">)</span>
       <span class="p">(</span><span class="nf">f?</span> <span class="s">&quot;f&quot;</span> <span class="no">#f</span><span class="p">)</span>
       <span class="o">.</span> <span class="nv">argv</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">call-with-input-file </span><span class="p">(</span><span class="nb">car </span><span class="nv">argv</span><span class="p">)</span>
      <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">iport</span><span class="p">)</span>
        <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">q</span> <span class="p">(</span><span class="nf">make-queue</span><span class="p">)))</span>
          <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">n</span> <span class="mi">0</span><span class="p">)</span>
                     <span class="p">(</span><span class="nf">line</span> <span class="p">(</span><span class="nf">read-line</span> <span class="nv">iport</span><span class="p">)))</span>
            <span class="p">(</span><span class="nf">unless</span> <span class="p">(</span><span class="k">or </span><span class="p">(</span><span class="nb">= </span><span class="nv">n</span> <span class="nv">nlines</span><span class="p">)</span> <span class="p">(</span><span class="nb">eof-object? </span><span class="nv">line</span><span class="p">))</span>
              <span class="p">(</span><span class="nf">enqueue!</span> <span class="nv">q</span> <span class="nv">line</span><span class="p">)</span>
              <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nf">read-line</span> <span class="nv">iport</span><span class="p">))))</span>
          <span class="p">(</span><span class="k">do </span><span class="p">((</span><span class="nf">line</span> <span class="p">(</span><span class="nf">read-line</span> <span class="nv">iport</span><span class="p">)</span> <span class="p">(</span><span class="nf">read-line</span> <span class="nv">iport</span><span class="p">)))</span>
              <span class="p">((</span><span class="nb">eof-object? </span><span class="nv">line</span><span class="p">))</span>
            <span class="p">(</span><span class="nf">enqueue!</span> <span class="nv">q</span> <span class="nv">line</span><span class="p">)</span>
            <span class="p">(</span><span class="nf">dequeue!</span> <span class="nv">q</span><span class="p">))</span>
          <span class="p">(</span><span class="nb">for-each </span><span class="nv">print</span> <span class="p">(</span><span class="nf">queue-&gt;list</span> <span class="nv">q</span><span class="p">)))</span>
        <span class="p">(</span><span class="nf">when</span> <span class="nv">f?</span>
          <span class="p">(</span><span class="nf">with-signal-handlers</span> <span class="p">((</span><span class="nf">SIGINT</span> <span class="k">=&gt; </span><span class="p">(</span><span class="k">lambda </span><span class="nv">_</span> <span class="p">(</span><span class="nf">exit</span> <span class="mi">0</span><span class="p">))))</span>
            <span class="p">(</span><span class="k">lambda </span><span class="p">()</span>
              <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">sel</span> <span class="p">(</span><span class="nf">make</span> <span class="nv">&lt;selector&gt;</span><span class="p">)))</span>
                <span class="p">(</span><span class="nf">selector-add!</span> <span class="nv">sel</span>
                               <span class="nv">iport</span>
                               <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">input</span> <span class="nv">_</span><span class="p">)</span>
                                 <span class="p">(</span><span class="nf">and-let*</span> <span class="p">((</span><span class="nf">line</span> <span class="p">(</span><span class="nf">read-line</span> <span class="nv">input</span><span class="p">))</span>
                                            <span class="p">((</span><span class="nb">not </span><span class="p">(</span><span class="nb">eof-object? </span><span class="nv">line</span><span class="p">))))</span>
                                   <span class="p">(</span><span class="nf">print</span> <span class="nv">line</span><span class="p">))</span>
                                 <span class="p">(</span><span class="nf">sys-sleep</span> <span class="mi">1</span><span class="p">))</span>
                               <span class="o">&#39;</span><span class="p">(</span><span class="nv">r</span><span class="p">))</span>
                <span class="p">(</span><span class="nf">while</span> <span class="no">#t</span> <span class="p">(</span><span class="nf">selector-select</span> <span class="nv">sel</span><span class="p">))))))</span>
        <span class="mi">0</span><span class="p">))))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/6992/addtag/" class="addtag" id="addtag_6992">タグ</a>:
	
    
    <a href="/web/20090422212754/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/6992/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/6992/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6992"
  >-</span><span
  class="button yellow"
  id="rating_z_6992"
  >0</span><span 
  class="button green"
  id="rating_p_6992"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/6992/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment6997">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/6997/">#6997</a>(<script language="JavaScript">print_time(new Date("2008/08/06 07:45 GMT"));</script><noscript>2008/08/06 07:45 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  tailの仕様がわかりません。<br/>検索すると概要はわかるのですが、実際にどういった動作をさせれば良いのでしょう？<br/>UNIX環境が無いのでどうしたらよいのか…。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/6997/addtag/" class="addtag" id="addtag_6997">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6997"
  >-</span><span
  class="button yellow"
  id="rating_z_6997"
  >0</span><span 
  class="button green"
  id="rating_p_6997"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422212754/http://ja.doukaku.org/comment/6997/">
    1
    reply
  </a>

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/6997/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment7042">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7042/">#7042</a>(<script language="JavaScript">print_time(new Date("2008/08/07 08:14 GMT"));</script><noscript>2008/08/07 08:14 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>たしかにお題を出す人にも、もうすこし丁寧に出題してほしい感じがしますね。

たぶんですが、
意訳すると以下のような感じになるのではないでしょうか？
1. 指定されたファイルの最後尾から N行表示すること
2. ファイルの更新を監視して、指定のファイルが更新された場合に、
   更新分のうち、最後尾からN行を表示すること

「2.」更新分なので前回表示続きからという点が注意事項だと思います。

# 「-f」 を実装しなさいというあたり、
  以前あったファイルの更新を監視するお題の
  派生と考えられるのかな？
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7042/addtag/" class="addtag" id="addtag_7042">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7042"
  >-</span><span
  class="button yellow"
  id="rating_z_7042"
  >0</span><span 
  class="button green"
  id="rating_p_7042"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422212754/http://ja.doukaku.org/comment/6997/"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422212754/http://ja.doukaku.org/comment/7042/root/"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7042/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment7002">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7002/">#7002</a>(<script language="JavaScript">print_time(new Date("2008/08/06 05:21 GMT"));</script><noscript>2008/08/06 05:21 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Squeak Smalltalk で、それっぽい動きをするものを。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre>| filename file numOfLines isFollowMode lineCount savedPosition |
filename := &#39;in.txt&#39;.
numOfLines := 10.
isFollowMode := false.

file := FileStream fileNamed: filename.
file setToEnd.
file binary.
lineCount := 0.
[file position &gt; 0 and: [lineCount &lt; numOfLines]]
    whileTrue: [file back = 13 ifTrue: [lineCount := lineCount + 1]].

file ascii.
World findATranscript: nil.
Transcript cr; show: file upToEnd.
savedPosition := file position.
file close.
isFollowMode ifTrue: [
    [Sensor keyboardPressed] whileFalse: [
        (Delay forSeconds: 5) wait.
        file reopen; position: savedPosition.
        Transcript show: file upToEnd.
        savedPosition := file position.
        file close]]
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7002/addtag/" class="addtag" id="addtag_7002">タグ</a>:
	
    
    <a href="/web/20090422212754/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7002/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7002/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7002"
  >-</span><span
  class="button yellow"
  id="rating_z_7002"
  >0</span><span 
  class="button green"
  id="rating_p_7002"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7002/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7009">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7009/">#7009</a>(<script language="JavaScript">print_time(new Date("2008/08/06 15:40 GMT"));</script><noscript>2008/08/06 15:40 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>まじめに書いたらCのようになってしまいました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre>read.file &lt;- function (infile, offset=0){
   con &lt;- file(infile)
   open(con)
   seek(con, offset)
   lines &lt;- readLines(con)
   cur.offset &lt;- seek(con)
   close(con)
   list(l=lines, o=cur.offset)
}

my.tail &lt;- function(infile, n=10, follow=FALSE){
   lines &lt;- read.file(infile)
   writeLines(tail(lines$l, n))
   if(follow){
       size  &lt;- file.info(infile)$size
       repeat{
           if(size &lt; (s &lt;- file.info(infile)$size)){
               lines &lt;- read.file(infile, lines$o)
               writeLines(lines$l)
               size &lt;- s
           }
           Sys.sleep(1)
       }
   }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7009/addtag/" class="addtag" id="addtag_7009">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7009/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7009/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7009"
  >-</span><span
  class="button yellow"
  id="rating_z_7009"
  >0</span><span 
  class="button green"
  id="rating_p_7009"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7009/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment7081">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7081/">#7081</a>(<script language="JavaScript">print_time(new Date("2008/08/09 21:26 GMT"));</script><noscript>2008/08/09 21:26 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  対象がファイルの場合には、予めファイル末尾を基準にシークします。これによってファイルサイズに依存しない処理時間を実現しています。<br/><br/>起動方法は<br/><br/>java&nbsp;Tail&nbsp;[-f]&nbsp;[-&lt;num&gt;]&nbsp;[&lt;ファイル名&gt;]<br/>-f:&nbsp;ファイル末尾まで読み込んでも終了せず、ファイルが成長した部分をポーリングで表示する（ファイル名を与えない場合は無視する）。<br/>num:&nbsp;ファイル末尾からnum行を表示する（デフォルトは10行）。<br/>ファイル名:&nbsp;表示するファイル名。省略した場合は標準入力。<br/><br/>です。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Tail</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">MAX_LINE_LENGTH</span> <span class="o">=</span> <span class="mi">1000</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">long</span> <span class="n">SLEEP_TIME</span> <span class="o">=</span> <span class="mi">500</span><span class="o">;</span> <span class="c">// 500 m sec</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">numOfLine</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">boolean</span> <span class="n">fOption</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="n">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="n">InputStream</span> <span class="n">targetStream</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">;</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="k">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="nl">s:</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="s">&quot;-help&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">s</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Usage&gt; java Tail [-f] [-&lt;num&gt;] [filename]&quot;</span><span class="o">);</span>
                <span class="k">return</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="s">&quot;-f&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">s</span><span class="o">))</span>
                <span class="n">fOption</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
            <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;-&quot;</span><span class="o">))</span>
                <span class="n">numOfLine</span> <span class="o">=</span> <span class="o">-</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
            <span class="k">else</span>
                <span class="n">fileName</span> <span class="o">=</span> <span class="n">s</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">if</span> <span class="o">(</span><span class="n">fileName</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">File</span> <span class="n">target</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">fileName</span><span class="o">);</span>
            <span class="kt">long</span> <span class="n">len</span> <span class="o">=</span> <span class="n">target</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>
            <span class="n">targetStream</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">target</span><span class="o">);</span>
            <span class="n">len</span> <span class="o">-=</span> <span class="n">MAX_LINE_LENGTH</span> <span class="o">*</span> <span class="n">numOfLine</span><span class="o">;</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">len</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span>
                <span class="n">targetStream</span><span class="o">.</span><span class="na">skip</span><span class="o">(</span><span class="n">len</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">targetStream</span><span class="o">));</span>
        <span class="n">String</span> <span class="n">line</span><span class="o">;</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">lines</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">numOfLine</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">ip</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">lines</span><span class="o">[</span><span class="n">ip</span><span class="o">]</span> <span class="o">=</span> <span class="n">line</span><span class="o">;</span>
            <span class="k">if</span> <span class="o">(++</span><span class="n">ip</span> <span class="o">&gt;=</span> <span class="n">numOfLine</span><span class="o">)</span>
                <span class="n">ip</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">ip</span><span class="o">;</span>
        <span class="k">do</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">lines</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">lines</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
            <span class="k">if</span> <span class="o">(++</span><span class="n">i</span> <span class="o">&gt;=</span> <span class="n">numOfLine</span><span class="o">)</span>
                <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">i</span> <span class="o">!=</span> <span class="n">ip</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">fOption</span> <span class="o">&amp;&amp;</span> <span class="n">fileName</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">SLEEP_TIME</span><span class="o">);</span>
                <span class="n">line</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">line</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">line</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7081/addtag/" class="addtag" id="addtag_7081">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7081/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7081/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7081"
  >-</span><span
  class="button yellow"
  id="rating_z_7081"
  >0</span><span 
  class="button green"
  id="rating_p_7081"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7081/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7135">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/813/" target="_top">lunlumo</a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7135/">#7135</a>(<script language="JavaScript">print_time(new Date("2008/08/16 13:25 GMT"));</script><noscript>2008/08/16 13:25 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>　末尾から読み込む様にしてみました。</p>
</div>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#! /usr/bin/perl</span>

<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>

<span class="nb">package</span> <span class="n">Tail</span><span class="p">;</span>

<span class="nv">$</span><span class="nn">Tail::</span><span class="nv">BUF_SIZE</span> <span class="o">=</span> <span class="mi">4096</span><span class="p">;</span>

<span class="k">sub </span><span class="nf">new</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$pkg</span><span class="p">,</span><span class="nv">$lines</span><span class="p">,</span><span class="nv">$follow</span><span class="p">,</span><span class="nv">$file</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">my</span>    <span class="nv">$self</span> <span class="o">=</span> <span class="nb">bless</span><span class="p">({},</span><span class="nv">$pkg</span><span class="p">);</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">file</span><span class="p">(</span><span class="nv">$file</span><span class="p">);</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">lines</span><span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$lines</span><span class="p">)</span> <span class="p">?</span> <span class="nv">$lines</span> <span class="p">:</span> <span class="mi">10</span><span class="p">);</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">follow</span><span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$follow</span><span class="p">)</span> <span class="p">?</span> <span class="nv">$follow</span> <span class="p">:</span> <span class="mi">0</span><span class="p">);</span>
    <span class="nv">$self</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">lines</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$self</span><span class="p">,</span><span class="nv">$lines</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;lines&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$lines</span> <span class="k">if</span> <span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$lines</span><span class="p">));</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;lines&#39;</span><span class="p">};</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">follow</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$self</span><span class="p">,</span><span class="nv">$follow</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;follow&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$follow</span> <span class="k">if</span> <span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$follow</span><span class="p">));</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;follow&#39;</span><span class="p">};</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">file</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$self</span><span class="p">,</span><span class="nv">$file</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;file&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$file</span> <span class="k">if</span> <span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$file</span><span class="p">));</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;file&#39;</span><span class="p">};</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">quit</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$self</span><span class="p">,</span><span class="nv">$quit</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;quit&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$quit</span> <span class="k">if</span> <span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$quit</span><span class="p">));</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;quit&#39;</span><span class="p">};</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">_fh</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$self</span><span class="p">,</span><span class="nv">$fh</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;_fh&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$fh</span> <span class="k">if</span> <span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$fh</span><span class="p">));</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;_fh&#39;</span><span class="p">};</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">initialize</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$self</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">my</span>    <span class="nv">$fh</span><span class="p">;</span>
    <span class="nb">open</span> <span class="p">(</span><span class="nv">$fh</span><span class="p">,</span><span class="s">&quot;&lt;&quot;</span><span class="o">.</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">file</span><span class="p">())</span> <span class="o">||</span> <span class="nb">die</span> <span class="s">&quot;cannot open file.&quot;</span><span class="p">;</span>
    <span class="nb">binmode</span><span class="p">(</span><span class="nv">$fh</span><span class="p">);</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">_fh</span><span class="p">(</span><span class="nv">$fh</span><span class="p">);</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">quit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="vg">$|</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
    <span class="nv">$self</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">_tailn</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$self</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">my</span>    <span class="nv">$lines</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">lines</span><span class="p">();</span>
    <span class="k">my</span>    <span class="nv">$size</span> <span class="o">=</span> <span class="o">-</span><span class="n">s</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">file</span><span class="p">();</span>
    <span class="k">my</span>    <span class="nv">$fh</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">_fh</span><span class="p">();</span>
    <span class="k">my</span>    <span class="nv">$pos</span> <span class="o">=</span> <span class="nv">$size</span><span class="p">;</span>
    <span class="k">my</span>    <span class="nv">$head</span><span class="p">;</span>
    <span class="k">my</span>    <span class="nv">$tail</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="nv">$pos</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">my</span>    <span class="nv">$buf</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
        <span class="k">my</span>    <span class="nv">$ret</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$pos</span> <span class="o">&lt;=</span> <span class="nv">$</span><span class="nn">Tail::</span><span class="nv">BUF_SIZE</span><span class="p">)</span> <span class="p">{</span>
            <span class="nb">seek</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
            <span class="nv">$ret</span> <span class="o">=</span> <span class="nb">read</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span><span class="nv">$buf</span><span class="p">,</span><span class="nv">$pos</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="nb">seek</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span><span class="nv">$pos</span><span class="o">-</span><span class="nv">$</span><span class="nn">Tail::</span><span class="nv">BUF_SIZE</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
            <span class="nv">$ret</span> <span class="o">=</span> <span class="nb">read</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span><span class="nv">$buf</span><span class="p">,</span><span class="nv">$</span><span class="nn">Tail::</span><span class="nv">BUF_SIZE</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="nb">die</span> <span class="s">&quot;cannot read file.&quot;</span> <span class="k">unless</span> <span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$ret</span><span class="p">));</span>
        <span class="nv">$pos</span> <span class="o">-=</span> <span class="nv">$ret</span><span class="p">;</span>
        <span class="nv">$tail</span> <span class="o">=</span> <span class="nv">$buf</span><span class="o">.</span><span class="nv">$tail</span><span class="p">;</span>
        <span class="k">last</span> <span class="k">if</span> <span class="p">(</span><span class="nb">scalar</span><span class="p">(</span><span class="nb">split</span><span class="p">(</span><span class="sr">/(?:\0x0d\x0a|\x0d|\x0d)/</span><span class="p">,</span><span class="nv">$tail</span><span class="p">))</span> <span class="o">&gt;</span> <span class="nv">$lines</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="nv">$pos</span> <span class="o">=</span> <span class="nb">length</span><span class="p">(</span><span class="nv">$tail</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="nv">$pos</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">my</span>    <span class="nv">$c</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$tail</span><span class="p">,</span><span class="nv">$pos</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$c</span> <span class="ow">eq</span> <span class="s">&quot;\x0d&quot;</span> <span class="o">||</span> <span class="nv">$c</span> <span class="ow">eq</span> <span class="s">&quot;\x0a&quot;</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">last</span> <span class="k">if</span> <span class="p">(</span><span class="o">--</span><span class="nv">$lines</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">);</span>
            <span class="nv">$pos</span><span class="o">--</span> <span class="k">if</span> <span class="p">(</span><span class="nv">$c</span> <span class="ow">eq</span> <span class="s">&quot;\x0a&quot;</span> <span class="o">&amp;&amp;</span> <span class="nv">$pos</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$tail</span><span class="p">,</span><span class="nv">$pos</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="ow">eq</span> <span class="s">&quot;\x0d&quot;</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="nv">$pos</span><span class="o">--</span><span class="p">;</span>
    <span class="p">};</span>
    <span class="nv">$tail</span> <span class="o">=</span>  <span class="nb">substr</span><span class="p">(</span><span class="nv">$tail</span><span class="p">,</span><span class="nv">$pos</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nb">length</span><span class="p">(</span><span class="nv">$tail</span><span class="p">)</span><span class="o">-</span><span class="nv">$pos</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
    <span class="nv">$tail</span> <span class="o">=~</span> <span class="sr">s/(\x0d\x0a|\x0d|\x0a)/\n/g</span><span class="p">;</span>
    <span class="k">print</span> <span class="nv">$tail</span><span class="p">;</span>
    <span class="nb">seek</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span><span class="nv">$size</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
    <span class="nv">$self</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">_tailf</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$self</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">my</span>    <span class="nv">$fh</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">_fh</span><span class="p">();</span>
    <span class="k">until</span> <span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">quit</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">my</span>    <span class="nv">$buf</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="p">;</span>
        <span class="nb">seek</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span><span class="nb">tell</span><span class="p">(</span><span class="nv">$fh</span><span class="p">),</span><span class="mi">0</span><span class="p">);</span>
        <span class="k">until</span> <span class="p">(</span><span class="nb">eof</span><span class="p">(</span><span class="nv">$fh</span><span class="p">))</span> <span class="p">{</span>
            <span class="nb">die</span> <span class="s">&quot;cannot read file.&quot;</span> <span class="k">unless</span> <span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nb">read</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span><span class="nv">$buf</span><span class="p">,</span><span class="nv">$</span><span class="nn">Tail::</span><span class="nv">BUF_SIZE</span><span class="p">)));</span>
            <span class="nv">$buf</span> <span class="o">=~</span> <span class="sr">s/(\x0d\x0a|\x0d|\x0a)/\n/g</span><span class="p">;</span>
            <span class="k">print</span> <span class="nv">$buf</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nb">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="nv">$self</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">tail</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$self</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">_tailn</span><span class="p">();</span>
    <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">_tailf</span><span class="p">()</span> <span class="k">if</span> <span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">follow</span><span class="p">());</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">finalize</span> <span class="p">{</span>
    <span class="k">my</span>    <span class="p">(</span><span class="nv">$self</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nb">close</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">_fh</span><span class="p">());</span>
<span class="p">}</span>

<span class="nb">package</span> <span class="n">main</span><span class="p">;</span>

<span class="k">use</span> <span class="nn">Getopt::</span><span class="n">Std</span><span class="p">;</span>

<span class="k">my</span>    <span class="nv">$opt</span> <span class="o">=</span> <span class="p">{};</span>
<span class="k">my</span>    <span class="nv">$tail</span><span class="p">;</span>
<span class="nb">eval</span> <span class="p">{</span>
    <span class="n">getopts</span><span class="p">(</span><span class="s">&#39;n:f&#39;</span><span class="p">,</span><span class="nv">$opt</span><span class="p">);</span>
    <span class="nv">$tail</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Tail</span><span class="p">(</span><span class="nv">$opt</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;n&#39;</span><span class="p">},</span><span class="nv">$opt</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;f&#39;</span><span class="p">},</span><span class="nb">shift</span><span class="p">(</span><span class="nv">@ARGV</span><span class="p">))</span><span class="o">-&gt;</span><span class="n">initialize</span><span class="p">();</span>
    <span class="nv">$SIG</span><span class="p">{</span><span class="n">INT</span><span class="p">}</span> <span class="o">=</span> <span class="k">sub </span><span class="p">{</span> <span class="nv">$tail</span><span class="o">-&gt;</span><span class="n">quit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="p">};</span>
    <span class="nv">$tail</span><span class="o">-&gt;</span><span class="n">tail</span><span class="p">();</span>
    <span class="nv">$tail</span><span class="o">-&gt;</span><span class="n">finalize</span><span class="p">();</span>
<span class="p">};</span>
<span class="k">print</span> <span class="s">&quot;error: $@&quot;</span> <span class="k">if</span> <span class="p">(</span><span class="vg">$@</span><span class="p">);</span>

<span class="mi">1</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7135/addtag/" class="addtag" id="addtag_7135">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7135/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7135/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7135"
  >-</span><span
  class="button yellow"
  id="rating_z_7135"
  >0</span><span 
  class="button green"
  id="rating_p_7135"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7135/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7153">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/813/" target="_top">lunlumo</a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7153/">#7153</a>(<script language="JavaScript">print_time(new Date("2008/08/17 06:55 GMT"));</script><noscript>2008/08/17 06:55 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>　Rubyもまだの様なので書いてみました。</p>
</div>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#! /usr/bin/ruby</span>

<span class="k">class</span> <span class="nc">Tail</span>
    <span class="no">BUF_SIZE</span> <span class="o">=</span> <span class="mi">4096</span>
    
    <span class="kp">attr_accessor</span> <span class="ss">:lines</span><span class="p">,</span> <span class="ss">:follow</span><span class="p">,</span> <span class="ss">:file</span><span class="p">,</span> <span class="ss">:quit</span><span class="p">,</span> <span class="ss">:_f</span>
    <span class="kp">private</span> <span class="ss">:_f</span>
    
    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">lines</span><span class="p">,</span><span class="n">follow</span><span class="p">,</span><span class="n">file</span><span class="p">)</span>
        <span class="nb">self</span><span class="o">.</span><span class="n">lines</span> <span class="o">=</span> <span class="n">lines</span> <span class="p">?</span> <span class="n">lines</span><span class="o">.</span><span class="n">to_i</span> <span class="p">:</span> <span class="mi">10</span>
        <span class="nb">self</span><span class="o">.</span><span class="n">follow</span> <span class="o">=</span> <span class="n">follow</span> <span class="p">?</span> <span class="n">follow</span> <span class="p">:</span> <span class="kp">false</span>
        <span class="nb">self</span><span class="o">.</span><span class="n">file</span> <span class="o">=</span> <span class="n">file</span>
        <span class="n">quit</span> <span class="o">=</span> <span class="kp">false</span>
        <span class="nb">self</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:_f</span><span class="o">=</span><span class="p">,</span><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">file</span><span class="p">,</span><span class="s1">&#39;r&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">binmode</span><span class="p">)</span>
        <span class="nb">self</span>
    <span class="k">end</span>
    
    <span class="k">def</span> <span class="nf">_tailn</span>
        <span class="n">lines</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">lines</span>
        <span class="n">size</span> <span class="o">=</span> <span class="n">_f</span><span class="o">.</span><span class="n">lstat</span><span class="o">.</span><span class="n">size</span>
        <span class="n">pos</span> <span class="o">=</span> <span class="n">size</span>
        <span class="n">tail</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
        <span class="n">tails</span> <span class="o">=</span> <span class="o">[]</span>
        <span class="k">until</span><span class="p">(</span><span class="n">pos</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">do</span>
            <span class="n">buf</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
            <span class="k">if</span> <span class="n">pos</span> <span class="o">&lt;</span> <span class="no">BUF_SIZE</span>
                <span class="n">_f</span><span class="o">.</span><span class="n">pos</span> <span class="o">=</span> <span class="mi">0</span>
                <span class="n">buf</span> <span class="o">=</span> <span class="n">_f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
            <span class="k">else</span>
                <span class="n">_f</span><span class="o">.</span><span class="n">pos</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">-</span> <span class="no">BUF_SIZE</span>
                <span class="n">buf</span> <span class="o">=</span> <span class="n">_f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">BUF_SIZE</span><span class="p">)</span>
            <span class="k">end</span>
            <span class="k">raise</span> <span class="no">IOError</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;cannot read file.&#39;</span><span class="p">)</span> <span class="k">unless</span><span class="p">(</span><span class="n">buf</span><span class="p">)</span>
            <span class="n">pos</span> <span class="o">-=</span> <span class="n">buf</span><span class="o">.</span><span class="n">size</span>
            <span class="n">tail</span> <span class="o">=</span> <span class="n">buf</span> <span class="o">+</span> <span class="n">tail</span>
            <span class="k">break</span> <span class="k">if</span> <span class="n">tail</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/(?:\x0d\x0a|\x0d|\x0a)/</span><span class="p">)</span><span class="o">.</span><span class="n">size</span> <span class="o">&gt;</span> <span class="n">lines</span>
        <span class="k">end</span>
        <span class="n">tail</span> <span class="o">=</span> <span class="n">tail</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/(\x0d\x0a|\x0d|\x0a)/</span><span class="p">,</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
        <span class="n">tails</span> <span class="o">=</span> <span class="n">tail</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/\n/</span><span class="p">)</span>
        <span class="n">tails</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">tail</span> <span class="o">=~</span> <span class="sr">/\n\z/</span>
        <span class="nb">print</span> <span class="n">tails</span><span class="o">.</span><span class="n">reverse</span><span class="o">.</span><span class="n">first</span><span class="p">(</span><span class="n">lines</span><span class="p">)</span><span class="o">.</span><span class="n">reverse</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
        <span class="no">STDOUT</span><span class="o">.</span><span class="n">flush</span>
        <span class="n">_f</span><span class="o">.</span><span class="n">pos</span> <span class="o">=</span> <span class="n">size</span>
        <span class="nb">self</span>
    <span class="k">end</span>
    
    <span class="k">def</span> <span class="nf">_tailf</span>
        <span class="k">until</span><span class="p">(</span><span class="n">quit</span><span class="p">)</span> <span class="k">do</span>
            <span class="n">buf</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
            <span class="n">buf</span> <span class="o">=</span> <span class="n">_f</span><span class="o">.</span><span class="n">read</span>
            <span class="k">raise</span> <span class="no">IOException</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;cannot read file.&#39;</span><span class="p">)</span> <span class="k">unless</span><span class="p">(</span><span class="n">buf</span><span class="p">)</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">buf</span><span class="o">.</span><span class="n">size</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
                <span class="n">buf</span> <span class="o">=</span> <span class="n">buf</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/(\x0d\x0a|\x0d|\x0a)/</span><span class="p">,</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
                <span class="nb">print</span> <span class="n">buf</span>
                <span class="no">STDOUT</span><span class="o">.</span><span class="n">flush</span>
            <span class="k">end</span>
            <span class="nb">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">end</span>
        <span class="nb">self</span>
    <span class="k">end</span>
    
    <span class="k">def</span> <span class="nf">tail</span>
        <span class="n">_tailn</span>
        <span class="n">_tailf</span> <span class="k">if</span> <span class="n">follow</span>
    <span class="k">end</span>
    
    <span class="k">def</span> <span class="nf">finalize</span>
        <span class="n">_f</span><span class="o">.</span><span class="n">close</span>
    <span class="k">end</span>
<span class="k">end</span>

<span class="nb">require</span> <span class="s2">&quot;optparse&quot;</span>

<span class="n">tail</span> <span class="o">=</span> <span class="kp">nil</span>

<span class="n">conf</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
<span class="n">opts</span> <span class="o">=</span> <span class="no">OptionParser</span><span class="o">.</span><span class="n">new</span>
<span class="n">opts</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s2">&quot;-n MANDATORY&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">conf</span><span class="o">[</span><span class="ss">:n</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span> <span class="p">}</span>
<span class="n">opts</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s2">&quot;-f&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">conf</span><span class="o">[</span><span class="ss">:f</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span> <span class="p">}</span>
<span class="n">opts</span><span class="o">.</span><span class="n">parse!</span>

<span class="k">if</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">0</span>
    <span class="nb">puts</span> <span class="s2">&quot;usage: ruby </span><span class="si">#{</span><span class="vg">$0</span><span class="si">}</span><span class="s2"> [-n lines] [-f] filename&quot;</span>
<span class="k">else</span>
    <span class="k">begin</span>
        <span class="n">tail</span> <span class="o">=</span> <span class="no">Tail</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">conf</span><span class="o">[</span><span class="ss">:n</span><span class="o">]</span><span class="p">,</span><span class="n">conf</span><span class="o">[</span><span class="ss">:f</span><span class="o">]</span><span class="p">,</span><span class="no">ARGV</span><span class="o">.</span><span class="n">shift</span><span class="p">)</span>
        <span class="no">Signal</span><span class="o">.</span><span class="n">trap</span><span class="p">(</span><span class="ss">:INT</span><span class="p">)</span> <span class="p">{</span> <span class="n">tail</span><span class="o">.</span><span class="n">quit</span> <span class="o">=</span> <span class="kp">true</span> <span class="p">}</span>
        <span class="n">tail</span><span class="o">.</span><span class="n">tail</span>
        <span class="n">tail</span><span class="o">.</span><span class="n">finalize</span>
    <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
        <span class="nb">puts</span> <span class="n">e</span><span class="o">.</span><span class="n">message</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7153/addtag/" class="addtag" id="addtag_7153">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7153/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7153/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7153"
  >-</span><span
  class="button yellow"
  id="rating_z_7153"
  >0</span><span 
  class="button green"
  id="rating_p_7153"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7153/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7175">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/641/" target="_top">seri</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7175/">#7175</a>(<script language="JavaScript">print_time(new Date("2008/08/17 16:55 GMT"));</script><noscript>2008/08/17 16:55 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>C#でやってみました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Threading</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Tail</span>
<span class="k">{</span>
    <span class="k">private</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">SLEEP_TIME</span> <span class="p">=</span> <span class="m">1000</span><span class="p">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">bool</span> <span class="n">fOption</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">outputLines</span> <span class="p">=</span> <span class="m">10</span><span class="p">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">filename</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span><span class="p">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">usage</span> <span class="p">=</span> <span class="s">&quot;Usage: Tail.exe [-n number] [-f] filename&quot;</span><span class="p">;</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">try</span> <span class="k">{</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">args</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="m">0</span><span class="p">]</span> <span class="p">==</span> <span class="sc">&#39;-&#39;</span><span class="p">)</span> <span class="k">{</span>
                    <span class="k">switch</span> <span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="m">1</span><span class="p">])</span> <span class="k">{</span>
                        <span class="k">case</span> <span class="sc">&#39;n&#39;</span><span class="p">:</span>
                            <span class="n">outputLines</span> <span class="p">=</span> <span class="kt">int</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">args</span><span class="p">[++</span><span class="n">i</span><span class="p">]);</span>
                            <span class="k">break</span><span class="p">;</span>
                        <span class="k">case</span> <span class="sc">&#39;f&#39;</span><span class="p">:</span>
                            <span class="n">fOption</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
                            <span class="k">break</span><span class="p">;</span>
                        <span class="k">default</span><span class="p">:</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">Error</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Invalid Option: {0}&quot;</span><span class="p">,</span> <span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">Error</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">usage</span><span class="p">);</span>
                            <span class="k">return</span><span class="p">;</span>
                    <span class="k">}</span>
                <span class="k">}</span>
                <span class="k">else</span>
                    <span class="n">filename</span> <span class="p">=</span> <span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">}</span>

            <span class="kt">string</span> <span class="n">buffer</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">allLines</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="kt">string</span> <span class="n">line</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span><span class="p">;</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">FileStream</span> <span class="n">fs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FileStream</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">FileMode</span><span class="p">.</span><span class="n">Open</span><span class="p">,</span> <span class="n">FileAccess</span><span class="p">.</span><span class="n">Read</span><span class="p">,</span> <span class="n">FileShare</span><span class="p">.</span><span class="n">ReadWrite</span><span class="p">))</span> <span class="k">{</span>
                <span class="k">using</span> <span class="p">(</span><span class="n">StreamReader</span> <span class="n">sr</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StreamReader</span><span class="p">(</span><span class="n">fs</span><span class="p">,</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">))</span> <span class="k">{</span>
                    <span class="k">while</span> <span class="p">(</span><span class="n">sr</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">()</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
                        <span class="n">allLines</span><span class="p">++;</span>
                    <span class="n">fs</span><span class="p">.</span><span class="n">Seek</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">SeekOrigin</span><span class="p">.</span><span class="n">Begin</span><span class="p">);</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">allLines</span> <span class="p">&lt;=</span> <span class="n">outputLines</span><span class="p">)</span>
                        <span class="n">buffer</span> <span class="p">=</span> <span class="n">sr</span><span class="p">.</span><span class="n">ReadToEnd</span><span class="p">();</span>
                    <span class="k">else</span> <span class="k">{</span>
                        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">allLines</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                            <span class="n">line</span> <span class="p">=</span> <span class="n">sr</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&gt;</span> <span class="n">allLines</span> <span class="p">-</span> <span class="n">outputLines</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span>
                                <span class="n">buffer</span> <span class="p">+=</span> <span class="n">line</span> <span class="p">+</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
                        <span class="k">}</span>
                    <span class="k">}</span>

                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>

                    <span class="k">while</span> <span class="p">(</span><span class="n">fOption</span><span class="p">)</span> <span class="k">{</span>
                        <span class="n">Thread</span><span class="p">.</span><span class="n">Sleep</span><span class="p">(</span><span class="n">SLEEP_TIME</span><span class="p">);</span>
                        <span class="k">while</span> <span class="p">((</span><span class="n">line</span> <span class="p">=</span> <span class="n">sr</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">())</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">line</span><span class="p">);</span>
                    <span class="k">}</span>
                <span class="k">}</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">Error</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">Error</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">usage</span><span class="p">);</span>
        <span class="k">}</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7175/addtag/" class="addtag" id="addtag_7175">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7175/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7175/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7175"
  >-</span><span
  class="button yellow"
  id="rating_z_7175"
  >0</span><span 
  class="button green"
  id="rating_p_7175"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7175/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7209">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7209/">#7209</a>(<script language="JavaScript">print_time(new Date("2008/08/19 05:27 GMT"));</script><noscript>2008/08/19 05:27 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>手抜きで行末記号を"\n"で決め打ちです。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">sys</span>
<span class="k">import</span> <span class="nn">time</span>
<span class="k">import</span> <span class="nn">StringIO</span>

<span class="k">def</span> <span class="nf">gettail</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
  <span class="n">start</span> <span class="o">=</span> <span class="n">fp</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
  <span class="n">fp</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
  <span class="n">end</span> <span class="o">=</span> <span class="n">fp</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
  <span class="n">s</span> <span class="o">=</span> <span class="s">&#39;&#39;</span>
  <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">end</span> <span class="o">-</span> <span class="n">start</span> <span class="ow">and</span> <span class="n">s</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="p">:</span>
    <span class="n">a</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="mi">160</span> <span class="o">*</span> <span class="n">n</span><span class="p">,</span> <span class="n">fp</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span> <span class="o">-</span> <span class="n">start</span><span class="p">)</span>
    <span class="n">fp</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="o">-</span><span class="n">a</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">s</span> <span class="o">=</span> <span class="n">fp</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">+</span> <span class="n">s</span>
  <span class="k">return</span> <span class="n">StringIO</span><span class="o">.</span><span class="n">StringIO</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="o">.</span><span class="n">readlines</span><span class="p">()[</span><span class="o">-</span><span class="n">n</span><span class="p">:]</span>

<span class="k">def</span> <span class="nf">getnlines</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
  <span class="n">fp</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
  <span class="n">pos</span> <span class="o">=</span> <span class="n">fp</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
  <span class="n">fp</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">start</span><span class="p">)</span>
  <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">gettail</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
    <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
    <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
  <span class="k">return</span> <span class="n">pos</span>

<span class="n">n</span> <span class="o">=</span> <span class="mi">10</span>
<span class="n">f</span> <span class="o">=</span> <span class="bp">False</span>
<span class="n">fp</span> <span class="o">=</span> <span class="bp">None</span>

<span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="k">while</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">:</span>
  <span class="n">s</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">s</span> <span class="o">==</span> <span class="s">&#39;-n&#39;</span><span class="p">:</span>
    <span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
  <span class="k">elif</span> <span class="n">s</span> <span class="o">==</span> <span class="s">&#39;-f&#39;</span><span class="p">:</span>
    <span class="n">f</span> <span class="o">=</span> <span class="bp">True</span>
  <span class="k">elif</span> <span class="ow">not</span> <span class="n">s</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&#39;-&#39;</span><span class="p">):</span>
    <span class="n">fp</span> <span class="o">=</span> <span class="nb">file</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="s">&#39;rb&#39;</span><span class="p">)</span>

<span class="n">pos</span> <span class="o">=</span> <span class="n">getnlines</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>

<span class="k">while</span> <span class="n">f</span><span class="p">:</span>
  <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
  <span class="n">pos</span> <span class="o">=</span> <span class="n">getnlines</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="n">pos</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7209/addtag/" class="addtag" id="addtag_7209">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7209/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7209/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7209"
  >-</span><span
  class="button yellow"
  id="rating_z_7209"
  >0</span><span 
  class="button green"
  id="rating_p_7209"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7209/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7213">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/646/" target="_top">silverwire</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7213/">#7213</a>(<script language="JavaScript">print_time(new Date("2008/08/19 07:52 GMT"));</script><noscript>2008/08/19 07:52 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/bat/">
	  Batchfile
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>バッチです。カバレッジ稼ぎのようでちょっと恥ずかしいのですが、あまり処理を複雑に
したくなかったので、標準入力からの入力や-fオプションは実装しませんでした。

  e.g.
    C:\&gt;tail 3 tail.bat
        set /a i-=%1
      endlocal &amp; more +%i% %p%
    goto :EOF

以下の参考サイトのものはもっと複雑で頭が下がります。</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090422212754/http://d.hatena.ne.jp/otn/20040306/p1">【続々々】tailコマンドの作成</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre>:: tail.bat
@echo off
  setlocal
    set i=0
    set p=%~fs2

    echo %1|findstr /r &quot;[^0-9]&quot; &gt;NUL 2&gt;&amp;1
    if %ERRORLEVEL% equ 0 (call :usage &amp; exit /b 1)

    if &quot;%p%&quot; equ &quot;&quot; (call :usage &amp; exit /b 1)

    if not exist %p% (call :usage &amp; exit /b 1)

    for /f %%i in (&#39;find /c /v &quot;&quot; ^&lt; %p%&#39;) do set i=%%i
    set /a i-=%1
  endlocal &amp; more +%i% %p%
goto :EOF

:usage
  setlocal
    echo %~n0 [LINE] [FILE]
  endlocal
goto :EOF
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7213/addtag/" class="addtag" id="addtag_7213">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/bat/">
		Batchfile
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7213/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7213/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7213"
  >-</span><span
  class="button yellow"
  id="rating_z_7213"
  >0</span><span 
  class="button green"
  id="rating_p_7213"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7213/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7505">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/813/" target="_top">lunlumo</a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7505/">#7505</a>(<script language="JavaScript">print_time(new Date("2008/08/31 09:54 GMT"));</script><noscript>2008/08/31 09:54 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>　オプションの処理にかなり場所をとられてしまっていますが...。</p>
</div>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127</pre></td><td class="code"><div class="highlight"><pre>import    java.io.FileNotFoundException
import    java.io.File
import    java.io.FileInputStream
import    scala.collection.mutable.HashMap

class InvalidArgumentException extends Exception {}

class GetOpt(f:String) {
    var    _params:List[Tuple2[String,Boolean]] = null
    var    _opt:HashMap[Any,Any] = null
    var    _rest:Array[String] = null
    
    _params = f.toList.foldLeft(List[Tuple2[String,Boolean]]()) { (l,c) =&gt;
        c match {
            case &#39;:&#39; =&gt; l match {
                case List() =&gt; throw new InvalidArgumentException
                case h::r =&gt; (h._1,true)::r
            }
            case k =&gt; (k.toString,false)::l
        }
    }.reverse
    
    def parse(a:Array[String]):GetOpt = {
        def _parse(o:HashMap[Any,Any],l:List[String]):Tuple2[HashMap[Any,Any],List[String]] = l match {
            case List() =&gt; (o,List())
            case h::r =&gt; h.toList match {
                case &#39;-&#39;::k =&gt; {
                    _params.find { e =&gt; e._1 == new String(k.toArray) } match {
                        case Some(Tuple2(_,true)) =&gt; {
                            if (r.size == 0) throw new InvalidArgumentException
                            o.update(new String(k.toArray),r.head)
                            _parse(o,r.tail)
                        }
                        case Some(Tuple2(_,false)) =&gt; {
                            o.update(new String(k.toArray),true)
                            _parse(o,r)
                        }
                        case _ =&gt; throw new InvalidArgumentException
                    }
                }
                case _ =&gt; (o,l)
            }
        }
        _parse(new HashMap[Any,Any],a.toList) match {
            case Tuple2(o,r) =&gt; { _opt = o; _rest = r.toArray }
        }
        this
    }
    
    def getopt(k:String):Any = _opt.isDefinedAt(k) match {
        case true =&gt; _opt.apply(k)
        case _ =&gt; false
    }
    
    def rest:Array[String] = _rest
}

class CTail(n:Int,f:Boolean,i:File) {
    
    val    s:FileInputStream = new FileInputStream(i)
    
    def this(o:GetOpt) =this(o.getopt(&quot;n&quot;) match { case Some(false) =&gt; 10; case n =&gt; n.asInstanceOf[String].toInt },o.getopt(&quot;f&quot;).asInstanceOf[Boolean],new File(o.rest.apply(0)))
    
    def tailn:Unit = {
        
        val    BUF_SIZE:Int = 4096
        val    e:Long = i.length
        
        def _tailn(p:Long,n:Int,b:Array[Byte]):Array[Byte] = {
            var    t:Array[Byte] = null
            var    l:Int = n
            (p &gt; BUF_SIZE) match {
                case true =&gt; {
                    t = new Array[Byte](BUF_SIZE)
                    s.getChannel.position(p - BUF_SIZE)
                    s.read(t,0,BUF_SIZE)
                }
                case _ =&gt; {
                    t = new Array[Byte](p.toInt)
                    s.read(t,0,p.toInt)
                }
            }
            t = t.reverse.takeWhile { c =&gt; if (c == &#39;\n&#39;) l = l - 1; (l &gt; 0) }.reverse
            ((p &lt;= BUF_SIZE) || (l == 0)) match {
                case true =&gt; t ++ b
                case _ =&gt; _tailn(p - BUF_SIZE, l, t ++ b)
            }
        }
        
        print(new String(_tailn(e, n, new Array[Byte](0))))
        s.getChannel.position(e)
    }
    
    def tailf:Unit = {
        def _tailf(b:List[Byte]):List[Byte] = {
            val    c:Int = s.read
            (c &gt;= 0) match {
                case true =&gt; _tailf(b + c.toByte)
                case _ =&gt; b
            }
        }
        print(new String(_tailf(List[Byte]()).toArray))
        Thread.sleep(100)
        tailf
    }
    
    def tail:CTail = {
        tailn
        if (f) tailf
        this
    }
    
    def close:Unit = s.close
}

object Tail {
    def main(args:Array[String]):Unit = {
        try {
            val    o:GetOpt = new GetOpt(&quot;n:f&quot;).parse(args)
            (new CTail(o)).tail.close
        } catch {
            case e:InvalidArgumentException =&gt; println(&quot;usage: scala Tail [-n &lt;number of lines&gt;] [-f] file&quot;)
            case e:FileNotFoundException =&gt; print(&quot;file not found.&quot;)
            case e:Exception =&gt; e.printStackTrace
        }
    }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7505/addtag/" class="addtag" id="addtag_7505">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7505/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7505/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7505"
  >-</span><span
  class="button yellow"
  id="rating_z_7505"
  >0</span><span 
  class="button green"
  id="rating_p_7505"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7505/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7626">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7626/">#7626</a>(<script language="JavaScript">print_time(new Date("2008/09/10 21:23 GMT"));</script><noscript>2008/09/10 21:23 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>とりあえず実装してみたというレベル
Data.Sequenceを使ってみた
効率については考えてない orz</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Main</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">Control</span><span class="o">.</span><span class="n">Concurrent</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Foldable</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Sequence</span>
<span class="kr">import</span> <span class="n">Prelude</span> <span class="nv">hiding</span> <span class="p">(</span><span class="nv">foldl</span><span class="p">,</span><span class="nv">concat</span><span class="p">,</span><span class="nv">mapM_</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Console</span><span class="o">.</span><span class="n">GetOpt</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Environment</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">IO</span>

<span class="kr">data</span> <span class="n">Options</span> <span class="o">=</span> <span class="n">Options</span> 
 <span class="p">{</span> <span class="nv">optFollowed</span> <span class="o">::</span> <span class="n">Bool</span>
 <span class="p">,</span> <span class="nv">optNumber</span>   <span class="o">::</span> <span class="n">Int</span>
 <span class="p">}</span> <span class="kr">deriving</span> <span class="n">Show</span>

<span class="nv">defaultOptions</span> <span class="o">=</span> <span class="n">Options</span> 
 <span class="p">{</span> <span class="nv">optFollowed</span> <span class="o">=</span> <span class="n">False</span>
 <span class="p">,</span> <span class="nv">optNumber</span>   <span class="o">=</span> <span class="mi">10</span>
 <span class="p">}</span>

<span class="nv">options</span> <span class="o">::</span> <span class="p">[</span><span class="n">OptDescr</span> <span class="p">(</span><span class="n">Options</span> <span class="o">-&gt;</span> <span class="n">Options</span><span class="p">)]</span>
<span class="nv">options</span> 
 <span class="o">=</span> <span class="p">[</span> <span class="n">Option</span> <span class="p">[</span><span class="sc">&#39;f&#39;</span><span class="p">]</span> <span class="p">[]</span> <span class="p">(</span><span class="n">NoArg</span> <span class="p">(</span><span class="o">\</span> <span class="nv">opts</span> <span class="o">-&gt;</span> <span class="nv">opts</span> <span class="p">{</span> <span class="nv">optFollowed</span> <span class="o">=</span> <span class="n">True</span> <span class="p">}))</span>
            <span class="s">&quot;followed by addition to the file&quot;</span>
   <span class="p">,</span> <span class="n">Option</span> <span class="p">[</span><span class="sc">&#39;n&#39;</span><span class="p">]</span> <span class="p">[]</span> <span class="p">(</span><span class="n">ReqArg</span> <span class="p">(</span><span class="o">\</span> <span class="nv">d</span> <span class="nv">opts</span> <span class="o">-&gt;</span> <span class="nv">opts</span> <span class="p">{</span> <span class="nv">optNumber</span> <span class="o">=</span> <span class="nv">read</span> <span class="nv">d</span> <span class="p">})</span> <span class="s">&quot;NUMBER&quot;</span><span class="p">)</span>
            <span class="s">&quot;display last NUMBER lines&quot;</span><span class="p">]</span>

<span class="nv">compileOpts</span> <span class="o">::</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">(</span><span class="n">Options</span><span class="p">,</span> <span class="p">[</span><span class="n">String</span><span class="p">])</span>
<span class="nv">compileOpts</span> <span class="nv">argv</span>
 <span class="o">=</span> <span class="kr">case</span> <span class="nv">getOpt</span> <span class="n">Permute</span> <span class="nv">options</span> <span class="nv">argv</span> <span class="kr">of</span>
     <span class="p">(</span><span class="nv">o</span><span class="p">,</span><span class="nv">n</span><span class="p">,[]</span>  <span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">return</span> <span class="p">(</span><span class="nv">foldl</span> <span class="p">(</span><span class="nv">flip</span> <span class="nv">id</span><span class="p">)</span> <span class="nv">defaultOptions</span> <span class="nv">o</span><span class="p">,</span> <span class="nv">n</span><span class="p">)</span>
     <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="kr">_</span><span class="p">,</span><span class="nv">errs</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">ioError</span> <span class="p">(</span><span class="nv">userError</span> <span class="p">(</span><span class="nv">concat</span> <span class="nv">errs</span> <span class="o">++</span> <span class="nv">usageInfo</span> <span class="nv">header</span> <span class="nv">options</span><span class="p">))</span>
  <span class="kr">where</span> <span class="nv">header</span> <span class="o">=</span> <span class="s">&quot;Usage : tail [OPTION..] file&quot;</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="nv">getArgs</span> <span class="o">&gt;&gt;=</span> <span class="nv">compileOpts</span> <span class="o">&gt;&gt;=</span> <span class="nv">tail&#39;</span>

<span class="nv">tail&#39;</span> <span class="o">::</span> <span class="p">(</span><span class="n">Options</span><span class="p">,</span> <span class="p">[</span><span class="n">String</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">tail&#39;</span> <span class="p">(</span><span class="nv">o</span><span class="p">,</span><span class="nv">fs</span><span class="p">)</span> <span class="o">=</span>   <span class="nv">openFile</span> <span class="p">(</span><span class="nv">head</span> <span class="nv">fs</span><span class="p">)</span> <span class="n">ReadMode</span>
             <span class="o">&gt;&gt;=</span> <span class="nv">loop</span> <span class="nv">empty</span> <span class="p">(</span><span class="nv">optNumber</span> <span class="nv">o</span><span class="p">)</span> <span class="mi">0</span> <span class="p">(</span><span class="nv">optFollowed</span> <span class="nv">o</span><span class="p">)</span>

<span class="nv">loop</span> <span class="o">::</span> <span class="n">Seq</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="o">-&gt;</span> <span class="n">Handle</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">loop</span> <span class="nv">q</span> <span class="nv">n</span> <span class="nv">i</span> <span class="nv">f</span> <span class="nv">h</span>
 <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">eof</span> <span class="o">&lt;-</span> <span class="nv">hIsEOF</span> <span class="nv">h</span>
      <span class="p">;</span> <span class="kr">if</span> <span class="nv">eof</span> <span class="kr">then</span> <span class="kr">if</span> <span class="nv">not</span> <span class="nv">f</span> <span class="kr">then</span> <span class="nv">printQ</span> <span class="nv">q</span>
                    <span class="kr">else</span> <span class="nv">printQ</span> <span class="nv">q</span> <span class="o">&gt;&gt;</span> <span class="nv">lineCat</span> <span class="nv">h</span>
        <span class="kr">else</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">l</span> <span class="o">&lt;-</span> <span class="nv">hGetLine</span> <span class="nv">h</span>
                <span class="p">;</span> <span class="kr">if</span> <span class="nv">n</span> <span class="o">&gt;</span> <span class="nv">i</span> <span class="kr">then</span> <span class="nv">loop</span> <span class="p">(</span><span class="nv">q</span> <span class="o">|&gt;</span> <span class="nv">l</span><span class="p">)</span> <span class="nv">n</span> <span class="p">(</span><span class="nv">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="nv">f</span> <span class="nv">h</span>
                  <span class="kr">else</span> <span class="kr">case</span> <span class="nv">viewl</span> <span class="nv">q</span> <span class="kr">of</span>
                         <span class="kr">_</span> <span class="o">:&lt;</span> <span class="nv">qs</span> <span class="o">-&gt;</span> <span class="nv">loop</span> <span class="p">(</span><span class="nv">qs</span> <span class="o">|&gt;</span> <span class="nv">l</span><span class="p">)</span> <span class="nv">n</span> <span class="nv">n</span> <span class="nv">f</span> <span class="nv">h</span>
                <span class="p">}</span>
      <span class="p">}</span>

<span class="nv">printQ</span> <span class="o">::</span> <span class="n">Seq</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">printQ</span> <span class="o">=</span> <span class="nv">mapM_</span> <span class="nv">putStrLn</span>

<span class="nv">lineCat</span> <span class="o">::</span> <span class="n">Handle</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">lineCat</span> <span class="nv">h</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">eof</span> <span class="o">&lt;-</span> <span class="nv">hIsEOF</span> <span class="nv">h</span>
               <span class="p">;</span> <span class="kr">if</span> <span class="nv">eof</span> <span class="kr">then</span> <span class="nv">threadDelay</span> <span class="p">(</span><span class="mi">10</span><span class="o">^</span><span class="mi">4</span><span class="p">)</span> <span class="o">&gt;&gt;</span> <span class="nv">lineCat</span> <span class="nv">h</span>
                 <span class="kr">else</span> <span class="nv">hGetLine</span> <span class="nv">h</span> <span class="o">&gt;&gt;=</span> <span class="nv">putStrLn</span> <span class="o">&gt;&gt;</span> <span class="nv">lineCat</span> <span class="nv">h</span>
               <span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7626/addtag/" class="addtag" id="addtag_7626">タグ</a>:
	
    
    <a href="/web/20090422212754/http://ja.doukaku.org/tag/Data.Sequence/">Data.Sequence</a>
    
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7626/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7626/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7626"
  >-</span><span
  class="button yellow"
  id="rating_z_7626"
  >0</span><span 
  class="button green"
  id="rating_p_7626"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7626/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7938">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7938/">#7938</a>(<script language="JavaScript">print_time(new Date("2008/11/03 09:48 GMT"));</script><noscript>2008/11/03 09:48 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  あんまり効率は良くないかも<br/>(tail&nbsp;"/etc/passwd"&nbsp;4&nbsp;:follow&nbsp;'T)<br/>;&gt;&gt;&gt;&nbsp;<br/>haldaemon:x:111:123:Hardware&nbsp;abstraction&nbsp;layer,,,:/var/run/hald:/bin/false<br/>sshd:x:112:65534::/var/run/sshd:/usr/sbin/nologin<br/>statd:x:113:65534::/var/lib/nfs:/bin/false<br/>telnetd:x:114:125::/nonexistent:/bin/false<br/>...&nbsp;1秒おきに繰り返し
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre>(defun tail (file lines &amp;key (follow nil) (external-format :utf-8))
  (when (&lt; 0 lines)
    (let ((pool (make-array lines)))
      (with-open-file (in file :external-format external-format)
        (loop :DO (loop :for line := (read-line in nil nil) :while line
                        :for pos := 0 :then (mod (1+ pos) lines)
                        :do (setf (aref pool pos) line)
                        :finally (loop :for p :from pos
                                       :for x :across pool
                                       :do (princ (aref pool (mod (1+ p) lines)))
                                           (terpri)))
              :WHILE follow 
              :DO (file-position in 0) 
                  (sleep 1))))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7938/addtag/" class="addtag" id="addtag_7938">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7938/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7938/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7938"
  >-</span><span
  class="button yellow"
  id="rating_z_7938"
  >0</span><span 
  class="button green"
  id="rating_p_7938"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422212754/http://ja.doukaku.org/comment/7938/">
    1
    reply
  </a>

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7938/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment7940">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7940/">#7940</a>(<script language="JavaScript">print_time(new Date("2008/11/03 03:59 GMT"));</script><noscript>2008/11/03 03:59 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  すいません、間違ったものを貼りつけてました。前のでは、ファイルの行数が指定より少ない場合に余計な出力が出てしまいます。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre>(defun tail (file lines &amp;key (follow nil) (external-format :utf-8))
  (when (&lt; 0 lines)
    (let ((pool (make-array lines :initial-element nil)))
      (with-open-file (in file :external-format external-format)
        (loop :DO (loop :for line := (read-line in nil nil) :while line
                        :for pos := 0 :then (mod (1+ pos) lines)
                        :do (setf (aref pool pos) line)
                        :finally (loop :for p :from pos
                                       :for x :across pool
                                       :do (let ((line (aref pool (mod (1+ p) lines))))
                                             (when line 
                                               (princ line)
                                               (terpri)))))
              :WHILE follow 
              :DO (file-position in 0) 
                  (sleep 1))))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7940/addtag/" class="addtag" id="addtag_7940">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7940/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7940/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7940"
  >-</span><span
  class="button yellow"
  id="rating_z_7940"
  >0</span><span 
  class="button green"
  id="rating_p_7940"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422212754/http://ja.doukaku.org/comment/7938/"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422212754/http://ja.doukaku.org/comment/7940/root/"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7940/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment7945">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7945/">#7945</a>(<script language="JavaScript">print_time(new Date("2008/11/04 02:30 GMT"));</script><noscript>2008/11/04 02:30 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  該当行のファイルポジションを割出してから表示するようにしてみました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre>(defun tail (file lines &amp;key (follow nil) (external-format :utf-8))
  (when (&lt; 0 lines)
    (with-open-file (in file :external-format external-format)
      (loop :FOR pos := (last-n-line-position lines file) 
                  :THEN (last-n-line-position lines file :offset pos)
            :DO (file-position in pos)
                (loop :for line := (read-line in nil nil) :while line
                      :do (princ line) (terpri))
            :WHILE follow :DO (sleep 1)))))

(defun last-n-line-position (n file &amp;key (newline-char #\Newline) (offset 0))
  (declare ((integer 0 *) n offset))
  (let* ((n (1+ n))                     ;改行で数えているので1+
         (pool (make-array n :initial-element nil)))
    (with-open-file (in file :element-type &#39;(unsigned-byte 8))
      (file-position in offset)
      (loop :with nl := (char-code newline-char)
            :and pos := 0
            :for byte := (read-byte in nil nil) :while byte
            :for file-pos :from 0 
            :when (eql nl byte)
            :do (setq pos (mod (1+ pos) n))
                (setf (aref pool pos) file-pos)
            :finally (return
                       (let ((ans (loop :for p :across pool 
                                        :minimize (or p 0))))
                         (+ offset
                            (if (zerop ans) 0 (1+ ans)))))))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/7945/addtag/" class="addtag" id="addtag_7945">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7945/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/7945/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7945"
  >-</span><span
  class="button yellow"
  id="rating_z_7945"
  >0</span><span 
  class="button green"
  id="rating_p_7945"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/7945/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8179">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/560/" target="_top">ihag</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/8179/">#8179</a>(<script language="JavaScript">print_time(new Date("2008/12/15 06:37 GMT"));</script><noscript>2008/12/15 06:37 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>行数を後ろから数えるのが面倒だなぁ，と思ったけど，よくよく考えたらmmap(2)してポインタ経由で後ろから読めばいいだけの話でした．</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;sys/mman.h&gt;</span>
<span class="cp">#include &lt;sys/stat.h&gt;</span>
<span class="cp">#include &lt;sys/types.h&gt;</span>
<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;fcntl.h&gt;</span>
<span class="cp">#include &lt;unistd.h&gt;</span>

<span class="cp">#ifndef false</span>
<span class="cp"># define false 0</span>
<span class="cp">#endif</span>
<span class="cp">#ifndef true</span>
<span class="cp"># define true !false</span>
<span class="cp">#endif</span>

<span class="cp">#define handle_error(str) \</span>
<span class="cp">    do { perror(str); exit(EXIT_FAILURE); } while(0)</span>

<span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">myname</span><span class="p">;</span>

<span class="kt">void</span>
<span class="nf">usage</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;usage: %s [-n &lt;number&gt;] [-f] &lt;file&gt;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">myname</span><span class="p">);</span>
    <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="nf">do_flush</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">offset</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">file_size</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">u_char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">8192</span><span class="p">],</span> <span class="o">*</span><span class="n">buf_p</span><span class="p">;</span>
    <span class="n">size_t</span> <span class="n">len_r</span><span class="p">,</span> <span class="n">len_w</span><span class="p">,</span> <span class="n">remain_byte</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">remain_byte</span> <span class="o">=</span> <span class="n">file_size</span> <span class="o">-</span> <span class="n">offset</span><span class="p">;</span>
         <span class="n">remain_byte</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span>
         <span class="n">remain_byte</span> <span class="o">-=</span> <span class="n">len_r</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">((</span><span class="n">len_r</span> <span class="o">=</span> <span class="n">read</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">)))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">handle_error</span><span class="p">(</span><span class="s">&quot;read&quot;</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">buf_p</span> <span class="o">=</span> <span class="n">buf</span><span class="p">;</span> <span class="p">(</span><span class="n">buf_p</span> <span class="o">-</span> <span class="n">buf</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">len_r</span><span class="p">;</span> <span class="n">buf_p</span> <span class="o">+=</span> <span class="n">len_w</span><span class="p">)</span>
            <span class="k">if</span> <span class="p">((</span><span class="n">len_w</span> <span class="o">=</span> <span class="n">write</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="n">len_r</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
                <span class="n">handle_error</span><span class="p">(</span><span class="s">&quot;write&quot;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="nf">do_tail</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">file_size</span><span class="p">,</span> <span class="kt">int</span> <span class="n">line_max</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">u_char</span> <span class="o">*</span><span class="n">head</span><span class="p">,</span> <span class="o">*</span><span class="n">tail</span><span class="p">,</span> <span class="o">*</span><span class="n">cur</span><span class="p">,</span> <span class="o">*</span><span class="n">last</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">lines</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">size_t</span> <span class="n">len</span><span class="p">;</span>

    <span class="n">head</span> <span class="o">=</span> <span class="p">(</span><span class="n">u_char</span> <span class="o">*</span><span class="p">)</span> <span class="n">mmap</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">file_size</span><span class="p">,</span> <span class="n">PROT_READ</span><span class="p">,</span>
                           <span class="n">MAP_PRIVATE</span><span class="p">,</span> <span class="n">fd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">head</span> <span class="o">==</span> <span class="n">MAP_FAILED</span><span class="p">)</span>
        <span class="n">handle_error</span><span class="p">(</span><span class="s">&quot;mmap&quot;</span><span class="p">);</span>

    <span class="n">tail</span> <span class="o">=</span> <span class="n">head</span> <span class="o">+</span> <span class="n">file_size</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">tail</span> <span class="o">!=</span> <span class="sc">&#39;\n&#39;</span><span class="p">)</span>
        <span class="o">++</span><span class="n">lines</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">cur</span> <span class="o">=</span> <span class="n">tail</span><span class="p">;</span> <span class="n">cur</span> <span class="o">&gt;=</span> <span class="n">head</span><span class="p">;</span> <span class="n">last</span> <span class="o">=</span> <span class="n">cur</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">cur</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span><span class="p">)</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">++</span><span class="n">lines</span> <span class="o">&gt;</span> <span class="n">line_max</span><span class="p">)</span>
                <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">while</span> <span class="p">((</span><span class="n">len</span> <span class="o">=</span> <span class="n">write</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">last</span><span class="p">,</span> <span class="n">file_size</span> <span class="o">-</span> <span class="p">(</span><span class="n">last</span> <span class="o">-</span> <span class="n">head</span><span class="p">)))</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
        <span class="n">last</span> <span class="o">+=</span> <span class="n">len</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">len</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">handle_error</span><span class="p">(</span><span class="s">&quot;write&quot;</span><span class="p">);</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">munmap</span><span class="p">(</span><span class="n">head</span><span class="p">,</span> <span class="n">file_size</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">handle_error</span><span class="p">(</span><span class="s">&quot;munmap&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="nf">do_tailf</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">file_size</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="n">stat</span> <span class="n">sb</span><span class="p">;</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">lseek</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">file_size</span><span class="p">,</span> <span class="n">SEEK_SET</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">handle_error</span><span class="p">(</span><span class="s">&quot;lseek&quot;</span><span class="p">);</span>

    <span class="k">while</span> <span class="p">(</span><span class="nb">true</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">fstat</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">sb</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">handle_error</span><span class="p">(</span><span class="s">&quot;fstat&quot;</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">sb</span><span class="p">.</span><span class="n">st_size</span> <span class="o">&gt;</span> <span class="n">file_size</span><span class="p">)</span>
            <span class="n">do_flush</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">file_size</span><span class="p">,</span> <span class="n">sb</span><span class="p">.</span><span class="n">st_size</span><span class="p">);</span>
        <span class="n">file_size</span> <span class="o">=</span> <span class="n">sb</span><span class="p">.</span><span class="n">st_size</span><span class="p">;</span>
        <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="nf">process_file</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">,</span> <span class="kt">int</span> <span class="n">line_max</span><span class="p">,</span> <span class="kt">int</span> <span class="n">f_tailf</span><span class="p">,</span> <span class="kt">int</span> <span class="n">f_header</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
    <span class="n">size_t</span> <span class="n">file_size</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">f_header</span><span class="p">)</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;==&gt; %s &lt;==</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">filename</span><span class="p">);</span>
    
    <span class="k">if</span> <span class="p">((</span><span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">handle_error</span><span class="p">(</span><span class="s">&quot;open&quot;</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">((</span><span class="n">file_size</span> <span class="o">=</span> <span class="n">lseek</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">SEEK_END</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">handle_error</span><span class="p">(</span><span class="s">&quot;lseek&quot;</span><span class="p">);</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">file_size</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
        <span class="n">do_tail</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">file_size</span><span class="p">,</span> <span class="n">line_max</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">f_tailf</span><span class="p">)</span>
        <span class="n">do_tailf</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">file_size</span><span class="p">);</span>

    <span class="n">close</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">ch</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">line_max</span> <span class="o">=</span> <span class="mi">10</span><span class="p">,</span> <span class="n">f_tailf</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>

    <span class="n">myname</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="k">while</span> <span class="p">((</span><span class="n">ch</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="s">&quot;fn:&quot;</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">switch</span> <span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">case</span> <span class="sc">&#39;f&#39;</span><span class="o">:</span>
            <span class="n">f_tailf</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="sc">&#39;n&#39;</span><span class="o">:</span>
            <span class="n">line_max</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">optarg</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="sc">&#39;?&#39;</span><span class="o">:</span>
        <span class="k">default</span><span class="o">:</span>
            <span class="n">usage</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">argc</span> <span class="o">-=</span> <span class="n">optind</span><span class="p">;</span> <span class="n">argv</span> <span class="o">+=</span> <span class="n">optind</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">usage</span><span class="p">();</span>

    <span class="k">while</span> <span class="p">(</span><span class="o">*</span><span class="n">argv</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">process_file</span><span class="p">(</span><span class="o">*</span><span class="n">argv</span><span class="p">,</span> <span class="n">line_max</span><span class="p">,</span>
                     <span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="o">&amp;&amp;</span> <span class="n">f_tailf</span><span class="p">),</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">));</span>
        <span class="n">argv</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_SUCCESS</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/8179/addtag/" class="addtag" id="addtag_8179">タグ</a>:
	
    
    <a href="/web/20090422212754/http://ja.doukaku.org/tag/POSIX/">POSIX</a>
    
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/8179/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/8179/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8179"
  >-</span><span
  class="button yellow"
  id="rating_z_8179"
  >0</span><span 
  class="button green"
  id="rating_p_8179"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422212754/http://ja.doukaku.org/comment/8179/">
    1
    reply
  </a>

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/8179/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8183">
  <p class="banner"><a href="/web/20090422212754/http://ja.doukaku.org/user/560/" target="_top">ihag</a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422212754/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/8183/">#8183</a>(<script language="JavaScript">print_time(new Date("2008/12/15 09:45 GMT"));</script><noscript>2008/12/15 09:45 GMT</noscript>)
	
	
	
	[<a href="/web/20090422212754/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ちょうど気を抜いたところでバグってました．うーん．</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="gd">--- tail.c.orig 2008-12-15 21:28:50.000000000 +0900</span>
<span class="gi">+++ tail.c      2008-12-16 00:39:44.000000000 +0900</span>
<span class="gu">@@ -37,7 +37,7 @@</span>
         if ((len_r = read(fd, buf, sizeof(buf))) == -1)
             handle_error(&quot;read&quot;);
         for (buf_p = buf; (buf_p - buf) &lt; len_r; buf_p += len_w)
<span class="gd">-            if ((len_w = write(1, buf, len_r)) == -1)</span>
<span class="gi">+            if ((len_w = write(1, buf_p, len_r - (buf_p - buf))) == -1)</span>
                 handle_error(&quot;write&quot;);
     }
 }
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422212754/http://ja.doukaku.org/comment/8183/addtag/" class="addtag" id="addtag_8183">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422212754/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20090422212754/http://ja.doukaku.org/comment/8183/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422212754/http://ja.doukaku.org/comment/8183/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8183"
  >-</span><span
  class="button yellow"
  id="rating_z_8183"
  >0</span><span 
  class="button green"
  id="rating_p_8183"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422212754/http://ja.doukaku.org/comment/8179/"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422212754/http://ja.doukaku.org/comment/8183/root/"><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422212754/http://ja.doukaku.org/195/reply_to/8183/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20090422212754if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20090422212754/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20090422212754/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20090422212754/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20090422212754/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20090422212754/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20090422212754/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20090422212754/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20090422212754/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090422212754/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090422212754/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20090422212754im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20090422212754/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20090422212754/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20090422212754/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20090422212754/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20090422212754/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20090422212754/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20090422212754/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20090422212754/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20090422212754im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20090422212754/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20090422212754/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20090422212754/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20090422212754js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 21:27:54 Apr 22, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:38:28 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
