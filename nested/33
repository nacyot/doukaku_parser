
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
RFC 4180対応版 CSVレコードの分解
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20090422125357cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20090422125357cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20090422125357cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20090422125357/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20090422125357/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20090422125357js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20090422125357js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20090422125357js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20090422125357js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app10.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/33\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "22";
var displayMonth = "Apr";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/33/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090422125357" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20090322113353/http://ja.doukaku.org/33/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="22 Mar 2009"><strong>MAR</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 12:53:57 Apr 22, 2009">APR</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       May
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20090322113353/http://ja.doukaku.org/33/nested/" title="11:33:53 Mar 22, 2009" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 12:53:57 Apr 22, 2009">22</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080408092657/http://ja.doukaku.org/33/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="8 Apr 2008"><strong>2008</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 12:53:57 Apr 22, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20090422125357*/http://ja.doukaku.org/33/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>8 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 22 Apr 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000000_2008:-1:000100000000_2009:3:202200000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20090422125357/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20090422125357/http://ja.doukaku.org/33/">RFC 4180対応版 CSVレコードの分解</a>
</h2>

    





<div class="comment" id="comment3389">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/3389/">#3389</a>(<script language="JavaScript">print_time(new Date("2007/07/27 14:47 GMT"));</script><noscript>2007/07/27 14:47 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre>
ある関数(splitCSV)に渡された文字列を配列に分解して列ごとに表示してください。
渡される文字列は、CSVデータの1レコードが設定されているとします。

使用するデータはK3形式が元になっている仕様で
エクセルが出力しているような形式です。

書式には次のような特徴があります。
1. 各レコードは「改行」によって区切られている。
2. 各列は「,」によって区切られている。
3. 列のデータは「"」によって囲んでも良い。
4. 列に「,」「改行」「"」いずれかを含む場合「"」で
   囲わなければならない。
5. 列データに「"」を含める場合「""」とする。

本来、改行コードはCRLFですが今回は特に指定しません。

次の入力があった場合
"aaa","b
bb","ccc",zzz,"y""Y""y",xxx

出力は
1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; ccc
4 =&gt; zzz
5 =&gt; y"Y"y
6 =&gt; xxx

となります。
</pre>
このお題はraynstardさんの投稿によるものです。ご投稿ありがとうございます。助かります。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/3389/addtag/" class="addtag" id="addtag_3389">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3389"
  >-</span><span
  class="button yellow"
  id="rating_z_3389"
  >0</span><span 
  class="button green"
  id="rating_p_3389"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/3389/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20090422125357/http://ja.doukaku.org/33/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20090422125357/http://ja.doukaku.org/33/flatten/">フラット表示</a> 
<a href="/web/20090422125357/http://ja.doukaku.org/33/">非表示</a> 


  
    





<div class="comment" id="comment1506">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/172/" target="_top">cats</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1506/">#1506</a>(<script language="JavaScript">print_time(new Date("2007/07/27 14:55 GMT"));</script><noscript>2007/07/27 14:55 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
  <span class="k">{</span>
    <span class="kt">string</span> <span class="n">s</span> <span class="p">=</span> <span class="s">&quot;\&quot;aaa\&quot;,\&quot;b\nbb\&quot;,\&quot;ccc\&quot;,zzz,\&quot;y\&quot;\&quot;Y\&quot;\&quot;y\&quot;,xxx&quot;</span><span class="p">;</span>
    <span class="kt">string</span><span class="p">[]</span> <span class="n">ss</span> <span class="p">=</span> <span class="n">splitCSV</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">ss</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="p">++</span><span class="n">i</span><span class="p">)</span>
    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0} =&gt; {1}&quot;</span><span class="p">,</span><span class="n">i</span><span class="p">+</span><span class="m">1</span><span class="p">,</span><span class="n">ss</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
  <span class="k">}</span>
  <span class="k">static</span> <span class="kt">string</span><span class="p">[]</span> <span class="n">splitCSV</span><span class="p">(</span><span class="kt">string</span> <span class="n">s</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">s</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span> <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
    <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">a</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
    <span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
    <span class="kt">string</span> <span class="n">t</span><span class="p">;</span>
    <span class="n">StringBuilder</span> <span class="n">h</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="p">();</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">i</span> <span class="p">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">Length</span><span class="p">)</span>
    <span class="k">{</span>
      <span class="kt">bool</span> <span class="n">b</span> <span class="p">=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">==</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">;</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="p">++</span><span class="n">i</span><span class="p">;</span>
      <span class="n">j</span> <span class="p">=</span> <span class="n">s</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="n">b</span> <span class="p">?</span> <span class="sc">&#39;&quot;&#39;</span> <span class="p">:</span> <span class="sc">&#39;,&#39;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">j</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">)</span> <span class="n">j</span> <span class="p">=</span> <span class="n">s</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span>
      <span class="n">t</span> <span class="p">=</span> <span class="n">s</span><span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="p">-</span> <span class="n">i</span><span class="p">);</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">b</span> <span class="p">&amp;&amp;</span> <span class="n">j</span> <span class="p">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">s</span><span class="p">[</span><span class="n">j</span> <span class="p">+</span> <span class="m">1</span><span class="p">]</span> <span class="p">==</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">)</span>
      <span class="k">{</span>
        <span class="n">h</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">t</span><span class="p">);</span>
        <span class="n">h</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="sc">&#39;&quot;&#39;</span><span class="p">);</span>
        <span class="n">i</span> <span class="p">=</span> <span class="n">j</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>
      <span class="k">}</span>
      <span class="k">else</span>
      <span class="k">{</span>
        <span class="n">a</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">h</span> <span class="p">+</span> <span class="n">t</span><span class="p">);</span>
        <span class="n">h</span><span class="p">.</span><span class="n">Length</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        <span class="n">i</span> <span class="p">=</span> <span class="n">j</span> <span class="p">+</span> <span class="p">(</span><span class="n">b</span> <span class="p">?</span> <span class="m">2</span> <span class="p">:</span> <span class="m">1</span><span class="p">);</span>
      <span class="k">}</span>
    <span class="k">}</span>
    <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">ToArray</span><span class="p">();</span>
  <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1506/addtag/" class="addtag" id="addtag_1506">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1506/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1506/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1506"
  >-</span><span
  class="button yellow"
  id="rating_z_1506"
  >0</span><span 
  class="button green"
  id="rating_p_1506"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1506/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1508">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/101/" target="_top">沢渡 みかげ</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1508/">#1508</a>(<script language="JavaScript">print_time(new Date("2007/07/27 15:14 GMT"));</script><noscript>2007/07/27 15:14 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Text::CSV_XSでさくっと．</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre><span class="n">perl</span> <span class="o">-</span><span class="nn">MText::</span><span class="n">CSV_XS</span> <span class="o">-</span><span class="ow">le</span> <span class="s">&#39;$csv = Text::CSV_XS-&gt;new({binary=&gt;1}); $csv-&gt;parse(&quot;\&quot;aaa\&quot;,\&quot;b\nbb\&quot;,\&quot;ccc\&quot;,zzz,\&quot;y\&quot;\&quot;Y\&quot;\&quot;y\&quot;,xxx&quot;); map { print ++$i, &quot; =&gt; $_&quot; } $csv-&gt;fields()&#39;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1508/addtag/" class="addtag" id="addtag_1508">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1508/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1508/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1508"
  >-</span><span
  class="button yellow"
  id="rating_z_1508"
  >0</span><span 
  class="button green"
  id="rating_p_1508"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1508/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1509">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/314/" target="_top">lany</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1509/">#1509</a>(<script language="JavaScript">print_time(new Date("2007/07/27 15:29 GMT"));</script><noscript>2007/07/27 15:29 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/delphi/">
	  Delphi
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre><span class="k">program</span> <span class="n">splitter</span><span class="o">;</span>

<span class="cm">{$APPTYPE CONSOLE}</span>

<span class="k">uses</span>
    <span class="n">Classes</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nf">splitCSV</span><span class="p">(</span><span class="k">const</span> <span class="n">Text</span><span class="o">:</span> <span class="k">String</span><span class="p">)</span><span class="o">;</span>
<span class="k">var</span>
    <span class="n">i</span><span class="o">:</span> <span class="kt">Integer</span><span class="o">;</span>
    <span class="n">sl</span><span class="o">:</span> <span class="n">TStringList</span><span class="o">;</span>
<span class="k">begin</span>
    <span class="n">sl</span> <span class="o">:=</span> <span class="n">TStringList</span><span class="o">.</span><span class="n">Create</span><span class="o">;</span>
    <span class="k">try</span>
        <span class="n">sl</span><span class="o">.</span><span class="n">CommaText</span> <span class="o">:=</span> <span class="n">Text</span><span class="o">;</span>
        <span class="k">for</span> <span class="n">i</span> <span class="o">:=</span> <span class="mi">0</span> <span class="k">to</span> <span class="n">sl</span><span class="o">.</span><span class="n">Count</span><span class="o">-</span><span class="mi">1</span> <span class="k">do</span>
            <span class="nb">Writeln</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="s">&#39; =&gt; &#39;</span><span class="o">,</span> <span class="n">sl</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">;</span>
    <span class="k">finally</span>
        <span class="n">sl</span><span class="o">.</span><span class="n">Free</span><span class="o">;</span>
    <span class="k">end</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">begin</span>
    <span class="n">splitCSV</span><span class="p">(</span><span class="s">&#39;&quot;aaa&quot;,&quot;b&#39;</span><span class="sc">#13#10</span><span class="s">&#39;bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&#39;</span><span class="p">)</span><span class="o">;</span>
<span class="k">end</span><span class="o">.</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1509/addtag/" class="addtag" id="addtag_1509">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/delphi/">
		Delphi
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1509/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1509/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1509"
  >-</span><span
  class="button yellow"
  id="rating_z_1509"
  >0</span><span 
  class="button green"
  id="rating_p_1509"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1509/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1510">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1510/">#1510</a>(<script language="JavaScript">print_time(new Date("2007/07/27 15:51 GMT"));</script><noscript>2007/07/27 15:51 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;csv&#39;</span>
<span class="k">def</span> <span class="nf">splitCSV</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
  <span class="no">CSV</span><span class="o">::</span><span class="no">Reader</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">str</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
    <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">x</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">d</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">i</span><span class="o">.</span><span class="n">succ</span><span class="si">}</span><span class="s2"> =&gt; </span><span class="si">#{</span><span class="n">d</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span>
<span class="n">splitCSV</span><span class="p">(</span><span class="s1">&#39;&quot;aaa&quot;,&quot;b</span>
<span class="s1">bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&#39;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1510/addtag/" class="addtag" id="addtag_1510">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1510/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1510/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1510"
  >-</span><span
  class="button yellow"
  id="rating_z_1510"
  >0</span><span 
  class="button green"
  id="rating_p_1510"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1510/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1513">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1513/">#1513</a>(<script language="JavaScript">print_time(new Date("2007/07/27 16:10 GMT"));</script><noscript>2007/07/27 16:10 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  これでいいのかな？
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">csv</span>
<span class="k">from</span> <span class="nn">StringIO</span> <span class="k">import</span> <span class="n">StringIO</span>

<span class="n">data</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;&quot;aaa&quot;,&quot;b</span>
<span class="s">bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&quot;&quot;&quot;</span>

<span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">csv</span><span class="o">.</span><span class="n">reader</span><span class="p">(</span><span class="n">StringIO</span><span class="p">(</span><span class="n">data</span><span class="p">)):</span>
  <span class="k">for</span> <span class="n">i</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">row</span><span class="p">):</span>
    <span class="k">print</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;=&gt;&quot;</span><span class="p">,</span> <span class="n">v</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1513/addtag/" class="addtag" id="addtag_1513">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1513/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1513/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1513"
  >-</span><span
  class="button yellow"
  id="rating_z_1513"
  >0</span><span 
  class="button green"
  id="rating_p_1513"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1513/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1514">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1514/">#1514</a>(<script language="JavaScript">print_time(new Date("2007/07/27 16:38 GMT"));</script><noscript>2007/07/27 16:38 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  arnesi:parse-csv-stringはyYyとなるバグがあって使えない
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>(require :fare-csv)
(defun splitCSV (line)
  (loop for elt in (with-input-from-string (inn line)
                     (fare-csv:read-csv-line inn))
     for i from 1 do
     (format t &quot;~a =&gt; ~a~%&quot; i elt)))

(splitCSV &quot;\&quot;aaa\&quot;,\&quot;b
bb\&quot;,\&quot;ccc\&quot;,zzz,\&quot;y\&quot;\&quot;Y\&quot;\&quot;y\&quot;,xxx
&quot;)
;; 1 =&gt; aaa
;; 2 =&gt; b
;; bb
;; 3 =&gt; ccc
;; 4 =&gt; zzz
;; 5 =&gt; y&quot;Y&quot;y
;; 6 =&gt; xxx
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1514/addtag/" class="addtag" id="addtag_1514">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1514/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1514/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1514"
  >-</span><span
  class="button yellow"
  id="rating_z_1514"
  >0</span><span 
  class="button green"
  id="rating_p_1514"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1514/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1515">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1515/">#1515</a>(<script language="JavaScript">print_time(new Date("2007/07/27 16:49 GMT"));</script><noscript>2007/07/27 16:49 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">text</span><span class="o">.</span><span class="nv">csv</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-42</span><span class="p">)</span>
<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">parse-csv</span> <span class="nv">line</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">call-with-input-string</span> <span class="nv">line</span>
    <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">port</span><span class="p">)</span> <span class="p">((</span><span class="nf">make-csv-reader</span> <span class="o">#</span><span class="err">\</span><span class="o">,</span><span class="p">)</span> <span class="nv">port</span><span class="p">))))</span>
<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">splitCSV</span> <span class="nv">line</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">do-ec</span> <span class="p">(</span><span class="nf">:</span> <span class="nv">elt</span> <span class="p">(</span><span class="nf">parse-csv</span> <span class="nv">line</span><span class="p">))</span>
         <span class="p">(</span><span class="nf">:</span> <span class="nv">i</span> <span class="mi">1</span><span class="p">)</span>
         <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;~a =&gt; ~a~%&quot;</span> <span class="nv">i</span> <span class="nv">elt</span><span class="p">)))</span>

<span class="p">(</span><span class="nf">splitCSV</span> <span class="s">&quot;\&quot;aaa\&quot;,\&quot;b</span>
<span class="s">bb\&quot;,\&quot;ccc\&quot;,zzz,\&quot;y\&quot;\&quot;Y\&quot;\&quot;y\&quot;,xxx</span>
<span class="s">&quot;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1515/addtag/" class="addtag" id="addtag_1515">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1515/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1515/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1515"
  >-</span><span
  class="button yellow"
  id="rating_z_1515"
  >0</span><span 
  class="button green"
  id="rating_p_1515"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1515/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1515/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1520">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1520/">#1520</a>(<script language="JavaScript">print_time(new Date("2007/07/27 17:03 GMT"));</script><noscript>2007/07/27 17:03 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>call-with-input-stringには「portを引数に取る手続き」であれば何でも渡せるので、
(make-csv-reader #\,) の結果をそのまま渡すことができます。
lambdaにくるむ必要はありません。

それから、単純なインデックスつきループであれば
for-each-with-indexというのがあります。

なので、こんなふうに書けます：</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">text</span><span class="o">.</span><span class="nv">csv</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">sequence</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">splitCSV</span> <span class="nv">line</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">for-each-with-index</span> <span class="p">(</span><span class="nf">cut</span> <span class="nv">print</span> <span class="nv">&lt;&gt;</span><span class="s">&quot; =&gt; &quot;</span><span class="nv">&lt;&gt;</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">call-with-input-string</span> <span class="nv">line</span> <span class="p">(</span><span class="nf">make-csv-reader</span> <span class="o">#</span><span class="err">\</span><span class="o">,</span><span class="p">))))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1520/addtag/" class="addtag" id="addtag_1520">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1520/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1520/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1520"
  >-</span><span
  class="button yellow"
  id="rating_z_1520"
  >0</span><span 
  class="button green"
  id="rating_p_1520"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1515/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1520/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1520/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1520/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1521">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1521/">#1521</a>(<script language="JavaScript">print_time(new Date("2007/07/27 17:09 GMT"));</script><noscript>2007/07/27 17:09 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffcf;">1/3=0.33</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  おっと、カラムの表示は1からスタートでしたか。そしたらcutは使えないですね。

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">text</span><span class="o">.</span><span class="nv">csv</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">sequence</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">splitCSV</span> <span class="nv">line</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">for-each-with-index</span>
   <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">i</span> <span class="nv">e</span><span class="p">)</span> <span class="p">(</span><span class="nf">print</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">)</span><span class="s">&quot; =&gt; &quot;</span><span class="nv">e</span><span class="p">))</span>
   <span class="p">(</span><span class="nf">call-with-input-string</span> <span class="nv">line</span> <span class="p">(</span><span class="nf">make-csv-reader</span> <span class="o">#</span><span class="err">\</span><span class="o">,</span><span class="p">))))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1521/addtag/" class="addtag" id="addtag_1521">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1521/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1521/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffcf;"
  >1/3=0.33</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1521"
  >-</span><span
  class="button yellow"
  id="rating_z_1521"
  >0</span><span 
  class="button green"
  id="rating_p_1521"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1520/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1521/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1521/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1521/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1527">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1527/">#1527</a>(<script language="JavaScript">print_time(new Date("2007/07/27 19:33 GMT"));</script><noscript>2007/07/27 19:33 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  どうも、勉強になります。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1527/addtag/" class="addtag" id="addtag_1527">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1527"
  >-</span><span
  class="button yellow"
  id="rating_z_1527"
  >0</span><span 
  class="button green"
  id="rating_p_1527"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1521/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1527/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1527/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment1516">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1516/">#1516</a>(<script language="JavaScript">print_time(new Date("2007/07/27 16:50 GMT"));</script><noscript>2007/07/27 16:50 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Rはこういうの得意で、外部ライブラリーは不要です。
read.csvだとうまく行かなかったのでread.tableを使っています。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre>splitCSV &lt;- function(str){
    table &lt;- read.table(textConnection(str), sep=&quot;,&quot;, colClasses=&quot;character&quot;)
    cat(paste(1:length(table), rep(&quot;=&gt;&quot;, length(table)), table), sep=&quot;\n&quot;)
}

splitCSV(&#39;&quot;aaa&quot;,&quot;b
bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&#39;)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1516/addtag/" class="addtag" id="addtag_1516">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1516/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1516/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1516"
  >-</span><span
  class="button yellow"
  id="rating_z_1516"
  >0</span><span 
  class="button green"
  id="rating_p_1516"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1516/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1516/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1553">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1553/">#1553</a>(<script language="JavaScript">print_time(new Date("2007/07/29 02:19 GMT"));</script><noscript>2007/07/29 02:19 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  念のため、実行結果です（&gt;と+はR Consoleのプロンプトです）
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="highlight"><pre>&gt; splitCSV(&#39;&quot;aaa&quot;,&quot;b
+ bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx,&quot;eee,EEE&quot;,,,&#39;)
1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; ccc
4 =&gt; zzz
5 =&gt; y&quot;Y&quot;y
6 =&gt; xxx
7 =&gt; eee,EEE
8 =&gt; 
9 =&gt; 
10 =&gt;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1553/addtag/" class="addtag" id="addtag_1553">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1553/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1553/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1553"
  >-</span><span
  class="button yellow"
  id="rating_z_1553"
  >0</span><span 
  class="button green"
  id="rating_p_1553"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1516/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1553/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1553/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment1518">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/147/" target="_top">es</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1518/">#1518</a>(<script language="JavaScript">print_time(new Date("2007/07/27 16:53 GMT"));</script><noscript>2007/07/27 16:53 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">text</span><span class="o">.</span><span class="nv">csv</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">splitCSV</span> <span class="nv">str</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">numberling</span> <span class="nv">l</span><span class="p">)</span>
    <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">l</span> <span class="nv">l</span><span class="p">)</span> <span class="p">(</span><span class="nf">n</span> <span class="mi">1</span><span class="p">))</span>
      <span class="p">(</span><span class="nf">unless</span> <span class="p">(</span><span class="nb">null? </span><span class="nv">l</span><span class="p">)</span>
              <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;~d =&gt; ~a~%&quot;</span> <span class="nv">n</span> <span class="p">(</span><span class="nb">car </span><span class="nv">l</span><span class="p">))</span>
              <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">l</span><span class="p">)</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)))))</span>
  <span class="p">(</span><span class="nf">call-with-input-string</span> <span class="nv">str</span>
    <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">in</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">port-for-each</span>
       <span class="p">(</span><span class="nf">pa$</span> <span class="nv">numberling</span><span class="p">)</span>
       <span class="p">(</span><span class="nf">pa$</span> <span class="p">(</span><span class="nf">make-csv-reader</span> <span class="o">#</span><span class="err">\</span><span class="o">,</span><span class="p">)</span> <span class="nv">in</span><span class="p">)))))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1518/addtag/" class="addtag" id="addtag_1518">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1518/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1518/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1518"
  >-</span><span
  class="button yellow"
  id="rating_z_1518"
  >0</span><span 
  class="button green"
  id="rating_p_1518"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1518/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1519">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1519/">#1519</a>(<script language="JavaScript">print_time(new Date("2007/07/27 17:01 GMT"));</script><noscript>2007/07/27 17:01 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  ｃｓｖモジュールを使うのが常道だと思いますが、あえて自前で処理してみました。cStringIOは初めて使いましたが、undoみたいな処理をするには便利かも。（seek の前の if c: が必要なのに気づかず少しはまりましたが）
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">cStringIO</span>
<span class="k">import</span> <span class="nn">os</span>

<span class="k">def</span> <span class="nf">split_csv</span><span class="p">(</span><span class="n">csv</span><span class="p">):</span>
    <span class="n">io</span> <span class="o">=</span> <span class="n">cStringIO</span><span class="o">.</span><span class="n">StringIO</span><span class="p">(</span><span class="n">csv</span><span class="p">)</span>
    <span class="k">while</span> <span class="ow">not</span> <span class="n">io</span><span class="o">.</span><span class="n">closed</span><span class="p">:</span>
        <span class="k">def</span> <span class="nf">f</span><span class="p">():</span>
            <span class="n">quoted</span> <span class="o">=</span> <span class="bp">False</span>
            <span class="k">while</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">c</span> <span class="o">=</span> <span class="n">io</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
                <span class="k">if</span> <span class="ow">not</span> <span class="n">c</span><span class="p">:</span> <span class="c"># eof</span>
                    <span class="n">io</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
                    <span class="k">break</span>
                <span class="k">elif</span> <span class="ow">not</span><span class="p">(</span><span class="n">quoted</span><span class="p">)</span> <span class="ow">and</span> <span class="n">c</span> <span class="o">==</span> <span class="s">&#39;,&#39;</span><span class="p">:</span>
                    <span class="k">break</span>
                <span class="k">elif</span> <span class="ow">not</span><span class="p">(</span><span class="n">quoted</span><span class="p">)</span> <span class="ow">and</span> <span class="n">c</span> <span class="ow">in</span> <span class="p">(</span><span class="s">&#39;</span><span class="se">\r</span><span class="s">&#39;</span><span class="p">,</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">):</span>
                    <span class="n">io</span><span class="o">.</span><span class="n">close</span><span class="p">()</span> <span class="c"># ignore second record</span>
                    <span class="k">break</span>
                <span class="k">elif</span> <span class="n">c</span> <span class="o">==</span> <span class="s">&#39;&quot;&#39;</span><span class="p">:</span>
                    <span class="n">c</span> <span class="o">=</span> <span class="n">io</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
                    <span class="k">if</span> <span class="n">c</span> <span class="o">==</span> <span class="s">&#39;&quot;&#39;</span><span class="p">:</span>
                        <span class="k">yield</span> <span class="n">c</span>
                    <span class="k">else</span><span class="p">:</span>
                        <span class="n">quoted</span> <span class="o">=</span> <span class="ow">not</span><span class="p">(</span><span class="n">quoted</span><span class="p">)</span>
                        <span class="k">if</span> <span class="n">c</span><span class="p">:</span>
                            <span class="n">io</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">os</span><span class="o">.</span><span class="n">SEEK_CUR</span><span class="p">)</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="k">yield</span> <span class="n">c</span>
            <span class="k">if</span> <span class="n">quoted</span><span class="p">:</span>
                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s">&quot;unterminated quotation&quot;</span><span class="p">)</span>
        <span class="k">yield</span> <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">f</span><span class="p">())</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">s</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">split_csv</span><span class="p">(</span><span class="s">&quot;&quot;&quot;</span><span class="se">\</span>
<span class="s">&quot;aaa&quot;,&quot;b</span>
<span class="s">bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx</span>
<span class="s">&quot;&quot;&quot;</span><span class="p">)):</span>
        <span class="k">print</span> <span class="s">&quot;</span><span class="si">%d</span><span class="s"> =&gt; </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">s</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1519/addtag/" class="addtag" id="addtag_1519">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1519/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1519/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1519"
  >-</span><span
  class="button yellow"
  id="rating_z_1519"
  >0</span><span 
  class="button green"
  id="rating_p_1519"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1519/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1519/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1696">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1696/">#1696</a>(<script language="JavaScript">print_time(new Date("2007/08/02 11:12 GMT"));</script><noscript>2007/08/02 11:12 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  上のコードをC++に移植しました。カバレッジ稼ぎ。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;iterator&gt;</span>

<span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">split_csv</span><span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&amp;</span> <span class="n">csv</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">v</span><span class="p">;</span>

    <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">::</span><span class="n">const_iterator</span> <span class="n">it</span> <span class="o">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">it</span> <span class="o">!=</span> <span class="n">csv</span><span class="p">.</span><span class="n">end</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">s</span><span class="p">;</span>

        <span class="kt">bool</span> <span class="n">quoted</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>

        <span class="k">while</span> <span class="p">(</span><span class="n">it</span> <span class="o">!=</span> <span class="n">csv</span><span class="p">.</span><span class="n">end</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">quoted</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">it</span> <span class="o">==</span> <span class="sc">&#39;,&#39;</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="o">++</span><span class="n">it</span><span class="p">;</span>

                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">quoted</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">*</span><span class="n">it</span> <span class="o">==</span> <span class="sc">&#39;\r&#39;</span> <span class="o">||</span> <span class="o">*</span><span class="n">it</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">it</span> <span class="o">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">end</span><span class="p">();</span> <span class="c">// ignore second record</span>

                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">it</span> <span class="o">==</span> <span class="sc">&#39;&quot;&#39;</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">++</span><span class="n">it</span> <span class="o">==</span> <span class="n">csv</span><span class="p">.</span><span class="n">end</span><span class="p">()</span> <span class="o">||</span> <span class="o">*</span><span class="n">it</span> <span class="o">!=</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">quoted</span> <span class="o">=</span> <span class="o">!</span><span class="n">quoted</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">s</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">*</span><span class="n">it</span><span class="o">++</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="n">v</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">v</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">const</span> <span class="kt">char</span> <span class="n">csv</span><span class="p">[]</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\&quot;</span><span class="s">aaa</span><span class="se">\&quot;</span><span class="s">,</span><span class="se">\&quot;</span><span class="s">b</span><span class="se">\n</span><span class="s">bb</span><span class="se">\&quot;</span><span class="s">,</span><span class="se">\&quot;</span><span class="s">ccc</span><span class="se">\&quot;</span><span class="s">,zzz,</span><span class="se">\&quot;</span><span class="s">y</span><span class="se">\&quot;\&quot;</span><span class="s">Y</span><span class="se">\&quot;\&quot;</span><span class="s">y</span><span class="se">\&quot;</span><span class="s">,xxx&quot;</span><span class="p">;</span>

    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">v</span> <span class="o">=</span> <span class="n">split_csv</span><span class="p">(</span><span class="n">csv</span><span class="p">);</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">size_t</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">v</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; =&gt; &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1696/addtag/" class="addtag" id="addtag_1696">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1696/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1696/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1696"
  >-</span><span
  class="button yellow"
  id="rating_z_1696"
  >0</span><span 
  class="button green"
  id="rating_p_1696"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1519/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1696/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1696/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  

  
    





<div class="comment" id="comment1522">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/155/" target="_top">nkmrtks</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1522/">#1522</a>(<script language="JavaScript">print_time(new Date("2007/07/27 17:35 GMT"));</script><noscript>2007/07/27 17:35 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefcf;">-1/3=-0.33</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  【これはひどい】
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre>(defun splitCSV (csv)
  (let ((len (length csv))
        (lst &#39;(())))
    (labels
        ((field (h n i &amp;optional (esc nil))
           (when (&gt; len i)
             (if h
               (princ (format nil &quot;~D =&gt; &quot; n)))
             (let ((it (char csv i)))
               (case it
                 (#\&quot; (if esc
                          (case (char csv (incf i))
                            (#\&quot; (princ #\&quot; ) (field nil n (1+ i) t))
                            (#\, (princ #\newline) (field t (1+ n) (1+ i))))
                        (field nil n (1+ i) t)))
                 (#\newline (if esc
                            (progn (princ it) (field nil n (1+ i) t))
                          (progn (princ it) (field t 1 (1+ i)))))
                 (#\, (princ #\newline) (field t (1+ n) (1+ i)))
                 (t (princ it) (field nil n (1+ i) esc)))))))
      (field t 1 0 nil))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1522/addtag/" class="addtag" id="addtag_1522">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1522/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1522/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefcf;"
  >-1/3=-0.33</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1522"
  >-</span><span
  class="button yellow"
  id="rating_z_1522"
  >0</span><span 
  class="button green"
  id="rating_p_1522"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1522/">
    2
    replies
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1522/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1523">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/155/" target="_top">nkmrtks</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1523/">#1523</a>(<script language="JavaScript">print_time(new Date("2007/07/27 17:39 GMT"));</script><noscript>2007/07/27 17:39 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  あ、ごみが残ってる。３行目のlstは要りません。orz
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1523/addtag/" class="addtag" id="addtag_1523">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1523"
  >-</span><span
  class="button yellow"
  id="rating_z_1523"
  >0</span><span 
  class="button green"
  id="rating_p_1523"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1522/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1523/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1523/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1523/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1524">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/155/" target="_top">nkmrtks</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1524/">#1524</a>(<script language="JavaScript">print_time(new Date("2007/07/27 17:42 GMT"));</script><noscript>2007/07/27 17:42 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  む、インデントもおかしい…もう、なんちゅーかダメorz
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1524/addtag/" class="addtag" id="addtag_1524">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1524"
  >-</span><span
  class="button yellow"
  id="rating_z_1524"
  >0</span><span 
  class="button green"
  id="rating_p_1524"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1523/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1524/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1524/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1571">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/155/" target="_top">nkmrtks</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1571/">#1571</a>(<script language="JavaScript">print_time(new Date("2007/07/30 00:50 GMT"));</script><noscript>2007/07/30 00:50 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>色々修正版

(splitCSV "\"aaa\",\"b
bb\",\"ccc\",zzz,\"y\"\"Y\"\"y\",xxx,\"eee,EEE\",,,")
1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; ccc
4 =&gt; zzz
5 =&gt; y"Y"y
6 =&gt; xxx
7 =&gt; eee,EEE
8 =&gt; 
9 =&gt; 
nil
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre>(defun splitCSV (csv)
  (let ((len (length csv)))
    (labels
        ((field (h n i &amp;optional (esc nil))
           (when (&gt; len i)
             (and h (princ (format nil &quot;~D =&gt; &quot; n)))
             (let ((it (char csv i)))
               (case it
                 (#\&quot; (if esc
                          (case (char csv (incf i))
                            (#\&quot; (princ #\&quot; ) (field nil n (1+ i) t))
                            (#\, (princ #\newline) (field t (1+ n) (1+ i))))
                        (field nil n (1+ i) t)))
                 (#\newline (if esc
                                (progn (princ it) (field nil n (1+ i) t))
                              (progn (princ it) (field t 1 (1+ i)))))
                 (#\, (if esc
                          (progn (princ it) (field nil n (1+ i) t))
                        (progn (princ #\newline) (field t (1+ n) (1+ i)))))
                 (t (princ it) (field nil n (1+ i) esc)))))))
      (field t 1 0 nil))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1571/addtag/" class="addtag" id="addtag_1571">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1571/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1571/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1571"
  >-</span><span
  class="button yellow"
  id="rating_z_1571"
  >0</span><span 
  class="button green"
  id="rating_p_1571"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1522/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1571/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1571/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  

  
    





<div class="comment" id="comment1525">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1525/">#1525</a>(<script language="JavaScript">print_time(new Date("2007/07/27 19:00 GMT"));</script><noscript>2007/07/27 19:00 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  まずは愚直にparseしてみた。
mapM putStrLn のあたりが気持ち悪い?
showField中で出力しちゃう方がいいんだろうか。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">List</span>

<span class="nv">parseF</span> <span class="p">[]</span> <span class="nv">r</span>        <span class="o">=</span> <span class="nv">reverse</span> <span class="nv">r</span>
<span class="nv">parseF</span> <span class="p">(</span><span class="sc">&#39;\&quot;&#39;</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="nv">r</span> <span class="o">=</span> <span class="nv">parseE</span> <span class="nv">cs</span> <span class="p">[]</span> <span class="nv">r</span>
<span class="nv">parseF</span> <span class="nv">cs</span> <span class="nv">r</span>        <span class="o">=</span> <span class="nv">parseN</span> <span class="nv">cs</span> <span class="p">[]</span> <span class="nv">r</span>

<span class="nv">parseE</span> <span class="p">[]</span> <span class="nv">f</span> <span class="nv">r</span>             <span class="o">=</span> <span class="nv">parseF</span> <span class="p">[]</span> <span class="o">$</span> <span class="nv">reverse</span> <span class="nv">f</span><span class="o">:</span><span class="nv">r</span>
<span class="nv">parseE</span> <span class="p">(</span><span class="sc">&#39;\&quot;&#39;</span><span class="o">:</span><span class="sc">&#39;,&#39;</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="nv">f</span> <span class="nv">r</span>  <span class="o">=</span> <span class="nv">parseF</span> <span class="nv">cs</span> <span class="o">$</span> <span class="nv">reverse</span> <span class="nv">f</span><span class="o">:</span><span class="nv">r</span>
<span class="nv">parseE</span> <span class="p">(</span><span class="sc">&#39;\&quot;&#39;</span><span class="o">:</span><span class="sc">&#39;\n&#39;</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="nv">f</span> <span class="nv">r</span> <span class="o">=</span> <span class="nv">parseF</span> <span class="nv">cs</span> <span class="o">$</span> <span class="nv">reverse</span> <span class="nv">f</span><span class="o">:</span><span class="nv">r</span>
<span class="nv">parseE</span> <span class="p">(</span><span class="sc">&#39;\&quot;&#39;</span><span class="o">:</span><span class="sc">&#39;\&quot;&#39;</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="nv">f</span> <span class="nv">r</span> <span class="o">=</span> <span class="nv">parseE</span> <span class="nv">cs</span> <span class="p">(</span><span class="sc">&#39;\&quot;&#39;</span><span class="o">:</span><span class="nv">f</span><span class="p">)</span> <span class="nv">r</span>
<span class="nv">parseE</span> <span class="p">(</span><span class="sc">&#39;\&quot;&#39;</span><span class="o">:</span><span class="nv">c</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="nv">f</span> <span class="nv">r</span>    <span class="o">=</span> <span class="nv">parseE</span> <span class="p">(</span><span class="sc">&#39;\&quot;&#39;</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="nv">f</span> <span class="nv">r</span> <span class="c1">-- should be an error?</span>
<span class="nv">parseE</span> <span class="p">(</span><span class="nv">c</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="nv">f</span> <span class="nv">r</span>         <span class="o">=</span> <span class="nv">parseE</span> <span class="nv">cs</span> <span class="p">(</span><span class="nv">c</span><span class="o">:</span><span class="nv">f</span><span class="p">)</span> <span class="nv">r</span>

<span class="nv">parseN</span> <span class="p">[]</span> <span class="nv">f</span> <span class="nv">r</span>        <span class="o">=</span> <span class="nv">parseF</span> <span class="p">[]</span> <span class="o">$</span> <span class="nv">reverse</span> <span class="nv">f</span><span class="o">:</span><span class="nv">r</span>
<span class="nv">parseN</span> <span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="nv">f</span> <span class="nv">r</span> <span class="o">=</span> <span class="nv">parseF</span> <span class="p">[]</span> <span class="o">$</span> <span class="nv">reverse</span> <span class="nv">f</span><span class="o">:</span><span class="nv">r</span>
<span class="nv">parseN</span> <span class="p">(</span><span class="sc">&#39;,&#39;</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="nv">f</span> <span class="nv">r</span>  <span class="o">=</span> <span class="nv">parseF</span> <span class="nv">cs</span> <span class="o">$</span> <span class="nv">reverse</span> <span class="nv">f</span><span class="o">:</span><span class="nv">r</span>
<span class="nv">parseN</span> <span class="p">(</span><span class="nv">c</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="nv">f</span> <span class="nv">r</span>    <span class="o">=</span> <span class="nv">parseN</span> <span class="nv">cs</span> <span class="p">(</span><span class="nv">c</span><span class="o">:</span><span class="nv">f</span><span class="p">)</span> <span class="nv">r</span>

<span class="nv">splitCVS</span> <span class="nv">record</span> <span class="o">=</span> <span class="nv">mapM</span> <span class="nv">putStrLn</span> <span class="o">$</span> <span class="nv">snd</span> <span class="o">$</span> <span class="nv">mapAccumL</span> <span class="nv">showField</span> <span class="mi">1</span> <span class="o">$</span> <span class="nv">parseF</span> <span class="nv">record</span> <span class="p">[]</span>
  <span class="kr">where</span> <span class="nv">showField</span> <span class="nv">i</span> <span class="nv">f</span> <span class="o">=</span> <span class="p">(</span><span class="nv">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="nv">show</span> <span class="nv">i</span><span class="p">)</span><span class="o">++</span><span class="s">&quot; =&gt; &quot;</span><span class="o">++</span><span class="nv">f</span><span class="p">)</span>

<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span> <span class="nv">splitCVS</span> <span class="s">&quot;\&quot;</span><span class="nv">aaa</span><span class="o">\</span><span class="s">&quot;,\&quot;</span><span class="nv">b</span><span class="o">\</span><span class="nv">nbb</span><span class="o">\</span><span class="s">&quot;,\&quot;</span><span class="nv">ccc</span><span class="o">\</span><span class="s">&quot;,zzz,\&quot;</span><span class="nv">y</span><span class="o">\</span><span class="s">&quot;\&quot;</span><span class="n">Y</span><span class="o">\</span><span class="s">&quot;\&quot;</span><span class="nv">y</span><span class="o">\</span><span class="s">&quot;,xxx\n&quot;</span><span class="p">;</span> <span class="nv">return</span> <span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1525/addtag/" class="addtag" id="addtag_1525">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1525/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1525/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1525"
  >-</span><span
  class="button yellow"
  id="rating_z_1525"
  >0</span><span 
  class="button green"
  id="rating_p_1525"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1525/">
    2
    replies
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1525/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1528">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1528/">#1528</a>(<script language="JavaScript">print_time(new Date("2007/07/27 19:35 GMT"));</script><noscript>2007/07/27 19:35 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  つづいてParsecに挑戦
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Text</span><span class="o">.</span><span class="n">ParserCombinators</span><span class="o">.</span><span class="n">Parsec</span>

<span class="nv">record</span> <span class="o">=</span> <span class="kr">do</span> <span class="nv">fields</span> <span class="o">&lt;-</span> <span class="nv">sepBy</span> <span class="nv">field</span> <span class="p">(</span><span class="nv">char</span> <span class="sc">&#39;,&#39;</span><span class="p">)</span>
            <span class="nv">char</span> <span class="sc">&#39;\n&#39;</span>
            <span class="nv">return</span> <span class="nv">fields</span>

<span class="nv">field</span> <span class="o">=</span> <span class="nv">between</span> <span class="p">(</span><span class="nv">char</span> <span class="sc">&#39;\&quot;&#39;</span><span class="p">)</span> <span class="p">(</span><span class="nv">char</span> <span class="sc">&#39;\&quot;&#39;</span><span class="p">)</span> <span class="nv">quotedField</span>
    <span class="o">&lt;|&gt;</span> <span class="nv">many</span> <span class="p">(</span><span class="nv">noneOf</span> <span class="s">&quot;,\n&quot;</span><span class="p">)</span>

<span class="nv">quotedField</span> <span class="o">=</span> <span class="nv">many</span> <span class="o">$</span> <span class="p">(</span><span class="nv">try</span> <span class="o">$</span> <span class="kr">do</span> <span class="nv">string</span> <span class="s">&quot;\&quot;</span><span class="o">\</span><span class="s">&quot;&quot;</span><span class="p">;</span> <span class="nv">return</span> <span class="sc">&#39;\&quot;&#39;</span><span class="p">)</span> <span class="o">&lt;|&gt;</span> <span class="nv">noneOf</span> <span class="s">&quot;\&quot;&quot;</span>

<span class="s">splitCVS line = case (runParser record () &quot;&quot; line) of</span>
<span class="s">                 Left err     -&gt; print err</span>
<span class="s">                 Right fields -&gt; do mapM putStrLn fields; return ()</span>

<span class="s">main = splitCVS &quot;</span><span class="o">\</span><span class="s">&quot;aaa\&quot;</span><span class="p">,</span><span class="o">\</span><span class="s">&quot;b\nbb\&quot;</span><span class="p">,</span><span class="o">\</span><span class="s">&quot;ccc\&quot;</span><span class="p">,</span><span class="nv">zzz</span><span class="p">,</span><span class="o">\</span><span class="s">&quot;y\&quot;</span><span class="o">\</span><span class="s">&quot;Y\&quot;</span><span class="o">\</span><span class="s">&quot;y\&quot;</span><span class="p">,</span><span class="nv">xxx</span><span class="o">\</span><span class="nv">n</span><span class="s">&quot;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1528/addtag/" class="addtag" id="addtag_1528">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/Parsec/">Parsec</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1528/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1528/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1528"
  >-</span><span
  class="button yellow"
  id="rating_z_1528"
  >0</span><span 
  class="button green"
  id="rating_p_1528"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1525/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1528/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1528/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1639">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1639/">#1639</a>(<script language="JavaScript">print_time(new Date("2007/08/01 04:18 GMT"));</script><noscript>2007/08/01 04:18 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>mapAccumL を使ってみました。
状態遷移表という感じ。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">List</span>
<span class="kr">import</span> <span class="n">Maybe</span>

<span class="kr">data</span> <span class="n">State</span> <span class="o">=</span> <span class="n">F</span> <span class="o">|</span> <span class="n">E</span> <span class="o">|</span> <span class="n">G</span> <span class="o">|</span> <span class="n">Z</span>

<span class="nv">parse</span> <span class="p">(</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="sc">&#39;\&quot;&#39;</span> <span class="o">=</span> <span class="p">((</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="p">),</span>       <span class="n">Nothing</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="sc">&#39;\n&#39;</span> <span class="o">=</span> <span class="p">((</span><span class="n">Z</span><span class="p">,[]),</span>       <span class="n">Just</span> <span class="nv">xs</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="sc">&#39;,&#39;</span>  <span class="o">=</span> <span class="p">((</span><span class="n">F</span><span class="p">,[]),</span>       <span class="n">Just</span> <span class="nv">xs</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="nv">c</span>    <span class="o">=</span> <span class="p">((</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="o">++</span><span class="p">[</span><span class="nv">c</span><span class="p">]),</span>  <span class="n">Nothing</span><span class="p">)</span>

<span class="nv">parse</span> <span class="p">(</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="sc">&#39;\&quot;&#39;</span> <span class="o">=</span> <span class="p">((</span><span class="n">G</span><span class="p">,</span><span class="nv">xs</span><span class="p">),</span>       <span class="n">Nothing</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="nv">c</span>    <span class="o">=</span> <span class="p">((</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="o">++</span><span class="p">[</span><span class="nv">c</span><span class="p">]),</span>  <span class="n">Nothing</span><span class="p">)</span>

<span class="nv">parse</span> <span class="p">(</span><span class="n">G</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="sc">&#39;,&#39;</span>  <span class="o">=</span> <span class="p">((</span><span class="n">F</span><span class="p">,[]),</span>       <span class="n">Just</span> <span class="nv">xs</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">G</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="sc">&#39;\n&#39;</span> <span class="o">=</span> <span class="p">((</span><span class="n">F</span><span class="p">,[]),</span>       <span class="n">Just</span> <span class="nv">xs</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">G</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="sc">&#39;\&quot;&#39;</span> <span class="o">=</span> <span class="p">((</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="o">++</span><span class="s">&quot;\&quot;&quot;), Nothing)</span>
<span class="s">parse (G,xs) c    = ((F,xs++[c]),  Nothing)</span>

<span class="s">parse (Z,_)  c    = ((Z,[]),       Nothing)</span>

<span class="s">splitCVS record = mapM_ putStrLn $ zipWith showFiled [1..]</span>
<span class="s">  $ case s of</span>
<span class="s">      (F, xs) -&gt; fs ++ [xs]</span>
<span class="s">      (E, xs) -&gt; fs ++ [xs]</span>
<span class="s">      _ -&gt; fs</span>
<span class="s">  where</span>
<span class="s">    showFiled i f = (show i)++&quot;</span> <span class="o">=&gt;</span> <span class="s">&quot;++f</span>
<span class="s">    (s, xss) = mapAccumL parse (F,[]) record</span>
<span class="s">    fs = catMaybes xss</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1639/addtag/" class="addtag" id="addtag_1639">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1639/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1639/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1639"
  >-</span><span
  class="button yellow"
  id="rating_z_1639"
  >0</span><span 
  class="button green"
  id="rating_p_1639"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1525/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1639/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1639/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1639/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1683">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1683/">#1683</a>(<script language="JavaScript">print_time(new Date("2007/08/02 05:53 GMT"));</script><noscript>2007/08/02 05:53 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>入力文字列を Maybe列（Nothing が EOF的役割）に変換してから
処理させてコードをすっきりさせました。

さらに Maybe を組み合わせて '\n' を認識したところで処理を
打ち切るようにさせたいのですが Maybe の嵐になるのでこのへんで
やめておきます。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">List</span>
<span class="kr">import</span> <span class="n">Maybe</span>

<span class="kr">data</span> <span class="n">State</span> <span class="o">=</span> <span class="n">F</span> <span class="o">|</span> <span class="n">E</span> <span class="o">|</span> <span class="n">G</span> <span class="o">|</span> <span class="n">Z</span>

<span class="nv">parse</span> <span class="p">(</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="n">Just</span> <span class="sc">&#39;\&quot;&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="p">((</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="p">),</span>       <span class="n">Nothing</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="n">Just</span> <span class="sc">&#39;\n&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="p">((</span><span class="n">Z</span><span class="p">,[]),</span>       <span class="n">Just</span> <span class="nv">xs</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="n">Just</span> <span class="sc">&#39;,&#39;</span><span class="p">)</span>  <span class="o">=</span> <span class="p">((</span><span class="n">F</span><span class="p">,[]),</span>       <span class="n">Just</span> <span class="nv">xs</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="n">Just</span> <span class="nv">c</span><span class="p">)</span>    <span class="o">=</span> <span class="p">((</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="o">++</span><span class="p">[</span><span class="nv">c</span><span class="p">]),</span>  <span class="n">Nothing</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">F</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="n">Nothing</span>     <span class="o">=</span> <span class="p">((</span><span class="n">Z</span><span class="p">,[]),</span>       <span class="n">Just</span> <span class="nv">xs</span><span class="p">)</span>

<span class="nv">parse</span> <span class="p">(</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="n">Just</span> <span class="sc">&#39;\&quot;&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="p">((</span><span class="n">G</span><span class="p">,</span><span class="nv">xs</span><span class="p">),</span>       <span class="n">Nothing</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="n">Just</span> <span class="nv">c</span><span class="p">)</span>    <span class="o">=</span> <span class="p">((</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="o">++</span><span class="p">[</span><span class="nv">c</span><span class="p">]),</span>  <span class="n">Nothing</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="n">Nothing</span>     <span class="o">=</span> <span class="p">((</span><span class="n">Z</span><span class="p">,[]),</span>       <span class="n">Just</span> <span class="nv">xs</span><span class="p">)</span>

<span class="nv">parse</span> <span class="p">(</span><span class="n">G</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="n">Just</span> <span class="sc">&#39;,&#39;</span><span class="p">)</span>  <span class="o">=</span> <span class="p">((</span><span class="n">F</span><span class="p">,[]),</span>       <span class="n">Just</span> <span class="nv">xs</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">G</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="n">Just</span> <span class="sc">&#39;\n&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="p">((</span><span class="n">F</span><span class="p">,[]),</span>       <span class="n">Just</span> <span class="nv">xs</span><span class="p">)</span>
<span class="nv">parse</span> <span class="p">(</span><span class="n">G</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="n">Just</span> <span class="sc">&#39;\&quot;&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="p">((</span><span class="n">E</span><span class="p">,</span><span class="nv">xs</span><span class="o">++</span><span class="s">&quot;\&quot;&quot;), Nothing)</span>
<span class="s">parse (G,xs) (Just c)    = ((F,xs++[c]),  Nothing)</span>
<span class="s">parse (G,xs) Nothing     = ((Z,[]),       Just xs)</span>

<span class="s">parse (Z,_)  _           = ((Z,[]),       Nothing)</span>

<span class="s">splitCVS record = mapM_ putStrLn $ zipWith showFiled [1..]</span>
<span class="s">    $ catMaybes $ snd</span>
<span class="s">    $ mapAccumL parse (F,[]) $ map Just record ++ [Nothing]</span>
<span class="s">  where</span>
<span class="s">    showFiled i f = (show i)++&quot;</span> <span class="o">=&gt;</span> <span class="s">&quot;++f</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1683/addtag/" class="addtag" id="addtag_1683">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1683/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1683/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1683"
  >-</span><span
  class="button yellow"
  id="rating_z_1683"
  >0</span><span 
  class="button green"
  id="rating_p_1683"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1639/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1683/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1683/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment1526">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1526/">#1526</a>(<script language="JavaScript">print_time(new Date("2007/07/27 19:03 GMT"));</script><noscript>2007/07/27 19:03 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>寝る前にもいっちょ。今度は自分でパース。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre>import scala.collection.mutable.ListBuffer
def parseCSV(s:String):Array[Array[String]] = {
  def split(s:String, c:String) = {
    val buf = new ListBuffer[String]
    val result = new ListBuffer[String]
    s.split(c).foreach(p =&gt; p.filter(_ ==&#39;&quot;&#39;).length%2 match{
      case 0 if  buf.isEmpty  =&gt; result += p
      case 0 if !buf.isEmpty  =&gt; buf    += p
      case 1 if  buf.isEmpty  =&gt; buf    += p
      case 1 if !buf.isEmpty  =&gt;
        buf += p
        result += buf.mkString(c)
        buf.clear
    })
    result
  }
  split(s,&quot;\n&quot;).map(line =&gt; {
    split(line, &quot;,&quot;).map(col =&gt; {
      col.replaceAll(&quot;\&quot;\&quot;&quot;, &quot;\&quot;&quot;).replaceAll(&quot;^(\&quot;)&quot;, &quot;&quot;)
         .replaceAll(&quot;(\&quot;)$&quot;, &quot;&quot;)
    }).toArray
  }).toArray
}

val data = &quot;&quot;&quot;&quot;aaa&quot;,&quot;b
bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&quot;&quot;&quot;

parseCSV(data).foreach(line =&gt; {
  (1 to line.length).foreach(i =&gt; {
    println(i + &quot; =&gt; &quot; + line(i-1))
  })
})
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1526/addtag/" class="addtag" id="addtag_1526">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1526/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1526/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1526"
  >-</span><span
  class="button yellow"
  id="rating_z_1526"
  >0</span><span 
  class="button green"
  id="rating_p_1526"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1526/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  
    





<div class="comment" id="comment1531">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1531/">#1531</a>(<script language="JavaScript">print_time(new Date("2007/07/28 02:16 GMT"));</script><noscript>2007/07/28 02:16 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>お題に対応する最小限のチェックをしたつもりですが
入力文字列によっては見逃しがあるかも。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">splitCVS</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
  <span class="n">a</span> <span class="o">=</span> <span class="p">[]</span>
  <span class="n">b</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">)</span>
  <span class="k">while</span> <span class="n">b</span><span class="p">:</span>
    <span class="n">c</span> <span class="o">=</span> <span class="n">b</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
    <span class="k">while</span> <span class="n">c</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&#39;&quot;&#39;</span><span class="p">)</span> <span class="ow">and</span> <span class="n">c</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s">&#39;&quot;&#39;</span><span class="p">)</span> <span class="o">%</span> <span class="mi">2</span><span class="p">:</span>
      <span class="n">c</span> <span class="o">+=</span> <span class="n">b</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">c</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&#39;&quot;&#39;</span><span class="p">)</span> <span class="ow">and</span> <span class="n">c</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">&#39;&quot;&#39;</span><span class="p">):</span>
      <span class="n">c</span> <span class="o">=</span> <span class="n">c</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;&quot;&quot;&#39;</span><span class="p">,</span> <span class="s">&#39;&quot;&#39;</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">c</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">&#39;&quot;&#39;</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="ow">or</span> <span class="n">c</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
      <span class="k">raise</span> <span class="s">&#39;invalid&#39;</span>
    <span class="n">a</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
  <span class="k">return</span> <span class="n">a</span>

<span class="n">l</span> <span class="o">=</span> <span class="n">splitCVS</span><span class="p">(</span><span class="s">&#39;&quot;abc&quot;,&quot;b</span><span class="se">\n</span><span class="s">bb&quot;,&quot;cc,c&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">s</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">l</span><span class="p">)),</span> <span class="n">l</span><span class="p">):</span>
  <span class="k">print</span> <span class="s">&#39;</span><span class="si">%2d</span><span class="s"> = </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">s</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1531/addtag/" class="addtag" id="addtag_1531">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1531/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1531/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1531"
  >-</span><span
  class="button yellow"
  id="rating_z_1531"
  >0</span><span 
  class="button green"
  id="rating_p_1531"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1531/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1531/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1535">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1535/">#1535</a>(<script language="JavaScript">print_time(new Date("2007/07/28 08:57 GMT"));</script><noscript>2007/07/28 08:57 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  "a,b",のように、エントリにコンマを含む場合に正しく動かない気がしますが、6行目のあたりはうまいやりかたですね。そうか、仕様通りのcsvならこれでいいのか・・・
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1535/addtag/" class="addtag" id="addtag_1535">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1535"
  >-</span><span
  class="button yellow"
  id="rating_z_1535"
  >0</span><span 
  class="button green"
  id="rating_p_1535"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1531/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1535/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1535/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment1536">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/130/" target="_top">rucker</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1536/">#1536</a>(<script language="JavaScript">print_time(new Date("2007/07/28 09:03 GMT"));</script><noscript>2007/07/28 09:03 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  一旦','で分割してしまってから'"'が奇数個含まれるフィールドに偶数になるまで後ろのフィールドを繋ぎ直す様な感じでやってみた。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">splitcsv</span><span class="p">(</span><span class="nv">$line</span><span class="p">){</span>
  <span class="nv">$r</span><span class="o">=</span><span class="k">array</span><span class="p">();</span>
  <span class="nv">$a</span><span class="o">=</span><span class="nf">explode</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">,</span><span class="nv">$line</span><span class="p">);</span>
  <span class="k">while</span><span class="p">(</span><span class="k">list</span><span class="p">(,</span><span class="nv">$v</span><span class="p">)</span><span class="o">=</span><span class="nf">each</span><span class="p">(</span><span class="nv">$a</span><span class="p">))</span>
  <span class="p">{</span> <span class="k">if</span><span class="p">(</span><span class="nf">strpos</span><span class="p">(</span><span class="nv">$v</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)</span><span class="o">!==</span><span class="k">false</span><span class="p">)</span>
    <span class="p">{</span> <span class="k">while</span><span class="p">(</span><span class="nf">substr_count</span><span class="p">(</span><span class="nv">$v</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)</span><span class="o">&amp;</span><span class="m">1</span><span class="p">)</span>
      <span class="p">{</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="k">list</span><span class="p">(,</span><span class="nv">$v1</span><span class="p">)</span><span class="o">=</span><span class="nf">each</span><span class="p">(</span><span class="nv">$a</span><span class="p">)))</span>
          <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
        <span class="nv">$v</span><span class="o">.=</span><span class="s1">&#39;,&#39;</span><span class="o">.</span><span class="nv">$v1</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="nf">ereg</span><span class="p">(</span><span class="s1">&#39;&quot;(.*)&quot;&#39;</span><span class="p">,</span><span class="nv">$v</span><span class="p">,</span><span class="nv">$regs</span><span class="p">);</span>
      <span class="nv">$v</span><span class="o">=</span><span class="nf">str_replace</span><span class="p">(</span><span class="s1">&#39;&quot;&quot;&#39;</span><span class="p">,</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="nv">$regs</span><span class="p">[</span><span class="m">1</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="nv">$v</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nv">$r</span><span class="p">;</span>
<span class="p">}</span>

<span class="nv">$line</span><span class="o">=</span><span class="s1">&#39;&quot;aaa&quot;,&quot;b</span>
<span class="s1">bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&#39;</span><span class="p">;</span>

<span class="nf">print_r</span><span class="p">(</span><span class="nx">splitcsv</span><span class="p">(</span><span class="nv">$line</span><span class="p">));</span>
<span class="cp">?&gt;</span><span class="x"></span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1536/addtag/" class="addtag" id="addtag_1536">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1536/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1536/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1536"
  >-</span><span
  class="button yellow"
  id="rating_z_1536"
  >0</span><span 
  class="button green"
  id="rating_p_1536"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1536/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1538">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/212/" target="_top">odz</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1538/">#1538</a>(<script language="JavaScript">print_time(new Date("2007/07/28 11:15 GMT"));</script><noscript>2007/07/28 11:15 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Parsec の出番！UnitTest 付きで。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Text</span><span class="o">.</span><span class="n">ParserCombinators</span><span class="o">.</span><span class="n">Parsec</span>
<span class="kr">import</span> <span class="n">Test</span><span class="o">.</span><span class="n">HUnit</span>

<span class="nv">line</span> <span class="o">::</span> <span class="n">Parser</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
<span class="nv">line</span> <span class="o">=</span> <span class="kr">do</span> <span class="nv">columns</span> <span class="o">&lt;-</span> <span class="nv">sepBy1</span> <span class="nv">column</span> <span class="nv">comma</span>
          <span class="nv">optional</span> <span class="p">(</span><span class="nv">char</span> <span class="sc">&#39;\n&#39;</span><span class="p">)</span>
          <span class="nv">return</span> <span class="nv">columns</span>

<span class="nv">column</span> <span class="o">::</span> <span class="n">Parser</span> <span class="n">String</span>
<span class="nv">column</span> <span class="o">=</span> <span class="kr">do</span> <span class="nv">b</span> <span class="o">&lt;-</span> <span class="nv">char</span> <span class="sc">&#39;&quot;&#39;</span>
            <span class="nv">c</span> <span class="o">&lt;-</span> <span class="nv">many</span> <span class="p">((</span><span class="nv">satisfy</span> <span class="p">(</span><span class="o">/=</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">))</span> <span class="o">&lt;|&gt;</span> <span class="nv">try</span> <span class="nv">escapedQuote</span><span class="p">)</span>
            <span class="nv">d</span> <span class="o">&lt;-</span> <span class="nv">char</span> <span class="sc">&#39;&quot;&#39;</span>
            <span class="nv">return</span> <span class="nv">c</span>
         <span class="o">&lt;|&gt;</span>
         <span class="nv">many1</span> <span class="p">(</span><span class="nv">noneOf</span> <span class="p">[</span><span class="sc">&#39;,&#39;</span><span class="p">,</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">,</span> <span class="sc">&#39;\n&#39;</span><span class="p">])</span>
         <span class="o">&lt;?&gt;</span> <span class="s">&quot;escapedQuote&quot;</span>

<span class="nv">escapedQuote</span> <span class="o">::</span> <span class="n">Parser</span> <span class="n">Char</span>
<span class="nv">escapedQuote</span> <span class="o">=</span> <span class="kr">do</span> <span class="nv">string</span> <span class="s">&quot;\&quot;</span><span class="o">\</span><span class="s">&quot;&quot;</span> <span class="o">&lt;?&gt;</span> <span class="s">&quot;escapedQuote&quot;</span>
                  <span class="nv">return</span> <span class="sc">&#39;&quot;&#39;</span>

<span class="nv">comma</span> <span class="o">::</span> <span class="n">Parser</span> <span class="p">()</span>
<span class="nv">comma</span> <span class="o">=</span> <span class="nv">skipMany1</span> <span class="p">(</span><span class="nv">char</span> <span class="sc">&#39;,&#39;</span> <span class="o">&lt;?&gt;</span> <span class="s">&quot;comma&quot;</span><span class="p">)</span>

<span class="nv">splitCSV</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
<span class="nv">splitCSV</span> <span class="nv">s</span> <span class="o">=</span> <span class="kr">case</span> <span class="p">(</span><span class="nv">parse</span> <span class="nv">line</span> <span class="s">&quot;&quot;</span> <span class="nv">s</span><span class="p">)</span> <span class="kr">of</span>
             <span class="n">Left</span> <span class="nv">err</span> <span class="o">-&gt;</span> <span class="nv">error</span> <span class="p">(</span><span class="s">&quot;parse error at &quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">show</span> <span class="nv">err</span><span class="p">))</span>
             <span class="n">Right</span> <span class="nv">x</span> <span class="o">-&gt;</span> <span class="nv">x</span>

<span class="nv">testData</span> <span class="o">::</span> <span class="p">[</span><span class="n">Test</span><span class="p">]</span>
<span class="nv">testData</span> <span class="o">=</span> <span class="p">[</span>
            <span class="p">[</span><span class="s">&quot;abc&quot;</span><span class="p">,</span> <span class="s">&quot;def&quot;</span><span class="p">]</span> <span class="o">~=?</span> <span class="nv">splitCSV</span> <span class="s">&quot;abc,def\n&quot;</span><span class="p">,</span>
            <span class="p">[</span><span class="s">&quot;abc&quot;</span><span class="p">,</span> <span class="s">&quot;def&quot;</span><span class="p">]</span> <span class="o">~=?</span> <span class="nv">splitCSV</span> <span class="s">&quot;\&quot;</span><span class="nv">abc</span><span class="o">\</span><span class="s">&quot;,def&quot;</span><span class="p">,</span>
            <span class="p">[</span><span class="s">&quot;a,bc&quot;</span><span class="p">,</span> <span class="s">&quot;def&quot;</span><span class="p">]</span> <span class="o">~=?</span> <span class="nv">splitCSV</span> <span class="s">&quot;\&quot;</span><span class="nv">a</span><span class="p">,</span><span class="nv">bc</span><span class="o">\</span><span class="s">&quot;,\&quot;</span><span class="nv">def</span><span class="o">\</span><span class="s">&quot;\n&quot;</span><span class="p">,</span>
            <span class="p">[</span><span class="s">&quot;abc&quot;</span><span class="p">,</span> <span class="s">&quot;b\nbb&quot;</span><span class="p">,</span> <span class="s">&quot;ccc&quot;</span><span class="p">,</span> <span class="s">&quot;zzz&quot;</span><span class="p">,</span> <span class="s">&quot;y\&quot;</span><span class="n">Y</span><span class="o">\</span><span class="s">&quot;y&quot;</span><span class="p">,</span> <span class="s">&quot;xxx&quot;</span><span class="p">]</span> <span class="o">~=?</span> <span class="nv">splitCSV</span> <span class="s">&quot;\&quot;</span><span class="nv">abc</span><span class="o">\</span><span class="s">&quot;,\&quot;</span><span class="nv">b</span><span class="o">\</span><span class="nv">nbb</span><span class="o">\</span><span class="s">&quot;,\&quot;</span><span class="nv">ccc</span><span class="o">\</span><span class="s">&quot;,zzz,\&quot;</span><span class="nv">y</span><span class="o">\</span><span class="s">&quot;\&quot;</span><span class="n">Y</span><span class="o">\</span><span class="s">&quot;\&quot;</span><span class="nv">y</span><span class="o">\</span><span class="s">&quot;,xxx\n&quot;</span>
           <span class="p">]</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="n">Counts</span>
<span class="nv">main</span> <span class="o">=</span> <span class="nv">runTestTT</span> <span class="p">(</span><span class="nv">test</span> <span class="nv">testData</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1538/addtag/" class="addtag" id="addtag_1538">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1538/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1538/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1538"
  >-</span><span
  class="button yellow"
  id="rating_z_1538"
  >0</span><span 
  class="button green"
  id="rating_p_1538"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1538/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1538/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1540">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/212/" target="_top">odz</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1540/">#1540</a>(<script language="JavaScript">print_time(new Date("2007/07/28 11:26 GMT"));</script><noscript>2007/07/28 11:26 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  あ、カラム番号とともに出力するところまでが課題なのね。

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Text</span><span class="o">.</span><span class="n">ParserCombinators</span><span class="o">.</span><span class="n">Parsec</span>
<span class="kr">import</span> <span class="n">Test</span><span class="o">.</span><span class="n">HUnit</span>

<span class="nv">line</span> <span class="o">::</span> <span class="n">Parser</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
<span class="nv">line</span> <span class="o">=</span> <span class="kr">do</span> <span class="nv">columns</span> <span class="o">&lt;-</span> <span class="nv">sepBy1</span> <span class="nv">column</span> <span class="nv">comma</span>
          <span class="nv">optional</span> <span class="p">(</span><span class="nv">char</span> <span class="sc">&#39;\n&#39;</span><span class="p">)</span>
          <span class="nv">return</span> <span class="nv">columns</span>

<span class="nv">column</span> <span class="o">::</span> <span class="n">Parser</span> <span class="n">String</span>
<span class="nv">column</span> <span class="o">=</span> <span class="kr">do</span> <span class="nv">b</span> <span class="o">&lt;-</span> <span class="nv">char</span> <span class="sc">&#39;&quot;&#39;</span>
            <span class="nv">c</span> <span class="o">&lt;-</span> <span class="nv">many</span> <span class="p">((</span><span class="nv">satisfy</span> <span class="p">(</span><span class="o">/=</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">))</span> <span class="o">&lt;|&gt;</span> <span class="nv">try</span> <span class="nv">escapedQuote</span><span class="p">)</span>
            <span class="nv">d</span> <span class="o">&lt;-</span> <span class="nv">char</span> <span class="sc">&#39;&quot;&#39;</span>
            <span class="nv">return</span> <span class="nv">c</span>
         <span class="o">&lt;|&gt;</span>
         <span class="nv">many1</span> <span class="p">(</span><span class="nv">noneOf</span> <span class="p">[</span><span class="sc">&#39;,&#39;</span><span class="p">,</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">,</span> <span class="sc">&#39;\n&#39;</span><span class="p">])</span>
         <span class="o">&lt;?&gt;</span> <span class="s">&quot;escapedQuote&quot;</span>

<span class="nv">escapedQuote</span> <span class="o">::</span> <span class="n">Parser</span> <span class="n">Char</span>
<span class="nv">escapedQuote</span> <span class="o">=</span> <span class="kr">do</span> <span class="nv">string</span> <span class="s">&quot;\&quot;</span><span class="o">\</span><span class="s">&quot;&quot;</span> <span class="o">&lt;?&gt;</span> <span class="s">&quot;escapedQuote&quot;</span>
                  <span class="nv">return</span> <span class="sc">&#39;&quot;&#39;</span>

<span class="nv">comma</span> <span class="o">::</span> <span class="n">Parser</span> <span class="p">()</span>
<span class="nv">comma</span> <span class="o">=</span> <span class="nv">skipMany1</span> <span class="p">(</span><span class="nv">char</span> <span class="sc">&#39;,&#39;</span> <span class="o">&lt;?&gt;</span> <span class="s">&quot;comma&quot;</span><span class="p">)</span>

<span class="nv">splitCSV</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
<span class="nv">splitCSV</span> <span class="nv">s</span> <span class="o">=</span> <span class="kr">case</span> <span class="p">(</span><span class="nv">parse</span> <span class="nv">line</span> <span class="s">&quot;&quot;</span> <span class="nv">s</span><span class="p">)</span> <span class="kr">of</span>
             <span class="n">Left</span> <span class="nv">err</span> <span class="o">-&gt;</span> <span class="nv">error</span> <span class="p">(</span><span class="s">&quot;parse error at &quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">show</span> <span class="nv">err</span><span class="p">))</span>
             <span class="n">Right</span> <span class="nv">x</span> <span class="o">-&gt;</span> <span class="nv">x</span>

<span class="nv">testData</span> <span class="o">::</span> <span class="p">[</span><span class="n">Test</span><span class="p">]</span>
<span class="nv">testData</span> <span class="o">=</span> <span class="p">[</span>
            <span class="p">[</span><span class="s">&quot;abc&quot;</span><span class="p">,</span> <span class="s">&quot;def&quot;</span><span class="p">]</span> <span class="o">~=?</span> <span class="nv">splitCSV</span> <span class="s">&quot;abc,def\n&quot;</span><span class="p">,</span>
            <span class="p">[</span><span class="s">&quot;abc&quot;</span><span class="p">,</span> <span class="s">&quot;def&quot;</span><span class="p">]</span> <span class="o">~=?</span> <span class="nv">splitCSV</span> <span class="s">&quot;\&quot;</span><span class="nv">abc</span><span class="o">\</span><span class="s">&quot;,def&quot;</span><span class="p">,</span>
            <span class="p">[</span><span class="s">&quot;a,bc&quot;</span><span class="p">,</span> <span class="s">&quot;def&quot;</span><span class="p">]</span> <span class="o">~=?</span> <span class="nv">splitCSV</span> <span class="s">&quot;\&quot;</span><span class="nv">a</span><span class="p">,</span><span class="nv">bc</span><span class="o">\</span><span class="s">&quot;,\&quot;</span><span class="nv">def</span><span class="o">\</span><span class="s">&quot;\n&quot;</span><span class="p">,</span>
            <span class="p">[</span><span class="s">&quot;abc&quot;</span><span class="p">,</span> <span class="s">&quot;b\nbb&quot;</span><span class="p">,</span> <span class="s">&quot;ccc&quot;</span><span class="p">,</span> <span class="s">&quot;zzz&quot;</span><span class="p">,</span> <span class="s">&quot;y\&quot;</span><span class="n">Y</span><span class="o">\</span><span class="s">&quot;y&quot;</span><span class="p">,</span> <span class="s">&quot;xxx&quot;</span><span class="p">]</span> <span class="o">~=?</span> <span class="nv">splitCSV</span> <span class="s">&quot;\&quot;</span><span class="nv">abc</span><span class="o">\</span><span class="s">&quot;,\&quot;</span><span class="nv">b</span><span class="o">\</span><span class="nv">nbb</span><span class="o">\</span><span class="s">&quot;,\&quot;</span><span class="nv">ccc</span><span class="o">\</span><span class="s">&quot;,zzz,\&quot;</span><span class="nv">y</span><span class="o">\</span><span class="s">&quot;\&quot;</span><span class="n">Y</span><span class="o">\</span><span class="s">&quot;\&quot;</span><span class="nv">y</span><span class="o">\</span><span class="s">&quot;,xxx\n&quot;</span>
           <span class="p">]</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span> <span class="nv">cs</span> <span class="o">&lt;-</span> <span class="nv">getContents</span>
          <span class="nv">mapM_</span> <span class="nv">output</span> <span class="p">(</span><span class="nv">zip</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="p">]</span> <span class="o">$</span> <span class="nv">splitCSV</span> <span class="nv">cs</span><span class="p">)</span>
  <span class="kr">where</span> <span class="nv">output</span> <span class="p">(</span><span class="nv">n</span><span class="p">,</span> <span class="nv">col</span><span class="p">)</span> <span class="o">=</span> <span class="nv">putStrLn</span> <span class="o">$</span> <span class="p">(</span><span class="nv">show</span> <span class="nv">n</span><span class="p">)</span> <span class="o">++</span> <span class="s">&quot; =&gt; &quot;</span> <span class="o">++</span> <span class="nv">col</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1540/addtag/" class="addtag" id="addtag_1540">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1540/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1540/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1540"
  >-</span><span
  class="button yellow"
  id="rating_z_1540"
  >0</span><span 
  class="button green"
  id="rating_p_1540"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1538/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1540/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1540/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1540/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1541">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1541/">#1541</a>(<script language="JavaScript">print_time(new Date("2007/07/28 11:39 GMT"));</script><noscript>2007/07/28 11:39 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ああ、私は出力を忘れてました。

ところでcolumnの区切りをskipMany1 (char ',') としてしまうと、
空のcolumnを含む次のようなデータで困りませんか。

"a,,b\n"
=&gt; should be ["a", "", "b"]
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1541/addtag/" class="addtag" id="addtag_1541">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1541"
  >-</span><span
  class="button yellow"
  id="rating_z_1541"
  >0</span><span 
  class="button green"
  id="rating_p_1541"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1540/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1541/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1541/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1541/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1543">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/212/" target="_top">odz</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1543/">#1543</a>(<script language="JavaScript">print_time(new Date("2007/07/28 14:55 GMT"));</script><noscript>2007/07/28 14:55 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  おっしゃる通りですね。
というかなんで、skipMany1 にしたんだろ。try に気づかず、試行錯誤した傷跡かな。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1543/addtag/" class="addtag" id="addtag_1543">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1543"
  >-</span><span
  class="button yellow"
  id="rating_z_1543"
  >0</span><span 
  class="button green"
  id="rating_p_1543"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1541/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1543/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1543/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


    </div>
  


  

  

  

  
    





<div class="comment" id="comment1542">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1542/">#1542</a>(<script language="JavaScript">print_time(new Date("2007/07/28 12:06 GMT"));</script><noscript>2007/07/28 12:06 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  無理矢理、正規表現でやってみました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.regex.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">Pattern</span> <span class="n">spliter</span> <span class="o">=</span> 
        <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">&quot;((\&quot;[^\&quot;]*+\&quot;)+|[^,]*+),?&quot;</span><span class="o">);</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">Pattern</span> <span class="n">doubleQuote</span> <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="s">&quot;\&quot;\&quot;&quot;</span><span class="o">);</span>

    <span class="k">public</span> <span class="k">static</span> <span class="n">String</span><span class="o">[]</span> <span class="n">splitCSV</span><span class="o">(</span><span class="n">String</span> <span class="n">rec</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Matcher</span> <span class="n">m</span> <span class="o">=</span> <span class="n">spliter</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">rec</span><span class="o">);</span>
        <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">cols</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">find</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">String</span> <span class="n">col</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">col</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">col</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;\&quot;&quot;</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">col</span> <span class="o">=</span> <span class="n">col</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">col</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="n">col</span> <span class="o">=</span> <span class="n">doubleQuote</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">col</span><span class="o">).</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;\&quot;&quot;</span><span class="o">);</span>
                <span class="n">cols</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">col</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">end</span><span class="o">()</span> <span class="o">&gt;=</span> <span class="n">rec</span><span class="o">.</span><span class="na">length</span><span class="o">())</span>
                <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">cols</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">cols</span><span class="o">.</span><span class="na">size</span><span class="o">()]);</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="k">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">sample</span> <span class="o">=</span> <span class="s">&quot;\&quot;aaa\&quot;,\&quot;b\nbb\&quot;,\&quot;ccc\&quot;,zzz,\&quot;y\&quot;\&quot;Y\&quot;\&quot;y\&quot;,xxx&quot;</span><span class="o">;</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">cols</span> <span class="o">=</span> <span class="n">splitCSV</span><span class="o">(</span><span class="n">sample</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">cols</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%d =&gt; %s%n&quot;</span><span class="o">,</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">cols</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1542/addtag/" class="addtag" id="addtag_1542">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1542/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1542/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1542"
  >-</span><span
  class="button yellow"
  id="rating_z_1542"
  >0</span><span 
  class="button green"
  id="rating_p_1542"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1542/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment1544">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1544/">#1544</a>(<script language="JavaScript">print_time(new Date("2007/07/28 16:39 GMT"));</script><noscript>2007/07/28 16:39 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Squeak Smalltalk で。

手近に CSV 解析器が見あたらなかったので、よく似た作業をする
Smalltalk 処理系の字句解析器のインスタンスをハックして
なんちゃって CSV 解析器(^_^;)を仕立ててみました。

具体的には、カンマをデリミタに、スペースを通常の文字に、
CR を閉じ括弧、LF を開く括弧に見立てるよう、スキャナのテーブルを
書き換え騙して仕事をさせます。なお、ダブルクオートは Smalltalk では
コメントアウトになってしまうので、文字列リテラルを表す
シングルクオートに差し替え、解析後、ダブルクオートに戻しています。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>| scanner typeTable data dataFile dataString |
scanner := Scanner new.
typeTable := scanner instVarNamed: #typeTable.
typeTable := scanner instVarNamed: #typeTable put: typeTable copy.
typeTable at: $, asciiValue put: #xDelimiter.
typeTable at: $  asciiValue put: #xLetter.
typeTable at: Character lf asciiValue put: #leftParenthesis.
typeTable at: Character cr asciiValue put: #rightParenthesis.
dataFile := FileStream fileNamed: &#39;data.txt&#39;.
dataString := dataFile contents replaceAll: $&quot; with: $&#39;; copyWithFirst: $(.
data := scanner scanTokens: dataString.
World findATranscript: nil.
data do: [:record |
    record doWithIndex: [:field :index |
        field replaceAll: $&#39; with: $&quot;.
        field := field copyWithout: Character lf.
        Transcript cr; show: (&#39;{1} =&gt; {2}&#39; format: {index. field})]]
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1544/addtag/" class="addtag" id="addtag_1544">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1544/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1544/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1544"
  >-</span><span
  class="button yellow"
  id="rating_z_1544"
  >0</span><span 
  class="button green"
  id="rating_p_1544"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1544/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1545">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/59/" target="_top">nori</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1545/">#1545</a>(<script language="JavaScript">print_time(new Date("2007/07/28 17:26 GMT"));</script><noscript>2007/07/28 17:26 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  csvをつかっても面白くないので正規表現でやってみました。

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">re</span>

<span class="n">quoted</span> <span class="o">=</span> <span class="s">r&#39;(&quot;((&quot;&quot;|[^&quot;])+)&quot;)&#39;</span>
<span class="n">naked</span> <span class="o">=</span> <span class="s">r&#39;([^,&quot;\n]+)&#39;</span>
<span class="n">enclosed</span> <span class="o">=</span> <span class="s">r&#39;(&quot;(?P&lt;enclosed&gt;&#39;</span> <span class="o">+</span> <span class="n">naked</span> <span class="o">+</span> <span class="s">r&#39;)&quot;)&#39;</span>
<span class="n">record</span> <span class="o">=</span> <span class="n">quoted</span> <span class="o">+</span> <span class="s">&#39;|&#39;</span> <span class="o">+</span> <span class="n">enclosed</span> <span class="o">+</span> <span class="s">&#39;|&#39;</span> <span class="o">+</span> <span class="n">naked</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="n">record</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">unescape</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
  <span class="k">return</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">&#39;[&quot;](?!&quot;)&#39;</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">,</span> <span class="n">s</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">t</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">finditer</span><span class="p">(</span><span class="n">s</span><span class="p">)):</span>
    <span class="k">print</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="s">&#39;=&gt;&#39;</span><span class="p">,</span> <span class="n">unescape</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">t</span><span class="o">.</span><span class="n">start</span><span class="p">():</span><span class="n">t</span><span class="o">.</span><span class="n">end</span><span class="p">()])</span>


<span class="n">parse</span><span class="p">(</span><span class="s">&#39;&#39;&#39;&quot;aaa&quot;,&quot;b</span>
<span class="s">bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&#39;&#39;&#39;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1545/addtag/" class="addtag" id="addtag_1545">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1545/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1545/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1545"
  >-</span><span
  class="button yellow"
  id="rating_z_1545"
  >0</span><span 
  class="button green"
  id="rating_p_1545"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1545/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1545/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1547">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/59/" target="_top">nori</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1547/">#1547</a>(<script language="JavaScript">print_time(new Date("2007/07/28 17:33 GMT"));</script><noscript>2007/07/28 17:33 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  あ、\nと""が混在できない・・・。orz
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1547/addtag/" class="addtag" id="addtag_1547">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1547"
  >-</span><span
  class="button yellow"
  id="rating_z_1547"
  >0</span><span 
  class="button green"
  id="rating_p_1547"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1545/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1547/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1547/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1547/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1548">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/59/" target="_top">nori</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1548/">#1548</a>(<script language="JavaScript">print_time(new Date("2007/07/28 17:34 GMT"));</script><noscript>2007/07/28 17:34 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  勘違い。寝よう。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1548/addtag/" class="addtag" id="addtag_1548">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1548"
  >-</span><span
  class="button yellow"
  id="rating_z_1548"
  >0</span><span 
  class="button green"
  id="rating_p_1548"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1547/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1548/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1548/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1548/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1549">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/59/" target="_top">nori</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1549/">#1549</a>(<script language="JavaScript">print_time(new Date("2007/07/28 23:34 GMT"));</script><noscript>2007/07/28 23:34 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  """"の処理がおかしかった。

unescapeが美しくない。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="sd">&#39;&#39;&#39;</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;aaa&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;&quot;aaa&quot;&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;&quot;a\\naa&quot;&#39;)</span>
<span class="sd">1 =&gt; a\naa</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;&quot;a&quot;&quot;aa&quot;&#39;)</span>
<span class="sd">1 =&gt; a&quot;aa</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;&quot;a&quot;&quot;&quot;&quot;aa&quot;&#39;)</span>
<span class="sd">1 =&gt; a&quot;&quot;aa</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;aaa,bbb&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">2 =&gt; bbb</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;aaa, bbb&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">2 =&gt;  bbb</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;aaa,&quot;b\\nbb&quot;&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">2 =&gt; b\nbb</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;aaa,&quot;b\\n&quot;&quot;bb&quot;&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">2 =&gt; b\n&quot;bb</span>
<span class="sd">&#39;&#39;&#39;</span>
<span class="k">import</span> <span class="nn">re</span>

<span class="n">quoted</span> <span class="o">=</span> <span class="s">r&#39;(&quot;((&quot;&quot;|[^&quot;])+)&quot;)&#39;</span>
<span class="n">naked</span> <span class="o">=</span> <span class="s">r&#39;([^,&quot;\n]+)&#39;</span>
<span class="n">enclosed</span> <span class="o">=</span> <span class="s">r&#39;(&quot;(?P&lt;enclosed&gt;&#39;</span> <span class="o">+</span> <span class="n">naked</span> <span class="o">+</span> <span class="s">r&#39;)&quot;)&#39;</span>
<span class="n">record</span> <span class="o">=</span> <span class="n">quoted</span> <span class="o">+</span> <span class="s">&#39;|&#39;</span> <span class="o">+</span> <span class="n">enclosed</span> <span class="o">+</span> <span class="s">&#39;|&#39;</span> <span class="o">+</span> <span class="n">naked</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="n">record</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">unescape</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">s</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&#39;&quot;&#39;</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">&#39;&quot;&quot;&#39;</span><span class="p">,</span> <span class="s">r&#39;&quot;&#39;</span><span class="p">,</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">return</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">&#39;&quot;&quot;&#39;</span><span class="p">,</span> <span class="s">r&#39;&quot;&#39;</span><span class="p">,</span> <span class="n">s</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">t</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">finditer</span><span class="p">(</span><span class="n">s</span><span class="p">)):</span>
    <span class="k">print</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="s">&#39;=&gt;&#39;</span><span class="p">,</span> <span class="n">unescape</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">t</span><span class="o">.</span><span class="n">start</span><span class="p">():</span><span class="n">t</span><span class="o">.</span><span class="n">end</span><span class="p">()])</span>


<span class="n">parse</span><span class="p">(</span><span class="s">&#39;&#39;&#39;&quot;aaa&quot;,&quot;b</span>
<span class="s">b&quot;&quot;b&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&#39;&#39;&#39;</span><span class="p">)</span>

<span class="k">import</span> <span class="nn">doctest</span>
<span class="n">doctest</span><span class="o">.</span><span class="n">testmod</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1549/addtag/" class="addtag" id="addtag_1549">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1549/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1549/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1549"
  >-</span><span
  class="button yellow"
  id="rating_z_1549"
  >0</span><span 
  class="button green"
  id="rating_p_1549"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1548/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1549/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1549/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1549/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1551">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/59/" target="_top">nori</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1551/">#1551</a>(<script language="JavaScript">print_time(new Date("2007/07/28 23:58 GMT"));</script><noscript>2007/07/28 23:58 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  名前つきの正規表現を使ってみた。
get orの連続とrecordの定義が重複していて美しくない。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="sd">&#39;&#39;&#39;</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;aaa&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;&quot;aaa&quot;&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;&quot;a\\naa&quot;&#39;)</span>
<span class="sd">1 =&gt; a\naa</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;&quot;a&quot;&quot;aa&quot;&#39;)</span>
<span class="sd">1 =&gt; a&quot;aa</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;&quot;a&quot;&quot;&quot;&quot;aa&quot;&#39;)</span>
<span class="sd">1 =&gt; a&quot;&quot;aa</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;aaa,bbb&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">2 =&gt; bbb</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;aaa, bbb&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">2 =&gt;  bbb</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;aaa,&quot;b\\nbb&quot;&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">2 =&gt; b\nbb</span>
<span class="sd">&gt;&gt;&gt; parse(&#39;aaa,&quot;b\\n&quot;&quot;bb&quot;&#39;)</span>
<span class="sd">1 =&gt; aaa</span>
<span class="sd">2 =&gt; b\n&quot;bb</span>
<span class="sd">&#39;&#39;&#39;</span>
<span class="k">import</span> <span class="nn">re</span>

<span class="n">quoted</span> <span class="o">=</span> <span class="s">r&#39;(&quot;(?P&lt;quoted&gt;(&quot;&quot;|[^&quot;])+)&quot;)&#39;</span>
<span class="n">naked</span> <span class="o">=</span> <span class="s">r&#39;[^,&quot;\n]+&#39;</span>
<span class="n">enclosed</span> <span class="o">=</span> <span class="s">r&#39;(&quot;(&#39;</span> <span class="o">+</span> <span class="s">&#39;?P&lt;enclosed&gt;&#39;</span> <span class="o">+</span> <span class="n">naked</span> <span class="o">+</span> <span class="s">&#39;&#39;</span> <span class="o">+</span> <span class="s">r&#39;)&quot;)&#39;</span>
<span class="n">record</span> <span class="o">=</span> <span class="n">quoted</span> <span class="o">+</span> <span class="s">&#39;|&#39;</span> <span class="o">+</span> <span class="n">enclosed</span> <span class="o">+</span> <span class="s">&#39;|&#39;</span> <span class="o">+</span> <span class="s">&#39;(?P&lt;naked&gt;&#39;</span> <span class="o">+</span> <span class="n">naked</span> <span class="o">+</span> <span class="s">&#39;)&#39;</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="n">record</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">unescape</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
  <span class="k">return</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">&#39;&quot;&quot;&#39;</span><span class="p">,</span> <span class="s">r&#39;&quot;&#39;</span><span class="p">,</span> <span class="n">s</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">t</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">finditer</span><span class="p">(</span><span class="n">s</span><span class="p">)):</span>
    <span class="c">#print i+1, &#39;=&gt;&#39;, unescape(s[t[&quot;body&quot;].start:t[&quot;body&quot;].end])</span>
    <span class="n">d</span><span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">groupdict</span><span class="p">()</span>
    <span class="k">print</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="s">&#39;=&gt;&#39;</span><span class="p">,</span> <span class="n">unescape</span><span class="p">(</span><span class="n">d</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;naked&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="n">d</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;enclosed&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="n">d</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;quoted&#39;</span><span class="p">))</span>

<span class="n">parse</span><span class="p">(</span><span class="s">&#39;&#39;&#39;&quot;aaa&quot;,&quot;b</span>
<span class="s">b&quot;&quot;b&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&#39;&#39;&#39;</span><span class="p">)</span>

<span class="k">import</span> <span class="nn">doctest</span>
<span class="n">doctest</span><span class="o">.</span><span class="n">testmod</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1551/addtag/" class="addtag" id="addtag_1551">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1551/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1551/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1551"
  >-</span><span
  class="button yellow"
  id="rating_z_1551"
  >0</span><span 
  class="button green"
  id="rating_p_1551"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1549/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1551/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1551/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment1546">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/24/" target="_top">ココサブ</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1546/">#1546</a>(<script language="JavaScript">print_time(new Date("2007/07/28 17:29 GMT"));</script><noscript>2007/07/28 17:29 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>なんか微妙。

$ ./a.out &lt; data
のような感じで実行するのを想定しています。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>

<span class="k">enum</span> <span class="p">{</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">true</span> <span class="p">};</span>
<span class="kt">int</span> <span class="n">print_one_value</span><span class="p">();</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">c</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">ret</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">(</span><span class="nb">true</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d =&gt; &quot;</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
        <span class="n">ret</span> <span class="o">=</span> <span class="n">print_one_value</span><span class="p">();</span>
        <span class="n">puts</span><span class="p">(</span><span class="s">&quot;&quot;</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">ret</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">count</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">print_one_value</span><span class="p">(</span><span class="kt">int</span> <span class="n">count</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">c</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">quote_in</span>     <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">quote_before</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>

    <span class="n">c</span> <span class="o">=</span> <span class="n">getchar</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">quote_in</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="p">{</span>
        <span class="n">putchar</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">while</span> <span class="p">((</span><span class="n">c</span> <span class="o">=</span> <span class="n">getchar</span><span class="p">())</span> <span class="o">!=</span> <span class="n">EOF</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span>      <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;,&#39;</span><span class="p">)</span>               <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">quote_in</span><span class="p">)</span> <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">((</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;,&#39;</span> <span class="o">||</span> <span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span> <span class="o">||</span> <span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">)</span>
         <span class="o">&amp;&amp;</span> <span class="n">quote_before</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">putchar</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
            <span class="n">quote_before</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">quote_before</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="n">putchar</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
            <span class="n">quote_before</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1546/addtag/" class="addtag" id="addtag_1546">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1546/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1546/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1546"
  >-</span><span
  class="button yellow"
  id="rating_z_1546"
  >0</span><span 
  class="button green"
  id="rating_p_1546"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1546/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1546/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1552">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1552/">#1552</a>(<script language="JavaScript">print_time(new Date("2007/07/29 00:08 GMT"));</script><noscript>2007/07/29 00:08 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  ファイル読み込み形式ですかー
結構な行になると思って、お題には含めなかったのですが、
時間があればファイル読み込み型の複数レコード対応なんていうのも
やってみるとおもしろいかもしれませんね。
このときは改行処理が結構めんどくさいことになります(笑

CSVデータ読み込み方法を見てみたいだけでしたけど
たいていの言語でライブラリあるみたいだし
あとでお題投稿してみます～^^；
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1552/addtag/" class="addtag" id="addtag_1552">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1552"
  >-</span><span
  class="button yellow"
  id="rating_z_1552"
  >0</span><span 
  class="button green"
  id="rating_p_1552"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1546/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1552/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1552/">
    2
    replies
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1552/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1572">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/155/" target="_top">nkmrtks</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1572/">#1572</a>(<script language="JavaScript">print_time(new Date("2007/07/30 02:13 GMT"));</script><noscript>2007/07/30 02:13 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>やっちゃった＞＜

相互呼び出しの再帰で実装してみた。
これって、10 =&gt; まで出るのが正しいんだよね？

[sample.csv]
"aaa","b
bb","ccc",zzz,"y""Y""y",xxx,"eee,EEE",,,

(splitCSV "sample.csv")
1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; ccc
4 =&gt; zzz
5 =&gt; y"Y"y
6 =&gt; xxx
7 =&gt; eee,EEE
8 =&gt; 
9 =&gt; 
10 =&gt; 
t
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre>(defun splitCSV (csv-file)
  (labels
      ((in-esc (csv header col)
         (let ((it (read-char csv nil)))
           (case it
             ((#\&quot;) (let ((it (read-char csv nil)))
                      (case it
                        (#\&quot; (princ it) (in-esc csv nil col))
                        (#\, (princ #\newline) (out-esc csv t (1+ col))))))
             ((nil) nil)
             (t (princ it) (in-esc csv nil col)))))
       (out-esc (csv header col)
         (let ((it (read-char csv nil)))
           (and header it (format t &quot;~D =&gt; &quot; col))
           (case it
             ((#\&quot;) (in-esc csv nil col))
             ((#\newline) (princ it) (out-esc csv t 1))
             ((#\,) (princ #\newline) (out-esc csv t (1+ col)))
             ((nil) t)
             (t (princ it) (out-esc csv nil col))))))
    (with-open-file (csv csv-file)
      (out-esc csv t 1))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1572/addtag/" class="addtag" id="addtag_1572">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1572/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1572/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1572"
  >-</span><span
  class="button yellow"
  id="rating_z_1572"
  >0</span><span 
  class="button green"
  id="rating_p_1572"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1552/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1572/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1572/">
    2
    replies
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1572/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1594">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/155/" target="_top">nkmrtks</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1594/">#1594</a>(<script language="JavaScript">print_time(new Date("2007/07/30 13:08 GMT"));</script><noscript>2007/07/30 13:08 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  あ、ちなみにコレは複数レコードに対応してます。（１７行目がソレ）
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1594/addtag/" class="addtag" id="addtag_1594">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1594"
  >-</span><span
  class="button yellow"
  id="rating_z_1594"
  >0</span><span 
  class="button green"
  id="rating_p_1594"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1572/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1594/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1594/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1616">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/155/" target="_top">nkmrtks</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1616/">#1616</a>(<script language="JavaScript">print_time(new Date("2007/07/31 05:22 GMT"));</script><noscript>2007/07/31 05:22 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>題意に沿うバージョンと、ファイルから読み込むバージョンとに分けてみた。
＃終端処理が微妙なことに気づいたので微妙に修正…</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="highlight"><pre>(defun splitCSV (csv-stream)
  (labels
      ((in-esc (csv header col)
         (let ((it (read-char csv nil)))
           (case it
             ((#\&quot;) (let ((it (read-char csv nil)))
                      (case it
                        (#\&quot; (princ it) (in-esc csv nil col))
                        (#\, (princ #\newline) (out-esc csv t (1+ col))))))
             ((nil) nil)
             (t (princ it) (in-esc csv nil col)))))
       (out-esc (csv header col)
         (let ((it (read-char csv nil)))
           (and header (or (&gt; col 1) it) (format t &quot;~D =&gt; &quot; col))
           (case it
             ((#\&quot;) (in-esc csv nil col))
             ((#\newline) (princ it) (out-esc csv t 1))
             ((#\,) (princ #\newline) (out-esc csv t (1+ col)))
             ((nil) t)
             (t (princ it) (out-esc csv nil col))))))
    (and (streamp csv-stream)
         (out-esc csv-stream t 1))))

(defun splitCSV-from-file (csv-file)
  (with-open-file (stream csv-file)
    (splitCSV stream)))

(defun splitCSV-from-string (csv-string)
  (with-input-from-string (stream csv-string)
    (splitCSV stream)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1616/addtag/" class="addtag" id="addtag_1616">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1616/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1616/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1616"
  >-</span><span
  class="button yellow"
  id="rating_z_1616"
  >0</span><span 
  class="button green"
  id="rating_p_1616"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1572/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1616/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1616/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1589">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/24/" target="_top">ココサブ</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1589/">#1589</a>(<script language="JavaScript">print_time(new Date("2007/07/30 10:58 GMT"));</script><noscript>2007/07/30 10:58 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ファイルからの読み込みまでやってみました。
あと、CSVデータを列データに別ける部分がおかしかったので修正しています。("の中の'\n'と','の取り扱い方)

実行結果
% cat data.txt
"aaa","b
bb","ccc",zzz,"y""Y""y",xxx,"eee,EEE",,,
dddd,eee
% ./a.out data.txt
1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; ccc
4 =&gt; zzz
5 =&gt; y"Y"y
6 =&gt; xxx
7 =&gt; eee,EEE
8 =&gt;
9 =&gt;
10 =&gt;
1 =&gt; dddd
2 =&gt; eee
1 =&gt;
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>

<span class="k">enum</span> <span class="p">{</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">true</span><span class="p">,</span> <span class="n">eof</span> <span class="p">};</span>
<span class="kt">int</span> <span class="n">print_one_value</span><span class="p">(</span><span class="n">FILE</span> <span class="o">*</span><span class="n">fp</span><span class="p">);</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span>  <span class="n">ret</span><span class="p">;</span>
    <span class="kt">int</span>  <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="n">FILE</span> <span class="o">*</span><span class="n">fp</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;usage: %s file_name</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
        <span class="k">return</span> <span class="mi">2</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">fp</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="s">&quot;r&quot;</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">fp</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;Error</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">while</span> <span class="p">(</span><span class="nb">true</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d =&gt; &quot;</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
        <span class="n">ret</span> <span class="o">=</span> <span class="n">print_one_value</span><span class="p">(</span><span class="n">fp</span><span class="p">);</span>
        <span class="n">puts</span><span class="p">(</span><span class="s">&quot;&quot;</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">ret</span> <span class="o">==</span> <span class="n">eof</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">ret</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">count</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">fclose</span><span class="p">(</span><span class="n">fp</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">print_one_value</span><span class="p">(</span><span class="n">FILE</span> <span class="o">*</span><span class="n">fp</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">c</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">quote_in</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">((</span><span class="n">c</span> <span class="o">=</span> <span class="n">fgetc</span><span class="p">(</span><span class="n">fp</span><span class="p">))</span> <span class="o">!=</span> <span class="n">EOF</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span>      <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;,&#39;</span>  <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">!</span><span class="n">quote_in</span><span class="p">))</span> <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">quote_in</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">((</span><span class="n">c</span> <span class="o">=</span> <span class="n">fgetc</span><span class="p">(</span><span class="n">fp</span><span class="p">))</span> <span class="o">!=</span> <span class="n">EOF</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span>      <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;,&#39;</span>  <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">!</span><span class="n">quote_in</span><span class="p">))</span> <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">!</span><span class="n">quote_in</span><span class="p">))</span> <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;&quot;&#39;</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">c</span> <span class="o">=</span> <span class="n">fgetc</span><span class="p">(</span><span class="n">fp</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;&quot;&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">quote_in</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">putchar</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="p">{</span>
                <span class="n">quote_in</span> <span class="o">^=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="n">ungetc</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">fp</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="n">putchar</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">eof</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1589/addtag/" class="addtag" id="addtag_1589">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1589/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1589/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1589"
  >-</span><span
  class="button yellow"
  id="rating_z_1589"
  >0</span><span 
  class="button green"
  id="rating_p_1589"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1552/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1589/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1589/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  

  

  
    





<div class="comment" id="comment1550">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1550/">#1550</a>(<script language="JavaScript">print_time(new Date("2007/07/28 23:56 GMT"));</script><noscript>2007/07/28 23:56 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  すでに何人か指摘してくれていますが、
サンプルのデータが足りなかったですねorz
テストするときには「,"eee,EEE",,,」
というのも最後に付け足してあげてください。


	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1550/addtag/" class="addtag" id="addtag_1550">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1550"
  >-</span><span
  class="button yellow"
  id="rating_z_1550"
  >0</span><span 
  class="button green"
  id="rating_p_1550"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1550/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  

  

  

  
    





<div class="comment" id="comment1581">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1581/">#1581</a>(<script language="JavaScript">print_time(new Date("2007/07/30 08:52 GMT"));</script><noscript>2007/07/30 08:52 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  JavaScriptでの投稿が無いようなので。ちょっと修正すれば複数レコードのパーズも対応できるはず。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">unquote</span><span class="p">(</span><span class="nx">val</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span><span class="nx">val</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="nx">val</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="o">,</span> <span class="nx">val</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&quot;&quot;/g</span><span class="o">,</span> <span class="s1">&#39;&quot;&#39;</span><span class="p">)</span>
                                 <span class="o">:</span> <span class="nx">val</span><span class="o">;</span>
<span class="p">}</span>
<span class="k">function</span> <span class="nx">splitCsv</span><span class="p">(</span><span class="nx">csv</span><span class="p">)</span> <span class="p">{</span>
  <span class="c">// カラム分離用パターン</span>
  <span class="c">//   グループ1⇒ 行頭 or カンマ or 改行</span>
  <span class="c">//   グループ2⇒ 空文字列 or 非quoted文字列 or quoted文字列</span>
  <span class="c">//     非quoted文字列⇒ 改行, カンマ, &quot; を含まない1文字 +</span>
  <span class="c">//                     改行, カンマを含まない文字を0文字以上</span>
  <span class="c">//     quoted文字列⇒ &quot; + ( &quot;&quot; or &quot; 以外の1文字 ) を0回以上 + &quot;</span>
  <span class="c">//   (?=,|\\r?\\n|$)⇒ 次に カンマ, 改行, 行末が続くこと(幅0肯定先読み)</span>
  <span class="k">var</span> <span class="nx">reg</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s1">&#39;(^|,|\\r?\\n)(|[^&quot;\\r\\n,][^\\r\\n,]*|(?:&quot;(?:&quot;&quot;|[^&quot;])*&quot;))(?=,|\\r?\\n|$)&#39;</span><span class="o">,</span> <span class="s1">&#39;g&#39;</span><span class="p">);</span>

  <span class="k">var</span> <span class="nx">ary</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="k">var</span> <span class="nx">match</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
  <span class="k">while</span><span class="p">(</span><span class="nx">match</span> <span class="o">=</span> <span class="nx">reg</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">csv</span><span class="p">))</span> <span class="p">{</span>
    <span class="nx">ary</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">unquote</span><span class="p">(</span><span class="nx">match</span><span class="p">[</span><span class="mi">2</span><span class="p">]));</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">ary</span><span class="o">;</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nx">printCsv</span><span class="p">(</span><span class="nx">input</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">var</span> <span class="nx">values</span> <span class="o">=</span> <span class="nx">splitCsv</span><span class="p">(</span><span class="nx">input</span><span class="p">);</span>
  <span class="k">var</span> <span class="nx">ary</span> <span class="o">=</span> <span class="p">[];</span>

  <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">values</span><span class="p">.</span><span class="nx">length</span><span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">ary</span><span class="p">.</span><span class="nx">push</span><span class="p">((</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39; =&gt; &#39;</span> <span class="o">+</span> <span class="nx">values</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
  <span class="p">}</span>
  <span class="nx">alert</span><span class="p">(</span><span class="nx">ary</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">));</span>
<span class="p">}</span>

<span class="nx">printCsv</span><span class="p">(</span><span class="s1">&#39;&quot;aaa&quot;,&quot;b\n\</span>
<span class="s1">bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&#39;</span><span class="p">);</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1581/addtag/" class="addtag" id="addtag_1581">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1581/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1581/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1581"
  >-</span><span
  class="button yellow"
  id="rating_z_1581"
  >0</span><span 
  class="button green"
  id="rating_p_1581"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1581/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1585">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1585/">#1585</a>(<script language="JavaScript">print_time(new Date("2007/07/30 10:26 GMT"));</script><noscript>2007/07/30 10:26 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #bfffbf;">4/4=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Scala 2.6.0-RC1でscala.util.parsing.combinatorパッケージが標準ライブラリになりました。

ということでScalaでパーサコンビネータ。ほとんど資料がないので手探りですが。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre>import scala.util.parsing.combinator.{Parsers, ImplicitConversions, ~, mkTilde}
import scala.util.parsing.input.CharArrayReader
import Character.isISOControl

object CSVParser {
 trait Base
 case class Field(s:String) extends Base {
   override def toString = s
 }
 case class Record(fields: List[Field]) extends Base
 case class File(records :List[Record]) extends Base

 def mkString(cs :List[Any]) = cs.mkString(&quot;&quot;)
 class CSVParser extends Parsers {
   type Elem = Char
   def notMeta(c:Elem) = c!=&#39;,&#39; &amp;&amp; c!=&#39;\n&#39; &amp;&amp; c!=&#39;&quot;&#39; &amp;&amp; !isISOControl(c)

   lazy val file   = record.*(&#39;\n&#39;) ^^ File
   lazy val record = (field|quotedField|nullableField).*(&#39;,&#39;) ^^ Record
   lazy val field = chars.+ ^^ {cs =&gt; Field(mkString(cs))}
   lazy val nullableField = chars.* ^^ {cs =&gt; Field(&quot;&quot;)}
   lazy val quotedField = &#39;&quot;&#39; ~ (charsInQuote|quoteInQuote).* ~ &#39;&quot;&#39; ^^ {cs =&gt; Field(mkString(cs))}
   lazy val charsInQuote = elem(&quot;chars in field&quot;, _!=&#39;&quot;&#39;)
   lazy val quoteInQuote = repN(2, quote) ^^ {cs =&gt; &#39;&quot;&#39;}
   lazy val quote  = &#39;&quot;&#39; ^^ success
   lazy val chars  = elem(&quot;chars&quot;, notMeta)
 }
}

val data = &quot;&quot;&quot;
&quot;aaa&quot;,&quot;b
bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx
&quot;&quot;&quot;.trim

(new CSVParser.CSVParser).file(new
CharArrayReader(data.toCharArray)).map(file =&gt; {
 file.records.map({record =&gt;
   val fields = record.fields
   (1 to fields.length).foreach(i =&gt; println(i +&quot; =&gt; &quot; + fields(i-1)))
 })
})
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1585/addtag/" class="addtag" id="addtag_1585">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1585/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1585/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #bfffbf;"
  >4/4=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1585"
  >-</span><span
  class="button yellow"
  id="rating_z_1585"
  >0</span><span 
  class="button green"
  id="rating_p_1585"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1585/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  

  

  
    





<div class="comment" id="comment1646">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/77/" target="_top">iakio</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1646/">#1646</a>(<script language="JavaScript">print_time(new Date("2007/08/01 07:01 GMT"));</script><noscript>2007/08/01 07:01 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  あまり自信ありませんが、flexです。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="o">%</span><span class="n">option</span> <span class="n">main</span>
<span class="o">%</span><span class="n">x</span> <span class="n">q</span>
<span class="o">%</span><span class="p">{</span>
<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="kt">void</span> <span class="nf">p</span><span class="p">(</span><span class="kt">char</span> <span class="n">c</span><span class="p">)</span>
<span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">start</span><span class="p">)</span> <span class="p">{</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d =&gt; &quot;</span><span class="p">,</span> <span class="n">i</span><span class="o">++</span><span class="p">);</span> <span class="p">}</span>
        <span class="n">putchar</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
<span class="p">}</span>
<span class="o">%</span><span class="p">}</span>
<span class="o">%%</span>
<span class="o">&lt;</span><span class="n">INITIAL</span><span class="o">&gt;</span><span class="err">\</span><span class="s">&quot;     { BEGIN(q); }</span>
<span class="o">&lt;</span><span class="n">INITIAL</span><span class="o">&gt;</span><span class="p">,</span>      <span class="p">{</span> <span class="n">p</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">);</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
<span class="o">&lt;</span><span class="n">INITIAL</span><span class="o">&gt;</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span>   <span class="p">{</span> <span class="n">p</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">);</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
<span class="o">&lt;</span><span class="n">q</span><span class="o">&gt;</span><span class="err">\</span><span class="s">&quot;</span><span class="se">\&quot;</span><span class="s">         { p(&#39;</span><span class="se">\&quot;</span><span class="s">&#39;); }</span>
<span class="o">&lt;</span><span class="n">q</span><span class="o">&gt;</span><span class="err">\</span><span class="s">&quot;           { BEGIN(INITIAL); }</span>
<span class="o">&lt;*&gt;</span><span class="p">.</span><span class="o">|</span><span class="err">\</span><span class="n">n</span>         <span class="p">{</span> <span class="n">p</span><span class="p">(</span><span class="o">*</span><span class="n">yytext</span><span class="p">);</span> <span class="p">}</span>

<span class="o">%%</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1646/addtag/" class="addtag" id="addtag_1646">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/flex/">flex</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1646/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1646/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1646"
  >-</span><span
  class="button yellow"
  id="rating_z_1646"
  >0</span><span 
  class="button green"
  id="rating_p_1646"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1646/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment1685">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1685/">#1685</a>(<script language="JavaScript">print_time(new Date("2007/08/02 06:00 GMT"));</script><noscript>2007/08/02 06:00 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>手抜き版。相互再帰lexer</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre><span class="nv">main</span> <span class="o">=</span> <span class="nv">putStr</span> 
     <span class="o">.</span> <span class="nv">unlines</span>
     <span class="o">.</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">uncurry</span> <span class="o">$</span> <span class="nv">flip</span> <span class="p">((</span><span class="o">.</span><span class="p">)</span> <span class="o">.</span> <span class="p">(</span><span class="o">++</span><span class="p">)</span> <span class="o">.</span> <span class="nv">show</span><span class="p">)</span> <span class="p">(</span><span class="s">&quot; =&gt; &quot;</span><span class="o">++</span><span class="p">))</span>
     <span class="o">.</span> <span class="nv">zip</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="p">]</span>
     <span class="o">.</span> <span class="nv">splitCSV</span> <span class="o">=&lt;&lt;</span> <span class="nv">getContents</span>

<span class="nv">splitCSV</span> <span class="o">=</span> <span class="nv">lex0</span> <span class="p">[]</span> <span class="s">&quot;&quot;</span>

<span class="nv">lex0</span> <span class="nv">cs</span> <span class="nv">c</span> <span class="s">&quot;&quot;</span> <span class="o">=</span> <span class="nv">reverse</span> <span class="p">(</span><span class="nv">c</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span>
<span class="nv">lex0</span> <span class="nv">cs</span> <span class="nv">c</span> <span class="p">(</span><span class="sc">&#39;&quot;&#39;</span> <span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">lex1</span> <span class="nv">cs</span> <span class="nv">c</span> <span class="nv">xs</span>
<span class="nv">lex0</span> <span class="nv">cs</span> <span class="nv">c</span> <span class="p">(</span><span class="sc">&#39;,&#39;</span> <span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">lex0</span> <span class="p">(</span><span class="nv">reverse</span> <span class="nv">c</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="s">&quot;&quot;</span> <span class="nv">xs</span>
<span class="nv">lex0</span> <span class="nv">cs</span> <span class="nv">c</span> <span class="p">(</span><span class="nv">x</span>   <span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">lex0</span> <span class="nv">cs</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">c</span><span class="p">)</span> <span class="nv">xs</span>
<span class="nv">lex1</span> <span class="nv">cs</span> <span class="nv">c</span> <span class="p">(</span><span class="sc">&#39;&quot;&#39;</span><span class="o">:</span><span class="sc">&#39;,&#39;</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">lex0</span> <span class="p">(</span><span class="nv">reverse</span> <span class="nv">c</span><span class="o">:</span><span class="nv">cs</span><span class="p">)</span> <span class="s">&quot;&quot;</span> <span class="nv">xs</span>
<span class="nv">lex1</span> <span class="nv">cs</span> <span class="nv">c</span> <span class="p">(</span><span class="sc">&#39;&quot;&#39;</span><span class="o">:</span><span class="sc">&#39;&quot;&#39;</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">lex1</span> <span class="nv">cs</span> <span class="p">(</span><span class="sc">&#39;&quot;&#39;</span><span class="o">:</span><span class="nv">c</span><span class="p">)</span> <span class="nv">xs</span>
<span class="nv">lex1</span> <span class="nv">cs</span> <span class="nv">c</span> <span class="p">(</span><span class="nv">x</span>      <span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">lex1</span> <span class="nv">cs</span> <span class="p">(</span><span class="nv">x</span>  <span class="o">:</span><span class="nv">c</span><span class="p">)</span> <span class="nv">xs</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1685/addtag/" class="addtag" id="addtag_1685">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1685/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1685/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1685"
  >-</span><span
  class="button yellow"
  id="rating_z_1685"
  >0</span><span 
  class="button green"
  id="rating_p_1685"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1685/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment1725">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/323/" target="_top">tomatsu</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1725/">#1725</a>(<script language="JavaScript">print_time(new Date("2007/08/02 12:48 GMT"));</script><noscript>2007/08/02 12:48 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/pnuts/">
	  Pnuts
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>別途csvモジュールが必要。

http://pnuts.org/extensions/csv/</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre>use(&quot;csv&quot;)
for (columns: readCSV(&quot;csv.txt&quot;)){
   i=0
   for(c:columns) println(++i, &quot; =&gt; &quot;, c)
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1725/addtag/" class="addtag" id="addtag_1725">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/pnuts/">
		Pnuts
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1725/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1725/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1725"
  >-</span><span
  class="button yellow"
  id="rating_z_1725"
  >0</span><span 
  class="button green"
  id="rating_p_1725"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1725/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1911">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/348/" target="_top">naoya_t</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1911/">#1911</a>(<script language="JavaScript">print_time(new Date("2007/08/06 04:52 GMT"));</script><noscript>2007/08/06 04:52 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/awk/">
	  awk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>% cat test.csv
"aaa","b
bb","ccc",zzz,"y""Y""y",xxx
"aaa","""","ccc",zzz,"y""Y""y",xxx,"u,v"
% awk -f csv.awk test.csv
1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; ccc
4 =&gt; zzz
5 =&gt; y"Y"y
6 =&gt; xxx

1 =&gt; aaa
2 =&gt; "
3 =&gt; ccc
4 =&gt; zzz
5 =&gt; y"Y"y
6 =&gt; xxx
7 =&gt; u,v
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></td><td class="code"><div class="highlight"><pre>BEGIN {
	s = &quot;&quot; # バッファ
	r = 0 # フィールド番号
	t = 2 # バッファのどこから &quot; を探すか（覚えておくため）
}

{
	s = s $0
	while (s !‾ /^$/) {

		if (s ‾ /^&quot;/) {	# &quot;で始まる
			
			if (match(substr(s,t), /&quot;/)) {
				if (substr(s,t+RSTART-1) ‾ /^&quot;&quot;/) { # 次が&quot;ならスキップしたい
					t += RSTART + 1 ; continue
				}
				# 閉じる&quot;を検出.
			} else {
				# 閉じる&quot;がなければ１行追加
				getline nextline
				s = s &quot;¥n&quot; nextline
				continue
			}
			
			# &quot;で囲まれた部分 (&quot;&quot; が含まれている場合がある)
			s0 = substr(s,2,t+RSTART-3)
			gsub(/&quot;&quot;/,&quot;¥&quot;&quot;, s0)
			printf(&quot;%d =&gt; %s¥n&quot;, ++r, s0)
			s = substr(s, t+RSTART)

			t = 2 # 戻しておく

			if (s ‾ /^,/) {
				s = substr(s,2)
			} else if (s ‾ /^$/) {
				printf(&quot;¥n&quot;)
				r = 0
				s = &quot;&quot;
			}
		} else {
			if (match(s, /,/)) {
				printf(&quot;%d =&gt; %s¥n&quot;, ++r, substr(s,1,RSTART-1))
				s = substr(s,RSTART+1)
			} else {
				printf(&quot;%d =&gt; %s¥n&quot;, ++r, s)
				s = &quot;&quot;
			}
		}
	}

	r = 0
	printf &quot;¥n&quot;
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1911/addtag/" class="addtag" id="addtag_1911">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/awk/">
		awk
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1911/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1911/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1911"
  >-</span><span
  class="button yellow"
  id="rating_z_1911"
  >0</span><span 
  class="button green"
  id="rating_p_1911"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1911/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1911/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1934">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1934/">#1934</a>(<script language="JavaScript">print_time(new Date("2007/08/06 12:04 GMT"));</script><noscript>2007/08/06 12:04 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>awkなら手元でも確認できるのでやってみました。
最後の列がNULLの場合(カンマ終端)にちょっと足りないみたいです。
# ccc,  とか

L：43が原因なのはわかるんですけど
どうするのが一番かっこいいんだろう(笑
直すだけならL：42の次にifを足せば良いだけみたいだけど。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1934/addtag/" class="addtag" id="addtag_1934">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1934"
  >-</span><span
  class="button yellow"
  id="rating_z_1934"
  >0</span><span 
  class="button green"
  id="rating_p_1934"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1911/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1934/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090422125357/http://ja.doukaku.org/comment/1934/">
    1
    reply
  </a>

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1934/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2195">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/348/" target="_top">naoya_t</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/2195/">#2195</a>(<script language="JavaScript">print_time(new Date("2007/08/15 05:13 GMT"));</script><noscript>2007/08/15 05:13 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>コメント頂いていることに気づかずすみません。
確かに、これでは行末がカンマだと42行目で s が空文字列になって、
9行目で while ループを抜けてしまうので空フィールドが出力されませんね。
34行目も同様です。

while ループをそのままにするのであれば
34行目と43行目の後に、s が空なら空フィールドを出力するように
  if (s ~ /^$/) printf("%d =&gt; %s\n", ++r, "")
のような１行を加えれば良さそうです。
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/2195/addtag/" class="addtag" id="addtag_2195">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2195"
  >-</span><span
  class="button yellow"
  id="rating_z_2195"
  >0</span><span 
  class="button green"
  id="rating_p_2195"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/1934/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090422125357/http://ja.doukaku.org/comment/2195/root/"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/2195/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  
    





<div class="comment" id="comment1959">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/91/" target="_top">yooskeh</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1959/">#1959</a>(<script language="JavaScript">print_time(new Date("2007/08/07 03:37 GMT"));</script><noscript>2007/08/07 03:37 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/prolog/">
	  Prolog
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>PrologでDCG使って書いてみました。

?- print_record('"aaa","b\nbb","ccc",zzz,"y""Y""y",xxx').
1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; ccc
4 =&gt; zzz
5 =&gt; y"Y"y
6 =&gt; xxx
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre>csv([R|Rs]) --&gt; record(R), &quot;\n&quot;, csv(Rs), !.
csv([R])    --&gt; record(R), !.
csv([])     --&gt; [].

record([D|Ds]) --&gt; field(D), &quot;,&quot;, record(Ds), !.
record([D])    --&gt; field(D), !.
record([])     --&gt; [].

field(D) --&gt; &quot;\&quot;&quot;, quoted(D), &quot;\&quot;&quot; ; naked(D).

naked([C|Cs]) --&gt; [C], { \+ member(C, &quot;\&quot;,\n&quot;) }, naked(Cs), !.
naked([])     --&gt; [].

quoted([0&#39;&quot;|Cs]) --&gt; &quot;\&quot;\&quot;&quot;, quoted(Cs), !.
quoted([C|Cs])   --&gt; [C], { C \==  0&#39;&quot; }, quoted(Cs), !.
quoted([])       --&gt; [].

print_record(Atom) :-
	name(Atom, CSV),
	phrase(csv([Record]), CSV),
	forall(nth1(N, Record, Data), writef(&#39;%w =&gt; %s\n&#39;, [N, Data])).
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/1959/addtag/" class="addtag" id="addtag_1959">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/SWI-Prolog/">SWI-Prolog</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/prolog/">
		Prolog
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1959/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/1959/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1959"
  >-</span><span
  class="button yellow"
  id="rating_z_1959"
  >0</span><span 
  class="button green"
  id="rating_p_1959"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/1959/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment2159">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/382/" target="_top">miyamuko</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/2159/">#2159</a>(<script language="JavaScript">print_time(new Date("2007/08/14 12:45 GMT"));</script><noscript>2007/08/14 12:45 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/xtal/">
	  xtal
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>汚いなぁ。。。
fiber 便利。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88</pre></td><td class="code"><div class="highlight"><pre>Iterator::with_peek: method fiber {
    prev, curr: null, null;
    noloop: true;
    this {|next|
        if (curr) {
            yield prev, curr, next;
        }
        prev, curr = curr, next;
        noloop = false;
    }
    if (!noloop) {
        yield prev, curr, null;
    }
}

CSVParser: class {
    - _iter;
    - _finish;

    initialize: method(string) {
        _iter = string.split(&quot;&quot;).each.with_peek;
        _finish = false;
    }

    flush: method(field) {
        r: field.join(&quot;&quot;);
        field.clear();
        return r;
    }

    line_parser: method fiber {
        in_quote: false;
        field: [];
        _iter {|prev,it,next|
            if (in_quote) {
                if (it == &quot;\&quot;&quot;) {
                    if (prev == &quot;\&quot;&quot;) {
                        // ignore
                    } else if (next == &quot;\&quot;&quot;) {
                        field.push_back(it);
                    } else {
                        in_quote = false;
                    }
                } else {
                    field.push_back(it);
                }
            } else {
                if (field.empty() &amp;&amp; it == &quot;\&quot;&quot;) {
                    in_quote = true;
                } else if (it == &quot;\n&quot;) {
                    yield flush(field);
                    break;
                } else if (it == &quot;,&quot;) {
                    yield flush(field);
                } else {
                    field.push_back(it);
                }
            }
        } nobreak {
            _finish = true;
        }
        if (!field.empty()) {
            yield flush(field);
        }
    }

    parse: method fiber {
        while (!_finish) {
            yield line_parser();
        }
    }
}


parser: CSVParser(
    [%!&quot;aaa&quot;,&quot;b\nbb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx!,
     %!a,b,c,d!,
     %!a,b,c,!,
     %!a!,
     %!!,
     ].join(&quot;\n&quot;));

format: %f[%(line)d:%(col)d: %(cell)s];
parser.parse.with_index {|lineno,line|
    line.with_index {|colno,it|
        format(line: lineno, col: colno, cell: it).p;
    }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/2159/addtag/" class="addtag" id="addtag_2159">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/xtal0.9.7/">xtal0.9.7</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/xtal/">
		xtal
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/2159/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/2159/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2159"
  >-</span><span
  class="button yellow"
  id="rating_z_2159"
  >0</span><span 
  class="button green"
  id="rating_p_2159"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/2159/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment2282">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/393/" target="_top">lkr</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/2282/">#2282</a>(<script language="JavaScript">print_time(new Date("2007/08/17 13:36 GMT"));</script><noscript>2007/08/17 13:36 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>あえて自力でやってみました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">parse_csv</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
	<span class="n">records</span> <span class="o">=</span> <span class="o">[]</span>
	<span class="n">columns</span> <span class="o">=</span> <span class="o">[]</span>
	<span class="n">buffer</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
	<span class="n">in_quote</span> <span class="o">=</span> <span class="kp">false</span>

	<span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
	<span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">d</span><span class="o">.</span><span class="n">size</span>
		<span class="k">if</span> <span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="sc">?&quot;</span>
			<span class="k">if</span> <span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span> <span class="o">!=</span> <span class="sc">?&quot;</span>
				<span class="n">in_quote</span> <span class="o">=</span> <span class="o">!</span><span class="n">in_quote</span>
				<span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
				<span class="k">next</span>
			<span class="k">else</span>
				<span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
			<span class="k">end</span>
		<span class="k">end</span>
		
		<span class="k">unless</span> <span class="n">in_quote</span>
			<span class="k">if</span> <span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="sc">?,</span> <span class="o">||</span> <span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="sc">?\n</span>
				<span class="n">columns</span> <span class="o">&lt;&lt;</span> <span class="n">buffer</span>
				<span class="n">buffer</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>

				<span class="k">if</span> <span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="sc">?\n</span>
					<span class="n">records</span> <span class="o">&lt;&lt;</span> <span class="n">columns</span>
					<span class="n">columns</span> <span class="o">=</span> <span class="o">[]</span>
				<span class="k">end</span>
				<span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
				<span class="k">next</span>
			<span class="k">end</span>
		<span class="k">end</span>

		<span class="n">buffer</span> <span class="o">+=</span> <span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">chr</span>
		<span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
	<span class="k">end</span>

	<span class="n">records</span>
<span class="k">end</span>

<span class="n">data</span><span class="o">=&lt;&lt;</span><span class="no">EOT</span>
<span class="sh">&quot;aaa&quot;,&quot;b</span>
<span class="sh">bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx</span>
<span class="no">EOT</span>

<span class="n">records</span><span class="o">=</span><span class="n">parse_csv</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="n">records</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">each_with_index</span><span class="p">{</span> <span class="o">|</span><span class="n">r</span><span class="p">,</span><span class="n">index</span><span class="o">|</span>
	<span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">index</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s2"> =&gt; </span><span class="si">#{</span><span class="n">r</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/2282/addtag/" class="addtag" id="addtag_2282">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/ruby/">ruby</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/2282/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/2282/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2282"
  >-</span><span
  class="button yellow"
  id="rating_z_2282"
  >0</span><span 
  class="button green"
  id="rating_p_2282"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/2282/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment2296">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/2296/">#2296</a>(<script language="JavaScript">print_time(new Date("2007/08/18 04:04 GMT"));</script><noscript>2007/08/18 04:04 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>昔書いたコードってホントよくわからないものですね(笑
サンプル出力するとうまく出るのでちゃんと機能しているはず^^；；

"aaa","b
bb","ccc","",zzz,"y""Y""y","xx,x",,,

1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; ccc
4 =&gt;
5 =&gt; zzz
6 =&gt; y"Y"y
7 =&gt; xx,x
8 =&gt;
9 =&gt;
10 =&gt;
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre><span class="k">sub </span><span class="nf">splitCSV</span><span class="p">($@)</span>
<span class="p">{</span>
    <span class="k">my</span> <span class="nv">$work</span> <span class="o">=</span> <span class="nb">shift</span> <span class="o">||</span> <span class="s">&#39;&#39;</span><span class="p">;</span> <span class="c1"># CSV形式の１レコードの文字列</span>
    <span class="k">my</span> <span class="nv">$sepCHAR</span> <span class="o">=</span> <span class="nb">shift</span> <span class="o">||</span> <span class="s">&#39;,&#39;</span><span class="p">;</span>     <span class="c1"># 区切り文字 </span>
    <span class="k">my</span> <span class="nv">$quoteCHAR</span> <span class="o">=</span> <span class="nb">shift</span> <span class="o">||</span> <span class="s">&#39;&quot;&#39;</span><span class="p">;</span>   <span class="c1"># 引用符</span>
    <span class="k">return</span> <span class="mi">0</span> <span class="k">if</span><span class="p">(</span> <span class="nv">$work</span> <span class="ow">eq</span> <span class="s">&#39;&#39;</span> <span class="p">);</span>

    <span class="nv">$work</span> <span class="o">.=</span> <span class="nv">$sepCHAR</span><span class="p">;</span> <span class="c1"># レコードの最後に , を追加</span>
    <span class="c1"># とりあえず列の取り出し;</span>
    <span class="k">my</span> <span class="nv">@result</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$work</span> <span class="o">=~</span> <span class="sr">m/((?:$quoteCHAR$quoteCHAR|$quoteCHAR.*?[^$quoteCHAR]$quoteCHAR)[ \t]*|(?:.*?))$sepCHAR/sg</span><span class="p">);</span>
    <span class="c1">######################</span>
    <span class="c1"># レコードのデータに</span>
    <span class="c1"># 引用符 が含まれていた場合</span>
    <span class="c1"># 引用符 を はずして 引用符二個で一つに変換する</span>
    <span class="k">if</span><span class="p">(</span> <span class="nv">$work</span> <span class="o">=~</span> <span class="sr">m/$quoteCHAR/</span> <span class="p">){</span>
        <span class="k">my</span> <span class="nv">$count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">foreach</span> <span class="nv">$work</span> <span class="p">(</span> <span class="nv">@result</span> <span class="p">){</span>
            <span class="c1">#######################</span>
            <span class="c1"># 取り出した列の整形</span>
            <span class="c1"># &quot;&quot;のみはデータ無しで空白に置換</span>
            <span class="nv">$work</span> <span class="o">=</span> <span class="s">&#39;&#39;</span> <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$work</span><span class="p">)</span> <span class="o">||</span> <span class="nv">$work</span> <span class="ow">eq</span> <span class="s">&quot;$quoteCHAR$quoteCHAR&quot;</span> <span class="p">);</span>
            <span class="nv">$work</span> <span class="o">=~</span> <span class="sr">s/$quoteCHAR(.+)$quoteCHAR/$1/s</span><span class="p">;</span>       <span class="c1"># &quot; で囲まれていた場合 &quot;を取り外す</span>
            <span class="nv">$work</span> <span class="o">=~</span> <span class="sr">s/$quoteCHAR$quoteCHAR/$quoteCHAR/g</span><span class="p">;</span>   <span class="c1"># &quot;&quot; は &quot; に変換</span>
            <span class="nv">$result</span><span class="p">[</span> <span class="nv">$count</span> <span class="o">++</span> <span class="p">]</span> <span class="o">=</span> <span class="nv">$work</span><span class="p">;</span>                   <span class="c1"># 変換後の結果で更新</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nv">@result</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">my</span> <span class="nv">@field</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$record</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="n">CSV</span><span class="p">;</span>
<span class="s">&quot;aaa&quot;</span><span class="p">,</span><span class="s">&quot;b</span>
<span class="s">bb&quot;</span><span class="p">,</span><span class="s">&quot;ccc&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="n">zzz</span><span class="p">,</span><span class="s">&quot;y&quot;&quot;Y&quot;&quot;y&quot;</span><span class="p">,</span><span class="s">&quot;xx,x&quot;</span><span class="p">,,,</span>
<span class="n">CSV</span>

<span class="k">print</span> <span class="s">&quot;$record\n&quot;</span><span class="p">;</span>
<span class="nv">@field</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">splitCSV</span><span class="p">(</span><span class="nv">$record</span><span class="p">);</span>
<span class="k">for</span><span class="p">(</span> <span class="k">my</span> <span class="nv">$n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nv">$n</span><span class="o">&lt;=</span><span class="nv">$#field</span><span class="p">;</span> <span class="nv">$n</span> <span class="o">++</span><span class="p">)</span>
<span class="p">{</span>
	<span class="k">print</span> <span class="s">&quot;$n =&gt; $field[$n]\n&quot;</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/2296/addtag/" class="addtag" id="addtag_2296">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/2296/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/2296/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2296"
  >-</span><span
  class="button yellow"
  id="rating_z_2296"
  >0</span><span 
  class="button green"
  id="rating_p_2296"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/2296/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment4201">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/514/" target="_top">ocaml-nagoya</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/4201/">#4201</a>(<script language="JavaScript">print_time(new Date("2007/11/18 11:00 GMT"));</script><noscript>2007/11/18 11:00 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  自前パースの戦略です。
OCamlではこの手のパースはストリームパーサを利用すると少しだけ楽かもしれません。

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76</pre></td><td class="code"><div class="highlight"><pre><span class="c">(* strの中にcharはあるか? *)</span>
<span class="kr">let</span> <span class="n">mem_string</span> <span class="n">char</span> <span class="n">str</span> <span class="k">=</span>
  <span class="kr">try</span>
    <span class="kr">let</span> <span class="k">_</span> <span class="k">=</span> 
      <span class="n">String</span><span class="k">.</span><span class="n">index</span> <span class="n">str</span> <span class="n">char</span> 
    <span class="kr">in</span> 
    <span class="kr">true</span>
  <span class="kr">with</span>
    <span class="n">Not_found</span> <span class="k">-&gt;</span> 
      <span class="kr">false</span>

<span class="c">(* 一文字バッファに貯めて次へ *)</span>    
<span class="kr">let</span> <span class="n">next</span> <span class="n">buf</span> <span class="n">strm</span> <span class="n">loop</span> <span class="k">=</span> 
  <span class="kr">match</span> <span class="n">Stream</span><span class="k">.</span><span class="n">peek</span> <span class="n">strm</span> <span class="kr">with</span>
    <span class="n">Some</span> <span class="n">c</span> <span class="k">-&gt;</span>
      <span class="n">Buffer</span><span class="k">.</span><span class="n">add_char</span> <span class="n">buf</span> <span class="k">(</span><span class="n">Stream</span><span class="k">.</span><span class="n">next</span> <span class="n">strm</span><span class="k">);</span>
      <span class="n">loop</span> <span class="n">strm</span>
  <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span>
      <span class="kr">if</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">length</span> <span class="n">buf</span> <span class="k">&gt;</span> <span class="mi">0</span> <span class="kr">then</span> 
        <span class="n">Buffer</span><span class="k">.</span><span class="n">contents</span> <span class="n">buf</span>
      <span class="kr">else</span> 
        <span class="n">raise</span> <span class="n">Stream</span><span class="k">.</span><span class="n">Failure</span>

<span class="c">(* 区切り文字が出るまでバッファに文字を貯めていく *)</span>      
<span class="kr">let</span> <span class="kr">rec</span> <span class="n">until_sep</span> <span class="k">?(</span><span class="n">buf</span> <span class="k">=</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">create</span> <span class="mi">80</span><span class="k">)</span> <span class="n">strm</span> <span class="k">=</span>
  <span class="kr">match</span> <span class="n">Stream</span><span class="k">.</span><span class="n">peek</span> <span class="n">strm</span> <span class="kr">with</span>
    <span class="n">Some</span> <span class="n">c</span> <span class="kr">when</span> <span class="n">mem_string</span> <span class="n">c</span> <span class="s2">&quot;,</span><span class="se">\r\n</span><span class="s2">&quot;</span> <span class="k">-&gt;</span> 
      <span class="n">Buffer</span><span class="k">.</span><span class="n">contents</span> <span class="n">buf</span>
  <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span>
      <span class="n">next</span> <span class="n">buf</span> <span class="n">strm</span> <span class="k">(</span><span class="n">until_sep</span> <span class="k">~</span><span class="n">buf</span><span class="k">)</span>

<span class="c">(* 括り文字が出るまでバッファに文字を貯めていく *)</span>
<span class="kr">let</span> <span class="kr">rec</span> <span class="n">until_quote</span> <span class="k">?(</span><span class="n">buf</span> <span class="k">=</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">create</span> <span class="mi">80</span><span class="k">)</span> <span class="n">strm</span> <span class="k">=</span>
  <span class="kr">match</span> <span class="n">Stream</span><span class="k">.</span><span class="n">peek</span> <span class="n">strm</span> <span class="kr">with</span>
    <span class="n">Some</span> <span class="n">c</span> <span class="kr">when</span> <span class="n">c</span> <span class="k">=</span> <span class="sc">&#39;&quot;&#39;</span> <span class="k">-&gt;</span> <span class="kr">begin</span>
      <span class="kr">match</span> <span class="n">Stream</span><span class="k">.</span><span class="n">npeek</span> <span class="mi">2</span> <span class="n">strm</span> <span class="kr">with</span>
        <span class="sc">&#39;&quot;&#39;</span> <span class="k">::</span> <span class="sc">&#39;&quot;&#39;</span> <span class="k">::</span> <span class="k">[]</span> <span class="k">-&gt;</span>
          <span class="n">Buffer</span><span class="k">.</span><span class="n">add_char</span> <span class="n">buf</span> <span class="k">(</span><span class="n">Stream</span><span class="k">.</span><span class="n">next</span> <span class="n">strm</span><span class="k">);</span>
          <span class="n">Stream</span><span class="k">.</span><span class="n">junk</span> <span class="n">strm</span><span class="k">;</span>
          <span class="n">until_quote</span> <span class="k">~</span><span class="n">buf</span> <span class="n">strm</span>
      <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span>
          <span class="n">Buffer</span><span class="k">.</span><span class="n">contents</span> <span class="n">buf</span>
    <span class="kr">end</span>
  <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span>
      <span class="n">next</span> <span class="n">buf</span> <span class="n">strm</span> <span class="k">(</span><span class="n">until_quote</span> <span class="k">~</span><span class="n">buf</span><span class="k">)</span>

<span class="c">(* 一つのフィールドを認識。括られている奴と括られていない奴 *)</span>
<span class="kr">let</span> <span class="n">parse_field</span> <span class="k">=</span> <span class="n">parser</span>
    <span class="k">[&lt;</span> <span class="k">&#39;</span><span class="n">fq</span> <span class="kr">when</span> <span class="n">fq</span> <span class="k">=</span> <span class="sc">&#39;&quot;&#39;</span><span class="k">;</span> <span class="n">field</span> <span class="k">=</span> <span class="n">until_quote</span><span class="k">;</span> <span class="k">&#39;</span><span class="n">sq</span> <span class="kr">when</span> <span class="n">sq</span> <span class="k">=</span> <span class="sc">&#39;&quot;&#39;</span> <span class="k">&gt;]</span> <span class="k">-&gt;</span> 
      <span class="n">field</span>
  <span class="k">|</span> <span class="k">[&lt;</span> <span class="n">field</span> <span class="k">=</span> <span class="n">until_sep</span> <span class="k">&gt;]</span> <span class="k">-&gt;</span> 
      <span class="n">field</span>

<span class="c">(* フィールドを切り取りつつ表示 *)</span>    
<span class="kr">let</span> <span class="k">_</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">print_field</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">counter</span> <span class="k">=</span> 
      <span class="n">ref</span> <span class="mi">1</span> 
    <span class="kr">in</span>
    <span class="kr">fun</span> <span class="n">str</span> <span class="k">-&gt;</span>
      <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;%d =&gt; %s</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="o">!</span><span class="n">counter</span> <span class="n">str</span><span class="k">;</span>
      <span class="n">incr</span> <span class="n">counter</span>
  <span class="kr">in</span>
  <span class="kr">let</span> <span class="kr">rec</span> <span class="n">parse</span> <span class="k">=</span> <span class="n">parser</span>
      <span class="k">[&lt;</span> <span class="n">field</span> <span class="k">=</span> <span class="n">parse_field</span><span class="k">;</span> <span class="n">strm</span> <span class="k">&gt;]</span> <span class="k">-&gt;</span>
    <span class="n">print_field</span> <span class="n">field</span><span class="k">;</span>
    <span class="kr">begin</span> <span class="kr">match</span> <span class="n">strm</span> <span class="kr">with</span> <span class="n">parser</span>
          <span class="k">[&lt;</span> <span class="k">&#39;</span><span class="n">c</span> <span class="kr">when</span> <span class="n">c</span> <span class="k">=</span> <span class="sc">&#39;,&#39;</span><span class="k">;</span> <span class="n">rest</span> <span class="k">&gt;]</span> <span class="k">-&gt;</span> 
        <span class="n">parse</span> <span class="n">rest</span>
    <span class="k">|</span> <span class="k">[&lt;</span> <span class="k">&gt;]</span> <span class="k">-&gt;</span> 
        <span class="k">()</span>
        <span class="kr">end</span>
    <span class="k">|</span> <span class="k">[&lt;</span> <span class="k">&gt;]</span> <span class="k">-&gt;</span> 
    <span class="k">()</span>
  <span class="kr">in</span>
  <span class="n">parse</span> <span class="k">(</span><span class="n">Stream</span><span class="k">.</span><span class="n">of_string</span> <span class="s2">&quot;</span><span class="se">\&quot;</span><span class="s2">aaa</span><span class="se">\&quot;</span><span class="s2">,</span><span class="se">\&quot;</span><span class="s2">b</span><span class="se">\n</span><span class="s2">bb</span><span class="se">\&quot;</span><span class="s2">,</span><span class="se">\&quot;</span><span class="s2">ccc</span><span class="se">\&quot;</span><span class="s2">,zzz,</span><span class="se">\&quot;</span><span class="s2">y</span><span class="se">\&quot;\&quot;</span><span class="s2">Y</span><span class="se">\&quot;\&quot;</span><span class="s2">y</span><span class="se">\&quot;</span><span class="s2">,xxx</span><span class="se">\n</span><span class="s2">&quot;</span><span class="k">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/4201/addtag/" class="addtag" id="addtag_4201">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/4201/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/4201/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4201"
  >-</span><span
  class="button yellow"
  id="rating_z_4201"
  >0</span><span 
  class="button green"
  id="rating_p_4201"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/4201/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4219">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/4219/">#4219</a>(<script language="JavaScript">print_time(new Date("2007/11/19 04:59 GMT"));</script><noscript>2007/11/19 04:59 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Javaらしく（？）Readerクラスで処理してみました。

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.Reader</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.StringReader</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Answer33</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">&quot;\&quot;aaa\&quot;,\&quot;b\nbb\&quot;,\&quot;ccc\&quot;,zzz,\&quot;y\&quot;\&quot;Y\&quot;\&quot;y\&quot;,xxx&quot;</span><span class="o">;</span>
        <span class="n">CSVDataReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CSVDataReader</span><span class="o">(</span><span class="k">new</span> <span class="n">StringReader</span><span class="o">(</span><span class="n">str</span><span class="o">));</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">cell</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">getCellNumber</span><span class="o">();</span>
                <span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">readCell</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">s</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">cell</span> <span class="o">+</span> <span class="s">&quot; =&gt; &quot;</span> <span class="o">+</span> <span class="n">s</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="k">class</span> <span class="nc">CSVDataReader</span> <span class="k">extends</span> <span class="n">BufferedReader</span> <span class="o">{</span>
    <span class="k">private</span> <span class="kt">int</span> <span class="n">cellCount_</span><span class="o">;</span>
    
    <span class="k">public</span> <span class="n">CSVDataReader</span><span class="o">(</span><span class="n">Reader</span> <span class="n">reader</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">super</span><span class="o">(</span><span class="n">reader</span><span class="o">);</span>
        <span class="n">cellCount_</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">int</span> <span class="n">getCellNumber</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">cellCount_</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">String</span> <span class="nf">readCell</span><span class="o">()</span> <span class="k">throws</span> <span class="n">IOException</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">read</span><span class="o">();</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">c</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="n">cellCount_</span><span class="o">++;</span>

        <span class="n">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
        <span class="kt">boolean</span> <span class="n">quote</span> <span class="o">=</span> <span class="o">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;&quot;&#39;</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(!</span><span class="n">quote</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;\r&#39;</span> <span class="o">||</span> <span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span><span class="o">)</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">((</span><span class="kt">char</span><span class="o">)</span> <span class="n">c</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="nl">OUTER:</span> <span class="k">while</span> <span class="o">((</span><span class="n">c</span> <span class="o">=</span> <span class="n">read</span><span class="o">())</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">quote</span><span class="o">)</span> <span class="o">{</span>
                <span class="nl">INNER:</span> <span class="k">switch</span> <span class="o">(</span><span class="n">c</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">case</span> <span class="sc">&#39;&quot;&#39;</span><span class="o">:</span>
                    <span class="kt">int</span> <span class="n">next</span> <span class="o">=</span> <span class="n">read</span><span class="o">();</span>
                    <span class="k">switch</span> <span class="o">(</span><span class="n">next</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">case</span> <span class="sc">&#39;&quot;&#39;</span><span class="o">:</span>
                        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="sc">&#39;&quot;&#39;</span><span class="o">);</span>
                        <span class="k">break</span> <span class="n">INNER</span><span class="o">;</span>
                    <span class="k">case</span> <span class="sc">&#39;,&#39;</span><span class="o">:</span>
                        <span class="k">break</span> <span class="n">OUTER</span><span class="o">;</span>
                    <span class="k">default</span><span class="o">:</span>
                        <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="o">();</span>
                    <span class="o">}</span>
                <span class="k">default</span><span class="o">:</span>
                    <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">((</span><span class="kt">char</span><span class="o">)</span> <span class="n">c</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="k">switch</span> <span class="o">(</span><span class="n">c</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">case</span> <span class="sc">&#39;,&#39;</span><span class="o">:</span>
                <span class="k">case</span> <span class="sc">&#39;\r&#39;</span><span class="o">:</span>
                <span class="k">case</span> <span class="sc">&#39;\n&#39;</span><span class="o">:</span>
                    <span class="k">break</span> <span class="n">OUTER</span><span class="o">;</span>
                <span class="k">case</span> <span class="sc">&#39;&quot;&#39;</span><span class="o">:</span>
                    <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="o">();</span>
                <span class="k">default</span><span class="o">:</span>
                    <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">((</span><span class="kt">char</span><span class="o">)</span> <span class="n">c</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/4219/addtag/" class="addtag" id="addtag_4219">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/4219/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/4219/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4219"
  >-</span><span
  class="button yellow"
  id="rating_z_4219"
  >0</span><span 
  class="button green"
  id="rating_p_4219"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/4219/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4394">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/582/" target="_top">jijixi</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/4394/">#4394</a>(<script language="JavaScript">print_time(new Date("2007/11/25 10:13 GMT"));</script><noscript>2007/11/25 10:13 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Genlex&nbsp;という&nbsp;OCaml&nbsp;に付属の簡易字句解析モジュールを使ってみました。<br/>非常に手抜きな作りなので、サンプルは正しく出力できますが、きちんと&nbsp;CSV&nbsp;に対応はしていません。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57</pre></td><td class="code"><div class="highlight"><pre><span class="kr">open</span> <span class="n">Genlex</span>

<span class="kr">let</span> <span class="n">string_of_token</span> <span class="n">token</span> <span class="k">=</span>
   <span class="kr">match</span> <span class="n">token</span> <span class="kr">with</span>
   <span class="k">|</span> <span class="n">Ident</span>  <span class="n">s</span>
   <span class="k">|</span> <span class="n">String</span> <span class="n">s</span> <span class="k">-&gt;</span> <span class="n">s</span>
   <span class="k">|</span> <span class="n">Int</span>    <span class="n">i</span> <span class="k">-&gt;</span> <span class="n">string_of_int</span> <span class="n">i</span>
   <span class="k">|</span> <span class="n">Float</span>  <span class="n">f</span> <span class="k">-&gt;</span> <span class="n">string_of_float</span> <span class="n">f</span>
   <span class="k">|</span> <span class="n">Char</span>   <span class="n">c</span> <span class="k">-&gt;</span> <span class="n">String</span><span class="k">.</span><span class="n">make</span> <span class="mi">1</span> <span class="n">c</span>
   <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="n">failwith</span> <span class="s2">&quot;not use Kwd&quot;</span>

<span class="kr">let</span> <span class="n">columns_of_tokens</span> <span class="n">str</span> <span class="k">=</span>
   <span class="kr">let</span> <span class="n">tokens</span> <span class="k">=</span> <span class="n">Genlex</span><span class="k">.</span><span class="n">make_lexer</span> <span class="k">[</span><span class="s2">&quot;,&quot;</span><span class="k">]</span> <span class="k">(</span><span class="n">Stream</span><span class="k">.</span><span class="n">of_string</span> <span class="n">str</span><span class="k">)</span> <span class="kr">in</span>
   <span class="kr">let</span> <span class="n">peek</span> <span class="k">()</span> <span class="k">=</span> <span class="n">Stream</span><span class="k">.</span><span class="n">peek</span> <span class="n">tokens</span>
   <span class="kr">and</span> <span class="n">junk</span> <span class="k">()</span> <span class="k">=</span> <span class="n">Stream</span><span class="k">.</span><span class="n">junk</span> <span class="n">tokens</span> <span class="kr">in</span>
   <span class="kr">let</span> <span class="kr">rec</span> <span class="n">loop</span> <span class="n">acc</span> <span class="k">=</span>
      <span class="kr">match</span> <span class="n">peek</span> <span class="k">()</span> <span class="kr">with</span>
      <span class="k">|</span> <span class="n">None</span> <span class="k">-&gt;</span> <span class="n">List</span><span class="k">.</span><span class="n">rev</span> <span class="n">acc</span>
      <span class="k">|</span> <span class="n">Some</span> <span class="k">(</span><span class="n">Kwd</span> <span class="k">_)</span> <span class="k">-&gt;</span>
           <span class="n">junk</span> <span class="k">();</span>
           <span class="n">loop</span> <span class="n">acc</span>
      <span class="k">|</span> <span class="n">Some</span> <span class="n">token</span> <span class="k">-&gt;</span>
           <span class="n">junk</span> <span class="k">();</span>
           <span class="kr">let</span> <span class="n">column</span> <span class="k">=</span> <span class="n">string_of_token</span> <span class="n">token</span> <span class="kr">in</span>
           <span class="kr">let</span> <span class="kr">rec</span> <span class="n">concat</span> <span class="n">col</span> <span class="k">=</span>
              <span class="kr">match</span> <span class="n">peek</span> <span class="k">()</span> <span class="kr">with</span>
              <span class="k">|</span> <span class="n">None</span>
              <span class="k">|</span> <span class="n">Some</span> <span class="k">(</span><span class="n">Kwd</span> <span class="k">_)</span> <span class="k">-&gt;</span> <span class="n">col</span>
              <span class="k">|</span> <span class="n">Some</span> <span class="n">tok</span> <span class="k">-&gt;</span>
                   <span class="n">junk</span> <span class="k">();</span>
                   <span class="n">concat</span> <span class="k">(</span><span class="n">col</span> <span class="o">^</span> <span class="s2">&quot;</span><span class="se">\&quot;</span><span class="s2">&quot;</span> <span class="o">^</span> <span class="k">(</span><span class="n">string_of_token</span> <span class="n">tok</span><span class="k">))</span>
           <span class="kr">in</span>
           <span class="n">loop</span> <span class="k">((</span><span class="n">concat</span> <span class="n">column</span><span class="k">)</span> <span class="k">::</span> <span class="n">acc</span><span class="k">)</span>
   <span class="kr">in</span>
   <span class="n">loop</span> <span class="k">[]</span>

<span class="kr">let</span> <span class="n">parse_and_print</span> <span class="n">str</span> <span class="k">=</span>
   <span class="kr">match</span> <span class="n">columns_of_tokens</span> <span class="n">str</span> <span class="kr">with</span>
   <span class="k">|</span> <span class="k">[]</span> <span class="k">-&gt;</span> <span class="n">print_newline</span> <span class="k">()</span>
   <span class="k">|</span> <span class="n">x</span><span class="k">::</span><span class="n">xs</span> <span class="k">-&gt;</span>
        <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;1 =&gt; %s</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="n">x</span><span class="k">;</span>
        <span class="n">ignore</span> <span class="kr">begin</span>
           <span class="n">List</span><span class="k">.</span><span class="n">fold_left</span> <span class="kr">begin</span> <span class="kr">fun</span> <span class="n">index</span> <span class="n">str</span> <span class="k">-&gt;</span>
              <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;%d =&gt; %s</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="n">index</span> <span class="n">str</span><span class="k">;</span>
              <span class="n">succ</span> <span class="n">index</span>
           <span class="kr">end</span> <span class="mi">2</span> <span class="n">xs</span>
        <span class="kr">end</span>

<span class="kr">let</span> <span class="n">main</span> <span class="k">()</span> <span class="k">=</span>
   <span class="kr">let</span> <span class="n">sample</span> <span class="k">=</span>
      <span class="kr">match</span> <span class="n">Sys</span><span class="k">.</span><span class="n">argv</span> <span class="kr">with</span>
      <span class="k">|</span> <span class="k">[|_;</span> <span class="n">input</span> <span class="k">|]</span> <span class="k">-&gt;</span> <span class="n">input</span>
      <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="s2">&quot;</span><span class="se">\&quot;</span><span class="s2">aaa</span><span class="se">\&quot;</span><span class="s2">,</span><span class="se">\&quot;</span><span class="s2">b</span><span class="se">\n</span><span class="s2">bb</span><span class="se">\&quot;</span><span class="s2">,</span><span class="se">\&quot;</span><span class="s2">ccc</span><span class="se">\&quot;</span><span class="s2">,zzz,</span><span class="se">\&quot;</span><span class="s2">y</span><span class="se">\&quot;\&quot;</span><span class="s2">Y</span><span class="se">\&quot;\&quot;</span><span class="s2">y</span><span class="se">\&quot;</span><span class="s2">,xxx&quot;</span>
   <span class="kr">in</span>
   <span class="n">parse_and_print</span> <span class="n">sample</span>

<span class="kr">let</span> <span class="k">()</span> <span class="k">=</span> <span class="kr">if</span> <span class="n">not</span> <span class="o">!</span><span class="n">Sys</span><span class="k">.</span><span class="n">interactive</span> <span class="kr">then</span> <span class="n">main</span> <span class="k">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/4394/addtag/" class="addtag" id="addtag_4394">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/4394/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/4394/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4394"
  >-</span><span
  class="button yellow"
  id="rating_z_4394"
  >0</span><span 
  class="button green"
  id="rating_p_4394"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/4394/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4545">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/4545/">#4545</a>(<script language="JavaScript">print_time(new Date("2007/12/01 16:36 GMT"));</script><noscript>2007/12/01 16:36 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  PEG&nbsp;(Parsing&nbsp;expression&nbsp;grammar)&nbsp;ベースのパターンマッチ&nbsp;OOPL&nbsp;である&nbsp;OMeta&nbsp;で。<br/><br/>OMeta&nbsp;には、COLA（Combined&nbsp;Object-Lambda&nbsp;Architecture;&nbsp;aka,&nbsp;Pepsi&amp;Coke）、Squeak&nbsp;Smalltalk、JavaScript&nbsp;での実装がありますが、ここでは&nbsp;Squeak&nbsp;OMeta&nbsp;を用い、Doukaku33&nbsp;として定義しました。<br/><br/>実行例<br/>|&nbsp;in&nbsp;record&nbsp;|<br/>in&nbsp;:=&nbsp;'"aaa","b<br/>bb","ccc",zzz,"y""Y""y",xxx'.<br/>record&nbsp;:=&nbsp;(Doukaku33&nbsp;onTree:&nbsp;nil)&nbsp;apply:&nbsp;#レコード&nbsp;withArguments:&nbsp;in.<br/>World&nbsp;findATranscript:&nbsp;nil.<br/>record&nbsp;doWithIndex:&nbsp;[:field&nbsp;:idx&nbsp;|&nbsp;Transcript&nbsp;cr;&nbsp;show:&nbsp;idx;&nbsp;show:&nbsp;'&nbsp;=&gt;&nbsp;',&nbsp;field]<br/><br/>出力<br/>1&nbsp;=&gt;&nbsp;aaa<br/>2&nbsp;=&gt;&nbsp;b<br/>bb<br/>3&nbsp;=&gt;&nbsp;ccc<br/>4&nbsp;=&gt;&nbsp;zzz<br/>5&nbsp;=&gt;&nbsp;y"Y"y<br/>6&nbsp;=&gt;&nbsp;xxx
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090422125357/http://www.cs.ucla.edu/~awarth/ometa/">OMeta: an Object-Oriented Language for Pattern Matching</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre>レコード     ::= &lt;列&gt;:first ($, &lt;列&gt;)*:rest =&gt; [rest addFirst: first; yourself]
列           ::= (&lt;クオートあり&gt; | &lt;クオートなし&gt;):xs =&gt; [String withAll: xs]
クオートあり ::= $&quot; ($&quot; $&quot; =&gt; [$&quot;] | ~$&quot; &lt;char&gt;)+:xs $&quot; =&gt; [xs]
クオートなし ::= (~(&lt;改行&gt; | $, | $&quot;) &lt;char&gt;)*
改行         ::= &lt;exactly (Character cr)&gt;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/4545/addtag/" class="addtag" id="addtag_4545">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/Squeak_OMeta/">Squeak_OMeta</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/4545/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/4545/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4545"
  >-</span><span
  class="button yellow"
  id="rating_z_4545"
  >0</span><span 
  class="button green"
  id="rating_p_4545"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/4545/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5152">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/642/" target="_top">saws</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/5152/">#5152</a>(<script language="JavaScript">print_time(new Date("2008/01/03 15:37 GMT"));</script><noscript>2008/01/03 15:37 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>単にデータを加工して出力しただけです.
題意を満たしているかどうか自信がありませんが.</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="no">STR</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">EOS</span>
<span class="sh">&quot;aaa&quot;,&quot;b</span>
<span class="sh">bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx</span>
<span class="no">EOS</span>
<span class="k">def</span> <span class="nf">splitCSV</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
  <span class="n">str</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/,/</span><span class="p">)</span><span class="o">.</span>
    <span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/\A&quot;?([^&quot;](?:.|\s)+[^&quot;])&quot;?\z/</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">gsub</span><span class="p">(</span><span class="s1">&#39;&quot;&quot;&#39;</span><span class="p">,</span> <span class="s1">&#39;&quot;&#39;</span><span class="p">)}</span><span class="o">.</span>
    <span class="n">each_with_index</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span> <span class="nb">print</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s2"> =&gt; </span><span class="si">#{</span><span class="n">x</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">}</span>
<span class="k">end</span>
<span class="n">splitCSV</span><span class="p">(</span><span class="no">STR</span><span class="p">)</span>
<span class="nb">exit</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/5152/addtag/" class="addtag" id="addtag_5152">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/5152/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/5152/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5152"
  >-</span><span
  class="button yellow"
  id="rating_z_5152"
  >0</span><span 
  class="button green"
  id="rating_p_5152"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/5152/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment6179">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/467/" target="_top">aileron</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/6179/">#6179</a>(<script language="JavaScript">print_time(new Date("2008/04/17 01:38 GMT"));</script><noscript>2008/04/17 01:38 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>PHP 入出力ストリームと
fgetcsvを使って簡単にやってみた</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">csv2array</span><span class="p">(</span><span class="nv">$csv</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$fp</span> <span class="o">=</span> <span class="nf">fopen</span><span class="p">(</span><span class="s1">&#39;php://temp/maxmemory:&#39;</span><span class="o">.</span><span class="p">(</span><span class="m">5</span><span class="o">*</span><span class="m">1024</span><span class="o">*</span><span class="m">1024</span><span class="p">),</span> <span class="s1">&#39;r+&#39;</span><span class="p">);</span>
    <span class="nf">fputs</span><span class="p">(</span><span class="nv">$fp</span><span class="p">,</span> <span class="nv">$csv</span><span class="p">);</span>
    <span class="nf">rewind</span><span class="p">(</span><span class="nv">$fp</span><span class="p">);</span>
    <span class="k">return</span> <span class="nf">fgetcsv</span><span class="p">(</span><span class="nv">$fp</span><span class="p">);</span>
<span class="p">}</span>

<span class="nv">$csv</span><span class="o">=</span><span class="s1">&#39;&quot;aaa&quot;,&quot;b</span>
<span class="s1">bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx&#39;</span><span class="p">;</span>

<span class="nf">var_dump</span><span class="p">(</span><span class="nx">csv2array</span><span class="p">(</span><span class="nv">$csv</span><span class="p">));</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/6179/addtag/" class="addtag" id="addtag_6179">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/PHP5.1.0/">PHP5.1.0</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/6179/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/6179/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6179"
  >-</span><span
  class="button yellow"
  id="rating_z_6179"
  >0</span><span 
  class="button green"
  id="rating_p_6179"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/6179/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment6180">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/787/" target="_top">虹原いんく</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/6180/">#6180</a>(<script language="JavaScript">print_time(new Date("2008/04/18 11:24 GMT"));</script><noscript>2008/04/18 11:24 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>CSV解析用ステートマシンつくってみました。
(とりあえずmain()では標準入力からとるようにしていますが、適時書き換えてください。)

$ gcc main.c
$ cat &gt; csv.txt
"aaa","b
bb","ccc",zzz,"y""Y""y",xxx
"aaa","b
bb","cc
c",zzz,"y""""""y",xxx

$ ./a.out &lt; csv.txt
1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; ccc
4 =&gt; zzz
5 =&gt; y"Y"y
6 =&gt; xxx

1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; cc
c
4 =&gt; zzz
5 =&gt; y"""y
6 =&gt; xxx

</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352</pre></td><td class="code"><div class="highlight"><pre><span class="c">/*-</span>
<span class="c"> * The MIT License</span>
<span class="c"> * </span>
<span class="c"> * Copyright (c) 2008 虹原いんく</span>
<span class="c"> * </span>
<span class="c"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<span class="c"> * of this software and associated documentation files (the &quot;Software&quot;), to deal</span>
<span class="c"> * in the Software without restriction, including without limitation the rights</span>
<span class="c"> * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<span class="c"> * copies of the Software, and to permit persons to whom the Software is</span>
<span class="c"> * furnished to do so, subject to the following conditions:</span>
<span class="c"> * </span>
<span class="c"> * The above copyright notice and this permission notice shall be included in</span>
<span class="c"> * all copies or substantial portions of the Software.</span>
<span class="c"> * </span>
<span class="c"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<span class="c"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<span class="c"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<span class="c"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<span class="c"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<span class="c"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span>
<span class="c"> * THE SOFTWARE.</span>
<span class="c"> */</span>
<span class="c">/* csv.state : http://ja.doukaku.org/33/ 寄稿用 */</span>

<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>

<span class="c">/* \&lt;TAB&gt; \, を無視する。 = 1 */</span>
<span class="cp">#define ENABLE_ENTAB       0</span>
<span class="c">/* 列データに「&quot;」を含める場合「\&quot;」とする。 = 1 */</span>
<span class="cp">#define ENABLE_ENQUOT      0</span>
<span class="c">/* 列データに「&quot;」を含める場合「&quot;&quot;」とする。 = 1 */</span>
<span class="cp">#define ENABLE_QUOTQUOT    1</span>

<span class="cp">#define MODE_CSV          0x0001</span>
<span class="cp">#define MODE_TSV          0x0002</span>
<span class="cp">#define MODE_FIXROWS      0x0040</span>

<span class="cp">#define STATE_CSV_WAIT_QUOT    0</span>
<span class="cp">#define STATE_CSV_NEXT_QUOT    1</span>
<span class="cp">#define STATE_CSV_NEXT_TAB     2</span>
<span class="cp">#define STATE_CSV_DONE         3</span>
<span class="cp">#define STATE_CSV_BUFFEROVER   4</span>

<span class="k">static</span> <span class="kt">char</span> <span class="o">*</span><span class="n">_state</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">&quot;STATE_CSV_WAIT_QUOT  &quot;</span><span class="p">,</span>
    <span class="s">&quot;STATE_CSV_NEXT_QUOT  &quot;</span><span class="p">,</span>
    <span class="s">&quot;STATE_CSV_NEXT_TAB   &quot;</span><span class="p">,</span>
    <span class="s">&quot;STATE_CSV_DONE       &quot;</span><span class="p">,</span>
    <span class="s">&quot;STATE_CSV_BUFFEROVER &quot;</span><span class="p">,</span>
<span class="p">};</span>

<span class="c">/* ------------------------------------------------------------------ */</span>
<span class="k">struct</span> <span class="n">csv_work</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">state</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">mode</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">rows</span><span class="p">;</span>

    <span class="kt">char</span> <span class="o">**</span><span class="n">x</span><span class="p">;</span> <span class="c">/* テンポラリポインタ</span>
<span class="c">               - read_csv で渡したバッファを解放しない場合利用可能 */</span>

    <span class="kt">char</span> <span class="o">**</span><span class="n">node</span><span class="p">;</span> <span class="c">/* 要素 */</span>
    <span class="kt">int</span> <span class="n">node_pos</span><span class="p">;</span> <span class="c">/* 現在の要素数 */</span>
    <span class="kt">int</span> <span class="n">node_max</span><span class="p">;</span> <span class="c">/* 要素最大サイズ */</span>

<span class="p">};</span>

<span class="c">/* ------------------------------------------------------------------ */</span>
<span class="kt">void</span> <span class="nf">csv_free</span><span class="p">(</span> <span class="k">struct</span> <span class="n">csv_work</span><span class="o">*</span> <span class="n">csv</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_max</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
        <span class="k">if</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="n">free</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>

    <span class="n">free</span><span class="p">(</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">x</span> <span class="p">);</span>
    <span class="n">free</span><span class="p">(</span> <span class="n">csv</span> <span class="p">);</span>
<span class="p">}</span>

<span class="c">/* ------------------------------------------------------------------ */</span>
<span class="k">struct</span> <span class="n">csv_work</span><span class="o">*</span> <span class="nf">csv_init</span><span class="p">(</span> <span class="kt">int</span> <span class="n">node</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">x_buffsize</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">csv_work</span><span class="o">*</span> <span class="n">csv</span><span class="p">;</span>

    <span class="n">csv</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">csv_work</span><span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">csv_work</span><span class="p">)</span> <span class="p">);</span>
    
    <span class="n">csv</span><span class="o">-&gt;</span><span class="n">state</span> <span class="o">=</span> <span class="n">STATE_CSV_WAIT_QUOT</span><span class="p">;</span>
    <span class="n">csv</span><span class="o">-&gt;</span><span class="n">mode</span>  <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">csv</span><span class="o">-&gt;</span><span class="n">rows</span>  <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

    <span class="n">x_buffsize</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span> <span class="o">*</span> <span class="n">node</span><span class="p">;</span>
    <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_max</span> <span class="o">=</span> <span class="n">node</span><span class="p">;</span>
    <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span>   <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">csv</span><span class="o">-&gt;</span><span class="n">x</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span><span class="o">**</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">x_buffsize</span><span class="p">);</span>
    <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span><span class="o">**</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">x_buffsize</span><span class="p">);</span>

    <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">node</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
        <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>

    <span class="k">return</span> <span class="n">csv</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/* ------------------------------------------------------------------ */</span>
<span class="kt">void</span> <span class="nf">csv_read_cat</span><span class="p">(</span> <span class="k">struct</span> <span class="n">csv_work</span><span class="o">*</span> <span class="n">csv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">p</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">]</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
        <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">]</span> <span class="o">=</span> <span class="n">strdup</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">x</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">]);</span>

    <span class="c">/* 既にdup されている場合、前回途中で止まっている */</span>
    <span class="c">/* 前回の分と連結 */</span>
    <span class="k">else</span> <span class="p">{</span>
        <span class="kt">char</span> <span class="o">*</span><span class="n">cat</span><span class="p">;</span>

        <span class="n">cat</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">((</span> <span class="n">strlen</span><span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="o">+</span>
          <span class="n">strlen</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">])</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">char</span><span class="p">)</span> <span class="p">);</span>

        <span class="n">strcpy</span><span class="p">(</span> <span class="n">cat</span><span class="p">,</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">]</span> <span class="p">);</span>
        <span class="n">strcat</span><span class="p">(</span> <span class="n">cat</span><span class="p">,</span> <span class="n">p</span> <span class="p">);</span>
        <span class="n">free</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">]);</span>
        <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">]</span> <span class="o">=</span> <span class="n">cat</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="p">;</span>
<span class="p">}</span>

<span class="c">/* ------------------------------------------------------------------ */</span>
<span class="kt">void</span> <span class="nf">csv_read</span><span class="p">(</span> <span class="k">struct</span> <span class="n">csv_work</span><span class="o">*</span> <span class="n">csv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">buff</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">before</span><span class="p">;</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">q</span><span class="p">;</span>

    <span class="n">p</span> <span class="o">=</span> <span class="n">buff</span><span class="p">;</span>
    <span class="n">before</span> <span class="o">=</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">;</span>

    <span class="k">for</span><span class="p">(;</span><span class="o">*</span><span class="n">p</span> <span class="o">!=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;)</span> <span class="p">{</span>

<span class="c">//        printf(&quot;%s[%x](%d/%d):%s\n&quot;, _state[csv-&gt;state], csv-&gt;mode, csv-&gt;node_pos, csv-&gt;rows, p);</span>

        <span class="k">switch</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">state</span><span class="p">)</span>
        <span class="p">{</span>
        <span class="k">case</span> <span class="nl">STATE_CSV_WAIT_QUOT:</span>
            <span class="c">/* skip space */</span>
            <span class="k">for</span> <span class="p">(</span><span class="n">q</span> <span class="o">=</span> <span class="n">p</span><span class="p">;</span><span class="o">*</span><span class="n">q</span> <span class="o">!=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span><span class="n">q</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="o">*</span><span class="n">q</span> <span class="o">!=</span> <span class="sc">&#39; &#39;</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="c">/* quote? */</span>
            <span class="k">if</span> <span class="p">(</span> <span class="o">*</span><span class="n">q</span> <span class="o">!=</span> <span class="sc">&#39;\&quot;&#39;</span> <span class="p">)</span> <span class="p">{</span>
                <span class="c">/* p = space とばす前 */</span>
                <span class="c">/* カンマまたは タブを捜す*/</span>
                <span class="n">csv</span><span class="o">-&gt;</span><span class="n">state</span> <span class="o">=</span> <span class="n">STATE_CSV_NEXT_TAB</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="p">{</span>
                <span class="n">p</span> <span class="o">=</span> <span class="n">q</span><span class="p">;</span>
                <span class="c">/* &quot; &quot; 間で囲まれている */</span>
                <span class="n">p</span><span class="o">++</span><span class="p">;</span> <span class="c">/* &quot; を飛ばす */</span>
                <span class="n">csv</span><span class="o">-&gt;</span><span class="n">state</span> <span class="o">=</span> <span class="n">STATE_CSV_NEXT_QUOT</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">if</span><span class="p">(</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span> <span class="o">&gt;</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_max</span> <span class="p">)</span>
                <span class="n">csv</span><span class="o">-&gt;</span><span class="n">state</span> <span class="o">=</span> <span class="n">STATE_CSV_BUFFEROVER</span><span class="p">;</span>

            <span class="n">csv</span><span class="o">-&gt;</span><span class="n">x</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">]</span> <span class="o">=</span> <span class="n">p</span><span class="p">;</span>
        <span class="k">break</span><span class="p">;</span>

        <span class="c">/* 次の &quot; まで移動 */</span>
        <span class="k">case</span> <span class="nl">STATE_CSV_NEXT_QUOT:</span>
            <span class="k">for</span> <span class="p">(</span><span class="n">q</span> <span class="o">=</span> <span class="n">p</span><span class="p">;</span><span class="o">*</span><span class="n">q</span> <span class="o">!=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span><span class="n">q</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\&quot;&#39;</span><span class="p">)</span> <span class="p">{</span>
<span class="cp">#if ENABLE_QUOTQUOT</span>
                    <span class="k">if</span><span class="p">(</span>
                    <span class="c">/* &quot;&quot; は無視する */</span>
                        <span class="p">(</span> <span class="o">*</span><span class="p">(</span><span class="n">q</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="sc">&#39;\&quot;&#39;</span> <span class="p">))</span> <span class="p">{</span>
                        <span class="n">q</span> <span class="o">=</span> <span class="n">q</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
                        <span class="k">continue</span><span class="p">;</span>
                    <span class="p">}</span>
<span class="cp">#endif </span><span class="c">/* ENABLE_QUOTQUOT */</span><span class="cp"></span>
<span class="cp">#if ENABLE_ENQUOT</span>
                    <span class="k">if</span> <span class="p">((</span> <span class="n">q</span> <span class="o">!=</span> <span class="n">p</span> <span class="p">)</span> <span class="o">&amp;&amp;</span>
                    <span class="c">/* \&quot; は無視する */</span>
                        <span class="p">(</span> <span class="o">*</span><span class="p">(</span><span class="n">q</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="sc">&#39;\\&#39;</span> <span class="p">))</span> <span class="p">{</span>
                        <span class="k">continue</span><span class="p">;</span>
                    <span class="p">}</span>
<span class="cp">#endif </span><span class="c">/* ENABLE_ENQUOT */</span><span class="cp"></span>

                    <span class="o">*</span><span class="n">q</span> <span class="o">=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span>
                    <span class="c">/* 次のノードに移動する */</span>
                    <span class="n">q</span><span class="o">++</span><span class="p">;</span>
                    <span class="n">csv_read_cat</span><span class="p">(</span> <span class="n">csv</span><span class="p">,</span> <span class="n">p</span> <span class="p">);</span>
                    <span class="n">p</span> <span class="o">=</span> <span class="n">q</span><span class="p">;</span>
                    <span class="n">csv</span><span class="o">-&gt;</span><span class="n">state</span> <span class="o">=</span> <span class="n">STATE_CSV_NEXT_TAB</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\0&#39;</span> <span class="p">)</span> <span class="p">{</span>
                <span class="n">csv_read_cat</span><span class="p">(</span> <span class="n">csv</span><span class="p">,</span> <span class="n">p</span> <span class="p">);</span>
                <span class="n">p</span> <span class="o">=</span> <span class="n">q</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="k">break</span><span class="p">;</span>

        <span class="c">/* タブまたはカンマ区切りを捜す */</span>
        <span class="k">case</span> <span class="nl">STATE_CSV_NEXT_TAB:</span>
            <span class="k">for</span> <span class="p">(</span><span class="n">q</span> <span class="o">=</span> <span class="n">p</span><span class="p">;</span><span class="o">*</span><span class="n">q</span> <span class="o">!=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span><span class="n">q</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">((</span><span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;,&#39;</span><span class="p">)</span> <span class="o">||</span>
                    <span class="c">/* 既にCSVとして読み込んでいるのであれば、</span>
<span class="c">                       TABはそのまま取り込みます。 */</span>
                    <span class="p">((</span><span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\t&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">mode</span> <span class="o">&amp;</span> <span class="n">MODE_CSV</span><span class="p">)))</span> <span class="o">||</span> 
                    <span class="p">(</span><span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\r&#39;</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span><span class="p">))</span> <span class="p">{</span>
<span class="cp">#if ENABLE_ENTAB</span>
                    <span class="c">/* 先頭で区切り発見 */</span>
                    <span class="k">if</span><span class="p">(</span> <span class="p">(</span> <span class="n">q</span> <span class="o">==</span> <span class="n">p</span> <span class="p">)</span> <span class="o">||</span>
                    <span class="c">/* \, \\t は無視する */</span>
                       <span class="p">(</span> <span class="o">*</span><span class="p">(</span><span class="n">q</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">!=</span> <span class="sc">&#39;\\&#39;</span> <span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
<span class="cp">#endif </span><span class="c">/* ENABLE_ENTAB */</span><span class="cp"></span>
                        <span class="k">if</span><span class="p">(</span><span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;,&#39;</span><span class="p">)</span>  <span class="n">csv</span><span class="o">-&gt;</span><span class="n">mode</span> <span class="o">|=</span> <span class="n">MODE_CSV</span><span class="p">;</span>
                        <span class="k">if</span><span class="p">(</span><span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\t&#39;</span><span class="p">)</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">mode</span> <span class="o">|=</span> <span class="n">MODE_TSV</span><span class="p">;</span>
                        <span class="c">/* ノード数が決定しました */</span>
                        <span class="k">if</span><span class="p">(</span><span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\r&#39;</span> <span class="o">||</span> <span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span><span class="p">)</span> <span class="p">{</span>
                            <span class="n">csv</span><span class="o">-&gt;</span><span class="n">mode</span> <span class="o">|=</span> <span class="n">MODE_FIXROWS</span><span class="p">;</span>
                            <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="p">(</span><span class="n">q</span> <span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="sc">&#39;\r&#39;</span> <span class="o">||</span> <span class="o">*</span><span class="p">(</span><span class="n">q</span> <span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span> <span class="p">)</span>
                                <span class="o">*</span><span class="n">q</span><span class="o">++</span> <span class="o">=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span>
                        <span class="p">}</span>
                        <span class="c">/* 区切り文字によってノード数を推測します */</span>
                        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">mode</span> <span class="o">&amp;</span> <span class="n">MODE_FIXROWS</span><span class="p">))</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">rows</span><span class="o">++</span><span class="p">;</span>

                        <span class="o">*</span><span class="n">q</span><span class="o">++</span> <span class="o">=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span>
                        <span class="n">p</span> <span class="o">=</span> <span class="n">q</span><span class="p">;</span>

                        <span class="n">csv</span><span class="o">-&gt;</span><span class="n">state</span> <span class="o">=</span> <span class="n">STATE_CSV_DONE</span><span class="p">;</span>
                        <span class="k">break</span><span class="p">;</span>
<span class="cp">#if ENABLE_ENTAB</span>
                    <span class="p">}</span>
<span class="cp">#endif </span><span class="c">/* ENABLE_ENTAB */</span><span class="cp"></span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\0&#39;</span> <span class="p">)</span> <span class="p">{</span>
                <span class="n">csv_read_cat</span><span class="p">(</span> <span class="n">csv</span><span class="p">,</span> <span class="n">p</span> <span class="p">);</span>
                <span class="n">p</span> <span class="o">=</span> <span class="n">q</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="k">break</span><span class="p">;</span>

        <span class="k">case</span> <span class="nl">STATE_CSV_DONE:</span>
<span class="c">/*            printf( &quot;DONE. %d: %s\n&quot;, csv-&gt;node_pos, csv-&gt;x[csv-&gt;node_pos]);*/</span>
            <span class="k">if</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">]</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
                <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">]</span> <span class="o">=</span> <span class="n">strdup</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">x</span><span class="p">[</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">]);</span>
            <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="o">++</span><span class="p">;</span>

            <span class="n">csv</span><span class="o">-&gt;</span><span class="n">state</span> <span class="o">=</span> <span class="n">STATE_CSV_WAIT_QUOT</span><span class="p">;</span>
        <span class="k">break</span><span class="p">;</span>

        <span class="k">case</span> <span class="nl">STATE_CSV_BUFFEROVER:</span>
            <span class="n">perror</span><span class="p">(</span><span class="s">&quot;buffer over!&quot;</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="p">;</span>
<span class="p">}</span>

<span class="c">/* ------------------------------------------------------------------ */</span>
<span class="kt">void</span> <span class="nf">csv_print</span><span class="p">(</span> <span class="k">struct</span> <span class="n">csv_work</span><span class="o">*</span> <span class="n">csv</span><span class="p">,</span> <span class="kt">int</span> <span class="n">row</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>

    <span class="k">if</span><span class="p">(</span><span class="n">row</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">row</span> <span class="o">=</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">rows</span><span class="p">;</span>

    <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span> <span class="s">&quot;%d =&gt; %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span> <span class="o">%</span> <span class="n">row</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
<span class="c">/*</span>
<span class="c"> *        printf( &quot;要素 %d行%d桁: %s\n&quot;, i / row + 1, i % row + 1, csv-&gt;node[i]);</span>
<span class="c"> */</span>
        <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="p">(</span><span class="n">row</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="n">printf</span><span class="p">(</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="p">;</span>
<span class="p">}</span>

<span class="c">/* ------------------------------------------------------------------ */</span>
<span class="c">/* 辻褄 */</span>
<span class="kt">void</span> <span class="nf">csv_fix</span><span class="p">(</span> <span class="k">struct</span> <span class="n">csv_work</span><span class="o">*</span> <span class="n">csv</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">p</span><span class="p">,</span> <span class="o">*</span><span class="n">q</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>

    <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_pos</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span> <span class="p">{</span>
        <span class="c">/* 5. 列データに「&quot;」を含める場合「&quot;&quot;」とする。 */</span>
        <span class="n">p</span> <span class="o">=</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="n">q</span> <span class="o">=</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">for</span><span class="p">(</span> <span class="n">q</span> <span class="o">=</span> <span class="n">p</span> <span class="p">;</span> <span class="o">*</span><span class="n">p</span> <span class="o">!=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;)</span> <span class="p">{</span>
<span class="cp">#if ENABLE_QUOTQUOT</span>
            <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\&quot;&#39;</span> <span class="o">&amp;&amp;</span>  <span class="o">*</span><span class="p">(</span><span class="n">q</span> <span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="sc">&#39;\&quot;&#39;</span><span class="p">)</span> <span class="n">q</span><span class="o">++</span><span class="p">;</span>
<span class="cp">#endif </span><span class="c">/* ENABLE_QUOTQUOT */</span><span class="cp"></span>
<span class="cp">#if ENABLE_ENQUOT</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">q</span> <span class="o">==</span> <span class="sc">&#39;\\&#39;</span> <span class="o">&amp;&amp;</span>  <span class="o">*</span><span class="p">(</span><span class="n">q</span> <span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="sc">&#39;\&quot;&#39;</span><span class="p">)</span> <span class="n">q</span><span class="o">++</span><span class="p">;</span>
<span class="cp">#endif </span><span class="c">/* ENABLE_ENQUOT */</span><span class="cp"></span>
            <span class="o">*</span><span class="n">p</span><span class="o">++</span> <span class="o">=</span> <span class="o">*</span><span class="n">q</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="p">;</span>
<span class="p">}</span>

<span class="c">/* ------------------------------------------------------------------ */</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="n">buff</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">len</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">before_pos</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">csv_work</span> <span class="o">*</span> <span class="n">csv</span><span class="p">;</span>

    <span class="n">csv</span> <span class="o">=</span> <span class="n">csv_init</span><span class="p">(</span> <span class="mi">400</span> <span class="p">);</span>

<span class="c">/* fgets: \n か 256 読み込んだ文字列の最後に、\0を付加します */</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">fgets</span><span class="p">(</span><span class="n">buff</span><span class="p">,</span> <span class="mi">256</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">stdin</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">csv_read</span><span class="p">(</span> <span class="n">csv</span><span class="p">,</span> <span class="n">buff</span> <span class="p">);</span>
    <span class="p">}</span>

    <span class="n">csv_fix</span><span class="p">(</span> <span class="n">csv</span> <span class="p">);</span>
    <span class="n">csv_print</span><span class="p">(</span> <span class="n">csv</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="p">);</span>
    
    <span class="n">csv_free</span><span class="p">(</span> <span class="n">csv</span> <span class="p">);</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>


<span class="c">/**</span>

<span class="c">------------= csv.txt =------------------</span>
<span class="c">&quot;aaa&quot;,&quot;b</span>
<span class="c">bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx</span>
<span class="c">-----------------------------------------</span>

<span class="c">csv&gt;gcc main.c</span>
<span class="c">csv&gt;a.exe &lt; csv.txt</span>
<span class="c">1 =&gt; aaa</span>
<span class="c">2 =&gt; b</span>
<span class="c">bb</span>
<span class="c">3 =&gt; ccc</span>
<span class="c">4 =&gt; zzz</span>
<span class="c">5 =&gt; y&quot;Y&quot;y</span>
<span class="c">6 =&gt; xxx</span>
<span class="c">-----------------------------------------</span>

<span class="c">**/</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/6180/addtag/" class="addtag" id="addtag_6180">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/6180/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/6180/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6180"
  >-</span><span
  class="button yellow"
  id="rating_z_6180"
  >0</span><span 
  class="button green"
  id="rating_p_6180"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/6180/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment6183">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/787/" target="_top">虹原いんく</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/6183/">#6183</a>(<script language="JavaScript">print_time(new Date("2008/04/19 01:33 GMT"));</script><noscript>2008/04/19 01:33 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>csv-&gt;node の解放が抜けていました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre><span class="kt">void</span> <span class="nf">csv_free</span><span class="p">(</span> <span class="k">struct</span> <span class="n">csv_work</span><span class="o">*</span> <span class="n">csv</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node_max</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
        <span class="k">if</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="n">free</span><span class="p">(</span><span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>

    <span class="n">free</span><span class="p">(</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">node</span> <span class="p">);</span>
    <span class="n">free</span><span class="p">(</span> <span class="n">csv</span><span class="o">-&gt;</span><span class="n">x</span> <span class="p">);</span>
    <span class="n">free</span><span class="p">(</span> <span class="n">csv</span> <span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/6183/addtag/" class="addtag" id="addtag_6183">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/6183/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/6183/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6183"
  >-</span><span
  class="button yellow"
  id="rating_z_6183"
  >0</span><span 
  class="button green"
  id="rating_p_6183"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/6183/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment6518">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/6518/">#6518</a>(<script language="JavaScript">print_time(new Date("2008/06/16 05:33 GMT"));</script><noscript>2008/06/16 05:33 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>変態的と名高い(?) Boost.Spirit で解析。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;vector&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;exception&gt;</span>
<span class="cp">#include &lt;stdexcept&gt;</span>

<span class="cp">#include &lt;boost/spirit.hpp&gt;</span>
<span class="cp">#include &lt;boost/spirit/actor/push_back_actor.hpp&gt;</span>
<span class="cp">#include &lt;boost/spirit/actor/clear_actor.hpp&gt;</span>

<span class="k">typedef</span> <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">csv_elem_t</span><span class="p">;</span>

<span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">csv_elem_t</span><span class="o">&gt;</span>
<span class="n">parse_csv</span><span class="p">(</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">lines</span>
    <span class="p">)</span>
<span class="p">{</span>
  <span class="k">using</span> <span class="k">namespace</span> <span class="n">boost</span><span class="o">::</span><span class="n">spirit</span><span class="p">;</span>

  <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">csv_elem_t</span><span class="o">&gt;</span> <span class="n">csv</span><span class="p">;</span>
  <span class="n">csv_elem_t</span> <span class="n">e</span><span class="p">;</span>

  <span class="n">rule</span><span class="o">&lt;&gt;</span> <span class="n">element_r</span> <span class="o">=</span> <span class="o">*</span><span class="p">((</span><span class="n">anychar_p</span> <span class="o">-</span> <span class="n">ch_p</span><span class="p">(</span><span class="sc">&#39;&quot;&#39;</span><span class="p">))</span> <span class="o">|</span> <span class="n">str_p</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\&quot;\&quot;</span><span class="s">&quot;</span><span class="p">));</span>
  <span class="n">rule</span><span class="o">&lt;&gt;</span> <span class="n">quoted_r</span> <span class="o">=</span> <span class="n">ch_p</span><span class="p">(</span><span class="sc">&#39;&quot;&#39;</span><span class="p">)</span> <span class="o">&gt;&gt;</span> <span class="n">element_r</span><span class="p">[</span><span class="n">push_back_a</span><span class="p">(</span><span class="n">e</span><span class="p">)]</span> <span class="o">&gt;&gt;</span> <span class="n">ch_p</span><span class="p">(</span><span class="sc">&#39;&quot;&#39;</span><span class="p">);</span>

  <span class="n">rule</span><span class="o">&lt;&gt;</span> <span class="n">naked_r</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="p">(</span><span class="n">anychar_p</span> <span class="o">-</span> <span class="n">ch_p</span><span class="p">(</span><span class="sc">&#39;&quot;&#39;</span><span class="p">)</span> <span class="o">-</span> <span class="n">ch_p</span><span class="p">(</span><span class="sc">&#39;,&#39;</span><span class="p">)</span> <span class="o">-</span> <span class="n">eol_p</span><span class="p">))[</span><span class="n">push_back_a</span><span class="p">(</span><span class="n">e</span><span class="p">)];</span>

  <span class="n">rule</span><span class="o">&lt;&gt;</span> <span class="n">record_r</span> <span class="o">=</span> <span class="n">list_p</span><span class="p">((</span><span class="n">quoted_r</span><span class="o">|</span><span class="n">naked_r</span><span class="p">),</span> <span class="n">ch_p</span><span class="p">(</span><span class="sc">&#39;,&#39;</span><span class="p">));</span>
  <span class="n">rule</span><span class="o">&lt;&gt;</span> <span class="n">csv_r</span> <span class="o">=</span> <span class="n">list_p</span><span class="p">(</span><span class="n">record_r</span><span class="p">[</span><span class="n">push_back_a</span><span class="p">(</span><span class="n">csv</span><span class="p">,</span><span class="n">e</span><span class="p">)][</span><span class="n">clear_a</span><span class="p">(</span><span class="n">e</span><span class="p">)],</span> <span class="n">eol_p</span><span class="p">)</span> <span class="o">&gt;&gt;</span> <span class="n">end_p</span><span class="p">;</span>

  <span class="n">parse_info</span><span class="o">&lt;&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="n">parse</span><span class="p">(</span><span class="n">lines</span><span class="p">.</span><span class="n">c_str</span><span class="p">(),</span> <span class="n">csv_r</span><span class="p">);</span>

  <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="n">result</span><span class="p">.</span><span class="n">full</span> <span class="p">)</span> <span class="p">{</span>
    <span class="k">throw</span> <span class="n">std</span><span class="o">::</span><span class="n">runtime_error</span><span class="p">(</span><span class="s">&quot;failed to parse&quot;</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="k">typedef</span> <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">csv_elem_t</span><span class="o">&gt;::</span><span class="n">iterator</span> <span class="n">csv_list_iter</span><span class="p">;</span>
  <span class="k">typedef</span> <span class="n">csv_elem_t</span><span class="o">::</span><span class="n">iterator</span> <span class="n">csv_iter</span><span class="p">;</span>
  <span class="k">for</span> <span class="p">(</span> <span class="n">csv_list_iter</span> <span class="n">clit</span> <span class="o">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span> <span class="n">clit</span> <span class="o">!=</span> <span class="n">csv</span><span class="p">.</span><span class="n">end</span><span class="p">();</span> <span class="o">++</span><span class="n">clit</span> <span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span> <span class="n">csv_iter</span> <span class="n">cit</span> <span class="o">=</span> <span class="n">clit</span><span class="o">-&gt;</span><span class="n">begin</span><span class="p">();</span> <span class="n">cit</span> <span class="o">!=</span> <span class="n">clit</span><span class="o">-&gt;</span><span class="n">end</span><span class="p">();</span> <span class="o">++</span><span class="n">cit</span> <span class="p">)</span> <span class="p">{</span>
      <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">::</span><span class="n">size_type</span> <span class="n">idx</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
      <span class="k">while</span> <span class="p">(</span> <span class="p">(</span><span class="n">idx</span> <span class="o">=</span> <span class="n">cit</span><span class="o">-&gt;</span><span class="n">find</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\&quot;\&quot;</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">idx</span><span class="p">))</span> <span class="o">!=</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">::</span><span class="n">npos</span> <span class="p">)</span> <span class="p">{</span>
        <span class="n">cit</span><span class="o">-&gt;</span><span class="n">replace</span><span class="p">(</span><span class="n">idx</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s">&quot;</span><span class="se">\&quot;</span><span class="s">&quot;</span><span class="p">);</span> <span class="o">++</span><span class="n">idx</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="n">csv</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">csv_elem_t</span><span class="o">&gt;</span> <span class="n">csv</span> <span class="o">=</span>
      <span class="n">parse_csv</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\&quot;</span><span class="s">aaa</span><span class="se">\&quot;</span><span class="s">,</span><span class="se">\&quot;</span><span class="s">b</span><span class="se">\n</span><span class="s">bb</span><span class="se">\&quot;</span><span class="s">,</span><span class="se">\&quot;</span><span class="s">ccc</span><span class="se">\&quot;</span><span class="s">,zzz,</span><span class="se">\&quot;</span><span class="s">y</span><span class="se">\&quot;\&quot;</span><span class="s">Y</span><span class="se">\&quot;\&quot;</span><span class="s">y</span><span class="se">\&quot;</span><span class="s">,xxx&quot;</span><span class="p">);</span>

    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;total records: &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">csv</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>

    <span class="k">typedef</span> <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">csv_elem_t</span><span class="o">&gt;::</span><span class="n">const_iterator</span> <span class="n">csv_list_iter</span><span class="p">;</span>
    <span class="k">typedef</span> <span class="n">csv_elem_t</span><span class="o">::</span><span class="n">const_iterator</span> <span class="n">csv_iter</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">l</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span> <span class="n">csv_list_iter</span> <span class="n">clit</span> <span class="o">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span> <span class="n">clit</span> <span class="o">!=</span> <span class="n">csv</span><span class="p">.</span><span class="n">end</span><span class="p">();</span> <span class="o">++</span><span class="n">clit</span><span class="p">,</span><span class="o">++</span><span class="n">l</span> <span class="p">)</span> <span class="p">{</span>
      <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;#&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">l</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
      <span class="k">for</span> <span class="p">(</span> <span class="n">csv_iter</span> <span class="n">cit</span> <span class="o">=</span> <span class="n">clit</span><span class="o">-&gt;</span><span class="n">begin</span><span class="p">();</span> <span class="n">cit</span> <span class="o">!=</span> <span class="n">clit</span><span class="o">-&gt;</span><span class="n">end</span><span class="p">();</span> <span class="o">++</span><span class="n">cit</span><span class="p">,</span><span class="o">++</span><span class="n">i</span> <span class="p">)</span> <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; =&gt; &quot;</span> <span class="o">&lt;&lt;</span> <span class="o">*</span><span class="n">cit</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">catch</span> <span class="p">(</span> <span class="n">std</span><span class="o">::</span><span class="n">exception</span><span class="o">&amp;</span> <span class="n">e</span> <span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="n">e</span><span class="p">.</span><span class="n">what</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/6518/addtag/" class="addtag" id="addtag_6518">タグ</a>:
	
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/Boost.Spirit/">Boost.Spirit</a>
    
    <a href="/web/20090422125357/http://ja.doukaku.org/tag/boost/">boost</a>
    
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/6518/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/6518/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6518"
  >-</span><span
  class="button yellow"
  id="rating_z_6518"
  >0</span><span 
  class="button green"
  id="rating_p_6518"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/6518/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7788">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/218/" target="_top">susu</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/7788/">#7788</a>(<script language="JavaScript">print_time(new Date("2008/10/12 23:33 GMT"));</script><noscript>2008/10/12 23:33 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="c">(*  ocaml camlp4rf.cma もしくは</span>
<span class="c">    ocamlc -pp &quot;camlp4rf&quot; a.ml  *)</span>

<span class="n">value</span> <span class="n">add_opened_csv_string</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="kr">rec</span> <span class="n">loop</span> <span class="n">buf</span> <span class="k">=</span> <span class="n">parser</span>
    <span class="k">[</span> <span class="k">[:</span> <span class="k">`</span><span class="sc">&#39;&quot;&#39;</span><span class="k">;</span> <span class="n">st</span><span class="k">:]</span> <span class="k">-&gt;</span> 
        <span class="kr">if</span> <span class="k">(</span><span class="n">Stream</span><span class="k">.</span><span class="n">peek</span> <span class="n">st</span> <span class="k">&lt;&gt;</span> <span class="n">Some</span> <span class="sc">&#39;&quot;&#39;</span><span class="k">)</span> <span class="kr">then</span> <span class="k">()</span>
        <span class="kr">else</span> <span class="k">(</span><span class="n">Buffer</span><span class="k">.</span><span class="n">add_char</span> <span class="n">buf</span> <span class="k">(</span><span class="n">Stream</span><span class="k">.</span><span class="n">next</span> <span class="n">st</span><span class="k">);</span> <span class="n">loop</span> <span class="n">buf</span> <span class="n">st</span><span class="k">)</span>
    <span class="k">|</span> <span class="k">[:</span> <span class="k">`</span><span class="n">c</span> <span class="k">;</span> <span class="n">st</span> <span class="k">:]</span> <span class="k">-&gt;</span> <span class="k">(</span><span class="n">Buffer</span><span class="k">.</span><span class="n">add_char</span> <span class="n">buf</span> <span class="n">c</span><span class="k">;</span> <span class="n">loop</span> <span class="n">buf</span> <span class="n">st</span><span class="k">)</span> <span class="k">]</span>
  <span class="kr">in</span> <span class="kr">fun</span> <span class="n">buf</span> <span class="n">st</span> <span class="k">-&gt;</span> <span class="n">loop</span> <span class="n">buf</span> <span class="n">st</span><span class="k">;</span>

<span class="n">value</span> <span class="n">record_iteri</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">use_buffer</span> <span class="n">f</span> <span class="n">buf</span> <span class="k">=</span> 
    <span class="k">(</span><span class="n">f</span> <span class="k">(</span><span class="n">Buffer</span><span class="k">.</span><span class="n">contents</span> <span class="n">buf</span><span class="k">);</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">clear</span> <span class="n">buf</span><span class="k">)</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="kr">rec</span> <span class="n">loop</span> <span class="n">f</span> <span class="n">pos</span> <span class="n">buf</span>  <span class="k">=</span> <span class="n">parser</span>
    <span class="k">[</span> <span class="k">[:</span> <span class="k">`</span><span class="sc">&#39;,&#39;</span><span class="k">;</span> <span class="n">st</span><span class="k">:]</span> <span class="k">-&gt;</span> <span class="k">(</span><span class="n">use_buffer</span> <span class="k">(</span><span class="n">f</span> <span class="n">pos</span><span class="k">)</span> <span class="n">buf</span><span class="k">;</span> <span class="n">loop</span> <span class="n">f</span> <span class="k">(</span><span class="n">pos</span><span class="k">+</span><span class="mi">1</span><span class="k">)</span> <span class="n">buf</span> <span class="n">st</span><span class="k">)</span>
    <span class="k">|</span> <span class="k">[:</span> <span class="k">`</span><span class="sc">&#39;\n&#39;</span><span class="k">;</span> <span class="n">st</span><span class="k">:]</span> <span class="k">-&gt;</span> <span class="n">use_buffer</span> <span class="k">(</span><span class="n">f</span> <span class="n">pos</span><span class="k">)</span> <span class="n">buf</span> 
    <span class="k">|</span> <span class="k">[:</span> <span class="k">`</span><span class="sc">&#39;&quot;&#39;</span><span class="k">;</span> <span class="n">st</span><span class="k">:]</span> <span class="k">-&gt;</span> <span class="k">(</span><span class="n">add_opened_csv_string</span> <span class="n">buf</span> <span class="n">st</span><span class="k">;</span> <span class="n">loop</span> <span class="n">f</span> <span class="n">pos</span> <span class="n">buf</span> <span class="n">st</span><span class="k">)</span>
    <span class="k">|</span> <span class="k">[:</span> <span class="k">`</span><span class="n">c</span> <span class="k">;</span> <span class="n">st</span><span class="k">:]</span> <span class="k">-&gt;</span> <span class="k">(</span><span class="n">Buffer</span><span class="k">.</span><span class="n">add_char</span> <span class="n">buf</span> <span class="n">c</span><span class="k">;</span> <span class="n">loop</span> <span class="n">f</span> <span class="n">pos</span> <span class="n">buf</span> <span class="n">st</span><span class="k">)</span>
    <span class="k">|</span> <span class="k">[:</span> <span class="k">:]</span> <span class="k">-&gt;</span> <span class="n">use_buffer</span> <span class="k">(</span><span class="n">f</span> <span class="n">pos</span><span class="k">)</span> <span class="n">buf</span> <span class="k">]</span>
  <span class="kr">in</span> <span class="kr">fun</span> <span class="n">st</span> <span class="n">f</span> <span class="n">buf</span> <span class="k">-&gt;</span> <span class="n">loop</span> <span class="n">f</span> <span class="mi">1</span> <span class="n">buf</span> <span class="n">st</span><span class="k">;</span>

<span class="c">(*</span>
<span class="c">value t = Stream.of_string &quot;\</span>
<span class="c">  \&quot;aaa\&quot;,\&quot;b\n\</span>
<span class="c">  bb\&quot;,\&quot;ccc\&quot;,zzz,\&quot;y\&quot;\&quot;Y\&quot;\&quot;y\&quot;,xxx&quot;;</span>

<span class="c">record_iteri t (Printf.printf &quot;%2d =&gt; %s\n&quot;) (Buffer.create 8);</span>
<span class="c">*)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/7788/addtag/" class="addtag" id="addtag_7788">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/7788/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/7788/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7788"
  >-</span><span
  class="button yellow"
  id="rating_z_7788"
  >0</span><span 
  class="button green"
  id="rating_p_7788"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/7788/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7876">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/607/" target="_top">しらたま</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/7876/">#7876</a>(<script language="JavaScript">print_time(new Date("2008/10/27 23:17 GMT"));</script><noscript>2008/10/27 23:17 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/nadesico/">
	  なでしこ
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>なでしこでは「CSV取得」命令で配列に変換できます。</p>
</div>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre>「&quot;aaa&quot;,&quot;b
bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx」をCSV取得
反復
　反復
　　回数＆「 =&gt; 」＆対象を表示
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/7876/addtag/" class="addtag" id="addtag_7876">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/nadesico/">
		なでしこ
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/7876/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/7876/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7876"
  >-</span><span
  class="button yellow"
  id="rating_z_7876"
  >0</span><span 
  class="button green"
  id="rating_p_7876"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/7876/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8039">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/852/" target="_top">emasaka</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/8039/">#8039</a>(<script language="JavaScript">print_time(new Date("2008/11/15 06:17 GMT"));</script><noscript>2008/11/15 06:17 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>標準入力→標準出力です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="highlight"><pre><span class="k">function </span>splitCSV<span class="o">()</span> <span class="o">{</span>
    <span class="nb">local </span>c in_dq after_dq
    <span class="nb">local</span> -i <span class="nv">count</span><span class="o">=</span>0

    <span class="k">while </span><span class="nb">read</span> -n <span class="m">1</span> c; <span class="k">do</span>
<span class="k">        if</span> <span class="o">[</span> -z <span class="s2">&quot;$in_req&quot;</span> <span class="o">]</span>; <span class="k">then</span>
<span class="k">            </span><span class="nv">in_req</span><span class="o">=</span>1
            <span class="nb">echo</span> -n <span class="s2">&quot;$((++count)) =&gt; &quot;</span>
        <span class="k">fi</span>

        : <span class="k">${</span><span class="nv">c</span><span class="p">:=$&#39;\n&#39;</span><span class="k">}</span>   <span class="c"># 改行は空文字として読まれる</span>

        <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$c&quot;</span> <span class="o">=</span> \<span class="s2">&quot; ]; then</span>
<span class="s2">            if [ -n &quot;</span><span class="nv">$after_dq</span><span class="s2">&quot; ]; then</span>
<span class="s2">                echo -n \&quot;</span>
<span class="s2">                after_dq=&#39;&#39;</span>
<span class="s2">            else</span>
<span class="s2">                after_dq=1</span>
<span class="s2">            fi</span>
<span class="s2">        else</span>
<span class="s2">            if [ -n &quot;</span><span class="nv">$after_dq</span><span class="s2">&quot; ]; then</span>
<span class="s2">                after_dq=&#39;&#39;</span>
<span class="s2">                if [ -n &quot;</span><span class="nv">$in_dq</span><span class="s2">&quot; ]; then</span>
<span class="s2">                    in_dq=&#39;&#39;</span>
<span class="s2">                else</span>
<span class="s2">                    in_dq=1</span>
<span class="s2">                fi</span>
<span class="s2">            fi</span>

<span class="s2">            if [ -z &quot;</span><span class="nv">$in_dq</span><span class="s2">&quot; -a \( &quot;</span><span class="nv">$c</span><span class="s2">&quot; = , -o &quot;</span><span class="nv">$c</span><span class="s2">&quot; = $&#39;\n&#39; \) ]; then</span>
<span class="s2">                in_req=&#39;&#39;</span>
<span class="s2">                echo</span>
<span class="s2">            else</span>
<span class="s2">                echo -n &quot;</span><span class="nv">$c</span><span class="err">&quot;</span>
            <span class="k">fi</span>
<span class="k">        fi</span>
<span class="k">    done</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/8039/addtag/" class="addtag" id="addtag_8039">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/8039/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/8039/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8039"
  >-</span><span
  class="button yellow"
  id="rating_z_8039"
  >0</span><span 
  class="button green"
  id="rating_p_8039"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/8039/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8516">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/856/" target="_top">fumokmm</a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/8516/">#8516</a>(<script language="JavaScript">print_time(new Date("2009/02/16 10:38 GMT"));</script><noscript>2009/02/16 10:38 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>正規表現等で頑張ってみました。
すっきり書けたかなと思います。

[実行結果]
1 =&gt; aaa
2 =&gt; b
bb
3 =&gt; ccc
4 =&gt; zzz
5 =&gt; y"Y"y
6 =&gt; xxx
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre>def csv = &#39;&#39;&#39;\
&quot;aaa&quot;,&quot;b
bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx\
&#39;&#39;&#39;
resolveCSV(csv).eachWithIndex{ it, idx -&gt; println &quot;${idx+1} =&gt; ${it}&quot; }

/** CSVレコードの分解(RFC 4180対応版) */
def resolveCSV(String csv) {
    csv.split(&#39;,&#39;).inject([&#39;&quot;&quot;&#39;]){ result, it -&gt;
        // 一個前が「半開」ならそこに追加
        if (result[-1] ==~ /^&quot;.*[^&quot;]$/ || result[-1].count(&#39;&quot;&#39;) % 2 == 1) {
            result[-1] = [result[-1], it].join(&#39;,&#39;) // 「,」で結合
        // 一個前が「閉」なら新しく要素を追加
        } else {
            // 「&quot;」で囲んでおく
            result &lt;&lt; ((it =~ /&quot;/) ? it : &#39;&quot;&quot;&#39;.toList().join(it))
        }
        result
    }[1..-1]*.replaceAll(/^&quot;|&quot;$/, &#39;&#39;)*.replaceAll(/&quot;{2}/, &#39;&quot;&#39;)
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/8516/addtag/" class="addtag" id="addtag_8516">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/8516/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/8516/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8516"
  >-</span><span
  class="button yellow"
  id="rating_z_8516"
  >0</span><span 
  class="button green"
  id="rating_p_8516"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/8516/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8517">
  <p class="banner"><a href="/web/20090422125357/http://ja.doukaku.org/user/793/" target="_top">genzou</a><a href="/web/20090422125357/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/8517/">#8517</a>(<script language="JavaScript">print_time(new Date("2009/02/17 06:18 GMT"));</script><noscript>2009/02/17 06:18 GMT</noscript>)
	
	
	
	[<a href="/web/20090422125357/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>opencsvライブラリを使用しました。
(opencsv - an open source csv parser for Java &lt;<a class="reference" href="/web/20090422125357/http://opencsv.sourceforge.net/">http://opencsv.sourceforge.net/</a>&gt;)</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre>import au.com.bytecode.opencsv.*
import java.io.*

def csv = &#39;&#39;&#39;\
&quot;aaa&quot;,&quot;b
bb&quot;,&quot;ccc&quot;,zzz,&quot;y&quot;&quot;Y&quot;&quot;y&quot;,xxx\
&#39;&#39;&#39;

new CSVReader(new StringReader(csv)).readAll().each{
    def i = 1
    it.each{
        println &quot;${i++} =&gt; ${it}&quot;
    }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090422125357/http://ja.doukaku.org/comment/8517/addtag/" class="addtag" id="addtag_8517">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090422125357/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20090422125357/http://ja.doukaku.org/comment/8517/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090422125357/http://ja.doukaku.org/comment/8517/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8517"
  >-</span><span
  class="button yellow"
  id="rating_z_8517"
  >0</span><span 
  class="button green"
  id="rating_p_8517"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090422125357/http://ja.doukaku.org/33/reply_to/8517/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20090422125357if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20090422125357/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20090422125357/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20090422125357/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20090422125357/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20090422125357/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20090422125357/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20090422125357/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20090422125357/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090422125357/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090422125357/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20090422125357im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20090422125357/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20090422125357/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20090422125357/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20090422125357/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20090422125357/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20090422125357/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20090422125357/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20090422125357/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20090422125357im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20090422125357/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20090422125357/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20090422125357/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20090422125357js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 12:53:57 Apr 22, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:21:25 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
