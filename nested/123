
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
必ず解ける迷路
DouKaku? </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20081122163650cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20081122163650cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20081122163650cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20081122163650/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20081122163650/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20081122163650js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20081122163650js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20081122163650js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20081122163650js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app15.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/123\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "22";
var displayMonth = "Nov";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/123/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20081122163650" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080417050357/http://ja.doukaku.org/123/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="17 Apr 2008"><strong>APR</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 16:36:50 Nov 22, 2008">NOV</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Dec
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080417050357/http://ja.doukaku.org/123/nested/" title="5:03:57 Apr 17, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 16:36:50 Nov 22, 2008">22</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2007
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 16:36:50 Nov 22, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20081122163650*/http://ja.doukaku.org/123/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>5 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">15 Jan 08 - 22 Nov 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:10:111100000010_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20081122163650/http://ja.doukaku.org/">DouKaku?</a><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20081122163650im_/http://ja.doukaku.org/static/image/star_gold.png' alt=challenge>
<a href="/web/20081122163650/http://ja.doukaku.org/123/">必ず解ける迷路</a>
</h2>

    





<div class="comment" id="comment5275">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/643/" target="_top">squld</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5275/">#5275</a>(<script language="JavaScript">print_time(new Date("2008/01/12 07:53 GMT"));</script><noscript>2008/01/12 07:53 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #6fff4f;">9/11=0.82</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>
以下のルールを満たすn×mの迷路を出力するプログラムを作ってください。

1. 格子状の迷路であること。
2. 経路の幅は均等であること。
3. 迷路のある地点からの全ての地点に到達する経路が1つだけ存在すること。
   ループも認めません。
4. 出力の度にランダムな迷路であること。
   ランダムシードが同じ時に同じ迷路になってしまうのはよいです。

たとえば、n=4, m=5の迷路の出力は以下のようになります。

　｜１｜２｜３｜４｜
―■■■■■■■■■
１■　　　■　　　■
―■■■　■■■　■
２■　　　■　　　■
―■　■■■　■　■
３■　　　　　■　■
―■　■■■　■　■
４■　■　　　■　■
―■　■　■■■　■
５■　■　　　■　■
―■■■■■■■■■

こう言うのは、×の部分が3のルールに違反するのでダメです。
　｜１｜２｜３｜４｜
―■■■■■■■■■
１■　　　■×■　■
―■■■　■■■　■
２■　　　■　　　■
―■　■■■　■　■
３■　　　　　■　■
―■　■■■■■　■
４■　■×××■　■
―■　■×■■■　■
５■　■×××■　■
―■■■■■■■■■

このようなループも2のルールに違反するのでダメです。
　｜１｜２｜３｜４｜
―■■■■■■■■■
１■　　　　　■　■
―■■■　■　■　■
２■　　　■　　　■
―■　■■■　■　■
３■　　　　　■　■
―■　■■■　■　■
４■　■　　　■　■
―■　■　■■■　■
５■　　　　　■　■
―■■■■■■■■■

できたプログラムを使って n=1024, m=1024 の迷路を作るのにかかった時間を教えてください。


難易度高めです。限られたメモリを使って縦方向に無限に広い迷路を
どうやって作るのかを考えると答えが見えてくると思います。
ソースコードはJavaで150行程度になりました。
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5275/addtag/" class="addtag" id="addtag_5275">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #6fff4f;"
  >9/11=0.82</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5275"
  >-</span><span
  class="button yellow"
  id="rating_z_5275"
  >0</span><span 
  class="button green"
  id="rating_p_5275"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5275/">
  reply
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20081122163650/http://ja.doukaku.org/123/post_comment/">
post comment
</a>
</div>


<h2>Posted feedbacks - Nested</h2>
<a href="/web/20081122163650/http://ja.doukaku.org/123/flatten/">Flatten</a> 
<a href="/web/20081122163650/http://ja.doukaku.org/123/">Hidden</a> 


  

  
    





<div class="comment" id="comment5277">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5277/">#5277</a>(<script language="JavaScript">print_time(new Date("2008/01/12 11:11 GMT"));</script><noscript>2008/01/12 11:11 GMT</noscript>)
	
	
	
	[<a href="/web/20081122163650/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>たまには一番乗り狙いで。</p>
<p>シンプルに穴掘り法を使いました。
また速度重視ということで手続き型スタイルなScalaになっています。</p>
<ul class="simple">
<li>CPU : Athlon64 3000+</li>
<li>OS : XP</li>
<li>MEM : 1G</li>
</ul>
<p>な環境で</p>
<ul class="simple">
<li>出力なし: 45～50秒</li>
<li>出力をファイルへリダイレクト : 2分程度</li>
</ul>
<p>でした。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58</pre></td><td class="code"><div class="highlight"><pre>import java.util.Random
import java.lang.Integer.parseInt
import scala.collection.mutable.{HashMap, Stack}
import scala.util.Sorting.stableSort

object main{
  def main(args: Array[String]) = {
    mazeGenerate(parseInt(args(0)),parseInt(args(1)))
  }

  type Coord = (int, int)
  final val BLANK = &#39;■&#39;
  final val FILL = &#39;□&#39;

  def mazeGenerate(_n:int, _m:int) = {
    val n = _n*2+1
    val m = _m*2+1
    val map    = new HashMap[Coord, Char]
    val stack  = new Stack[Coord]
    val ramdom = new Random
    val range = Array(0,1,2,3)

    def badCoord_?(c:Coord) = 
        map.getOrElse(c, BLANK) == FILL || c._1 &gt; n-2 || c._1 &lt; 1 || c._2 &gt; m-2 || c._2 &lt; 1
    
    stack += (1,1)
    map(stack.top) = FILL
    var break=false; while(!break) {
      var c = stack.top
      var siblings = Array((c._1, c._2-2), (c._1+2, c._2), (c._1-2, c._2), (c._1, c._2+2))
      if(siblings.forall(badCoord_?(_))){
        stack.pop
        if(stack.isEmpty) { break=true }
      }else {
        var candies = stableSort[int,int](range, { x=&gt;ramdom.nextInt(4) })
        var break2=false;var i= -1; while({i = i+1; !break2&amp;&amp;i&lt;4}) {
          var sibling = siblings(candies(i))
          if(!badCoord_?(sibling)) {
            var (x,y) = (sibling._1-c._1, sibling._2-c._2)
            stack += sibling
            if(x != 0) {
              map((c._1+x/2, c._2)) = FILL
            }else {
              map((c._1, c._2+y/2)) = FILL
            }
            map(sibling) = FILL
            break2 = true
          }
        }
      }
    }

    for(i &lt;- (0 until m); j &lt;- (0 until n)) {
      print(map.getOrElse((j,i), BLANK))
      if(j == n-1){ println(&quot;&quot;) }
    }
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5277/addtag/" class="addtag" id="addtag_5277">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081122163650/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5277/download/">
		download code
      </a>]
	  [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5277/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5277"
  >-</span><span
  class="button yellow"
  id="rating_z_5277"
  >0</span><span 
  class="button green"
  id="rating_p_5277"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5277/">
    1
    reply
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5277/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5280">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5280/">#5280</a>(<script language="JavaScript">print_time(new Date("2008/01/12 12:39 GMT"));</script><noscript>2008/01/12 12:39 GMT</noscript>)
	
	
	
	[<a href="/web/20081122163650/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ふつうに配列を使った版。</p>
<ul class="simple">
<li>CPU : Athlon64 3000+</li>
<li>OS : XP</li>
<li>MEM : 1G</li>
</ul>
<p>な環境で1024 1024が</p>
<ul class="simple">
<li>出力をファイルへリダイレクト : Elapsed Time:     0:00:10.062</li>
</ul>
<p>でした。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51</pre></td><td class="code"><div class="highlight"><pre>import java.util.Random
import java.lang.Integer.parseInt
import scala.collection.mutable.{HashMap, Stack}
import scala.util.Sorting.stableSort

object main{
  def main(args: Array[String]) = {
    mazeGenerate(parseInt(args(0)),parseInt(args(1)))
  }

  type Coord = (int, int)
  final val BLANK:char = &#39;■&#39;
  final val FILL:char = &#39;□&#39;

  def mazeGenerate(_n:int, _m:int) = {
    val n = _n*2+1
    val m = _m*2+1
    val map:Array[Array[char]] = Array.make(m, 0).map(x=&gt;Array.make(n, BLANK))
    val stack  = new Stack[Coord]
    val ramdom = new Random
    val range = Array(0,1,2,3)

    def badCoord_?(c:Coord) = 
      c._1 &gt; n-2 || c._1 &lt; 1 || c._2 &gt; m-2 || c._2 &lt; 1 || map(c._2)(c._1) == FILL 
    
    stack += (1,1)
    map(1)(1) = FILL
    var break=false; while(!break) {
      var c = stack.top
      var siblings = Array((c._1, c._2-2), (c._1+2, c._2), (c._1-2, c._2), (c._1, c._2+2))
      if(siblings.forall(badCoord_?(_))){
        stack.pop
        if(stack.isEmpty) { break=true }
      }else {
        var candies = stableSort[int,int](range, { x=&gt;ramdom.nextInt(4) })
        var break2=false;var i= -1; while({i = i+1; !break2&amp;&amp;i&lt;4}) {
          var sibling = siblings(candies(i))
          if(!badCoord_?(sibling)) {
            var (x,y) = (sibling._1-c._1, sibling._2-c._2)
            stack += sibling
            map(c._2+y/2)(c._1+x/2) = FILL
            map(sibling._2)(sibling._1) = FILL
            break2 = true
          }
        }
      }
    }

    map.map(_.mkString(&quot;&quot;)).foreach(println)
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5280/addtag/" class="addtag" id="addtag_5280">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081122163650/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5280/download/">
		download code
      </a>]
	  [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5280/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5280"
  >-</span><span
  class="button yellow"
  id="rating_z_5280"
  >0</span><span 
  class="button green"
  id="rating_p_5280"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5277/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5280/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5280/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment5279">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5279/">#5279</a>(<script language="JavaScript">print_time(new Date("2008/01/12 12:03 GMT"));</script><noscript>2008/01/12 12:03 GMT</noscript>)
	
	
	
	[<a href="/web/20081122163650/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>効率を度外視して素直に書きました。
全部埋まった状態から掘れるだけ掘って、行き詰まったらバックトラックするだけです。

gosh&gt; (show-maze (maze 4 4))
■■■■■■■■■
■　■　　　■　■
■　■　■　■　■
■　■　■　　　■
■　■　■■■　■
■　　　■　　　■
■■■■■　■■■
■　　　　　　　■
■■■■■■■■■
#&lt;undef&gt;

1024x1024にかかった時間は177秒でした。
(Gauche 0.8.12, Pentium 4 2.0GHz)</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="c1">;; -*- coding: euc-jp -*-</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">array</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-27</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-42</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">util</span><span class="o">.</span><span class="nv">match</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">sequence</span><span class="p">)</span>

<span class="p">(</span><span class="k">set! </span><span class="p">(</span><span class="nf">setter</span> <span class="nv">array-ref</span><span class="p">)</span> <span class="nv">array-set!</span><span class="p">)</span> <span class="c1">;; missing in gauche.array</span>
<span class="p">(</span><span class="nf">random-source-randomize!</span> <span class="nv">default-random-source</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">advance</span> <span class="nv">pos</span> <span class="nv">d</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">match-let1</span> <span class="p">(</span><span class="nf">x</span> <span class="o">.</span> <span class="nv">y</span><span class="p">)</span> <span class="nv">pos</span>
    <span class="p">(</span><span class="k">case </span><span class="nv">d</span>
      <span class="err">[</span><span class="p">(</span><span class="nf">N</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">x</span> <span class="p">(</span><span class="nb">- </span><span class="nv">y</span> <span class="mi">1</span><span class="p">))</span><span class="err">]</span>
      <span class="err">[</span><span class="p">(</span><span class="nf">E</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">+ </span><span class="nv">x</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">y</span><span class="p">)</span><span class="err">]</span>
      <span class="err">[</span><span class="p">(</span><span class="nf">W</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">- </span><span class="nv">x</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">y</span><span class="p">)</span><span class="err">]</span>
      <span class="err">[</span><span class="p">(</span><span class="nf">S</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">x</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">y</span> <span class="mi">1</span><span class="p">))</span><span class="err">]</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">inverse</span> <span class="nv">d</span><span class="p">)</span> <span class="p">(</span><span class="k">case </span><span class="nv">d</span> <span class="p">((</span><span class="nf">N</span><span class="p">)</span> <span class="ss">&#39;S</span><span class="p">)</span> <span class="p">((</span><span class="nf">S</span><span class="p">)</span> <span class="ss">&#39;N</span><span class="p">)</span> <span class="p">((</span><span class="nf">E</span><span class="p">)</span> <span class="ss">&#39;W</span><span class="p">)</span> <span class="p">((</span><span class="nf">W</span><span class="p">)</span> <span class="ss">&#39;E</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">maze</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">let1</span> <span class="nv">tab</span> <span class="p">(</span><span class="nf">make-array</span> <span class="p">(</span><span class="nf">shape</span> <span class="mi">0</span> <span class="nv">n</span> <span class="mi">0</span> <span class="nv">m</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">())</span>
    <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">diggable?</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">)</span>
      <span class="p">(</span><span class="k">and </span><span class="p">(</span><span class="nb">&lt;= </span><span class="mi">0</span> <span class="nv">x</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">))</span> <span class="p">(</span><span class="nb">&lt;= </span><span class="mi">0</span> <span class="nv">y</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="mi">1</span><span class="p">))</span> <span class="p">(</span><span class="nb">null? </span><span class="p">(</span><span class="nf">array-ref</span> <span class="nv">tab</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">))))</span>
    <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">dig</span> <span class="nv">pos</span> <span class="nv">d</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">let1</span> <span class="nv">newpos</span> <span class="p">(</span><span class="nf">advance</span> <span class="nv">pos</span> <span class="nv">d</span><span class="p">)</span>
        <span class="p">(</span><span class="k">cond </span><span class="err">[</span><span class="p">(</span><span class="nf">diggable?</span> <span class="p">(</span><span class="nb">car </span><span class="nv">newpos</span><span class="p">)</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">newpos</span><span class="p">))</span>
               <span class="p">(</span><span class="nf">push!</span> <span class="p">(</span><span class="nf">array-ref</span> <span class="nv">tab</span> <span class="p">(</span><span class="nb">car </span><span class="nv">pos</span><span class="p">)</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">pos</span><span class="p">))</span> <span class="nv">d</span><span class="p">)</span>
               <span class="p">(</span><span class="nf">push!</span> <span class="p">(</span><span class="nf">array-ref</span> <span class="nv">tab</span> <span class="p">(</span><span class="nb">car </span><span class="nv">newpos</span><span class="p">)</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">newpos</span><span class="p">))</span> <span class="p">(</span><span class="nf">inverse</span> <span class="nv">d</span><span class="p">))</span>
               <span class="nv">newpos</span><span class="err">]</span>
              <span class="err">[</span><span class="k">else </span><span class="no">#f</span><span class="err">]</span><span class="p">)))</span>
    <span class="p">(</span><span class="k">let </span><span class="nv">rec</span> <span class="p">((</span><span class="nf">pos</span> <span class="o">&#39;</span><span class="p">(</span><span class="mi">0</span> <span class="o">.</span> <span class="mi">0</span><span class="p">))</span> <span class="p">(</span><span class="nf">from</span> <span class="no">#f</span><span class="p">))</span>
      <span class="p">(</span><span class="k">and </span><span class="nv">pos</span>
           <span class="p">(</span><span class="nf">dolist</span> <span class="p">(</span><span class="nf">d</span> <span class="p">(</span><span class="nf">shuffle</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">N</span> <span class="nv">E</span> <span class="nv">W</span> <span class="nv">S</span><span class="p">)))</span>
             <span class="p">(</span><span class="nf">unless</span> <span class="p">(</span><span class="nb">eq? </span><span class="nv">d</span> <span class="nv">from</span><span class="p">)</span> <span class="p">(</span><span class="nf">rec</span> <span class="p">(</span><span class="nf">dig</span> <span class="nv">pos</span> <span class="nv">d</span><span class="p">)</span> <span class="p">(</span><span class="nf">inverse</span> <span class="nv">d</span><span class="p">))))))</span>
    <span class="nv">tab</span><span class="p">))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">show-maze</span> <span class="nv">tab</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">y</span> <span class="p">(</span><span class="nf">array-ref</span> <span class="p">(</span><span class="nf">array-shape</span> <span class="nv">tab</span><span class="p">)</span> <span class="mi">0</span> <span class="mi">1</span><span class="p">))</span>
    <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">x</span> <span class="p">(</span><span class="nf">array-ref</span> <span class="p">(</span><span class="nf">array-shape</span> <span class="nv">tab</span><span class="p">)</span> <span class="mi">1</span> <span class="mi">1</span><span class="p">))</span>
      <span class="p">(</span><span class="nb">display </span><span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">memq </span><span class="ss">&#39;N</span> <span class="p">(</span><span class="nf">array-ref</span> <span class="nv">tab</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">))</span> <span class="s">&quot;■\u3000&quot;</span> <span class="s">&quot;■■&quot;</span><span class="p">)))</span>
    <span class="p">(</span><span class="nb">display </span><span class="s">&quot;■\n&quot;</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">x</span> <span class="p">(</span><span class="nf">array-ref</span> <span class="p">(</span><span class="nf">array-shape</span> <span class="nv">tab</span><span class="p">)</span> <span class="mi">1</span> <span class="mi">1</span><span class="p">))</span>
      <span class="p">(</span><span class="nb">display </span><span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">memq </span><span class="ss">&#39;W</span> <span class="p">(</span><span class="nf">array-ref</span> <span class="nv">tab</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">))</span> <span class="s">&quot;\u3000\u3000&quot;</span> <span class="s">&quot;■\u3000&quot;</span><span class="p">)))</span>
    <span class="p">(</span><span class="nb">display </span><span class="s">&quot;■\n&quot;</span><span class="p">))</span>
  <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">x</span> <span class="p">(</span><span class="nf">array-ref</span> <span class="p">(</span><span class="nf">array-shape</span> <span class="nv">tab</span><span class="p">)</span> <span class="mi">1</span> <span class="mi">1</span><span class="p">))</span>
    <span class="p">(</span><span class="nb">display </span><span class="s">&quot;■■&quot;</span><span class="p">))</span>
  <span class="p">(</span><span class="nb">display </span><span class="s">&quot;■\n&quot;</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5279/addtag/" class="addtag" id="addtag_5279">Tags</a>:
	
    
    <a href="/web/20081122163650/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20081122163650/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5279/download/">
		download code
      </a>]
	  [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5279/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5279"
  >-</span><span
  class="button yellow"
  id="rating_z_5279"
  >0</span><span 
  class="button green"
  id="rating_p_5279"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5279/">
    1
    reply
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5279/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5281">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5281/">#5281</a>(<script language="JavaScript">print_time(new Date("2008/01/12 13:04 GMT"));</script><noscript>2008/01/12 13:04 GMT</noscript>)
	
	
	
	[<a href="/web/20081122163650/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  続いて高速化版です。<br/><br/>1024x1024、出力無しで7秒弱になりました(Pen4&nbsp;2.0GHz)。約25倍。<br/><br/>-&nbsp;接続をビットマップで保持<br/>-&nbsp;方向を整数値で表して条件判断を減らす<br/>-&nbsp;トライすべき方向のリストをshuffleで毎回作るのではなく、すべての可能な組み合わせをあらかじめ計算しといて、ループ内ではそのうち一つをランダムに選ぶ<br/><br/>最後のが一番効きました。shuffleはgeneric&nbsp;functionのディスパッチがあるし、結果のリストのアロケートも行われるのでinner&nbsp;loopで使うと重いのでしょう。<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71</pre></td><td class="code"><div class="highlight"><pre><span class="c1">;; -*- coding: euc-jp -*-</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-27</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-42</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">util</span><span class="o">.</span><span class="nv">combinations</span><span class="p">)</span>

<span class="p">(</span><span class="nf">random-source-randomize!</span> <span class="nv">default-random-source</span><span class="p">)</span>

<span class="p">(</span><span class="nf">define-constant</span> <span class="nv">N</span> <span class="mi">-1</span><span class="p">)</span>
<span class="p">(</span><span class="nf">define-constant</span> <span class="nv">S</span>  <span class="mi">1</span><span class="p">)</span>
<span class="p">(</span><span class="nf">define-constant</span> <span class="nv">W</span> <span class="mi">-2</span><span class="p">)</span>
<span class="p">(</span><span class="nf">define-constant</span> <span class="nv">E</span>  <span class="mi">2</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">dir-&gt;mask</span> <span class="nv">d</span><span class="p">)</span> <span class="p">(</span><span class="nf">ash</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">d</span> <span class="mi">2</span><span class="p">)))</span>

<span class="p">(</span><span class="nf">define-constant</span> <span class="nv">NMASK</span> <span class="p">(</span><span class="nf">dir-&gt;mask</span> <span class="nv">N</span><span class="p">))</span>
<span class="p">(</span><span class="nf">define-constant</span> <span class="nv">SMASK</span> <span class="p">(</span><span class="nf">dir-&gt;mask</span> <span class="nv">S</span><span class="p">))</span>
<span class="p">(</span><span class="nf">define-constant</span> <span class="nv">WMASK</span> <span class="p">(</span><span class="nf">dir-&gt;mask</span> <span class="nv">W</span><span class="p">))</span>
<span class="p">(</span><span class="nf">define-constant</span> <span class="nv">EMASK</span> <span class="p">(</span><span class="nf">dir-&gt;mask</span> <span class="nv">E</span><span class="p">))</span>

<span class="p">(</span><span class="nf">define-macro</span> <span class="p">(</span><span class="nf">trials</span> <span class="nv">from</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">gen-combs</span> <span class="nv">src</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">list-&gt;vector </span><span class="p">(</span><span class="nf">permutations</span> <span class="nv">src</span><span class="p">)))</span>
  <span class="o">`</span><span class="p">(</span><span class="nb">vector-ref </span><span class="p">(</span><span class="k">case </span><span class="o">,</span><span class="nv">from</span>
                 <span class="p">((</span><span class="o">,</span><span class="nv">N</span><span class="p">)</span> <span class="ss">&#39;,</span><span class="p">(</span><span class="nf">gen-combs</span> <span class="o">`</span><span class="p">(</span><span class="o">,</span><span class="nv">S</span> <span class="o">,</span><span class="nv">W</span> <span class="o">,</span><span class="nv">E</span><span class="p">)))</span>
                 <span class="p">((</span><span class="o">,</span><span class="nv">S</span><span class="p">)</span> <span class="ss">&#39;,</span><span class="p">(</span><span class="nf">gen-combs</span> <span class="o">`</span><span class="p">(</span><span class="o">,</span><span class="nv">N</span> <span class="o">,</span><span class="nv">W</span> <span class="o">,</span><span class="nv">E</span><span class="p">)))</span>
                 <span class="p">((</span><span class="o">,</span><span class="nv">W</span><span class="p">)</span> <span class="ss">&#39;,</span><span class="p">(</span><span class="nf">gen-combs</span> <span class="o">`</span><span class="p">(</span><span class="o">,</span><span class="nv">N</span> <span class="o">,</span><span class="nv">S</span> <span class="o">,</span><span class="nv">E</span><span class="p">)))</span>
                 <span class="p">((</span><span class="o">,</span><span class="nv">E</span><span class="p">)</span> <span class="ss">&#39;,</span><span class="p">(</span><span class="nf">gen-combs</span> <span class="o">`</span><span class="p">(</span><span class="o">,</span><span class="nv">N</span> <span class="o">,</span><span class="nv">S</span> <span class="o">,</span><span class="nv">W</span><span class="p">))))</span>
               <span class="p">(</span><span class="nf">random-integer</span> <span class="mi">6</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">maze</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">let1</span> <span class="nv">tab</span> <span class="p">(</span><span class="nb">make-vector </span><span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">m</span><span class="p">)</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">(</span><span class="k">let-syntax </span><span class="err">[</span><span class="p">(</span><span class="nf">maze-ref</span>
                  <span class="p">(</span><span class="k">syntax-rules </span><span class="p">()</span>
                    <span class="err">[</span><span class="p">(</span><span class="nf">_</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">)</span> <span class="p">(</span><span class="nb">vector-ref </span><span class="nv">tab</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">x</span> <span class="p">(</span><span class="nb">* </span><span class="nv">y</span> <span class="nv">n</span><span class="p">)))</span><span class="err">]</span><span class="p">))</span>
                 <span class="p">(</span><span class="nf">maze-flag-ior!</span>
                  <span class="p">(</span><span class="k">syntax-rules </span><span class="p">()</span>
                    <span class="err">[</span><span class="p">(</span><span class="nf">_</span> <span class="nv">x</span> <span class="nv">y</span> <span class="nv">d</span><span class="p">)</span>
                     <span class="p">(</span><span class="nf">let1</span> <span class="nv">i</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">x</span> <span class="p">(</span><span class="nb">* </span><span class="nv">y</span> <span class="nv">n</span><span class="p">))</span>
                       <span class="p">(</span><span class="nb">vector-set! </span><span class="nv">tab</span> <span class="nv">i</span> <span class="p">(</span><span class="nf">logior</span> <span class="p">(</span><span class="nb">vector-ref </span><span class="nv">tab</span> <span class="nv">i</span><span class="p">)</span>
                                                  <span class="p">(</span><span class="nf">dir-&gt;mask</span> <span class="nv">d</span><span class="p">))))</span><span class="err">]</span><span class="p">))</span><span class="err">]</span>
      <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">dig</span> <span class="nv">x</span> <span class="nv">y</span> <span class="nv">d</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">receive</span> <span class="p">(</span><span class="nf">dx</span> <span class="nv">dy</span><span class="p">)</span> <span class="p">(</span><span class="nf">quotient&amp;remainder</span> <span class="nv">d</span> <span class="mi">2</span><span class="p">)</span>
          <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">nx</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">x</span> <span class="nv">dx</span><span class="p">))</span> <span class="p">(</span><span class="nf">ny</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">y</span> <span class="nv">dy</span><span class="p">)))</span>
            <span class="p">(</span><span class="k">cond </span><span class="err">[</span><span class="p">(</span><span class="k">and </span><span class="p">(</span><span class="nb">&lt;= </span><span class="mi">0</span> <span class="nv">nx</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt; </span><span class="nv">nx</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt;= </span><span class="mi">0</span> <span class="nv">ny</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt; </span><span class="nv">ny</span> <span class="nv">m</span><span class="p">)</span>
                        <span class="p">(</span><span class="nb">= </span><span class="mi">0</span> <span class="p">(</span><span class="nf">maze-ref</span> <span class="nv">nx</span> <span class="nv">ny</span><span class="p">)))</span>
                   <span class="p">(</span><span class="nf">maze-flag-ior!</span> <span class="nv">x</span> <span class="nv">y</span> <span class="nv">d</span><span class="p">)</span>
                   <span class="p">(</span><span class="nf">maze-flag-ior!</span> <span class="nv">nx</span> <span class="nv">ny</span> <span class="p">(</span><span class="nb">- </span><span class="nv">d</span><span class="p">))</span>
                   <span class="p">(</span><span class="nf">rec</span> <span class="nv">nx</span> <span class="nv">ny</span> <span class="p">(</span><span class="nb">- </span><span class="nv">d</span><span class="p">))</span><span class="err">]</span>
                  <span class="err">[</span><span class="k">else </span><span class="no">#f</span><span class="err">]</span><span class="p">))))</span>
      <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">rec</span> <span class="nv">x</span> <span class="nv">y</span> <span class="nv">from</span><span class="p">)</span>
        <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">ds</span> <span class="p">(</span><span class="nf">trials</span> <span class="nv">from</span><span class="p">)))</span>
          <span class="p">(</span><span class="nf">unless</span> <span class="p">(</span><span class="nb">null? </span><span class="nv">ds</span><span class="p">)</span>
            <span class="p">(</span><span class="nf">dig</span> <span class="nv">x</span> <span class="nv">y</span> <span class="p">(</span><span class="nb">car </span><span class="nv">ds</span><span class="p">))</span>
            <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">ds</span><span class="p">)))))</span>
      <span class="p">(</span><span class="nf">rec</span> <span class="mi">0</span> <span class="mi">0</span> <span class="nv">N</span><span class="p">)</span>
      <span class="nv">tab</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">show-maze</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">let1</span> <span class="nv">tab</span> <span class="p">(</span><span class="nf">maze</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">do-ec</span> <span class="p">(</span><span class="nf">:</span> <span class="nv">y</span> <span class="mi">0</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">m</span><span class="p">)</span> <span class="nv">n</span><span class="p">)</span>
           <span class="p">(</span><span class="nf">begin</span>
             <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">x</span> <span class="nv">n</span><span class="p">)</span>
               <span class="p">(</span><span class="nb">display </span><span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="mi">0</span> <span class="p">(</span><span class="nf">logand</span> <span class="nv">NMASK</span> <span class="p">(</span><span class="nb">vector-ref </span><span class="nv">tab</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">x</span> <span class="nv">y</span><span class="p">))))</span>
                          <span class="s">&quot;■■&quot;</span> <span class="s">&quot;■\u3000&quot;</span><span class="p">)))</span>
             <span class="p">(</span><span class="nb">display </span><span class="s">&quot;■\n&quot;</span><span class="p">)</span>
             <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">x</span> <span class="nv">n</span><span class="p">)</span>
               <span class="p">(</span><span class="nb">display </span><span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="mi">0</span> <span class="p">(</span><span class="nf">logand</span> <span class="nv">WMASK</span> <span class="p">(</span><span class="nb">vector-ref </span><span class="nv">tab</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">x</span> <span class="nv">y</span><span class="p">))))</span>
                          <span class="s">&quot;■\u3000&quot;</span> <span class="s">&quot;\u3000\u3000&quot;</span><span class="p">)))</span>
             <span class="p">(</span><span class="nb">display </span><span class="s">&quot;■\n&quot;</span><span class="p">)))</span>
    <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">x</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nb">display </span><span class="s">&quot;■■&quot;</span><span class="p">))</span>
    <span class="p">(</span><span class="nb">display </span><span class="s">&quot;■\n&quot;</span><span class="p">)))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5281/addtag/" class="addtag" id="addtag_5281">Tags</a>:
	
    
    <a href="/web/20081122163650/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20081122163650/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5281/download/">
		download code
      </a>]
	  [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5281/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5281"
  >-</span><span
  class="button yellow"
  id="rating_z_5281"
  >0</span><span 
  class="button green"
  id="rating_p_5281"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5279/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5281/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5281/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  

  
    





<div class="comment" id="comment5282">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5282/">#5282</a>(<script language="JavaScript">print_time(new Date("2008/01/12 14:40 GMT"));</script><noscript>2008/01/12 14:40 GMT</noscript>)
	
	
	
	[<a href="/web/20081122163650/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #afff8f;">5/7=0.71</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>これは、ありですか？
一応、毎回ランダムに結果は変わるのですが。
実行結果：
 $ gosh 123.scm
xxxxxxxxxxx
x         x
x xxxxxxx x
x       x x
x xxxxxxx x
x       x x
x xxxxxxx x
x       x x
x xxxxxxx x
x       x x
xxxxxxxxxxx
 $ gosh 123.scm
xxxxxxxxxxx
x       x x
x xxxxxxx x
x       x x
x xxxxxxx x
x         x
x xxxxxxx x
x       x x
x xxxxxxx x
x       x x
xxxxxxxxxxx
 $ gosh 123.scm
xxxxxxxxxxx
x         x
x xxxxxxx x
x       x x
x xxxxxxx x
x       x x
x xxxxxxx x
x       x x
x xxxxxxx x
x       x x
xxxxxxxxxxx
 $
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-27</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">showmaze</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">let1</span> <span class="nv">x</span> <span class="p">(</span><span class="nf">random-integer</span> <span class="nv">m</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">i</span> <span class="nv">m</span><span class="p">)</span>
      <span class="p">(</span><span class="nb">display </span><span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="nv">i</span> <span class="mi">0</span><span class="p">)</span> <span class="s">&quot;xx&quot;</span> <span class="s">&quot;x &quot;</span><span class="p">))</span>
      <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">j</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">2</span><span class="p">))</span> <span class="p">(</span><span class="nb">display </span><span class="s">&quot;xx&quot;</span><span class="p">))</span>
      <span class="p">(</span><span class="nb">display </span><span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="nv">i</span> <span class="mi">0</span><span class="p">)</span> <span class="s">&quot;xxx\n&quot;</span> <span class="s">&quot;x x\n&quot;</span><span class="p">))</span>
      <span class="p">(</span><span class="nb">display </span><span class="s">&quot;x &quot;</span><span class="p">)(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">j</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">2</span><span class="p">))</span> <span class="p">(</span><span class="nb">display </span><span class="s">&quot;  &quot;</span><span class="p">))</span>
      <span class="p">(</span><span class="nb">display </span><span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="nv">i</span> <span class="nv">x</span><span class="p">)</span> <span class="s">&quot;  x\n&quot;</span> <span class="s">&quot;x x\n&quot;</span><span class="p">)))</span>
    <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">j</span> <span class="nv">m</span><span class="p">)</span> <span class="p">(</span><span class="nb">display </span><span class="s">&quot;xx&quot;</span><span class="p">))</span> <span class="p">(</span><span class="nb">display </span><span class="s">&quot;x\n&quot;</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">main</span> <span class="nv">args</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">random-source-randomize!</span> <span class="nv">default-random-source</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">showmaze</span> <span class="mi">5</span> <span class="mi">5</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5282/addtag/" class="addtag" id="addtag_5282">Tags</a>:
	
    
    <a href="/web/20081122163650/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
    <a href="/web/20081122163650/http://ja.doukaku.org/tag/%E5%95%8F%E9%A1%8C%E3%81%AE%E8%A3%8F%E3%82%92%E3%81%8B%E3%81%8F/">問題の裏をかく</a>
    
	&nbsp;

	
      [<a href="/web/20081122163650/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5282/download/">
		download code
      </a>]
	  [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5282/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #afff8f;"
  >5/7=0.71</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5282"
  >-</span><span
  class="button yellow"
  id="rating_z_5282"
  >0</span><span 
  class="button green"
  id="rating_p_5282"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5282/">
    1
    reply
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5282/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5283">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/643/" target="_top">squld</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5283/">#5283</a>(<script language="JavaScript">print_time(new Date("2008/01/12 14:43 GMT"));</script><noscript>2008/01/12 14:43 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>解いても楽しくない迷路になりそうですが、ルールは満たしていますね。
あと、めっちゃ速そう(笑)</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5283/addtag/" class="addtag" id="addtag_5283">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5283"
  >-</span><span
  class="button yellow"
  id="rating_z_5283"
  >0</span><span 
  class="button green"
  id="rating_p_5283"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5282/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5283/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5283/">
    2
    replies
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5283/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5290">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5290/">#5290</a>(<script language="JavaScript">print_time(new Date("2008/01/13 08:03 GMT"));</script><noscript>2008/01/13 08:03 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>速さには自信があります。(笑)
&gt;限られたメモリを使って縦方向に無限に広い迷路を
&gt;どうやって作るのかを考えると答えが見えてくると思います。
をすっごくまじめに考えて、最小のメモリで無限の迷路を作り出すことばかり考えていたら、
こんなふざけたアイデアしか思いつかなかったので。
すみません。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5290/addtag/" class="addtag" id="addtag_5290">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5290"
  >-</span><span
  class="button yellow"
  id="rating_z_5290"
  >0</span><span 
  class="button green"
  id="rating_p_5290"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5283/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5290/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5290/">
    1
    reply
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5290/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5292">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/643/" target="_top">squld</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5292/">#5292</a>(<script language="JavaScript">print_time(new Date("2008/01/13 08:25 GMT"));</script><noscript>2008/01/13 08:25 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>メモリ使用量はO(1)なので確かに理想的ですね。速さも文句なしです。でも、さすがにそこまでのメモリ効率は想定していませんでした(笑)</p>
<p>他のコメントにも書きましたが、O(n)のアルゴリズムがあるんですよ。解いて楽しい迷路生成のメモリ効率としてはそれ以上のアルゴリズムは無いと踏んでます。
時間のあるときにでも考えてみてください。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5292/addtag/" class="addtag" id="addtag_5292">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5292"
  >-</span><span
  class="button yellow"
  id="rating_z_5292"
  >0</span><span 
  class="button green"
  id="rating_p_5292"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5290/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5292/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5292/">
    1
    reply
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5292/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5296">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5296/">#5296</a>(<script language="JavaScript">print_time(new Date("2008/01/13 11:48 GMT"));</script><noscript>2008/01/13 11:48 GMT</noscript>)
	
	
	
	[<a href="/web/20081122163650/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>O(n)のアルゴリズムは、棒倒し法しか思いつかない。
穴掘り法はある程度、美しいんだけど、O(n^2)だし。

棒倒し法で棒を倒す方向を決定するのに、
周囲の環境を見て決めるように、パラメータチューニングするしかないのかなぁ。
と考え中。

↓は綺麗だけどお題を満たさない答え。　迷路(笑)</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include&lt;stdio.h&gt;</span>
<span class="cp">#include&lt;stdlib.h&gt;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">;</span>
    <span class="n">n</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
    <span class="n">m</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="n">y</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span><span class="p">){</span>
            <span class="n">printf</span><span class="p">(</span><span class="n">rand</span><span class="p">()</span> <span class="o">&gt;</span> <span class="n">RAND_MAX</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">?</span> <span class="s">&quot;／&quot;</span> <span class="o">:</span> <span class="s">&quot;＼&quot;</span><span class="p">);</span>        
        <span class="p">}</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5296/addtag/" class="addtag" id="addtag_5296">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081122163650/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5296/download/">
		download code
      </a>]
	  [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5296/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5296"
  >-</span><span
  class="button yellow"
  id="rating_z_5296"
  >0</span><span 
  class="button green"
  id="rating_p_5296"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5292/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5296/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5296/">
    1
    reply
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5296/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5300">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/643/" target="_top">squld</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5300/">#5300</a>(<script language="JavaScript">print_time(new Date("2008/01/13 13:20 GMT"));</script><noscript>2008/01/13 13:20 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>棒倒し法も空間計算量がO(n)なんですね。
O(nm)と勘違いしてました・・orz</p>
<p>ルールは満たしてませんが、見栄えのする迷路が出てきますね。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5300/addtag/" class="addtag" id="addtag_5300">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5300"
  >-</span><span
  class="button yellow"
  id="rating_z_5300"
  >0</span><span 
  class="button green"
  id="rating_p_5300"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5296/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5300/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5300/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


    </div>
  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5308">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/606/" target="_top">pooq</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5308/">#5308</a>(<script language="JavaScript">print_time(new Date("2008/01/14 03:11 GMT"));</script><noscript>2008/01/14 03:11 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ルールについてよくわからないので質問します。
ルール１を満たさないのは、どういう場合ですか？
ルール２を満たさないのは、どういう場合ですか？
このプログラムがルールを満たしているということは、壁か、通路か未定の部分をあらかじめ
どちらかに固定した部分があってもよいということですか？
このプログラムを他の投稿プログラムと区別しているようにみえますが、ルール以外に
区別する「なにか」があるのですか？
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5308/addtag/" class="addtag" id="addtag_5308">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5308"
  >-</span><span
  class="button yellow"
  id="rating_z_5308"
  >0</span><span 
  class="button green"
  id="rating_p_5308"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5283/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5308/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5308/">
    1
    reply
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5308/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5313">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/643/" target="_top">squld</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5313/">#5313</a>(<script language="JavaScript">print_time(new Date("2008/01/14 06:28 GMT"));</script><noscript>2008/01/14 06:28 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ごめんなさい。ルールわかりにくかったですね。

&gt; ルール１を満たさないのは、どういう場合ですか？

1. 格子状の迷路であること
このルールは立体交差、斜め経路、グニャグニャ経路等
を作らないでほしいという意図で作ったルールです。

&gt; ルール２を満たさないのは、どういう場合ですか？

2. 経路の幅は均等であること。
このルールは以下のような迷路を作らないでほしいとい
う意図で作ったルールです。
■■■■■■■■■■■
■　　　　　　　■　■
■　ド　■　■■■　■
■　ォ　■　■　　　■
■　ォ　■■■■■　■
■　ン　■　　　　　■
■　！　■　■　広　■
■　　　■　■　過　■
■　■　■　■　ぎ　■
■　■　　　■　　　■
■■■■■■■■■■■

&gt; このプログラムがルールを満たしているということは、
&gt; 壁か、通路か未定の部分をあらかじめどちらかに固定
&gt; した部分があってもよいということですか？

そのとおりです。
あらかじめの固定を禁止するルールを作らなかったのを
後悔しています(笑)

とはいえ、解いて面白い迷路が出来上がるなら固定もア
リかなと思ってます。
その点katsuさんのプログラムが作り出す迷路はあんまり
面白くなさそうなのでちょっと残念です。

&gt; このプログラムを他の投稿プログラムと区別している
&gt; ようにみえますが、ルール以外に区別する「なにか」
&gt; があるのですか？

評価した人ごとに理由があると思いますが、おそらく
　・解いて面白い迷路を作るべき
　・固定を禁止するルールがある
といった思い込みを持っていたところに、思い込みに反
した解決策が示されて、
　「こりゃ一本とられたよ」
という気持ちが他の投稿プログラムと区別してるんじゃ
ないでしょうか？

</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5313/addtag/" class="addtag" id="addtag_5313">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5313"
  >-</span><span
  class="button yellow"
  id="rating_z_5313"
  >0</span><span 
  class="button green"
  id="rating_p_5313"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5308/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5313/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5313/">
    1
    reply
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5313/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5327">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/606/" target="_top">pooq</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5327/">#5327</a>(<script language="JavaScript">print_time(new Date("2008/01/15 04:01 GMT"));</script><noscript>2008/01/15 04:01 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  私の方もうまく聞きたいことを伝えられないようで。<br/>もうすこしだけ。下の例は、どうなりますか？<br/>１　　　　　　　　　２　　　　　　　　　３<br/>■■■■■　　■■■■■　　■■■■■<br/>■□□□■　　■□■■■　　■□□□■<br/>■■□■■　　■□■■■　　■□□□■<br/>■□□□■　　■□□□■　　■□□□■<br/>■■■■■　　■■■■■　　■■■■■<br/><br/>４<br/>■■■■■■■■■■■<br/>■□□□■□□□□□■<br/>■□□□■□□□□□■<br/>■□□□■□□□□□■<br/>■□□□■■■□□□■<br/>■□□□□□□□□□■<br/>■□□□□□□□□□■<br/>■□□□□□□□□□■<br/>■■■■■■■■■■■<br/><br/>なんか空白にすると詰まってしまうので□にしました。<br/>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5327/addtag/" class="addtag" id="addtag_5327">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5327"
  >-</span><span
  class="button yellow"
  id="rating_z_5327"
  >0</span><span 
  class="button green"
  id="rating_p_5327"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5313/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5327/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5327/">
    1
    reply
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5327/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5328">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/643/" target="_top">squld</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5328/">#5328</a>(<script language="JavaScript">print_time(new Date("2008/01/15 07:52 GMT"));</script><noscript>2008/01/15 07:52 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>&gt; もうすこしだけ。下の例は、どうなりますか？

あ～。理解しました。

下の大きさの迷路の場合、★の位置が必ず柱(通過不能)になることを望んでいます。
■■■■■■■■■■■
■□□□□□□□□□■
■□★□★□★□★□■
■□□□□□□□□□■
■□★□★□★□★□■
■□□□□□□□□□■
■□★□★□★□★□■
■□□□□□□□□□■
■■■■■■■■■■■
自分でも「格子状」っていう言葉を深く考えてませんでした。

また、塗りつぶされた領域ができないことも望んでいます。
■■■■■■■■■■■
■□□□□□□□■■■
■□■■■■■■■■■
■□■■■□■■■■■
■□■■■□■■■■■
■□□□□□□□□□■
■□★□★□★□★□■
■□□□□□□□□□■
■■■■■■■■■■■
こんなんとかダメです。
これは、到達不可能な箇所を壁にしてお茶を濁したと見ることもできますね。

ルールにボロが出てますね・・・orz
それでも、多くの人には一応意図が伝わってたみたいでよかった。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5328/addtag/" class="addtag" id="addtag_5328">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5328"
  >-</span><span
  class="button yellow"
  id="rating_z_5328"
  >0</span><span 
  class="button green"
  id="rating_p_5328"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5327/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5328/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5328/">
    1
    reply
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5328/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5329">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/606/" target="_top">pooq</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5329/">#5329</a>(<script language="JavaScript">print_time(new Date("2008/01/15 10:56 GMT"));</script><noscript>2008/01/15 10:56 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>すばやい回答ありがとうございます。
やっとわかりました。
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5329/addtag/" class="addtag" id="addtag_5329">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5329"
  >-</span><span
  class="button yellow"
  id="rating_z_5329"
  >0</span><span 
  class="button green"
  id="rating_p_5329"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5328/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081122163650/http://ja.doukaku.org/comment/5329/root/"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5329/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


    </div>
  


  

  

  
    





<div class="comment" id="comment5286">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/642/" target="_top">saws</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5286/">#5286</a>(<script language="JavaScript">print_time(new Date("2008/01/12 18:05 GMT"));</script><noscript>2008/01/12 18:05 GMT</noscript>)
	
	
	
	[<a href="/web/20081122163650/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>棒倒し法で実装しました. 
1024 x 1024の迷路生成に約48秒 (CPU: Intel P4 Northwood 2.8 GHz) かかりました. 
mapメソッドとgen_wallメソッドの処理の1行目のコメントは, 各メソッドの1行バージョンです. 
全体をone-lineにする方法が見つからなかったのでせめてもの抵抗ということで. </pre>
	</div>
	
	<p class="link">
	  see: <a href="/web/20081122163650/http://uk.geocities.com/sugar777pe/arugo/maze1.html">アルゴリズム講座:棒倒し法</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;matrix&#39;</span>
<span class="n">N</span><span class="p">,</span> <span class="n">M</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span>
<span class="k">class</span> <span class="nc">Maze</span>
  <span class="no">MARK</span><span class="p">,</span> <span class="no">SPC</span> <span class="o">=</span> <span class="s1">&#39;*&#39;</span><span class="p">,</span> <span class="s1">&#39; &#39;</span>
  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">)</span> <span class="c1">#基準点を生成し, その上と左の壁の有無と真理値が対応. </span>
    <span class="vi">@map</span> <span class="o">=</span> <span class="no">Matrix</span><span class="o">[*</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@n</span> <span class="o">=</span> <span class="n">n</span><span class="p">){</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@m</span> <span class="o">=</span> <span class="n">m</span><span class="p">)}</span><span class="o">].</span><span class="n">map</span><span class="p">{</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="p">)}</span>
    <span class="n">gen_maze</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">map</span> <span class="c1">#得たマップデータを対応する記号で表現</span>
    <span class="c1">#Array.new(2*@n-1){|i| Array.new(2*@m-1){|j| i%2 == j%2 ? (i%2 == 1 ? MARK : SPC) : (@map[i.div(2), j.div(2)][i%2] ? MARK : SPC)}.unshift(MARK).push(&quot;#{MARK}\n&quot;)}.unshift(str = &quot;#{MARK*(2*@m+1)}\n&quot;).push(str).join</span>
    <span class="nb">print</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">MARK</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="vi">@m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
    <span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="vi">@n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
      <span class="nb">print</span> <span class="no">MARK</span>
      <span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="vi">@m</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">j</span><span class="o">|</span>
        <span class="k">if</span> <span class="n">i</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="n">j</span><span class="o">%</span><span class="mi">2</span>
          <span class="nb">print</span> <span class="n">i</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">?</span> <span class="no">MARK</span> <span class="p">:</span> <span class="no">SPC</span>
        <span class="k">else</span>
          <span class="nb">print</span> <span class="vi">@map</span><span class="o">[</span><span class="n">i</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="n">j</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">][</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">]</span> <span class="p">?</span> <span class="no">MARK</span> <span class="p">:</span> <span class="no">SPC</span>
        <span class="k">end</span>
      <span class="p">}</span>
      <span class="nb">print</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">MARK</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
    <span class="p">}</span>
    <span class="nb">print</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">MARK</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="vi">@m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">gen_maze</span> <span class="c1">#左端の列だけ4種の壁がランダムで生成. 他は3種のみ. </span>
    <span class="p">(</span><span class="vi">@m</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">j</span><span class="o">|</span> <span class="p">(</span><span class="vi">@n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">gen_wall</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="p">(</span><span class="n">j</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">?</span> <span class="mi">4</span> <span class="p">:</span> <span class="mi">3</span><span class="p">))}}</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">gen_wall</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span> <span class="c1">#ランダムに壁を生成. もし壁がすでにあれば再帰. </span>
    <span class="c1">#@map[x = i+((r=rand(n))==1 ? 1 : 0), y = j+(r==2 ? 1 : 0)][r%2] ? gen_wall(i, j, n) : @map[x, y][r%2] = true</span>
    <span class="k">case</span> <span class="nb">rand</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
    <span class="k">when</span> <span class="mi">0</span><span class="p">:</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">k</span> <span class="o">=</span> <span class="n">i</span><span class="p">,</span>   <span class="n">j</span><span class="p">,</span> <span class="mi">0</span> <span class="c1">#上</span>
    <span class="k">when</span> <span class="mi">1</span><span class="p">:</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">k</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="mi">0</span> <span class="c1">#下</span>
    <span class="k">when</span> <span class="mi">2</span><span class="p">:</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">k</span> <span class="o">=</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span> <span class="c1">#右</span>
    <span class="k">when</span> <span class="mi">3</span><span class="p">:</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">k</span> <span class="o">=</span> <span class="n">i</span><span class="p">,</span>   <span class="n">j</span><span class="p">,</span> <span class="mi">1</span> <span class="c1">#左</span>
    <span class="k">end</span>
    <span class="vi">@map</span><span class="o">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">][</span><span class="n">k</span><span class="o">]</span> <span class="p">?</span> <span class="n">gen_wall</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span> <span class="p">:</span> <span class="vi">@map</span><span class="o">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">][</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="kp">true</span>
  <span class="k">end</span>
  <span class="kp">private</span> <span class="ss">:gen_maze</span><span class="p">,</span> <span class="ss">:gen_wall</span>
<span class="k">end</span>
<span class="n">maze</span> <span class="o">=</span> <span class="no">Maze</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">N</span><span class="p">,</span> <span class="n">M</span><span class="p">)</span>
<span class="n">maze</span><span class="o">.</span><span class="n">gen_maze</span>
<span class="n">maze</span><span class="o">.</span><span class="n">map</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5286/addtag/" class="addtag" id="addtag_5286">Tags</a>:
	
    
    <a href="/web/20081122163650/http://ja.doukaku.org/tag/1.8.6/">1.8.6</a>
    
    <a href="/web/20081122163650/http://ja.doukaku.org/tag/i386-mswin32/">i386-mswin32</a>
    
	&nbsp;

	
      [<a href="/web/20081122163650/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5286/download/">
		download code
      </a>]
	  [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5286/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5286"
  >-</span><span
  class="button yellow"
  id="rating_z_5286"
  >0</span><span 
  class="button green"
  id="rating_p_5286"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5286/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5287">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5287/">#5287</a>(<script language="JavaScript">print_time(new Date("2008/01/12 18:13 GMT"));</script><noscript>2008/01/12 18:13 GMT</noscript>)
	
	
	
	[<a href="/web/20081122163650/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  はじめまして、通りすがりです。<br/><br/>懐かしいお題だったので、勢いで作ってみました。一応、テストはしましたけど、まだバグってるかも知れません。<br/><br/>開発環境は、<br/>・東芝のノート：AX/530LL＋Mem512（=７０４位）・VC＋＋２００８　Express（C++＆STL）・6時間くらいの時間。<br/><br/>実行環境。<br/>・上記の機材。・速度向け最適化。・リリースビルド。<br/>＝＞ファイルにリダイレクトで3秒位でした。迷路の生成自体は1秒ちょいってとこじゃないでしょうか。<br/>えぇーっと、ライブラリが良いのと、ネーティブコードなのでアドバンテージとれてるかもしれないです。<br/><br/>注意ですけど、最初にがーっとメモリ取るので環境によってはあんまり好ましくない動作をするかもしれません。ウチでは大丈夫というのはあてになりませんので。。。<br/><br/>長くなりましたけど、面白かったです。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;vector&gt;</span>
<span class="cp">#include &lt;algorithm&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;time.h&gt;</span>
<span class="cp">#include &lt;stdexcept&gt;</span>
<span class="k">class</span> <span class="nc">Maze_t</span><span class="p">{</span>
    <span class="k">typedef</span> <span class="kt">unsigned</span> <span class="kt">short</span> <span class="n">MazeElement</span><span class="p">;</span>
    <span class="k">typedef</span> <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">MazeElement</span><span class="o">&gt;</span> <span class="n">maze_t</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">Width_</span><span class="p">,</span><span class="n">Height_</span><span class="p">;</span>
    <span class="n">maze_t</span> <span class="n">Data</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">Point2</span><span class="p">{</span>
        <span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">;</span>
        <span class="kt">void</span> <span class="n">ToZero</span><span class="p">(){</span><span class="n">x</span><span class="o">=</span><span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;}</span>
        <span class="kt">void</span> <span class="n">Set</span><span class="p">(</span><span class="kt">int</span> <span class="n">x_</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y_</span><span class="p">){</span><span class="n">x</span><span class="o">=</span><span class="n">x_</span><span class="p">;</span> <span class="n">y</span><span class="o">=</span><span class="n">y_</span><span class="p">;}</span>
    <span class="p">};</span>
    
<span class="k">public</span><span class="o">:</span>
    <span class="k">enum</span> <span class="n">Flags</span><span class="p">{</span>
        <span class="n">Left</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
        <span class="n">Up</span><span class="p">,</span>
        <span class="n">Right</span><span class="p">,</span>
        <span class="n">Down</span><span class="p">,</span>
        <span class="n">Visit</span><span class="p">,</span>
    <span class="p">};</span>
    <span class="n">Maze_t</span><span class="p">(</span><span class="n">size_t</span> <span class="n">W</span><span class="p">,</span><span class="n">size_t</span> <span class="n">H</span><span class="p">){</span>
        <span class="n">Create</span><span class="p">(</span><span class="n">W</span><span class="p">,</span><span class="n">H</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="kt">void</span> <span class="n">Create</span><span class="p">(</span><span class="n">size_t</span> <span class="n">W</span><span class="p">,</span><span class="n">size_t</span> <span class="n">H</span><span class="p">){</span>
        <span class="n">Destroy</span><span class="p">();</span>
        <span class="n">Width_</span><span class="o">=</span><span class="n">W</span><span class="p">;</span><span class="n">Height_</span><span class="o">=</span><span class="n">H</span><span class="p">;</span>
        <span class="n">Data</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">W</span><span class="o">*</span><span class="n">H</span><span class="p">);</span>
        <span class="n">std</span><span class="o">::</span><span class="n">fill</span><span class="p">(</span><span class="n">Data</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">Data</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="kt">int</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>
        <span class="n">Generate</span><span class="p">();</span>
    <span class="p">}</span>
    <span class="kt">void</span> <span class="n">Destroy</span><span class="p">(){</span>
        <span class="n">Data</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
        <span class="n">Width_</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="n">Height_</span><span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">Width</span><span class="p">(){</span> <span class="k">return</span> <span class="n">Width_</span><span class="p">;}</span>
    <span class="kt">int</span> <span class="n">Height</span><span class="p">(){</span> <span class="k">return</span> <span class="n">Height_</span><span class="p">;}</span>
    <span class="n">MazeElement</span> <span class="n">WallInfo</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">CanVisit</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">))</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span> 
        <span class="k">return</span> <span class="n">GetElement</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">);</span>
    <span class="p">}</span>
<span class="k">protected</span><span class="o">:</span>
    <span class="kt">bool</span> <span class="n">CanVisit</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">x</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">y</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Width</span><span class="p">()</span><span class="o">&lt;=</span><span class="n">x</span><span class="p">)</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Height</span><span class="p">()</span><span class="o">&lt;=</span><span class="n">y</span><span class="p">)</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
        <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kt">bool</span> <span class="n">AlreadyVisit</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">CanVisit</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">))</span> <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">GetElement</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span><span class="o">&gt;&gt;</span><span class="n">Visit</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kt">void</span> <span class="n">MarkVisit</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">CanVisit</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span> <span class="o">==</span> <span class="kc">false</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
        <span class="n">MazeElement</span><span class="o">&amp;</span> <span class="n">Me</span> <span class="o">=</span> <span class="n">GetElement</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">);</span>
        <span class="n">Me</span> <span class="o">=</span> <span class="n">Me</span> <span class="o">|</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">Visit</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">MazeElement</span><span class="o">&amp;</span> <span class="n">GetElement</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">){</span>
        <span class="k">return</span> <span class="n">Data</span><span class="p">[</span><span class="n">Width</span><span class="p">()</span><span class="o">*</span><span class="n">y</span><span class="o">+</span><span class="n">x</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="kt">void</span> <span class="n">EraseWall</span><span class="p">(</span><span class="n">Point2</span> <span class="n">Base</span><span class="p">,</span><span class="n">Point2</span> <span class="n">To</span><span class="p">,</span><span class="kt">int</span> <span class="n">command</span><span class="p">){</span>
        <span class="kt">char</span> <span class="n">Flg1</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="n">Left</span><span class="p">,</span><span class="n">Up</span><span class="p">,</span><span class="n">Right</span><span class="p">,</span><span class="n">Down</span><span class="p">};</span>
        <span class="kt">char</span> <span class="n">Flg2</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="n">Right</span><span class="p">,</span><span class="n">Down</span><span class="p">,</span><span class="n">Left</span><span class="p">,</span><span class="n">Up</span><span class="p">};</span>
        <span class="n">MazeElement</span><span class="o">*</span> <span class="n">p</span><span class="p">;</span>
        <span class="n">p</span> <span class="o">=</span> <span class="o">&amp;</span><span class="p">(</span><span class="n">GetElement</span><span class="p">(</span><span class="n">Base</span><span class="p">.</span><span class="n">x</span><span class="p">,</span><span class="n">Base</span><span class="p">.</span><span class="n">y</span><span class="p">));</span>
        <span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">Flg1</span><span class="p">[</span><span class="n">command</span><span class="p">]);</span>
        <span class="n">p</span> <span class="o">=</span> <span class="o">&amp;</span><span class="p">(</span><span class="n">GetElement</span><span class="p">(</span><span class="n">Base</span><span class="p">.</span><span class="n">x</span><span class="o">+</span><span class="n">To</span><span class="p">.</span><span class="n">x</span><span class="p">,</span><span class="n">Base</span><span class="p">.</span><span class="n">y</span><span class="o">+</span><span class="n">To</span><span class="p">.</span><span class="n">y</span><span class="p">));</span>
        <span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">Flg2</span><span class="p">[</span><span class="n">command</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="k">struct</span> <span class="n">Uni</span><span class="p">{</span>
        <span class="k">union</span><span class="p">{</span>
            <span class="kt">int</span> <span class="n">Int</span><span class="p">;</span>
            <span class="kt">char</span> <span class="n">Char</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>
        <span class="p">};</span>
    <span class="p">};</span>
    <span class="kt">void</span> <span class="n">Generate</span><span class="p">(){</span><span class="c">//メモリ等確保後に実行しないと不整合起こします。つまり単体で使用しないでください。Create関数がエントリです。</span>
        <span class="n">Point2</span> <span class="n">V</span><span class="p">[]</span><span class="o">=</span><span class="p">{{</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">},{</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">},{</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">},{</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">}};</span>
        <span class="n">Point2</span> <span class="n">T</span><span class="o">=</span><span class="p">{</span><span class="n">rand</span><span class="p">()</span><span class="o">%</span><span class="n">Width</span><span class="p">(),</span><span class="n">rand</span><span class="p">()</span><span class="o">%</span><span class="n">Height</span><span class="p">()};</span>
        <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">Point2</span><span class="o">&gt;</span> <span class="n">pov</span><span class="p">;</span>
        <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">command</span><span class="p">;</span>
        <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">rotate</span><span class="p">;</span>
        <span class="n">Uni</span> <span class="n">U</span><span class="p">;</span>
        <span class="n">U</span><span class="p">.</span><span class="n">Int</span> <span class="o">=</span> <span class="mh">0x03020100</span><span class="p">;</span>
        <span class="n">std</span><span class="o">::</span><span class="n">random_shuffle</span><span class="p">(</span><span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">,</span><span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="o">+</span><span class="mi">4</span><span class="p">);</span>
        <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
        <span class="n">pov</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">T</span><span class="p">);</span>
        <span class="n">command</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
        <span class="n">rotate</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">U</span><span class="p">.</span><span class="n">Int</span><span class="p">);</span>
        <span class="n">MarkVisit</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">x</span><span class="p">,</span><span class="n">T</span><span class="p">.</span><span class="n">y</span><span class="p">);</span>
        <span class="k">while</span><span class="p">(</span><span class="n">pov</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">){</span>
            <span class="n">T</span> <span class="o">=</span> <span class="n">pov</span><span class="p">.</span><span class="n">back</span><span class="p">();</span>
            <span class="n">i</span> <span class="o">=</span> <span class="n">command</span><span class="p">.</span><span class="n">back</span><span class="p">();</span>
            <span class="n">U</span><span class="p">.</span><span class="n">Int</span> <span class="o">=</span> <span class="n">rotate</span><span class="p">.</span><span class="n">back</span><span class="p">();</span>
            <span class="k">for</span><span class="p">(;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">4</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
                <span class="k">if</span><span class="p">(</span><span class="n">CanVisit</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">x</span><span class="o">+</span><span class="n">V</span><span class="p">[</span> <span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">x</span><span class="p">,</span><span class="n">T</span><span class="p">.</span><span class="n">y</span><span class="o">+</span><span class="n">V</span><span class="p">[</span> <span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">y</span><span class="p">)){</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">AlreadyVisit</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">x</span><span class="o">+</span><span class="n">V</span><span class="p">[</span> <span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">x</span><span class="p">,</span><span class="n">T</span><span class="p">.</span><span class="n">y</span><span class="o">+</span><span class="n">V</span><span class="p">[</span> <span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">y</span><span class="p">))</span> <span class="k">continue</span><span class="p">;</span>
                    <span class="n">MarkVisit</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">x</span><span class="o">+</span><span class="n">V</span><span class="p">[</span> <span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">x</span><span class="p">,</span><span class="n">T</span><span class="p">.</span><span class="n">y</span><span class="o">+</span><span class="n">V</span><span class="p">[</span> <span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">y</span><span class="p">);</span>
                    <span class="n">EraseWall</span><span class="p">(</span><span class="n">T</span><span class="p">,</span><span class="n">V</span><span class="p">[</span> <span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">[</span><span class="n">i</span><span class="p">]],</span> <span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
                    <span class="n">T</span><span class="p">.</span><span class="n">x</span><span class="o">=</span><span class="n">T</span><span class="p">.</span><span class="n">x</span><span class="o">+</span><span class="n">V</span><span class="p">[</span> <span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">x</span><span class="p">;</span>
                    <span class="n">T</span><span class="p">.</span><span class="n">y</span><span class="o">=</span><span class="n">T</span><span class="p">.</span><span class="n">y</span><span class="o">+</span><span class="n">V</span><span class="p">[</span> <span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">[</span><span class="n">i</span><span class="p">]].</span><span class="n">y</span><span class="p">;</span>
                    <span class="n">pov</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">T</span><span class="p">);</span>
                    <span class="n">command</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
                    <span class="n">rotate</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">U</span><span class="p">.</span><span class="n">Int</span><span class="p">);</span>
                    <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
                    <span class="n">std</span><span class="o">::</span><span class="n">random_shuffle</span><span class="p">(</span><span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="p">,</span><span class="n">U</span><span class="p">.</span><span class="n">Char</span><span class="o">+</span><span class="mi">4</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="n">pov</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
            <span class="n">command</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
            <span class="n">rotate</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">};</span>
<span class="kt">void</span> <span class="n">PrintMaze</span><span class="p">(</span><span class="n">Maze_t</span><span class="o">&amp;</span> <span class="n">M</span><span class="p">){</span>
    <span class="kt">char</span> <span class="n">W</span><span class="o">=</span><span class="sc">&#39;W&#39;</span><span class="p">,</span><span class="n">R</span><span class="o">=</span><span class="sc">&#39; &#39;</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">M</span><span class="p">.</span><span class="n">Height</span><span class="p">();</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">){</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">M</span><span class="p">.</span><span class="n">Width</span><span class="p">();</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
                <span class="kt">int</span> <span class="n">wall</span> <span class="o">=</span> <span class="n">M</span><span class="p">.</span><span class="n">WallInfo</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%c%c%c&quot;</span><span class="p">,</span><span class="n">W</span><span class="p">,</span> <span class="p">((</span><span class="n">wall</span><span class="o">&gt;&gt;</span><span class="n">M</span><span class="p">.</span><span class="n">Down</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span> <span class="nl">R:</span><span class="n">W</span><span class="p">,</span> <span class="n">W</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%c%c%c&quot;</span><span class="p">,((</span><span class="n">wall</span><span class="o">&gt;&gt;</span><span class="n">M</span><span class="p">.</span><span class="n">Left</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span> <span class="nl">R:</span><span class="n">W</span><span class="p">,</span> <span class="p">((</span><span class="n">wall</span><span class="o">&gt;&gt;</span><span class="n">M</span><span class="p">.</span><span class="n">Visit</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span> <span class="nl">R:</span><span class="n">W</span><span class="p">,</span> <span class="p">((</span><span class="n">wall</span><span class="o">&gt;&gt;</span><span class="n">M</span><span class="p">.</span><span class="n">Right</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span> <span class="nl">R:</span><span class="n">W</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">==</span><span class="mi">2</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%c%c%c&quot;</span><span class="p">,</span><span class="n">W</span><span class="p">,</span> <span class="p">((</span><span class="n">wall</span><span class="o">&gt;&gt;</span><span class="n">M</span><span class="p">.</span><span class="n">Up</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span> <span class="nl">R:</span><span class="n">W</span><span class="p">,</span> <span class="n">W</span><span class="p">);</span>            
            <span class="p">}</span>
            <span class="n">puts</span><span class="p">(</span><span class="s">&quot;&quot;</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="n">PrintMaze2</span><span class="p">(</span><span class="n">Maze_t</span><span class="o">&amp;</span> <span class="n">M</span><span class="p">){</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">W</span><span class="o">=</span><span class="s">&quot;■&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">R</span><span class="o">=</span><span class="s">&quot;　&quot;</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">M</span><span class="p">.</span><span class="n">Width</span><span class="p">();</span><span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s%s&quot;</span><span class="p">,</span><span class="n">W</span><span class="p">,</span><span class="n">W</span><span class="p">);</span>
    <span class="n">puts</span><span class="p">(</span><span class="n">W</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">M</span><span class="p">.</span><span class="n">Height</span><span class="p">();</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">){</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span><span class="n">W</span><span class="p">);</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">M</span><span class="p">.</span><span class="n">Width</span><span class="p">();</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
                <span class="kt">int</span> <span class="n">wall</span> <span class="o">=</span> <span class="n">M</span><span class="p">.</span><span class="n">WallInfo</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s%s&quot;</span><span class="p">,</span> <span class="p">((</span><span class="n">wall</span><span class="o">&gt;&gt;</span><span class="n">M</span><span class="p">.</span><span class="n">Down</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span> <span class="nl">R:</span><span class="n">W</span><span class="p">,</span> <span class="n">W</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s%s&quot;</span><span class="p">,</span> <span class="p">((</span><span class="n">wall</span><span class="o">&gt;&gt;</span><span class="n">M</span><span class="p">.</span><span class="n">Visit</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span> <span class="nl">R:</span><span class="n">W</span><span class="p">,</span> <span class="p">((</span><span class="n">wall</span><span class="o">&gt;&gt;</span><span class="n">M</span><span class="p">.</span><span class="n">Right</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span> <span class="nl">R:</span><span class="n">W</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">==</span><span class="mi">2</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s%s&quot;</span><span class="p">,</span> <span class="p">((</span><span class="n">wall</span><span class="o">&gt;&gt;</span><span class="n">M</span><span class="p">.</span><span class="n">Up</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span> <span class="nl">R:</span><span class="n">W</span><span class="p">,</span> <span class="n">W</span><span class="p">);</span>            
            <span class="p">}</span>
            <span class="n">puts</span><span class="p">(</span><span class="s">&quot;&quot;</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
    <span class="c">//srand(100);</span>
    <span class="n">srand</span><span class="p">(</span><span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
    <span class="n">Maze_t</span> <span class="n">m</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">6</span><span class="p">);</span>
    <span class="c">//Maze_t m(1024,1024);</span>
    <span class="n">PrintMaze2</span><span class="p">(</span><span class="n">m</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5287/addtag/" class="addtag" id="addtag_5287">Tags</a>:
	
    
    <a href="/web/20081122163650/http://ja.doukaku.org/tag/C%2B%2B/">C++</a>
    
    <a href="/web/20081122163650/http://ja.doukaku.org/tag/Maze/">Maze</a>
    
    <a href="/web/20081122163650/http://ja.doukaku.org/tag/Vc9Express/">Vc9Express</a>
    
	&nbsp;

	
      [<a href="/web/20081122163650/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5287/download/">
		download code
      </a>]
	  [<a href="/web/20081122163650/http://ja.doukaku.org/comment/5287/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5287"
  >-</span><span
  class="button yellow"
  id="rating_z_5287"
  >0</span><span 
  class="button green"
  id="rating_p_5287"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081122163650/http://ja.doukaku.org/comment/5287/">
    3
    replies
  </a>

  [<a href="/web/20081122163650/http://ja.doukaku.org/123/reply_to/5287/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment5291">
  <p class="banner"><a href="/web/20081122163650/http://ja.doukaku.org/user/643/" target="_top">squld</a><a href="/web/20081122163650/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081122163650im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081122163650/http://ja.doukaku.org/comment/5291/">#5291</a>(<script language="JavaScript">pri




<!--
     FILE ARCHIVED ON 16:36:50 Nov 22, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:57:32 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
