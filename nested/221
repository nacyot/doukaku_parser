
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
道順を数える
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20090103084240cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20090103084240cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20090103084240cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20090103084240/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20090103084240/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20090103084240js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20090103084240js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20090103084240js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20090103084240js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app19.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/221\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "3";
var displayMonth = "Jan";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/221/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090103084240" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Dec
                       
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 8:42:40 Jan 3, 2009">JAN</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Feb
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_prv_off.png" alt="Previous capture" width="14" height="16" border="0" />
                       
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 8:42:40 Jan 3, 2009">3</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2008
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 8:42:40 Jan 3, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20090103084240*/http://ja.doukaku.org/221/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>1 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">3 Jan 09 - 3 Jan 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:0:100000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20090103084240/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20090103084240im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20090103084240/http://ja.doukaku.org/221/">道順を数える</a>
</h2>

    





<div class="comment" id="comment8127">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/833/" target="_top">mattsan</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8127/">#8127</a>(<script language="JavaScript">print_time(new Date("2008/12/07 23:12 GMT"));</script><noscript>2008/12/07 23:12 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffbf;">2/4=0.50</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  図.1のような。格子状の経路があるとします。<br/><br/>(1)&nbsp;&nbsp;このときPからQまでいくのに何通りの経路があるか数えてください。ただし遠回りはせずかならずQに近づく方向に進む(右方向か下方向にだけ進む)とします。<br/><br/>(2)&nbsp;&nbsp;(1)と条件は同じで、図.2のように経路の一部がない(通れない)場合に、PからQまでいくのに何通りの経路があるか数えてください。<br/><br/>P-+-+-+&nbsp;&nbsp;&nbsp;&nbsp;P-+-+-+<br/>|&nbsp;|&nbsp;|&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;|&nbsp;|&nbsp;|<br/>+-+-+-+&nbsp;&nbsp;&nbsp;&nbsp;+-+-+-+<br/>|&nbsp;|&nbsp;|&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;|&nbsp;|<br/>+-+-+-+&nbsp;&nbsp;&nbsp;&nbsp;+-+-+&nbsp;+<br/>|&nbsp;|&nbsp;|&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;|&nbsp;|&nbsp;|<br/>+-+-+-+&nbsp;&nbsp;&nbsp;&nbsp;+-+&nbsp;+-+<br/>|&nbsp;|&nbsp;|&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;|&nbsp;|&nbsp;|<br/>+-+-+-Q&nbsp;&nbsp;&nbsp;&nbsp;+-+-+-Q<br/>&nbsp;&nbsp;図.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;図.2<br/><br/>経路の表現の仕方、記憶の仕方は自由とします。上記のようなキャラクタでの表現でもよいですし、最初からプログラムで扱いやすいデータとして持っていてもOKです。入力も外部からの入力でもよいですし、プログラム中にコーディングされていてもOKです。<br/><br/><br/>※問題は、野﨑昭弘「離散数学『数え上げ理論』」(講談社&nbsp;ブルーバックス)「第3章&nbsp;道順を数える」から拝借させて頂きました。<br/>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8127/addtag/" class="addtag" id="addtag_8127">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #dfffbf;"
  >2/4=0.50</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8127"
  >-</span><span
  class="button yellow"
  id="rating_z_8127"
  >0</span><span 
  class="button green"
  id="rating_p_8127"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8127/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20090103084240/http://ja.doukaku.org/221/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20090103084240/http://ja.doukaku.org/221/flatten/">フラット表示</a> 
<a href="/web/20090103084240/http://ja.doukaku.org/221/">非表示</a> 


  

  
    





<div class="comment" id="comment8140">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8140/">#8140</a>(<script language="JavaScript">print_time(new Date("2008/12/12 18:25 GMT"));</script><noscript>2008/12/12 18:25 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>単純な DP で。幅、高さ、通れない道を受け取って経路の数を返します。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre>(defun count-paths (width height &amp;rest edges-na)
  (let ((table (make-array (list height width) :initial-element 0)))
    (dotimes (h height)
      (dotimes (w width)
        (if (or (zerop w) (zerop h))
            (setf (aref table h w) 1)
          (progn
            (unless (find (list (1- w) h w h) edges-na :test #&#39;equal)
              (incf (aref table h w) (aref table h (1- w))))
            (unless (find (list w (1- h) w h) edges-na :test #&#39;equal)
              (incf (aref table h w) (aref table (1- h) w)))))))
    ;; (print table)
    (aref table (1- height) (1- width))
    ))

;; test
(count-paths 4 5)
(count-paths 4 5 &#39;(1 1 1 2) &#39;(2 2 3 2) &#39;(1 3 2 3))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8140/addtag/" class="addtag" id="addtag_8140">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8140/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8140/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8140"
  >-</span><span
  class="button yellow"
  id="rating_z_8140"
  >0</span><span 
  class="button green"
  id="rating_p_8140"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090103084240/http://ja.doukaku.org/comment/8140/">
    1
    reply
  </a>

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8140/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8141">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8141/">#8141</a>(<script language="JavaScript">print_time(new Date("2008/12/13 01:09 GMT"));</script><noscript>2008/12/13 01:09 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ごめんなさいバグがありました。</p>
<p>(count-paths 4 5 '(0 0 0 1) '(0 0 1 0))
が 35 になってました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre>(defun count-paths (width height &amp;rest edges-na)
  (let ((table (make-array (list height width) :initial-element 0)))
    (setf (aref table 0 0) 1)
    (dotimes (h height)
      (dotimes (w width)
        (or (zerop w)
            (find (list (1- w) h w h) edges-na :test #&#39;equal)
            (incf (aref table h w) (aref table h (1- w))))
        (or (zerop h)
            (find (list w (1- h) w h) edges-na :test #&#39;equal)
            (incf (aref table h w) (aref table (1- h) w)))))
    (aref table (1- height) (1- width))))

(count-paths 4 5 &#39;(0 0 0 1) &#39;(0 0 1 0)) ; =&gt; 0
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8141/addtag/" class="addtag" id="addtag_8141">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8141/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8141/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8141"
  >-</span><span
  class="button yellow"
  id="rating_z_8141"
  >0</span><span 
  class="button green"
  id="rating_p_8141"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090103084240/http://ja.doukaku.org/comment/8140/"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090103084240/http://ja.doukaku.org/comment/8141/root/"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8141/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment8142">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/549/" target="_top">cappuccino</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8142/">#8142</a>(<script language="JavaScript">print_time(new Date("2008/12/12 21:56 GMT"));</script><noscript>2008/12/12 21:56 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ゴール地点の座標をセットして呼び出せば答えが返ってきます。
例 Route1(5, 6)</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="k">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">Route1</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">4</span><span class="p">));</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">Route2</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">4</span><span class="p">));</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">int</span> <span class="nf">Route1</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="c">//スタート地点</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">return</span> <span class="m">1</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="c">//左からのルートと上からのルートの合計</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">x</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="n">Route1</span><span class="p">(</span><span class="n">x</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">:</span> <span class="m">0</span><span class="p">)</span> <span class="p">+</span> <span class="p">(</span><span class="n">y</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="n">Route1</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">:</span> <span class="m">0</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">int</span> <span class="nf">Route2</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">return</span> <span class="m">1</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="c">//ここだけ特別扱い</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="p">==</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">return</span> <span class="n">Route2</span><span class="p">(</span><span class="n">x</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">x</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="n">Route2</span><span class="p">(</span><span class="n">x</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">:</span> <span class="m">0</span><span class="p">)</span> <span class="p">+</span> <span class="p">(</span><span class="n">y</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="n">Route2</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">:</span> <span class="m">0</span><span class="p">);</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8142/addtag/" class="addtag" id="addtag_8142">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8142/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8142/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8142"
  >-</span><span
  class="button yellow"
  id="rating_z_8142"
  >0</span><span 
  class="button green"
  id="rating_p_8142"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090103084240/http://ja.doukaku.org/comment/8142/">
    1
    reply
  </a>

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8142/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8146">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/549/" target="_top">cappuccino</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8146/">#8146</a>(<script language="JavaScript">print_time(new Date("2008/12/13 03:10 GMT"));</script><noscript>2008/12/13 03:10 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>図２を見間違えてました。</p>
<p>図１  35</p>
<p>図２  15</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="k">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">Route1</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">4</span><span class="p">));</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">Route2</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">4</span><span class="p">));</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">int</span> <span class="nf">Route1</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="c">//スタート地点</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">return</span> <span class="m">1</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="c">//左からのルートと上からのルートの合計</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">x</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="n">Route1</span><span class="p">(</span><span class="n">x</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">:</span> <span class="m">0</span><span class="p">)</span> <span class="p">+</span> <span class="p">(</span><span class="n">y</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="n">Route1</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">:</span> <span class="m">0</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">int</span> <span class="nf">Route2</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">return</span> <span class="m">1</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="c">//三カ所特別扱い</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="p">==</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">return</span> <span class="n">Route2</span><span class="p">(</span><span class="n">x</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
        <span class="k">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="p">==</span> <span class="m">3</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">return</span> <span class="n">Route2</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">-</span> <span class="m">1</span><span class="p">);</span>
        <span class="k">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="p">==</span> <span class="m">2</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">return</span> <span class="n">Route2</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">-</span> <span class="m">1</span><span class="p">);</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">x</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="n">Route2</span><span class="p">(</span><span class="n">x</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">:</span> <span class="m">0</span><span class="p">)</span> <span class="p">+</span> <span class="p">(</span><span class="n">y</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="n">Route2</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">:</span> <span class="m">0</span><span class="p">);</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8146/addtag/" class="addtag" id="addtag_8146">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8146/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8146/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8146"
  >-</span><span
  class="button yellow"
  id="rating_z_8146"
  >0</span><span 
  class="button green"
  id="rating_p_8146"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090103084240/http://ja.doukaku.org/comment/8142/"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090103084240/http://ja.doukaku.org/comment/8146/root/"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8146/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment8144">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/852/" target="_top">emasaka</a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8144/">#8144</a>(<script language="JavaScript">print_time(new Date("2008/12/13 01:35 GMT"));</script><noscript>2008/12/13 01:35 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>標準入力→標準出力です。
左上スタート、右下ゴールに限定しています。

$ cat fig02.txt
P-+-+-+
| | | |
+-+-+-+
|   | |
+-+-+ +
| | | |
+-+ +-+
| | | |
+-+-+-Q
$ bash q221.bash &lt; fig02.txt
15
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre><span class="c">#!/bin/bash</span>

<span class="nv">counts</span><span class="o">=(</span>1<span class="o">)</span>

<span class="k">while </span><span class="nb">true</span>; <span class="k">do</span>
    <span class="c"># horizontal bars</span>
    <span class="nb">read</span> -r line || <span class="nb">break</span>
<span class="nb">    </span><span class="k">for</span> <span class="o">((</span><span class="nv">i</span> <span class="o">=</span> 0; i * <span class="m">2</span> + <span class="m">1</span> &lt; <span class="k">${#</span><span class="nv">line</span><span class="k">}</span>; i++<span class="o">))</span> <span class="o">{</span>
        <span class="o">[</span> <span class="s2">&quot;${line:$((i*2+1)):1}&quot;</span> <span class="o">=</span> - <span class="o">]</span> &amp;&amp; <span class="o">((</span>counts<span class="o">[</span>i+1<span class="o">]</span> +<span class="o">=</span> counts<span class="o">[</span>i<span class="o">]))</span>
    <span class="o">}</span>

    <span class="c"># vertical bars</span>
    <span class="nb">read</span> -r line || <span class="nb">break</span>
<span class="nb">    </span><span class="k">for</span> <span class="o">((</span><span class="nv">i</span> <span class="o">=</span> 0; i * <span class="m">2</span> &lt; <span class="k">${#</span><span class="nv">line</span><span class="k">}</span>; i++<span class="o">))</span> <span class="o">{</span>
        <span class="o">[</span> <span class="s2">&quot;${line:$((i*2)):1}&quot;</span> <span class="o">=</span> <span class="s1">&#39;|&#39;</span> <span class="o">]</span> || counts<span class="o">[</span>i<span class="o">]=</span>0
    <span class="o">}</span>
<span class="k">done</span>

<span class="nb">echo</span> <span class="k">${</span><span class="nv">counts</span><span class="p">[${#counts[@]</span><span class="k">}</span> - 1<span class="o">]}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8144/addtag/" class="addtag" id="addtag_8144">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8144/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8144/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8144"
  >-</span><span
  class="button yellow"
  id="rating_z_8144"
  >0</span><span 
  class="button green"
  id="rating_p_8144"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8144/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment8149">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8149/">#8149</a>(<script language="JavaScript">print_time(new Date("2008/12/13 06:06 GMT"));</script><noscript>2008/12/13 06:06 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>冗長になってしまいました</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre><span class="n">inc</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">c</span><span class="p">:</span> <span class="nb">chr</span><span class="p">(</span><span class="nb">ord</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">edge_from</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">p</span><span class="p">,</span> <span class="n">points</span><span class="p">,</span> <span class="n">deny</span><span class="p">:</span> \
    <span class="p">[</span> <span class="n">q</span> <span class="k">for</span> <span class="n">q</span> <span class="ow">in</span> <span class="p">[</span><span class="n">inc</span><span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">+</span> <span class="n">p</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">inc</span><span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="mi">1</span><span class="p">])]</span>
            <span class="k">if</span> <span class="n">q</span> <span class="ow">in</span> <span class="n">points</span> <span class="ow">and</span> <span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">q</span><span class="p">)</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">deny</span> <span class="p">]</span>
<span class="n">edges</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">points</span><span class="p">,</span> <span class="n">deny</span><span class="p">:</span> \
    <span class="nb">dict</span><span class="p">([(</span><span class="n">p</span><span class="p">,</span> <span class="p">[</span><span class="n">e</span> <span class="k">for</span> <span class="n">e</span> <span class="ow">in</span> <span class="n">edge_from</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">points</span><span class="p">,</span> <span class="n">deny</span><span class="p">)])</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">points</span> <span class="p">])</span>
<span class="k">def</span> <span class="nf">count_paths</span><span class="p">(</span><span class="n">E</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">goal</span><span class="p">):</span>
    <span class="k">return</span> <span class="mi">1</span> <span class="k">if</span> <span class="n">start</span> <span class="o">==</span> <span class="n">goal</span> \
            <span class="k">else</span> <span class="nb">sum</span><span class="p">([</span><span class="n">count_paths</span><span class="p">(</span><span class="n">E</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">goal</span><span class="p">)</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">E</span><span class="p">[</span><span class="n">start</span><span class="p">]])</span>

<span class="n">points</span> <span class="o">=</span> <span class="p">[</span> <span class="n">row</span> <span class="o">+</span> <span class="n">col</span> <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="s">&#39;ABCDE&#39;</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="s">&#39;1234&#39;</span> <span class="p">]</span>
<span class="n">E1</span> <span class="o">=</span> <span class="n">edges</span><span class="p">(</span><span class="n">points</span><span class="p">,</span> <span class="p">[])</span>
<span class="n">E2</span> <span class="o">=</span> <span class="n">edges</span><span class="p">(</span><span class="n">points</span><span class="p">,</span> <span class="p">[(</span><span class="s">&#39;B2&#39;</span><span class="p">,</span><span class="s">&#39;C2&#39;</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;C3&#39;</span><span class="p">,</span> <span class="s">&#39;C4&#39;</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;D2&#39;</span><span class="p">,</span><span class="s">&#39;D3&#39;</span><span class="p">)])</span>
<span class="k">print</span> <span class="n">count_paths</span><span class="p">(</span><span class="n">E1</span><span class="p">,</span> <span class="s">&#39;A1&#39;</span><span class="p">,</span> <span class="s">&#39;E4&#39;</span><span class="p">)</span>
<span class="k">print</span> <span class="n">count_paths</span><span class="p">(</span><span class="n">E2</span><span class="p">,</span> <span class="s">&#39;A1&#39;</span><span class="p">,</span> <span class="s">&#39;E4&#39;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8149/addtag/" class="addtag" id="addtag_8149">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8149/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8149/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8149"
  >-</span><span
  class="button yellow"
  id="rating_z_8149"
  >0</span><span 
  class="button green"
  id="rating_p_8149"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8149/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8153">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8153/">#8153</a>(<script language="JavaScript">print_time(new Date("2008/12/13 08:59 GMT"));</script><noscript>2008/12/13 08:59 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>あらかじめ道のデータを配列として取り込んでいます。
各点とその上の店、左の点との関係は
　どっちもつながってない(スタート地点)：0
　左の点とだけつながってる：1
　上の点とだけつながってる：2
　左も上もつながってる：3
とし、それぞれの点の状態を見て計算します。
図1の場合はroad[2][1]=3、図2の場合はroad[2][1]=1で計算</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
  <span class="kt">int</span> <span class="n">road</span><span class="p">[</span><span class="mi">5</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
                      <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span>
                      <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span>
                      <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span>
                      <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
                    <span class="p">};</span>

  <span class="kt">int</span> <span class="n">pattern</span><span class="p">[</span><span class="mi">5</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>

  <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
      <span class="k">switch</span><span class="p">(</span><span class="n">road</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]){</span>
      <span class="k">case</span> <span class="mi">0</span><span class="o">:</span> <span class="n">pattern</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
      <span class="k">case</span> <span class="mi">1</span><span class="o">:</span> <span class="n">pattern</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">pattern</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span> <span class="k">break</span><span class="p">;</span>
      <span class="k">case</span> <span class="mi">2</span><span class="o">:</span> <span class="n">pattern</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">pattern</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">];</span> <span class="k">break</span><span class="p">;</span>
      <span class="k">case</span> <span class="mi">3</span><span class="o">:</span> <span class="n">pattern</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">pattern</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">pattern</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">];</span> <span class="k">break</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;road pattern is &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">pattern</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>

  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8153/addtag/" class="addtag" id="addtag_8153">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8153/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8153/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8153"
  >-</span><span
  class="button yellow"
  id="rating_z_8153"
  >0</span><span 
  class="button green"
  id="rating_p_8153"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8153/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8156">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8156/">#8156</a>(<script language="JavaScript">print_time(new Date("2008/12/13 09:48 GMT"));</script><noscript>2008/12/13 09:48 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>与えられていた文字列そのものを受け取って経路数を計算してます。
経路数の計算は単純なDFで。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.HashSet</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Set</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample221</span> <span class="o">{</span>
    <span class="k">static</span> <span class="k">class</span> <span class="nc">RouteNode</span> <span class="o">{</span>
        <span class="k">public</span> <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">RouteNode</span><span class="o">&gt;</span> <span class="n">dests</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">RouteNode</span><span class="o">&gt;();</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">routeCount</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">final</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">RouteNode</span><span class="o">&gt;&gt;</span> <span class="n">nodeMap_</span>
        <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span><span class="n">RouteNode</span><span class="o">&gt;&gt;();</span>
    <span class="k">private</span> <span class="n">RouteNode</span> <span class="n">startNode_</span><span class="o">;</span>
    <span class="k">private</span> <span class="n">RouteNode</span> <span class="n">goalNode_</span><span class="o">;</span>

    <span class="k">public</span> <span class="kt">int</span> <span class="n">countRoute</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">createNode</span><span class="o">(</span><span class="n">map</span><span class="o">);</span>

        <span class="n">Set</span><span class="o">&lt;</span><span class="n">RouteNode</span><span class="o">&gt;</span> <span class="n">checkNodes</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">RouteNode</span><span class="o">&gt;();</span>
        <span class="n">checkNodes</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">startNode_</span><span class="o">);</span>
        <span class="n">startNode_</span><span class="o">.</span><span class="na">routeCount</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(!(</span><span class="n">checkNodes</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">||</span> <span class="n">goalNode_</span><span class="o">.</span><span class="na">routeCount</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">checkNodes</span> <span class="o">=</span> <span class="n">checkNextNode</span><span class="o">(</span><span class="n">checkNodes</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">goalNode_</span><span class="o">.</span><span class="na">routeCount</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">RouteNode</span><span class="o">&gt;</span> <span class="n">checkNextNode</span><span class="o">(</span><span class="n">Set</span><span class="o">&lt;</span><span class="n">RouteNode</span><span class="o">&gt;</span> <span class="n">nodes</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Set</span><span class="o">&lt;</span><span class="n">RouteNode</span><span class="o">&gt;</span> <span class="n">nextNodes</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">RouteNode</span><span class="o">&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">RouteNode</span> <span class="nl">node:</span> <span class="n">nodes</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="n">RouteNode</span> <span class="nl">next:</span> <span class="n">node</span><span class="o">.</span><span class="na">dests</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">next</span><span class="o">.</span><span class="na">routeCount</span> <span class="o">+=</span> <span class="n">node</span><span class="o">.</span><span class="na">routeCount</span><span class="o">;</span>
                <span class="n">nextNodes</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">next</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">nextNodes</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="kt">void</span> <span class="n">createNode</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">createNodeInstance</span><span class="o">(</span><span class="n">map</span><span class="o">);</span>
        <span class="n">createLinkNode</span><span class="o">(</span><span class="n">map</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">void</span> <span class="n">createNodeInstance</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">rowMax</span> <span class="o">=</span> <span class="o">(</span><span class="n">map</span><span class="o">.</span><span class="na">length</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span> <span class="n">row</span> <span class="o">&lt;</span> <span class="n">rowMax</span><span class="o">;</span> <span class="n">row</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">col</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">colMax</span> <span class="o">=</span> <span class="o">(</span><span class="n">map</span><span class="o">[</span><span class="n">row</span> <span class="o">*</span> <span class="mi">2</span><span class="o">].</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span> <span class="n">col</span> <span class="o">&lt;</span> <span class="n">colMax</span><span class="o">;</span> <span class="n">col</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">Map</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">RouteNode</span><span class="o">&gt;</span> <span class="n">rowMap</span> <span class="o">=</span> <span class="n">nodeMap_</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">row</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">rowMap</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">rowMap</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">RouteNode</span><span class="o">&gt;();</span>
                    <span class="n">nodeMap_</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">row</span><span class="o">,</span> <span class="n">rowMap</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="n">RouteNode</span> <span class="n">node</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RouteNode</span><span class="o">();</span>
                <span class="n">rowMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">col</span><span class="o">,</span> <span class="n">node</span><span class="o">);</span>
                <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="n">map</span><span class="o">[</span><span class="n">row</span> <span class="o">*</span> <span class="mi">2</span><span class="o">].</span><span class="na">charAt</span><span class="o">(</span><span class="n">col</span> <span class="o">*</span> <span class="mi">2</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;P&#39;</span><span class="o">)</span> <span class="n">startNode_</span> <span class="o">=</span> <span class="n">node</span><span class="o">;</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;Q&#39;</span><span class="o">)</span> <span class="n">goalNode_</span> <span class="o">=</span> <span class="n">node</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">void</span> <span class="n">createLinkNode</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">row</span> <span class="o">&lt;</span> <span class="n">map</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">row</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">col</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">col</span> <span class="o">&lt;</span> <span class="n">map</span><span class="o">[</span><span class="n">row</span><span class="o">].</span><span class="na">length</span><span class="o">();</span> <span class="n">col</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">switch</span> <span class="o">(</span><span class="n">row</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">+</span> <span class="n">col</span> <span class="o">%</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">case</span> <span class="mi">0</span><span class="o">:</span>    <span class="c">// Node</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="k">case</span> <span class="mi">1</span><span class="o">:</span> <span class="c">// horizontal route</span>
                        <span class="kt">char</span> <span class="n">h</span> <span class="o">=</span> <span class="n">map</span><span class="o">[</span><span class="n">row</span><span class="o">].</span><span class="na">charAt</span><span class="o">(</span><span class="n">col</span><span class="o">);</span>
                        <span class="k">if</span> <span class="o">(</span><span class="n">h</span> <span class="o">==</span> <span class="sc">&#39;-&#39;</span><span class="o">)</span> <span class="o">{</span>
                            <span class="kt">int</span> <span class="n">linkRow</span> <span class="o">=</span> <span class="n">row</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
                            <span class="kt">int</span> <span class="n">linkCol</span> <span class="o">=</span> <span class="n">col</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
                            <span class="n">linkNode</span><span class="o">(</span><span class="n">linkRow</span><span class="o">,</span> <span class="n">linkCol</span><span class="o">,</span> <span class="n">linkRow</span><span class="o">,</span> <span class="n">linkCol</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
                        <span class="o">}</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="k">case</span> <span class="mi">2</span><span class="o">:</span> <span class="c">// vertical route</span>
                        <span class="kt">char</span> <span class="n">v</span> <span class="o">=</span> <span class="n">map</span><span class="o">[</span><span class="n">row</span><span class="o">].</span><span class="na">charAt</span><span class="o">(</span><span class="n">col</span><span class="o">);</span>
                        <span class="k">if</span> <span class="o">(</span><span class="n">v</span> <span class="o">==</span> <span class="sc">&#39;|&#39;</span><span class="o">)</span> <span class="o">{</span>
                            <span class="kt">int</span> <span class="n">linkRow</span> <span class="o">=</span> <span class="n">row</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
                            <span class="kt">int</span> <span class="n">linkCol</span> <span class="o">=</span> <span class="n">col</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
                            <span class="n">linkNode</span><span class="o">(</span><span class="n">linkRow</span><span class="o">,</span> <span class="n">linkCol</span><span class="o">,</span> <span class="n">linkRow</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">linkCol</span><span class="o">);</span>
                        <span class="o">}</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="k">case</span> <span class="mi">3</span><span class="o">:</span> <span class="c">// blank</span>
                        <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">void</span> <span class="n">linkNode</span><span class="o">(</span><span class="kt">int</span> <span class="n">fromRow</span><span class="o">,</span> <span class="kt">int</span> <span class="n">fromCol</span><span class="o">,</span> <span class="kt">int</span> <span class="n">toRow</span><span class="o">,</span> <span class="kt">int</span> <span class="n">toCol</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">RouteNode</span> <span class="n">fromNode</span> <span class="o">=</span> <span class="n">nodeMap_</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">fromRow</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">fromCol</span><span class="o">);</span>
        <span class="n">RouteNode</span> <span class="n">toNode</span> <span class="o">=</span> <span class="n">nodeMap_</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">toRow</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">toCol</span><span class="o">);</span>
        <span class="n">fromNode</span><span class="o">.</span><span class="na">dests</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">toNode</span><span class="o">);</span>
    <span class="o">}</span>


    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Sample221</span> <span class="n">sample</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sample221</span><span class="o">();</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">ex1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span>
                <span class="s">&quot;P-+-+-+&quot;</span><span class="o">,</span>
                <span class="s">&quot;| | | |&quot;</span><span class="o">,</span>
                <span class="s">&quot;+-+-+-+&quot;</span><span class="o">,</span>
                <span class="s">&quot;| | | |&quot;</span><span class="o">,</span>
                <span class="s">&quot;+-+-+-+&quot;</span><span class="o">,</span>
                <span class="s">&quot;| | | |&quot;</span><span class="o">,</span>
                <span class="s">&quot;+-+-+-+&quot;</span><span class="o">,</span>
                <span class="s">&quot;| | | |&quot;</span><span class="o">,</span>
                <span class="s">&quot;+-+-+-Q&quot;</span><span class="o">,</span>
        <span class="o">};</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sample</span><span class="o">.</span><span class="na">countRoute</span><span class="o">(</span><span class="n">ex1</span><span class="o">));</span>

        <span class="n">String</span><span class="o">[]</span> <span class="n">ex2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span>
                <span class="s">&quot;P-+-+-+&quot;</span><span class="o">,</span>
                <span class="s">&quot;| | | |&quot;</span><span class="o">,</span>
                <span class="s">&quot;+-+-+-+&quot;</span><span class="o">,</span>
                <span class="s">&quot;|   | |&quot;</span><span class="o">,</span>
                <span class="s">&quot;+-+-+ +&quot;</span><span class="o">,</span>
                <span class="s">&quot;| | | |&quot;</span><span class="o">,</span>
                <span class="s">&quot;+-+ +-+&quot;</span><span class="o">,</span>
                <span class="s">&quot;| | | |&quot;</span><span class="o">,</span>
                <span class="s">&quot;+-+-+-Q&quot;</span><span class="o">,</span>
        <span class="o">};</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sample</span><span class="o">.</span><span class="na">countRoute</span><span class="o">(</span><span class="n">ex2</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8156/addtag/" class="addtag" id="addtag_8156">タグ</a>:
	
    
    <a href="/web/20090103084240/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8156/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8156/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8156"
  >-</span><span
  class="button yellow"
  id="rating_z_8156"
  >0</span><span 
  class="button green"
  id="rating_p_8156"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8156/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8157">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8157/">#8157</a>(<script language="JavaScript">print_time(new Date("2008/12/13 10:45 GMT"));</script><noscript>2008/12/13 10:45 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Squeak Smalltalk で。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre>| width map counts index |

width := 4.
map := 
    &#39;P-+-+-+&#39;,
    &#39;| | | |&#39;,
    &#39;+-+-+-+&#39;,
    &#39;|   | |&#39;,
    &#39;+-+-+ +&#39;,
    &#39;| | | |&#39;,
    &#39;+-+ +-+&#39;,
    &#39;| | | |&#39;,
    &#39;+-+-+-Q&#39;.

counts := Array new: width withAll: 0.
counts at: 1 put: 1.
index := 1.
(2 to: map size by: 2) do: [:pos |
    index := index + 1.
    (map at: pos) caseOf: {
        [$-] -&gt; [counts at: (index - 1 \\ width + 1) incrementBy: (counts atWrap: index - 1)].
        [$ ] -&gt; [index &gt; width ifTrue: [counts atWrap: index put: 0]]} otherwise: [].
    index = (width * 2) ifTrue: [index := 1]].
counts last   &quot;=&gt; 15 &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8157/addtag/" class="addtag" id="addtag_8157">タグ</a>:
	
    
    <a href="/web/20090103084240/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8157/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8157/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8157"
  >-</span><span
  class="button yellow"
  id="rating_z_8157"
  >0</span><span 
  class="button green"
  id="rating_p_8157"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8157/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8176">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/437/" target="_top">mamamoto</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8176/">#8176</a>(<script language="JavaScript">print_time(new Date("2008/12/14 20:28 GMT"));</script><noscript>2008/12/14 20:28 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ほんと数えるだけですすみません。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">sum</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
  <span class="n">a</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="mi">0</span><span class="p">){</span><span class="o">|</span><span class="n">r</span><span class="p">,</span><span class="n">e</span><span class="o">|</span><span class="n">r</span><span class="o">+</span><span class="n">e</span><span class="p">}</span>
<span class="k">end</span>

<span class="n">map</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="o">]*</span><span class="mi">3</span><span class="o">+[</span><span class="mi">1</span><span class="o">]*</span><span class="mi">4</span>
<span class="n">path1</span> <span class="o">=</span> <span class="n">map</span><span class="o">.</span><span class="n">permutation</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">uniq</span>
<span class="n">path2</span> <span class="o">=</span> <span class="n">path1</span><span class="o">.</span><span class="n">reject</span><span class="p">{</span><span class="o">|</span><span class="n">pt</span><span class="o">|</span>
  <span class="n">sum</span><span class="p">(</span><span class="n">pt</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span><span class="o">==</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">pt</span><span class="o">[</span><span class="mi">2</span><span class="o">]==</span><span class="mi">1</span> <span class="o">||</span>
  <span class="n">sum</span><span class="p">(</span><span class="n">pt</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="o">]</span><span class="p">)</span><span class="o">==</span><span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="n">pt</span><span class="o">[</span><span class="mi">4</span><span class="o">]==</span><span class="mi">0</span> <span class="o">||</span>
  <span class="n">sum</span><span class="p">(</span><span class="n">pt</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="o">]</span><span class="p">)</span><span class="o">==</span><span class="mi">3</span> <span class="o">&amp;&amp;</span> <span class="n">pt</span><span class="o">[</span><span class="mi">4</span><span class="o">]==</span><span class="mi">0</span>
<span class="p">}</span>

<span class="nb">p</span> <span class="n">path1</span><span class="o">.</span><span class="n">size</span><span class="p">,</span> <span class="n">path2</span><span class="o">.</span><span class="n">size</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8176/addtag/" class="addtag" id="addtag_8176">タグ</a>:
	
    
    <a href="/web/20090103084240/http://ja.doukaku.org/tag/Ruby1.9/">Ruby1.9</a>
    
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8176/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8176/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8176"
  >-</span><span
  class="button yellow"
  id="rating_z_8176"
  >0</span><span 
  class="button green"
  id="rating_p_8176"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8176/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8193">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8193/">#8193</a>(<script language="JavaScript">print_time(new Date("2008/12/16 20:00 GMT"));</script><noscript>2008/12/16 20:00 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>めいっぱい関数型ぽく

格子点を経路数をカウントする関数で表現 
接続情報は、上側格子点と左側格子点を引数とし格子点を返す関数で表現
経路情報は接続情報のマトリックス(ここではリストのリスト)で表現

実行結果
*Main&gt; answer1
35
*Main&gt; answer2
15


</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre><span class="kr">type</span> <span class="n">Counter</span>    <span class="o">=</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span>            <span class="c1">-- 経路数をカウントする関数</span>
<span class="kr">type</span> <span class="n">Grid</span>       <span class="o">=</span> <span class="n">Counter</span>               <span class="c1">-- 格子点はカウンタで表現</span>
<span class="kr">type</span> <span class="n">Connection</span>                         <span class="c1">-- 接続情報は</span>
     <span class="o">=</span>  <span class="n">Grid</span>                            <span class="c1">--   上側格子点と</span>
     <span class="o">-&gt;</span> <span class="n">Grid</span>                            <span class="c1">--   左側格子点とを引数とし</span>
     <span class="o">-&gt;</span> <span class="n">Grid</span>                            <span class="c1">--   当該格子点を返す関数で表現</span>

<span class="nv">grids</span> <span class="o">::</span> <span class="p">[[</span><span class="n">Connection</span><span class="p">]]</span> <span class="o">-&gt;</span> <span class="p">[[</span><span class="n">Grid</span><span class="p">]]</span>
<span class="nv">grids</span> <span class="o">=</span> <span class="nv">tail</span> <span class="o">.</span> <span class="nv">scanl</span> <span class="nv">acc</span> <span class="p">(</span><span class="nv">repeat</span> <span class="nv">id</span><span class="p">)</span>
  <span class="kr">where</span> 
    <span class="nv">acc</span> <span class="nv">fs</span> <span class="o">=</span> <span class="nv">tail</span> <span class="o">.</span> <span class="nv">scanl</span> <span class="p">(</span><span class="nv">flip</span> <span class="p">(</span><span class="o">$</span><span class="p">))</span> <span class="nv">id</span> <span class="o">.</span> <span class="nv">zipWith</span> <span class="p">(</span><span class="nv">flip</span> <span class="p">(</span><span class="o">$</span><span class="p">))</span> <span class="nv">fs</span>

<span class="nv">endpoint</span> <span class="o">::</span> <span class="p">[[</span><span class="n">Grid</span><span class="p">]]</span> <span class="o">-&gt;</span> <span class="n">Grid</span>
<span class="nv">endpoint</span> <span class="o">=</span> <span class="nv">last</span> <span class="o">.</span> <span class="nv">last</span>

<span class="nv">count</span> <span class="o">::</span> <span class="n">Grid</span> <span class="o">-&gt;</span> <span class="n">Int</span>
<span class="nv">count</span> <span class="o">=</span> <span class="p">(</span><span class="o">$</span> <span class="mi">1</span><span class="p">)</span>

<span class="nv">answer1</span> <span class="o">=</span> <span class="p">(</span><span class="nv">count</span> <span class="o">.</span> <span class="nv">endpoint</span> <span class="o">.</span> <span class="nv">grids</span><span class="p">)</span> <span class="nv">sample1</span>
<span class="nv">answer2</span> <span class="o">=</span> <span class="p">(</span><span class="nv">count</span> <span class="o">.</span> <span class="nv">endpoint</span> <span class="o">.</span> <span class="nv">grids</span><span class="p">)</span> <span class="nv">sample2</span>

<span class="c1">-- 格子点の接続情報</span>

<span class="p">(</span><span class="o">&amp;&amp;&amp;</span><span class="p">)</span> <span class="o">::</span> <span class="p">(</span><span class="nv">a</span> <span class="o">-&gt;</span> <span class="nv">b</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">a</span> <span class="o">-&gt;</span> <span class="nv">c</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">a</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">b</span><span class="p">,</span><span class="nv">c</span><span class="p">))</span>
<span class="p">(</span><span class="nv">f</span> <span class="o">&amp;&amp;&amp;</span> <span class="nv">g</span><span class="p">)</span> <span class="nv">x</span> <span class="o">=</span> <span class="p">(</span><span class="nv">f</span> <span class="nv">x</span><span class="p">,</span> <span class="nv">g</span> <span class="nv">x</span><span class="p">)</span>

<span class="nv">s</span><span class="p">,</span><span class="nv">n</span><span class="p">,</span><span class="nv">u</span><span class="p">,</span><span class="nv">l</span><span class="p">,</span><span class="nv">b</span> <span class="o">::</span> <span class="n">Connection</span>
<span class="nv">s</span> <span class="kr">_</span>     <span class="kr">_</span>    <span class="o">=</span> <span class="nv">id</span>                              <span class="c1">-- スタート地点</span>
<span class="nv">n</span> <span class="kr">_</span>     <span class="kr">_</span>    <span class="o">=</span> <span class="nv">const</span> <span class="mi">0</span>                         <span class="c1">-- 左からも、上からも経路がない</span>
<span class="nv">u</span> <span class="nv">upper</span> <span class="kr">_</span>    <span class="o">=</span> <span class="nv">upper</span>                           <span class="c1">-- 上からの経路のみ</span>
<span class="nv">l</span> <span class="kr">_</span>     <span class="nv">left</span> <span class="o">=</span> <span class="nv">left</span>                            <span class="c1">-- 左からの経路のみ</span>
<span class="nv">b</span> <span class="nv">upper</span> <span class="nv">left</span> <span class="o">=</span> <span class="nv">uncurry</span> <span class="p">(</span><span class="o">+</span><span class="p">)</span> <span class="o">.</span> <span class="p">(</span><span class="nv">upper</span> <span class="o">&amp;&amp;&amp;</span> <span class="nv">left</span><span class="p">)</span>  <span class="c1">-- 左からも、上からも経路あり</span>

<span class="c1">-- 経路情報</span>

<span class="nv">sample1</span><span class="p">,</span> <span class="nv">sample2</span> <span class="o">::</span> <span class="p">[[</span><span class="n">Connection</span><span class="p">]]</span>
<span class="nv">sample1</span> <span class="o">=</span> <span class="p">[[</span><span class="nv">s</span><span class="p">,</span><span class="nv">l</span><span class="p">,</span><span class="nv">l</span><span class="p">,</span><span class="nv">l</span><span class="p">]</span>
          <span class="p">,[</span><span class="nv">u</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">]</span>
          <span class="p">,[</span><span class="nv">u</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">]</span>
          <span class="p">,[</span><span class="nv">u</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">]</span>
          <span class="p">,[</span><span class="nv">u</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">]]</span>

<span class="nv">sample2</span> <span class="o">=</span> <span class="p">[[</span><span class="nv">s</span><span class="p">,</span><span class="nv">l</span><span class="p">,</span><span class="nv">l</span><span class="p">,</span><span class="nv">l</span><span class="p">]</span>
          <span class="p">,[</span><span class="nv">u</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">]</span>
          <span class="p">,[</span><span class="nv">u</span><span class="p">,</span><span class="nv">l</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">u</span><span class="p">]</span>
          <span class="p">,[</span><span class="nv">u</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">u</span><span class="p">,</span><span class="nv">b</span><span class="p">]</span>
          <span class="p">,[</span><span class="nv">u</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">b</span><span class="p">]]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8193/addtag/" class="addtag" id="addtag_8193">タグ</a>:
	
    
    <a href="/web/20090103084240/http://ja.doukaku.org/tag/ghc-6.10.1/">ghc-6.10.1</a>
    
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8193/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8193/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8193"
  >-</span><span
  class="button yellow"
  id="rating_z_8193"
  >0</span><span 
  class="button green"
  id="rating_p_8193"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8193/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8194">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/980/" target="_top">manzo</a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8194/">#8194</a>(<script language="JavaScript">print_time(new Date("2008/12/17 00:59 GMT"));</script><noscript>2008/12/17 00:59 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>格子は-（横)、|（縦）のシンボルで表現。
順列してuniqした。</p>
<p>図2はそれぞれの道順のうち３番目が|（縦）を削除してpq.size。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#順列してuniqする。</span>
<span class="n">pq</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:-</span><span class="p">,</span><span class="ss">:-</span><span class="p">,</span><span class="ss">:-</span><span class="p">,</span><span class="ss">:|</span><span class="p">,</span><span class="ss">:|</span><span class="p">,</span><span class="ss">:|</span><span class="p">,</span><span class="ss">:|</span><span class="o">].</span><span class="n">permutation</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">uniq</span>

<span class="c1">#図1 </span>
<span class="nb">p</span> <span class="n">pq</span><span class="o">.</span><span class="n">size</span>

<span class="c1">#図2 配列の配列の3番目が|であるものを削除して.size。</span>
<span class="nb">p</span> <span class="n">pq</span><span class="o">.</span><span class="n">delete_if</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">==</span> <span class="ss">:|</span><span class="p">}</span><span class="o">.</span><span class="n">size</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8194/addtag/" class="addtag" id="addtag_8194">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8194/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8194/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8194"
  >-</span><span
  class="button yellow"
  id="rating_z_8194"
  >0</span><span 
  class="button green"
  id="rating_p_8194"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090103084240/http://ja.doukaku.org/comment/8194/">
    1
    reply
  </a>

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8194/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8195">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/437/" target="_top">mamamoto</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8195/">#8195</a>(<script language="JavaScript">print_time(new Date("2008/12/17 01:37 GMT"));</script><noscript>2008/12/17 01:37 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>単純に道順の3番目が縦という条件では数えられないではないでしょうか。
まっすぐ下に降りてから右、というルートもありますし。</p>
<p>実際、このコードで[:-]*4+[:<a href="/web/20090103084240/http://ja.doukaku.org/221/nested/#id1" name="id2"><span class="problematic" id="id2">|</span></a>]*4として実行すると、2番目のルートが35となります。
しかし、僕のを含めいくつかのコードを改造し試したところ、32となりました。</p>
<div class="system-message" id="id1">
<p class="system-message-title">System Message: <a name="id1">WARNING/2</a> (<tt class="docutils">&lt;string&gt;</tt>, line 4); <em><a href="/web/20090103084240/http://ja.doukaku.org/221/nested/#id2">backlink</a></em></p>
Inline substitution_reference start-string without end-string.</div>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8195/addtag/" class="addtag" id="addtag_8195">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8195"
  >-</span><span
  class="button yellow"
  id="rating_z_8195"
  >0</span><span 
  class="button green"
  id="rating_p_8195"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090103084240/http://ja.doukaku.org/comment/8194/"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090103084240/http://ja.doukaku.org/comment/8195/root/"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090103084240/http://ja.doukaku.org/comment/8195/">
    1
    reply
  </a>

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8195/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment8201">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/980/" target="_top">manzo</a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8201/">#8201</a>(<script language="JavaScript">print_time(new Date("2008/12/17 20:18 GMT"));</script><noscript>2008/12/17 20:18 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  mamamotoさん<br/><br/>＞単純に道順の3番目が縦<br/><br/>バカでした。<br/>ご指摘ありがとうございます。<br/>これはわかったものの謎が解けず悶々としてしまいました。答えがあわないんです。<br/><br/>というのも３ヵ所通れないことに一夜明けた朝に気がついた次第(^_^;)<br/><br/>＞[:-]*4+[:|]*4として実行<br/>して32になりました。<br/><br/>ありがとうございました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#なんべんも出てくるので。</span>
<span class="k">class</span> <span class="nc">Array</span>
  <span class="k">def</span> <span class="nf">pat</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">permutation</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">uniq</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1">#順列してuniqする。</span>
<span class="n">pq</span> <span class="o">=</span> <span class="p">(</span><span class="o">[</span><span class="ss">:-</span><span class="o">]*</span><span class="mi">3</span> <span class="o">+[</span><span class="ss">:|</span><span class="o">]*</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">pat</span>

<span class="c1">#図.1</span>
<span class="nb">p</span> <span class="n">pq</span><span class="o">.</span><span class="n">size</span> <span class="c1"># =&gt; 35</span>



<span class="c1">#図.2 ３ヵ所通れない。通れないパターンを作り削除して.size。</span>

<span class="c1">#通れないパターンを入れる配列</span>
<span class="n">del</span> <span class="o">=</span> <span class="o">[]</span>

<span class="c1">#１番目の通れないパターン(1×1の次が|）</span>
<span class="n">del</span> <span class="o">+=</span> <span class="p">(</span><span class="o">[</span><span class="ss">:-</span><span class="o">]</span>  <span class="o">+</span>  <span class="o">[</span><span class="ss">:|</span><span class="o">]</span>  <span class="p">)</span><span class="o">.</span><span class="n">pat</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">+[</span><span class="ss">:|</span><span class="o">]</span><span class="p">}</span>

<span class="c1">#2番目の通れないパターン(2×2の次が-)</span>
<span class="n">del</span> <span class="o">+=</span> <span class="p">(</span><span class="o">[</span><span class="ss">:-</span><span class="o">]*</span><span class="mi">2</span> <span class="o">+</span> <span class="o">[</span><span class="ss">:|</span><span class="o">]*</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">pat</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">+[</span><span class="ss">:-</span><span class="o">]</span><span class="p">}</span>

<span class="c1">#3番目の通れないパターン(1×3の次が-)</span>
<span class="n">del</span> <span class="o">+=</span> <span class="p">(</span><span class="o">[</span><span class="ss">:-</span><span class="o">]*</span><span class="mi">1</span> <span class="o">+</span> <span class="o">[</span><span class="ss">:|</span><span class="o">]*</span><span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="n">pat</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">+[</span><span class="ss">:-</span><span class="o">]</span><span class="p">}</span>

<span class="c1">#全体からdelのパターンを削除。</span>
<span class="n">del</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">pq</span><span class="o">.</span><span class="n">delete_if</span><span class="p">{</span><span class="o">|</span><span class="n">j</span><span class="o">|</span><span class="n">j</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="n">i</span><span class="o">.</span><span class="n">size</span><span class="o">]</span> <span class="o">==</span> <span class="n">i</span><span class="p">}}</span>

<span class="nb">p</span> <span class="n">pq</span><span class="o">.</span><span class="n">size</span> <span class="c1"># =&gt; 15</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8201/addtag/" class="addtag" id="addtag_8201">タグ</a>:
	
    
    <a href="/web/20090103084240/http://ja.doukaku.org/tag/1.8.7/">1.8.7</a>
    
    <a href="/web/20090103084240/http://ja.doukaku.org/tag/ruby/">ruby</a>
    
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8201/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8201/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8201"
  >-</span><span
  class="button yellow"
  id="rating_z_8201"
  >0</span><span 
  class="button green"
  id="rating_p_8201"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090103084240/http://ja.doukaku.org/comment/8195/"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090103084240/http://ja.doukaku.org/comment/8201/root/"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8201/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  
    





<div class="comment" id="comment8197">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/833/" target="_top">mattsan</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8197/">#8197</a>(<script language="JavaScript">print_time(new Date("2008/12/17 04:55 GMT"));</script><noscript>2008/12/17 04:55 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>わたしも関数型言語C++で関数型っぽく(爆)。

…

すみませんすみません。

こんな密度でtemplateと書いたのはわたしも初めてです。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="highlight"><pre><span class="c">// 各点での経路の数</span>
<span class="k">template</span><span class="o">&lt;</span><span class="kt">char</span> <span class="n">CHAR</span><span class="p">,</span> <span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">MAP</span><span class="p">,</span> <span class="kt">int</span> <span class="n">ROW</span><span class="p">,</span> <span class="kt">int</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="k">struct</span> <span class="n">C</span> <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">};</span>

<span class="c">// 経路を計算するテンプレート</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">MAP</span><span class="p">,</span> <span class="kt">int</span> <span class="n">ROW</span><span class="p">,</span> <span class="kt">int</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="k">struct</span> <span class="n">Count</span> <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="n">C</span><span class="o">&lt;</span><span class="n">MAP</span><span class="o">&lt;</span><span class="n">ROW</span><span class="p">,</span> <span class="n">COL</span><span class="o">&gt;::</span><span class="n">value</span><span class="p">,</span> <span class="n">MAP</span><span class="p">,</span> <span class="n">ROW</span><span class="p">,</span> <span class="n">COL</span><span class="o">&gt;::</span><span class="n">value</span><span class="p">;</span> <span class="p">};</span>

<span class="c">// 各点での経路の数: キャラクタごとに特殊化</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">MAP</span><span class="p">,</span> <span class="kt">int</span> <span class="n">ROW</span><span class="p">,</span> <span class="kt">int</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="k">struct</span> <span class="n">C</span><span class="o">&lt;</span><span class="sc">&#39;s&#39;</span><span class="p">,</span> <span class="n">MAP</span><span class="p">,</span> <span class="n">ROW</span><span class="p">,</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">};</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">MAP</span><span class="p">,</span> <span class="kt">int</span> <span class="n">ROW</span><span class="p">,</span> <span class="kt">int</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="k">struct</span> <span class="n">C</span><span class="o">&lt;</span><span class="sc">&#39;l&#39;</span><span class="p">,</span> <span class="n">MAP</span><span class="p">,</span> <span class="n">ROW</span><span class="p">,</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="n">Count</span><span class="o">&lt;</span><span class="n">MAP</span><span class="p">,</span> <span class="n">ROW</span><span class="p">,</span> <span class="n">COL</span> <span class="o">-</span> <span class="mi">1</span><span class="o">&gt;::</span><span class="n">value</span><span class="p">;</span> <span class="p">};</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">MAP</span><span class="p">,</span> <span class="kt">int</span> <span class="n">ROW</span><span class="p">,</span> <span class="kt">int</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="k">struct</span> <span class="n">C</span><span class="o">&lt;</span><span class="sc">&#39;u&#39;</span><span class="p">,</span> <span class="n">MAP</span><span class="p">,</span> <span class="n">ROW</span><span class="p">,</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="n">Count</span><span class="o">&lt;</span><span class="n">MAP</span><span class="p">,</span> <span class="n">ROW</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">COL</span><span class="o">&gt;::</span><span class="n">value</span><span class="p">;</span> <span class="p">};</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">MAP</span><span class="p">,</span> <span class="kt">int</span> <span class="n">ROW</span><span class="p">,</span> <span class="kt">int</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="k">struct</span> <span class="n">C</span><span class="o">&lt;</span><span class="sc">&#39;b&#39;</span><span class="p">,</span> <span class="n">MAP</span><span class="p">,</span> <span class="n">ROW</span><span class="p">,</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="n">Count</span><span class="o">&lt;</span><span class="n">MAP</span><span class="p">,</span> <span class="n">ROW</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">COL</span><span class="o">&gt;::</span><span class="n">value</span> <span class="o">+</span> <span class="n">Count</span><span class="o">&lt;</span><span class="n">MAP</span><span class="p">,</span> <span class="n">ROW</span><span class="p">,</span> <span class="n">COL</span> <span class="o">-</span> <span class="mi">1</span><span class="o">&gt;::</span><span class="n">value</span><span class="p">;</span> <span class="p">};</span>

<span class="c">// 問1の図を定義するテンプレート</span>
<span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span> <span class="n">ROW</span><span class="p">,</span> <span class="kt">int</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="k">struct</span> <span class="n">Map1</span>         <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;b&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 基本的には左、上とも通れる</span>
<span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span> <span class="n">COL</span><span class="o">&gt;</span>          <span class="k">struct</span> <span class="n">Map1</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">,</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;l&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 0行目は基本的に左だけ通れる</span>
<span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span> <span class="n">ROW</span><span class="o">&gt;</span>          <span class="k">struct</span> <span class="n">Map1</span><span class="o">&lt;</span><span class="n">ROW</span><span class="p">,</span> <span class="mi">0</span><span class="o">&gt;</span> <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;u&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 0桁目は基本的に上だけ通れる</span>
<span class="k">template</span><span class="o">&lt;&gt;</span>                 <span class="k">struct</span> <span class="n">Map1</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="o">&gt;</span>   <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;s&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 0行0桁目は起点</span>

<span class="c">// 問2の図を定義するテンプレート</span>
<span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span> <span class="n">ROW</span><span class="p">,</span> <span class="kt">int</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="k">struct</span> <span class="n">Map2</span>         <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;b&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 基本的には左、上とも通れる</span>
<span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span> <span class="n">COL</span><span class="o">&gt;</span>          <span class="k">struct</span> <span class="n">Map2</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">,</span> <span class="n">COL</span><span class="o">&gt;</span> <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;l&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 0行目は基本的に左だけ通れる</span>
<span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span> <span class="n">ROW</span><span class="o">&gt;</span>          <span class="k">struct</span> <span class="n">Map2</span><span class="o">&lt;</span><span class="n">ROW</span><span class="p">,</span> <span class="mi">0</span><span class="o">&gt;</span> <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;u&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 0桁目は基本的に上だけ通れる</span>
<span class="k">template</span><span class="o">&lt;&gt;</span>                 <span class="k">struct</span> <span class="n">Map2</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="o">&gt;</span>   <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;s&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 0行0桁目は起点</span>
<span class="k">template</span><span class="o">&lt;&gt;</span>                 <span class="k">struct</span> <span class="n">Map2</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="o">&gt;</span>   <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;l&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 2行1桁目は左だけ通れる</span>
<span class="k">template</span><span class="o">&lt;&gt;</span>                 <span class="k">struct</span> <span class="n">Map2</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">&gt;</span>   <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;u&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 2行3桁目は上だけ通れる</span>
<span class="k">template</span><span class="o">&lt;&gt;</span>                 <span class="k">struct</span> <span class="n">Map2</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="o">&gt;</span>   <span class="p">{</span> <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">value</span> <span class="o">=</span> <span class="sc">&#39;u&#39;</span><span class="p">;</span> <span class="p">};</span> <span class="c">// 3行2桁目は上だけ通れる</span>

<span class="cp">#include &lt;iostream&gt;</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="p">[])</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;問1の答えは &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">Count</span><span class="o">&lt;</span><span class="n">Map1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="o">&gt;::</span><span class="n">value</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; 通りです&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;問2の答えは &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">Count</span><span class="o">&lt;</span><span class="n">Map2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="o">&gt;::</span><span class="n">value</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; 通りです&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8197/addtag/" class="addtag" id="addtag_8197">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8197/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8197/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8197"
  >-</span><span
  class="button yellow"
  id="rating_z_8197"
  >0</span><span 
  class="button green"
  id="rating_p_8197"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8197/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8199">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/684/" target="_top">yama</a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8199/">#8199</a>(<script language="JavaScript">print_time(new Date("2008/12/17 06:14 GMT"));</script><noscript>2008/12/17 06:14 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>素直に全ての道を数えてみました</p>
<p>結果 map1: 35, map2: 15</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>

<span class="cp">#define HEIGHT 5</span>
<span class="cp">#define WIDTH 4</span>
<span class="k">typedef</span> <span class="k">enum</span> <span class="n">tagLoad</span>
<span class="p">{</span>
    <span class="n">NONE</span><span class="p">,</span>
    <span class="n">RIGHT</span><span class="p">,</span>
    <span class="n">UNDER</span><span class="p">,</span>
    <span class="n">BOTH</span>
<span class="p">}</span> <span class="n">Load</span><span class="p">;</span>

<span class="n">Load</span> <span class="n">map1</span><span class="p">[</span><span class="n">HEIGHT</span><span class="p">][</span><span class="n">WIDTH</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
    <span class="p">{</span><span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">UNDER</span><span class="p">},</span>
    <span class="p">{</span><span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">UNDER</span><span class="p">},</span>
    <span class="p">{</span><span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">UNDER</span><span class="p">},</span>
    <span class="p">{</span><span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">UNDER</span><span class="p">},</span>
    <span class="p">{</span><span class="n">RIGHT</span><span class="p">,</span> <span class="n">RIGHT</span><span class="p">,</span> <span class="n">RIGHT</span><span class="p">,</span> <span class="n">NONE</span><span class="p">}</span>
<span class="p">};</span>

<span class="n">Load</span> <span class="n">map2</span><span class="p">[</span><span class="n">HEIGHT</span><span class="p">][</span><span class="n">WIDTH</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
    <span class="p">{</span><span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">UNDER</span><span class="p">},</span>
    <span class="p">{</span><span class="n">BOTH</span><span class="p">,</span> <span class="n">RIGHT</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">UNDER</span><span class="p">},</span>
    <span class="p">{</span><span class="n">BOTH</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">UNDER</span><span class="p">,</span> <span class="n">UNDER</span><span class="p">},</span>
    <span class="p">{</span><span class="n">BOTH</span><span class="p">,</span> <span class="n">UNDER</span><span class="p">,</span> <span class="n">BOTH</span><span class="p">,</span> <span class="n">UNDER</span><span class="p">},</span>
    <span class="p">{</span><span class="n">RIGHT</span><span class="p">,</span> <span class="n">RIGHT</span><span class="p">,</span> <span class="n">RIGHT</span><span class="p">,</span> <span class="n">NONE</span><span class="p">}</span>
<span class="p">};</span>

<span class="kt">void</span> <span class="nf">search</span><span class="p">(</span><span class="n">Load</span> <span class="n">map</span><span class="p">[</span><span class="n">HEIGHT</span><span class="p">][</span><span class="n">WIDTH</span><span class="p">],</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span><span class="o">*</span> <span class="n">count</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">y</span> <span class="o">==</span> <span class="n">HEIGHT</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">(</span><span class="o">*</span><span class="n">count</span><span class="p">)</span><span class="o">++</span><span class="p">;</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">switch</span><span class="p">(</span><span class="n">map</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">])</span>
    <span class="p">{</span>
    <span class="k">case</span> <span class="nl">RIGHT:</span>
        <span class="n">search</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
    <span class="k">case</span> <span class="nl">UNDER:</span>
        <span class="n">search</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
    <span class="k">case</span> <span class="nl">BOTH:</span>
        <span class="n">search</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
        <span class="n">search</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
        <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">search</span><span class="p">(</span><span class="n">map1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">count</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;map1: %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">search</span><span class="p">(</span><span class="n">map2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">count</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;map2: %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">EXIT_SUCCESS</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8199/addtag/" class="addtag" id="addtag_8199">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8199/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8199/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8199"
  >-</span><span
  class="button yellow"
  id="rating_z_8199"
  >0</span><span 
  class="button green"
  id="rating_p_8199"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8199/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment8207">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/685/" target="_top">Nemo</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8207/">#8207</a>(<script language="JavaScript">print_time(new Date("2008/12/19 08:52 GMT"));</script><noscript>2008/12/19 08:52 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/postscript/">
	  PostScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>PostScript で2通り。
CountPath1 は (1)  タイプ専用で、サイズ((1) では 3 4 )を受けとって解を出力します。</p>
<p>CountPath は 接続図の配列を受けて解を出力します。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="highlight"><pre>!PS

% Ans 1   サイズのみから (1)のみ計算
/fact { dup 1 gt { dup 1 sub fact mul } if } def
/CountPath1 { 2 copy add fact exch fact idiv exch fact idiv } def

% Ans 2   (2) 
/CountPath {
    [ 1 index 1 get length {1} repeat ] exch
    {
        dup length 0 1 3 -1 roll 1 sub {
            2 copy get
            dup 2 and 0 eq { 0 } { 3 index 2 index get } ifelse
            exch 1 and 0 ne { 3 index 2 index 1 sub get add } if
            3 index 3 1 roll put
        } for
        pop
    } forall
    dup length 1 sub get
} def

% === Test ===
% 1:左に繋がる 2:上に繋がる 3:両方に繋がる
/Map1 [
    [ 2 1 1 1 ]
    [ 2 3 3 3 ]
    [ 2 3 3 3 ]
    [ 2 3 3 3 ]
    [ 2 3 3 3 ]
] def

/Map2 [
    [ 2 1 1 1 ]
    [ 2 3 3 3 ]
    [ 2 1 3 2 ]
    [ 2 3 2 3 ]
    [ 2 3 3 3 ]
] def

3 4 CountPath1 =
Map1 CountPath =
Map2 CountPath =
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8207/addtag/" class="addtag" id="addtag_8207">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/postscript/">
		PostScript
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8207/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8207/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8207"
  >-</span><span
  class="button yellow"
  id="rating_z_8207"
  >0</span><span 
  class="button green"
  id="rating_p_8207"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8207/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment8260">
  <p class="banner"><a href="/web/20090103084240/http://ja.doukaku.org/user/322/" target="_top">sawat</a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103084240/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8260/">#8260</a>(<script language="JavaScript">print_time(new Date("2008/12/28 02:38 GMT"));</script><noscript>2008/12/28 02:38 GMT</noscript>)
	
	
	
	[<a href="/web/20090103084240/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>典型的な動的計画法(DP)の練習問題ですね。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">Point</span><span class="p">(</span><span class="nx">up</span><span class="o">,</span> <span class="nx">left</span><span class="p">)</span> <span class="p">{</span>
   <span class="k">this</span><span class="p">.</span><span class="nx">up</span> <span class="o">=</span> <span class="nx">up</span><span class="o">;</span> <span class="k">this</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span><span class="nx">left</span><span class="o">;</span>
<span class="p">}</span>
<span class="nx">Point</span><span class="p">.</span><span class="nx">U</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Point</span><span class="p">(</span><span class="kc">true</span><span class="o">,</span> <span class="kc">false</span><span class="p">);</span>
<span class="nx">Point</span><span class="p">.</span><span class="nx">L</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Point</span><span class="p">(</span><span class="kc">false</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
<span class="nx">Point</span><span class="p">.</span><span class="nx">UL</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Point</span><span class="p">(</span><span class="kc">true</span><span class="o">,</span> <span class="kc">true</span><span class="p">);</span>
<span class="nx">Point</span><span class="p">.</span><span class="nx">NON</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Point</span><span class="p">(</span><span class="kc">false</span><span class="o">,</span> <span class="kc">false</span><span class="p">);</span>

<span class="k">var</span> <span class="nx">points</span><span class="o">;</span>
<span class="k">with</span><span class="p">(</span><span class="nx">Point</span><span class="p">)</span> <span class="p">{</span>
   <span class="nx">points</span> <span class="o">=</span> <span class="p">[</span>
      <span class="p">[</span><span class="nx">U</span><span class="o">,</span> <span class="nx">L</span><span class="o">,</span>  <span class="nx">L</span><span class="o">,</span>  <span class="nx">L</span><span class="p">]</span><span class="o">,</span>
      <span class="p">[</span><span class="nx">U</span><span class="o">,</span> <span class="nx">UL</span><span class="o">,</span> <span class="nx">UL</span><span class="o">,</span> <span class="nx">UL</span><span class="p">]</span><span class="o">,</span>
      <span class="p">[</span><span class="nx">U</span><span class="o">,</span> <span class="nx">L</span><span class="o">,</span>  <span class="nx">UL</span><span class="o">,</span> <span class="nx">U</span><span class="p">]</span><span class="o">,</span>
      <span class="p">[</span><span class="nx">U</span><span class="o">,</span> <span class="nx">UL</span><span class="o">,</span> <span class="nx">U</span><span class="o">,</span>  <span class="nx">UL</span><span class="p">]</span><span class="o">,</span>
      <span class="p">[</span><span class="nx">U</span><span class="o">,</span> <span class="nx">UL</span><span class="o">,</span> <span class="nx">UL</span><span class="o">,</span> <span class="nx">UL</span><span class="p">]</span>
   <span class="p">];</span>
<span class="p">}</span>
<span class="k">function</span> <span class="nx">countRoute</span><span class="p">(</span><span class="nx">points</span><span class="p">)</span> <span class="p">{</span>
   <span class="k">var</span> <span class="nx">count_table</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">points</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">lenth</span><span class="p">);</span>
   <span class="nx">count_table</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>

   <span class="k">for</span> <span class="p">(</span><span class="k">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="nx">n</span><span class="o">=</span><span class="nx">points</span><span class="p">.</span><span class="nx">length</span><span class="o">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">var</span> <span class="nx">row</span> <span class="o">=</span> <span class="nx">points</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
      <span class="k">for</span> <span class="p">(</span><span class="k">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="nx">m</span><span class="o">=</span><span class="nx">row</span><span class="p">.</span><span class="nx">length</span><span class="o">;</span> <span class="nx">j</span><span class="o">&lt;</span><span class="nx">m</span><span class="o">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
         <span class="k">var</span> <span class="nx">p</span> <span class="o">=</span> <span class="nx">row</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span>
         <span class="nx">count_table</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">up</span> <span class="o">&amp;&amp;</span> <span class="nx">count_table</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span> <span class="o">||</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">left</span> <span class="o">&amp;&amp;</span> <span class="nx">count_table</span><span class="p">[</span><span class="nx">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">||</span> <span class="mi">0</span><span class="p">);</span>
      <span class="p">}</span>
   <span class="p">}</span>
   <span class="k">return</span> <span class="nx">count_table</span><span class="p">[</span><span class="nx">count_table</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
<span class="p">}</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">countRoute</span><span class="p">(</span><span class="nx">points</span><span class="p">));</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103084240/http://ja.doukaku.org/comment/8260/addtag/" class="addtag" id="addtag_8260">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103084240/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8260/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103084240/http://ja.doukaku.org/comment/8260/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8260"
  >-</span><span
  class="button yellow"
  id="rating_z_8260"
  >0</span><span 
  class="button green"
  id="rating_p_8260"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103084240/http://ja.doukaku.org/221/reply_to/8260/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20090103084240if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20090103084240/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20090103084240/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20090103084240/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20090103084240/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20090103084240/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20090103084240/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20090103084240/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20090103084240/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090103084240/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090103084240/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20090103084240im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20090103084240/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20090103084240/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20090103084240/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20090103084240/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20090103084240/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20090103084240/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20090103084240/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20090103084240/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20090103084240im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20090103084240/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20090103084240/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20090103084240/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20090103084240js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 8:42:40 Jan 3, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:28:52 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
