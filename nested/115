
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
法演算
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20080223093649cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20080223093649cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20080223093649cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20080223093649/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20080223093649/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20080223093649js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20080223093649js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20080223093649js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20080223093649js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app3.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/115\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "23";
var displayMonth = "Feb";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/115/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20080223093649" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20071224052536/http://ja.doukaku.org/115/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="24 Dec 2007"><strong>DEC</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 9:36:49 Feb 23, 2008">FEB</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Mar
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20071224052536/http://ja.doukaku.org/115/nested/" title="5:25:36 Dec 24, 2007" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 9:36:49 Feb 23, 2008">23</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2007
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 9:36:49 Feb 23, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20080223093649*/http://ja.doukaku.org/115/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">24 Dec 07 - 23 Feb 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000001_2008:1:010000000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20080223093649/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20080223093649/http://ja.doukaku.org/115/">法演算</a>
</h2>

    





<div class="comment" id="comment4808">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/560/" target="_top">ihag</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4808/">#4808</a>(<script language="JavaScript">print_time(new Date("2007/12/14 06:10 GMT"));</script><noscript>2007/12/14 06:10 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ここでいう法演算とは，与えられた数(ここでは「法」と言います)で剰余をとりながら行う計算のことです．たとえば，法が10である場合，以下のように計算します．</p>
<ul>
<li><dl class="first docutils">
<dt>足し算</dt>
<dd><ul class="first last simple">
<li>1 + 2 = 3</li>
<li>7 + 3 = 0 (10を10で割った余りは0)</li>
<li>11 + 12 = 1 + 2 = 3</li>
</ul>
</dd>
</dl>
</li>
<li><dl class="first docutils">
<dt>引き算</dt>
<dd><ul class="first last simple">
<li>3 - 2 = 1</li>
<li>2 - 3 = 9</li>
</ul>
</dd>
</dl>
</li>
<li><dl class="first docutils">
<dt>掛け算</dt>
<dd><ul class="first last simple">
<li>2 * 3 = 6</li>
<li>11 * 12 = 1 * 2 = 2</li>
<li>18 * 39 = 8 * 9 = 2</li>
</ul>
</dd>
</dl>
</li>
</ul>
<p>式と法を与えたときに，このような法演算を行い，計算結果を表示するプログラムを作成してください．</p>
<p>注意点</p>
<ul>
<li><dl class="first docutils">
<dt>プログラムの入力には，式と法が与えられます．</dt>
<dd><ul class="first last simple">
<li>式に現れる数は，整数のみと仮定してかまいません．しかし，法より大きな数が与えられるかもしれませんし，負の数が与えられるかもしれません．</li>
<li>法は2以上の正整数のみが与えられます．</li>
<li>式と法は，プログラムにとって都合のよい形式で与えられると仮定してかまいません．ソースコード中に埋め込んでしまってもかまいません．</li>
</ul>
</dd>
</dl>
</li>
<li><dl class="first docutils">
<dt>足し算，引き算，掛け算に対応してください．</dt>
<dd><ul class="first last simple">
<li>法10の世界においては，1 - 2 と 1 + 8 は同じ意味です．引き算の計算においては，この性質を使い，足し算に変換してから計算してもかまいません．</li>
</ul>
</dd>
</dl>
</li>
<li><p class="first">プログラムの出力として，計算結果を表示して下さい．</p>
</li>
<li><dl class="first docutils">
<dt>与えられた式の中に，範囲外の数(負の数や，法の数以上の数)が現れた時には，必ず一度，式全体を正規化し，その結果を表示してから計算を行って下さい．</dt>
<dd><ul class="first last simple">
<li>ここでいう「正規化」とは，式の中のすべての項をいったん法で剰余をとり，0以上，法-1以下の範囲になるようにする，ということです</li>
<li>正規化をする際に，引き算を足し算へ変換する処理を一緒に行ってもかまいません．</li>
<li>計算過程で範囲外の数が現れたときには，正規化を行うことが望ましいですが，必ずしも行う必要はありません．(最終的な計算結果が正しければよしとします)</li>
</ul>
</dd>
</dl>
</li>
</ul>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4808/addtag/" class="addtag" id="addtag_4808">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4808"
  >-</span><span
  class="button yellow"
  id="rating_z_4808"
  >0</span><span 
  class="button green"
  id="rating_p_4808"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4808/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20080223093649/http://ja.doukaku.org/115/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20080223093649/http://ja.doukaku.org/115/flatten/">フラット表示</a> 
<a href="/web/20080223093649/http://ja.doukaku.org/115/">非表示</a> 


  

  
    





<div class="comment" id="comment4929">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/540/" target="_top">SiroKuro</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4929/">#4929</a>(<script language="JavaScript">print_time(new Date("2007/12/22 11:41 GMT"));</script><noscript>2007/12/22 11:41 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  こんな感じで。とりあえず逆ポーランドで式を渡します。<br/><br/>&gt;hoo&nbsp;10&nbsp;1&nbsp;2&nbsp;+<br/>-&gt;&nbsp;3<br/>&gt;hoo&nbsp;10&nbsp;7&nbsp;3&nbsp;+<br/>-&gt;&nbsp;0<br/>&gt;hoo&nbsp;10&nbsp;11&nbsp;12&nbsp;+<br/>-&gt;&nbsp;3<br/>&gt;hoo&nbsp;10&nbsp;3&nbsp;2&nbsp;-<br/>-&gt;&nbsp;1<br/>&gt;hoo&nbsp;10&nbsp;2&nbsp;3&nbsp;-<br/>-&gt;&nbsp;9<br/>&gt;hoo&nbsp;10&nbsp;2&nbsp;3&nbsp;*<br/>-&gt;&nbsp;6<br/>&gt;hoo&nbsp;10&nbsp;11&nbsp;12&nbsp;*<br/>-&gt;&nbsp;2<br/>&gt;hoo&nbsp;10&nbsp;18&nbsp;39&nbsp;*<br/>-&gt;&nbsp;2
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">static</span> <span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
        <span class="kt">int</span> <span class="n">mod</span> <span class="p">=</span> <span class="kt">int</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
        <span class="n">Stack</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">stack</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Stack</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;();</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">args</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
            <span class="kt">int</span> <span class="n">value</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">==</span> <span class="s">&quot;+&quot;</span> <span class="p">||</span> <span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">==</span> <span class="s">&quot;-&quot;</span> <span class="p">||</span> <span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">==</span> <span class="s">&quot;*&quot;</span><span class="p">)</span> <span class="k">{</span>
                <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">stack</span><span class="p">.</span><span class="n">Pop</span><span class="p">();</span>
                <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">stack</span><span class="p">.</span><span class="n">Pop</span><span class="p">();</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">==</span> <span class="s">&quot;+&quot;</span><span class="p">)</span>         <span class="n">value</span> <span class="p">=</span> <span class="n">x</span> <span class="p">+</span> <span class="n">y</span><span class="p">;</span>
                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">==</span> <span class="s">&quot;-&quot;</span><span class="p">)</span>    <span class="n">value</span> <span class="p">=</span> <span class="n">x</span> <span class="p">-</span> <span class="n">y</span><span class="p">;</span>
                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">==</span> <span class="s">&quot;*&quot;</span><span class="p">)</span>    <span class="n">value</span> <span class="p">=</span> <span class="n">x</span> <span class="p">*</span> <span class="n">y</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="k">else</span> <span class="k">{</span>
                <span class="n">value</span> <span class="p">=</span> <span class="kt">int</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
            <span class="k">}</span>
            <span class="n">stack</span><span class="p">.</span><span class="n">Push</span><span class="p">((</span><span class="n">mod</span> <span class="p">+</span> <span class="n">value</span> <span class="p">%</span> <span class="n">mod</span><span class="p">)</span> <span class="p">%</span> <span class="n">mod</span><span class="p">);</span>
        <span class="k">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;-&gt; {0}&quot;</span><span class="p">,</span> <span class="n">stack</span><span class="p">.</span><span class="n">Pop</span><span class="p">());</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4929/addtag/" class="addtag" id="addtag_4929">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4929/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4929/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4929"
  >-</span><span
  class="button yellow"
  id="rating_z_4929"
  >0</span><span 
  class="button green"
  id="rating_p_4929"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4929/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4930">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4930/">#4930</a>(<script language="JavaScript">print_time(new Date("2007/12/22 11:43 GMT"));</script><noscript>2007/12/22 11:43 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  アルゴリズムよりも、言語ごとのイディオムを問うような問題かなと思いました。<br/><br/>用途によると思いますが、式を埋め込むならマクロが手軽です。<br/><br/>&nbsp;&nbsp;(with-modular&nbsp;m&nbsp;&lt;式&gt;&nbsp;...)<br/><br/>と書くと&lt;式&gt;&nbsp;内の演算がmod&nbsp;m&nbsp;で行われます。<br/><br/><br/>&nbsp;gosh&gt;&nbsp;(with-modular&nbsp;10&nbsp;(list&nbsp;(+&nbsp;1&nbsp;2)&nbsp;(+&nbsp;7&nbsp;3)&nbsp;(+&nbsp;11&nbsp;12)))<br/>&nbsp;(3&nbsp;0&nbsp;3)<br/>&nbsp;gosh&gt;&nbsp;(with-modular&nbsp;10&nbsp;(list&nbsp;(-&nbsp;3&nbsp;2)&nbsp;(-&nbsp;2&nbsp;3)))<br/>&nbsp;(1&nbsp;9)<br/>&nbsp;gosh&gt;&nbsp;(with-modular&nbsp;10&nbsp;(list&nbsp;(*&nbsp;2&nbsp;3)&nbsp;(*&nbsp;11&nbsp;12)&nbsp;(*&nbsp;18&nbsp;39)))<br/>&nbsp;(6&nbsp;2&nbsp;2)<br/>&nbsp;gosh&gt;&nbsp;(with-modular&nbsp;10&nbsp;(+&nbsp;(-&nbsp;1&nbsp;2)&nbsp;(*&nbsp;3&nbsp;4)&nbsp;(+&nbsp;5&nbsp;6&nbsp;7)&nbsp;(*&nbsp;8&nbsp;9)))<br/>&nbsp;1<br/><br/><br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">define-macro</span> <span class="p">(</span><span class="nf">with-modular</span> <span class="nv">m</span> <span class="o">.</span> <span class="nv">body</span><span class="p">)</span>
  <span class="o">`</span><span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nb">+ </span><span class="p">(</span><span class="nf">make-modular</span> <span class="nv">+</span> <span class="o">,</span><span class="nv">m</span><span class="p">))</span>
         <span class="p">(</span><span class="nb">- </span><span class="p">(</span><span class="nf">make-modular</span> <span class="nv">-</span> <span class="o">,</span><span class="nv">m</span><span class="p">))</span>
         <span class="p">(</span><span class="nb">* </span><span class="p">(</span><span class="nf">make-modular</span> <span class="nv">*</span> <span class="o">,</span><span class="nv">m</span><span class="p">)))</span>
     <span class="o">,@</span><span class="nv">body</span><span class="p">))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">make-modular</span> <span class="nv">op</span> <span class="nv">m</span><span class="p">)</span>
  <span class="p">(</span><span class="k">lambda </span><span class="nv">xs</span>
    <span class="p">(</span><span class="nb">modulo </span><span class="p">(</span><span class="nb">apply </span><span class="nv">op</span> <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="nf">cut</span> <span class="nv">modulo</span> <span class="nv">&lt;&gt;</span> <span class="nv">m</span><span class="p">)</span> <span class="nv">xs</span><span class="p">))</span> <span class="nv">m</span><span class="p">)))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4930/addtag/" class="addtag" id="addtag_4930">タグ</a>:
	
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4930/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4930/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4930"
  >-</span><span
  class="button yellow"
  id="rating_z_4930"
  >0</span><span 
  class="button green"
  id="rating_p_4930"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080223093649/http://ja.doukaku.org/comment/4930/">
    1
    reply
  </a>

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4930/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4931">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4931/">#4931</a>(<script language="JavaScript">print_time(new Date("2007/12/22 11:51 GMT"));</script><noscript>2007/12/22 11:51 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  一方、式を外部から与えたいなら、+,&nbsp;-,&nbsp;*&nbsp;の束縛がmodular&nbsp;arithmeticに置き換わったようなモジュールを用意してその中でevalするという手が使えます。<br/><br/>&nbsp;gosh&gt;&nbsp;(eval-modular&nbsp;10&nbsp;'(+&nbsp;2&nbsp;9))<br/>&nbsp;1<br/>&nbsp;gosh&gt;&nbsp;(eval-modular&nbsp;10&nbsp;'(-&nbsp;2&nbsp;9))<br/>&nbsp;3<br/>&nbsp;gosh&gt;&nbsp;(eval-modular&nbsp;10&nbsp;'(*&nbsp;2&nbsp;9))<br/>&nbsp;8<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">make-modular</span> <span class="nv">op</span> <span class="nv">m</span><span class="p">)</span>
  <span class="p">(</span><span class="k">lambda </span><span class="nv">xs</span>
    <span class="p">(</span><span class="nb">modulo </span><span class="p">(</span><span class="nb">apply </span><span class="nv">op</span> <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="nf">cut</span> <span class="nv">modulo</span> <span class="nv">&lt;&gt;</span> <span class="nv">m</span><span class="p">)</span> <span class="nv">xs</span><span class="p">))</span> <span class="nv">m</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">make-modular-module</span> <span class="nv">m</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">let1</span> <span class="nv">mod</span> <span class="p">(</span><span class="nf">make-module</span> <span class="no">#f</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">eval </span><span class="o">`</span><span class="p">(</span><span class="k">define </span><span class="nv">+</span> <span class="o">,</span><span class="p">(</span><span class="nf">make-modular</span> <span class="nv">+</span> <span class="nv">m</span><span class="p">))</span> <span class="nv">mod</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">eval </span><span class="o">`</span><span class="p">(</span><span class="k">define </span><span class="nv">-</span> <span class="o">,</span><span class="p">(</span><span class="nf">make-modular</span> <span class="nv">-</span> <span class="nv">m</span><span class="p">))</span> <span class="nv">mod</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">eval </span><span class="o">`</span><span class="p">(</span><span class="k">define </span><span class="nv">*</span> <span class="o">,</span><span class="p">(</span><span class="nf">make-modular</span> <span class="nv">*</span> <span class="nv">m</span><span class="p">))</span> <span class="nv">mod</span><span class="p">)</span>
    <span class="nv">mod</span><span class="p">))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">eval-modular</span> <span class="nv">m</span> <span class="nv">expr</span><span class="p">)</span>
  <span class="p">(</span><span class="nb">eval </span><span class="nv">expr</span> <span class="p">(</span><span class="nf">make-modular-module</span> <span class="nv">m</span><span class="p">)))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4931/addtag/" class="addtag" id="addtag_4931">タグ</a>:
	
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4931/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4931/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4931"
  >-</span><span
  class="button yellow"
  id="rating_z_4931"
  >0</span><span 
  class="button green"
  id="rating_p_4931"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080223093649/http://ja.doukaku.org/comment/4930/"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080223093649/http://ja.doukaku.org/comment/4931/root/"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4931/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment4932">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/26/" target="_top">dankogai</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4932/">#4932</a>(<script language="JavaScript">print_time(new Date("2007/12/22 15:38 GMT"));</script><noscript>2007/12/22 15:38 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #bfffbf;">4/4=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
<p><a href="/web/20080223093649/http://search.cpan.org/perldoc?overload">overload</a>の格好の事例。
</p>
<p>Dan the Perl Monger
</p>



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></td><td class="code"><div class="highlight"><pre><span class="nb">package</span> <span class="n">modulo</span><span class="p">;</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
<span class="k">our</span> <span class="nv">$VERSION</span> <span class="o">=</span> <span class="mi">0</span><span class="o">.</span><span class="mo">01</span><span class="p">;</span>

<span class="k">use</span> <span class="n">overload</span>
  <span class="s">&#39;0+&#39;</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="mi">0</span> <span class="p">},</span>
  <span class="s">&#39;+&#39;</span>  <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span> <span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">)</span> <span class="p">},</span>
  <span class="s">&#39;-&#39;</span>  <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span> <span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">)</span> <span class="p">},</span>
  <span class="s">&#39;*&#39;</span>  <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span> <span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">)</span> <span class="p">},</span>
  <span class="p">;</span>

<span class="k">sub </span><span class="nf">import</span> <span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span> <span class="nv">$pkg</span><span class="p">,</span> <span class="nb">undef</span><span class="p">,</span> <span class="nv">$mod</span> <span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$mod</span> <span class="o">&gt;=</span> <span class="mi">2</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&#39;usage: use &#39;</span><span class="p">,</span> <span class="n">__PACKAGE__</span><span class="p">,</span> <span class="s">&#39; mod =&gt; n;&#39;</span><span class="p">;</span>
    <span class="nn">overload::</span><span class="n">constant</span> <span class="n">integer</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span> <span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="nb">shift</span><span class="p">,</span> <span class="nv">$mod</span> <span class="p">)</span> <span class="p">};</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">new</span> <span class="p">{</span>
    <span class="k">my</span> <span class="nv">$pkg</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">my</span> <span class="p">(</span> <span class="nv">$n</span><span class="p">,</span> <span class="nv">$m</span> <span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$n</span> <span class="nv">%</span><span class="err">=</span> <span class="err">$</span><span class="nv">m</span><span class="p">;</span>
    <span class="nb">bless</span> <span class="p">[</span> <span class="nv">$n</span><span class="p">,</span> <span class="nv">$m</span> <span class="p">],</span> <span class="nv">$pkg</span><span class="p">;</span>
<span class="p">}</span>

<span class="mi">1</span><span class="p">;</span>

<span class="c1">#!/usr/local/bin/perl</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
<span class="k">sub </span><span class="nf">say</span> <span class="p">{</span> <span class="k">print</span> <span class="nv">@_</span><span class="p">,</span> <span class="s">&quot;\n&quot;</span> <span class="p">}</span>
<span class="n">say</span> <span class="s">&quot;1 + 2 = &quot;</span><span class="p">,</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span><span class="p">;</span>
<span class="n">say</span> <span class="s">&quot;3 - 4 = &quot;</span><span class="p">,</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">4</span><span class="p">;</span>
<span class="n">say</span> <span class="s">&quot;5 * 6 = &quot;</span><span class="p">,</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">6</span><span class="p">;</span>
<span class="p">{</span>
    <span class="n">say</span> <span class="s">&quot;# mod = 2&quot;</span><span class="p">;</span>
    <span class="k">use</span> <span class="n">modulo</span> <span class="n">mod</span> <span class="o">=&gt;</span> <span class="mi">2</span><span class="p">;</span>
    <span class="n">say</span> <span class="s">&quot;1 + 2 = &quot;</span><span class="p">,</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span><span class="p">;</span>
    <span class="n">say</span> <span class="s">&quot;3 - 4 = &quot;</span><span class="p">,</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">4</span><span class="p">;</span>
    <span class="n">say</span> <span class="s">&quot;5 * 6 = &quot;</span><span class="p">,</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">6</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">{</span>
    <span class="n">say</span> <span class="s">&quot;# mod = 3&quot;</span><span class="p">;</span>
    <span class="k">use</span> <span class="n">modulo</span> <span class="n">mod</span> <span class="o">=&gt;</span> <span class="mi">3</span><span class="p">;</span>
    <span class="n">say</span> <span class="s">&quot;1 + 2 = &quot;</span><span class="p">,</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span><span class="p">;</span>
    <span class="n">say</span> <span class="s">&quot;3 - 4 = &quot;</span><span class="p">,</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">4</span><span class="p">;</span>
    <span class="n">say</span> <span class="s">&quot;5 * 6 = &quot;</span><span class="p">,</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">6</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">say</span> <span class="s">&quot;# original scope&quot;</span><span class="p">;</span>
<span class="n">say</span> <span class="s">&quot;1 + 2 = &quot;</span><span class="p">,</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span><span class="p">;</span>
<span class="n">say</span> <span class="s">&quot;3 - 4 = &quot;</span><span class="p">,</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">4</span><span class="p">;</span>
<span class="n">say</span> <span class="s">&quot;5 * 6 = &quot;</span><span class="p">,</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">6</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4932/addtag/" class="addtag" id="addtag_4932">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4932/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4932/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #bfffbf;"
  >4/4=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4932"
  >-</span><span
  class="button yellow"
  id="rating_z_4932"
  >0</span><span 
  class="button green"
  id="rating_p_4932"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4932/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4933">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4933/">#4933</a>(<script language="JavaScript">print_time(new Date("2007/12/22 20:08 GMT"));</script><noscript>2007/12/22 20:08 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>shiroさんの#4930の真似で自分も演算子の上書きにしてみました。
with-modで囲んだ部分に指定した数字の法が適用されます。
(with-mod 10
  (print (= (print (* 18 39))
            (print (* 8 9)))))
=&gt;
2
2
T</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre>(defmacro with-mod (div &amp;body body)
  `(%with-mod ((+ - * /) ,div) ,@body))

(defmacro %with-mod (((&amp;rest fns) div) &amp;body body)
  (let ((g (gensym)))
    `(let ((,g (labels ,(mapcar
                         (lambda (fn)
                           `(,fn (&amp;rest expr) 
                                 (mod (apply (symbol-function &#39;,fn) expr) ,div)))
                         fns)
                 ,@body)))
       (if (numberp ,g) (mod ,g ,div) ,g))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4933/addtag/" class="addtag" id="addtag_4933">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4933/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4933/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4933"
  >-</span><span
  class="button yellow"
  id="rating_z_4933"
  >0</span><span 
  class="button green"
  id="rating_p_4933"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4933/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4936">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4936/">#4936</a>(<script language="JavaScript">print_time(new Date("2007/12/23 09:35 GMT"));</script><noscript>2007/12/23 09:35 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>まるでどこかの教科書から拾ってきたような。</p>
<p>出力:</p>
<pre class="literal-block">
(1 + 2) = 3
(7 + 3) = 0
(11 + 12) = (1 + 2) = 3
(3 - 2) = 1
(2 - 3) = 9
(2 * 3) = 6
(11 * 12) = (1 * 2) = 2
(18 * 39) = (8 * 9) = 2
</pre>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></td><td class="code"><div class="highlight"><pre><span class="kr">data</span> <span class="n">AExp</span> <span class="o">=</span> <span class="n">Val</span> <span class="n">Integer</span> <span class="o">|</span> <span class="n">Add</span> <span class="n">AExp</span> <span class="n">AExp</span> <span class="o">|</span> <span class="n">Sub</span> <span class="n">AExp</span> <span class="n">AExp</span> <span class="o">|</span> <span class="n">Mul</span> <span class="n">AExp</span> <span class="n">AExp</span>

<span class="nv">isNormal</span> <span class="o">::</span> <span class="n">Integer</span> <span class="o">-&gt;</span> <span class="n">AExp</span> <span class="o">-&gt;</span> <span class="n">Bool</span>
<span class="nv">isNormal</span> <span class="nv">m</span> <span class="p">(</span><span class="n">Val</span> <span class="nv">n</span><span class="p">)</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="nv">n</span> <span class="o">&amp;&amp;</span> <span class="nv">n</span> <span class="o">&lt;</span> <span class="nv">m</span>
<span class="nv">isNormal</span> <span class="nv">m</span> <span class="p">(</span><span class="n">Add</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">isNormal</span> <span class="nv">m</span> <span class="nv">e1</span> <span class="o">&amp;&amp;</span> <span class="nv">isNormal</span> <span class="nv">m</span> <span class="nv">e2</span>
<span class="nv">isNormal</span> <span class="nv">m</span> <span class="p">(</span><span class="n">Sub</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">isNormal</span> <span class="nv">m</span> <span class="nv">e1</span> <span class="o">&amp;&amp;</span> <span class="nv">isNormal</span> <span class="nv">m</span> <span class="nv">e2</span>
<span class="nv">isNormal</span> <span class="nv">m</span> <span class="p">(</span><span class="n">Mul</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">isNormal</span> <span class="nv">m</span> <span class="nv">e1</span> <span class="o">&amp;&amp;</span> <span class="nv">isNormal</span> <span class="nv">m</span> <span class="nv">e2</span>

<span class="nv">normalizeExp</span> <span class="o">::</span> <span class="n">Integer</span> <span class="o">-&gt;</span> <span class="n">AExp</span> <span class="o">-&gt;</span> <span class="n">AExp</span>
<span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="p">(</span><span class="n">Val</span> <span class="nv">n</span><span class="p">)</span> <span class="o">=</span> <span class="n">Val</span> <span class="o">$</span> <span class="nv">mod</span> <span class="nv">n</span> <span class="nv">m</span>
<span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="p">(</span><span class="n">Add</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="n">Add</span> <span class="p">(</span><span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="nv">e1</span><span class="p">)</span> <span class="p">(</span><span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="nv">e2</span><span class="p">)</span>
<span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="p">(</span><span class="n">Sub</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="n">Sub</span> <span class="p">(</span><span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="nv">e1</span><span class="p">)</span> <span class="p">(</span><span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="nv">e2</span><span class="p">)</span>
<span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="p">(</span><span class="n">Mul</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="n">Mul</span> <span class="p">(</span><span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="nv">e1</span><span class="p">)</span> <span class="p">(</span><span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="nv">e2</span><span class="p">)</span>

<span class="nv">showExp</span> <span class="o">::</span> <span class="n">AExp</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">showExp</span> <span class="p">(</span><span class="n">Val</span> <span class="nv">n</span><span class="p">)</span> <span class="o">=</span> <span class="nv">show</span> <span class="nv">n</span>
<span class="nv">showExp</span> <span class="p">(</span><span class="n">Add</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;(&quot;</span> <span class="o">++</span> <span class="nv">showExp</span> <span class="nv">e1</span> <span class="o">++</span> <span class="s">&quot; + &quot;</span> <span class="o">++</span> <span class="nv">showExp</span> <span class="nv">e2</span> <span class="o">++</span> <span class="s">&quot;)&quot;</span>
<span class="nv">showExp</span> <span class="p">(</span><span class="n">Sub</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;(&quot;</span> <span class="o">++</span> <span class="nv">showExp</span> <span class="nv">e1</span> <span class="o">++</span> <span class="s">&quot; - &quot;</span> <span class="o">++</span> <span class="nv">showExp</span> <span class="nv">e2</span> <span class="o">++</span> <span class="s">&quot;)&quot;</span>
<span class="nv">showExp</span> <span class="p">(</span><span class="n">Mul</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="s">&quot;(&quot;</span> <span class="o">++</span> <span class="nv">showExp</span> <span class="nv">e1</span> <span class="o">++</span> <span class="s">&quot; * &quot;</span> <span class="o">++</span> <span class="nv">showExp</span> <span class="nv">e2</span> <span class="o">++</span> <span class="s">&quot;)&quot;</span>

<span class="nv">isReduced</span> <span class="o">::</span> <span class="n">AExp</span> <span class="o">-&gt;</span> <span class="n">Bool</span>
<span class="nv">isReduced</span> <span class="p">(</span><span class="n">Val</span> <span class="nv">n</span><span class="p">)</span> <span class="o">=</span> <span class="n">True</span>
<span class="nv">isReduced</span> <span class="kr">_</span> <span class="o">=</span> <span class="n">False</span>

<span class="nv">wrapBinOp</span> <span class="o">::</span> <span class="p">(</span><span class="n">Integer</span> <span class="o">-&gt;</span> <span class="n">Integer</span> <span class="o">-&gt;</span> <span class="n">Integer</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">AExp</span> <span class="o">-&gt;</span> <span class="n">AExp</span> <span class="o">-&gt;</span> <span class="n">AExp</span>
<span class="nv">wrapBinOp</span> <span class="nv">op</span> <span class="p">(</span><span class="n">Val</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="n">Val</span> <span class="nv">y</span><span class="p">)</span> <span class="o">=</span> <span class="n">Val</span> <span class="o">$</span> <span class="nv">op</span> <span class="nv">x</span> <span class="nv">y</span>

<span class="nv">evalExp</span> <span class="o">::</span> <span class="n">AExp</span> <span class="o">-&gt;</span> <span class="n">AExp</span>
<span class="nv">evalExp</span> <span class="nv">e</span><span class="o">@</span><span class="p">(</span><span class="n">Val</span> <span class="nv">n</span><span class="p">)</span> <span class="o">=</span> <span class="nv">e</span>
<span class="nv">evalExp</span> <span class="p">(</span><span class="n">Add</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">wrapBinOp</span> <span class="p">(</span><span class="o">+</span><span class="p">)</span> <span class="p">(</span><span class="nv">evalExp</span> <span class="nv">e1</span><span class="p">)</span> <span class="p">(</span><span class="nv">evalExp</span> <span class="nv">e2</span><span class="p">)</span>
<span class="nv">evalExp</span> <span class="p">(</span><span class="n">Sub</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">wrapBinOp</span> <span class="p">(</span><span class="o">-</span><span class="p">)</span> <span class="p">(</span><span class="nv">evalExp</span> <span class="nv">e1</span><span class="p">)</span> <span class="p">(</span><span class="nv">evalExp</span> <span class="nv">e2</span><span class="p">)</span>
<span class="nv">evalExp</span> <span class="p">(</span><span class="n">Mul</span> <span class="nv">e1</span> <span class="nv">e2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">wrapBinOp</span> <span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="p">(</span><span class="nv">evalExp</span> <span class="nv">e1</span><span class="p">)</span> <span class="p">(</span><span class="nv">evalExp</span> <span class="nv">e2</span><span class="p">)</span>

<span class="nv">evalExpMod</span> <span class="o">::</span> <span class="n">Integer</span> <span class="o">-&gt;</span> <span class="n">AExp</span> <span class="o">-&gt;</span> <span class="n">AExp</span>
<span class="nv">evalExpMod</span> <span class="nv">m</span> <span class="nv">e</span> <span class="o">=</span> <span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="o">$</span> <span class="nv">evalExp</span> <span class="nv">e</span>

<span class="nv">evalPrintExp</span> <span class="o">::</span> <span class="n">Integer</span> <span class="o">-&gt;</span> <span class="n">AExp</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">evalPrintExp</span> <span class="nv">m</span> <span class="nv">e</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">putStr</span> <span class="o">$</span> <span class="nv">showExp</span> <span class="nv">e</span>
    <span class="kr">if</span> <span class="nv">isNormal</span> <span class="nv">m</span> <span class="nv">e</span>
        <span class="kr">then</span> <span class="nv">putStr</span> <span class="o">$</span> <span class="s">&quot; = &quot;</span> <span class="o">++</span> <span class="nv">showExp</span> <span class="p">(</span><span class="nv">evalExpMod</span> <span class="nv">m</span> <span class="nv">e</span><span class="p">)</span>
        <span class="kr">else</span> <span class="kr">let</span> <span class="nv">e&#39;</span> <span class="o">=</span> <span class="nv">normalizeExp</span> <span class="nv">m</span> <span class="nv">e</span> <span class="kr">in</span>
             <span class="kr">do</span> <span class="nv">putStr</span> <span class="o">$</span> <span class="s">&quot; = &quot;</span> <span class="o">++</span> <span class="nv">showExp</span> <span class="nv">e&#39;</span>
                <span class="nv">putStr</span> <span class="o">$</span> <span class="s">&quot; = &quot;</span> <span class="o">++</span> <span class="nv">showExp</span> <span class="p">(</span><span class="nv">evalExpMod</span> <span class="nv">m</span> <span class="nv">e</span><span class="p">)</span>
    <span class="nv">putStr</span> <span class="s">&quot;\n&quot;</span>

<span class="nv">tests</span> <span class="o">=</span> <span class="p">[</span><span class="n">Add</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">2</span><span class="p">),</span> <span class="n">Add</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">7</span><span class="p">)</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">3</span><span class="p">),</span> <span class="n">Add</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">11</span><span class="p">)</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">12</span><span class="p">),</span>
         <span class="n">Sub</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">3</span><span class="p">)</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">2</span><span class="p">),</span> <span class="n">Sub</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">2</span><span class="p">)</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">3</span><span class="p">),</span>
         <span class="n">Mul</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">2</span><span class="p">)</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">3</span><span class="p">),</span> <span class="n">Mul</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">11</span><span class="p">)</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">12</span><span class="p">),</span> <span class="n">Mul</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">18</span><span class="p">)</span> <span class="p">(</span><span class="n">Val</span> <span class="mi">39</span><span class="p">)]</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">doTest</span> <span class="nv">tests</span>
 <span class="kr">where</span> <span class="nv">doTest</span> <span class="p">[]</span> <span class="o">=</span> <span class="nv">return</span> <span class="p">()</span>
       <span class="nv">doTest</span> <span class="p">(</span><span class="nv">t</span><span class="o">:</span><span class="nv">ts</span><span class="p">)</span> <span class="o">=</span> <span class="nv">evalPrintExp</span> <span class="mi">10</span> <span class="nv">t</span> <span class="o">&gt;&gt;</span> <span class="nv">doTest</span> <span class="nv">ts</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4936/addtag/" class="addtag" id="addtag_4936">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4936/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4936/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4936"
  >-</span><span
  class="button yellow"
  id="rating_z_4936"
  >0</span><span 
  class="button green"
  id="rating_p_4936"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4936/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4937">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4937/">#4937</a>(<script language="JavaScript">print_time(new Date("2007/12/23 10:01 GMT"));</script><noscript>2007/12/23 10:01 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>なんか効率悪そうで気に入りませんが・・・</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">operator</span>
<span class="k">import</span> <span class="nn">sys</span>

<span class="k">def</span> <span class="nf">solve</span><span class="p">(</span><span class="n">expr</span><span class="p">,</span> <span class="n">law</span><span class="p">):</span>
    <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">expr</span><span class="p">)</span>
    <span class="n">tokens</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">normalized</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">expr</span><span class="o">.</span><span class="n">split</span><span class="p">():</span>
        <span class="k">if</span> <span class="n">s</span> <span class="ow">in</span> <span class="p">(</span><span class="s">&#39;*&#39;</span><span class="p">,</span> <span class="s">&#39;+&#39;</span><span class="p">,</span> <span class="s">&#39;-&#39;</span><span class="p">):</span>
            <span class="n">tokens</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">old</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
            <span class="n">new</span> <span class="o">=</span> <span class="n">old</span> <span class="o">%</span> <span class="n">law</span>
            <span class="k">if</span> <span class="n">old</span> <span class="o">!=</span> <span class="n">new</span><span class="p">:</span>
                <span class="n">normalized</span> <span class="o">=</span> <span class="bp">True</span>
            <span class="n">tokens</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">new</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">normalized</span><span class="p">:</span>
        <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot; = &quot;</span> <span class="o">+</span> <span class="s">&quot; &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">tokens</span><span class="p">))</span>
    <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="n">op</span><span class="p">,</span> <span class="n">f</span><span class="p">):</span>
        <span class="k">while</span> <span class="mi">1</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">i</span> <span class="o">=</span> <span class="n">tokens</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">op</span><span class="p">)</span>
            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
                <span class="k">break</span>
            <span class="n">tokens</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span><span class="n">i</span> <span class="o">+</span> <span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">f</span><span class="p">(</span><span class="n">tokens</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">],</span> <span class="n">tokens</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">])</span> <span class="o">%</span> <span class="n">law</span><span class="p">]</span>
    <span class="n">execute</span><span class="p">(</span><span class="s">&quot;*&quot;</span><span class="p">,</span> <span class="n">operator</span><span class="o">.</span><span class="n">mul</span><span class="p">)</span>
    <span class="n">execute</span><span class="p">(</span><span class="s">&quot;+&quot;</span><span class="p">,</span> <span class="n">operator</span><span class="o">.</span><span class="n">add</span><span class="p">)</span>
    <span class="n">execute</span><span class="p">(</span><span class="s">&quot;-&quot;</span><span class="p">,</span> <span class="n">operator</span><span class="o">.</span><span class="n">sub</span><span class="p">)</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="nb">len</span><span class="p">(</span><span class="n">tokens</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s">&quot;invalid expression&quot;</span><span class="p">)</span>
    <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot; = </span><span class="si">%d</span><span class="se">\n</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">tokens</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="c"># addition</span>
    <span class="n">solve</span><span class="p">(</span><span class="s">&quot;1 + 2&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
    <span class="n">solve</span><span class="p">(</span><span class="s">&quot;7 + 3&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
    <span class="n">solve</span><span class="p">(</span><span class="s">&quot;11 + 12&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
    <span class="c"># substraction</span>
    <span class="n">solve</span><span class="p">(</span><span class="s">&quot;3 - 2&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
    <span class="n">solve</span><span class="p">(</span><span class="s">&quot;2 - 3&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
    <span class="c"># multipcation</span>
    <span class="n">solve</span><span class="p">(</span><span class="s">&quot;2 * 3&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
    <span class="n">solve</span><span class="p">(</span><span class="s">&quot;11 * 12&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
    <span class="n">solve</span><span class="p">(</span><span class="s">&quot;18 * 39&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4937/addtag/" class="addtag" id="addtag_4937">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4937/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4937/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4937"
  >-</span><span
  class="button yellow"
  id="rating_z_4937"
  >0</span><span 
  class="button green"
  id="rating_p_4937"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4937/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4938">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4938/">#4938</a>(<script language="JavaScript">print_time(new Date("2007/12/23 10:23 GMT"));</script><noscript>2007/12/23 10:23 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>数値がマイナスの場合ってこれでいいのかな。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">re</span>

<span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">m</span><span class="p">):</span>
  <span class="n">t1</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;(-?[1-9]\d*)\s*([\+\-\*])\s*(\-?[1-9]\d*)\s*&#39;</span><span class="p">,</span> <span class="n">s</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
  <span class="n">t2</span> <span class="o">=</span> <span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">t1</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">%</span><span class="n">m</span><span class="p">),</span> <span class="n">t1</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">t1</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">%</span><span class="n">m</span><span class="p">))</span>
  <span class="k">print</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> = &#39;</span> <span class="o">%</span> <span class="n">t1</span> <span class="o">+</span> <span class="p">((</span><span class="s">&#39;</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s"> = &#39;</span> <span class="o">%</span> <span class="n">t2</span><span class="p">)</span> <span class="k">if</span> <span class="n">t1</span> <span class="o">!=</span> <span class="n">t2</span> <span class="k">else</span> <span class="s">&#39;&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">eval</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">t2</span><span class="p">))</span> <span class="o">%</span> <span class="n">m</span><span class="p">)</span>

<span class="n">f</span><span class="p">(</span><span class="s">&#39;1 + 2&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">f</span><span class="p">(</span><span class="s">&#39;7 + 3&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">f</span><span class="p">(</span><span class="s">&#39;11 + 12&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">f</span><span class="p">(</span><span class="s">&#39;3 - 2&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">f</span><span class="p">(</span><span class="s">&#39;2 - 3&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">f</span><span class="p">(</span><span class="s">&#39;2 * 3&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">f</span><span class="p">(</span><span class="s">&#39;11 * 12&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">f</span><span class="p">(</span><span class="s">&#39;18 * 19&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4938/addtag/" class="addtag" id="addtag_4938">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4938/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4938/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4938"
  >-</span><span
  class="button yellow"
  id="rating_z_4938"
  >0</span><span 
  class="button green"
  id="rating_p_4938"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4938/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4939">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/374/" target="_top">omoikani</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4939/">#4939</a>(<script language="JavaScript">print_time(new Date("2007/12/23 13:21 GMT"));</script><noscript>2007/12/23 13:21 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/standardml/">
	  StandardML
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>functorで。各演算子は正規化したものを表示して、結果を返すようにしています。

- structure M10 = Modular (val m = 10);
- open M10;
- map (fn x =&gt; x) [1 + 2, 7 + 3, 11 + 12];
1 + 2 = 3
7 + 3 = 0
11 + 12 = 1 + 2 = 3
val it = [3,0,3] : int list
- map (fn x =&gt; x) [3 - 2, 2 - 3];
3 - 2 = 1
2 - 3 = 9
val it = [1,9] : int list
- map (fn x =&gt; x) [2 * 3, 11 * 12, 18 * 39];
2 * 3 = 6
11 * 12 = 1 * 2 = 2
18 * 39 = 8 * 9 = 2
val it = [6,2,2] : int list</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="highlight"><pre>functor Modular (val m : int) = struct
  infix 7 *
  infix 6 + -

  local
    fun calc f x y s =
      let
        open Int

        val _ = print (toString x ^ &quot; &quot; ^ s ^ &quot; &quot; ^ toString y ^ &quot; = &quot;)
        val x&#39; = x mod m and y&#39; = y mod m
        val _ = if x &gt;= m orelse y &gt;= m then
                  print (toString x&#39; ^ &quot; &quot; ^ s ^ &quot; &quot; ^ toString y&#39; ^ &quot; = &quot;)
                else ()
        val result = f (x&#39;, y&#39;) mod m
      in
        print (toString result ^ &quot;\n&quot;);
        result
      end
  in
    fun x + y = calc Int.+ x y &quot;+&quot;
    fun x - y = calc Int.- x y &quot;-&quot;
    fun x * y = calc Int.* x y &quot;*&quot;
  end

end
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4939/addtag/" class="addtag" id="addtag_4939">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/standardml/">
		StandardML
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4939/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4939/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4939"
  >-</span><span
  class="button yellow"
  id="rating_z_4939"
  >0</span><span 
  class="button green"
  id="rating_p_4939"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4939/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4940">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4940/">#4940</a>(<script language="JavaScript">print_time(new Date("2007/12/23 14:13 GMT"));</script><noscript>2007/12/23 14:13 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>他の人の回答を見てからではやる気がでませんでしたが、別の情けないアプローチでやることにしました。
法に支配される数値を「#m数値」のように表現するようにしています。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre>(defvar *mod-base* 10)

(defstruct (mod10
             (:constructor mk-mod (v))
             (:print-function 
               (lambda (m s d)
                    (format s &quot;#m~D&quot; (mod10-v m)))))
           ( v 0 :type (mod 10)))
(set-dispatch-macro-character #\# #\m
  #&#39;(lambda (s c1 c2)
      (declare (ignore c1 c2))
      (mk-mod (mod (read-preserving-whitespace s t nil t) *mod-base*))))
(defun mod10-plus (x y)(mk-mod (mod (+ (mod10-v x)(mod10-v y)) *mod-base*)))
(defun mod10-sub  (x y)(mk-mod (mod (- (mod10-v x)(mod10-v y)) *mod-base*)))
(defun mod10-mul  (x y)(mk-mod (mod (* (mod10-v x)(mod10-v y)) *mod-base*)))

(flet
  ((+ (&amp;rest l)
     (if (mod10-p (car l))(reduce #&#39;mod10-plus l)(apply #&#39;+ l)))
   (- (&amp;rest l)
     (if (mod10-p (car l))(reduce #&#39;mod10-sub l) (apply #&#39;- l)))
   (* (&amp;rest l)
     (if (mod10-p (car l))(reduce #&#39;mod10-mul l) (apply #&#39;* l))))

  (format t &quot;~&amp;#m1 + #m2 = ~A~%&quot; (+ #m1 #m2))
  (format t &quot;#m7 + #m3 = ~A~%&quot; (+ #m7 #m3))
  (format t &quot;#m11 + #m12 = ~A~%&quot; (+ #m11 #m12))
  (format t &quot;#m3 - #m2 = ~A~%&quot; (- #m3 #m2))
  (format t &quot;#m2 - #m3 = ~A~%&quot; (- #m2 #m3))
  (format t &quot;#m2 * #m3 = ~A~%&quot; (* #m2 #m3))
  (format t &quot;#m11 * #m12 = ~A~%&quot; (* #m11 #m12))
  (format t &quot;#m18 * #m39 = ~A~%&quot; (* #m18 #m39))
)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4940/addtag/" class="addtag" id="addtag_4940">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4940/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4940/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4940"
  >-</span><span
  class="button yellow"
  id="rating_z_4940"
  >0</span><span 
  class="button green"
  id="rating_p_4940"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4940/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4941">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/218/" target="_top">susu</a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4941/">#4941</a>(<script language="JavaScript">print_time(new Date("2007/12/23 15:17 GMT"));</script><noscript>2007/12/23 15:17 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Law</span> <span class="k">=</span> <span class="kr">struct</span>
  <span class="c">(*normalize 10 (-1);; =&gt;9 *)</span>
  <span class="kr">let</span> <span class="n">normalize</span> <span class="n">m</span> <span class="n">x</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">x</span> <span class="k">=</span> <span class="n">x</span> <span class="kr">mod</span> <span class="n">m</span> <span class="kr">in</span>
    <span class="kr">if</span> <span class="n">x</span><span class="k">&lt;</span><span class="mi">0</span> <span class="kr">then</span> <span class="n">m</span><span class="k">+</span><span class="n">x</span> <span class="kr">else</span> <span class="n">x</span>
    
  <span class="c">(* print 10 (+) &#39;+&#39; 7 3;; print 法 演算 演算文字 演算対象1,2 *)</span>
  <span class="kr">let</span> <span class="n">print</span> <span class="n">m</span> <span class="n">f</span> <span class="n">op</span> <span class="n">x</span> <span class="n">y</span> <span class="k">=</span> 
    <span class="kr">let</span> <span class="n">norm</span> <span class="k">=</span> <span class="n">normalize</span> <span class="n">m</span> <span class="kr">in</span>
    <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;%d %c %d = &quot;</span> <span class="n">x</span> <span class="n">op</span> <span class="n">y</span><span class="k">;</span>
    
    <span class="kr">let</span> <span class="n">nx</span><span class="k">,</span><span class="n">ny</span> <span class="k">=</span> <span class="k">(</span><span class="n">norm</span> <span class="n">x</span><span class="k">),(</span><span class="n">norm</span> <span class="n">y</span><span class="k">)</span> <span class="kr">in</span>
    <span class="kr">let</span> <span class="n">answer</span> <span class="k">=</span> <span class="k">(</span><span class="n">norm</span> <span class="k">(</span><span class="n">f</span> <span class="n">nx</span> <span class="n">ny</span><span class="k">))</span> <span class="kr">in</span>
      <span class="kr">if</span> <span class="n">nx</span><span class="k">=</span><span class="n">x</span> <span class="kr">or</span> <span class="n">ny</span><span class="k">=</span><span class="n">y</span>
      <span class="kr">then</span> <span class="n">print_int</span> <span class="n">answer</span>
      <span class="kr">else</span> <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;%d %c %d = %d&quot;</span> <span class="n">nx</span> <span class="n">op</span> <span class="n">ny</span> <span class="n">answer</span><span class="k">;</span>
    <span class="n">print_newline</span> <span class="k">()</span>
    
<span class="kr">end</span><span class="k">;;</span>

<span class="c">(*使用例*)</span>
  <span class="kr">let</span> <span class="n">add</span> <span class="k">=</span> <span class="n">Law</span><span class="k">.</span><span class="n">print</span> <span class="mi">10</span> <span class="k">(+)</span> <span class="sc">&#39;+&#39;</span> <span class="kr">in</span>
    <span class="n">add</span> <span class="mi">1</span> <span class="mi">2</span><span class="k">;</span>  <span class="n">add</span> <span class="mi">7</span> <span class="mi">3</span><span class="k">;</span>  <span class="n">add</span> <span class="mi">11</span> <span class="mi">12</span><span class="k">;;</span>

  <span class="kr">let</span> <span class="n">sub</span> <span class="k">=</span> <span class="n">Law</span><span class="k">.</span><span class="n">print</span> <span class="mi">10</span> <span class="k">(-)</span> <span class="sc">&#39;-&#39;</span> <span class="kr">in</span>
    <span class="n">sub</span> <span class="mi">3</span> <span class="mi">2</span><span class="k">;</span>  <span class="n">sub</span> <span class="mi">2</span> <span class="mi">3</span><span class="k">;;</span>

  <span class="kr">let</span> <span class="k">(</span> <span class="k">*</span> <span class="k">)</span> <span class="k">=</span> <span class="n">Law</span><span class="k">.</span><span class="n">print</span> <span class="mi">10</span> <span class="k">(</span> <span class="k">*</span> <span class="k">)</span> <span class="sc">&#39;*&#39;</span> <span class="kr">in</span>
    <span class="mi">2</span><span class="k">*</span><span class="mi">3</span><span class="k">;</span>  <span class="mi">11</span><span class="k">*</span><span class="mi">12</span><span class="k">;</span>  <span class="mi">18</span><span class="k">*</span><span class="mi">39</span><span class="k">;;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4941/addtag/" class="addtag" id="addtag_4941">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4941/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4941/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4941"
  >-</span><span
  class="button yellow"
  id="rating_z_4941"
  >0</span><span 
  class="button green"
  id="rating_p_4941"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080223093649/http://ja.doukaku.org/comment/4941/">
    1
    reply
  </a>

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4941/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4942">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/218/" target="_top">susu</a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4942/">#4942</a>(<script language="JavaScript">print_time(new Date("2007/12/23 15:30 GMT"));</script><noscript>2007/12/23 15:30 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>orじゃなくてandだった。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4942/addtag/" class="addtag" id="addtag_4942">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4942"
  >-</span><span
  class="button yellow"
  id="rating_z_4942"
  >0</span><span 
  class="button green"
  id="rating_p_4942"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080223093649/http://ja.doukaku.org/comment/4941/"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080223093649/http://ja.doukaku.org/comment/4942/root/"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4942/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment4943">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/456/" target="_top">kenaxt</a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4943/">#4943</a>(<script language="JavaScript">print_time(new Date("2007/12/23 19:51 GMT"));</script><noscript>2007/12/23 19:51 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ひょっとして hou("-13 * 11",7)  = -13 * 11 = 1 * 4 = 4 ?
そうすると、例題は 3 - 2 = 3 + 8 = 11　?</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">hou</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">m</span><span class="p">)</span>
  <span class="nb">print</span> <span class="n">s</span> <span class="o">+</span> <span class="s2">&quot; = &quot;</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">w</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/\d+/</span><span class="p">){</span><span class="vg">$&amp;</span><span class="o">.</span><span class="n">to_i</span> <span class="o">%</span> <span class="n">m</span><span class="p">})</span> <span class="o">!=</span> <span class="n">s</span>
    <span class="nb">print</span> <span class="n">w</span> <span class="o">+</span> <span class="s2">&quot; = &quot;</span> 
  <span class="k">end</span>
  <span class="nb">p</span> <span class="nb">eval</span><span class="p">(</span><span class="n">w</span><span class="p">)</span><span class="o">%</span><span class="n">m</span>
<span class="k">end</span>

<span class="n">hou</span><span class="p">(</span><span class="s2">&quot;-13 * 11&quot;</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span> <span class="c1"># -13 * 11 = -6 * 4 = 4</span>
<span class="n">hou</span><span class="p">(</span><span class="s2">&quot;7 * 9&quot;</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span>    <span class="c1"># 7 * 9 = 0 * 2 = 0</span>
<span class="n">hou</span><span class="p">(</span><span class="s2">&quot;3 * 4&quot;</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span>    <span class="c1"># 3 * 4 = 5</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4943/addtag/" class="addtag" id="addtag_4943">タグ</a>:
	
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/Ruby1.8.6/">Ruby1.8.6</a>
    
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4943/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4943/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4943"
  >-</span><span
  class="button yellow"
  id="rating_z_4943"
  >0</span><span 
  class="button green"
  id="rating_p_4943"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4943/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4945">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4945/">#4945</a>(<script language="JavaScript">print_time(new Date("2007/12/24 01:16 GMT"));</script><noscript>2007/12/24 01:16 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Squeak&nbsp;Smalltalk&nbsp;で。<br/><br/>式文字列をパース（#parse:class:）して生成されるノードツリーを再帰的にスキャンして正規化。そうして得られた正規化後のノードから、あらためてバイトコードを生成（#generate）し、それをコール（#valueWithReceiver:arguments:)しています。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre>| houEval |
houEval := [:hou :expr |
    | node rec result |
    node := Parser new parse: &#39;DoIt ^&#39;, expr class: UndefinedObject.
    rec := [:nd |
        (nd isKindOf: LiteralNode) ifTrue: [nd key: nd key \\ hou].
        (nd isKindOf: MessageNode) ifTrue: [
            rec copy fixTemps value: nd receiver.
            nd arguments do: [:arg | rec copy fixTemps value: arg]]].
    rec copy fixTemps value: node body statements first expr.
    result := (node generate valueWithReceiver: nil arguments: #()) \\ hou.
    expr, &#39; = &#39;, (node asString allButFirst: 8), &#39; = &#39;, result printString].

houEval value: 10 value: &#39;1 + 2&#39;.   &quot;=&gt; &#39;1 + 2 = 1 + 2 = 3&#39; &quot;
houEval value: 10 value: &#39;7 + 3&#39;.   &quot;=&gt; &#39;7 + 3 = 7 + 3 = 0&#39; &quot;
houEval value: 10 value: &#39;11 + 12&#39;.   &quot;=&gt; &#39;11 + 12 = 1 + 2 = 3&#39; &quot;
houEval value: 10 value: &#39;3 - 2&#39;.   &quot;=&gt; &#39;3 - 2 = 3 - 2 = 1&#39; &quot;
houEval value: 10 value: &#39;2 - 3&#39;.   &quot;=&gt; &#39;2 - 3 = 2 - 3 = 9&#39; &quot;
houEval value: 10 value: &#39;2 * 3&#39;.   &quot;=&gt; &#39;2 * 3 = 2 * 3 = 6&#39; &quot;
houEval value: 10 value: &#39;11 * 12&#39;.   &quot;=&gt; &#39;11 * 12 = 1 * 2 = 2&#39; &quot;
houEval value: 10 value: &#39;18 * 39&#39;.   &quot;=&gt; &#39;18 * 39 = 8 * 9 = 2&#39; &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4945/addtag/" class="addtag" id="addtag_4945">タグ</a>:
	
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4945/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4945/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4945"
  >-</span><span
  class="button yellow"
  id="rating_z_4945"
  >0</span><span 
  class="button green"
  id="rating_p_4945"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4945/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4948">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4948/">#4948</a>(<script language="JavaScript">print_time(new Date("2007/12/24 05:58 GMT"));</script><noscript>2007/12/24 05:58 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>依存型風に書いてみました．法は型で与えます．
法を 3 とするなら，Modulo (S(S(S Z))) Int を
法を10 とするなら，Modulo (S(S(S(S(S(S(S(S(S(S Z)))))))))) Int を
ここでは簡単のために法 0 〜 10 に対応する型エイリアスを宣言してあります．

*Modulo&gt; 1+2 :: Modulo10
3
*Modulo&gt; 7+3 :: Modulo10
0
*Modulo&gt; 11+12 :: Modulo10
3
*Modulo&gt; 3-2 :: Modulo10
1
*Modulo&gt; 2-3 :: Modulo10
9
*Modulo&gt; 2*3 :: Modulo10
6
*Modulo&gt; 11*12 :: Modulo10
2
*Modulo&gt; 18*39 :: Modulo10
2
*Modulo&gt; (1-2::Modulo10) == (1+8::Modulo10)
True
*Modulo&gt; 1+2 :: Modulo7
3
*Modulo&gt; 7+3 :: Modulo7
3
*Modulo&gt; 11+12 :: Modulo7
2
*Modulo&gt; 3-2 :: Modulo7
1
*Modulo&gt; 2-3 :: Modulo7
6
*Modulo&gt; 2*3 :: Modulo7
6
*Modulo&gt; 11*12 :: Modulo7
6
*Modulo&gt; 18*39 :: Modulo7
2
*Modulo&gt; (1-2::Modulo7) == (1+8::Modulo7)
False
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></td><td class="code"><div class="highlight"><pre><span class="cm">{-# LANGUAGE EmptyDataDecls #-}</span>

<span class="kr">module</span> <span class="n">Modulo</span> <span class="kr">where</span>

<span class="kr">data</span> <span class="n">Z</span>
<span class="nv">zero</span> <span class="o">::</span> <span class="n">Z</span>
<span class="nv">zero</span> <span class="o">=</span> <span class="nv">undefined</span>
<span class="kr">data</span> <span class="n">S</span> <span class="nv">a</span>

<span class="nv">predecessor</span> <span class="o">::</span> <span class="n">S</span> <span class="nv">a</span> <span class="o">-&gt;</span> <span class="nv">a</span>
<span class="nv">predecessor</span> <span class="o">=</span> <span class="nv">undefined</span>

<span class="kr">class</span> <span class="n">Nat</span> <span class="nv">a</span> <span class="kr">where</span>
  <span class="nv">toInteger</span> <span class="o">::</span> <span class="nv">a</span> <span class="o">-&gt;</span> <span class="n">Integer</span>

<span class="kr">instance</span> <span class="n">Nat</span> <span class="n">Z</span> <span class="kr">where</span>
  <span class="nv">toInteger</span> <span class="kr">_</span> <span class="o">=</span> <span class="mi">0</span>

<span class="kr">instance</span> <span class="n">Nat</span> <span class="nv">a</span> <span class="o">=&gt;</span> <span class="n">Nat</span> <span class="p">(</span><span class="n">S</span> <span class="nv">a</span><span class="p">)</span> <span class="kr">where</span>
  <span class="nv">toInteger</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span><span class="p">)</span> <span class="o">.</span> <span class="n">Modulo</span><span class="o">.</span><span class="nv">toInteger</span> <span class="o">.</span> <span class="nv">predecessor</span>

<span class="kr">newtype</span> <span class="n">Modulo</span> <span class="nv">a</span> <span class="nv">b</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="p">(</span><span class="nv">a</span><span class="p">,</span><span class="nv">b</span><span class="p">)</span>

<span class="kr">instance</span> <span class="n">Eq</span> <span class="nv">b</span> <span class="o">=&gt;</span> <span class="n">Eq</span> <span class="p">(</span><span class="n">Modulo</span> <span class="nv">a</span> <span class="nv">b</span><span class="p">)</span> <span class="kr">where</span>
  <span class="n">Modulo</span> <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="nv">x</span><span class="p">)</span> <span class="o">==</span> <span class="n">Modulo</span> <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="nv">y</span><span class="p">)</span> <span class="o">=</span> <span class="nv">x</span> <span class="o">==</span> <span class="nv">y</span>

<span class="kr">instance</span> <span class="n">Show</span> <span class="nv">b</span> <span class="o">=&gt;</span> <span class="n">Show</span> <span class="p">(</span><span class="n">Modulo</span> <span class="nv">a</span> <span class="nv">b</span><span class="p">)</span> <span class="kr">where</span>
  <span class="nv">show</span> <span class="p">(</span><span class="n">Modulo</span> <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="nv">x</span><span class="p">))</span> <span class="o">=</span> <span class="nv">show</span> <span class="nv">x</span>

<span class="kr">instance</span> <span class="p">(</span><span class="n">Nat</span> <span class="nv">a</span><span class="p">,</span> <span class="n">Integral</span> <span class="nv">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="n">Num</span> <span class="p">(</span><span class="n">Modulo</span> <span class="nv">a</span> <span class="nv">b</span><span class="p">)</span> <span class="kr">where</span>
  <span class="n">Modulo</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">x</span><span class="p">)</span> <span class="o">+</span> <span class="n">Modulo</span> <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="nv">y</span><span class="p">)</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">z</span><span class="p">)</span>
    <span class="kr">where</span> <span class="nv">z</span> <span class="o">=</span> <span class="p">(</span><span class="nv">x</span><span class="o">+</span><span class="nv">y</span><span class="p">)</span> <span class="p">`</span><span class="nv">mod</span><span class="p">`</span> <span class="nv">fromInteger</span> <span class="p">(</span><span class="n">Modulo</span><span class="o">.</span><span class="nv">toInteger</span> <span class="nv">m</span><span class="p">)</span>
  <span class="n">Modulo</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">x</span><span class="p">)</span> <span class="o">-</span> <span class="n">Modulo</span> <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="nv">y</span><span class="p">)</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">z</span><span class="p">)</span>
    <span class="kr">where</span> <span class="nv">z</span> <span class="o">=</span> <span class="p">(</span><span class="nv">x</span><span class="o">-</span><span class="nv">y</span><span class="p">)</span> <span class="p">`</span><span class="nv">mod</span><span class="p">`</span> <span class="nv">fromInteger</span> <span class="p">(</span><span class="n">Modulo</span><span class="o">.</span><span class="nv">toInteger</span> <span class="nv">m</span><span class="p">)</span>
  <span class="n">Modulo</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">x</span><span class="p">)</span> <span class="o">*</span> <span class="n">Modulo</span> <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="nv">y</span><span class="p">)</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">z</span><span class="p">)</span>
    <span class="kr">where</span> <span class="nv">z</span> <span class="o">=</span> <span class="p">(</span><span class="nv">x</span><span class="o">*</span><span class="nv">y</span><span class="p">)</span> <span class="p">`</span><span class="nv">mod</span><span class="p">`</span> <span class="nv">fromInteger</span> <span class="p">(</span><span class="n">Modulo</span><span class="o">.</span><span class="nv">toInteger</span> <span class="nv">m</span><span class="p">)</span>
  <span class="nv">abs</span> <span class="o">=</span> <span class="nv">id</span>
  <span class="nv">signum</span> <span class="p">(</span><span class="n">Modulo</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">x</span><span class="p">))</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="o">$</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">signum</span> <span class="nv">x</span><span class="p">)</span>
  <span class="nv">fromInteger</span> <span class="nv">n</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">z</span><span class="p">)</span>
    <span class="kr">where</span> <span class="nv">z</span> <span class="o">=</span> <span class="nv">fromInteger</span> <span class="p">(</span><span class="nv">n</span> <span class="p">`</span><span class="nv">mod</span><span class="p">`</span> <span class="n">Modulo</span><span class="o">.</span><span class="nv">toInteger</span> <span class="nv">m</span><span class="p">)</span>
          <span class="nv">m</span> <span class="o">=</span> <span class="nv">undefined</span> <span class="o">::</span> <span class="n">Nat</span> <span class="nv">a</span> <span class="o">=&gt;</span> <span class="nv">a</span>

<span class="kr">type</span> <span class="n">Zero</span>  <span class="o">=</span> <span class="n">Z</span>
<span class="kr">type</span> <span class="n">One</span>   <span class="o">=</span> <span class="n">S</span> <span class="n">Zero</span>
<span class="kr">type</span> <span class="n">Two</span>   <span class="o">=</span> <span class="n">S</span> <span class="n">One</span>      <span class="p">;</span> <span class="kr">type</span> <span class="n">Modulo2</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="n">Two</span> <span class="n">Int</span>
<span class="kr">type</span> <span class="n">Three</span> <span class="o">=</span> <span class="n">S</span> <span class="n">Two</span>      <span class="p">;</span> <span class="kr">type</span> <span class="n">Modulo3</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="n">Three</span> <span class="n">Int</span>
<span class="kr">type</span> <span class="n">Four</span>  <span class="o">=</span> <span class="n">S</span> <span class="n">Three</span>    <span class="p">;</span> <span class="kr">type</span> <span class="n">Modulo4</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="n">Four</span> <span class="n">Int</span>
<span class="kr">type</span> <span class="n">Five</span>  <span class="o">=</span> <span class="n">S</span> <span class="n">Four</span>     <span class="p">;</span> <span class="kr">type</span> <span class="n">Modulo5</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="n">Five</span> <span class="n">Int</span>
<span class="kr">type</span> <span class="n">Six</span>   <span class="o">=</span> <span class="n">S</span> <span class="n">Five</span>     <span class="p">;</span> <span class="kr">type</span> <span class="n">Modulo6</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="n">Six</span> <span class="n">Int</span>
<span class="kr">type</span> <span class="n">Seven</span> <span class="o">=</span> <span class="n">S</span> <span class="n">Six</span>      <span class="p">;</span> <span class="kr">type</span> <span class="n">Modulo7</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="n">Seven</span> <span class="n">Int</span>
<span class="kr">type</span> <span class="n">Eight</span> <span class="o">=</span> <span class="n">S</span> <span class="n">Seven</span>    <span class="p">;</span> <span class="kr">type</span> <span class="n">Modulo8</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="n">Eight</span> <span class="n">Int</span>
<span class="kr">type</span> <span class="n">Nine</span>  <span class="o">=</span> <span class="n">S</span> <span class="n">Eight</span>    <span class="p">;</span> <span class="kr">type</span> <span class="n">Modulo9</span> <span class="o">=</span> <span class="n">Modulo</span> <span class="n">Nine</span> <span class="n">Int</span>
<span class="kr">type</span> <span class="n">Ten</span>   <span class="o">=</span> <span class="n">S</span> <span class="n">Nine</span>     <span class="p">;</span> <span class="kr">type</span> <span class="n">Modulo10</span><span class="o">=</span> <span class="n">Modulo</span> <span class="n">Ten</span> <span class="n">Int</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4948/addtag/" class="addtag" id="addtag_4948">タグ</a>:
	
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/ghc-6.8.2/">ghc-6.8.2</a>
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%AE%E7%84%A1%E3%81%84%E5%9E%8B/">データコンストラクタの無い型</a>
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/%E4%BE%9D%E5%AD%98%E5%9E%8B%E9%A2%A8/">依存型風</a>
    
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4948/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4948/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4948"
  >-</span><span
  class="button yellow"
  id="rating_z_4948"
  >0</span><span 
  class="button green"
  id="rating_p_4948"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080223093649/http://ja.doukaku.org/comment/4948/">
    1
    reply
  </a>

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4948/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4950">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4950/">#4950</a>(<script language="JavaScript">print_time(new Date("2007/12/24 08:19 GMT"));</script><noscript>2007/12/24 08:19 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>これはおもしろい。適切なinstance定義が与えてあれば、型推論によって1などのリテラルさえも後つけのModulo型と解釈させることができちゃうわけですね。duck typingみたいだなあ。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4950/addtag/" class="addtag" id="addtag_4950">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4950"
  >-</span><span
  class="button yellow"
  id="rating_z_4950"
  >0</span><span 
  class="button green"
  id="rating_p_4950"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080223093649/http://ja.doukaku.org/comment/4948/"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080223093649/http://ja.doukaku.org/comment/4950/root/"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080223093649/http://ja.doukaku.org/comment/4950/">
    1
    reply
  </a>

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4950/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4962">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4962/">#4962</a>(<script language="JavaScript">print_time(new Date("2007/12/25 06:32 GMT"));</script><noscript>2007/12/25 06:32 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>Haskell での 0 とか 1 などの整数表記リテラルの型を調べると、

% ghci
GHCi, version 6.8.2: http://www.haskell.org/ghc/  :? for help
Loading package base ... linking ... done.
Prelude&gt; :type 0
0 :: (Num t) =&gt; t
Prelude&gt; :type 1
1 :: (Num t) =&gt; t

のように Numクラスのインスタンスである型になります。
ということは、Numクラスのインスタンスであると宣言された型が
出現するべきだと型推論されたところで表れた整数表記リテラルは
当該の型であること認識できるというわけです。この場合
Modulo a b 型は、aがNatクラスのインスタンス、bがIntegralクラス
のインスタンスである文脈でNumクラスのインスタンスであると宣言
されていますので、Modulo Ten Int やModulo Seven Int が来るべき
場所で整数表記リテラルが出現すれば、それぞれの型として解釈されます。
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4962/addtag/" class="addtag" id="addtag_4962">タグ</a>:
	
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/Num%E3%82%AF%E3%83%A9%E3%82%B9/">Numクラス</a>
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/%E6%95%B4%E6%95%B0%E8%A1%A8%E8%A8%98%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB/">整数表記リテラル</a>
    
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4962"
  >-</span><span
  class="button yellow"
  id="rating_z_4962"
  >0</span><span 
  class="button green"
  id="rating_p_4962"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080223093649/http://ja.doukaku.org/comment/4950/"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080223093649/http://ja.doukaku.org/comment/4962/root/"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4962/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment4949">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4949/">#4949</a>(<script language="JavaScript">print_time(new Date("2007/12/24 07:02 GMT"));</script><noscript>2007/12/24 07:02 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>整数環での四則演算と言うことで、素直に実装してみました。
題意にはないですが除算(乗算の逆演算)も加えてみました。答えがない場合には 0を返します。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75</pre></td><td class="code"><div class="highlight"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Sample115</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">enum</span> <span class="n">Operator</span> <span class="o">{</span>
        <span class="n">Plus</span> <span class="o">{</span>
            <span class="nd">@Override</span> <span class="k">public</span> <span class="n">String</span> <span class="n">toString</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="s">&quot;+&quot;</span><span class="o">;</span> <span class="o">}</span>
            <span class="nd">@Override</span> <span class="k">public</span> <span class="kt">int</span> <span class="n">calc</span><span class="o">(</span><span class="kt">int</span> <span class="n">lhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">rhs</span><span class="o">)</span> <span class="o">{</span> <span class="k">return</span> <span class="n">lhs</span> <span class="o">+</span> <span class="n">rhs</span><span class="o">;</span> <span class="o">}</span>
        <span class="o">},</span>
        <span class="n">Minus</span> <span class="o">{</span>
            <span class="nd">@Override</span> <span class="k">public</span> <span class="n">String</span> <span class="n">toString</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="s">&quot;-&quot;</span><span class="o">;</span> <span class="o">}</span>
            <span class="nd">@Override</span> <span class="k">public</span> <span class="kt">int</span> <span class="n">calc</span><span class="o">(</span><span class="kt">int</span> <span class="n">lhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">rhs</span><span class="o">)</span> <span class="o">{</span> <span class="k">return</span> <span class="n">lhs</span> <span class="o">-</span> <span class="n">rhs</span><span class="o">;</span> <span class="o">}</span>
        <span class="o">},</span>
        <span class="n">Times</span> <span class="o">{</span>
            <span class="nd">@Override</span> <span class="k">public</span> <span class="n">String</span> <span class="n">toString</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="s">&quot;*&quot;</span><span class="o">;</span> <span class="o">}</span>
            <span class="nd">@Override</span> <span class="k">public</span> <span class="kt">int</span> <span class="n">calc</span><span class="o">(</span><span class="kt">int</span> <span class="n">lhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">rhs</span><span class="o">)</span> <span class="o">{</span> <span class="k">return</span> <span class="n">lhs</span> <span class="o">*</span> <span class="n">rhs</span><span class="o">;</span> <span class="o">}</span>
        <span class="o">},</span>
        <span class="n">Divide</span> <span class="o">{</span>
            <span class="nd">@Override</span> <span class="k">public</span> <span class="n">String</span> <span class="n">toString</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="s">&quot;/&quot;</span><span class="o">;</span> <span class="o">}</span>
            <span class="nd">@Override</span> <span class="k">public</span> <span class="kt">int</span> <span class="n">calc</span><span class="o">(</span><span class="kt">int</span> <span class="n">lhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">rhs</span><span class="o">)</span> <span class="o">{</span> <span class="k">return</span> <span class="n">lhs</span> <span class="o">/</span> <span class="n">rhs</span><span class="o">;</span> <span class="o">}</span>
            <span class="nd">@Override</span> <span class="k">public</span> <span class="kt">int</span> <span class="n">operate</span><span class="o">(</span><span class="kt">int</span> <span class="n">lhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">rhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">mod</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%d %s %d = &quot;</span><span class="o">,</span> <span class="n">lhs</span><span class="o">,</span> <span class="n">toString</span><span class="o">(),</span> <span class="n">rhs</span><span class="o">);</span>
                <span class="kt">int</span> <span class="n">l</span> <span class="o">=</span> <span class="n">modulo</span><span class="o">(</span><span class="n">lhs</span><span class="o">,</span> <span class="n">mod</span><span class="o">);</span>
                <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="n">modulo</span><span class="o">(</span><span class="n">rhs</span><span class="o">,</span> <span class="n">mod</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">lhs</span> <span class="o">!=</span> <span class="n">l</span> <span class="o">||</span> <span class="n">rhs</span> <span class="o">!=</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%d %s %d = &quot;</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">toString</span><span class="o">(),</span> <span class="n">r</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">mod</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">l</span> <span class="o">==</span> <span class="n">modulo</span><span class="o">(</span><span class="n">r</span> <span class="o">*</span> <span class="n">index</span><span class="o">,</span> <span class="n">mod</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">ret</span> <span class="o">=</span> <span class="n">index</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ret</span><span class="o">);</span>
                <span class="k">return</span> <span class="n">ret</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">};</span>

        <span class="k">public</span> <span class="k">abstract</span> <span class="kt">int</span> <span class="n">calc</span><span class="o">(</span><span class="kt">int</span> <span class="n">lhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">rhs</span><span class="o">);</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">operate</span><span class="o">(</span><span class="kt">int</span> <span class="n">lhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">rhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">mod</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%d %s %d = &quot;</span><span class="o">,</span> <span class="n">lhs</span><span class="o">,</span> <span class="n">toString</span><span class="o">(),</span> <span class="n">rhs</span><span class="o">);</span>
            <span class="kt">int</span> <span class="n">l</span> <span class="o">=</span> <span class="n">modulo</span><span class="o">(</span><span class="n">lhs</span><span class="o">,</span> <span class="n">mod</span><span class="o">);</span>
            <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="n">modulo</span><span class="o">(</span><span class="n">rhs</span><span class="o">,</span> <span class="n">mod</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">lhs</span> <span class="o">!=</span> <span class="n">l</span> <span class="o">||</span> <span class="n">rhs</span> <span class="o">!=</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%d %s %d = &quot;</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">toString</span><span class="o">(),</span> <span class="n">r</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="n">modulo</span><span class="o">(</span><span class="n">calc</span><span class="o">(</span><span class="n">l</span><span class="o">,</span> <span class="n">r</span><span class="o">),</span> <span class="n">mod</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ret</span><span class="o">);</span>
            <span class="k">return</span> <span class="n">ret</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">protected</span> <span class="kt">int</span> <span class="n">modulo</span><span class="o">(</span><span class="kt">int</span> <span class="n">val</span><span class="o">,</span> <span class="kt">int</span> <span class="n">mod</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="n">val</span><span class="o">;</span>
            <span class="k">while</span> <span class="o">(</span><span class="n">ret</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span> <span class="n">ret</span> <span class="o">+=</span> <span class="n">mod</span><span class="o">;</span> <span class="o">}</span>
            <span class="k">while</span> <span class="o">(</span><span class="n">ret</span> <span class="o">&gt;=</span> <span class="n">mod</span><span class="o">)</span> <span class="o">{</span> <span class="n">ret</span> <span class="o">-=</span> <span class="n">mod</span><span class="o">;</span> <span class="o">}</span>
            <span class="k">return</span> <span class="n">ret</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span> <span class="n">op</span><span class="o">,</span> <span class="kt">int</span> <span class="n">lhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">rhs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">mod</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">op</span><span class="o">.</span><span class="na">operate</span><span class="o">(</span><span class="n">lhs</span><span class="o">,</span> <span class="n">rhs</span><span class="o">,</span> <span class="n">mod</span><span class="o">);</span>
    <span class="o">}</span>


    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Plus</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Plus</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Plus</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Plus</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Minus</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Minus</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Times</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Times</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Times</span><span class="o">,</span> <span class="mi">18</span><span class="o">,</span> <span class="mi">39</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Divide</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">11</span><span class="o">);</span>
        <span class="n">calcModulo</span><span class="o">(</span><span class="n">Operator</span><span class="o">.</span><span class="na">Divide</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">18</span><span class="o">,</span> <span class="mi">11</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4949/addtag/" class="addtag" id="addtag_4949">タグ</a>:
	
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4949/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4949/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4949"
  >-</span><span
  class="button yellow"
  id="rating_z_4949"
  >0</span><span 
  class="button green"
  id="rating_p_4949"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4949/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment4951">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4951/">#4951</a>(<script language="JavaScript">print_time(new Date("2007/12/24 09:29 GMT"));</script><noscript>2007/12/24 09:29 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>適当に書いてみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>

<span class="kt">int</span> <span class="n">normalize</span><span class="p">(</span><span class="kt">int</span> <span class="n">num</span><span class="p">,</span><span class="kt">int</span> <span class="n">law</span><span class="p">){</span>
    <span class="n">num</span><span class="o">%=</span><span class="n">law</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">num</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span> <span class="n">num</span><span class="o">=</span><span class="n">law</span><span class="o">+</span><span class="n">num</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">num</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">calc</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">expression</span> <span class="p">,</span><span class="kt">int</span> <span class="n">law</span><span class="p">){</span>
    <span class="kt">int</span> <span class="n">num1</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">c</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">num2</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">ret</span><span class="p">;</span>

    <span class="n">ret</span><span class="o">=</span><span class="n">sscanf</span><span class="p">(</span><span class="n">expression</span><span class="p">,</span><span class="s">&quot;%d %c %d =&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">num1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">c</span><span class="p">,</span><span class="o">&amp;</span><span class="n">num2</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">ret</span><span class="o">!=</span><span class="mi">3</span><span class="o">||</span><span class="p">(</span><span class="n">c</span><span class="o">!=</span><span class="sc">&#39;+&#39;</span><span class="o">&amp;&amp;</span><span class="n">c</span><span class="o">!=</span><span class="sc">&#39;-&#39;</span><span class="o">&amp;&amp;</span><span class="n">c</span><span class="o">!=</span><span class="sc">&#39;*&#39;</span><span class="p">))</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;数式エラー:%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">expression</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">c</span><span class="o">==</span><span class="sc">&#39;-&#39;</span><span class="p">){</span>
        <span class="n">num2</span><span class="o">*=-</span><span class="mi">1</span><span class="p">;</span>
        <span class="n">c</span><span class="o">=</span><span class="sc">&#39;+&#39;</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">normalize</span><span class="p">(</span><span class="n">num1</span><span class="p">,</span><span class="n">law</span><span class="p">);</span>
    <span class="n">normalize</span><span class="p">(</span><span class="n">num2</span><span class="p">,</span><span class="n">law</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">c</span><span class="o">==</span><span class="sc">&#39;+&#39;</span><span class="p">){</span>
        <span class="n">num1</span><span class="o">+=</span><span class="n">num2</span><span class="p">;</span>
    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
        <span class="n">num1</span><span class="o">*=</span><span class="n">num2</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">expression</span><span class="p">,</span><span class="n">normalize</span><span class="p">(</span><span class="n">num1</span><span class="p">,</span><span class="n">law</span><span class="p">));</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
    <span class="kt">char</span> <span class="n">expression</span><span class="p">[][</span><span class="mi">20</span><span class="p">]</span><span class="o">=</span><span class="p">{</span>
        <span class="c">//足し算</span>
        <span class="s">&quot;1+2= &quot;</span><span class="p">,</span>
        <span class="s">&quot;7 + 3 = &quot;</span><span class="p">,</span>
        <span class="s">&quot;11 + 12 = &quot;</span><span class="p">,</span>
        <span class="c">//引き算</span>
        <span class="s">&quot;3 - 2 = &quot;</span> <span class="p">,</span>
        <span class="s">&quot;2 - 3 = &quot;</span><span class="p">,</span>
        <span class="c">//掛け算 </span>
        <span class="s">&quot;2 * 3 = &quot;</span><span class="p">,</span>
        <span class="s">&quot;11 * 12 = &quot;</span><span class="p">,</span>
        <span class="s">&quot;18 * 39 = &quot;</span><span class="p">,</span>
        <span class="c">//対応していない割り算</span>
        <span class="s">&quot;1 / 3 = &quot;</span><span class="p">,</span>
        <span class="s">&quot;&quot;</span>
    <span class="p">};</span>
    <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">expression</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]){</span>
        <span class="n">calc</span><span class="p">(</span><span class="n">expression</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="mi">10</span><span class="p">);</span>
        <span class="n">i</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4951/addtag/" class="addtag" id="addtag_4951">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4951/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4951/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4951"
  >-</span><span
  class="button yellow"
  id="rating_z_4951"
  >0</span><span 
  class="button green"
  id="rating_p_4951"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4951/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment4963">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/596/" target="_top">梅紫蘇</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4963/">#4963</a>(<script language="JavaScript">print_time(new Date("2007/12/25 06:54 GMT"));</script><noscript>2007/12/25 06:54 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>法演算機としてクラス化。
正規化手順の出力がなければシンプルなんだけど（#if～endif）。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>

<span class="cp">#define REGULARIZE_OUTPUT 1</span>

<span class="k">class</span> <span class="nc">CLowCalculator</span> <span class="p">{</span>
<span class="k">protected</span><span class="o">:</span>
    <span class="kt">int</span> <span class="n">m_nLow</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">Regularize</span><span class="p">(</span><span class="kt">int</span> <span class="n">v</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">m_nLow</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="n">v</span><span class="p">;</span> <span class="p">}</span>
        <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="p">(</span><span class="n">v</span> <span class="o">%</span> <span class="n">m_nLow</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">ans</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="k">return</span> <span class="n">ans</span> <span class="o">+</span> <span class="n">m_nLow</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
    <span class="p">}</span>

<span class="cp">#if defined(REGULARIZE_OUTPUT)</span>
    <span class="kt">void</span> <span class="n">CheckRegularize</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">char</span> <span class="n">op</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">,</span> <span class="kt">int</span> <span class="n">ans</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">m_nLow</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">((</span><span class="n">a</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">a</span> <span class="o">&gt;=</span> <span class="n">m_nLow</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">b</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">b</span> <span class="o">&gt;=</span> <span class="n">m_nLow</span><span class="p">))</span>
            <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">op</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; = &quot;</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">((</span><span class="n">ans</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">ans</span> <span class="o">&gt;=</span> <span class="n">m_nLow</span><span class="p">))</span>
            <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; = &quot;</span><span class="p">;</span>
    <span class="p">}</span>
<span class="cp">#endif</span>

<span class="k">public</span><span class="o">:</span>
    <span class="n">CLowCalculator</span><span class="p">(</span><span class="kt">int</span> <span class="n">nLow</span><span class="p">)</span> <span class="o">:</span> <span class="n">m_nLow</span><span class="p">(</span><span class="n">nLow</span><span class="p">)</span> <span class="p">{}</span>
    <span class="k">virtual</span> <span class="o">~</span><span class="n">CLowCalculator</span><span class="p">()</span> <span class="p">{}</span>

<span class="cp">#if defined(REGULARIZE_OUTPUT)</span>
    <span class="kt">int</span> <span class="n">Add</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">+</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
        <span class="n">CheckRegularize</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="sc">&#39;+&#39;</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">ans</span><span class="p">);</span>
        <span class="k">return</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">Sub</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">+</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">b</span> <span class="o">*</span> <span class="o">-</span><span class="mi">1</span><span class="p">);</span>
        <span class="n">CheckRegularize</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="sc">&#39;+&#39;</span><span class="p">,</span> <span class="n">b</span> <span class="o">*</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">ans</span><span class="p">);</span>
        <span class="k">return</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">Multi</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">*</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
        <span class="n">CheckRegularize</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="sc">&#39;*&#39;</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">ans</span><span class="p">);</span>
        <span class="k">return</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
    <span class="p">}</span>
<span class="cp">#else</span>
    <span class="kt">int</span> <span class="n">Add</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">Regularize</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">+</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>     <span class="p">);</span> <span class="p">}</span>
    <span class="kt">int</span> <span class="n">Sub</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">Regularize</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">+</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">b</span> <span class="o">*</span> <span class="o">-</span><span class="mi">1</span><span class="p">));</span> <span class="p">}</span>
    <span class="kt">int</span> <span class="n">Multi</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">Regularize</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">*</span> <span class="n">Regularize</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>   <span class="p">);</span> <span class="p">}</span>
<span class="cp">#endif</span>
<span class="p">};</span>

<span class="kt">void</span> <span class="n">calc</span><span class="p">(</span><span class="kt">int</span> <span class="n">low</span><span class="p">,</span> <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">char</span> <span class="n">op</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">CLowCalculator</span> <span class="n">calculator</span><span class="p">(</span><span class="n">low</span><span class="p">);</span>
    <span class="k">if</span>      <span class="p">(</span><span class="n">op</span> <span class="o">==</span> <span class="sc">&#39;+&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">calculator</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">op</span> <span class="o">==</span> <span class="sc">&#39;-&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">calculator</span><span class="p">.</span><span class="n">Sub</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">op</span> <span class="o">==</span> <span class="sc">&#39;*&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">calculator</span><span class="p">.</span><span class="n">Multi</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">!=</span> <span class="mi">5</span><span class="p">)</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="n">calc</span><span class="p">(</span><span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span> <span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="n">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">4</span><span class="p">]));</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/4963/addtag/" class="addtag" id="addtag_4963">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4963/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/4963/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4963"
  >-</span><span
  class="button yellow"
  id="rating_z_4963"
  >0</span><span 
  class="button green"
  id="rating_p_4963"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/4963/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5010">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/5010/">#5010</a>(<script language="JavaScript">print_time(new Date("2007/12/27 11:34 GMT"));</script><noscript>2007/12/27 11:34 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>shiroさんと同じく言語のイディオムっちゅーことで、Scalaではこんな風にDSLっぽくしたりしますよ、という例をかねて。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre>class WithModulo(m:int){
  class MInt(self: int){
    def +(i:int) = eval(i, &#39;+&#39;)
    def -(i:int) = eval(i, &#39;-&#39;)
    def *(i:int) = eval(i, &#39;*&#39;)
    def norm(i:int) = {
      if(i&lt;0) (m*(i.abs/m+1))+i
      else i%m
    }

    def eval(i:int, op:char ) = {
      print(self + &quot; &quot; + op + &quot; &quot; + i + &quot; = &quot;)
      if(!List(self, i).forall{i =&gt; i &gt;=0 &amp;&amp; i &lt; m}) {
        print(norm(self)+ &quot; &quot; + op + &quot; &quot; + norm(i) + &quot; = &quot;)
      }
      println(op match {
        case &#39;+&#39; =&gt; norm(self+i)
        case &#39;-&#39; =&gt; norm(self-i)
        case &#39;*&#39; =&gt; norm(self*i)
        case _  =&gt; 0
      })
    }
  }
  def ~(i: int) = new MInt(i)
}
def withModulo(m:int) = new WithModulo(m)


withModulo(10) ~ 3 - 2
withModulo(10) ~ 1 + 2
withModulo(10) ~ 18 * 39
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/5010/addtag/" class="addtag" id="addtag_5010">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/5010/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/5010/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5010"
  >-</span><span
  class="button yellow"
  id="rating_z_5010"
  >0</span><span 
  class="button green"
  id="rating_p_5010"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/5010/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5074">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/642/" target="_top">saws</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/5074/">#5074</a>(<script language="JavaScript">print_time(new Date("2007/12/31 10:18 GMT"));</script><noscript>2007/12/31 10:18 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  こんなもんでいいのかな. 
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="no">OPRS</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;\+&#39;</span><span class="p">,</span> <span class="s1">&#39;\-&#39;</span><span class="p">,</span> <span class="s1">&#39;\*&#39;</span><span class="o">]</span>
<span class="no">EQN</span> <span class="o">=</span> <span class="s2">&quot;1 - 4 * 5&quot;</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/([</span><span class="si">#{</span><span class="no">OPRS</span><span class="o">.</span><span class="n">join</span><span class="si">}</span><span class="sr">])/</span><span class="p">)</span>
<span class="n">N</span> <span class="o">=</span> <span class="mi">5</span>
<span class="c1">#</span>
<span class="n">result</span> <span class="o">=</span> <span class="no">EQN</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
<span class="p">(</span><span class="no">EQN</span><span class="o">.</span><span class="n">size</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
  <span class="n">result</span> <span class="o">=</span> <span class="p">(</span><span class="nb">eval</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">result</span><span class="si">}#{</span><span class="no">EQN</span><span class="o">[</span><span class="mi">2</span><span class="o">*</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span><span class="si">}#{</span><span class="no">EQN</span><span class="o">[</span><span class="mi">2</span><span class="o">*</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">modulo</span><span class="p">(</span><span class="n">N</span><span class="p">)</span>
<span class="p">}</span>
<span class="nb">p</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">EQN</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">result</span><span class="si">}</span><span class="s2">&quot;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/5074/addtag/" class="addtag" id="addtag_5074">タグ</a>:
	
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/1.8.1/">1.8.1</a>
    
    <a href="/web/20080223093649/http://ja.doukaku.org/tag/Ruby/">Ruby</a>
    
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/5074/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/5074/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5074"
  >-</span><span
  class="button yellow"
  id="rating_z_5074"
  >0</span><span 
  class="button green"
  id="rating_p_5074"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/5074/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5110">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/606/" target="_top">pooq</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/5110/">#5110</a>(<script language="JavaScript">print_time(new Date("2008/01/02 01:40 GMT"));</script><noscript>2008/01/02 01:40 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/j/">
	  J
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>   7 plus 3
7 + 3 = 0
0
   2 minus 3
2 - 3 = 9
9
   16 times 12
16 * 12 = 6 * 2 = 2
2
    10 plus 12 times _2 minus 3
_2 - 3 = 5
12 * 5 = 2 * 5 = 0
10 + 0 = 0 + 0 = 0
0
j言語の演算順序は、右結合で動詞の優先順位なしです。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre>print=:(1!:2)&amp;2

calc=:2 :0
:
a=.(&quot;:x),n,&quot;:y
b=.&gt;(+./(x,y)&gt;:m){&#39;&#39;;(&#39; = &#39;,&quot;:m|x),n,&quot;:m|y
c=.m|&quot;.a
print a,b,&#39; = &#39;,&quot;:c
c
)

plus=:10 calc &#39; + &#39;
minus=:10 calc &#39; - &#39;
times=:10 calc &#39; * &#39;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/5110/addtag/" class="addtag" id="addtag_5110">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/j/">
		J
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/5110/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/5110/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5110"
  >-</span><span
  class="button yellow"
  id="rating_z_5110"
  >0</span><span 
  class="button green"
  id="rating_p_5110"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/5110/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5364">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/591/" target="_top">99yen</a><a href="/web/20080223093649/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/5364/">#5364</a>(<script language="JavaScript">print_time(new Date("2008/01/16 10:52 GMT"));</script><noscript>2008/01/16 10:52 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/nadesico/">
	  なでしこ
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre>●法演算(NとMをXのEで)
    &quot;[{X}] &quot;を継続表示
    &quot;{N} {E} {M} &quot;を継続表示
    もし(N&gt;=X||M&gt;=X)ならば
        N=N%X
        M=M%X
        &quot;= {N} {E} {M} &quot;を継続表示
    もし(E=&quot;-&quot;)ならば
        M=X-M
        E=&quot;+&quot;
        &quot;= {N} {E} {M} &quot;を継続表示
    EVAL(&quot;O=({N}{E}{M})%{X}&quot;)
    &quot;= {O} &quot;を継続表示

18と39を10の&quot;*&quot;で法演算
# =&gt; [10] 18 * 39 = 8 * 9 = 2
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/5364/addtag/" class="addtag" id="addtag_5364">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/nadesico/">
		なでしこ
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/5364/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/5364/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5364"
  >-</span><span
  class="button yellow"
  id="rating_z_5364"
  >0</span><span 
  class="button green"
  id="rating_p_5364"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/5364/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5718">
  <p class="banner"><a href="/web/20080223093649/http://ja.doukaku.org/user/218/" target="_top">susu</a>

	
	&nbsp;
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/5718/">#5718</a>(<script language="JavaScript">print_time(new Date("2008/02/10 03:47 GMT"));</script><noscript>2008/02/10 03:47 GMT</noscript>)
	
	
	
	[<a href="/web/20080223093649/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>小さくなりました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre><span class="kr">let</span> <span class="n">law</span> <span class="n">n</span> <span class="n">x</span> <span class="k">=</span>
  <span class="k">(</span><span class="kr">fun</span> <span class="n">res</span> <span class="k">-&gt;</span> <span class="kr">if</span> <span class="k">(</span><span class="mi">1</span> <span class="k">=</span> <span class="n">compare</span> <span class="mi">0</span> <span class="n">res</span><span class="k">)</span> <span class="kr">then</span> <span class="n">res</span><span class="k">+</span><span class="n">n</span> <span class="kr">else</span> <span class="n">res</span><span class="k">)</span> <span class="k">(</span><span class="n">x</span> <span class="kr">mod</span> <span class="n">n</span><span class="k">);;</span>

<span class="kr">let</span> <span class="kr">rec</span> <span class="n">print</span> <span class="n">n</span> <span class="n">op</span> <span class="n">f</span> <span class="n">x</span> <span class="n">y</span> <span class="k">=</span> 
  <span class="kr">let</span> <span class="n">nx</span><span class="k">,</span><span class="n">ny</span> <span class="k">=</span> <span class="k">(</span><span class="n">law</span> <span class="n">n</span> <span class="n">x</span><span class="k">),(</span><span class="n">law</span> <span class="n">n</span> <span class="n">y</span><span class="k">)</span> <span class="kr">in</span>
  <span class="kr">if</span> <span class="n">nx</span><span class="k">=</span><span class="n">x</span> <span class="k">&amp;&amp;</span> <span class="n">ny</span><span class="k">=</span><span class="n">y</span>
  <span class="kr">then</span> <span class="k">(</span><span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;%d %c %d = %d</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="n">nx</span> <span class="n">op</span> <span class="n">ny</span> <span class="k">(</span><span class="n">law</span> <span class="n">n</span> <span class="k">(</span><span class="n">f</span> <span class="n">nx</span> <span class="n">ny</span><span class="k">)))</span>
  <span class="kr">else</span> <span class="k">(</span><span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;%d %c %d = &quot;</span> <span class="n">x</span> <span class="n">op</span> <span class="n">y</span><span class="k">;</span> <span class="n">print</span> <span class="n">n</span> <span class="n">op</span> <span class="n">f</span> <span class="n">nx</span> <span class="n">ny</span><span class="k">);;</span>

<span class="c">(* print 10 &#39;-&#39; (-) (-10) (-2);; -&gt;  -10 - -2 = 0 - 8 = 2 *)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080223093649/http://ja.doukaku.org/comment/5718/addtag/" class="addtag" id="addtag_5718">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080223093649/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20080223093649/http://ja.doukaku.org/comment/5718/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080223093649/http://ja.doukaku.org/comment/5718/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5718"
  >-</span><span
  class="button yellow"
  id="rating_z_5718"
  >0</span><span 
  class="button green"
  id="rating_p_5718"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080223093649/http://ja.doukaku.org/115/reply_to/5718/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20080223093649if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20080223093649/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20080223093649/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20080223093649/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20080223093649/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20080223093649/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20080223093649/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20080223093649/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20080223093649/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20080223093649/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20080223093649/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20080223093649im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20080223093649/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20080223093649/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20080223093649/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20080223093649/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20080223093649/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20080223093649/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20080223093649/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20080223093649/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20080223093649im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20080223093649/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20080223093649/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20080223093649/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20080223093649js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 9:36:49 Feb 23, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:00:00 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
