
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
文字列の八方向検索
DouKaku? </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20081201192127cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20081201192127cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20081201192127cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20081201192127/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20081201192127/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20081201192127js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20081201192127js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20081201192127js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20081201192127js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app0.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/99\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "1";
var displayMonth = "Dec";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/99/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20081201192127" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080331042344/http://ja.doukaku.org/99/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="31 Mar 2008"><strong>MAR</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 19:21:27 Dec 1, 2008">DEC</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jan
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080331042344/http://ja.doukaku.org/99/nested/" title="4:23:44 Mar 31, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 19:21:27 Dec 1, 2008">1</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20070513180302/http://ja.doukaku.org/99/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="13 May 2007"><strong>2007</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 19:21:27 Dec 1, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20081201192127*/http://ja.doukaku.org/99/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>4 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 1 Dec 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000001_2008:11:001000000001_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20081201192127/http://ja.doukaku.org/">DouKaku?</a><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20081201192127im_/http://ja.doukaku.org/static/image/star_gold.png' alt=challenge>
<a href="/web/20081201192127/http://ja.doukaku.org/99/">文字列の八方向検索</a>
</h2>

    





<div class="comment" id="comment4400">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/590/" target="_top">kuromin</a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4400/">#4400</a>(<script language="JavaScript">print_time(new Date("2007/11/25 18:15 GMT"));</script><noscript>2007/11/25 18:15 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>与えられた矩形状の文字列中に存在する文字列"ウオリ"の位置を全て出力するプログラムを
書いてください。
文字列の検索方向は八方全てで、また連続している（左右や上下の境界をまたがない）ものを
対象とします。出力は起点"ウ"の座標と方向のリストにしてください。

サンプル入力：

リオウウリウ
ウオリウオリ
オリリオリウ
リリオオウオ

サンプル出力：

(2, 0), 左
(0, 1), 右
(0, 1), 下
(3, 1), 右
(4, 3), 左上

--
より一般には、任意の検索文字列への対応も考えてみてください。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4400/addtag/" class="addtag" id="addtag_4400">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4400"
  >-</span><span
  class="button yellow"
  id="rating_z_4400"
  >0</span><span 
  class="button green"
  id="rating_p_4400"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081201192127/http://ja.doukaku.org/99/reply_to/4400/">
  reply
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20081201192127/http://ja.doukaku.org/99/post_comment/">
post comment
</a>
</div>


<h2>Posted feedbacks - Nested</h2>
<a href="/web/20081201192127/http://ja.doukaku.org/99/flatten/">Flatten</a> 
<a href="/web/20081201192127/http://ja.doukaku.org/99/">Hidden</a> 


  

  
    





<div class="comment" id="comment4601">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4601/">#4601</a>(<script language="JavaScript">print_time(new Date("2007/12/04 17:06 GMT"));</script><noscript>2007/12/04 17:06 GMT</noscript>)
	
	
	
	[<a href="/web/20081201192127/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Squeak&nbsp;Smalltalk&nbsp;で。<br/><br/>入力をマトリックス化。その全セルについて全方向にチェックして一致したものをメモして出力しています。<br/><br/>Smalltalk&nbsp;のインデックスは１ベースなので、最後の処理は、結果をサンプルと同じ０ベースに合わせるためのつじつま合わせなので通常は不要です。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre>| in word cr nCol nRow mat results directions |

in := &#39;リオウウリウ
ウオリウオリ
オリリオリウ
リリオオウオ&#39;.
word := &#39;ウオリ&#39;.

cr := Character cr.
directions := {
    #左上 -&gt; (-1@-1). #上 -&gt; (0@-1). #右上 -&gt; (1@-1).
    #左 -&gt; (-1@0).  #右 -&gt; (1@0).
    #左下 -&gt; (1@-1). #下 -&gt; (0@1). #右下 -&gt; (1@1)}.
nCol := (in indexOf: cr) - 1.
nRow := (in occurrencesOf: cr) + 1.
in := in copyWithout: cr. 

mat := Matrix rows: nRow columns: nCol contents: in.
results := OrderedCollection new.
mat indicesDo: [:row :col |
    | pos delta reader |
    directions do: [:dirAssoc |
        pos := col@row.
        delta := dirAssoc value.
        reader := word readStream.
        [(mat at: pos y at: pos x ifInvalid: #NG) = reader peek]
            whileTrue: [pos := pos + delta. reader next].
        reader atEnd ifTrue: [results add: col@row -&gt; dirAssoc key]]].
^(results collect: [:each | each key: each key - 1 asPoint]) asArray

&quot;=&gt; {2@0-&gt;#左 . 0@1-&gt;#右 . 0@1-&gt;#下 . 3@1-&gt;#右 . 4@3-&gt;#左上} &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4601/addtag/" class="addtag" id="addtag_4601">Tags</a>:
	
    
    <a href="/web/20081201192127/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20081201192127/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4601/download/">
		download code
      </a>]
	  [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4601/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4601"
  >-</span><span
  class="button yellow"
  id="rating_z_4601"
  >0</span><span 
  class="button green"
  id="rating_p_4601"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081201192127/http://ja.doukaku.org/comment/4601/">
    1
    reply
  </a>

  [<a href="/web/20081201192127/http://ja.doukaku.org/99/reply_to/4601/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4602">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4602/">#4602</a>(<script language="JavaScript">print_time(new Date("2007/12/04 17:13 GMT"));</script><noscript>2007/12/04 17:13 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  #左下&nbsp;-&gt;&nbsp;(-1@1)&nbsp;でした。orz
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4602/addtag/" class="addtag" id="addtag_4602">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4602"
  >-</span><span
  class="button yellow"
  id="rating_z_4602"
  >0</span><span 
  class="button green"
  id="rating_p_4602"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081201192127/http://ja.doukaku.org/comment/4601/"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081201192127/http://ja.doukaku.org/comment/4602/root/"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081201192127/http://ja.doukaku.org/99/reply_to/4602/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment4603">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4603/">#4603</a>(<script language="JavaScript">print_time(new Date("2007/12/04 18:03 GMT"));</script><noscript>2007/12/04 18:03 GMT</noscript>)
	
	
	
	[<a href="/web/20081201192127/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>C#で。
動けばいいや的なコードです。</p>

	</div>
	
	<p class="link">
	  see: <a href="/web/20081201192127/http://blogs.dion.ne.jp/anis7742/#6539284">貧脚レーサーのサボり日記</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">Microsoft.VisualBasic</span><span class="p">;</span>

<span class="k">namespace</span> <span class="err">どう書く</span><span class="nn">_org</span><span class="err">文字列の八方向検索</span> <span class="k">{</span>
    <span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="n">search</span><span class="p">;</span>
        <span class="k">static</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">list</span><span class="p">;</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
            <span class="kt">string</span> <span class="n">sample</span> <span class="p">=</span> 
<span class="s">@&quot;リオウウリウ</span>
<span class="s">ウオリウオリ</span>
<span class="s">オリリオリウ</span>
<span class="s">リリオオウオ&quot;</span><span class="p">;</span>
            <span class="n">search</span> <span class="p">=</span> <span class="s">&quot;ウオリ&quot;</span><span class="p">;</span>
            <span class="kt">char</span><span class="p">[]</span> <span class="n">sp</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">char</span><span class="p">[]</span> <span class="k">{</span> <span class="sc">&#39;\n&#39;</span> <span class="k">}</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">width</span> <span class="p">=</span> <span class="n">sample</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="n">sp</span><span class="p">)[</span><span class="m">0</span><span class="p">].</span><span class="n">Length</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">height</span> <span class="p">=</span> <span class="n">sample</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="n">sp</span><span class="p">).</span><span class="n">Length</span><span class="p">;</span>
            <span class="n">list</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="n">sample</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="n">sp</span><span class="p">));</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">y</span> <span class="p">&lt;</span> <span class="n">list</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">y</span><span class="p">++)</span> <span class="k">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&lt;</span> <span class="n">list</span><span class="p">[</span><span class="n">y</span><span class="p">].</span><span class="n">Length</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span> <span class="k">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">]</span> <span class="p">==</span> <span class="n">search</span><span class="p">[</span><span class="m">0</span><span class="p">])</span> <span class="k">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">E</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">==</span> <span class="n">search</span><span class="p">)</span> <span class="k">{</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;(&quot;</span> <span class="p">+</span> <span class="n">x</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="n">y</span> <span class="p">+</span> <span class="s">&quot;)&quot;</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="s">&quot;右&quot;</span><span class="p">);</span>
                        <span class="k">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">W</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">==</span> <span class="n">search</span><span class="p">)</span> <span class="k">{</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;(&quot;</span> <span class="p">+</span> <span class="n">x</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="n">y</span> <span class="p">+</span> <span class="s">&quot;)&quot;</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="s">&quot;左&quot;</span><span class="p">);</span>
                        <span class="k">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">S</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">==</span> <span class="n">search</span><span class="p">)</span> <span class="k">{</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;(&quot;</span> <span class="p">+</span> <span class="n">x</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="n">y</span> <span class="p">+</span> <span class="s">&quot;)&quot;</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="s">&quot;下&quot;</span><span class="p">);</span>
                        <span class="k">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">N</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">==</span> <span class="n">search</span><span class="p">)</span> <span class="k">{</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;(&quot;</span> <span class="p">+</span> <span class="n">x</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="n">y</span> <span class="p">+</span> <span class="s">&quot;)&quot;</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="s">&quot;上&quot;</span><span class="p">);</span>
                        <span class="k">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">NE</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">==</span> <span class="n">search</span><span class="p">)</span> <span class="k">{</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;(&quot;</span> <span class="p">+</span> <span class="n">x</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="n">y</span> <span class="p">+</span> <span class="s">&quot;)&quot;</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="s">&quot;右上&quot;</span><span class="p">);</span>
                        <span class="k">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">SE</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">==</span> <span class="n">search</span><span class="p">)</span> <span class="k">{</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;(&quot;</span> <span class="p">+</span> <span class="n">x</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="n">y</span> <span class="p">+</span> <span class="s">&quot;)&quot;</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="s">&quot;右下&quot;</span><span class="p">);</span>
                        <span class="k">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">NW</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">==</span> <span class="n">search</span><span class="p">)</span> <span class="k">{</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;(&quot;</span> <span class="p">+</span> <span class="n">x</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="n">y</span> <span class="p">+</span> <span class="s">&quot;)&quot;</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="s">&quot;左上&quot;</span><span class="p">);</span>
                        <span class="k">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">SW</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="p">==</span> <span class="n">search</span><span class="p">)</span> <span class="k">{</span>
                            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;(&quot;</span> <span class="p">+</span> <span class="n">x</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="n">y</span> <span class="p">+</span> <span class="s">&quot;)&quot;</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="s">&quot;左下&quot;</span><span class="p">);</span>
                        <span class="k">}</span>
                    <span class="k">}</span>
                <span class="k">}</span>
            <span class="k">}</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
        <span class="k">}</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="nf">E</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">try</span> <span class="k">{</span>
                <span class="k">return</span> <span class="n">list</span><span class="p">[</span><span class="n">y</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
            <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">ArgumentOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">IndexOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="nf">W</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">try</span> <span class="k">{</span>
                <span class="k">return</span> <span class="n">Strings</span><span class="p">.</span><span class="n">StrReverse</span><span class="p">(</span><span class="n">E</span><span class="p">(</span><span class="n">x</span> <span class="p">-</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span><span class="p">));</span>
            <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">ArgumentOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">IndexOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="nf">S</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">try</span> <span class="k">{</span>
                <span class="n">StringBuilder</span> <span class="n">strb</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="p">();</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                    <span class="n">strb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">y</span> <span class="p">+</span> <span class="n">i</span><span class="p">][</span><span class="n">x</span><span class="p">]);</span>
                <span class="k">}</span>
                <span class="k">return</span> <span class="n">strb</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
            <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">ArgumentOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">IndexOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="nf">N</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">try</span> <span class="k">{</span>
                <span class="k">return</span> <span class="n">Strings</span><span class="p">.</span><span class="n">StrReverse</span><span class="p">(</span><span class="n">S</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="p">-</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span> <span class="p">+</span> <span class="m">1</span><span class="p">));</span>
            <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">ArgumentOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">IndexOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="nf">SE</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">try</span> <span class="k">{</span>
                <span class="n">StringBuilder</span> <span class="n">strb</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="p">();</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                    <span class="n">strb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">y</span> <span class="p">+</span> <span class="n">i</span><span class="p">][</span><span class="n">x</span> <span class="p">+</span> <span class="n">i</span><span class="p">]);</span>
                <span class="k">}</span>
                <span class="k">return</span> <span class="n">strb</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
            <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">ArgumentOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">IndexOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="nf">NW</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">try</span> <span class="k">{</span>
                <span class="k">return</span> <span class="n">Strings</span><span class="p">.</span><span class="n">StrReverse</span><span class="p">(</span><span class="n">SE</span><span class="p">(</span><span class="n">x</span> <span class="p">-</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span> <span class="p">-</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span> <span class="p">+</span> <span class="m">1</span><span class="p">));</span>
            <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">ArgumentOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">IndexOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="nf">NE</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">try</span> <span class="k">{</span>
                <span class="n">StringBuilder</span> <span class="n">strb</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="p">();</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                    <span class="n">strb</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">y</span> <span class="p">-</span> <span class="n">i</span><span class="p">][</span><span class="n">x</span> <span class="p">+</span> <span class="n">i</span><span class="p">]);</span>
                <span class="k">}</span>
                <span class="k">return</span> <span class="n">strb</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
            <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">ArgumentOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">IndexOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="nf">SW</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">try</span> <span class="k">{</span>
                <span class="k">return</span> <span class="n">Strings</span><span class="p">.</span><span class="n">StrReverse</span><span class="p">(</span><span class="n">NE</span><span class="p">(</span><span class="n">x</span> <span class="p">-</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span> <span class="p">+</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="m">1</span><span class="p">));</span>
            <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">ArgumentOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">IndexOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="k">}</span>
        <span class="k">}</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4603/addtag/" class="addtag" id="addtag_4603">Tags</a>:
	
    
    <a href="/web/20081201192127/http://ja.doukaku.org/tag/C%232.0/">C#2.0</a>
    
	&nbsp;

	
      [<a href="/web/20081201192127/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4603/download/">
		download code
      </a>]
	  [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4603/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4603"
  >-</span><span
  class="button yellow"
  id="rating_z_4603"
  >0</span><span 
  class="button green"
  id="rating_p_4603"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081201192127/http://ja.doukaku.org/comment/4603/">
    1
    reply
  </a>

  [<a href="/web/20081201192127/http://ja.doukaku.org/99/reply_to/4603/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4629">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4629/">#4629</a>(<script language="JavaScript">print_time(new Date("2007/12/05 14:40 GMT"));</script><noscript>2007/12/05 14:40 GMT</noscript>)
	
	
	
	[<a href="/web/20081201192127/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>皆さんと比べて長いんで、悔しくて短さに挑戦しました。まだまだ及びません…orz</p>

	</div>
	
	<p class="link">
	  see: <a href="/web/20081201192127/http://blogs.dion.ne.jp/anis7742/#6542397">貧脚レーサーのサボり日記</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="c">//http://ja.doukaku.org/</span>
<span class="c">//http://ja.doukaku.org/99/投稿用</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="k">namespace</span> <span class="err">どう書く</span><span class="nn">_org</span><span class="err">文字列の八方向検索</span> <span class="k">{</span>
    <span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="n">search</span><span class="p">;</span>
        <span class="k">static</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">list</span><span class="p">;</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
            <span class="kt">string</span> <span class="n">sample</span> <span class="p">=</span> <span class="s">&quot;リオウウリウ\nウオリウオリ\nオリリオリウ\nリリオオウオ&quot;</span><span class="p">;</span>
            <span class="n">search</span> <span class="p">=</span> <span class="s">&quot;ウオリ&quot;</span><span class="p">;</span>
            <span class="kt">char</span><span class="p">[]</span> <span class="n">sp</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">char</span><span class="p">[]</span> <span class="k">{</span> <span class="sc">&#39;\n&#39;</span> <span class="k">}</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">width</span> <span class="p">=</span> <span class="n">sample</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="n">sp</span><span class="p">)[</span><span class="m">0</span><span class="p">].</span><span class="n">Length</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">height</span> <span class="p">=</span> <span class="n">sample</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="n">sp</span><span class="p">).</span><span class="n">Length</span><span class="p">;</span>
            <span class="n">list</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="n">sample</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="n">sp</span><span class="p">));</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">y</span> <span class="p">&lt;</span> <span class="n">list</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">y</span><span class="p">++)</span> <span class="k">{</span> <span class="c">//縦ループ</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&lt;</span> <span class="n">list</span><span class="p">[</span><span class="n">y</span><span class="p">].</span><span class="n">Length</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span> <span class="k">{</span> <span class="c">//横ループ</span>
                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">dx</span> <span class="p">=</span> <span class="p">-</span><span class="m">1</span><span class="p">;</span> <span class="n">dx</span> <span class="p">&lt;=</span> <span class="m">1</span><span class="p">;</span> <span class="n">dx</span><span class="p">++)</span> <span class="k">{</span> <span class="c">//左右方向ループ</span>
                        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">dy</span> <span class="p">=</span> <span class="p">-</span><span class="m">1</span><span class="p">;</span> <span class="n">dy</span> <span class="p">&lt;=</span> <span class="m">1</span><span class="p">;</span> <span class="n">dy</span><span class="p">++)</span> <span class="k">{</span> <span class="c">//上下方向ループ　-1は上、左　1は下、右を表す</span>
                            <span class="k">try</span> <span class="k">{</span>
                                <span class="kt">string</span> <span class="n">strb</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
                                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">search</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span> <span class="c">//iは移動量</span>
                                    <span class="n">strb</span> <span class="p">+=</span> <span class="n">list</span><span class="p">[</span><span class="n">y</span> <span class="p">+</span> <span class="n">i</span> <span class="p">*</span> <span class="n">dy</span><span class="p">][</span><span class="n">x</span> <span class="p">+</span> <span class="n">i</span> <span class="p">*</span> <span class="n">dx</span><span class="p">];</span> <span class="c">//移動方向をdy,dxで乗算することで反転</span>
                                <span class="k">}</span>
                                <span class="k">if</span><span class="p">(</span><span class="n">search</span> <span class="p">==</span> <span class="n">strb</span><span class="p">)</span> <span class="k">{</span>
                                    <span class="kt">string</span> <span class="n">directionStr</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
                                    <span class="k">if</span><span class="p">(</span><span class="n">dx</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span>
                                        <span class="n">directionStr</span> <span class="p">+=</span> <span class="s">&quot;左&quot;</span><span class="p">;</span>
                                    <span class="k">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">dx</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span>
                                        <span class="n">directionStr</span> <span class="p">+=</span> <span class="s">&quot;右&quot;</span><span class="p">;</span>
                                    <span class="k">}</span>
                                    <span class="k">if</span><span class="p">(</span><span class="n">dy</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span>
                                        <span class="n">directionStr</span> <span class="p">+=</span> <span class="s">&quot;上&quot;</span><span class="p">;</span>
                                    <span class="k">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">dy</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span>
                                        <span class="n">directionStr</span> <span class="p">+=</span> <span class="s">&quot;下&quot;</span><span class="p">;</span>
                                    <span class="k">}</span>
                                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;(&quot;</span> <span class="p">+</span> <span class="n">x</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="n">y</span> <span class="p">+</span> <span class="s">&quot;)&quot;</span> <span class="p">+</span> <span class="s">&quot;,&quot;</span> <span class="p">+</span> <span class="n">directionStr</span><span class="p">);</span>
                                <span class="k">}</span>
                            <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">ArgumentOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">}</span> <span class="k">catch</span><span class="p">(</span><span class="n">IndexOutOfRangeException</span><span class="p">)</span> <span class="k">{</span> <span class="k">}</span>
                        <span class="k">}</span>
                    <span class="k">}</span>
                <span class="k">}</span>
            <span class="k">}</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
        <span class="k">}</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4629/addtag/" class="addtag" id="addtag_4629">Tags</a>:
	
    
    <a href="/web/20081201192127/http://ja.doukaku.org/tag/C%232.0/">C#2.0</a>
    
	&nbsp;

	
      [<a href="/web/20081201192127/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4629/download/">
		download code
      </a>]
	  [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4629/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4629"
  >-</span><span
  class="button yellow"
  id="rating_z_4629"
  >0</span><span 
  class="button green"
  id="rating_p_4629"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081201192127/http://ja.doukaku.org/comment/4603/"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081201192127/http://ja.doukaku.org/comment/4629/root/"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081201192127/http://ja.doukaku.org/99/reply_to/4629/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment4605">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/343/" target="_top">matyr</a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4605/">#4605</a>(<script language="JavaScript">print_time(new Date("2007/12/04 19:43 GMT"));</script><noscript>2007/12/04 19:43 GMT</noscript>)
	
	
	
	[<a href="/web/20081201192127/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  単純に総当たり。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">doukaku99</span><span class="p">(</span><span class="nx">target</span><span class="o">,</span> <span class="nx">rect</span><span class="p">){</span> <span class="nx">rect</span> <span class="o">=</span> <span class="nx">rect</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/[\r\n]+/</span><span class="p">);</span>
  <span class="k">var</span> <span class="nx">X</span> <span class="o">=</span> <span class="nx">rect</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">,</span> <span class="nx">Y</span> <span class="o">=</span> <span class="nx">rect</span><span class="p">.</span><span class="nx">length</span><span class="o">,</span> <span class="nx">find</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nx">x</span><span class="o">,</span> <span class="nx">y</span><span class="o">,</span> <span class="nx">dx</span><span class="o">,</span> <span class="nx">dy</span><span class="p">){</span>
    <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="nx">c</span><span class="o">;</span>  <span class="nx">c</span> <span class="o">=</span> <span class="nx">target</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">i</span><span class="o">++</span><span class="p">);</span> <span class="nx">x</span> <span class="o">+=</span> <span class="nx">dx</span><span class="o">,</span> <span class="nx">y</span> <span class="o">+=</span> <span class="nx">dy</span><span class="p">)</span>
      <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">rect</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span> <span class="o">||</span> <span class="nx">c</span> <span class="o">!==</span> <span class="nx">rect</span><span class="p">[</span><span class="nx">y</span><span class="p">].</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">x</span><span class="p">))</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
  <span class="p">}</span><span class="o">,</span> <span class="nx">dir</span> <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;上&#39;</span><span class="o">:</span> <span class="p">[</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="p">]</span><span class="o">,</span> <span class="s1">&#39;右上&#39;</span><span class="o">:</span> <span class="p">[</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="p">]</span><span class="o">,</span> <span class="s1">&#39;右&#39;</span><span class="o">:</span> <span class="p">[</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="p">]</span><span class="o">,</span> <span class="s1">&#39;右下&#39;</span><span class="o">:</span> <span class="p">[</span> <span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">,</span>
             <span class="s1">&#39;下&#39;</span><span class="o">:</span> <span class="p">[</span> <span class="mi">0</span><span class="o">,-</span><span class="mi">1</span><span class="p">]</span><span class="o">,</span> <span class="s1">&#39;左下&#39;</span><span class="o">:</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="o">,-</span><span class="mi">1</span><span class="p">]</span><span class="o">,</span> <span class="s1">&#39;左&#39;</span><span class="o">:</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="p">]</span><span class="o">,</span> <span class="s1">&#39;左上&#39;</span><span class="o">:</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span>  <span class="mi">1</span><span class="p">]</span> <span class="p">};</span>
  <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">out</span> <span class="o">=</span> <span class="p">[]</span><span class="o">,</span> <span class="nx">o</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="nx">k</span><span class="o">,</span> <span class="nx">x</span><span class="o">,</span> <span class="nx">y</span> <span class="o">=</span> <span class="nx">Y</span><span class="o">;</span> <span class="nx">y</span><span class="o">--;</span><span class="p">)</span> <span class="k">for</span><span class="p">(</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">X</span><span class="o">;</span> <span class="nx">x</span><span class="o">--;</span><span class="p">)</span> <span class="k">for</span><span class="p">(</span><span class="nx">k</span> <span class="k">in</span> <span class="nx">dir</span><span class="p">)</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">find</span><span class="p">(</span><span class="nx">x</span><span class="o">,</span> <span class="nx">y</span><span class="o">,</span> <span class="nx">dir</span><span class="p">[</span><span class="nx">k</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">,</span> <span class="nx">dir</span><span class="p">[</span><span class="nx">k</span><span class="p">][</span><span class="mi">1</span><span class="p">]))</span> <span class="nx">out</span><span class="p">[</span><span class="nx">o</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;(&#39;</span><span class="o">+</span> <span class="nx">x</span> <span class="o">+</span><span class="s1">&#39;, &#39;</span><span class="o">+</span> <span class="nx">y</span> <span class="o">+</span><span class="s1">&#39;) &#39;</span><span class="o">+</span> <span class="nx">k</span><span class="o">;</span>
  <span class="k">return</span> <span class="nx">out</span><span class="p">.</span><span class="nx">reverse</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;\n&#39;</span><span class="p">);</span>
<span class="p">}</span>

<span class="p">(</span><span class="k">typeof</span> <span class="nx">confirm</span> <span class="o">!=</span> <span class="s1">&#39;undefined&#39;</span> <span class="o">?</span> <span class="nx">confirm</span> <span class="o">:</span> <span class="k">typeof</span> <span class="nx">print</span> <span class="o">!=</span> <span class="s1">&#39;undefined&#39;</span> <span class="o">?</span> <span class="nx">print</span> <span class="o">:</span>
 <span class="k">function</span><span class="p">(</span><span class="nx">$</span><span class="p">){</span> <span class="k">typeof</span> <span class="nx">WSH</span> <span class="o">==</span> <span class="s1">&#39;object&#39;</span> <span class="o">&amp;&amp;</span> <span class="nx">WSH</span><span class="p">.</span><span class="nx">echo</span><span class="p">(</span><span class="nx">$</span><span class="p">)</span> <span class="p">})(</span><span class="nx">doukaku99</span><span class="p">(</span><span class="s1">&#39;ウオリ&#39;</span><span class="o">,</span><span class="s1">&#39;\</span>
<span class="s1">リオウウリウ\n\</span>
<span class="s1">ウオリウオリ\n\</span>
<span class="s1">オリリオリウ\n\</span>
<span class="s1">リリオオウオ&#39;</span><span class="p">));</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4605/addtag/" class="addtag" id="addtag_4605">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081201192127/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4605/download/">
		download code
      </a>]
	  [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4605/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4605"
  >-</span><span
  class="button yellow"
  id="rating_z_4605"
  >0</span><span 
  class="button green"
  id="rating_p_4605"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081201192127/http://ja.doukaku.org/99/reply_to/4605/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4608">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/589/" target="_top">nido</a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4608/">#4608</a>(<script language="JavaScript">print_time(new Date("2007/12/05 02:18 GMT"));</script><noscript>2007/12/05 02:18 GMT</noscript>)
	
	
	
	[<a href="/web/20081201192127/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>普通のやり方ですか。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="no">TEXT</span><span class="o">=&lt;&lt;-</span><span class="no">EOS</span>
<span class="sh">リオウウリウ</span>
<span class="sh">ウオリウオリ</span>
<span class="sh">オリリオリウ</span>
<span class="sh">リリオオウオ</span>
<span class="no">EOS</span>

<span class="no">WORD</span><span class="o">=</span><span class="s2">&quot;ウオリ&quot;</span>

<span class="no">M_TEXT</span><span class="o">=</span><span class="no">TEXT</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="n">e</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)}</span>
<span class="no">A_WORD</span><span class="o">=</span><span class="no">WORD</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">//</span><span class="p">)</span>
<span class="no">S_DEST</span><span class="o">=[</span>
  <span class="o">[</span><span class="s2">&quot;上&quot;</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="s2">&quot;右上&quot;</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="s2">&quot;右&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="s2">&quot;右下&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span>
  <span class="o">[</span><span class="s2">&quot;下&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="s2">&quot;左下&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="s2">&quot;左&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="s2">&quot;左上&quot;</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span>
<span class="o">]</span>
<span class="no">M_TEXT</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">line</span><span class="p">,</span><span class="n">y</span><span class="o">|</span>
  <span class="n">line</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">c</span><span class="p">,</span><span class="n">x</span><span class="o">|</span>
    <span class="k">next</span> <span class="k">unless</span> <span class="n">c</span><span class="o">==</span><span class="no">A_WORD</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
    <span class="no">S_DEST</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">desc</span><span class="p">,</span><span class="n">dy</span><span class="p">,</span><span class="n">dx</span><span class="o">|</span>
      <span class="k">unless</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">A_WORD</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">find</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
          <span class="p">((</span><span class="n">y</span><span class="o">+</span><span class="n">dy</span><span class="o">*</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="no">M_TEXT</span><span class="o">[</span><span class="n">y</span><span class="o">+</span><span class="n">dy</span><span class="o">*</span><span class="n">i</span><span class="o">].</span><span class="n">nil?</span><span class="p">)</span><span class="o">||</span>
          <span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="n">dx</span><span class="o">*</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="no">M_TEXT</span><span class="o">[</span><span class="n">y</span><span class="o">+</span><span class="n">dy</span><span class="o">*</span><span class="n">i</span><span class="o">][</span><span class="n">x</span><span class="o">+</span><span class="n">dx</span><span class="o">*</span><span class="n">i</span><span class="o">]!=</span><span class="no">A_WORD</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="p">)</span>
        <span class="k">end</span>
        <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">desc</span><span class="si">}</span><span class="s2">(</span><span class="si">#{</span><span class="n">x</span><span class="si">}</span><span class="s2">,</span><span class="si">#{</span><span class="n">y</span><span class="si">}</span><span class="s2">)&quot;</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4608/addtag/" class="addtag" id="addtag_4608">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081201192127/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4608/download/">
		download code
      </a>]
	  [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4608/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4608"
  >-</span><span
  class="button yellow"
  id="rating_z_4608"
  >0</span><span 
  class="button green"
  id="rating_p_4608"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081201192127/http://ja.doukaku.org/99/reply_to/4608/">
  reply
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment4609">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4609/">#4609</a>(<script language="JavaScript">print_time(new Date("2007/12/05 02:33 GMT"));</script><noscript>2007/12/05 02:33 GMT</noscript>)
	
	
	
	[<a href="/web/20081201192127/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>素直に総当りで解いてみました。
enumをもうちょっと良い感じに使うと、さらに面白くなりそうな気もします。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample99</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">enum</span> <span class="n">Direction</span> <span class="o">{</span>
        <span class="err">左上</span><span class="o">,</span> <span class="err">上</span><span class="o">,</span> <span class="err">右上</span><span class="o">,</span> <span class="err">右</span><span class="o">,</span> <span class="err">右下</span><span class="o">,</span> <span class="err">下</span><span class="o">,</span> <span class="err">左下</span><span class="o">,</span> <span class="err">左</span><span class="o">,</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">final</span> <span class="n">String</span><span class="o">[]</span> <span class="n">matrix_</span><span class="o">;</span>

    <span class="k">public</span> <span class="n">Sample99</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">matrix</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">matrix_</span> <span class="o">=</span> <span class="n">matrix</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">AnswerData</span><span class="o">[]</span> <span class="n">search</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="n">AnswerData</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">AnswerData</span><span class="o">&gt;();</span>
        <span class="kt">char</span><span class="o">[]</span> <span class="n">input</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">matrix_</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">char</span><span class="o">[]</span> <span class="n">cs</span> <span class="o">=</span> <span class="n">matrix_</span><span class="o">[</span><span class="n">y</span><span class="o">].</span><span class="na">toCharArray</span><span class="o">();</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">cs</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">cs</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">!=</span> <span class="n">input</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="k">continue</span><span class="o">;</span>

                <span class="k">for</span> <span class="o">(</span><span class="n">Direction</span> <span class="nl">d:</span> <span class="n">Direction</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="o">{</span>
                    <span class="k">switch</span> <span class="o">(</span><span class="n">d</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">case</span> <span class="err">左上</span><span class="o">:</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">search</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">d</span><span class="o">));</span>
                            <span class="o">}</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="err">上</span><span class="o">:</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">search</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">d</span><span class="o">));</span>
                            <span class="o">}</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="err">右上</span><span class="o">:</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">cs</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">search</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">d</span><span class="o">));</span>
                            <span class="o">}</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="err">右</span><span class="o">:</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">cs</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">search</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">))</span> <span class="o">{</span>
                                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">d</span><span class="o">));</span>
                            <span class="o">}</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="err">右下</span><span class="o">:</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="n">cs</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">matrix_</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">search</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">d</span><span class="o">));</span>
                            <span class="o">}</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="err">下</span><span class="o">:</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">matrix_</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">search</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">d</span><span class="o">));</span>
                            <span class="o">}</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="err">左下</span><span class="o">:</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">y</span> <span class="o">&gt;</span> <span class="n">matrix_</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">search</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">d</span><span class="o">));</span>
                            <span class="o">}</span>
                            <span class="k">break</span><span class="o">;</span>
                        <span class="k">case</span> <span class="err">左</span><span class="o">:</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
                            <span class="k">if</span> <span class="o">(</span><span class="n">search</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">))</span> <span class="o">{</span>
                                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">d</span><span class="o">));</span>
                            <span class="o">}</span>
                            <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">search</span><span class="o">(</span><span class="kt">char</span><span class="o">[]</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">dx</span><span class="o">,</span> <span class="kt">int</span> <span class="n">dy</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">matrix_</span><span class="o">[</span><span class="n">y</span> <span class="o">+</span> <span class="n">dy</span> <span class="o">*</span> <span class="n">index</span><span class="o">].</span><span class="na">charAt</span><span class="o">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">dx</span> <span class="o">*</span> <span class="n">index</span><span class="o">)</span> <span class="o">!=</span> <span class="n">input</span><span class="o">[</span><span class="n">index</span><span class="o">])</span> <span class="o">{</span>
                <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">AnswerData</span> <span class="o">{</span>
        <span class="k">public</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">x</span><span class="o">;</span>
        <span class="k">public</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">y</span><span class="o">;</span>
        <span class="k">public</span> <span class="k">final</span> <span class="n">Direction</span> <span class="n">d</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="n">AnswerData</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="n">Direction</span> <span class="n">d</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
            <span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
            <span class="k">this</span><span class="o">.</span><span class="na">d</span> <span class="o">=</span> <span class="n">d</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Sample99</span> <span class="n">s</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sample99</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span>
                <span class="s">&quot;リオウウリウ&quot;</span><span class="o">,</span>
                <span class="s">&quot;ウオリウオリ&quot;</span><span class="o">,</span>
                <span class="s">&quot;オリリオリウ&quot;</span><span class="o">,</span>
                <span class="s">&quot;リリオオウオ&quot;</span><span class="o">,</span>
        <span class="o">});</span>
        <span class="n">AnswerData</span><span class="o">[]</span> <span class="n">datas</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="s">&quot;ウオリ&quot;</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">AnswerData</span> <span class="nl">d:</span> <span class="n">datas</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;(%d, %d), %s%n&quot;</span><span class="o">,</span> <span class="n">d</span><span class="o">.</span><span class="na">x</span><span class="o">,</span> <span class="n">d</span><span class="o">.</span><span class="na">y</span><span class="o">,</span> <span class="n">d</span><span class="o">.</span><span class="na">d</span><span class="o">.</span><span class="na">name</span><span class="o">());</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4609/addtag/" class="addtag" id="addtag_4609">Tags</a>:
	
    
    <a href="/web/20081201192127/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20081201192127/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4609/download/">
		download code
      </a>]
	  [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4609/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4609"
  >-</span><span
  class="button yellow"
  id="rating_z_4609"
  >0</span><span 
  class="button green"
  id="rating_p_4609"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081201192127/http://ja.doukaku.org/comment/4609/">
    1
    reply
  </a>

  [<a href="/web/20081201192127/http://ja.doukaku.org/99/reply_to/4609/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4610">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4610/">#4610</a>(<script language="JavaScript">print_time(new Date("2007/12/05 03:36 GMT"));</script><noscript>2007/12/05 03:36 GMT</noscript>)
	
	
	
	[<a href="/web/20081201192127/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>すいません、連投になってしまいますが短い版を投稿させていただきます。チェック手抜き版です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample99_2</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">enum</span> <span class="n">Direction</span> <span class="o">{</span>
        <span class="err">左上</span><span class="o">(-</span><span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">),</span>
        <span class="err">上</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">),</span>
        <span class="err">右上</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">),</span>
        <span class="err">右</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">),</span>
        <span class="err">右下</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span>
        <span class="err">下</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span>
        <span class="err">左下</span><span class="o">(-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span>
        <span class="err">左</span><span class="o">(-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>

        <span class="k">public</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">dx_</span><span class="o">;</span>
        <span class="k">public</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">dy_</span><span class="o">;</span>

        <span class="k">private</span> <span class="n">Direction</span><span class="o">(</span><span class="kt">int</span> <span class="n">dx</span><span class="o">,</span> <span class="kt">int</span> <span class="n">dy</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">dx_</span> <span class="o">=</span> <span class="n">dx</span><span class="o">;</span>
            <span class="n">dy_</span> <span class="o">=</span> <span class="n">dy</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">final</span> <span class="n">String</span><span class="o">[]</span> <span class="n">matrix_</span><span class="o">;</span>

    <span class="k">public</span> <span class="n">Sample99_2</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">matrix</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">matrix_</span> <span class="o">=</span> <span class="n">matrix</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">AnswerData</span><span class="o">[]</span> <span class="n">search</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="n">AnswerData</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">AnswerData</span><span class="o">&gt;();</span>
        <span class="kt">char</span><span class="o">[]</span> <span class="n">input</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">matrix_</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">maxX</span> <span class="o">=</span> <span class="n">matrix_</span><span class="o">[</span><span class="n">y</span><span class="o">].</span><span class="na">length</span><span class="o">();</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">maxX</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">for</span> <span class="o">(</span><span class="n">Direction</span> <span class="nl">d:</span> <span class="n">Direction</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">search</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">d</span><span class="o">.</span><span class="na">dx_</span><span class="o">,</span> <span class="n">d</span><span class="o">.</span><span class="na">dy_</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">d</span><span class="o">));</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">AnswerData</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">boolean</span> <span class="n">search</span><span class="o">(</span><span class="kt">char</span><span class="o">[]</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="kt">int</span> <span class="n">dx</span><span class="o">,</span> <span class="kt">int</span> <span class="n">dy</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">matrix_</span><span class="o">[</span><span class="n">y</span> <span class="o">+</span> <span class="n">dy</span> <span class="o">*</span> <span class="n">index</span><span class="o">].</span><span class="na">charAt</span><span class="o">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">dx</span> <span class="o">*</span> <span class="n">index</span><span class="o">)</span> <span class="o">!=</span> <span class="n">input</span><span class="o">[</span><span class="n">index</span><span class="o">])</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IndexOutOfBoundsException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">AnswerData</span> <span class="o">{</span>
        <span class="k">public</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">x</span><span class="o">;</span>
        <span class="k">public</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">y</span><span class="o">;</span>
        <span class="k">public</span> <span class="k">final</span> <span class="n">Direction</span> <span class="n">d</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="n">AnswerData</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">,</span> <span class="n">Direction</span> <span class="n">d</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
            <span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
            <span class="k">this</span><span class="o">.</span><span class="na">d</span> <span class="o">=</span> <span class="n">d</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Sample99_2</span> <span class="n">s</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sample99_2</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span>
                <span class="s">&quot;リオウウリウ&quot;</span><span class="o">,</span>
                <span class="s">&quot;ウオリウオリ&quot;</span><span class="o">,</span>
                <span class="s">&quot;オリリオリウ&quot;</span><span class="o">,</span>
                <span class="s">&quot;リリオオウオ&quot;</span><span class="o">,</span>
        <span class="o">});</span>
        <span class="n">AnswerData</span><span class="o">[]</span> <span class="n">datas</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">search</span><span class="o">(</span><span class="s">&quot;ウオリ&quot;</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">AnswerData</span> <span class="nl">d:</span> <span class="n">datas</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;(%d, %d), %s%n&quot;</span><span class="o">,</span> <span class="n">d</span><span class="o">.</span><span class="na">x</span><span class="o">,</span> <span class="n">d</span><span class="o">.</span><span class="na">y</span><span class="o">,</span> <span class="n">d</span><span class="o">.</span><span class="na">d</span><span class="o">.</span><span class="na">name</span><span class="o">());</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4610/addtag/" class="addtag" id="addtag_4610">Tags</a>:
	
    
    <a href="/web/20081201192127/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20081201192127/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4610/download/">
		download code
      </a>]
	  [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4610/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4610"
  >-</span><span
  class="button yellow"
  id="rating_z_4610"
  >0</span><span 
  class="button green"
  id="rating_p_4610"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081201192127/http://ja.doukaku.org/comment/4609/"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081201192127/http://ja.doukaku.org/comment/4610/root/"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081201192127/http://ja.doukaku.org/99/reply_to/4610/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment4612">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/596/" target="_top">梅紫蘇</a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4612/">#4612</a>(<script language="JavaScript">print_time(new Date("2007/12/05 04:45 GMT"));</script><noscript>2007/12/05 04:45 GMT</noscript>)
	
	
	
	[<a href="/web/20081201192127/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>全角じゃないけど。反転した比較文字列をつくって、４方向（右方向＋下方向）の文字列チェック×２で、８方向...になってるとおもう....orz</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;algorithm&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>
<span class="cp">#include &lt;string&gt;</span>

<span class="kt">void</span> <span class="n">output</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">v</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;(&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;,&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">y</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;), &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">v</span><span class="p">.</span><span class="n">c_str</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">search8way</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">lines</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">str</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">str</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">!=</span> <span class="kc">false</span><span class="p">)</span>
        <span class="k">return</span><span class="p">;</span>

    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">rstr</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
    <span class="n">reverse</span><span class="p">(</span><span class="n">rstr</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">rstr</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>

    <span class="kt">int</span> <span class="n">nLen</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">str</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    <span class="kt">char</span> <span class="n">cs</span> <span class="o">=</span> <span class="n">str</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="kt">char</span> <span class="n">ce</span> <span class="o">=</span> <span class="n">str</span><span class="p">[</span><span class="n">nLen</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>

    <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">lines</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">y</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">line</span> <span class="o">=</span> <span class="n">lines</span><span class="p">[</span><span class="n">y</span><span class="p">];</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">line</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">x</span><span class="o">++</span><span class="p">)</span> 
        <span class="p">{</span>
            <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
            <span class="k">if</span> <span class="p">((</span><span class="n">c</span> <span class="o">!=</span> <span class="n">cs</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">c</span> <span class="o">!=</span> <span class="n">ce</span><span class="p">))</span>
                <span class="k">continue</span><span class="p">;</span>

            <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">strDL</span><span class="p">(</span><span class="s">&quot;&quot;</span><span class="p">);</span> <span class="n">strDL</span> <span class="o">+=</span> <span class="n">c</span><span class="p">;</span>
            <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">strDD</span><span class="p">(</span><span class="s">&quot;&quot;</span><span class="p">);</span> <span class="n">strDD</span> <span class="o">+=</span> <span class="n">c</span><span class="p">;</span>
            <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">strDR</span><span class="p">(</span><span class="s">&quot;&quot;</span><span class="p">);</span> <span class="n">strDR</span> <span class="o">+=</span> <span class="n">c</span><span class="p">;</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">(</span><span class="n">d</span> <span class="o">&lt;</span> <span class="n">nLen</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">y</span> <span class="o">+</span> <span class="n">d</span> <span class="o">&lt;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">lines</span><span class="p">.</span><span class="n">size</span><span class="p">());</span> <span class="n">d</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">buff</span> <span class="o">=</span> <span class="n">lines</span><span class="p">[</span><span class="n">y</span> <span class="o">+</span> <span class="n">d</span><span class="p">];</span>
                <span class="k">if</span> <span class="p">(</span> <span class="n">x</span>      <span class="o">&lt;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">buff</span><span class="p">.</span><span class="n">size</span><span class="p">()</span>                <span class="p">)</span> <span class="p">{</span> <span class="n">strDD</span> <span class="o">+=</span> <span class="n">buff</span><span class="p">[</span><span class="n">x</span>    <span class="p">];</span> <span class="p">}</span>
                <span class="k">if</span> <span class="p">((</span><span class="n">x</span> <span class="o">-</span> <span class="n">d</span><span class="p">)</span> <span class="o">&lt;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">buff</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">x</span> <span class="o">-</span> <span class="n">d</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">))</span> <span class="p">{</span> <span class="n">strDL</span> <span class="o">+=</span> <span class="n">buff</span><span class="p">[</span><span class="n">x</span> <span class="o">-</span> <span class="n">d</span><span class="p">];</span> <span class="p">}</span>
                <span class="k">if</span> <span class="p">((</span><span class="n">x</span> <span class="o">+</span> <span class="n">d</span><span class="p">)</span> <span class="o">&lt;</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">buff</span><span class="p">.</span><span class="n">size</span><span class="p">()</span>                <span class="p">)</span> <span class="p">{</span> <span class="n">strDR</span> <span class="o">+=</span> <span class="n">buff</span><span class="p">[</span><span class="n">x</span> <span class="o">+</span> <span class="n">d</span><span class="p">];</span> <span class="p">}</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="n">cs</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">line</span><span class="p">.</span><span class="n">compare</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">nLen</span><span class="p">,</span> <span class="n">str</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">output</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="s">&quot;右&quot;</span><span class="p">);</span> <span class="p">}</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">strDL</span><span class="p">.</span><span class="n">compare</span><span class="p">(</span><span class="n">str</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">output</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="s">&quot;左下&quot;</span><span class="p">);</span> <span class="p">}</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">strDD</span><span class="p">.</span><span class="n">compare</span><span class="p">(</span><span class="n">str</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">output</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="s">&quot;下&quot;</span>  <span class="p">);</span> <span class="p">}</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">strDR</span><span class="p">.</span><span class="n">compare</span><span class="p">(</span><span class="n">str</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">output</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="s">&quot;右下&quot;</span><span class="p">);</span> <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="n">ce</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">line</span><span class="p">.</span><span class="n">compare</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">nLen</span><span class="p">,</span> <span class="n">rstr</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">output</span><span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="p">(</span><span class="n">nLen</span> <span class="o">-</span> <span class="mi">1</span><span class="p">),</span> <span class="n">y</span><span class="p">,</span> <span class="s">&quot;左&quot;</span><span class="p">);</span> <span class="p">}</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">strDL</span><span class="p">.</span><span class="n">compare</span><span class="p">(</span><span class="n">rstr</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">output</span><span class="p">(</span><span class="n">x</span> <span class="o">-</span> <span class="p">(</span><span class="n">nLen</span> <span class="o">-</span> <span class="mi">1</span><span class="p">),</span> <span class="n">y</span> <span class="o">+</span> <span class="p">(</span><span class="n">nLen</span> <span class="o">-</span> <span class="mi">1</span><span class="p">),</span> <span class="s">&quot;右上&quot;</span><span class="p">);</span> <span class="p">}</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">strDD</span><span class="p">.</span><span class="n">compare</span><span class="p">(</span><span class="n">rstr</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">output</span><span class="p">(</span><span class="n">x</span>             <span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="p">(</span><span class="n">nLen</span> <span class="o">-</span> <span class="mi">1</span><span class="p">),</span> <span class="s">&quot;上&quot;</span><span class="p">);</span>   <span class="p">}</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">strDR</span><span class="p">.</span><span class="n">compare</span><span class="p">(</span><span class="n">rstr</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">output</span><span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="p">(</span><span class="n">nLen</span> <span class="o">-</span> <span class="mi">1</span><span class="p">),</span> <span class="n">y</span> <span class="o">+</span> <span class="p">(</span><span class="n">nLen</span> <span class="o">-</span> <span class="mi">1</span><span class="p">),</span> <span class="s">&quot;左上&quot;</span><span class="p">);</span> <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">lines</span><span class="p">;</span>
    <span class="n">lines</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="s">&quot;ABCBCBCBA&quot;</span><span class="p">);</span>
    <span class="n">lines</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="s">&quot;ABCBBBCBA&quot;</span><span class="p">);</span>
    <span class="n">lines</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="s">&quot;ABCBABCBA&quot;</span><span class="p">);</span>
    <span class="n">lines</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="s">&quot;ABCBBBCBA&quot;</span><span class="p">);</span>
    <span class="n">lines</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="s">&quot;ABCBCBCBA&quot;</span><span class="p">);</span>
    <span class="n">search8way</span><span class="p">(</span><span class="n">lines</span><span class="p">,</span> <span class="s">&quot;ABC&quot;</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4612/addtag/" class="addtag" id="addtag_4612">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081201192127/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4612/download/">
		download code
      </a>]
	  [<a href="/web/20081201192127/http://ja.doukaku.org/comment/4612/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4612"
  >-</span><span
  class="button yellow"
  id="rating_z_4612"
  >0</span><span 
  class="button green"
  id="rating_p_4612"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081201192127/http://ja.doukaku.org/comment/4612/">
    1
    reply
  </a>

  [<a href="/web/20081201192127/http://ja.doukaku.org/99/reply_to/4612/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4624">
  <p class="banner"><a href="/web/20081201192127/http://ja.doukaku.org/user/596/" target="_top">梅紫蘇</a><a href="/web/20081201192127/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081201192127im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081201192127/http://ja.doukaku.org/comment/4624/">#4624</a>(<script language="JavaScript">print_time(new Date("2007/12/05 12:03 GMT"));</script><noscript>2007/12/05 12:03 GMT</noscript>)
	
	
	
	[<a href="/web/20081201192127/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>方法は殆ど変わってないのですが。
下方向へのチェックだと、入力がファイルや標準入力だった時につぶしがきかない（行を先読みしないといけない）ので、上方向に修正。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64</pre></td><td class="code"><div class="highlight"><pre><span class="kt">void</span> <span class="n">output</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">v</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;(&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;,&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">y</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;), &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">v</span><span class="p">.</span><span class="n">c_str</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">




<!--
     FILE ARCHIVED ON 19:21:27 Dec 1, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:03:46 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
