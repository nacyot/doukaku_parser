
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
「組合せ型の最小完全ハッシュ関数」の逆関数
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20100225235805cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20100225235805cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20100225235805cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20100225235805/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20100225235805/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20100225235805js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20100225235805js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20100225235805js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20100225235805js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app15.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/36\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "25";
var displayMonth = "Feb";
var displayYear = "2010";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/36/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20100225235805" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080416001737/http://ja.doukaku.org/36/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="16 Apr 2008"><strong>APR</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 23:58:05 Feb 25, 2010">FEB</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Mar
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20100224212515/http://ja.doukaku.org/36/nested/" title="21:25:15 Feb 24, 2010" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 23:58:05 Feb 25, 2010">25</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080416001737/http://ja.doukaku.org/36/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="16 Apr 2008"><strong>2008</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 23:58:05 Feb 25, 2010">2010</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2011
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20100225235805*/http://ja.doukaku.org/36/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>7 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 25 Feb 10</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000001_2008:-1:011100000000_2009:-1:000000000000_2010:1:020000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20100225235805/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20100225235805/http://ja.doukaku.org/36/">「組合せ型の最小完全ハッシュ関数」の逆関数</a>
</h2>

    





<div class="comment" id="comment3392">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/84/" target="_top">shuyo</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/3392/">#3392</a>(<script language="JavaScript">print_time(new Date("2007/08/01 07:30 GMT"));</script><noscript>2007/08/01 07:30 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  まずは<a href="/web/20100225235805/http://www.ic-net.or.jp/home/takaken/nt/slide/hash.html">最小完全ハッシュ関数の作り方</a>の後半部分をご覧ください。
<p>
「組み合わせ型の最小完全ハッシュ関数」とは
下のような「n個の値のうちm個が1で残りが0であるようなデータ」と整数とを対応づける関数です。下の例ではn=5でm=2になっています。
(「0以上n未満の整数から重複しないm個を選んだ組み合わせ」もデータとしては同じです)

<pre>
>>> for xs in make_perm(5, 2):
	print xs, "=>", hash(xs, 5, 2)

	
[1, 1, 0, 0, 0] => 9
[1, 0, 1, 0, 0] => 8
[1, 0, 0, 1, 0] => 7
[1, 0, 0, 0, 1] => 6
[0, 1, 1, 0, 0] => 5
[0, 1, 0, 1, 0] => 4
[0, 1, 0, 0, 1] => 3
[0, 0, 1, 1, 0] => 2
[0, 0, 1, 0, 1] => 1
[0, 0, 0, 1, 1] => 0
</pre>
<p>
「ハッシュ関数」というとデータが文字列であるものを連想しやすいですが、
ここで扱う対象データは文字列ではありません。(ちなみに文字列のハッシュ関数は、異なる文字列が同じハッシュ値になることがあるので「完全」ではありません。)
<p>
さて、ここからが本題です。
組み合わせのデータを与えると整数を返すのがこのハッシュ関数でした。
この逆の関数、「整数xを与えると、hash(data) == xになるような組み合わせのデータdataを返す関数」を作ってください。
<p>
このお題はshuyoさんの提案を元に作成しました。ありがとうございました。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/3392/addtag/" class="addtag" id="addtag_3392">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3392"
  >-</span><span
  class="button yellow"
  id="rating_z_3392"
  >0</span><span 
  class="button green"
  id="rating_p_3392"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/3392/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20100225235805/http://ja.doukaku.org/36/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20100225235805/http://ja.doukaku.org/36/flatten/">フラット表示</a> 
<a href="/web/20100225235805/http://ja.doukaku.org/36/">非表示</a> 


  
    





<div class="comment" id="comment1647">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/172/" target="_top">cats</a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1647/">#1647</a>(<script language="JavaScript">print_time(new Date("2007/08/01 08:27 GMT"));</script><noscript>2007/08/01 08:27 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffdfdf;">-2/2=-1.00</span></span><a href="/web/20100225235805/http://ja.doukaku.org/36/nested/#comment1647" onClick="$('#comment1647 .comment_content').show()">[open]</a>
  </p>
  <div class="comment_content" style="display: none">
	<div class="comment_body">
	  make_permやhashはgivenとして、、、
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
  <span class="k">{</span>
    <span class="kt">int</span><span class="p">[][]</span> <span class="n">dt</span> <span class="p">=</span> <span class="k">{</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="k">}}</span><span class="p">;</span>
    <span class="n">RevHash</span> <span class="n">rv</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RevHash</span><span class="p">(</span><span class="m">5</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="n">dt</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="m">9</span><span class="p">;</span> <span class="p">++</span><span class="n">i</span><span class="p">)</span>
    <span class="k">{</span>
      <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;{0} [&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
      <span class="k">foreach</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="k">in</span> <span class="n">rv</span><span class="p">.</span><span class="n">Calc</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&quot;{0}, &quot;</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
      <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;]&quot;</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="c">/* output</span>
<span class="c">      0 [0, 0, 0, 1, 1, ]</span>
<span class="c">      1 [0, 0, 1, 0, 1, ]</span>
<span class="c">      2 [0, 0, 1, 1, 0, ]</span>
<span class="c">      3 [0, 1, 0, 0, 1, ]</span>
<span class="c">      4 [0, 1, 0, 1, 0, ]</span>
<span class="c">      5 [0, 1, 1, 0, 0, ]</span>
<span class="c">      6 [1, 0, 0, 0, 1, ]</span>
<span class="c">      7 [1, 0, 0, 1, 0, ]</span>
<span class="c">      8 [1, 0, 1, 0, 0, ]</span>
<span class="c">      9 [1, 1, 0, 0, 0, ] */</span>
  <span class="k">}</span>
  <span class="k">static</span> <span class="kt">int</span> <span class="nf">hash</span><span class="p">(</span><span class="kt">int</span><span class="p">[]</span> <span class="n">data</span><span class="p">,</span> <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">m</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="kt">int</span><span class="p">[][]</span> <span class="n">PASCAL</span> <span class="p">=</span> <span class="k">{</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">1</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">1</span><span class="p">,</span> <span class="m">3</span><span class="p">,</span> <span class="m">3</span><span class="k">}</span><span class="p">,</span>
      <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span><span class="k">{</span><span class="m">1</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">6</span><span class="k">}}</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">h</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

    <span class="p">--</span><span class="n">n</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">n</span> <span class="p">&gt;=</span> <span class="n">m</span> <span class="p">&amp;&amp;</span> <span class="n">m</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span><span class="p">++,</span> <span class="n">n</span><span class="p">--)</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="n">h</span> <span class="p">+=</span> <span class="n">PASCAL</span><span class="p">[</span><span class="n">n</span><span class="p">][</span><span class="n">m</span><span class="p">--];</span>
    <span class="k">return</span> <span class="n">h</span><span class="p">;</span>
  <span class="k">}</span>
  <span class="k">class</span> <span class="nc">RevHash</span>
  <span class="k">{</span>
    <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">[]&gt;</span> <span class="n">dic</span><span class="p">;</span>
    <span class="k">public</span> <span class="nf">RevHash</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">m</span><span class="p">,</span> <span class="kt">int</span><span class="p">[][]</span> <span class="n">dt</span><span class="p">)</span>
    <span class="k">{</span>
      <span class="n">dic</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">[]&gt;();</span>
      <span class="k">foreach</span> <span class="p">(</span><span class="kt">int</span><span class="p">[]</span> <span class="n">ii</span> <span class="k">in</span> <span class="n">dt</span><span class="p">)</span> <span class="n">dic</span><span class="p">[</span><span class="n">hash</span><span class="p">(</span><span class="n">ii</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">)]</span> <span class="p">=</span> <span class="n">ii</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="kt">int</span><span class="p">[]</span> <span class="n">Calc</span><span class="p">(</span><span class="kt">int</span> <span class="n">val</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="n">dic</span><span class="p">[</span><span class="n">val</span><span class="p">];</span> <span class="k">}</span>
  <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1647/addtag/" class="addtag" id="addtag_1647">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1647/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1647/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffdfdf;"
  >-2/2=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1647"
  >-</span><span
  class="button yellow"
  id="rating_z_1647"
  >0</span><span 
  class="button green"
  id="rating_p_1647"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1647/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1648">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1648/">#1648</a>(<script language="JavaScript">print_time(new Date("2007/08/01 08:58 GMT"));</script><noscript>2007/08/01 08:58 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">iter_data</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">):</span>
    <span class="n">data</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="k">yield</span> <span class="n">data</span>
            <span class="k">return</span>
        <span class="k">for</span> <span class="n">diff</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">):</span>
            <span class="k">if</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">m</span> <span class="o">-</span> <span class="n">diff</span> <span class="o">&lt;=</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">data</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">diff</span><span class="p">)</span>
                <span class="k">for</span> <span class="n">the_data</span> <span class="ow">in</span> <span class="n">f</span><span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">m</span> <span class="o">-</span> <span class="n">diff</span><span class="p">):</span>
                    <span class="k">yield</span> <span class="n">the_data</span>
                <span class="n">data</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">f</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">find_data</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">):</span>
    <span class="n">it</span> <span class="o">=</span> <span class="n">iter_data</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
        <span class="n">it</span><span class="o">.</span><span class="n">next</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">it</span><span class="o">.</span><span class="n">next</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
        <span class="k">print</span> <span class="n">x</span><span class="p">,</span> <span class="s">&quot;=&gt;&quot;</span><span class="p">,</span> <span class="n">find_data</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1648/addtag/" class="addtag" id="addtag_1648">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1648/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1648/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1648"
  >-</span><span
  class="button yellow"
  id="rating_z_1648"
  >0</span><span 
  class="button green"
  id="rating_p_1648"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1648/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1649">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1649/">#1649</a>(<script language="JavaScript">print_time(new Date("2007/08/01 09:23 GMT"));</script><noscript>2007/08/01 09:23 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>組合せを最初から生成するので効率の悪い素朴な実装</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre><span class="nv">mkperm</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="p">[[</span><span class="n">Int</span><span class="p">]]</span>
<span class="nv">mkperm</span> <span class="nv">n</span> <span class="nv">m</span>
  <span class="o">|</span> <span class="nv">n</span> <span class="o">&lt;</span>  <span class="nv">m</span>    <span class="o">=</span> <span class="p">[]</span>
  <span class="o">|</span> <span class="nv">m</span> <span class="o">==</span> <span class="mi">0</span>    <span class="o">=</span> <span class="p">[</span><span class="nv">replicate</span> <span class="nv">n</span> <span class="mi">0</span><span class="p">]</span>
  <span class="o">|</span> <span class="nv">n</span> <span class="o">==</span> <span class="nv">m</span>    <span class="o">=</span> <span class="p">[</span><span class="nv">replicate</span> <span class="nv">n</span> <span class="mi">1</span><span class="p">]</span>
  <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="mi">0</span><span class="o">:</span><span class="p">)</span> <span class="p">(</span><span class="nv">mkperm</span> <span class="p">(</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="nv">m</span><span class="p">)</span> <span class="o">++</span> <span class="nv">map</span> <span class="p">(</span><span class="mi">1</span><span class="o">:</span><span class="p">)</span> <span class="p">(</span><span class="nv">mkperm</span> <span class="p">(</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nv">m</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>

<span class="nv">revhash</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Int</span><span class="p">]</span>
<span class="nv">revhash</span> <span class="o">=</span> <span class="p">((</span><span class="o">!!</span><span class="p">)</span> <span class="o">.</span><span class="p">)</span> <span class="o">.</span> <span class="nv">mkperm</span>

<span class="cm">{-</span>
<span class="cm">*Main&gt; revhash 5 2 9</span>
<span class="cm">[1,1,0,0,0]</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1649/addtag/" class="addtag" id="addtag_1649">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1649/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1649/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1649"
  >-</span><span
  class="button yellow"
  id="rating_z_1649"
  >0</span><span 
  class="button green"
  id="rating_p_1649"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100225235805/http://ja.doukaku.org/comment/1649/">
    2
    replies
  </a>

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1649/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1679">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1679/">#1679</a>(<script language="JavaScript">print_time(new Date("2007/08/02 02:18 GMT"));</script><noscript>2007/08/02 02:18 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  そうですね、実はお題で「組合せを最初から生成するので効率の悪い」(から禁止)と書くかどうかは、しばらく悩みました。結局「禁止にすると難易度が高くなりすぎるのかな」と思ったので伏せておいて、効率に言及したり効率のいいアルゴリズムを使った投稿にプラス評価をつけることにしてみました。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1679/addtag/" class="addtag" id="addtag_1679">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1679"
  >-</span><span
  class="button yellow"
  id="rating_z_1679"
  >0</span><span 
  class="button green"
  id="rating_p_1679"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1649/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1679/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1679/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1686">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1686/">#1686</a>(<script language="JavaScript">print_time(new Date("2007/08/02 06:06 GMT"));</script><noscript>2007/08/02 06:06 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>効率を改良した版</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="nv">revhash</span> <span class="nv">n</span> <span class="nv">r</span> <span class="o">=</span> <span class="nv">subtract</span> <span class="mi">1</span> <span class="o">.</span> <span class="nv">rvh</span> <span class="nv">n</span> <span class="nv">r</span> <span class="p">(</span><span class="nv">n</span><span class="p">`</span><span class="nv">c</span><span class="p">`</span><span class="nv">r</span><span class="p">)</span> 

<span class="nv">rvh</span> <span class="nv">n</span> <span class="nv">r</span> <span class="nv">s</span> <span class="p">[]</span>         <span class="o">=</span> <span class="nv">s</span>
<span class="nv">rvh</span> <span class="kr">_</span> <span class="mi">0</span> <span class="nv">s</span> <span class="kr">_</span>          <span class="o">=</span> <span class="nv">s</span>
<span class="nv">rvh</span> <span class="nv">n</span> <span class="nv">r</span> <span class="nv">s</span> <span class="kr">_</span> <span class="o">|</span> <span class="nv">n</span> <span class="o">==</span> <span class="nv">r</span> <span class="o">=</span> <span class="nv">s</span>
<span class="nv">rvh</span> <span class="nv">n</span> <span class="nv">r</span> <span class="nv">s</span> <span class="p">(</span><span class="mi">1</span><span class="o">:</span><span class="nv">ps</span><span class="p">)</span>     <span class="o">=</span> <span class="nv">rvh</span> <span class="p">(</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nv">r</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="nv">s</span> <span class="nv">ps</span>
<span class="nv">rvh</span> <span class="nv">n</span> <span class="nv">r</span> <span class="nv">s</span> <span class="p">(</span><span class="mi">0</span><span class="o">:</span><span class="nv">ps</span><span class="p">)</span>     <span class="o">=</span> <span class="nv">rvh</span> <span class="p">(</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="nv">r</span> <span class="p">(</span><span class="nv">s</span> <span class="o">-</span> <span class="p">(</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)`</span><span class="nv">c</span><span class="p">`(</span><span class="nv">r</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span> <span class="nv">ps</span>

<span class="nv">n</span> <span class="p">`</span><span class="nv">c</span><span class="p">`</span> <span class="nv">r</span> <span class="o">=</span> <span class="nv">foldl</span> <span class="p">(</span><span class="o">\</span> <span class="nv">p</span> <span class="p">(</span><span class="nv">x</span><span class="p">,</span><span class="nv">y</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">p</span> <span class="o">*</span> <span class="nv">x</span><span class="p">)</span> <span class="p">`</span><span class="nv">div</span><span class="p">`</span> <span class="nv">y</span><span class="p">)</span> <span class="mi">1</span> <span class="o">$</span> <span class="nv">zip</span> <span class="p">[</span><span class="nv">n</span><span class="p">,</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="o">..</span><span class="nv">n</span><span class="o">-</span><span class="nv">r</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="nv">r</span><span class="p">]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1686/addtag/" class="addtag" id="addtag_1686">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1686/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1686/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1686"
  >-</span><span
  class="button yellow"
  id="rating_z_1686"
  >0</span><span 
  class="button green"
  id="rating_p_1686"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1649/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1686/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1686/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment1652">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/187/" target="_top">rem</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1652/">#1652</a>(<script language="JavaScript">print_time(new Date("2007/08/01 10:34 GMT"));</script><noscript>2007/08/01 10:34 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>第4引数にn以上のサイズのint型配列の先頭アドレスを与えるとその配列にデータが格納されるようになってます。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>

<span class="kt">void</span> <span class="n">rev_hash</span><span class="p">(</span><span class="kt">int</span> <span class="n">dt</span><span class="p">,</span> <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">m</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">buf</span><span class="p">){</span>
    <span class="kt">int</span> <span class="o">*</span><span class="n">selected</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
    <span class="n">selected</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="o">*</span> <span class="n">m</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">selected</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">dt</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="kt">int</span> <span class="n">moveup</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">m</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">,</span> <span class="n">moveup</span><span class="o">++</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">selected</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">!=</span> <span class="n">selected</span><span class="p">[</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]){</span>
                <span class="n">selected</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">j</span> <span class="o">==</span> <span class="n">m</span> <span class="o">-</span> <span class="mi">1</span><span class="p">){</span>
            <span class="n">selected</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">for</span><span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">moveup</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="n">selected</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="o">*</span> <span class="n">n</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">buf</span><span class="p">[</span><span class="n">n</span> <span class="o">-</span> <span class="n">selected</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">free</span><span class="p">(</span><span class="n">selected</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1652/addtag/" class="addtag" id="addtag_1652">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1652/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1652/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1652"
  >-</span><span
  class="button yellow"
  id="rating_z_1652"
  >0</span><span 
  class="button green"
  id="rating_p_1652"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1652/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1653">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1653/">#1653</a>(<script language="JavaScript">print_time(new Date("2007/08/01 10:36 GMT"));</script><noscript>2007/08/01 10:36 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  Squeak Smalltalk で。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre>| n r val pas ans pat |
n := 5. r := 2. val := 8.
pas := OrderedCollection with: (0 to: n - r).
(r - 1) timesRepeat: [
    pas addFirst: (
        pas first inject: #(0) into: [:new :each | new, {each + new last}])].
ans := OrderedCollection new.
pas do: [:arr | val := val - (arr at: (ans add: (arr findLast: [:m | val &gt;= m])))].
pat := Array new: n withAll: 0.
ans do: [:idx | pat at: (n - idx + 1) put: 1].
^pat   &quot;=&gt; #(1 0 1 0 0) &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1653/addtag/" class="addtag" id="addtag_1653">タグ</a>:
	
    
    <a href="/web/20100225235805/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1653/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1653/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1653"
  >-</span><span
  class="button yellow"
  id="rating_z_1653"
  >0</span><span 
  class="button green"
  id="rating_p_1653"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100225235805/http://ja.doukaku.org/comment/1653/">
    1
    reply
  </a>

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1653/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1669">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1669/">#1669</a>(<script language="JavaScript">print_time(new Date("2007/08/01 17:08 GMT"));</script><noscript>2007/08/01 17:08 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  テーブル（パスカルの三角形）を用意せず、富豪的に。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre>| n r val pat |
n := 6. r := 3. val := 18.
pat := Array new: n withAll: 0.
r to: 1 by: -1 do: [:r0 |
    | idx last |
    idx := (1 to: n - (r - r0)) findLast: [:n0 | val &gt;= (last := n0 - 1 take: r0)].
    pat at: n - idx + 1 put: 1.
    val := val - last].
^pat   &quot;=&gt; #(1 1 0 1 0 0) &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1669/addtag/" class="addtag" id="addtag_1669">タグ</a>:
	
    
    <a href="/web/20100225235805/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1669/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1669/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1669"
  >-</span><span
  class="button yellow"
  id="rating_z_1669"
  >0</span><span 
  class="button green"
  id="rating_p_1669"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1653/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1669/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100225235805/http://ja.doukaku.org/comment/1669/">
    1
    reply
  </a>

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1669/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1677">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1677/">#1677</a>(<script language="JavaScript">print_time(new Date("2007/08/02 01:52 GMT"));</script><noscript>2007/08/02 01:52 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  shiro さん、tell さんのを読んで、上のは少々冗長だと遅まきながら気づきました(^_^;)。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre>| val n r pat c |
n := 5.  r := 2.  val := 8.
pat := Array new: n withAll: 0.
1 to: n do: [:idx |
    val &gt;= (c := n - idx take: r) ifTrue: [
        pat at: idx put: 1.
        r := r - 1.
        val := val - c]].
^pat   &quot;=&gt; #(1 0 1 0 0) &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1677/addtag/" class="addtag" id="addtag_1677">タグ</a>:
	
    
    <a href="/web/20100225235805/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1677/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1677/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1677"
  >-</span><span
  class="button yellow"
  id="rating_z_1677"
  >0</span><span 
  class="button green"
  id="rating_p_1677"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1669/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1677/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1677/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  
    





<div class="comment" id="comment1658">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1658/">#1658</a>(<script language="JavaScript">print_time(new Date("2007/08/01 15:17 GMT"));</script><noscript>2007/08/01 15:17 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>統計解析パッケージであるRの出番ですね（？）
例と出力を合せるために少し変な書き方をしています。

&gt; for(i in 9:0){
+     cat(i, "=&gt;", rev.hash(i, 5, 2), "\n")
+ }
9 =&gt; 1 1 0 0 0 
8 =&gt; 1 0 1 0 0 
7 =&gt; 1 0 0 1 0 
6 =&gt; 1 0 0 0 1 
5 =&gt; 0 1 1 0 0 
4 =&gt; 0 1 0 1 0 
3 =&gt; 0 1 0 0 1 
2 =&gt; 0 0 1 1 0 
1 =&gt; 0 0 1 0 1 
0 =&gt; 0 0 0 1 1
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre>rev.hash &lt;- function(x, n, m){
    data &lt;- rep(1, n)
    data[combn(n, n-m)[,x+1]] &lt;- 0
    return(data)
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1658/addtag/" class="addtag" id="addtag_1658">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1658/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1658/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1658"
  >-</span><span
  class="button yellow"
  id="rating_z_1658"
  >0</span><span 
  class="button green"
  id="rating_p_1658"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1658/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1667">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/103/" target="_top">mimizu</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1667/">#1667</a>(<script language="JavaScript">print_time(new Date("2007/08/01 16:27 GMT"));</script><noscript>2007/08/01 16:27 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></td><td class="code"><div class="highlight"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Hash</span> <span class="o">{</span>
    
    <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">inverseHash</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">m</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">c</span> <span class="o">=</span> <span class="n">combinationTable</span><span class="o">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="o">,</span> <span class="n">m</span><span class="o">);</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">c</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">m</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">x</span> <span class="o">-=</span> <span class="n">c</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">m</span><span class="o">--];</span>
                <span class="n">data</span><span class="o">[</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">data</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">private</span> <span class="k">static</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">combinationTable</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">m</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">combination</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span> <span class="o">+</span> <span class="mi">1</span><span class="o">][</span><span class="n">m</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">combination</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">m</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">combination</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">combination</span><span class="o">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">][</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]</span>
                                     <span class="o">+</span>  <span class="n">combination</span><span class="o">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">combination</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">arg</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">9</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>
            <span class="kt">int</span><span class="o">[]</span> <span class="n">data</span> <span class="o">=</span> <span class="n">inverseHash</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="s">&quot; =&gt; [&quot;</span> <span class="o">+</span> <span class="n">data</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&quot;, &quot;</span> <span class="o">+</span> <span class="n">data</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span>
            <span class="o">}</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;]&quot;</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1667/addtag/" class="addtag" id="addtag_1667">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1667/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1667/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1667"
  >-</span><span
  class="button yellow"
  id="rating_z_1667"
  >0</span><span 
  class="button green"
  id="rating_p_1667"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1667/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment1670">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1670/">#1670</a>(<script language="JavaScript">print_time(new Date("2007/08/01 19:53 GMT"));</script><noscript>2007/08/01 19:53 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #bfffbf;">4/4=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>2分探索みたいな感じかな。境界値がnCrで刻々と変わってゆくだけで。
コンパクトさを優先して書いてみました。nCrの計算が何度も行われるので
メモ化すると高速化できると思われます。

実行例:
gosh&gt; (for-each (lambda (k) (print k " =&gt; " (rev-hash k 5 2))) (iota 10))
0 =&gt; (0 0 0 1 1)
1 =&gt; (0 0 1 0 1)
2 =&gt; (0 0 1 1 0)
3 =&gt; (0 1 0 0 1)
4 =&gt; (0 1 0 1 0)
5 =&gt; (0 1 1 0 0)
6 =&gt; (1 0 0 0 1)
7 =&gt; (1 0 0 1 0)
8 =&gt; (1 0 1 0 0)
9 =&gt; (1 1 0 0 0)
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">nCr</span> <span class="nv">n</span> <span class="nv">r</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">!</span> <span class="nv">n</span> <span class="nv">k</span><span class="p">)</span> <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&lt;= </span><span class="nv">n</span> <span class="nv">k</span><span class="p">)</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="p">(</span><span class="nf">!</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">k</span><span class="p">))))</span>
  <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nf">!</span> <span class="nv">n</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="nv">r</span><span class="p">))</span> <span class="p">(</span><span class="nf">!</span> <span class="nv">r</span> <span class="mi">0</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">rev-hash</span> <span class="nv">k</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span>
  <span class="p">(</span><span class="k">cond </span><span class="err">[</span><span class="p">(</span><span class="nb">= </span><span class="nv">m</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">make-list</span> <span class="nv">n</span> <span class="mi">0</span><span class="p">)</span><span class="err">]</span>
        <span class="err">[</span><span class="p">(</span><span class="nb">= </span><span class="nv">n</span> <span class="nv">m</span><span class="p">)</span> <span class="p">(</span><span class="nf">make-list</span> <span class="nv">n</span> <span class="mi">1</span><span class="p">)</span><span class="err">]</span>
        <span class="err">[</span><span class="p">(</span><span class="nb">&lt;= </span><span class="p">(</span><span class="nf">nCr</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">m</span><span class="p">)</span> <span class="nv">k</span><span class="p">)</span>
         <span class="p">(</span><span class="nb">cons </span><span class="mi">1</span> <span class="p">(</span><span class="nf">rev-hash</span> <span class="p">(</span><span class="nb">- </span><span class="nv">k</span> <span class="p">(</span><span class="nf">nCr</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">m</span><span class="p">))</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="mi">1</span><span class="p">)))</span><span class="err">]</span>
        <span class="err">[</span><span class="nv">else</span>
         <span class="p">(</span><span class="nb">cons </span><span class="mi">0</span> <span class="p">(</span><span class="nf">rev-hash</span> <span class="nv">k</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">m</span><span class="p">))</span><span class="err">]</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1670/addtag/" class="addtag" id="addtag_1670">タグ</a>:
	
    
    <a href="/web/20100225235805/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1670/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1670/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #bfffbf;"
  >4/4=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1670"
  >-</span><span
  class="button yellow"
  id="rating_z_1670"
  >0</span><span 
  class="button green"
  id="rating_p_1670"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100225235805/http://ja.doukaku.org/comment/1670/">
    2
    replies
  </a>

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1670/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1671">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1671/">#1671</a>(<script language="JavaScript">print_time(new Date("2007/08/01 20:54 GMT"));</script><noscript>2007/08/01 20:54 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>メモ化をちょっと試してみた。
単純にnCrの引数だけでメモ化するのはあまり効果が無い。
同じ(n,r)の組み合わせは1回しか使わないから (上のrev-hashの
コードでは手抜きで2回使われる箇所もあるけど)。
nCr = n-1Cr + n-1Cr-1 を使えば、最初のnCrの計算で
その後に使う組み合わせは全て計算してしまうのでメモ化の
効果は出る。ただ、これは要するにpascalのテーブルを最初に
(ほぼ)全部計算するってことだから、まだ無駄なことをしている
感じはある。

gosh&gt; (time (begin ((rev-hash-test nCr-memo) (expt 10 599) 2000 1000) (values)))
;(time (begin ((rev-hash-test nCr-memo) (expt 10 599) 2000 1000) (values)))
; real   7.703
; user   7.470
; sys    0.210
gosh&gt; (time (begin ((rev-hash-test nCr) (expt 10 599) 2000 1000) (values)))
;(time (begin ((rev-hash-test nCr) (expt 10 599) 2000 1000) (values)))
; real  35.341
; user  34.710
; sys    0.500

もちろん2度目からはメモ化版は激速だけど。

gosh&gt; (time (begin ((rev-hash-test nCr-memo) (expt 10 599) 2000 1000) (values)))
;(time (begin ((rev-hash-test nCr-memo) (expt 10 599) 2000 1000) (values)))
; real   0.014
; user   0.010
; sys    0.000

テストコードを貼り付けておく。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">nCr</span> <span class="nv">n</span> <span class="nv">r</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">!</span> <span class="nv">n</span> <span class="nv">k</span><span class="p">)</span> <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&lt;= </span><span class="nv">n</span> <span class="nv">k</span><span class="p">)</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="p">(</span><span class="nf">!</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">k</span><span class="p">))))</span>
  <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nf">!</span> <span class="nv">n</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="nv">r</span><span class="p">))</span> <span class="p">(</span><span class="nf">!</span> <span class="nv">r</span> <span class="mi">0</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="nv">nCr-memo</span>
  <span class="p">(</span><span class="nf">let1</span> <span class="nv">tab</span> <span class="p">(</span><span class="nf">make-hash-table</span> <span class="ss">&#39;equal?</span><span class="p">)</span>
    <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">memo</span> <span class="nv">n</span> <span class="nv">r</span> <span class="nv">v</span><span class="p">)</span> <span class="p">(</span><span class="nf">hash-table-put!</span> <span class="nv">tab</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">n</span> <span class="nv">r</span><span class="p">)</span> <span class="nv">v</span><span class="p">)</span> <span class="nv">v</span><span class="p">)</span>
    <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">n</span> <span class="nv">r</span><span class="p">)</span>
      <span class="p">(</span><span class="k">cond </span><span class="err">[</span><span class="p">(</span><span class="k">or </span><span class="p">(</span><span class="nb">= </span><span class="nv">n</span> <span class="nv">r</span><span class="p">)</span> <span class="p">(</span><span class="nb">= </span><span class="nv">r</span> <span class="mi">0</span><span class="p">))</span> <span class="mi">1</span><span class="err">]</span>
            <span class="err">[</span><span class="p">(</span><span class="nf">hash-table-get</span> <span class="nv">tab</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">n</span> <span class="nv">r</span><span class="p">)</span> <span class="no">#f</span><span class="p">)</span><span class="err">]</span>
            <span class="err">[</span><span class="p">(</span><span class="nb">&gt; </span><span class="nv">r</span> <span class="p">(</span><span class="nb">quotient </span><span class="nv">n</span> <span class="mi">2</span><span class="p">))</span> <span class="p">(</span><span class="nf">nCr-memo</span> <span class="nv">n</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="nv">r</span><span class="p">))</span><span class="err">]</span>
            <span class="err">[</span><span class="k">else </span><span class="p">(</span><span class="nf">memo</span> <span class="nv">n</span> <span class="nv">r</span> <span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nf">nCr-memo</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">r</span> <span class="mi">1</span><span class="p">))</span>
                               <span class="p">(</span><span class="nf">nCr-memo</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">r</span><span class="p">)))</span><span class="err">]</span><span class="p">))))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">rev-hash-test</span> <span class="nv">nCr</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">rev-hash</span> <span class="nv">k</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span>
    <span class="p">(</span><span class="k">cond </span><span class="err">[</span><span class="p">(</span><span class="nb">= </span><span class="nv">m</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">make-list</span> <span class="nv">n</span> <span class="mi">0</span><span class="p">)</span><span class="err">]</span>
          <span class="err">[</span><span class="p">(</span><span class="nb">= </span><span class="nv">n</span> <span class="nv">m</span><span class="p">)</span> <span class="p">(</span><span class="nf">make-list</span> <span class="nv">n</span> <span class="mi">1</span><span class="p">)</span><span class="err">]</span>
          <span class="err">[</span><span class="p">(</span><span class="nb">&lt;= </span><span class="p">(</span><span class="nf">nCr</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">m</span><span class="p">)</span> <span class="nv">k</span><span class="p">)</span>
           <span class="p">(</span><span class="nb">cons </span><span class="mi">1</span> <span class="p">(</span><span class="nf">rev-hash</span> <span class="p">(</span><span class="nb">- </span><span class="nv">k</span> <span class="p">(</span><span class="nf">nCr</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">m</span><span class="p">))</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="mi">1</span><span class="p">)))</span><span class="err">]</span>
          <span class="err">[</span><span class="nv">else</span>
           <span class="p">(</span><span class="nb">cons </span><span class="mi">0</span> <span class="p">(</span><span class="nf">rev-hash</span> <span class="nv">k</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">m</span><span class="p">))</span><span class="err">]</span><span class="p">))</span>
  <span class="nv">rev-hash</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1671/addtag/" class="addtag" id="addtag_1671">タグ</a>:
	
    
    <a href="/web/20100225235805/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1671/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1671/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1671"
  >-</span><span
  class="button yellow"
  id="rating_z_1671"
  >0</span><span 
  class="button green"
  id="rating_p_1671"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1670/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1671/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1671/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1999">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/228/" target="_top">tell</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1999/">#1999</a>(<script language="JavaScript">print_time(new Date("2007/08/07 22:23 GMT"));</script><noscript>2007/08/07 22:23 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>そうか，n=kを見れば別に末端まで再帰する必要は無いな．
おれはまだまだ修行が足りなかったようだ．
下に自分のコードを書き直してみた，エンバグしてなきゃいいけど．</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20100225235805/http://ja.doukaku.org/comment/1672/"></a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">fact</span><span class="p">(</span> <span class="n">n</span> <span class="p">)</span>
  <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span>
    <span class="mi">1</span>
  <span class="k">else</span>
    <span class="n">n</span> <span class="o">*</span> <span class="n">fact</span><span class="p">(</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">comb</span><span class="p">(</span> <span class="n">n</span><span class="p">,</span> <span class="n">k</span> <span class="p">)</span>
  <span class="n">fact</span><span class="p">(</span> <span class="n">n</span> <span class="p">)</span> <span class="o">/</span> <span class="p">(</span> <span class="n">fact</span><span class="p">(</span> <span class="n">k</span> <span class="p">)</span> <span class="o">*</span> <span class="n">fact</span><span class="p">(</span> <span class="n">n</span> <span class="o">-</span> <span class="n">k</span> <span class="p">)</span> <span class="p">)</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">inv_comb_hash</span><span class="p">(</span> <span class="n">x</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">k</span> <span class="p">)</span>
  <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span>
    <span class="k">return</span> <span class="o">[]</span>
  <span class="k">elsif</span> <span class="n">n</span> <span class="o">==</span> <span class="n">k</span>
    <span class="k">return</span> <span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">*</span> <span class="n">n</span>
  <span class="k">end</span>
  <span class="n">nCk</span> <span class="o">=</span> <span class="n">comb</span><span class="p">(</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">k</span> <span class="p">)</span>
  <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="n">nCk</span>
    <span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">+</span> <span class="n">inv_comb_hash</span><span class="p">(</span> <span class="n">x</span> <span class="o">-</span> <span class="n">nCk</span><span class="p">,</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">k</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">)</span>
  <span class="k">else</span>
    <span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">+</span> <span class="n">inv_comb_hash</span><span class="p">(</span> <span class="n">x</span><span class="p">,</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">k</span> <span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1999/addtag/" class="addtag" id="addtag_1999">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1999/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1999/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1999"
  >-</span><span
  class="button yellow"
  id="rating_z_1999"
  >0</span><span 
  class="button green"
  id="rating_p_1999"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1670/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1999/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100225235805/http://ja.doukaku.org/comment/1999/">
    1
    reply
  </a>

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1999/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2000">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/228/" target="_top">tell</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/2000/">#2000</a>(<script language="JavaScript">print_time(new Date("2007/08/07 22:25 GMT"));</script><noscript>2007/08/07 22:25 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>う～ん，どうやら「どうかく.org」自体を参考URLに挙げることはできないようですね．
書き直したコードというのは，#1672です．</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/2000/addtag/" class="addtag" id="addtag_2000">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2000"
  >-</span><span
  class="button yellow"
  id="rating_z_2000"
  >0</span><span 
  class="button green"
  id="rating_p_2000"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1999/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/2000/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/2000/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  
    





<div class="comment" id="comment1672">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/228/" target="_top">tell</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1672/">#1672</a>(<script language="JavaScript">print_time(new Date("2007/08/01 21:53 GMT"));</script><noscript>2007/08/01 21:53 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>定義通りに実装，これで合っているはず，大丈夫かな？
comb(n,k)がn&lt;kのときに0を返すのがミソかも．</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">prod</span><span class="p">(</span> <span class="n">n</span> <span class="p">)</span>
  <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span>
    <span class="mi">1</span>
  <span class="k">else</span>
    <span class="n">n</span> <span class="o">*</span> <span class="n">prod</span><span class="p">(</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">comb</span><span class="p">(</span> <span class="n">n</span><span class="p">,</span> <span class="n">k</span> <span class="p">)</span>
  <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="n">k</span>
    <span class="mi">0</span>
  <span class="k">else</span>
    <span class="n">prod</span><span class="p">(</span> <span class="n">n</span> <span class="p">)</span> <span class="o">/</span> <span class="p">(</span> <span class="n">prod</span><span class="p">(</span> <span class="n">k</span> <span class="p">)</span> <span class="o">*</span> <span class="n">prod</span><span class="p">(</span> <span class="n">n</span> <span class="o">-</span> <span class="n">k</span> <span class="p">)</span> <span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">inv_comb_hash</span><span class="p">(</span> <span class="n">x</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">k</span> <span class="p">)</span>
  <span class="k">return</span> <span class="o">[]</span> <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span>
  <span class="n">n_k_comb</span> <span class="o">=</span> <span class="n">comb</span><span class="p">(</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">k</span> <span class="p">)</span>
  <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="n">n_k_comb</span>
    <span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">+</span> <span class="n">inv_comb_hash</span><span class="p">(</span> <span class="n">x</span> <span class="o">-</span> <span class="n">n_k_comb</span><span class="p">,</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">k</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">)</span>
  <span class="k">else</span>
    <span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">+</span> <span class="n">inv_comb_hash</span><span class="p">(</span> <span class="n">x</span><span class="p">,</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">k</span> <span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1">## 以下テスト</span>

<span class="o">[</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span>
  <span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span>
  <span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span>
  <span class="o">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span>
  <span class="o">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span><span class="p">,</span>
<span class="o">].</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span> <span class="nb">test</span> <span class="o">|</span>
  
  <span class="n">comb</span><span class="p">(</span> <span class="nb">test</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="nb">test</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span><span class="o">|</span> <span class="n">i</span> <span class="o">|</span>
    <span class="nb">puts</span><span class="p">(</span> <span class="p">(</span><span class="s2">&quot;inv_comb_hash(%3d, %3d, %3d) = %s&quot;</span> <span class="o">%</span> <span class="p">\</span>
           <span class="o">[</span> <span class="n">i</span><span class="p">,</span> <span class="nb">test</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="nb">test</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span>
             <span class="n">inv_comb_hash</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="nb">test</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="nb">test</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">inspect</span><span class="p">,</span> <span class="o">]</span><span class="p">)</span> <span class="p">)</span>
  <span class="p">}</span>
  <span class="nb">puts</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1672/addtag/" class="addtag" id="addtag_1672">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1672/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1672/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1672"
  >-</span><span
  class="button yellow"
  id="rating_z_1672"
  >0</span><span 
  class="button green"
  id="rating_p_1672"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100225235805/http://ja.doukaku.org/comment/1672/">
    2
    replies
  </a>

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1672/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1673">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/228/" target="_top">tell</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1673/">#1673</a>(<script language="JavaScript">print_time(new Date("2007/08/01 21:56 GMT"));</script><noscript>2007/08/01 21:56 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  あ，それと「組合せ型」だから，関数名はpermじゃなくて，combでは？
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1673/addtag/" class="addtag" id="addtag_1673">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1673"
  >-</span><span
  class="button yellow"
  id="rating_z_1673"
  >0</span><span 
  class="button green"
  id="rating_p_1673"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1672/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1673/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100225235805/http://ja.doukaku.org/comment/1673/">
    1
    reply
  </a>

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1673/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1678">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1678/">#1678</a>(<script language="JavaScript">print_time(new Date("2007/08/02 02:11 GMT"));</script><noscript>2007/08/02 02:11 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>make_combだと[(0, 1), (0, 2), (0, 3), ...]を返しそう…
まぁ、別に深く考えてpermにしたわけでもないのですが、
make_objectsくらいにしておいたほうがよかったかもですね。
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1678/addtag/" class="addtag" id="addtag_1678">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1678"
  >-</span><span
  class="button yellow"
  id="rating_z_1678"
  >0</span><span 
  class="button green"
  id="rating_p_1678"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1673/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1678/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1678/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1674">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/228/" target="_top">tell</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1674/">#1674</a>(<script language="JavaScript">print_time(new Date("2007/08/01 22:02 GMT"));</script><noscript>2007/08/01 22:02 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>prodは階乗を計算しているから，
factがわかりやすい…ミスった…
一応説明↓:

prod = 階乗 n!
comb = 組合せ nCk
inv_comb_hash = 問題の解答</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1674/addtag/" class="addtag" id="addtag_1674">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1674"
  >-</span><span
  class="button yellow"
  id="rating_z_1674"
  >0</span><span 
  class="button green"
  id="rating_p_1674"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1672/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1674/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1674/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  

  

  

  

  
    





<div class="comment" id="comment1680">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1680/">#1680</a>(<script language="JavaScript">print_time(new Date("2007/08/02 02:19 GMT"));</script><noscript>2007/08/02 02:19 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  せっかくC++には順列生成アルゴリズムがあることだし（std::next_permutation）使ってみました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;stdexcept&gt;</span>
<span class="cp">#include &lt;algorithm&gt;</span>
<span class="cp">#include &lt;iterator&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>

<span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">get_perm</span><span class="p">(</span><span class="n">size_t</span> <span class="n">x</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">n</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">m</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">m</span> <span class="o">&amp;&amp;</span> <span class="n">m</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="k">throw</span> <span class="n">std</span><span class="o">::</span><span class="n">runtime_error</span><span class="p">(</span><span class="s">&quot;invalid arugument&quot;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">v</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">size_t</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span> <span class="o">-</span> <span class="n">m</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">size_t</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">x</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="n">std</span><span class="o">::</span><span class="n">next_permutation</span><span class="p">(</span><span class="n">v</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">v</span><span class="p">.</span><span class="n">end</span><span class="p">()))</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="n">std</span><span class="o">::</span><span class="n">runtime_error</span><span class="p">(</span><span class="s">&quot;out of range&quot;</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">v</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">try</span>
    <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">size_t</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="o">++</span><span class="n">x</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">v</span> <span class="o">=</span> <span class="n">get_perm</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>

            <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; =&gt; [&quot;</span><span class="p">;</span>

            <span class="n">std</span><span class="o">::</span><span class="n">copy</span><span class="p">(</span><span class="n">v</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">v</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">std</span><span class="o">::</span><span class="n">ostream_iterator</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="p">,</span> <span class="s">&quot;, &quot;</span><span class="p">));</span>

            <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;]&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">catch</span> <span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">exception</span><span class="o">&amp;</span> <span class="n">e</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="n">e</span><span class="p">.</span><span class="n">what</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1680/addtag/" class="addtag" id="addtag_1680">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1680/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1680/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1680"
  >-</span><span
  class="button yellow"
  id="rating_z_1680"
  >0</span><span 
  class="button green"
  id="rating_p_1680"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100225235805/http://ja.doukaku.org/comment/1680/">
    1
    reply
  </a>

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1680/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1684">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1684/">#1684</a>(<script language="JavaScript">print_time(new Date("2007/08/02 05:57 GMT"));</script><noscript>2007/08/02 05:57 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  バグではないのですが、std::fill()というアルゴリズムがあることに気づいたので、リファクタリング。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre><span class="gd">--- main.orig   Thu Aug  2 14:52:35 2007</span>
<span class="gi">+++ main.cpp    Thu Aug  2 14:56:58 2007</span>
<span class="gu">@@ -13,10 +13,7 @@</span>

     std::vector&lt;int&gt; v(n, 1);

<span class="gd">-    for (size_t i = 0; i &lt; n - m; ++i)</span>
<span class="gd">-    {</span>
<span class="gd">-        v[i] = 0;</span>
<span class="gd">-    }</span>
<span class="gi">+    std::fill(v.begin(), v.begin() + (n - m), 0);</span>

     for (size_t i = 0; i &lt; x; ++i)
     {
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1684/addtag/" class="addtag" id="addtag_1684">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1684/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1684/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1684"
  >-</span><span
  class="button yellow"
  id="rating_z_1684"
  >0</span><span 
  class="button green"
  id="rating_p_1684"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1680/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1684/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20100225235805/http://ja.doukaku.org/comment/1684/">
    1
    reply
  </a>

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1684/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment1687">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1687/">#1687</a>(<script language="JavaScript">print_time(new Date("2007/08/02 06:10 GMT"));</script><noscript>2007/08/02 06:10 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  と思ったらstd::fill_nがあるので、こっちの方が短いな・・・（度々すみません）
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre><span class="gd">--- main.orig   Thu Aug  2 14:52:35 2007</span>
<span class="gi">+++ main.cpp    Thu Aug  2 15:07:37 2007</span>
<span class="gu">@@ -13,10 +13,7 @@</span>

     std::vector&lt;int&gt; v(n, 1);

<span class="gd">-    for (size_t i = 0; i &lt; n - m; ++i)</span>
<span class="gd">-    {</span>
<span class="gd">-        v[i] = 0;</span>
<span class="gd">-    }</span>
<span class="gi">+    std::fill_n(v.begin(), n - m, 0);</span>

     for (size_t i = 0; i &lt; x; ++i)
     {
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1687/addtag/" class="addtag" id="addtag_1687">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1687/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1687/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1687"
  >-</span><span
  class="button yellow"
  id="rating_z_1687"
  >0</span><span 
  class="button green"
  id="rating_p_1687"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1684/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1687/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1687/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


    </div>
  


  

  

  

  

  
    





<div class="comment" id="comment1690">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1690/">#1690</a>(<script language="JavaScript">print_time(new Date("2007/08/02 06:47 GMT"));</script><noscript>2007/08/02 06:47 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre>def fact(s:int, e:int) = s.until(e,-1).foldLeft(1){_*_}
def invHash(x:int, m:int, n:int):List[int] = fact(m-1,m-1-n)/fact(n,0) match {
  case v if x &gt;= v =&gt; 1::invHash(x-v,m-1,n-1)
  case _ if m &gt; 0  =&gt; 0::invHash(x,m-1,n)
  case _  =&gt; Nil
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1690/addtag/" class="addtag" id="addtag_1690">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1690/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1690/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1690"
  >-</span><span
  class="button yellow"
  id="rating_z_1690"
  >0</span><span 
  class="button green"
  id="rating_p_1690"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1690/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1695">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/130/" target="_top">rucker</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1695/">#1695</a>(<script language="JavaScript">print_time(new Date("2007/08/02 10:47 GMT"));</script><noscript>2007/08/02 10:47 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
	<span class="k">function</span> <span class="nf">factorial</span><span class="p">(</span><span class="nv">$x</span><span class="p">)</span>
	<span class="p">{</span>	<span class="nv">$r</span><span class="o">=</span><span class="m">1</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(;</span><span class="nv">$x</span><span class="o">&gt;</span><span class="m">1</span><span class="p">;</span><span class="o">--</span><span class="nv">$x</span><span class="p">)</span>
			<span class="nv">$r</span><span class="o">*=</span><span class="nv">$x</span><span class="p">;</span>
		<span class="k">return</span> <span class="nv">$r</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">function</span> <span class="nf">combination</span><span class="p">(</span><span class="nv">$n</span><span class="p">,</span><span class="nv">$m</span><span class="p">)</span>
	<span class="p">{</span>	<span class="k">return</span> <span class="nx">factorial</span><span class="p">(</span><span class="nv">$n</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">factorial</span><span class="p">(</span><span class="nv">$m</span><span class="p">)</span><span class="o">*</span><span class="nx">factorial</span><span class="p">(</span><span class="nv">$n</span><span class="o">-</span><span class="nv">$m</span><span class="p">));</span>
	<span class="p">}</span>
	<span class="k">function</span> <span class="nf">invperm</span><span class="p">(</span><span class="nv">$i</span><span class="p">,</span><span class="nv">$n</span><span class="p">,</span><span class="nv">$m</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="nv">$a</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(;</span><span class="nv">$m</span><span class="o">&lt;</span><span class="nv">$n</span><span class="p">;</span><span class="o">--</span><span class="nv">$n</span><span class="p">)</span>
		<span class="p">{</span>	<span class="nv">$c</span><span class="o">=</span><span class="nx">combination</span><span class="p">(</span><span class="nv">$n</span><span class="o">-</span><span class="m">1</span><span class="p">,</span><span class="nv">$m</span><span class="p">);</span>
			<span class="k">if</span><span class="p">(</span><span class="nv">$i</span><span class="o">&gt;=</span><span class="nv">$c</span><span class="p">)</span>
			<span class="p">{</span>	<span class="nv">$a</span><span class="o">.=</span><span class="s1">&#39;1&#39;</span><span class="p">;</span>
				<span class="nv">$i</span><span class="o">-=</span><span class="nv">$c</span><span class="p">;</span>
				<span class="k">if</span><span class="p">(</span><span class="o">--</span><span class="nv">$m</span><span class="o">&lt;</span><span class="m">0</span><span class="p">)</span>
					<span class="k">return</span> <span class="k">false</span><span class="p">;</span>
			<span class="p">}</span>
			<span class="k">else</span>
				<span class="nv">$a</span><span class="o">.=</span><span class="s1">&#39;0&#39;</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="nv">$a</span><span class="o">.=</span><span class="nf">str_repeat</span><span class="p">(</span><span class="s1">&#39;1&#39;</span><span class="p">,</span><span class="nv">$n</span><span class="p">);</span>
		<span class="k">return</span> <span class="nv">$a</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="nv">$i</span><span class="o">=</span><span class="m">0</span><span class="p">;(</span><span class="nv">$a</span><span class="o">=</span><span class="nx">invperm</span><span class="p">(</span><span class="nv">$i</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">2</span><span class="p">))</span><span class="o">!==</span><span class="k">false</span><span class="p">;</span><span class="o">++</span><span class="nv">$i</span><span class="p">)</span>
		<span class="k">echo</span> <span class="s2">&quot;</span><span class="si">$i</span><span class="s2">,</span><span class="si">$a</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;;</span>
<span class="cp">?&gt;</span><span class="x"></span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1695/addtag/" class="addtag" id="addtag_1695">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1695/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1695/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1695"
  >-</span><span
  class="button yellow"
  id="rating_z_1695"
  >0</span><span 
  class="button green"
  id="rating_p_1695"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1695/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1730">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/323/" target="_top">tomatsu</a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1730/">#1730</a>(<script language="JavaScript">print_time(new Date("2007/08/02 13:18 GMT"));</script><noscript>2007/08/02 13:18 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/pnuts/">
	  Pnuts
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre>function c(n, r){
   k = 1
   for (i = (r+1); i &lt;= n; i++) k *= i
   for (i = 2; i &lt;= (n-r); i++) k /= i
   k
}

function d(n, r, val){
  pat = int[n]
  for (idx : 1 .. n){
    x = c(n - idx, r)
    if (val &gt;= x){
        pat[idx - 1] = 1
        r--
        val -= x
    }
  }
  pat
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1730/addtag/" class="addtag" id="addtag_1730">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/pnuts/">
		Pnuts
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1730/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1730/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1730"
  >-</span><span
  class="button yellow"
  id="rating_z_1730"
  >0</span><span 
  class="button green"
  id="rating_p_1730"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1730/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1732">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/124/" target="_top">tsekine</a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1732/">#1732</a>(<script language="JavaScript">print_time(new Date("2007/08/02 13:29 GMT"));</script><noscript>2007/08/02 13:29 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/awk/">
	  awk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  けっこう効率よく解いてるつもりです。GNU AWK じゃなくても、けっこう古めの AWK (nawk)でも動くと思います。

実際に解いているのは rev_hash() だけなんですが、他が妙に長くなってしまいました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59</pre></td><td class="code"><div class="highlight"><pre>function make_pascal (n, m, pascal,       i, j) {
  pascal[0, 0] = 1;
  for (j = 1; j &lt;= m; j++) {
    pascal[0, j] = 0;
  }
  for (i = 1; i &lt; n; i++) {
    pascal[i, 0] = 1;

    for (j = 1; j &lt;= m; j++) {
      pascal[i, j] = pascal[i-1, j-1] + pascal[i-1, j];
    }
  }
}

function rev_hash (hash, n, m, pascal, data,     i, j) {
  j = m;
  for (i = n - 1; i &gt;= 0; i--) {
    if (hash &gt;= pascal[i, j]) {
      data[n - i - 1] = 1;
      hash -= pascal[i, j];
      j--;
    } else {
      data[n - i - 1] = 0;
    }
  }
}

function print_rev_hash(hash, n, m, pascal,     i) {
  rev_hash(hash, n, m, pascal, data);

  printf(&quot;%d =&gt; [&quot;, hash);
  for (i = 0; i &lt; n; i++) {
    printf(&quot;%d, &quot;, data[i]);
  }
  printf(&quot;]\n&quot;);
}

function c(n, m,    i, ret) {
  ret = 1;
  for (i = 0; i &lt; m; i++) ret *= n--;
  for (; m &gt; 0; m--) ret /= m;
  return ret;
}

BEGIN {
  if (n == 0) {
    n = 5;
  }
  if (m == 0) {
    m = 2;
  }

  make_pascal(n, m, pascal);

  num_hash = c(n, m);
  for (i = 0; i &lt; num_hash; i++) {
    print_rev_hash(i, n, m, pascal);
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1732/addtag/" class="addtag" id="addtag_1732">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/awk/">
		awk
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1732/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1732/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1732"
  >-</span><span
  class="button yellow"
  id="rating_z_1732"
  >0</span><span 
  class="button green"
  id="rating_p_1732"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1732/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1737">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/49/" target="_top">iwk</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1737/">#1737</a>(<script language="JavaScript">print_time(new Date("2007/08/02 15:50 GMT"));</script><noscript>2007/08/02 15:50 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  リフレクションの問題が解けないけれど、こちらをとりあえず・・・。効率は最悪。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre><span class="k">#</span><span class="n">light</span>
<span class="kr">open</span> <span class="n">LazyList</span>

<span class="kr">type</span> <span class="n">LListBuilder</span><span class="k">()</span> <span class="k">=</span>
    <span class="n">member</span> <span class="n">l</span><span class="k">.</span><span class="n">Bind</span><span class="k">(</span><span class="n">v</span><span class="k">,</span><span class="n">f</span><span class="k">)</span> <span class="k">=</span> <span class="n">LazyList</span><span class="k">.</span><span class="n">concat</span> <span class="k">(</span><span class="n">LazyList</span><span class="k">.</span><span class="n">map</span> <span class="n">f</span> <span class="n">v</span><span class="k">)</span>
    <span class="n">member</span> <span class="n">l</span><span class="k">.</span><span class="n">Return</span> <span class="n">x</span> <span class="k">=</span> <span class="n">LazyList</span><span class="k">.</span><span class="n">consf</span> <span class="n">x</span> <span class="n">LazyList</span><span class="k">.</span><span class="n">empty</span>
    <span class="n">member</span> <span class="n">l</span><span class="k">.</span><span class="n">Let</span><span class="k">(</span><span class="n">v</span><span class="k">,</span><span class="n">f</span><span class="k">)</span> <span class="k">=</span> <span class="n">f</span> <span class="n">v</span>

<span class="kr">let</span> <span class="n">doLList</span> <span class="k">=</span> <span class="kr">new</span> <span class="n">LListBuilder</span><span class="k">()</span>

<span class="kr">let</span> <span class="n">replicate</span> <span class="n">n</span> <span class="n">x</span> <span class="k">=</span> <span class="n">LazyList</span><span class="k">.</span><span class="n">take</span> <span class="n">n</span> <span class="k">(</span><span class="n">LazyList</span><span class="k">.</span><span class="n">repeat</span> <span class="n">x</span><span class="k">)</span>
<span class="kr">let</span> <span class="kr">rec</span> <span class="n">fact</span> <span class="k">(</span><span class="n">n</span><span class="k">:</span><span class="n">int</span><span class="k">)</span> <span class="k">=</span> <span class="kr">if</span> <span class="n">n</span> <span class="k">=</span> <span class="mi">0</span> <span class="kr">then</span> <span class="mi">1</span> <span class="kr">else</span> <span class="n">n</span> <span class="k">*</span> <span class="n">fact</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span>
<span class="kr">let</span> <span class="n">combination</span> <span class="n">n</span> <span class="n">m</span> <span class="k">=</span>
    <span class="kr">if</span> <span class="n">n</span> <span class="k">&lt;</span> <span class="n">m</span> <span class="kr">then</span> <span class="mi">0</span> <span class="kr">else</span> <span class="k">(</span><span class="n">fact</span> <span class="n">n</span><span class="k">)</span><span class="o">/</span><span class="k">((</span><span class="n">fact</span> <span class="n">m</span><span class="k">)</span> <span class="k">*</span> <span class="k">(</span><span class="n">fact</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="n">m</span><span class="k">)))</span>

<span class="kr">let</span> <span class="kr">rec</span> <span class="n">make_perm</span> <span class="n">n</span> <span class="n">m</span> <span class="k">=</span>
    <span class="kr">match</span> <span class="n">n</span><span class="k">,</span><span class="n">m</span> <span class="kr">with</span>
    <span class="k">|</span> <span class="n">n</span><span class="k">,</span><span class="mi">0</span> <span class="k">-&gt;</span> <span class="n">doLList</span> <span class="k">{</span> <span class="n">return</span> <span class="k">(</span><span class="n">replicate</span> <span class="n">n</span> <span class="mi">0</span><span class="k">)</span> <span class="k">}</span>
    <span class="k">|</span> <span class="n">n</span><span class="k">,</span><span class="n">m</span> <span class="kr">when</span> <span class="n">n</span> <span class="k">=</span> <span class="n">m</span> <span class="k">-&gt;</span> <span class="n">doLList</span> <span class="k">{</span> <span class="n">return</span> <span class="k">(</span><span class="n">replicate</span> <span class="n">n</span> <span class="mi">1</span><span class="k">)}</span>
    <span class="k">|</span> <span class="n">n</span><span class="k">,</span><span class="n">m</span> <span class="kr">when</span> <span class="n">n</span> <span class="k">&lt;</span> <span class="n">m</span> <span class="k">-&gt;</span> <span class="n">doLList</span> <span class="k">{</span> <span class="n">return</span> <span class="k">(</span><span class="n">empty</span><span class="k">())</span> <span class="k">}</span>
    <span class="k">|</span> <span class="n">n</span><span class="k">,</span><span class="n">m</span> <span class="k">-&gt;</span> <span class="kr">let</span> <span class="n">c</span> <span class="k">=</span> <span class="n">combination</span> <span class="n">n</span> <span class="n">m</span>
             <span class="kr">let</span> <span class="n">d</span> <span class="k">=</span> <span class="n">combination</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">m</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span>
             <span class="n">append</span>
                 <span class="k">(</span><span class="n">map2</span> <span class="n">append</span> <span class="k">(</span><span class="n">replicate</span> <span class="n">d</span> <span class="k">(</span><span class="n">consf</span> <span class="mi">1</span> <span class="n">empty</span><span class="k">))</span>
                     <span class="k">(</span><span class="n">make_perm</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">m</span><span class="k">-</span><span class="mi">1</span><span class="k">)))</span>
                 <span class="k">(</span><span class="n">map2</span> <span class="n">append</span> <span class="k">(</span><span class="n">replicate</span> <span class="k">(</span><span class="n">c</span><span class="k">-</span><span class="n">d</span><span class="k">)</span> <span class="k">(</span><span class="n">consf</span> <span class="mi">0</span> <span class="n">empty</span><span class="k">))</span>
                     <span class="k">(</span><span class="n">make_perm</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="n">m</span><span class="k">))</span>

<span class="kr">let</span> <span class="n">inv_hash</span> <span class="k">(</span><span class="n">n</span><span class="k">,</span><span class="n">m</span><span class="k">)</span> <span class="n">num</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">nth</span> <span class="n">lls</span> <span class="n">i</span> <span class="k">=</span> <span class="n">take</span> <span class="n">i</span> <span class="n">lls</span> <span class="k">|&gt;</span> <span class="n">hd</span>
    <span class="kr">let</span> <span class="n">c</span> <span class="k">=</span> <span class="k">(</span><span class="n">combination</span> <span class="n">n</span> <span class="n">m</span><span class="k">)</span>
    <span class="n">nth</span> <span class="k">(</span><span class="n">make_perm</span> <span class="n">n</span> <span class="n">m</span><span class="k">)</span> <span class="k">(</span><span class="n">c</span><span class="k">-</span><span class="n">num</span><span class="k">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1737/addtag/" class="addtag" id="addtag_1737">タグ</a>:
	
    
    <a href="/web/20100225235805/http://ja.doukaku.org/tag/F%23/">F#</a>
    
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1737/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1737/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1737"
  >-</span><span
  class="button yellow"
  id="rating_z_1737"
  >0</span><span 
  class="button green"
  id="rating_p_1737"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1737/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1789">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/235/" target="_top">onjo</a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1789/">#1789</a>(<script language="JavaScript">print_time(new Date("2007/08/03 14:21 GMT"));</script><noscript>2007/08/03 14:21 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  pascal の三角形の使いまわしすようにすれば効率化できると思います。とりあえず動いた版を投稿。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre>(defun reverse-hash (x n m)
  (let ((pascal (let ((array (make-array (list n (1+ m)) :initial-element 0)))
                  (flet ((ref (y x) (if (&lt; x 0) 0 (aref array y x))))
                    (setf (aref array 0 0) 1)
                    (loop for i from 1 below n do
                         (loop for j from 0 below (1+ m) do
                              (setf (aref array i j)
　　　　　　　　　　　　　　 (+ (ref (1- i) (1- j)) (ref (1- i) j)))))
                    array))))
    (labels ((lookup (n m)
               (aref pascal n m))
             (iter (x n m)
               (cond ((= m 0) (make-list n :initial-element 0))
                     ((= n m) (make-list n :initial-element 1))
                     ((&lt;= (lookup (1- n) m) x)
                      (cons 1 (iter (- x (lookup (1- n) m)) (1- n) (1- m))))
                     (t
                      (cons 0 (iter x (1- n) m))))))
      (iter x n m))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1789/addtag/" class="addtag" id="addtag_1789">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1789/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1789/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1789"
  >-</span><span
  class="button yellow"
  id="rating_z_1789"
  >0</span><span 
  class="button green"
  id="rating_p_1789"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1789/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1908">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/352/" target="_top">186</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1908/">#1908</a>(<script language="JavaScript">print_time(new Date("2007/08/06 04:41 GMT"));</script><noscript>2007/08/06 04:41 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  この問題が出ているの知らなくってお題として投稿してしまいました.

Fischer and Stern "An efficient pseudo-random generator provably as secure as syndrome decoding" (Eurocrypt '96) のアルゴリズムに倣っています.
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">binom</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">perm</span> <span class="nv">n</span> <span class="nv">m</span> <span class="nv">c</span><span class="p">)</span>
    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="nv">m</span> <span class="mi">0</span><span class="p">)</span>
        <span class="nv">c</span>
        <span class="p">(</span><span class="nf">perm</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="nv">c</span><span class="p">))))</span>
  <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nf">perm</span> <span class="nv">n</span> <span class="nv">m</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nf">perm</span> <span class="nv">m</span> <span class="nv">m</span> <span class="mi">1</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">enc</span> <span class="nv">n</span> <span class="nv">m</span> <span class="nv">i</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">enc-in</span> <span class="nv">n</span> <span class="nv">m</span> <span class="nv">i</span> <span class="nv">c</span> <span class="nv">x-list</span><span class="p">)</span>
    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="nv">n</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">(</span><span class="nb">reverse </span><span class="nv">x-list</span><span class="p">)</span>
        <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">c2</span> <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nb">* </span><span class="nv">c</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="nv">m</span><span class="p">))</span> <span class="nv">n</span><span class="p">)))</span>
          <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&lt;= </span><span class="nv">i</span> <span class="nv">c2</span><span class="p">)</span> 
            <span class="p">(</span><span class="nf">enc-in</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">m</span> <span class="nv">i</span> <span class="nv">c2</span> <span class="p">(</span><span class="nb">cons </span><span class="mi">0</span> <span class="nv">x-list</span><span class="p">))</span>
            <span class="p">(</span><span class="nf">enc-in</span> <span class="p">(</span><span class="nb">- </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">m</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">i</span> <span class="nv">c2</span><span class="p">)</span> <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nb">* </span><span class="nv">c</span> <span class="nv">m</span><span class="p">)</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nb">cons </span><span class="mi">1</span> <span class="nv">x-list</span><span class="p">))))))</span>
  <span class="p">(</span><span class="nf">enc-in</span> <span class="nv">n</span> <span class="nv">m</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nf">binom</span> <span class="nv">n</span> <span class="nv">m</span><span class="p">)</span> <span class="o">&#39;</span><span class="p">()))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1908/addtag/" class="addtag" id="addtag_1908">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1908/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1908/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1908"
  >-</span><span
  class="button yellow"
  id="rating_z_1908"
  >0</span><span 
  class="button green"
  id="rating_p_1908"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100225235805/http://ja.doukaku.org/comment/1908/">
    1
    reply
  </a>

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1908/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment2068">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/352/" target="_top">186</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/2068/">#2068</a>(<script language="JavaScript">print_time(new Date("2007/08/11 05:15 GMT"));</script><noscript>2007/08/11 05:15 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  メモ化についてのメモ:
i=0,...,nについて, binom(n,m)/iを計算している. 0だったらn-mを掛けて, 1だったらmを掛ける.
なのでbinom(n,m)/iだけテーブルに入れておけば複数回利用するときに高速化が可能.

#1671ではパスカルの三角形を全てメモするが, 0,1に従って掛け算をすることは無い.
メモリ使用量とコストのトレードオフ.
	</div>
	
	<p class="link">
	  参考: <a href="/web/20100225235805/http://ja.doukaku.org/comment/1671/">#1671</a>
	</p>  
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/2068/addtag/" class="addtag" id="addtag_2068">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2068"
  >-</span><span
  class="button yellow"
  id="rating_z_2068"
  >0</span><span 
  class="button green"
  id="rating_p_2068"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/1908/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100225235805/http://ja.doukaku.org/comment/2068/root/"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/2068/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment1920">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/322/" target="_top">sawat</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1920/">#1920</a>(<script language="JavaScript">print_time(new Date("2007/08/06 07:27 GMT"));</script><noscript>2007/08/06 07:27 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>JavaScriptでまだ出てないので。
x=0から順に求めるので効率は良くないです。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">Bit</span><span class="p">(</span><span class="nx">n</span><span class="o">,</span> <span class="nx">a</span><span class="o">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">n</span> <span class="o">=</span> <span class="nx">n</span><span class="o">;</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="o">;</span> <span class="k">this</span><span class="p">.</span><span class="nx">next</span> <span class="o">=</span> <span class="nx">next</span><span class="o">;</span>
<span class="p">}</span>
<span class="nx">Bit</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span> <span class="p">{</span>
  <span class="nx">up</span> <span class="o">:</span> <span class="k">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">++;</span>
    <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">next</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">b</span> <span class="o">==</span> <span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">b</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">;</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">up</span><span class="p">();</span>
    <span class="p">}</span>
  <span class="p">}</span><span class="o">,</span> 
  <span class="nx">toData</span><span class="o">:</span> <span class="k">function</span><span class="p">(</span><span class="nx">flip</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">_tod</span><span class="p">([]</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="nx">flip</span><span class="p">);</span>
    <span class="k">while</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">n</span><span class="p">)</span> <span class="nx">data</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span> <span class="o">^</span> <span class="nx">flip</span><span class="p">);</span>
    <span class="k">return</span> <span class="nx">flip</span> <span class="o">?</span> <span class="nx">data</span> <span class="o">:</span> <span class="nx">data</span><span class="p">.</span><span class="nx">reverse</span><span class="p">();</span>
  <span class="p">}</span><span class="o">,</span> 
  <span class="nx">_tod</span><span class="o">:</span> <span class="k">function</span><span class="p">(</span><span class="nx">ary</span><span class="o">,</span> <span class="nx">a</span><span class="o">,</span> <span class="nx">flip</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="o">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="nx">ary</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span> <span class="o">^</span> <span class="nx">flip</span><span class="p">);</span>
    <span class="nx">ary</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">1</span> <span class="o">^</span> <span class="nx">flip</span><span class="p">);</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">next</span> <span class="o">?</span> <span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="p">.</span><span class="nx">_tod</span><span class="p">(</span><span class="nx">ary</span><span class="o">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="nx">flip</span><span class="p">)</span> <span class="o">:</span> <span class="nx">ary</span><span class="o">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nx">invert</span><span class="p">(</span><span class="nx">x</span><span class="o">,</span> <span class="nx">n</span><span class="o">,</span> <span class="nx">m</span><span class="o">,</span> <span class="nx">flip</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">-</span><span class="nx">m</span> <span class="o">&lt;</span> <span class="nx">m</span><span class="p">)</span> <span class="k">return</span> <span class="nx">invert</span><span class="p">(</span><span class="nx">x</span><span class="o">,</span> <span class="nx">n</span><span class="o">,</span> <span class="nx">n</span><span class="o">-</span><span class="nx">m</span><span class="o">,</span> <span class="mi">1</span><span class="p">);</span>

  <span class="k">var</span> <span class="nx">bit</span><span class="o">;</span>
  <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span> <span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">;</span> <span class="nx">i</span><span class="o">--</span><span class="p">)</span> <span class="nx">bit</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Bit</span><span class="p">(</span><span class="nx">n</span><span class="o">,</span> <span class="nx">i</span><span class="o">,</span> <span class="nx">bit</span><span class="p">);</span>
  <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">x</span><span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>  <span class="nx">bit</span><span class="p">.</span><span class="nx">up</span><span class="p">();</span>
  <span class="k">return</span> <span class="nx">bit</span><span class="p">.</span><span class="nx">toData</span><span class="p">(</span><span class="nx">flip</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> 
  <span class="nx">alert</span><span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="s2">&quot; : &quot;</span> <span class="o">+</span> <span class="nx">invert</span><span class="p">(</span><span class="nx">i</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">2</span><span class="p">));</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1920/addtag/" class="addtag" id="addtag_1920">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1920/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1920/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1920"
  >-</span><span
  class="button yellow"
  id="rating_z_1920"
  >0</span><span 
  class="button green"
  id="rating_p_1920"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1920/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1944">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/91/" target="_top">yooskeh</a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1944/">#1944</a>(<script language="JavaScript">print_time(new Date("2007/08/06 14:49 GMT"));</script><noscript>2007/08/06 14:49 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/prolog/">
	  Prolog
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>hashは問題のハッシュ関数そのままの実装です。

?- hash(5, 2, [0, 1, 0, 1, 0], X).
X = 4

Prologのパターンマッチとバックトラックにより
逆関数としても使えます。

?- hash(5, 2, L, 4).
L = [0, 1, 0, 1, 0]

これはこれで面白いのですが
結局のところ順列を作りつつ調べていくので
n, mが大きくなると使い物になりません。

その点unhashは双方向ではありませんが
combを考えなければ計算量は線形です。

あと、combは一応メモ化してますが、
たぶん計算方法が良くないです。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></td><td class="code"><div class="highlight"><pre>%%	comb(+N, +K, ?C)

:- dynamic comb/3.

comb(_, 0, 1) :- !.
comb(N, K, X) :-
	N0 is N - 1,
	K0 is K - 1,
	comb(N0, K0, X0),
	X is X0 * N / K,
	asserta(comb(N, K, X) :- !).

%%	hash(+N, +M, ?BitList, ?Hash)

hash(0, 0, [], 0) :- !.
hash(N, M, [1|Bs], H) :-
	succ(M0, M),
	succ(N0, N),
	comb(N0, M, C),
	hash(N0, M0, Bs, H0),
	H is C + H0.
hash(N, M, [0|Bs], H) :-
	succ(N0, N),
	hash(N0, M, Bs, H).

%%	unhash(+N, +M, +Hash, ?BitList)

unhash(0, 0, _, []) :- !.
unhash(N, M, H, [B|Bs]) :-
	N0 is N - 1,
	(   N &gt; 0,
	    comb(N0, M, C),
	    H &gt;= C
	-&gt;  B = 1,
	    H0 is H - C,
	    M0 is M - 1,
	    unhash(N0, M0, H0, Bs)
	;   B = 0,
	    unhash(N0, M, H, Bs)
	).
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1944/addtag/" class="addtag" id="addtag_1944">タグ</a>:
	
    
    <a href="/web/20100225235805/http://ja.doukaku.org/tag/SWI-Prolog/">SWI-Prolog</a>
    
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/prolog/">
		Prolog
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1944/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1944/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1944"
  >-</span><span
  class="button yellow"
  id="rating_z_1944"
  >0</span><span 
  class="button green"
  id="rating_p_1944"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1944/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment1971">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/84/" target="_top">shuyo</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1971/">#1971</a>(<script language="JavaScript">print_time(new Date("2007/08/07 06:42 GMT"));</script><noscript>2007/08/07 06:42 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/erlang/">
	  Erlang
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>出題者です。
わけあって Erlang で参戦。
shiroさんのを参考にメモ化も試してみています。

&gt; c(comb_hash).
&gt; comb_hash:comb_hash([1,0,1,0,0], 5, 2).
8
&gt; comb_hash:inv_comb_hash(8, 5, 2).
[1,0,1,0,0]
&gt; comb_hash:comb_hash(comb_hash:inv_comb_hash(123456,25,8), 25, 8).
123456</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre>-module(comb_hash).
-export([comb_hash/3, inv_comb_hash/3, combination/2]).

comb_hash(_, _, 0) -&gt; 0;
comb_hash(_, N, R) when N=&lt;R -&gt; 0;
comb_hash([0|L], N, R) -&gt; comb_hash(L, N-1, R);
comb_hash([1|L], N, R) -&gt; combination(N-1, R) + comb_hash(L, N-1, R-1).

inv_comb_hash(_, N, 0) -&gt; multiple_list(0,N);
inv_comb_hash(_, N, R) when N==R -&gt; multiple_list(1,N);
inv_comb_hash(V, N, R) -&gt;
	C = combination(N-1, R),
	if V &gt;= C -&gt;
		[1 | inv_comb_hash(V-C, N-1, R-1)];
	true -&gt;
		[0 | inv_comb_hash(V, N-1, R)]
	end.

combination(_, 0) -&gt; 1;
combination(N, R) when N=&lt;R -&gt; 1;
combination(N, R) -&gt; 
	case get({N,R}) of
	undefined -&gt;
		V = combination(N-1, R) + combination(N-1, R-1),
		put({N,R}, V),
		V;
	V -&gt; V
	end.

multiple_list(V,1) -&gt; [V];
multiple_list(V,N) -&gt; [V|multiple_list(V,N-1)].
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/1971/addtag/" class="addtag" id="addtag_1971">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/erlang/">
		Erlang
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1971/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/1971/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1971"
  >-</span><span
  class="button yellow"
  id="rating_z_1971"
  >0</span><span 
  class="button green"
  id="rating_p_1971"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/1971/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  

  
    





<div class="comment" id="comment2088">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/383/" target="_top">shg</a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/2088/">#2088</a>(<script language="JavaScript">print_time(new Date("2007/08/12 23:13 GMT"));</script><noscript>2007/08/12 23:13 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/matlab/">
	  Matlab
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  とりあえず簡潔に。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="highlight"><pre>function data = invoptcombhash(x, n, m)
combpos = nchoosek(1:n,m);
data = zeros(1,n);
data(combpos(x,:)) = 1;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/2088/addtag/" class="addtag" id="addtag_2088">タグ</a>:
	
    
    <a href="/web/20100225235805/http://ja.doukaku.org/tag/MATLAB7.4/">MATLAB7.4</a>
    
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/matlab/">
		Matlab
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/2088/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/2088/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2088"
  >-</span><span
  class="button yellow"
  id="rating_z_2088"
  >0</span><span 
  class="button green"
  id="rating_p_2088"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/2088/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment3788">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/26/" target="_top">dankogai</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/3788/">#3788</a>(<script language="JavaScript">print_time(new Date("2007/11/10 00:28 GMT"));</script><noscript>2007/11/10 00:28 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>オーソドックスな実装。nCkの定義は、
n C k = k C n
にあわせました。
Dan the Perl Monger</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!/usr/local/bin/perl</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>

<span class="k">sub </span><span class="nf">fact</span><span class="p">{</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">1</span> <span class="p">?</span> <span class="mi">1</span> <span class="p">:</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">fact</span><span class="p">(</span><span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">};</span>
<span class="k">sub </span><span class="nf">nCk</span> <span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$n</span><span class="p">,</span> <span class="nv">$k</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="p">?</span> <span class="nv">@_</span> <span class="p">:</span> <span class="nb">reverse</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="n">fact</span><span class="p">(</span><span class="nv">$n</span><span class="p">)</span> <span class="sr">/ fact($k) /</span> <span class="n">fact</span><span class="p">(</span><span class="nv">$n</span> <span class="o">-</span> <span class="nv">$k</span><span class="p">)</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">invhash</span> <span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span> <span class="nv">$x</span><span class="p">,</span> <span class="nv">$n</span><span class="p">,</span> <span class="nv">$k</span> <span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">return</span> <span class="p">()</span>       <span class="k">if</span> <span class="nv">$n</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">return</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="n">x</span> <span class="nv">$n</span> <span class="k">if</span> <span class="nv">$n</span> <span class="o">==</span> <span class="nv">$k</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$c</span> <span class="o">=</span> <span class="n">nCk</span><span class="p">(</span> <span class="nv">$n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">$k</span> <span class="p">);</span>
    <span class="nv">$x</span> <span class="o">&gt;=</span> <span class="nv">$c</span> <span class="p">?</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">invhash</span><span class="p">(</span> <span class="nv">$x</span> <span class="o">-</span> <span class="nv">$c</span><span class="p">,</span> <span class="nv">$n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">$k</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">))</span>
             <span class="p">:</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">invhash</span><span class="p">(</span> <span class="nv">$x</span><span class="p">,</span> <span class="nv">$n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">$k</span> <span class="p">));</span>
<span class="p">}</span>

<span class="k">print</span> <span class="nv">$_</span><span class="p">,</span> <span class="s">&quot; =&gt; [&quot;</span><span class="p">,</span> <span class="nb">join</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">,</span> <span class="n">invhash</span><span class="p">(</span><span class="nv">$_</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">)),</span> <span class="s">&quot;]\n&quot;</span> <span class="k">for</span> <span class="p">(</span><span class="mi">0</span><span class="o">..</span><span class="mi">9</span><span class="p">);</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/3788/addtag/" class="addtag" id="addtag_3788">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/3788/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/3788/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3788"
  >-</span><span
  class="button yellow"
  id="rating_z_3788"
  >0</span><span 
  class="button green"
  id="rating_p_3788"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/3788/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment5996">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/59/" target="_top">nori</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/5996/">#5996</a>(<script language="JavaScript">print_time(new Date("2008/03/10 15:39 GMT"));</script><noscript>2008/03/10 15:39 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  いまさらながらpost。ただひたすら平明に。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Combination</span><span class="p">:</span>
  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">_cache</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">_update</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="c"># C(0, 0)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">_size</span> <span class="o">=</span> <span class="mi">1</span>

  <span class="k">def</span> <span class="nf">_update</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">_cache</span><span class="o">.</span><span class="n">update</span><span class="p">({(</span><span class="n">n</span><span class="p">,</span> <span class="n">r</span><span class="p">):</span> <span class="n">value</span><span class="p">})</span>

  <span class="k">def</span> <span class="nf">_read</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">r</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="ow">or</span> <span class="n">r</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
      <span class="k">return</span> <span class="mi">0</span>
    <span class="k">elif</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="n">r</span><span class="p">:</span>
      <span class="k">return</span> <span class="mi">0</span>
    <span class="k">else</span><span class="p">:</span>
      <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_cache</span><span class="p">[(</span><span class="n">n</span><span class="p">,</span> <span class="n">r</span><span class="p">)]</span>

  <span class="k">def</span> <span class="nf">_expand</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="n">n</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_size</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">_update</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="n">n</span><span class="p">,</span> <span class="n">r</span><span class="o">=</span><span class="n">i</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">_read</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">r</span><span class="o">=</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="bp">self</span><span class="o">.</span><span class="n">_read</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">r</span><span class="o">=</span>
<span class="n">i</span><span class="p">))</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">_size</span> <span class="o">=</span> <span class="n">n</span> <span class="o">+</span> <span class="mi">1</span>

  <span class="k">def</span> <span class="nf">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">r</span><span class="p">):</span>
    <span class="k">while</span> <span class="bp">self</span><span class="o">.</span><span class="n">_size</span> <span class="o">&lt;</span> <span class="n">n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">:</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">_expand</span><span class="p">()</span>
    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_read</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">r</span><span class="p">)</span>
<span class="n">C</span> <span class="o">=</span> <span class="n">Combination</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">C_RHash</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">r</span><span class="p">):</span>
  <span class="sd">&#39;&#39;&#39;</span>
<span class="sd">&gt;&gt;&gt; C_RHash(8, 5, 2)</span>
<span class="sd">[1, 0, 1, 0, 0]</span>
<span class="sd">  &#39;&#39;&#39;</span>
  <span class="n">result</span> <span class="o">=</span> <span class="nb">list</span><span class="p">()</span>
  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="n">C</span><span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">r</span><span class="p">):</span>
      <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
      <span class="n">x</span> <span class="o">-=</span> <span class="n">C</span><span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">r</span><span class="p">)</span>
      <span class="n">r</span> <span class="o">-=</span> <span class="mi">1</span>
    <span class="k">else</span><span class="p">:</span>
      <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
  <span class="k">return</span> <span class="n">result</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/5996/addtag/" class="addtag" id="addtag_5996">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/5996/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/5996/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5996"
  >-</span><span
  class="button yellow"
  id="rating_z_5996"
  >0</span><span 
  class="button green"
  id="rating_p_5996"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/5996/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment6540">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100225235805/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/6540/">#6540</a>(<script language="JavaScript">print_time(new Date("2008/06/19 22:46 GMT"));</script><noscript>2008/06/19 22:46 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/erlang/">
	  Erlang
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  関数multiple_list/2は，Erlangのlistsモジュールにある関数duplicate/2で置き換え可能ですね．ご参考まで
Kenji Rikitake, JJ1BDX
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="highlight"><pre>%% FYI
multiple_list(L,N) -&gt; lists:duplicate(N,L).
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/6540/addtag/" class="addtag" id="addtag_6540">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/erlang/">
		Erlang
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/6540/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/6540/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6540"
  >-</span><span
  class="button yellow"
  id="rating_z_6540"
  >0</span><span 
  class="button green"
  id="rating_p_6540"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/6540/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment9600">
  <p class="banner"><a href="/web/20100225235805/http://ja.doukaku.org/user/959/" target="_top">uehaj</a>

	
	&nbsp;
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/9600/">#9600</a>(<script language="JavaScript">print_time(new Date("2009/09/22 08:18 GMT"));</script><noscript>2009/09/22 08:18 GMT</noscript>)
	
	
	
	[<a href="/web/20100225235805/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>寝る前の30分で素朴に作ってみました。
$ groovy revhash.groovy 
9=&gt;[1, 1, 0, 0, 0]
8=&gt;[1, 0, 1, 0, 0]
7=&gt;[1, 0, 0, 1, 0]
6=&gt;[1, 0, 0, 0, 1]
5=&gt;[0, 1, 1, 0, 0]
4=&gt;[0, 1, 0, 1, 0]
3=&gt;[0, 1, 0, 0, 1]
2=&gt;[0, 0, 1, 1, 0]
1=&gt;[0, 0, 1, 0, 1]
0=&gt;[0, 0, 0, 1, 1]
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre>def revhash(M, N, x) {
  def data = []
  for (int i=1; i&lt;2**M; i++) {
    def bs = Integer.toBinaryString(i)
    if (bs.grep{it==&quot;1&quot;}.size()==N) {
      data &lt;&lt; bs.padLeft(M, &#39;0&#39;)
    }
  }
  return data[x].toList().collect{Integer.parseInt(it)}
}

(9..0).each {
  println it+&quot;=&gt;&quot;+revhash(5, 2, it)
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100225235805/http://ja.doukaku.org/comment/9600/addtag/" class="addtag" id="addtag_9600">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100225235805/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20100225235805/http://ja.doukaku.org/comment/9600/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100225235805/http://ja.doukaku.org/comment/9600/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9600"
  >-</span><span
  class="button yellow"
  id="rating_z_9600"
  >0</span><span 
  class="button green"
  id="rating_p_9600"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100225235805/http://ja.doukaku.org/36/reply_to/9600/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20100225235805if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20100225235805/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20100225235805/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20100225235805/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20100225235805/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20100225235805/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20100225235805/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20100225235805/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20100225235805/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100225235805/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100225235805/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20100225235805im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20100225235805/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20100225235805/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20100225235805/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20100225235805/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20100225235805/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20100225235805/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20100225235805/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20100225235805/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20100225235805im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20100225235805/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20100225235805/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20100225235805/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20100225235805js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 23:58:05 Feb 25, 2010 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:20:36 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
