
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
起動オプションの解析
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20090103063138cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20090103063138cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20090103063138cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
    <!--<script src="/web/20090103063138/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20090103063138/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20090103063138js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20090103063138js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20090103063138js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20090103063138js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app0.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/205\/nested\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "3";
var displayMonth = "Jan";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/205/nested/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090103063138" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20081202221310/http://ja.doukaku.org/205/nested/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="2 Dec 2008"><strong>DEC</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 6:31:38 Jan 3, 2009">JAN</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Feb
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20081202221310/http://ja.doukaku.org/205/nested/" title="22:13:10 Dec 2, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 6:31:38 Jan 3, 2009">3</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2008
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 6:31:38 Jan 3, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20090103063138*/http://ja.doukaku.org/205/nested/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>3 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">26 Sep 08 - 3 Jan 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000001001_2009:0:100000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20090103063138/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20090103063138im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20090103063138/http://ja.doukaku.org/205/">起動オプションの解析</a>
</h2>

    





<div class="comment" id="comment7405">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7405/">#7405</a>(<script language="JavaScript">print_time(new Date("2008/08/27 06:46 GMT"));</script><noscript>2008/08/27 06:46 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffbf;">0/4=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>いわゆる、コマンドライン引数の取得(http://ja.doukaku.org/118/)からの派生です。
やっぱ、自分のコマンドってオプションつけたいですよね(笑
タグに「クックブック」なんてつけてみました
長文なのはご容赦ください^^;;
-----
次の起動インタフェースを持つコマンドを作成してください。

書式：cmdopt -o [-q] -d{0|1|2} 文字列 [文字列 ...]

書式を説明すると
- オプション「o」
  必須オプションです。指定されていない場合、異常終了してください。
- オプション「q」
  選択オプションです。
  省略されていても問題有りません。
- オプション「d」
  引数付きオプションです。
  「0」「1」「2」のいずかが続いて指定されます。
- 文字列
  パラメータです。
  1つ以上であればいくつでも指定できます。
  指定されていなかった場合、異常終了してください。

オプションの開始が「-」になっていますが
「+」や「/」でもかまいません。
余力があればロングオプションに対応してもよいです。

起動例：(すべて許容されるのが望ましいです)
1. cmdopt -o AAA
2. cmdopt -o AAA BBB CCC
3. cmdopt -oq AAA
4. cmdopt -o  -q AAA
5. cmdopt -o -s1 AAA
6. cmdopt -o -s 1 AAA
7. cmdopt -q -s2 -o AAA

出力例：
[オプション情報]
o(output)： ON|OFF
q(quote)： ON|OFF
d(debug)： 0|1|2 

[パラメータ情報]
指定数： N
1： 文字列1
2： 文字列2
...
N： 文字列N
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7405/addtag/" class="addtag" id="addtag_7405">タグ</a>:
	
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/%E3%82%AF%E3%83%83%E3%82%AF%E3%83%96%E3%83%83%E3%82%AF/">クックブック</a>
    
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffbf;"
  >0/4=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7405"
  >-</span><span
  class="button yellow"
  id="rating_z_7405"
  >0</span><span 
  class="button green"
  id="rating_p_7405"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090103063138/http://ja.doukaku.org/comment/7405/">
    1
    reply
  </a>

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7405/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment7614">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7614/">#7614</a>(<script language="JavaScript">print_time(new Date("2008/09/10 12:42 GMT"));</script><noscript>2008/09/10 12:42 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>えーと。何人かの方から指摘されていますが
-sは-dの間違いです。
また、-dのオプションは省略可能なオプションでした。

ということで書式を訂正すると
書式：cmdopt -o [-q] [-d{0|1|2}] 文字列 [文字列 ...]
です。

それと起動例も
1. cmdopt -o AAA
2. cmdopt -o AAA BBB CCC
3. cmdopt -oq AAA
4. cmdopt -o  -q AAA
5. cmdopt -o -d1 AAA
6. cmdopt -o -d 1 AAA
7. cmdopt -q -d2 -o AAA
となります。

フォロー遅くなってしまって申し訳ないです。
期末恒例のお祭りが発生しちゃって^^;;
指摘ありがとうございました。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7614/addtag/" class="addtag" id="addtag_7614">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7614"
  >-</span><span
  class="button yellow"
  id="rating_z_7614"
  >0</span><span 
  class="button green"
  id="rating_p_7614"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090103063138/http://ja.doukaku.org/comment/7405/"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090103063138/http://ja.doukaku.org/comment/7614/root/"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7614/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  



<div class="indent">
<a href="/web/20090103063138/http://ja.doukaku.org/205/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - ネスト表示</h2>
<a href="/web/20090103063138/http://ja.doukaku.org/205/flatten/">フラット表示</a> 
<a href="/web/20090103063138/http://ja.doukaku.org/205/">非表示</a> 


  

  
    





<div class="comment" id="comment7599">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7599/">#7599</a>(<script language="JavaScript">print_time(new Date("2008/09/09 03:57 GMT"));</script><noscript>2008/09/09 03:57 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>ちょうど、今日TwitterでBoost.Program_optionsの話題が出てたとこでした。
なんというタイミング。</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090103063138/http://www.boost.org/doc/libs/1_36_0/doc/html/program_options.html">Boost.Program_options</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;exception&gt;</span>

<span class="cp">#include &lt;boost/program_options/options_description.hpp&gt;</span>
<span class="cp">#include &lt;boost/program_options/variables_map.hpp&gt;</span>
<span class="cp">#include &lt;boost/program_options/parsers.hpp&gt;</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">c</span><span class="p">,</span> <span class="kt">char</span><span class="o">**</span><span class="n">v</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="k">namespace</span> <span class="n">po</span> <span class="o">=</span> <span class="n">boost</span><span class="o">::</span><span class="n">program_options</span><span class="p">;</span>

    <span class="kt">int</span> <span class="n">debug</span><span class="p">;</span>

    <span class="n">po</span><span class="o">::</span><span class="n">options_description</span> <span class="n">desc</span><span class="p">(</span><span class="s">&quot;Options&quot;</span><span class="p">);</span>
    <span class="n">desc</span><span class="p">.</span><span class="n">add_options</span><span class="p">()</span>
      <span class="p">(</span><span class="s">&quot;output,o&quot;</span><span class="p">,</span> <span class="s">&quot;output flag [required]&quot;</span><span class="p">)</span>
      <span class="p">(</span><span class="s">&quot;quote,q&quot;</span><span class="p">,</span> <span class="s">&quot;quote flag&quot;</span><span class="p">)</span>
      <span class="p">(</span><span class="s">&quot;debug,d&quot;</span><span class="p">,</span> <span class="n">po</span><span class="o">::</span><span class="n">value</span><span class="o">&lt;</span> <span class="kt">int</span> <span class="o">&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">debug</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">default_value</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span> <span class="s">&quot;debug level [0|1|2]&quot;</span><span class="p">)</span>
      <span class="p">;</span>
    <span class="n">po</span><span class="o">::</span><span class="n">options_description</span> <span class="n">hidden</span><span class="p">(</span><span class="s">&quot;hidden optionis&quot;</span><span class="p">);</span>
    <span class="n">hidden</span><span class="p">.</span><span class="n">add_options</span><span class="p">()</span>
      <span class="p">(</span><span class="s">&quot;input&quot;</span><span class="p">,</span> <span class="n">po</span><span class="o">::</span><span class="n">value</span><span class="o">&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="o">&gt;</span> <span class="o">&gt;</span><span class="p">(),</span> <span class="s">&quot;input file [at least one required]&quot;</span><span class="p">)</span>
      <span class="p">;</span>

    <span class="n">po</span><span class="o">::</span><span class="n">positional_options_description</span> <span class="n">positional</span><span class="p">;</span>
    <span class="n">positional</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="s">&quot;input&quot;</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">);</span>

    <span class="n">po</span><span class="o">::</span><span class="n">options_description</span> <span class="n">visible</span><span class="p">(</span><span class="s">&quot;Allowed Options&quot;</span><span class="p">);</span>
    <span class="n">visible</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">desc</span><span class="p">);</span>

    <span class="n">po</span><span class="o">::</span><span class="n">options_description</span> <span class="n">full</span><span class="p">(</span><span class="s">&quot;Full Options&quot;</span><span class="p">);</span>
    <span class="n">full</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">desc</span><span class="p">).</span><span class="n">add</span><span class="p">(</span><span class="n">hidden</span><span class="p">);</span>

    <span class="n">po</span><span class="o">::</span><span class="n">variables_map</span> <span class="n">vm</span><span class="p">;</span>
    <span class="n">po</span><span class="o">::</span><span class="n">store</span><span class="p">(</span><span class="n">po</span><span class="o">::</span><span class="n">command_line_parser</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">v</span><span class="p">).</span><span class="n">options</span><span class="p">(</span><span class="n">full</span><span class="p">).</span><span class="n">positional</span><span class="p">(</span><span class="n">positional</span><span class="p">).</span><span class="n">run</span><span class="p">(),</span> <span class="n">vm</span><span class="p">);</span>
    <span class="n">po</span><span class="o">::</span><span class="n">notify</span><span class="p">(</span><span class="n">vm</span><span class="p">);</span>    

    <span class="kt">bool</span> <span class="n">error</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="n">vm</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="s">&quot;output&quot;</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
      <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;*** you must specify -o option</span><span class="se">\n\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="n">error</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="n">vm</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="s">&quot;input&quot;</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
      <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;*** you must specify at least 1 input parameter</span><span class="se">\n\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="n">error</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span> <span class="n">debug</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">debug</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="p">)</span> <span class="p">{</span>
      <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;*** debug level must be 0, 1 or 2</span><span class="se">\n\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="n">error</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">if</span> <span class="p">(</span> <span class="n">error</span> <span class="p">)</span> <span class="p">{</span>
      <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="n">visible</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="kt">bool</span> <span class="n">output</span> <span class="o">=</span> <span class="n">vm</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="s">&quot;output&quot;</span><span class="p">);</span>
    <span class="kt">bool</span> <span class="n">quote</span>  <span class="o">=</span> <span class="n">vm</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="s">&quot;quote&quot;</span><span class="p">);</span>

    <span class="k">if</span> <span class="p">(</span> <span class="n">output</span> <span class="p">)</span> <span class="p">{</span>
      <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;[オプション情報]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;o(output) : &quot;</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">output</span> <span class="o">?</span> <span class="s">&quot;ON&quot;</span> <span class="o">:</span> <span class="s">&quot;OFF&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;q(quote)  : &quot;</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">quote</span>  <span class="o">?</span> <span class="s">&quot;ON&quot;</span> <span class="o">:</span> <span class="s">&quot;OFF&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;d(debug)  : &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">debug</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n\n</span><span class="s">&quot;</span><span class="p">;</span>

      <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;[パラメタ情報]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;&amp;</span> <span class="n">input</span> <span class="o">=</span> <span class="n">vm</span><span class="p">[</span><span class="s">&quot;input&quot;</span><span class="p">].</span><span class="n">as</span><span class="o">&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span> <span class="o">&gt;</span><span class="p">();</span>
      <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;指定数 : &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">input</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
      <span class="k">for</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">input</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span> <span class="p">)</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; : &quot;</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">quote</span><span class="o">?</span><span class="s">&quot;</span><span class="se">\&quot;</span><span class="s">&quot;</span><span class="o">:</span><span class="s">&quot;&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">quote</span><span class="o">?</span><span class="s">&quot;</span><span class="se">\&quot;</span><span class="s">&quot;</span><span class="o">:</span><span class="s">&quot;&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">exception</span><span class="o">&amp;</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="n">e</span><span class="p">.</span><span class="n">what</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7599/addtag/" class="addtag" id="addtag_7599">タグ</a>:
	
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/Boost.Program_options/">Boost.Program_options</a>
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/boost/">boost</a>
    
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7599/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7599/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7599"
  >-</span><span
  class="button yellow"
  id="rating_z_7599"
  >0</span><span 
  class="button green"
  id="rating_p_7599"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7599/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7600">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7600/">#7600</a>(<script language="JavaScript">print_time(new Date("2008/09/09 05:55 GMT"));</script><noscript>2008/09/09 05:55 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  許容例の
-s は、-d の間違いだと思われる。
-d は、省略できないオプションのように思われる。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7600/addtag/" class="addtag" id="addtag_7600">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7600"
  >-</span><span
  class="button yellow"
  id="rating_z_7600"
  >0</span><span 
  class="button green"
  id="rating_p_7600"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7600/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7601">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7601/">#7601</a>(<script language="JavaScript">print_time(new Date("2008/09/09 06:02 GMT"));</script><noscript>2008/09/09 06:02 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>-d は、必須オプションとして処理しています。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="highlight"><pre><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Getopt::</span><span class="n">Std</span><span class="p">;</span>

<span class="c1">#ex&gt;cmdopt -o [-q] -d{0|1|2} 文字列 [文字列 ...]</span>

<span class="k">our</span><span class="p">(</span> <span class="nv">$opt_o</span><span class="p">,</span> <span class="nv">$opt_q</span><span class="p">,</span> <span class="nv">$opt_d</span> <span class="p">);</span>

<span class="n">getopts</span><span class="p">(</span><span class="s">&#39;oqd:&#39;</span><span class="p">);</span>

<span class="nb">die</span> <span class="s">&quot;oオプションが指定されていない\n&quot;</span> <span class="k">unless</span> <span class="nv">$opt_o</span><span class="p">;</span>
<span class="nb">die</span> <span class="s">&quot;dオプションが指定されていない\n&quot;</span> <span class="k">unless</span> <span class="nb">defined</span> <span class="nv">$opt_d</span><span class="p">;</span>
<span class="nb">die</span> <span class="s">&quot;dオプションの引数は0-2\n&quot;</span> <span class="k">unless</span> <span class="p">(</span><span class="nv">$opt_d</span> <span class="ow">eq</span> <span class="s">&#39;0&#39;</span> <span class="o">||</span> <span class="nv">$opt_d</span> <span class="ow">eq</span> <span class="s">&#39;1&#39;</span> <span class="o">||</span> <span class="nv">$opt_d</span> <span class="ow">eq</span> <span class="s">&#39;2&#39;</span><span class="p">);</span>
<span class="nb">die</span> <span class="s">&quot;パラメータが指定されていない\n&quot;</span> <span class="k">unless</span> <span class="nv">@ARGV</span><span class="p">;</span>

<span class="k">print</span> <span class="s">&quot;[オプション情報]\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="s">&quot;o(output): ON\n&quot;</span> <span class="k">if</span> <span class="nv">$opt_o</span><span class="p">;</span> 
<span class="k">print</span> <span class="s">&quot;q(quote): &quot;</span> <span class="o">.</span> <span class="p">(</span><span class="nv">$opt_q</span> <span class="p">?</span> <span class="s">&quot;ON&quot;</span> <span class="p">:</span> <span class="s">&quot;OFF&quot;</span><span class="p">)</span> <span class="o">.</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span> 
<span class="k">print</span> <span class="s">&quot;d(debug): $opt_d\n&quot;</span><span class="p">;</span>

<span class="k">print</span> <span class="s">&quot;\n[パラメータ情報]\n&quot;</span><span class="p">;</span>
<span class="nb">printf</span><span class="p">(</span><span class="s">&quot;指定数: %d\n&quot;</span><span class="p">,</span> <span class="nv">$#ARGV</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>

<span class="k">my</span> <span class="nv">$c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">for</span> <span class="k">my</span> <span class="nv">$arg</span> <span class="p">(</span><span class="nv">@ARGV</span><span class="p">){</span>
    <span class="nv">$c</span><span class="o">++</span><span class="p">;</span>
    <span class="k">print</span> <span class="s">&quot;$c: $arg\n&quot;</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7601/addtag/" class="addtag" id="addtag_7601">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7601/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7601/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7601"
  >-</span><span
  class="button yellow"
  id="rating_z_7601"
  >0</span><span 
  class="button green"
  id="rating_p_7601"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7601/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7602">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/134/" target="_top">こう。</a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7602/">#7602</a>(<script language="JavaScript">print_time(new Date("2008/09/09 07:15 GMT"));</script><noscript>2008/09/09 07:15 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>いつも使ってる解析ルーチンをベースにしてみました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>

<span class="k">struct</span> <span class="n">cmd_opt</span><span class="p">{</span>
    <span class="kt">int</span> <span class="n">opt_o</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">opt_q</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">opt_d</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">string_start</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">string_num</span><span class="p">;</span>
<span class="p">};</span>


<span class="kt">int</span> <span class="n">cmdline</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span><span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[],</span><span class="k">struct</span> <span class="n">cmd_opt</span><span class="o">*</span><span class="n">o</span><span class="p">){</span>
    <span class="kt">char</span><span class="o">*</span> <span class="n">p</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">opt_flag</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    
    <span class="c">//必ず-oと文字列が必要</span>
    <span class="k">if</span><span class="p">(</span><span class="n">argc</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    
    <span class="n">o</span><span class="o">-&gt;</span><span class="n">opt_o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="n">o</span><span class="o">-&gt;</span><span class="n">opt_q</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="n">o</span><span class="o">-&gt;</span><span class="n">opt_d</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span>
    <span class="n">o</span><span class="o">-&gt;</span><span class="n">string_start</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="n">o</span><span class="o">-&gt;</span><span class="n">string_num</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    
    <span class="n">p</span><span class="o">=</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    
    <span class="k">while</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">argc</span><span class="p">){</span>
        <span class="k">switch</span><span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">){</span>
        <span class="k">case</span> <span class="sc">&#39;-&#39;</span><span class="o">:</span>
        <span class="k">case</span> <span class="sc">&#39;+&#39;</span><span class="o">:</span>
        <span class="k">case</span> <span class="sc">&#39;/&#39;</span><span class="o">:</span>
            <span class="n">p</span><span class="o">++</span><span class="p">;</span>
            <span class="n">opt_flag</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">default</span><span class="o">:</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="c">//オプション解析終了</span>
        <span class="k">if</span><span class="p">(</span><span class="n">opt_flag</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">o</span><span class="o">-&gt;</span><span class="n">opt_o</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">o</span><span class="o">-&gt;</span><span class="n">opt_d</span><span class="o">==-</span><span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="n">o</span><span class="o">-&gt;</span><span class="n">string_start</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
            <span class="n">o</span><span class="o">-&gt;</span><span class="n">string_num</span><span class="o">=</span><span class="n">argc</span><span class="o">-</span><span class="n">i</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">o</span><span class="o">-&gt;</span><span class="n">string_num</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        
        <span class="k">switch</span><span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">){</span>
        <span class="k">case</span> <span class="sc">&#39;o&#39;</span><span class="o">:</span>
        <span class="k">case</span> <span class="sc">&#39;O&#39;</span><span class="o">:</span>
            <span class="n">o</span><span class="o">-&gt;</span><span class="n">opt_o</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>

        <span class="k">case</span> <span class="sc">&#39;q&#39;</span><span class="o">:</span>
        <span class="k">case</span> <span class="sc">&#39;Q&#39;</span><span class="o">:</span>
            <span class="n">o</span><span class="o">-&gt;</span><span class="n">opt_q</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>

        <span class="k">case</span> <span class="sc">&#39;d&#39;</span><span class="o">:</span>
        <span class="k">case</span> <span class="sc">&#39;D&#39;</span><span class="o">:</span>
            <span class="n">p</span><span class="o">++</span><span class="p">;;</span>
            <span class="k">if</span><span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
                <span class="n">p</span><span class="o">=</span><span class="n">argv</span><span class="p">[</span><span class="o">++</span><span class="n">i</span><span class="p">];</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">&gt;*</span><span class="n">p</span><span class="o">||*</span><span class="n">p</span><span class="o">&gt;</span><span class="sc">&#39;2&#39;</span><span class="p">)</span>
                <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="n">o</span><span class="o">-&gt;</span><span class="n">opt_d</span><span class="o">=*</span><span class="n">p</span><span class="o">-</span><span class="sc">&#39;0&#39;</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">default</span><span class="o">:</span>
            <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">p</span><span class="o">++</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
            <span class="n">p</span><span class="o">=</span><span class="n">argv</span><span class="p">[</span><span class="o">++</span><span class="n">i</span><span class="p">];</span>
            <span class="n">opt_flag</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">put_usage</span><span class="p">(){</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;usage:cmdopt -o [-q] -d{0|1|2} 文字列 [文字列 ...]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span><span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[]){</span>
    <span class="kt">int</span> <span class="n">ret</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    
    <span class="k">struct</span> <span class="n">cmd_opt</span> <span class="n">o</span><span class="p">;</span>
    
    <span class="n">ret</span><span class="o">=</span><span class="n">cmdline</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span><span class="n">argv</span><span class="p">,</span><span class="o">&amp;</span><span class="n">o</span><span class="p">);</span>
    
    <span class="k">if</span><span class="p">(</span><span class="n">ret</span><span class="o">==-</span><span class="mi">1</span><span class="p">){</span>
        <span class="n">put_usage</span><span class="p">();</span>
        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[Option Info]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;o(output):%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">o</span><span class="p">.</span><span class="n">opt_o</span><span class="o">?</span><span class="s">&quot;ON&quot;</span><span class="o">:</span><span class="s">&quot;OFF&quot;</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;q(output):%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">o</span><span class="p">.</span><span class="n">opt_q</span><span class="o">?</span><span class="s">&quot;ON&quot;</span><span class="o">:</span><span class="s">&quot;OFF&quot;</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;d(output):%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">o</span><span class="p">.</span><span class="n">opt_d</span><span class="p">);</span>
    
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[Parameter Info]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;String Num:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">o</span><span class="p">.</span><span class="n">string_num</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">o</span><span class="p">.</span><span class="n">string_num</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d:%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="n">o</span><span class="p">.</span><span class="n">string_start</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7602/addtag/" class="addtag" id="addtag_7602">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7602/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7602/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7602"
  >-</span><span
  class="button yellow"
  id="rating_z_7602"
  >0</span><span 
  class="button green"
  id="rating_p_7602"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7602/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7603">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7603/">#7603</a>(<script language="JavaScript">print_time(new Date("2008/09/09 08:06 GMT"));</script><noscript>2008/09/09 08:06 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/bat/">
	  Batchfile
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  バッチファイル。遅延環境変数展開で。<br/>お題の起動例にあるパターンはすべて解釈できていると思います。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63</pre></td><td class="code"><div class="highlight"><pre>@echo off
setlocal enabledelayedexpansion

set OPT_O=OFF
set OPT_Q=OFF
set ARGV=
set WAIT_OPT_S=0
shift

for %%1 in (%*) do (
  call :parse_arg %%1
)
goto parse_end

rem *** パラメータ解析 ***
:parse_arg
set PARA=%1
if &quot;%PARA:~0,1%&quot;==&quot;-&quot; (
  set WAIT_OPT_S=0
  call :parse_opt %PARA:~1%
) else (
  if &quot;%WAIT_OPT_S%&quot;==&quot;1&quot; set OPT_S=%PARA% &amp; set WAIT_OPT_S=0 &amp; goto :EOF
  set ARGV=%ARGV% %PARA%
)
goto :EOF

rem *** オプション解析 ***
:parse_opt
set OPT=%1
:parse_an_opt
if &quot;%OPT%&quot;==&quot;&quot; goto :EOF
set OPT2=%OPT:~0,1%
if &quot;%OPT2%&quot;==&quot;o&quot; (
  set OPT_O=ON
) else if &quot;%OPT2%&quot;==&quot;q&quot; (
  set OPT_Q=ON
) else if &quot;%OPT2%&quot;==&quot;s&quot; (
  set OPT_S=%OPT:~1,1%
  set OPT=%OPT:~1%
  if &quot;!OPT_S!&quot;==&quot;&quot; set WAIT_OPT_S=1
)
set OPT=%OPT:~1%
goto :parse_an_opt

rem *** 結果出力 ***
:parse_end
echo [オプション情報]
echo o : %OPT_O%
echo q : %OPT_Q%
echo s : %OPT_S%

set /A COUNT=0
for %%1 in (%ARGV%) do set /A COUNT += 1

set /A ARGC=1
echo [パラメータ情報]
echo 指定数：%COUNT%
for %%1 in (%ARGV%) do (
  echo !ARGC! : %%1
  set /A ARGC += 1
)

endlocal
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7603/addtag/" class="addtag" id="addtag_7603">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/bat/">
		Batchfile
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7603/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7603/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7603"
  >-</span><span
  class="button yellow"
  id="rating_z_7603"
  >0</span><span 
  class="button green"
  id="rating_p_7603"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090103063138/http://ja.doukaku.org/comment/7603/">
    1
    reply
  </a>

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7603/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment7606">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7606/">#7606</a>(<script language="JavaScript">print_time(new Date("2008/09/09 09:08 GMT"));</script><noscript>2008/09/09 09:08 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/bat/">
	  Batchfile
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  おっと、異常終了とか忘れてた。<br/>バッチファイルの異常終了ってこんなんでいいのかな。<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre>46a47,53
&gt;
&gt; set /A COUNT=0
&gt; for %%1 in (%ARGV%) do set /A COUNT += 1
&gt;
&gt; if not &quot;%OPT_O%&quot;==&quot;ON&quot; echo oオプションは必須です。 &amp; exit /b 1
&gt; if &quot;%COUNT%&quot;==&quot;0&quot;  echo パラメータは必須です。 &amp; exit /b 1
&gt;
52,54d58
&lt; set /A COUNT=0
&lt; for %%1 in (%ARGV%) do set /A COUNT += 1
&lt;
63a68
&gt; exit /b 0
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7606/addtag/" class="addtag" id="addtag_7606">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/bat/">
		Batchfile
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7606/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7606/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7606"
  >-</span><span
  class="button yellow"
  id="rating_z_7606"
  >0</span><span 
  class="button green"
  id="rating_p_7606"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090103063138/http://ja.doukaku.org/comment/7603/"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090103063138/http://ja.doukaku.org/comment/7606/root/"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7606/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment7605">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/852/" target="_top">emasaka</a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7605/">#7605</a>(<script language="JavaScript">print_time(new Date("2008/09/09 13:54 GMT"));</script><noscript>2008/09/09 13:54 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>pure bashで内蔵コマンドgetoptsを使いました。</p>
<p>起動例の-sはコマンドじゃなくて引数扱い、と解釈したために、その部分がBKっぽくなっています。</p>
<p>あと、-oは必須ということで、そこの出力は手抜きしています。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="c">#!/bin/bash</span>
<span class="nv">OPTERR</span><span class="o">=</span>0

<span class="nv">args</span><span class="o">=()</span>
<span class="nv">nargs</span><span class="o">=</span>0

<span class="nv">opt_o</span><span class="o">=</span>OFF
<span class="nv">opt_q</span><span class="o">=</span>OFF
<span class="nv">opt_d</span><span class="o">=</span><span class="s1">&#39;&#39;</span>

<span class="k">while</span> <span class="o">[</span> <span class="nv">$# </span>!<span class="o">=</span> <span class="m">0</span> <span class="o">]</span>;do
    <span class="nv">oprind_orig</span><span class="o">=</span><span class="nv">$OPTIND</span>
    <span class="k">while </span><span class="nb">getopts</span> <span class="s1">&#39;oqd:*&#39;</span> opt;do
        <span class="k">case</span> <span class="s2">&quot;$opt&quot;</span> in
        o<span class="o">)</span>  <span class="nv">opt_o</span><span class="o">=</span>ON
            ;;
        q<span class="o">)</span>  <span class="nv">opt_q</span><span class="o">=</span>ON
            ;;
        d<span class="o">)</span>  <span class="nv">opt_d</span><span class="o">=</span><span class="nv">$OPTARG</span>
            <span class="o">[[</span> <span class="nv">$opt_d</span> <span class="o">==</span> <span class="o">[</span>012<span class="o">]</span> <span class="o">]]</span> || <span class="nb">exit </span>1
            ;;
        \?<span class="o">)</span> <span class="o">[[</span> ! <span class="k">${</span><span class="p">!OPTIND</span><span class="k">}</span> <span class="o">==</span> -* <span class="o">]]</span> &amp;&amp; <span class="o">((</span>OPTIND--<span class="o">))</span>
            <span class="nb">break</span>
            ;;
        esac
    <span class="k">done</span>
<span class="k">    </span><span class="nb">shift</span> <span class="k">$(</span><span class="o">(</span>OPTIND - <span class="m">1</span><span class="k">)</span><span class="o">)</span>
    <span class="nv">OPTIND</span><span class="o">=</span>1
    <span class="o">[</span> <span class="nv">$# </span>!<span class="o">=</span> <span class="m">0</span> <span class="o">]</span> &amp;&amp; args<span class="o">[</span><span class="k">$(</span><span class="o">(</span>nargs++<span class="k">)</span><span class="o">)]=</span><span class="nv">$1</span>
    <span class="nb">shift</span>
<span class="k">done</span>

<span class="o">[</span> <span class="s2">&quot;$opt_o&quot;</span> <span class="o">=</span> OFF <span class="o">]</span> &amp;&amp; <span class="nb">exit </span>1
<span class="o">((</span>nargs<span class="o">))</span> || <span class="nb">exit </span>1

<span class="nb">echo</span> <span class="s2">&quot;[オプション情報]</span>
<span class="s2">o(output): ON</span>
<span class="s2">q(quote):  $opt_q</span>
<span class="s2">d(debug):  $opt_d</span>

<span class="s2">[パラメータ情報]</span>
<span class="s2">指定数: $nargs&quot;</span>

<span class="k">for</span> <span class="o">((</span><span class="nv">i</span> <span class="o">=</span> 0; i &lt; nargs; i++<span class="o">))</span>;do
    <span class="nb">echo</span> <span class="s2">&quot;$((i + 1)): ${args[$i]}&quot;</span>
<span class="k">done</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7605/addtag/" class="addtag" id="addtag_7605">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7605/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7605/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7605"
  >-</span><span
  class="button yellow"
  id="rating_z_7605"
  >0</span><span 
  class="button green"
  id="rating_p_7605"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090103063138/http://ja.doukaku.org/comment/7605/">
    1
    reply
  </a>

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7605/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment7618">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/852/" target="_top">emasaka</a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7618/">#7618</a>(<script language="JavaScript">print_time(new Date("2008/09/10 13:53 GMT"));</script><noscript>2008/09/10 13:53 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>#7614の訂正にしたがって簡略化してみます。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="c">#!/bin/bash</span>
<span class="k">while </span><span class="nb">getopts</span> <span class="s1">&#39;oqd:*&#39;</span> opt;do
    <span class="k">case</span> <span class="s2">&quot;$opt&quot;</span> in
    o<span class="o">)</span>  <span class="nv">opt_o</span><span class="o">=</span>ON ;;
    q<span class="o">)</span>  <span class="nv">opt_q</span><span class="o">=</span>ON ;;
    d<span class="o">)</span>  <span class="nv">opt_d</span><span class="o">=</span><span class="nv">$OPTARG</span>
        <span class="o">[[</span> <span class="nv">$opt_d</span> <span class="o">==</span> <span class="o">[</span>012<span class="o">]</span> <span class="o">]]</span> || <span class="nb">exit </span>1
        ;;
    esac
<span class="k">done</span>
<span class="nb">shift</span> <span class="k">$(</span><span class="o">(</span>OPTIND - <span class="m">1</span><span class="k">)</span><span class="o">)</span>

<span class="o">[</span> -z <span class="s2">&quot;$opt_o&quot;</span> <span class="o">]</span> &amp;&amp; <span class="nb">exit </span>1
<span class="o">[</span> <span class="nv">$# </span><span class="o">=</span> <span class="m">0</span> <span class="o">]</span> &amp;&amp; <span class="nb">exit </span>1

<span class="nb">echo</span> <span class="s2">&quot;[オプション情報]</span>
<span class="s2">o(output): ON</span>
<span class="s2">q(quote):  ${opt_q:-OFF}</span>
<span class="s2">d(debug):  ${opt_d:-}</span>

<span class="s2">[パラメータ情報]</span>
<span class="s2">指定数: $#&quot;</span>

<span class="nv">i</span><span class="o">=</span>0
<span class="k">for </span>e in <span class="s2">&quot;$@&quot;</span>;do
    <span class="nb">echo</span> <span class="s2">&quot;$((++i)): $e&quot;</span>
    <span class="nb">shift</span>
<span class="k">done</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7618/addtag/" class="addtag" id="addtag_7618">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7618/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7618/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7618"
  >-</span><span
  class="button yellow"
  id="rating_z_7618"
  >0</span><span 
  class="button green"
  id="rating_p_7618"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090103063138/http://ja.doukaku.org/comment/7605/"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090103063138/http://ja.doukaku.org/comment/7618/root/"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7618/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment7607">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7607/">#7607</a>(<script language="JavaScript">print_time(new Date("2008/09/09 10:09 GMT"));</script><noscript>2008/09/09 10:09 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Squeak Smalltalk で、http://ja.doukaku.org/comment/5013/ の方法で得た引数の配列を解析するものを書いてみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre>| cmdopt |

cmdopt := [:args |
    | output quote debug strings argsStream |
    output := false.
    quote := false.
    debug := 0.
    strings := OrderedCollection new.
    argsStream := args readStream.
    [argsStream atEnd] whileFalse: [
        | opt |
        opt := argsStream next.
        (opt first = $-) ifFalse: [strings add: opt] ifTrue: [
            | optStream nextOpt |
            optStream := opt allButFirst readStream.
            [(nextOpt := optStream next) notNil] whileTrue: [
                nextOpt caseOf: {
                    [$o] -&gt; [output := true].
                    [$q] -&gt; [quote := true].
                    [$d] -&gt; [debug := Integer readFrom: (optStream atEnd
                        ifFalse: [optStream] ifTrue: [argsStream next readStream])]
                } otherwise: [^self error: &#39;unknown option&#39;]]]].
    output ifFalse: [^self error: &#39;no output option&#39;].
    strings ifEmpty: [^self error: &#39;no string option&#39;].
    {#output-&gt;output. #quote-&gt;quote. #debug-&gt;debug. #strings-&gt;strings asArray}].

World findATranscript: nil.
#(
    (&#39;-o&#39; &#39;AAA&#39;)
    (&#39;-o&#39; &#39;AAA&#39; &#39;BBB&#39; &#39;CCC&#39;)
    (&#39;-oq&#39; &#39;AAA&#39;)
    (&#39;-o&#39; &#39;-q&#39; &#39;AAA&#39;)
    (&#39;-o&#39; &#39;-d1&#39; &#39;AAA&#39;)
    (&#39;-o&#39; &#39;-d&#39; &#39;1&#39; &#39;AAA&#39;)
    (&#39;-q&#39; &#39;-d2&#39; &#39;-o&#39; &#39;AAA&#39;)
) do: [:args |
    Transcript cr; show: (cmdopt value: args)]

&quot;=&gt;
    {#output-&gt;true . #quote-&gt;false . #debug-&gt;0 . #strings-&gt;#(&#39;AAA&#39;)}
    {#output-&gt;true . #quote-&gt;false . #debug-&gt;0 . #strings-&gt;#(&#39;AAA&#39; &#39;BBB&#39; &#39;CCC&#39;)}
    {#output-&gt;true . #quote-&gt;true . #debug-&gt;0 . #strings-&gt;#(&#39;AAA&#39;)}
    {#output-&gt;true . #quote-&gt;true . #debug-&gt;0 . #strings-&gt;#(&#39;AAA&#39;)}
    {#output-&gt;true . #quote-&gt;false . #debug-&gt;1 . #strings-&gt;#(&#39;AAA&#39;)}
    {#output-&gt;true . #quote-&gt;false . #debug-&gt;1 . #strings-&gt;#(&#39;AAA&#39;)}
    {#output-&gt;true . #quote-&gt;true . #debug-&gt;2 . #strings-&gt;#(&#39;AAA&#39;)}
&quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7607/addtag/" class="addtag" id="addtag_7607">タグ</a>:
	
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7607/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7607/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7607"
  >-</span><span
  class="button yellow"
  id="rating_z_7607"
  >0</span><span 
  class="button green"
  id="rating_p_7607"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7607/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7608">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7608/">#7608</a>(<script language="JavaScript">print_time(new Date("2008/09/10 00:07 GMT"));</script><noscript>2008/09/10 00:07 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>optparse</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="highlight"><pre><span class="c">#!/usr/bin/env python</span>
<span class="c"># -*- coding: cp932 -*-</span>

<span class="k">from</span> <span class="nn">optparse</span> <span class="k">import</span> <span class="n">OptionParser</span>
<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">usage</span> <span class="o">=</span> <span class="s">u&#39;usage: cmdopt -o [-q] -d{0|1|2} 文字列 [文字列 ...]&#39;</span>
    <span class="n">parser</span> <span class="o">=</span> <span class="n">OptionParser</span><span class="p">(</span><span class="n">usage</span><span class="p">)</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s">&#39;-o&#39;</span><span class="p">,</span> <span class="s">&#39;--output&#39;</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s">&#39;store_true&#39;</span><span class="p">)</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s">&#39;-q&#39;</span><span class="p">,</span> <span class="s">&#39;--quote&#39;</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s">&#39;store_true&#39;</span><span class="p">)</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="s">&#39;-d&#39;</span><span class="p">,</span> <span class="s">&#39;--debug&#39;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s">&#39;int&#39;</span><span class="p">,</span><span class="n">default</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="p">(</span><span class="n">option</span><span class="p">,</span> <span class="n">args</span><span class="p">)</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">option</span><span class="o">.</span><span class="n">output</span><span class="p">:</span> <span class="n">parser</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s">&#39;output option error&#39;</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">option</span><span class="o">.</span><span class="n">debug</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]:</span> <span class="n">parser</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s">&#39;debug option error&#39;</span><span class="p">)</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">):</span> <span class="n">parser</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s">&#39;parameter error&#39;</span><span class="p">)</span>

    <span class="k">print</span> <span class="s">u&#39;[オプション情報]&#39;</span>
    <span class="k">print</span> <span class="s">u&#39;o(output)： ON&#39;</span>
    <span class="k">print</span> <span class="s">u&#39;q(quote)： </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="s">&#39;ON&#39;</span> <span class="k">if</span> <span class="n">option</span><span class="o">.</span><span class="n">quote</span> <span class="k">else</span> <span class="s">&#39;OFF&#39;</span><span class="p">)</span>
    <span class="k">print</span> <span class="s">u&#39;d(debug)： </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">option</span><span class="o">.</span><span class="n">debug</span>
    <span class="k">print</span> <span class="s">u&#39;</span><span class="se">\n</span><span class="s">[パラメーター情報]&#39;</span>
    <span class="k">print</span> <span class="s">u&#39;指定数： </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">param</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">args</span><span class="p">):</span>
        <span class="k">print</span> <span class="s">u&#39;</span><span class="si">%d</span><span class="s">: </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">param</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7608/addtag/" class="addtag" id="addtag_7608">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7608/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7608/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7608"
  >-</span><span
  class="button yellow"
  id="rating_z_7608"
  >0</span><span 
  class="button green"
  id="rating_p_7608"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7608/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7609">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/840/" target="_top">leque</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7609/">#7609</a>(<script language="JavaScript">print_time(new Date("2008/09/10 01:22 GMT"));</script><noscript>2008/09/10 01:22 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>SRFI-37 や SLIB を使う方法もありますが、とりあえずは gauche.parseopt 版。 -oq のような指定や -d1, -d2 のような指定には対応していないようです。</p>
<p>ところで起動例にある -s オプションは -d ですよね？</p>
<p>;; エラー処理で悩んでしまった。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">parseopt</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">sequence</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">main</span> <span class="nv">args</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">let-args</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">args</span><span class="p">)</span>
      <span class="p">((</span><span class="nf">output</span> <span class="s">&quot;o|output&quot;</span> <span class="no">#f</span><span class="p">)</span>
       <span class="p">(</span><span class="nf">quiet</span>  <span class="s">&quot;q|quiet&quot;</span>  <span class="no">#f</span><span class="p">)</span>
       <span class="p">(</span><span class="nf">debug</span>  <span class="s">&quot;d|debug=i&quot;</span> <span class="mi">0</span><span class="p">)</span>
       <span class="o">.</span> <span class="nv">argv</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">cond</span>
     <span class="p">((</span><span class="nb">not </span><span class="nv">output</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">format</span> <span class="p">(</span><span class="nf">current-error-port</span><span class="p">)</span>
              <span class="s">&quot;output option is not supplied.~%&quot;</span><span class="p">))</span>
     <span class="p">((</span><span class="nb">not </span><span class="p">(</span><span class="nb">memv </span><span class="nv">debug</span> <span class="o">&#39;</span><span class="p">(</span><span class="mi">0</span> <span class="mi">1</span> <span class="mi">2</span><span class="p">)))</span>
      <span class="p">(</span><span class="nf">format</span> <span class="p">(</span><span class="nf">current-error-port</span><span class="p">)</span>
              <span class="s">&quot;debug option&#39;s value must be 0, 1, or 2: ~A~%&quot;</span> <span class="nv">debug</span><span class="p">))</span>
     <span class="p">((</span><span class="nb">null? </span><span class="nv">argv</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">format</span> <span class="p">(</span><span class="nf">current-error-port</span><span class="p">)</span>
              <span class="s">&quot;no arguments are supplied.~%&quot;</span><span class="p">))</span>
     <span class="p">(</span><span class="nf">else</span>
      <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;[options]~%o(output): ON~%q(quote): ~A~%d(debug): ~A~%~%&quot;</span>
              <span class="p">(</span><span class="k">if </span><span class="nv">quiet</span> <span class="ss">&#39;ON</span> <span class="ss">&#39;OFF</span><span class="p">)</span>
              <span class="nv">debug</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;[parameters]~%# of pamameters: ~A~%&quot;</span> <span class="p">(</span><span class="nb">length </span><span class="nv">argv</span><span class="p">))</span>
      <span class="p">(</span><span class="nf">for-each-with-index</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">i</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;~A: ~A~%&quot;</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">x</span><span class="p">))</span>
                           <span class="nv">argv</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">exit</span> <span class="mi">0</span><span class="p">)))</span>
    <span class="mi">1</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7609/addtag/" class="addtag" id="addtag_7609">タグ</a>:
	
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7609/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7609/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7609"
  >-</span><span
  class="button yellow"
  id="rating_z_7609"
  >0</span><span 
  class="button green"
  id="rating_p_7609"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7609/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7611">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/840/" target="_top">leque</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7611/">#7611</a>(<script language="JavaScript">print_time(new Date("2008/09/10 06:55 GMT"));</script><noscript>2008/09/10 06:55 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>args-fold 版。ロングオプション対応。起動例のすべてのパターンを受け付けます（-s を -d にした場合）。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20090103063138/http://srfi.schemers.org/srfi-37/">SRFI 37</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-37</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">sequence</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">main</span> <span class="nv">args</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">receive</span> <span class="p">(</span><span class="nf">debug</span> <span class="nv">output</span> <span class="nv">quiet</span> <span class="nv">rargv</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">args-fold</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">args</span><span class="p">)</span>
                 <span class="p">(</span><span class="nf">list</span>
                  <span class="p">(</span><span class="nf">option</span> <span class="o">&#39;</span><span class="p">(</span><span class="sc">#\d</span> <span class="s">&quot;debug&quot;</span><span class="p">)</span> <span class="no">#t</span> <span class="no">#f</span>
                          <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">option</span> <span class="nv">name</span> <span class="nv">arg</span> <span class="nv">debug</span> <span class="nv">output</span> <span class="nv">quiet</span> <span class="nv">argv</span><span class="p">)</span>
                            <span class="p">(</span><span class="nb">values </span><span class="p">(</span><span class="nb">string-&gt;number </span><span class="nv">arg</span><span class="p">)</span> <span class="nv">output</span> <span class="nv">quiet</span> <span class="nv">argv</span><span class="p">)))</span>
                  <span class="p">(</span><span class="nf">option</span> <span class="o">&#39;</span><span class="p">(</span><span class="sc">#\o</span> <span class="s">&quot;output&quot;</span><span class="p">)</span> <span class="no">#f</span> <span class="no">#f</span>
                          <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">option</span> <span class="nv">name</span> <span class="nv">arg</span> <span class="nv">debug</span> <span class="nv">output</span> <span class="nv">quiet</span> <span class="nv">argv</span><span class="p">)</span>
                            <span class="p">(</span><span class="nb">values </span><span class="nv">debug</span> <span class="no">#t</span> <span class="nv">quiet</span> <span class="nv">argv</span><span class="p">)))</span>
                  <span class="p">(</span><span class="nf">option</span> <span class="o">&#39;</span><span class="p">(</span><span class="sc">#\q</span> <span class="s">&quot;quiet&quot;</span><span class="p">)</span> <span class="no">#f</span> <span class="no">#f</span>
                          <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">option</span> <span class="nv">name</span> <span class="nv">arg</span> <span class="nv">debug</span> <span class="nv">output</span> <span class="nv">quiet</span> <span class="nv">argv</span><span class="p">)</span>
                            <span class="p">(</span><span class="nb">values </span><span class="nv">debug</span> <span class="nv">output</span> <span class="no">#t</span> <span class="nv">argv</span><span class="p">)))</span>
                  <span class="p">)</span>
                 <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">option</span> <span class="nv">name</span> <span class="nv">arg</span> <span class="o">.</span> <span class="nv">_</span><span class="p">)</span>
                   <span class="p">(</span><span class="nf">error</span> <span class="s">&quot;Unrecognized option: &quot;</span> <span class="nv">name</span><span class="p">))</span>
                 <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">op</span> <span class="nv">debug</span> <span class="nv">output</span> <span class="nv">quiet</span> <span class="nv">argv</span><span class="p">)</span>
                   <span class="p">(</span><span class="nb">values </span><span class="nv">debug</span> <span class="nv">output</span> <span class="nv">quiet</span> <span class="p">(</span><span class="nb">cons </span><span class="nv">op</span> <span class="nv">argv</span><span class="p">)))</span>
                 <span class="mi">0</span> <span class="no">#f</span> <span class="no">#f</span> <span class="o">&#39;</span><span class="p">())</span>
    <span class="p">(</span><span class="nf">cond</span>
     <span class="p">((</span><span class="nb">not </span><span class="nv">output</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">format</span> <span class="p">(</span><span class="nf">current-error-port</span><span class="p">)</span>
              <span class="s">&quot;output option is not supplied.~%&quot;</span><span class="p">))</span>
     <span class="p">((</span><span class="nb">not </span><span class="p">(</span><span class="nb">memv </span><span class="nv">debug</span> <span class="o">&#39;</span><span class="p">(</span><span class="mi">0</span> <span class="mi">1</span> <span class="mi">2</span><span class="p">)))</span>
      <span class="p">(</span><span class="nf">format</span> <span class="p">(</span><span class="nf">current-error-port</span><span class="p">)</span>
              <span class="s">&quot;debug option&#39;s value must be 0, 1, or 2: ~A~%&quot;</span> <span class="nv">debug</span><span class="p">))</span>
     <span class="p">((</span><span class="nb">null? </span><span class="nv">rargv</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">format</span> <span class="p">(</span><span class="nf">current-error-port</span><span class="p">)</span>
              <span class="s">&quot;no arguments are supplied.~%&quot;</span><span class="p">))</span>
     <span class="p">(</span><span class="nf">else</span>
      <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;[options]~%o(output): ON~%q(quiet): ~A~%d(debug): ~A~%~%&quot;</span>
              <span class="p">(</span><span class="k">if </span><span class="nv">quiet</span> <span class="ss">&#39;ON</span> <span class="ss">&#39;OFF</span><span class="p">)</span>
              <span class="nv">debug</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;[parameters]~%# of pamameters: ~A~%&quot;</span> <span class="p">(</span><span class="nb">length </span><span class="nv">rargv</span><span class="p">))</span>
      <span class="p">(</span><span class="nf">for-each-with-index</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">i</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;~A: ~A~%&quot;</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">x</span><span class="p">))</span>
                           <span class="p">(</span><span class="nb">reverse </span><span class="nv">rargv</span><span class="p">))</span>
      <span class="p">(</span><span class="nf">exit</span> <span class="mi">0</span><span class="p">)))</span>
    <span class="mi">1</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7611/addtag/" class="addtag" id="addtag_7611">タグ</a>:
	
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7611/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7611/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7611"
  >-</span><span
  class="button yellow"
  id="rating_z_7611"
  >0</span><span 
  class="button green"
  id="rating_p_7611"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7611/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7613">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/771/" target="_top">M.Suzuki</a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7613/">#7613</a>(<script language="JavaScript">print_time(new Date("2008/09/10 08:38 GMT"));</script><noscript>2008/09/10 08:38 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>少々無理矢理な感じです。。。Parsecが使えたらもっと楽なのでしょうね(^^;</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67</pre></td><td class="code"><div class="highlight"><pre><span class="kr">data</span> <span class="n">Args</span> <span class="o">=</span> <span class="n">Args</span> <span class="p">{</span>
    <span class="nv">outputFlag</span> <span class="o">::</span> <span class="n">Bool</span><span class="p">,</span>
    <span class="nv">quoteFlag</span> <span class="o">::</span> <span class="n">Bool</span><span class="p">,</span>
    <span class="nv">debugLevel</span> <span class="o">::</span> <span class="n">Int</span><span class="p">,</span>
    <span class="nv">names</span> <span class="o">::</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
<span class="p">}</span> <span class="kr">deriving</span> <span class="p">(</span><span class="n">Show</span><span class="p">)</span>

<span class="nv">newArgs</span> <span class="o">=</span>   <span class="n">Args</span> <span class="p">{</span>
        <span class="nv">outputFlag</span> <span class="o">=</span> <span class="n">False</span><span class="p">,</span>
        <span class="nv">quoteFlag</span> <span class="o">=</span> <span class="n">False</span><span class="p">,</span>
        <span class="nv">debugLevel</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
        <span class="nv">names</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="p">}</span>

<span class="nv">parse</span> <span class="p">[]</span> <span class="nv">result</span> <span class="o">=</span> <span class="nv">result</span>

<span class="nv">parse</span> <span class="p">(</span><span class="nv">arg</span><span class="o">:</span><span class="nv">args</span><span class="p">)</span> <span class="nv">result</span>
    <span class="o">|</span> <span class="nv">arg</span> <span class="o">==</span> <span class="s">&quot;-d&quot;</span>       <span class="o">=</span> <span class="nv">parse</span> <span class="p">(</span><span class="nv">tail</span> <span class="nv">args</span><span class="p">)</span> <span class="nv">result</span><span class="p">{</span> <span class="nv">debugLevel</span> <span class="o">=</span> <span class="nv">read</span> <span class="o">$</span> <span class="nv">head</span> <span class="nv">args</span> <span class="p">}</span>
    <span class="o">|</span> <span class="nv">opt</span> <span class="o">==</span> <span class="s">&quot;-d&quot;</span>       <span class="o">=</span> <span class="nv">parse</span> <span class="nv">args</span> <span class="nv">result</span><span class="p">{</span> <span class="nv">debugLevel</span> <span class="o">=</span> <span class="nv">read</span> <span class="nv">num</span> <span class="p">}</span>
    <span class="o">|</span> <span class="p">(</span><span class="nv">head</span> <span class="nv">arg</span><span class="p">)</span> <span class="o">==</span> <span class="sc">&#39;-&#39;</span> <span class="o">=</span> <span class="nv">parse</span> <span class="nv">args</span> <span class="o">$</span> <span class="nv">parse&#39;</span> <span class="p">(</span><span class="nv">tail</span> <span class="nv">arg</span><span class="p">)</span> <span class="nv">result</span>
    <span class="o">|</span> <span class="nv">otherwise</span>         <span class="o">=</span> <span class="nv">parse</span> <span class="nv">args</span> <span class="nv">result</span><span class="p">{</span> <span class="nv">names</span> <span class="o">=</span> <span class="p">(</span><span class="nv">names</span> <span class="nv">result</span><span class="p">)</span> <span class="o">++</span> <span class="p">[</span><span class="nv">arg</span><span class="p">]</span> <span class="p">}</span>
    <span class="kr">where</span>
        <span class="p">(</span><span class="nv">opt</span><span class="p">,</span><span class="nv">num</span><span class="p">)</span> <span class="o">=</span> <span class="nv">splitAt</span> <span class="mi">2</span> <span class="nv">arg</span>
        <span class="nv">parse&#39;</span> <span class="p">[]</span> <span class="nv">res</span> <span class="o">=</span> <span class="nv">res</span>
        <span class="nv">parse&#39;</span> <span class="p">(</span><span class="sc">&#39;o&#39;</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="nv">res</span> <span class="o">=</span> <span class="nv">parse&#39;</span> <span class="nv">xs</span> <span class="nv">res</span><span class="p">{</span> <span class="nv">outputFlag</span> <span class="o">=</span> <span class="n">True</span> <span class="p">}</span>
        <span class="nv">parse&#39;</span> <span class="p">(</span><span class="sc">&#39;q&#39;</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="nv">res</span> <span class="o">=</span> <span class="nv">parse&#39;</span> <span class="nv">xs</span> <span class="nv">res</span><span class="p">{</span> <span class="nv">quoteFlag</span> <span class="o">=</span> <span class="n">True</span> <span class="p">}</span>
        <span class="nv">parse&#39;</span> <span class="kr">_</span> <span class="kr">_</span> <span class="o">=</span>    <span class="nv">error</span> <span class="o">$</span> <span class="nv">arg</span> <span class="o">++</span> <span class="s">&quot; is unknown option.&quot;</span>

<span class="nv">optParse</span> <span class="o">::</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">Args</span>
<span class="nv">optParse</span> <span class="nv">args</span>
    <span class="o">|</span> <span class="p">(</span><span class="nv">outputFlag</span> <span class="nv">result</span><span class="p">)</span> <span class="o">==</span> <span class="n">False</span>  <span class="o">=</span>   <span class="nv">error</span> <span class="s">&quot;-o is need option.&quot;</span>
    <span class="o">|</span> <span class="p">(</span><span class="nv">names</span> <span class="nv">result</span><span class="p">)</span> <span class="o">==</span> <span class="p">[]</span>  <span class="o">=</span>   <span class="nv">error</span> <span class="s">&quot;need file name.&quot;</span>
    <span class="o">|</span> <span class="nv">otherwise</span>     <span class="o">=</span>   <span class="nv">result</span>
    <span class="kr">where</span>
        <span class="nv">result</span> <span class="o">=</span> <span class="nv">parse</span> <span class="nv">args</span> <span class="nv">newArgs</span>

<span class="nv">dump</span> <span class="nv">args</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">putStrLn</span> <span class="s">&quot;[Option information]&quot;</span>
    <span class="nv">putStrLn</span> <span class="o">$</span> <span class="s">&quot;o(output) : &quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">onoff</span> <span class="o">$</span> <span class="nv">outputFlag</span> <span class="nv">args</span><span class="p">)</span>
    <span class="nv">putStrLn</span> <span class="o">$</span> <span class="s">&quot;q(quote) : &quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">onoff</span> <span class="o">$</span> <span class="nv">quoteFlag</span> <span class="nv">args</span><span class="p">)</span>
    <span class="nv">putStrLn</span> <span class="o">$</span> <span class="s">&quot;d(debug) : &quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">show</span> <span class="o">$</span> <span class="nv">debugLevel</span> <span class="nv">args</span><span class="p">)</span>
    <span class="nv">putStrLn</span> <span class="s">&quot;&quot;</span>
    <span class="nv">putStrLn</span> <span class="s">&quot;[Paramater information]&quot;</span>
    <span class="nv">putStrLn</span> <span class="o">$</span> <span class="s">&quot;count : &quot;</span> <span class="o">++</span> <span class="p">(</span><span class="nv">show</span> <span class="o">$</span> <span class="nv">length</span> <span class="o">$</span> <span class="nv">names</span> <span class="nv">args</span><span class="p">)</span>
    <span class="nv">mapM</span> <span class="p">(</span><span class="o">\</span><span class="p">(</span><span class="nv">no</span><span class="p">,</span><span class="nv">name</span><span class="p">)</span><span class="o">-&gt;</span><span class="nv">putStrLn</span> <span class="o">$</span> <span class="p">(</span><span class="nv">show</span> <span class="nv">no</span><span class="p">)</span> <span class="o">++</span> <span class="s">&quot; : &quot;</span> <span class="o">++</span> <span class="nv">name</span><span class="p">)</span> <span class="o">$</span> <span class="nv">zip</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">..</span><span class="p">]</span> <span class="o">$</span> <span class="nv">names</span> <span class="nv">args</span>
    <span class="nv">putStrLn</span> <span class="s">&quot;&quot;</span>
    <span class="kr">where</span>
        <span class="nv">onoff</span> <span class="n">True</span> <span class="o">=</span> <span class="s">&quot;ON&quot;</span>
        <span class="nv">onoff</span> <span class="kr">_</span> <span class="o">=</span> <span class="s">&quot;OFF&quot;</span>

<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">args</span> <span class="o">&lt;-</span> <span class="nv">getArgs</span>
    <span class="nv">dump</span> <span class="o">$</span> <span class="nv">optParse</span> <span class="nv">args</span>
<span class="cm">{--</span>
<span class="cm">    mapM_ test testData</span>
<span class="cm">    mapM_ dumps testData</span>
<span class="cm">    where</span>
<span class="cm">        dumps arg = dump $ optParse arg</span>
<span class="cm">        test arg = putStrLn $ show $ optParse arg</span>
<span class="cm">        testData = map words [&quot;-o AAA&quot;,</span>
<span class="cm">                    &quot;-o AAA BBB CCC&quot;,</span>
<span class="cm">                    &quot;-oq AAA&quot;,</span>
<span class="cm">                    &quot;-o -q AAA&quot;,</span>
<span class="cm">                    &quot;-o -d1 AAA&quot;,</span>
<span class="cm">                    &quot;-o -d 1 AAA&quot;,</span>
<span class="cm">                    &quot;-q -d2 -o AAA&quot;]</span>
<span class="cm">--}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7613/addtag/" class="addtag" id="addtag_7613">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7613/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7613/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7613"
  >-</span><span
  class="button yellow"
  id="rating_z_7613"
  >0</span><span 
  class="button green"
  id="rating_p_7613"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090103063138/http://ja.doukaku.org/comment/7613/">
    1
    reply
  </a>

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7613/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment7625">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7625/">#7625</a>(<script language="JavaScript">print_time(new Date("2008/09/11 02:02 GMT"));</script><noscript>2008/09/11 02:02 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>System.Console.GetOpt を使う方法もあります。
ロングオプションにも対応しています。</p>
<p>でもあんまりすっきりとはいかない感じです。:&lt;</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Main</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Console</span><span class="o">.</span><span class="n">GetOpt</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Environment</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="nv">getArgs</span> <span class="o">&gt;&gt;=</span> <span class="nv">compilerOpts</span> <span class="o">&gt;&gt;=</span> <span class="nv">cmdopt</span>

<span class="kr">data</span> <span class="n">Options</span> <span class="o">=</span> <span class="n">Options</span> 
    <span class="p">{</span> <span class="nv">optOutput</span> <span class="o">::</span> <span class="n">Bool</span>
    <span class="p">,</span> <span class="nv">optQuote</span>  <span class="o">::</span> <span class="n">Bool</span>
    <span class="p">,</span> <span class="nv">optDebug</span>  <span class="o">::</span> <span class="n">Int</span>
    <span class="p">}</span>

<span class="nv">defaultOptions</span> <span class="o">=</span> <span class="n">Options</span>
    <span class="p">{</span> <span class="nv">optOutput</span> <span class="o">=</span> <span class="n">False</span>
    <span class="p">,</span> <span class="nv">optQuote</span>  <span class="o">=</span> <span class="n">False</span>
    <span class="p">,</span> <span class="nv">optDebug</span>  <span class="o">=</span> <span class="mi">0</span>
    <span class="p">}</span>

<span class="nv">options</span> <span class="o">::</span> <span class="p">[</span><span class="n">OptDescr</span> <span class="p">(</span><span class="n">Options</span> <span class="o">-&gt;</span> <span class="n">Options</span><span class="p">)]</span>
<span class="nv">options</span> <span class="o">=</span>
 <span class="p">[</span> <span class="n">Option</span> <span class="p">[</span><span class="sc">&#39;o&#39;</span><span class="p">]</span> <span class="p">[</span><span class="s">&quot;output&quot;</span><span class="p">]</span>
   <span class="p">(</span><span class="n">NoArg</span> <span class="p">(</span><span class="o">\</span> <span class="nv">opts</span> <span class="o">-&gt;</span> <span class="nv">opts</span> <span class="p">{</span> <span class="nv">optOutput</span> <span class="o">=</span> <span class="n">True</span> <span class="p">}))</span>
   <span class="s">&quot;Output option&quot;</span>
 <span class="p">,</span> <span class="n">Option</span> <span class="p">[</span><span class="sc">&#39;q&#39;</span><span class="p">]</span> <span class="p">[</span><span class="s">&quot;quote&quot;</span><span class="p">]</span>
   <span class="p">(</span><span class="n">NoArg</span> <span class="p">(</span><span class="o">\</span> <span class="nv">opts</span> <span class="o">-&gt;</span> <span class="nv">opts</span> <span class="p">{</span> <span class="nv">optQuote</span>  <span class="o">=</span> <span class="n">True</span> <span class="p">}))</span>
   <span class="s">&quot;Quote option&quot;</span>
 <span class="p">,</span> <span class="n">Option</span> <span class="p">[</span><span class="sc">&#39;d&#39;</span><span class="p">]</span> <span class="p">[</span><span class="s">&quot;debug&quot;</span><span class="p">]</span>
   <span class="p">(</span><span class="n">ReqArg</span> <span class="p">(</span><span class="o">\</span> <span class="nv">d</span> <span class="nv">opts</span> <span class="o">-&gt;</span> <span class="nv">opts</span> <span class="p">{</span> <span class="nv">optDebug</span> <span class="o">=</span> <span class="nv">read</span> <span class="nv">d</span> <span class="p">})</span> <span class="s">&quot;LEVEL&quot;</span><span class="p">)</span>
   <span class="s">&quot;debug LEVEL&quot;</span>
 <span class="p">]</span>

<span class="nv">compilerOpts</span> <span class="o">::</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">(</span><span class="n">Options</span><span class="p">,</span> <span class="p">[</span><span class="n">String</span><span class="p">])</span>
<span class="nv">compilerOpts</span> <span class="nv">argv</span>
 <span class="o">=</span> <span class="kr">case</span> <span class="nv">getOpt</span> <span class="n">Permute</span> <span class="nv">options</span> <span class="nv">argv</span> <span class="kr">of</span>
     <span class="p">(</span><span class="nv">o</span><span class="p">,</span><span class="nv">n</span><span class="p">,[])</span>  <span class="o">-&gt;</span> <span class="nv">return</span> <span class="p">(</span><span class="nv">foldl</span> <span class="p">(</span><span class="nv">flip</span> <span class="nv">id</span><span class="p">)</span> <span class="nv">defaultOptions</span> <span class="nv">o</span><span class="p">,</span> <span class="nv">n</span><span class="p">)</span>
     <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="kr">_</span><span class="p">,</span><span class="nv">ers</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">ioError</span> <span class="p">(</span><span class="nv">userError</span> <span class="p">(</span><span class="nv">concat</span> <span class="nv">ers</span> <span class="o">++</span> <span class="nv">usageInfo</span> <span class="nv">usageHeader</span> <span class="nv">options</span><span class="p">))</span>

<span class="nv">usageHeader</span> <span class="o">=</span> <span class="s">&quot;Usage: cmdopt -o [-q] [-d {0|1|2}] STR [STR ...]&quot;</span>

<span class="nv">cmdopt</span> <span class="o">::</span> <span class="p">(</span><span class="n">Options</span><span class="p">,[</span><span class="n">String</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">cmdopt</span> <span class="p">(</span><span class="nv">o</span><span class="p">,</span><span class="nv">xs</span><span class="o">@</span><span class="p">(</span><span class="kr">_</span><span class="o">:</span><span class="kr">_</span><span class="p">))</span>
 <span class="o">|</span> <span class="nv">optOutput</span> <span class="nv">o</span> <span class="o">=</span> <span class="nv">putStr</span> <span class="o">$</span> <span class="nv">unlines</span> 
               <span class="o">$</span> <span class="p">[</span><span class="s">&quot;[Option Info]&quot;</span>
                 <span class="p">,</span><span class="s">&quot;o(output): &quot;</span><span class="o">++</span><span class="s">&quot;ON&quot;</span>
                 <span class="p">,</span><span class="s">&quot;q(quote) : &quot;</span><span class="o">++</span><span class="kr">if</span> <span class="nv">optQuote</span> <span class="nv">o</span> <span class="kr">then</span> <span class="s">&quot;ON&quot;</span> <span class="kr">else</span> <span class="s">&quot;OFF&quot;</span>
                 <span class="p">,</span><span class="s">&quot;d(debug) : &quot;</span><span class="o">++</span><span class="nv">show</span> <span class="p">(</span><span class="nv">optDebug</span> <span class="nv">o</span><span class="p">)</span>
                 <span class="p">,</span><span class="s">&quot;[Parameter Info]&quot;</span>
                 <span class="p">,</span><span class="nv">show</span> <span class="nv">len</span> <span class="o">++</span> <span class="s">&quot; parameter&quot;</span><span class="o">++</span><span class="kr">if</span> <span class="nv">len</span> <span class="o">&gt;</span><span class="mi">1</span> <span class="kr">then</span> <span class="s">&quot;s &quot;</span> <span class="kr">else</span> <span class="s">&quot; &quot;</span> <span class="o">++</span><span class="s">&quot;specified&quot;</span>
                 <span class="p">]</span> 
               <span class="o">++</span> <span class="nv">map</span> <span class="nv">showParam</span> <span class="p">(</span><span class="nv">zip</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="p">]</span> <span class="nv">xs</span><span class="p">)</span>
    <span class="kr">where</span> <span class="nv">len</span> <span class="o">=</span> <span class="nv">length</span> <span class="nv">xs</span>
<span class="nv">cmdopt</span> <span class="kr">_</span>       <span class="o">=</span> <span class="nv">ioError</span> <span class="p">(</span><span class="nv">userError</span> <span class="p">(</span><span class="nv">usageInfo</span> <span class="nv">usageHeader</span> <span class="nv">options</span><span class="p">))</span>

<span class="nv">showParam</span> <span class="o">::</span> <span class="p">(</span><span class="n">Int</span><span class="p">,</span><span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">showParam</span> <span class="p">(</span><span class="nv">n</span><span class="p">,</span><span class="nv">s</span><span class="p">)</span> <span class="o">=</span> <span class="nv">show</span> <span class="nv">n</span> <span class="o">++</span><span class="s">&quot;: &quot;</span><span class="o">++</span><span class="nv">s</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7625/addtag/" class="addtag" id="addtag_7625">タグ</a>:
	
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/System.Console.GetOpt/">System.Console.GetOpt</a>
    
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7625/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7625/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7625"
  >-</span><span
  class="button yellow"
  id="rating_z_7625"
  >0</span><span 
  class="button green"
  id="rating_p_7625"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090103063138/http://ja.doukaku.org/comment/7613/"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090103063138/http://ja.doukaku.org/comment/7625/root/"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7625/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  

  
    





<div class="comment" id="comment7615">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7615/">#7615</a>(<script language="JavaScript">print_time(new Date("2008/09/10 08:23 GMT"));</script><noscript>2008/09/10 08:23 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>とりあえず getopt()を利用したものです。
コンパイラによってはgetopt()が unistd.hにはいっているかもしれません。

僕はいつも起動情報を保持する構造体を作って保持しています。
has～()という関数作ってしまえばあんまり関係ないですけど。。
// gcc -Wall -std=c99 doukaku205.c
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdbool.h&gt;</span>
<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="c">//#include &lt;unistd.h&gt;</span>
<span class="cp">#include &lt;getopt.h&gt;</span>

<span class="cp">#define OPTION_OUTPUT &#39;o&#39;</span>
<span class="cp">#define OPTION_QUOTE  &#39;q&#39;</span>
<span class="cp">#define OPTION_DEBUG  &#39;d&#39;</span>

<span class="k">static</span> <span class="kt">char</span> <span class="n">options</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="sc">&#39;:&#39;</span><span class="p">,</span> 
                     <span class="n">OPTION_OUTPUT</span>
                     <span class="p">,</span> <span class="n">OPTION_QUOTE</span>
                     <span class="p">,</span> <span class="n">OPTION_DEBUG</span><span class="p">,</span> <span class="sc">&#39;:&#39;</span>
                    <span class="p">,</span> <span class="sc">&#39;\0&#39;</span> <span class="p">};</span>

<span class="k">struct</span> <span class="n">tagParamInfo</span>
<span class="p">{</span>
    <span class="n">bool</span> <span class="n">output</span><span class="p">;</span>
    <span class="n">bool</span> <span class="n">quote</span><span class="p">;</span>
    <span class="kt">int</span>  <span class="n">debug</span><span class="p">;</span>
    <span class="kt">int</span>  <span class="n">num</span><span class="p">;</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">argv0</span><span class="p">;</span>
    <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">;</span>
<span class="p">}</span> <span class="n">info</span> <span class="o">=</span> <span class="p">{</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">opt</span><span class="p">;</span>

    <span class="c">/* デフォル値 設定 */</span>

    <span class="c">/* オプション解析 */</span>
    <span class="n">opterr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span> <span class="p">(</span><span class="n">opt</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">options</span><span class="p">))</span> <span class="o">!=</span> <span class="n">EOF</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="k">switch</span><span class="p">(</span> <span class="n">opt</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="k">case</span> <span class="nl">OPTION_OUTPUT:</span>
                <span class="n">info</span><span class="p">.</span><span class="n">output</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="nl">OPTION_QUOTE:</span>
                <span class="n">info</span><span class="p">.</span><span class="n">quote</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="nl">OPTION_DEBUG:</span>
                <span class="n">info</span><span class="p">.</span><span class="n">debug</span> <span class="o">=</span> <span class="n">strtol</span><span class="p">(</span><span class="n">optarg</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">info</span><span class="p">.</span><span class="n">debug</span> <span class="o">&amp;&amp;</span> <span class="n">info</span><span class="p">.</span><span class="n">debug</span> <span class="o">&lt;=</span> <span class="mi">2</span> <span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="k">case</span> <span class="sc">&#39;?&#39;</span><span class="o">:</span>
            <span class="k">case</span> <span class="sc">&#39;:&#39;</span><span class="o">:</span>
            <span class="k">default</span><span class="o">:</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">&quot;変なオプション[%c]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">opt</span><span class="p">);</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">&quot;書式：cmdopt -o [-q] [-d{0|1|2}] 文字列 [文字列 ...]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
                <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="c">/* パラメータ設定 */</span>
    <span class="n">info</span><span class="p">.</span><span class="n">argv0</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="n">info</span><span class="p">.</span><span class="n">argv</span>  <span class="o">=</span> <span class="o">&amp;</span><span class="n">argv</span><span class="p">[</span><span class="n">optind</span><span class="p">];</span>
    <span class="n">info</span><span class="p">.</span><span class="n">num</span> <span class="o">=</span> <span class="n">argc</span> <span class="o">-</span> <span class="n">optind</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">info</span><span class="p">.</span><span class="n">num</span> <span class="o">&lt;</span> <span class="mi">1</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;文字列がない</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;書式：cmdopt -o [-q] [-d{0|1|2}] 文字列 [文字列 ...]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c">/* 解析結果の出力 */</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[オプション情報]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%-10s：%3s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="s">&quot;o(output)&quot;</span><span class="p">,</span> <span class="p">((</span><span class="n">info</span><span class="p">.</span><span class="n">output</span><span class="o">==</span><span class="nb">true</span><span class="p">)</span><span class="o">?</span><span class="s">&quot;ON&quot;</span><span class="o">:</span><span class="s">&quot;OFF&quot;</span><span class="p">));</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%-10s：%3s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="s">&quot;q(quote)&quot;</span><span class="p">,</span> <span class="p">((</span><span class="n">info</span><span class="p">.</span><span class="n">quote</span><span class="o">==</span><span class="nb">true</span><span class="p">)</span><span class="o">?</span><span class="s">&quot;ON&quot;</span><span class="o">:</span><span class="s">&quot;OFF&quot;</span><span class="p">));</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%-10s：%3d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="s">&quot;d(debug)&quot;</span><span class="p">,</span> <span class="n">info</span><span class="p">.</span><span class="n">debug</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[パラメータ情報]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%-10s：%3d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="s">&quot;指定数&quot;</span><span class="p">,</span> <span class="n">info</span><span class="p">.</span><span class="n">num</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">n</span><span class="o">&lt;</span><span class="n">info</span><span class="p">.</span><span class="n">num</span><span class="p">;</span> <span class="n">n</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%2d：%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">info</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="n">n</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7615/addtag/" class="addtag" id="addtag_7615">タグ</a>:
	
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/C99/">C99</a>
    
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7615/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7615/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7615"
  >-</span><span
  class="button yellow"
  id="rating_z_7615"
  >0</span><span 
  class="button green"
  id="rating_p_7615"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090103063138/http://ja.doukaku.org/comment/7615/">
    1
    reply
  </a>

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7615/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment7617">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7617/">#7617</a>(<script language="JavaScript">print_time(new Date("2008/09/10 08:46 GMT"));</script><noscript>2008/09/10 08:46 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>sh版作っていて-oオプションのチェックが抜けていたことに気づくorz</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre><span class="gd">--- doukaku205.c        2008-09-10 22:23:39.953125000 +0900</span>
<span class="gi">+++ doukaku205.c.new    2008-09-10 22:43:58.656250000 +0900</span>
<span class="gu">@@ -61,6 +61,14 @@</span>
     info.argv0 = argv[0];
     info.argv  = &amp;argv[optind];
     info.num = argc - optind;
<span class="gi">+</span>
<span class="gi">+    /* 必須チェック */</span>
<span class="gi">+    if( info.output != true )</span>
<span class="gi">+    {</span>
<span class="gi">+        printf(&quot;必須オプションがたりない\n&quot;);</span>
<span class="gi">+        printf(&quot;書式：cmdopt -o [-q] [-d{0|1|2}] 文字列 [文字列 ...]\n&quot;);</span>
<span class="gi">+        return 1;</span>
<span class="gi">+    }</span>
     if( info.num &lt; 1 )
     {
         printf(&quot;文字列がない\n&quot;);
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7617/addtag/" class="addtag" id="addtag_7617">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7617/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7617/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7617"
  >-</span><span
  class="button yellow"
  id="rating_z_7617"
  >0</span><span 
  class="button green"
  id="rating_p_7617"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090103063138/http://ja.doukaku.org/comment/7615/"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090103063138/http://ja.doukaku.org/comment/7617/root/"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7617/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  


  

  
    





<div class="comment" id="comment7616">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7616/">#7616</a>(<script language="JavaScript">print_time(new Date("2008/09/10 08:42 GMT"));</script><noscript>2008/09/10 08:42 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>もう一つPOSIX-shのものを投稿
evalって便利ですよね。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54</pre></td><td class="code"><div class="highlight"><pre>#!/usr/bin/sh

OPT_o=&#39;OFF&#39;
OPT_q=&#39;OFF&#39;
OPT_d=&#39;0&#39;
OPTERR=0
while getopts &quot;:oqd:&quot; name
do
    case $name in
        [oq])
            eval &quot;OPT_$name=&#39;ON&#39;&quot;
            ;;
        d)
            OPT_d=$OPTARG
            echo &quot;$OPTARG&quot; | grep -e &#39;[012]&#39; &gt;/dev/null 2&gt;&amp;1
            if [ $? -ne 0 ] ; then
                echo &#39;変な値: &#39; &quot;[$OPT_d]&quot;
                echo &#39;書式：cmdopt -o [-q] [-d{0|1|2}] 文字列 [文字列 ...]&#39;
                exit 1
            fi
            ;;
        [:?])
            echo &#39;変なオプション: &#39; &quot;[$name]&quot;
            echo &#39;書式：cmdopt -o [-q] [-d{0|1|2}] 文字列 [文字列 ...]&#39;
            exit 1
            ;;
    esac
done
shift $(($OPTIND-1))
if [ $# -eq 0 ]; then
    echo &#39;文字列がない&#39;
    echo &#39;書式：cmdopt -o [-q] [-d{0|1|2}] 文字列 [文字列 ...]&#39;
    exit 1
fi
if [ $OPT_o = &quot;OFF&quot; ]; then
    echo &#39;-oがない&#39;
    echo &#39;書式：cmdopt -o [-q] [-d{0|1|2}] 文字列 [文字列 ...]&#39;
    exit 1
fi
echo &#39;[オプション情報]&#39;
echo &#39;o(output)：&#39; &quot;$OPT_o&quot;
echo &#39;q(quote)：&#39;  &quot;$OPT_q&quot;
echo &#39;d(debug)：&#39;  &quot;$OPT_d&quot;
echo &#39;&#39;
echo &#39;[パラメータ情報]&#39;
echo &#39;指定数：&#39; &quot;$(($#-1))&quot;
C=0
while [ $C -lt $# ];
do
    let C=C+1
    echo &quot;$C:$1&quot; 
    shift
done
#EOF
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7616/addtag/" class="addtag" id="addtag_7616">タグ</a>:
	
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/POSIX/">POSIX</a>
    
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7616/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7616/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7616"
  >-</span><span
  class="button yellow"
  id="rating_z_7616"
  >0</span><span 
  class="button green"
  id="rating_p_7616"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7616/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  

  
    





<div class="comment" id="comment7619">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/813/" target="_top">lunlumo</a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7619/">#7619</a>(<script language="JavaScript">print_time(new Date("2008/09/10 14:37 GMT"));</script><noscript>2008/09/10 14:37 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>　OptionParserを使って書いてみました。</p>
</div>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s2">&quot;optparse&quot;</span>

<span class="n">conf</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
<span class="n">opts</span> <span class="o">=</span> <span class="no">OptionParser</span><span class="o">.</span><span class="n">new</span>
<span class="n">opts</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s2">&quot;-o&quot;</span><span class="p">,</span><span class="s2">&quot;--output&quot;</span><span class="p">,</span><span class="s2">&quot;set output&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">conf</span><span class="o">[</span><span class="ss">:o</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span> <span class="p">}</span>
<span class="n">opts</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s2">&quot;-q&quot;</span><span class="p">,</span><span class="s2">&quot;--quote&quot;</span><span class="p">,</span><span class="s2">&quot;set quote&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">conf</span><span class="o">[</span><span class="ss">:q</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span> <span class="p">}</span>
<span class="n">opts</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s2">&quot;-d DEBUG&quot;</span><span class="p">,</span><span class="s2">&quot;--debug=DEBUG&quot;</span><span class="p">,</span><span class="o">[</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="s2">&quot;2&quot;</span><span class="o">]</span><span class="p">,</span><span class="s2">&quot;set debug level&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="n">conf</span><span class="o">[</span><span class="ss">:d</span><span class="o">]</span> <span class="o">=</span> <span class="n">v</span> <span class="p">}</span>

<span class="k">begin</span>
    <span class="n">opts</span><span class="o">.</span><span class="n">parse!</span>
    <span class="k">if</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="o">!</span><span class="n">conf</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="ss">:o</span><span class="p">)</span>
        <span class="k">raise</span> <span class="no">OptionParser</span><span class="o">::</span><span class="no">InvalidArgument</span><span class="o">.</span><span class="n">new</span>
    <span class="k">else</span>
        <span class="nb">puts</span> <span class="s2">&quot;[オプション情報]&quot;</span>
        <span class="nb">puts</span> <span class="s2">&quot;o(output):</span><span class="se">\t</span><span class="si">#{</span><span class="n">conf</span><span class="o">[</span><span class="ss">:o</span><span class="o">]</span> <span class="p">?</span> <span class="s2">&quot;ON&quot;</span> <span class="p">:</span> <span class="s2">&quot;OFF&quot;</span><span class="si">}</span><span class="s2">&quot;</span>
        <span class="nb">puts</span> <span class="s2">&quot;q(quote):</span><span class="se">\t</span><span class="si">#{</span><span class="p">(</span><span class="n">conf</span><span class="o">[</span><span class="ss">:q</span><span class="o">]</span> <span class="o">||</span> <span class="kp">false</span><span class="p">)</span> <span class="p">?</span> <span class="s2">&quot;ON&quot;</span> <span class="p">:</span> <span class="s2">&quot;OFF&quot;</span><span class="si">}</span><span class="s2">&quot;</span>
        <span class="nb">puts</span> <span class="s2">&quot;d(debug):</span><span class="se">\t</span><span class="si">#{</span><span class="n">conf</span><span class="o">[</span><span class="ss">:d</span><span class="o">]</span> <span class="o">||</span> <span class="mi">0</span><span class="si">}</span><span class="s2">&quot;</span>
        <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
        <span class="nb">puts</span> <span class="s2">&quot;[パラメータ情報]&quot;</span>
        <span class="nb">puts</span> <span class="s2">&quot;指定数:</span><span class="se">\t</span><span class="si">#{</span><span class="no">ARGV</span><span class="o">.</span><span class="n">size</span><span class="si">}</span><span class="s2">&quot;</span>
        <span class="no">ARGV</span><span class="o">.</span><span class="n">zip</span><span class="p">((</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="no">ARGV</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span><span class="n">i</span><span class="o">|</span>
            <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">:</span><span class="se">\t</span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2">&quot;</span>
        <span class="k">end</span>
    <span class="k">end</span>
<span class="k">rescue</span> <span class="no">OptionParser</span><span class="o">::</span><span class="no">InvalidArgument</span> <span class="o">=&gt;</span> <span class="n">ex</span>
    <span class="nb">puts</span> <span class="n">opts</span><span class="o">.</span><span class="n">help</span>
<span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">ex</span>
    <span class="nb">puts</span> <span class="n">ex</span><span class="o">.</span><span class="n">message</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7619/addtag/" class="addtag" id="addtag_7619">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7619/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7619/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7619"
  >-</span><span
  class="button yellow"
  id="rating_z_7619"
  >0</span><span 
  class="button green"
  id="rating_p_7619"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7619/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7620">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/813/" target="_top">lunlumo</a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7620/">#7620</a>(<script language="JavaScript">print_time(new Date("2008/09/10 14:46 GMT"));</script><noscript>2008/09/10 14:46 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>　ApacheCommonsCLIを使って書いてみました。</p>
</div>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090103063138/http://commons.apache.org/cli/">Apache commons CLI</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span>    <span class="nn">org.apache.commons.cli.CommandLine</span><span class="o">;</span>
<span class="k">import</span>    <span class="nn">org.apache.commons.cli.CommandLineParser</span><span class="o">;</span>
<span class="k">import</span>    <span class="nn">org.apache.commons.cli.HelpFormatter</span><span class="o">;</span>
<span class="k">import</span>    <span class="nn">org.apache.commons.cli.MissingArgumentException</span><span class="o">;</span>
<span class="k">import</span>    <span class="nn">org.apache.commons.cli.Options</span><span class="o">;</span>
<span class="k">import</span>    <span class="nn">org.apache.commons.cli.OptionBuilder</span><span class="o">;</span>
<span class="k">import</span>    <span class="nn">org.apache.commons.cli.ParseException</span><span class="o">;</span>
<span class="k">import</span>    <span class="nn">org.apache.commons.cli.PosixParser</span><span class="o">;</span>

<span class="k">class</span> <span class="nc">cmdopt</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">CommandLineParser</span>    <span class="n">parser</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PosixParser</span><span class="o">();</span>
        <span class="n">Options</span>    <span class="n">options</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Options</span><span class="o">();</span>
        <span class="n">options</span><span class="o">.</span><span class="na">addOption</span><span class="o">(</span><span class="n">OptionBuilder</span><span class="o">.</span><span class="na">withArgName</span><span class="o">(</span><span class="s">&quot;o&quot;</span><span class="o">).</span><span class="na">withLongOpt</span><span class="o">(</span><span class="s">&quot;output&quot;</span><span class="o">).</span><span class="na">isRequired</span><span class="o">(</span><span class="kc">true</span><span class="o">).</span><span class="na">withDescription</span><span class="o">(</span><span class="s">&quot;set output&quot;</span><span class="o">).</span><span class="na">create</span><span class="o">(</span><span class="s">&quot;o&quot;</span><span class="o">));</span>
        <span class="n">options</span><span class="o">.</span><span class="na">addOption</span><span class="o">(</span><span class="s">&quot;q&quot;</span><span class="o">,</span><span class="s">&quot;quote&quot;</span><span class="o">,</span><span class="kc">false</span><span class="o">,</span><span class="s">&quot;set quote&quot;</span><span class="o">);</span>
        <span class="n">options</span><span class="o">.</span><span class="na">addOption</span><span class="o">(</span><span class="s">&quot;d&quot;</span><span class="o">,</span><span class="s">&quot;debug&quot;</span><span class="o">,</span><span class="kc">true</span><span class="o">,</span><span class="s">&quot;set debug level&quot;</span><span class="o">);</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">CommandLine</span>    <span class="n">command</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">options</span><span class="o">,</span><span class="n">args</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span>    <span class="o">(</span><span class="n">command</span><span class="o">.</span><span class="na">hasOption</span><span class="o">(</span><span class="s">&quot;d&quot;</span><span class="o">)</span> <span class="o">&amp;&amp;</span>
                        <span class="o">(</span>    <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">command</span><span class="o">.</span><span class="na">getOptionValue</span><span class="o">(</span><span class="s">&quot;d&quot;</span><span class="o">))</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span>
                            <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">command</span><span class="o">.</span><span class="na">getOptionValue</span><span class="o">(</span><span class="s">&quot;d&quot;</span><span class="o">))</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="o">))</span> <span class="o">||</span>
                    <span class="n">command</span><span class="o">.</span><span class="na">getArgs</span><span class="o">().</span><span class="na">length</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="n">MissingArgumentException</span><span class="o">(</span><span class="s">&quot;invalid argument.&quot;</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;[オプション情報]&quot;</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;o(output):\t&quot;</span><span class="o">+(</span><span class="n">command</span><span class="o">.</span><span class="na">hasOption</span><span class="o">(</span><span class="s">&quot;o&quot;</span><span class="o">)</span> <span class="o">?</span> <span class="s">&quot;ON&quot;</span> <span class="o">:</span> <span class="s">&quot;OFF&quot;</span><span class="o">));</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;q(quote):\t&quot;</span><span class="o">+(</span><span class="n">command</span><span class="o">.</span><span class="na">hasOption</span><span class="o">(</span><span class="s">&quot;q&quot;</span><span class="o">)</span> <span class="o">?</span> <span class="s">&quot;ON&quot;</span> <span class="o">:</span> <span class="s">&quot;OFF&quot;</span><span class="o">));</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;d(debug):\t&quot;</span><span class="o">+(</span><span class="n">command</span><span class="o">.</span><span class="na">hasOption</span><span class="o">(</span><span class="s">&quot;d&quot;</span><span class="o">)</span> <span class="o">?</span> <span class="n">command</span><span class="o">.</span><span class="na">getOptionValue</span><span class="o">(</span><span class="s">&quot;d&quot;</span><span class="o">)</span> <span class="o">:</span> <span class="s">&quot;2&quot;</span><span class="o">));</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;[パラメータ情報]&quot;</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;指定数:\t%d\n&quot;</span><span class="o">,</span><span class="n">command</span><span class="o">.</span><span class="na">getArgs</span><span class="o">().</span><span class="na">length</span><span class="o">);</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">command</span><span class="o">.</span><span class="na">getArgs</span><span class="o">().</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%d:\t%s\n&quot;</span><span class="o">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span><span class="n">command</span><span class="o">.</span><span class="na">getArgs</span><span class="o">()[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="n">ParseException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">HelpFormatter</span>    <span class="n">formatter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HelpFormatter</span><span class="o">();</span>
            <span class="n">formatter</span><span class="o">.</span><span class="na">printHelp</span><span class="o">(</span><span class="s">&quot;cmdopt&quot;</span><span class="o">,</span><span class="n">options</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">ex</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7620/addtag/" class="addtag" id="addtag_7620">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7620/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7620/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7620"
  >-</span><span
  class="button yellow"
  id="rating_z_7620"
  >0</span><span 
  class="button green"
  id="rating_p_7620"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7620/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  

  
    





<div class="comment" id="comment7627">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/481/" target="_top">mtsuyugu</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7627/">#7627</a>(<script language="JavaScript">print_time(new Date("2008/09/11 10:58 GMT"));</script><noscript>2008/09/11 10:58 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>gflags を使ってみました。
-oq や -d1 のような連続して指定する形式には対応していません。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20090103063138/http://code.google.com/p/google-gflags/">google-gflags</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;google/gflags.h&gt;</span>

<span class="n">DEFINE_bool</span><span class="p">(</span> <span class="n">o</span><span class="p">,</span> <span class="kc">false</span><span class="p">,</span> <span class="s">&quot;(required)&quot;</span> <span class="p">);</span>
<span class="n">DEFINE_bool</span><span class="p">(</span> <span class="n">q</span><span class="p">,</span> <span class="kc">false</span><span class="p">,</span> <span class="s">&quot;quote(optional)&quot;</span> <span class="p">);</span>
<span class="n">DEFINE_int32</span><span class="p">(</span> <span class="n">d</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&quot;debug(required) {0|1|2}&quot;</span> <span class="p">);</span>

<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">main</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[]</span> <span class="p">){</span>

   <span class="n">google</span><span class="o">::</span><span class="n">SetUsageMessage</span><span class="p">(</span><span class="s">&quot;-o [-q] [-d{0|1|2}] str1 [str2 ...] &quot;</span><span class="p">);</span>
   <span class="n">google</span><span class="o">::</span><span class="n">ParseCommandLineFlags</span><span class="p">(</span><span class="o">&amp;</span><span class="n">argc</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">argv</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>

   <span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="n">FLAGS_o</span> <span class="o">||</span> <span class="n">FLAGS_d</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">FLAGS_d</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="o">||</span> <span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">2</span> <span class="p">){</span>
      <span class="n">google</span><span class="o">::</span><span class="n">ShowUsageWithFlags</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
      <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
   <span class="p">}</span>

   <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;[option]&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span>
        <span class="o">&lt;&lt;</span> <span class="s">&quot;o(output): &quot;</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">FLAGS_o</span> <span class="o">?</span> <span class="s">&quot;ON&quot;</span> <span class="o">:</span> <span class="s">&quot;OFF&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span>
        <span class="o">&lt;&lt;</span> <span class="s">&quot;q(quote): &quot;</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">FLAGS_q</span> <span class="o">?</span> <span class="s">&quot;ON&quot;</span> <span class="o">:</span> <span class="s">&quot;OFF&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span>
        <span class="o">&lt;&lt;</span> <span class="s">&quot;d(debug): &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">FLAGS_d</span>  <span class="o">&lt;&lt;</span> <span class="n">endl</span>
        <span class="o">&lt;&lt;</span> <span class="n">endl</span>
        <span class="o">&lt;&lt;</span> <span class="s">&quot;[parameter]&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span>
        <span class="o">&lt;&lt;</span> <span class="s">&quot;given &quot;</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">argc</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>  <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

   <span class="k">for</span><span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">argc</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">){</span>
      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;: &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
   <span class="p">}</span>

   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7627/addtag/" class="addtag" id="addtag_7627">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7627/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7627/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7627"
  >-</span><span
  class="button yellow"
  id="rating_z_7627"
  >0</span><span 
  class="button green"
  id="rating_p_7627"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7627/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7628">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/646/" target="_top">silverwire</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7628/">#7628</a>(<script language="JavaScript">print_time(new Date("2008/09/11 13:31 GMT"));</script><noscript>2008/09/11 13:31 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/bat/">
	  Batchfile
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>以下の書籍を参考にバッチで。

  多治見寿和 『プログラミングテクニック』 (アスキー, 2003年, p5)</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68</pre></td><td class="code"><div class="highlight"><pre>@echo off
  setlocal enabledelayedexpansion
    set #=0
    set c=0
    set d=
    set i=0
    set o=0
    set p=
    set q=0

    for %%v in (%*) do (
      set p_!#!=%%v
      set /a #+=1
    )
    if %#% equ 0 (call :usage &amp; exit /b 1)

    set c=%#%
    :_S
      if %c% equ 0 goto _E
      if not &quot;!p_%i%:~0,1!&quot; == &quot;-&quot; goto _E
      
      :__S
        set p=!p_%i%:-=!
        if &quot;%p:~0,1%&quot; == &quot;d&quot; (
          if !c! equ 1 (call :usage &amp; exit /b 1)
          if &quot;%p:~1,1%&quot; == &quot;&quot; (
            set /a c-=1,i+=1
            for /f &quot;tokens=2 delims==&quot; %%d in (&#39;set p_!i!&#39;) do set d=%%d
          ) else (
            set d=%p:~1,1%
          )
          goto __E
        )
        if &quot;%p%&quot; == &quot;o&quot;  (set o=1) &amp; goto __E
        if &quot;%p%&quot; == &quot;q&quot;  (set q=1) &amp; goto __E
        if &quot;%p%&quot; == &quot;oq&quot; (set o=1) &amp; (set q=1) &amp; goto __E
        set /a i+=1
      if not &quot;!p_%i%!&quot; == &quot;&quot; goto __S
      :__E
      
      set /a c-=1,i+=1
    goto _S
    :_E

    if %o% equ 0   (call :usage &amp; exit /b 1)
    if %i% equ %#% (call :usage &amp; exit /b 1)
    if not &quot;%d%&quot; == &quot;&quot; echo %d% | findstr /r &quot;[0-2]&quot; &gt; NUL || (call :usage &amp; exit /b 1)

    echo.
    echo オプション
    if %o% equ 1 (echo   -o  指定)
    if %q% equ 1 (echo   -q  指定) else (echo   -q  未指定)
    if not &quot;%d%&quot; == &quot;&quot; (
      echo   -d  指定^(値 = %d%^)
    ) else (
      echo   -d  未指定
    )
    echo.
    echo パラメータ
    for /f &quot;&quot; %%n in (&#39;set /a %#%-%i%&#39;) do echo   指定数 = %%n
    set /a #-=1
    for /l %%i in (%i%,1,%#%) do echo   !p_%%i!
  endlocal &amp; exit /b 0
goto :EOF

:usage
  echo Usage: %~n0 -o [-q] [-d {0^|1^|2}] 文字列 [文字列 ...]
goto :EOF
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7628/addtag/" class="addtag" id="addtag_7628">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/bat/">
		Batchfile
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7628/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7628/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7628"
  >-</span><span
  class="button yellow"
  id="rating_z_7628"
  >0</span><span 
  class="button green"
  id="rating_p_7628"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7628/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7651">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/136/" target="_top">matarillo</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7651/">#7651</a>(<script language="JavaScript">print_time(new Date("2008/09/17 03:59 GMT"));</script><noscript>2008/09/17 03:59 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">P</span>
<span class="k">{</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="kt">bool</span> <span class="n">o</span> <span class="p">=</span> <span class="k">false</span><span class="p">,</span> <span class="n">q</span> <span class="p">=</span><span class="k">false</span><span class="p">,</span> <span class="n">d</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
    <span class="kt">int</span><span class="p">?</span> <span class="n">dn</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
    <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">l</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
    <span class="k">try</span>
    <span class="k">{</span>
      <span class="k">foreach</span> <span class="p">(</span><span class="kt">string</span> <span class="n">s</span> <span class="k">in</span> <span class="n">args</span><span class="p">)</span>
      <span class="k">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">d</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">dn</span> <span class="p">==</span> <span class="k">null</span><span class="p">))</span>
        <span class="k">{</span>
          <span class="k">if</span> <span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">Length</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">Exception</span><span class="p">();</span>
          <span class="n">dn</span> <span class="p">=</span> <span class="n">s</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">-</span> <span class="sc">&#39;0&#39;</span><span class="p">;</span>
          <span class="k">continue</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">l</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">||</span> <span class="n">s</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">!=</span> <span class="sc">&#39;-&#39;</span><span class="p">)</span>
        <span class="k">{</span>
          <span class="n">l</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
          <span class="k">continue</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="k">{</span>
          <span class="k">switch</span> <span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
          <span class="k">{</span>
            <span class="k">case</span> <span class="sc">&#39;o&#39;</span><span class="p">:</span>
              <span class="n">o</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
              <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="sc">&#39;q&#39;</span><span class="p">:</span>
              <span class="n">q</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
              <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="sc">&#39;d&#39;</span><span class="p">:</span>
              <span class="n">d</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
              <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span>
                <span class="n">dn</span> <span class="p">=</span> <span class="n">s</span><span class="p">[++</span><span class="n">i</span><span class="p">]</span> <span class="p">-</span> <span class="sc">&#39;0&#39;</span><span class="p">;</span>
              <span class="k">break</span><span class="p">;</span>
            <span class="k">default</span><span class="p">:</span>
              <span class="k">throw</span> <span class="k">new</span> <span class="n">Exception</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
          <span class="k">}</span>
        <span class="k">}</span>
      <span class="k">}</span>
      <span class="k">if</span> <span class="p">(!</span><span class="n">o</span><span class="p">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">Exception</span><span class="p">();</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">d</span> <span class="p">&amp;&amp;</span> <span class="p">!(</span><span class="m">0</span> <span class="p">&lt;=</span> <span class="n">dn</span> <span class="p">&amp;&amp;</span> <span class="n">dn</span> <span class="p">&lt;=</span> <span class="m">2</span><span class="p">))</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">Exception</span><span class="p">();</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">l</span><span class="p">.</span><span class="n">Count</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">Exception</span><span class="p">();</span>
      <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;o(output): {0}&quot;</span><span class="p">,</span> <span class="n">o</span> <span class="p">?</span> <span class="s">&quot;ON&quot;</span> <span class="p">:</span> <span class="s">&quot;OFF&quot;</span><span class="p">);</span>
      <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;q(quote): {0}&quot;</span><span class="p">,</span> <span class="n">q</span> <span class="p">?</span> <span class="s">&quot;ON&quot;</span> <span class="p">:</span> <span class="s">&quot;OFF&quot;</span><span class="p">);</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">d</span><span class="p">)</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;d(debug): {0}&quot;</span><span class="p">,</span> <span class="n">dn</span><span class="p">);</span>
      <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">l</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}: {1}&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">l</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="k">}</span>
    <span class="k">catch</span>
    <span class="k">{</span>
      <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span>
        <span class="p">(</span><span class="s">&quot;usage: cmdopt -o [-q] [-d{0|1|2}] string [string ...]&quot;</span><span class="p">);</span>
      <span class="n">Environment</span><span class="p">.</span><span class="n">Exit</span><span class="p">(-</span><span class="m">1</span><span class="p">);</span>
    <span class="k">}</span>
  <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7651/addtag/" class="addtag" id="addtag_7651">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7651/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7651/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7651"
  >-</span><span
  class="button yellow"
  id="rating_z_7651"
  >0</span><span 
  class="button green"
  id="rating_p_7651"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7651/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7689">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/648/" target="_top">szktty</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7689/">#7689</a>(<script language="JavaScript">print_time(new Date("2008/09/20 09:44 GMT"));</script><noscript>2008/09/20 09:44 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>LLVMアセンブリ（32bit向け）で。-oqd2 のようなケースも受け付けてしまいますが、一応起動例は満たしています。分岐が多くてあまりスマートではなさそうです。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228</pre></td><td class="code"><div class="highlight"><pre>declare i32 @puts(i8 *)

@usage_msg          = internal constant [53 x i8] c&quot;Usage: cmdopt -o [-q] [-d{0|1|2}] string [string...]\00&quot;
@opt_error_msg      = internal constant [23 x i8] c&quot;cmdopt: unknown option\00&quot;
@opt_d_error_msg    = internal constant [26 x i8] c&quot;cmdopt: -d: invalid value\00&quot;
@opt_title_msg      = internal constant [10 x i8] c&quot;[options]\00&quot;
@opt_o_on_msg       = internal constant [14 x i8] c&quot;o(output): ON\00&quot;
@opt_o_off_msg      = internal constant [15 x i8] c&quot;o(output): OFF\00&quot;
@opt_q_on_msg       = internal constant [13 x i8] c&quot;q(quote): ON\00&quot;
@opt_q_off_msg      = internal constant [14 x i8] c&quot;q(quote): OFF\00&quot;
@opt_d_0_msg        = internal constant [12 x i8] c&quot;d(debug): 0\00&quot;
@opt_d_1_msg        = internal constant [12 x i8] c&quot;d(debug): 1\00&quot;
@opt_d_2_msg        = internal constant [12 x i8] c&quot;d(debug): 2\00&quot;
@param_title_msg    = internal constant [9 x i8] c&quot;[params]\00&quot;

define i32 @main(i32 %argc, i8** %argv) {
    %param   = alloca i1
    %nparams = alloca i32
    %opt_o   = alloca i1  ; -o
    %opt_q   = alloca i1  ; -q
    %opt_d   = alloca i32  ; -d
    store i1 false, i1* %param
    store i32 0, i32* %nparams
    store i1 false, i1* %opt_o
    store i1 false, i1* %opt_q
    store i32 0, i32* %opt_d

    ; 引数の数のチェック
    %has_args = icmp sgt i32 %argc, 1
    br i1 %has_args, label %parse_init, label %print_usage

parse_init:
    ; 残りの繰り返し回数
    %rest = alloca i32
    store i32 %argc, i32* %rest

    ; 引数の先頭アドレス
    %head = alloca i8**
    %head_addr = ptrtoint i8** %argv to i32
    %head_addr2 = add i32 %head_addr, 4
    %head2 = inttoptr i32 %head_addr2 to i8**
    store i8** %head2, i8*** %head

    %next_opt_d = alloca i1
    store i1 false, i1* %next_opt_d
    br label %parse_begin

parse_begin:
    ; 終了条件
    %rest_val = load i32* %rest
    %cont = icmp sgt i32 %rest_val, 1
    %rest_val_prev = sub i32 %rest_val, 1
    store i32 %rest_val_prev, i32* %rest
    br i1 %cont, label %parse, label %return

parse:
    %rest_args = load i8*** %head
    %arg = load i8** %rest_args

    ; 次の引数の準備
    %next_addr = ptrtoint i8** %rest_args to i32
    %next_addr2 = add i32 %next_addr, 4
    %next_head = inttoptr i32 %next_addr2 to i8**
    store i8** %next_head, i8*** %head

    %c = load i8* %arg
    %param_val = load i1* %param
    br i1 %param_val, label %print_param, label %_parse

_parse:
    %next_opt_d_val = load i1* %next_opt_d
    br i1 %next_opt_d_val, label %parse_opt_d_value, label %parse_continue

parse_continue:
    ; オプションの判断
    %is_opt = icmp eq i8 %c, 45 ; &#39;-&#39;

    ; オプション文字列の走査の準備
    %cpp = alloca i8* 
    %arg_addr = ptrtoint i8* %arg to i32
    %next_cp_addr = add i32 %arg_addr, 1
    %next_cp = inttoptr i32 %next_cp_addr to i8*
    store i8* %next_cp, i8** %cpp
    br i1 %is_opt, label %parse_opt, label %parse_param

parse_opt:
    %cp = load i8** %cpp
    %opt_char = load i8* %cp
    switch i8 %opt_char, label %opt_error [i8 0, label %parse_begin
                                           i8 111, label %parse_opt_o
                                           i8 113, label %parse_opt_q
                                           i8 100, label %parse_opt_d]

opt_error:
    %opt_error_addr = getelementptr [23 x i8]* @opt_error_msg, i32 0, i32 0
    call i32 @puts(i8* %opt_error_addr)
    ret i32 1

parse_opt_o:
    store i1 true, i1* %opt_o
    br label %next_parse_opt

parse_opt_q:
    store i1 true, i1* %opt_q
    br label %next_parse_opt

next_parse_opt:
    ; オプションの次の文字の準備
    %cp_addr = ptrtoint i8* %cp to i32
    %next_cp_addr2 = add i32 %cp_addr, 1
    %next_cp2 = inttoptr i32 %next_cp_addr2 to i8*
    store i8* %next_cp2, i8** %cpp
    br label %parse_opt

parse_opt_d:
    ; 次の文字を調べる
    %next_d_addr = ptrtoint i8* %cp to i32
    %next_d_addr_i32 = add i32 %next_d_addr, 1
    %next_d = inttoptr i32 %next_d_addr_i32 to i8*
    %next_dc = load i8* %next_d
    switch i8 %next_dc, label %opt_d_error [i8 0, label %parse_opt_d_next
                                            i8 48, label %parse_opt_d_0
                                            i8 49, label %parse_opt_d_1
                                            i8 50, label %parse_opt_d_2]

opt_d_error:
    %opt_d_error_addr = getelementptr [26 x i8]* @opt_d_error_msg, i32 0, i32 0
    call i32 @puts(i8* %opt_d_error_addr)
    ret i32 1

parse_opt_d_next:
    store i1 true, i1* %next_opt_d
    br label %parse_begin

parse_opt_d_0:
    store i32 0, i32* %opt_d
    br label %parse_begin

parse_opt_d_1:
    store i32 1, i32* %opt_d
    br label %parse_begin

parse_opt_d_2:
    store i32 2, i32* %opt_d
    br label %parse_begin

parse_opt_d_value:
    store i1 0, i1* %next_opt_d
    switch i8 %c, label %opt_d_error [i8 48, label %parse_opt_d_0
                                      i8 49, label %parse_opt_d_1
                                      i8 50, label %parse_opt_d_2]

parse_param:
    br i1 %param_val, label %print_param, label %print_info

print_param:
    %nparams_val = load i32* %nparams
    %nparams_next = add i32 %nparams_val, 1
    store i32 %nparams_next, i32* %nparams
    call i32 @puts(i8* %arg)
    br label %parse_begin

print_info:
    store i1 true, i1* %param
    %opt_title_addr = getelementptr [10 x i8]* @opt_title_msg, i32 0, i32 0
    call i32 @puts(i8* %opt_title_addr)
    %has_opt_o = load i1* %opt_o
    br i1 %has_opt_o, label %print_opt_o_on, label %print_opt_o_off

print_opt_o_on:
    %opt_o_on_addr = getelementptr [14 x i8]* @opt_o_on_msg, i32 0, i32 0
    call i32 @puts(i8* %opt_o_on_addr)
    br label %print_opt_q

print_opt_o_off:
    %opt_o_off_addr = getelementptr [15 x i8]* @opt_o_off_msg, i32 0, i32 0
    call i32 @puts(i8* %opt_o_off_addr)
    br label %print_opt_q

print_opt_q:
    %has_opt_q = load i1* %opt_q
    br i1 %has_opt_q, label %print_opt_q_on, label %print_opt_q_off

print_opt_q_on:
    %opt_q_on_addr = getelementptr [13 x i8]* @opt_q_on_msg, i32 0, i32 0
    call i32 @puts(i8* %opt_q_on_addr)
    br label %print_opt_d

print_opt_q_off:
    %opt_q_off_addr = getelementptr [14 x i8]* @opt_q_off_msg, i32 0, i32 0
    call i32 @puts(i8* %opt_q_off_addr)
    br label %print_opt_d

print_opt_d:
    %opt_d_val = load i32* %opt_d
    switch i32 %opt_d_val, label %print_param [i32 0, label %print_opt_d_0
                                               i32 1, label %print_opt_d_1
                                               i32 2, label %print_opt_d_2]

print_opt_d_0:
    %opt_d_0_addr = getelementptr [12 x i8]* @opt_d_0_msg, i32 0, i32 0
    call i32 @puts(i8* %opt_d_0_addr)
    br label %print_param

print_opt_d_1:
    %opt_d_1_addr = getelementptr [12 x i8]* @opt_d_1_msg, i32 0, i32 0
    call i32 @puts(i8* %opt_d_1_addr)
    br label %print_param

print_opt_d_2:
    %opt_d_2_addr = getelementptr [12 x i8]* @opt_d_2_msg, i32 0, i32 0
    call i32 @puts(i8* %opt_d_2_addr)
    br label %print_param

return:
    %ret_opt_o = load i1* %opt_o
    %ret_flag1 = xor i1 %ret_opt_o, 1
    %ret_nparams = load i32* %nparams
    %ret_param = icmp slt i32 %ret_nparams, 1
    %ret_flag2 = xor i1 %ret_flag1, %ret_param
    %retval = zext i1 %ret_flag2 to i32
    ret i32 %retval

print_usage:
    %usage_addr = getelementptr [53 x i8]* @usage_msg, i32 0, i32 0
    call i32 @puts(i8* %usage_addr)
    ret i32 0
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7689/addtag/" class="addtag" id="addtag_7689">タグ</a>:
	
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/Assembly/">Assembly</a>
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/LLVM/">LLVM</a>
    
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7689/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7689/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7689"
  >-</span><span
  class="button yellow"
  id="rating_z_7689"
  >0</span><span 
  class="button green"
  id="rating_p_7689"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7689/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7702">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/218/" target="_top">susu</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7702/">#7702</a>(<script language="JavaScript">print_time(new Date("2008/09/24 14:59 GMT"));</script><noscript>2008/09/24 14:59 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  OCamlはまだ文字コードがeuc-jpでないと日本語がコンパイルできません。<br/>それと、実行結果が文字化けしたらコンソールをeucで起動してください。<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49</pre></td><td class="code"><div class="highlight"><pre><span class="c">(* lv -Oej xx.ml &gt; xx-ej.ml  euc-jpでない場合の変換</span>
<span class="c">   xterm -en euc-jp &amp; </span>
<span class="c">   ocaml -I +extlib extLib.cma xx-ej.ml</span>
<span class="c">*)(*</span>
<span class="c">  スクリプト用途時</span>
<span class="c">  #!/usr/bin/env ocaml</span>
<span class="c">  #directory &quot;+extlib&quot;;;</span>
<span class="c">  #load &quot;extLib.cma&quot;;;</span>
<span class="c">*)</span>

<span class="kr">let</span> <span class="n">get</span> <span class="k">=</span> <span class="n">OptParse</span><span class="k">.</span><span class="n">Opt</span><span class="k">.</span><span class="n">get</span>
<span class="kr">let</span> <span class="n">opt</span> <span class="k">=</span> <span class="n">OptParse</span><span class="k">.</span><span class="n">Opt</span><span class="k">.</span><span class="n">opt</span>
<span class="kr">let</span> <span class="n">switch</span> <span class="n">t</span> <span class="k">=</span> <span class="kr">if</span> <span class="n">t</span> <span class="kr">then</span> <span class="s2">&quot;ON&quot;</span> <span class="kr">else</span> <span class="s2">&quot;OFF&quot;</span>
<span class="kr">let</span> <span class="n">debug</span> <span class="k">=</span> <span class="kr">function</span>
  <span class="k">|</span> <span class="n">Some</span> <span class="k">(</span><span class="mi">0</span> <span class="k">|</span> <span class="mi">1</span> <span class="k">|</span> <span class="mi">2</span> <span class="kr">as</span> <span class="n">n</span><span class="k">)</span> <span class="k">-&gt;</span> <span class="n">string_of_int</span> <span class="n">n</span>
  <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="s2">&quot;-&quot;</span><span class="k">;;</span>

<span class="kr">let</span> <span class="n">t</span> <span class="k">=</span> <span class="n">OptParse</span><span class="k">.</span><span class="n">OptParser</span><span class="k">.</span><span class="n">make</span> <span class="k">~</span><span class="n">usage</span><span class="k">:</span>
  <span class="s2">&quot;cmdopt -o [-q] [-d{0|1|2}] 文字列 [文字列 ...]&quot;</span> <span class="k">()</span>
<span class="kr">and</span> <span class="n">o</span> <span class="k">=</span> <span class="n">OptParse</span><span class="k">.</span><span class="n">StdOpt</span><span class="k">.</span><span class="n">store_true</span> <span class="k">()</span> 
<span class="kr">and</span> <span class="n">q</span> <span class="k">=</span> <span class="n">OptParse</span><span class="k">.</span><span class="n">StdOpt</span><span class="k">.</span><span class="n">store_true</span> <span class="k">()</span> 
<span class="kr">and</span> <span class="n">d</span> <span class="k">=</span> <span class="n">OptParse</span><span class="k">.</span><span class="n">StdOpt</span><span class="k">.</span><span class="n">int_option</span> <span class="k">();;</span>
<span class="n">OptParse</span><span class="k">.</span><span class="n">OptParser</span><span class="k">.</span><span class="n">add</span> <span class="k">~</span><span class="n">short_name</span><span class="k">:</span><span class="sc">&#39;o&#39;</span> <span class="n">t</span> <span class="n">o</span><span class="k">;</span>
<span class="n">OptParse</span><span class="k">.</span><span class="n">OptParser</span><span class="k">.</span><span class="n">add</span> <span class="k">~</span><span class="n">short_name</span><span class="k">:</span><span class="sc">&#39;q&#39;</span> <span class="n">t</span> <span class="n">q</span><span class="k">;</span>
<span class="n">OptParse</span><span class="k">.</span><span class="n">OptParser</span><span class="k">.</span><span class="n">add</span> <span class="k">~</span><span class="n">short_name</span><span class="k">:</span><span class="sc">&#39;d&#39;</span> <span class="n">t</span> <span class="n">d</span><span class="k">;;</span>

<span class="kr">let</span> <span class="n">opts_form</span> <span class="k">=</span> <span class="n">format_of_string</span> <span class="s2">&quot;\</span>
<span class="s2">  [オプション情報] </span><span class="se">\n</span><span class="s2">\</span>
<span class="s2">  o(output) : %s </span><span class="se">\n</span><span class="s2">\</span>
<span class="s2">  q(quote) : %s </span><span class="se">\n</span><span class="s2">\</span>
<span class="s2">  d(debug) : %2s </span><span class="se">\n\n</span><span class="s2">&quot;</span>

<span class="kr">let</span> <span class="n">opts_info</span> <span class="k">()</span> <span class="k">=</span>
  <span class="kr">if</span> <span class="n">not</span> <span class="k">(</span><span class="n">get</span> <span class="n">o</span><span class="k">)</span> <span class="kr">then</span> 
    <span class="k">(</span><span class="n">print_string</span> <span class="s2">&quot;-o オプションがありません。</span><span class="se">\n</span><span class="s2">&quot;</span><span class="k">;</span> <span class="n">exit</span> <span class="mi">0</span><span class="k">)</span> 
  <span class="kr">else</span>
    <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="n">opts_form</span>
     <span class="k">(</span><span class="n">switch</span> <span class="k">(</span><span class="n">get</span> <span class="n">o</span><span class="k">))</span> <span class="k">(</span><span class="n">switch</span> <span class="k">(</span><span class="n">get</span> <span class="n">q</span><span class="k">))</span> <span class="k">(</span><span class="n">debug</span> <span class="k">(</span><span class="n">opt</span> <span class="n">d</span><span class="k">))</span>

<span class="kr">let</span> <span class="n">params_info</span> <span class="n">l</span> <span class="k">=</span> 
  <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> 
    <span class="s2">&quot;[パラメータ情報]</span><span class="se">\n</span><span class="s2">指定数 : %d </span><span class="se">\n</span><span class="s2">&quot;</span> <span class="k">(</span><span class="n">List</span><span class="k">.</span><span class="n">length</span> <span class="n">l</span><span class="k">);</span>
  <span class="n">ExtList</span><span class="k">.</span><span class="n">List</span><span class="k">.</span><span class="n">iteri</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">i</span> <span class="n">s</span> <span class="k">-&gt;</span>
    <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;%d : %s </span><span class="se">\n</span><span class="s2">&quot;</span> <span class="k">(</span><span class="n">i</span><span class="k">+</span><span class="mi">1</span><span class="k">)</span> <span class="n">s</span><span class="k">)</span> <span class="n">l</span><span class="k">;;</span>

<span class="kr">let</span> <span class="k">_</span> <span class="k">=</span> 
  <span class="kr">if</span> <span class="o">!</span><span class="n">Sys</span><span class="k">.</span><span class="n">interactive</span> <span class="kr">then</span> <span class="k">()</span> <span class="kr">else</span>
  <span class="kr">let</span> <span class="n">rest</span> <span class="k">=</span> <span class="n">OptParse</span><span class="k">.</span><span class="n">OptParser</span><span class="k">.</span><span class="n">parse_argv</span> <span class="n">t</span> <span class="kr">in</span>
  <span class="k">(</span><span class="n">opts_info</span> <span class="k">();</span> <span class="n">params_info</span> <span class="n">rest</span><span class="k">);;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7702/addtag/" class="addtag" id="addtag_7702">タグ</a>:
	
    
    <a href="/web/20090103063138/http://ja.doukaku.org/tag/ExtLib/">ExtLib</a>
    
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7702/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7702/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7702"
  >-</span><span
  class="button yellow"
  id="rating_z_7702"
  >0</span><span 
  class="button green"
  id="rating_p_7702"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7702/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7709">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/218/" target="_top">susu</a><a href="/web/20090103063138/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7709/">#7709</a>(<script language="JavaScript">print_time(new Date("2008/09/27 07:17 GMT"));</script><noscript>2008/09/27 07:17 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>資料としてArg版も。3,5,7には非対応です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre><span class="kr">let</span> <span class="n">switch</span> <span class="n">t</span> <span class="k">=</span> <span class="kr">if</span> <span class="n">t</span> <span class="kr">then</span> <span class="s2">&quot;ON&quot;</span> <span class="kr">else</span> <span class="s2">&quot;OFF&quot;</span>

<span class="kr">let</span> <span class="n">cmdopt</span> <span class="n">arr</span> <span class="k">=</span> 
  <span class="kr">let</span> <span class="n">o</span> <span class="k">=</span> <span class="n">ref</span> <span class="kr">false</span> 
  <span class="kr">and</span> <span class="n">q</span> <span class="k">=</span> <span class="n">ref</span> <span class="kr">false</span>
  <span class="kr">and</span> <span class="n">d</span> <span class="k">=</span> <span class="n">ref</span> <span class="s2">&quot;-&quot;</span>
  <span class="kr">and</span> <span class="n">args</span> <span class="k">=</span> <span class="n">Queue</span><span class="k">.</span><span class="n">create</span> <span class="k">()</span> <span class="kr">in</span>

  <span class="n">Arg</span><span class="k">.</span><span class="n">parse_argv</span> <span class="k">~</span><span class="n">current</span><span class="k">:(</span><span class="n">ref</span> <span class="mi">0</span><span class="k">)</span> <span class="n">arr</span>
    <span class="k">[</span> <span class="s2">&quot;-o&quot;</span><span class="k">,</span> <span class="n">Arg</span><span class="k">.</span><span class="n">Set</span> <span class="n">o</span><span class="k">,</span> <span class="s2">&quot;&quot;</span><span class="k">;</span>
      <span class="s2">&quot;-q&quot;</span><span class="k">,</span> <span class="n">Arg</span><span class="k">.</span><span class="n">Set</span> <span class="n">q</span><span class="k">,</span> <span class="s2">&quot;&quot;</span><span class="k">;</span>
      <span class="s2">&quot;-d&quot;</span><span class="k">,</span> <span class="n">Arg</span><span class="k">.</span><span class="n">Symbol</span> <span class="k">([</span><span class="s2">&quot;0&quot;</span><span class="k">;</span><span class="s2">&quot;1&quot;</span><span class="k">;</span><span class="s2">&quot;2&quot;</span><span class="k">;],</span> <span class="kr">fun</span> <span class="n">s</span> <span class="k">-&gt;</span> <span class="n">d</span><span class="k">:=</span><span class="n">s</span><span class="k">),</span><span class="s2">&quot;&quot;</span><span class="k">;]</span> 
    <span class="k">(</span><span class="kr">fun</span> <span class="n">anon</span> <span class="k">-&gt;</span> <span class="n">Queue</span><span class="k">.</span><span class="n">push</span> <span class="n">anon</span> <span class="n">args</span><span class="k">)</span> <span class="s2">&quot;&quot;</span><span class="k">;</span>

  <span class="kr">if</span> <span class="n">not</span> <span class="o">!</span><span class="n">o</span> <span class="kr">then</span> <span class="n">raise</span> <span class="n">Exit</span> <span class="k">;</span>

  <span class="kr">let</span> <span class="n">len</span> <span class="k">=</span> <span class="n">Queue</span><span class="k">.</span><span class="n">length</span> <span class="n">args</span> <span class="kr">in</span>

  <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;\</span>
<span class="s2">    [オプション情報]</span><span class="se">\n</span><span class="s2">\</span>
<span class="s2">    o(output)： %s</span><span class="se">\n</span><span class="s2">\</span>
<span class="s2">    q(quote)： %s</span><span class="se">\n</span><span class="s2">\</span>
<span class="s2">    d(debug)： %s</span><span class="se">\n</span><span class="s2">\</span>
<span class="s2">    </span><span class="se">\n</span><span class="s2">[パラメータ情報]</span><span class="se">\n</span><span class="s2">指定数：%d </span><span class="se">\n</span><span class="s2">&quot;</span>
    <span class="k">(</span><span class="n">switch</span> <span class="o">!</span><span class="n">o</span><span class="k">)</span> <span class="k">(</span><span class="n">switch</span> <span class="o">!</span><span class="n">q</span><span class="k">)</span> <span class="o">!</span><span class="n">d</span> <span class="n">len</span><span class="k">;</span>

  <span class="kr">for</span> <span class="n">i</span> <span class="k">=</span> <span class="mi">1</span> <span class="kr">to</span> <span class="n">len</span> <span class="kr">do</span> 
    <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;%2d : %s </span><span class="se">\n</span><span class="s2">&quot;</span> <span class="n">i</span> <span class="k">(</span><span class="n">Queue</span><span class="k">.</span><span class="n">pop</span> <span class="n">args</span><span class="k">);</span>
  <span class="kr">done</span><span class="k">;;</span>

<span class="c">(* cmdopt [| &quot;prog_name&quot;; &quot;-q&quot;; &quot;-o&quot;; &quot;aa&quot;; &quot;bb&quot;|];; *)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7709/addtag/" class="addtag" id="addtag_7709">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7709/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7709/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7709"
  >-</span><span
  class="button yellow"
  id="rating_z_7709"
  >0</span><span 
  class="button green"
  id="rating_p_7709"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7709/">
  返信
  </a>]
  </div>
</div>
</div>




  


  

  
    





<div class="comment" id="comment7720">
  <p class="banner"><a href="/web/20090103063138/http://ja.doukaku.org/user/918/" target="_top">ksky</a>

	
	&nbsp;
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7720/">#7720</a>(<script language="JavaScript">print_time(new Date("2008/09/29 14:35 GMT"));</script><noscript>2008/09/29 14:35 GMT</noscript>)
	
	
	
	[<a href="/web/20090103063138/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>CliBuilderを使って書いてみました。longOptは期待通りに動きませんが...</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td class="code"><div class="highlight"><pre>cli = new CliBuilder(usage:&#39;cmdopt -o [-q] [-d{0|1|2}] 文字列 [文字列 ...]&#39;)
cli.o(longOpt:&#39;output&#39;, required:true, &#39;set output&#39;) 
cli.q(longOpt:&#39;quote&#39;, &#39;set quote&#39;) 
cli.d(longOpt:&#39;debug&#39;, args:1, argName:&#39;level&#39;, &#39;set debug level&#39;) 

opt = cli.parse(args)
if (!opt) System.exit 1
params = opt.arguments()
if (params.size() &lt; 1) die &#39;parameter must be specified&#39;
level = opt.d ? opt.d.toInteger() : 0
if (!(level in 0..2)) die &#39;debug level must be in 0-2&#39;

println &#39;[オプション情報]&#39;
println &quot;o(output): ${opt.o ? &#39;ON&#39; : &#39;OFF&#39;}&quot;
println &quot;q(quote): ${opt.q ? &#39;ON&#39; : &#39;OFF&#39;}&quot;
println &quot;d(debug): $level&quot;
println &#39;\n[パラメータ情報]&#39;
println &quot;指定数: ${params.size()}&quot;
i = 1
params.each { println &quot;${i++}: $it&quot; }

def die(msg) {
  cli.writer.println &quot;error: $msg&quot;
  cli.usage()
  System.exit 1
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090103063138/http://ja.doukaku.org/comment/7720/addtag/" class="addtag" id="addtag_7720">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090103063138/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7720/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090103063138/http://ja.doukaku.org/comment/7720/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7720"
  >-</span><span
  class="button yellow"
  id="rating_z_7720"
  >0</span><span 
  class="button green"
  id="rating_p_7720"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090103063138/http://ja.doukaku.org/205/reply_to/7720/">
  返信
  </a>]
  </div>
</div>
</div>




  


  







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20090103063138if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20090103063138/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20090103063138/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20090103063138/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20090103063138/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20090103063138/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20090103063138/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20090103063138/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20090103063138/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090103063138/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090103063138/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20090103063138im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20090103063138/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20090103063138/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20090103063138/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20090103063138/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20090103063138/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20090103063138/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20090103063138/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20090103063138/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20090103063138im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20090103063138/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20090103063138/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20090103063138/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20090103063138js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 6:31:38 Jan 3, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:33:52 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
