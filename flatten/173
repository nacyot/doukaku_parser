
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
マルバツゲーム
DouKaku? </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20080908103508cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20080908103508cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20080908103508cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20080908103508/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20080908103508/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20080908103508js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20080908103508js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20080908103508js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20080908103508js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app17.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/173\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "8";
var displayMonth = "Sep";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/173/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20080908103508" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080427130630/http://ja.doukaku.org/173/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="27 Apr 2008"><strong>APR</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 10:35:08 Sep 8, 2008">SEP</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Oct
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080427130630/http://ja.doukaku.org/173/flatten/" title="13:06:30 Apr 27, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 10:35:08 Sep 8, 2008">8</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2007
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 10:35:08 Sep 8, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20080908103508*/http://ja.doukaku.org/173/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">27 Apr 08 - 8 Sep 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:8:000100001000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20080908103508/http://ja.doukaku.org/">DouKaku?</a><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png' alt=challenge>
<a href="/web/20080908103508/http://ja.doukaku.org/173/">マルバツゲーム</a>
</h2>

    





<div class="comment" id="comment6190">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6190/">#6190</a>(<script language="JavaScript">print_time(new Date("2008/04/20 23:40 GMT"));</script><noscript>2008/04/20 23:40 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #bfffbf;">4/4=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>マルバツゲームは３×３の格子に交互に○と×を書き込み、先に縦・横・斜めに記号をそろえたほうが勝ちというおなじみのゲームです。</p>
<p>「毎ターン乱数を使って手を決めるランダムプレイヤー同士を対戦させる」というのが今回のお題です。
１万回対戦させ、勝ち・負け・引き分けの数を表示してください。
そして先手が有利であることを確かめてください。</p>
<p>良い手を思考するプレイヤーについては別のお題にしようと思っています。
プレイヤーを簡単に差し換えることができる設計を目指してください。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6190/addtag/" class="addtag" id="addtag_6190">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #bfffbf;"
  >4/4=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6190"
  >-</span><span
  class="button yellow"
  id="rating_z_6190"
  >0</span><span 
  class="button green"
  id="rating_p_6190"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6190/">
  reply
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20080908103508/http://ja.doukaku.org/173/post_comment/">
post comment
</a>
</div>


<h2>Posted feedbacks - Flatten</h2>
<a href="/web/20080908103508/http://ja.doukaku.org/173/nested/">Nested</a>
<a href="/web/20080908103508/http://ja.doukaku.org/173/">Hidden</a> 


  
  <br/>

  
  




<div class="comment" id="comment6191">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6191/">#6191</a>(<script language="JavaScript">print_time(new Date("2008/04/22 03:07 GMT"));</script><noscript>2008/04/22 03:07 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
<p>お昼休みにさくっとやってみました。
</p>
<p>Playerクラスを継承したクラスをつくることでPlayerを差し替えることができます。
</p>
<p>10000回を3回ほどやってみて
</p>
<pre><code>player1 won:    5190
player2 won:    2410
draw :  2400

player1 won:    5190
player2 won:    2411
draw :  2399

player1 won:    5152
player2 won:    2383
draw :  2465
</code></pre><p>というかんじでした。
</p>



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60</pre></td><td class="code"><div class="highlight"><pre>import java.util.Random

class TicTacToe(val size:int, val players:List[Player]) {
  protected val field = new Array[Array[char]](size,size)
  val len = size*size
  val lines = _stline((v,v2) =&gt; (v,v2))++_stline((v,v2) =&gt; (v2,v))++
              List(((size-1).until(-1,-1)).map(v=&gt;(v,v))) ++
              List((0 until size).map(v=&gt;(v,v)))

  def _stline(f:(int,int) =&gt; Pair[int,int]) = 
    (0 until size).map(v =&gt; (0 until size).map(v2 =&gt; f(v,v2)))

  override def toString = {
    val sep = List.make(size*4+1, &quot;-&quot;).mkString(&quot;\n&quot;, &quot;&quot;, &quot;\n&quot;)
    field.map{_.mkString(&quot;| &quot;, &quot; | &quot;, &quot; |&quot;)}.mkString(sep,sep,sep)
  }

  def start:Option[Player] = {
    for(val i&lt;-(0 until size); val j&lt;-(0 until size)) { field(i)(j) = &#39; &#39;}
    Stream.const(players).flatMap(v=&gt;v).take(len).find {player =&gt; 
      val p = player.put(this)
      if(!available_?(p)) error(&quot;Oops!&quot;)
      field(p._1)(p._2) = player.mark
      judge
    }
  }

  def judge = lines.exists(l =&gt; l.forall(!available_?(_)) &amp;&amp; 
                    l.forall(v =&gt; field(l(0)._1)(l(0)._2) == field(v._1)(v._2)))

  def available_?(pos:Pair[int,int]) = field(pos._1)(pos._2) equals &#39; &#39;
}

abstract class Player{
  val mark:char
  val name:String
  def put(ttt:TicTacToe):Pair[int,int]
}

class RandomPlayer(override val mark:char, override val name:String) extends Player{
  val rnd = new Random
  override def put(ttt:TicTacToe) = {
    def _n = (rnd.nextInt(ttt.size), rnd.nextInt(ttt.size))
    def next(v:Pair[int,int]):Stream[Pair[int,int]] = Stream.cons(v, next(_n))
    next(_n).find(ttt.available_?).get
  }
}

object Main extends Application{
  val ttt = new TicTacToe(3, List(new RandomPlayer(&#39;○&#39;, &quot;1&quot;), new RandomPlayer(&#39;×&#39;, &quot;2&quot;)))
  val result = Array.make(3,0)
  (1 to 10000) foreach { i =&gt; 
    ttt.start match {
      case Some(p) if p.name equals &quot;1&quot; =&gt; result(0) += 1
      case Some(p) if p.name equals &quot;2&quot; =&gt; result(1) += 1
      case _ =&gt; result(2) += 1
    }
  }
  println(&quot;player1 won:\t&quot;+result(0)+&quot;\n&quot;+&quot;player2 won:\t&quot;+result(1)+&quot;\n&quot;+&quot;draw :\t&quot;+result(2))
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6191/addtag/" class="addtag" id="addtag_6191">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6191/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6191/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6191"
  >-</span><span
  class="button yellow"
  id="rating_z_6191"
  >0</span><span 
  class="button green"
  id="rating_p_6191"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080908103508/http://ja.doukaku.org/comment/6191/">
    1
    reply
  </a>

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6191/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6192">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6192/">#6192</a>(<script language="JavaScript">print_time(new Date("2008/04/22 04:39 GMT"));</script><noscript>2008/04/22 04:39 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  IPlayerBaseインターフェースを実装していればプレーヤーになれます。<br/>勝敗判定の部分をもっとエレガントに書きたいですね。<br/><br/>結果<br/>○&nbsp;WIN&nbsp;:&nbsp;5837<br/>×&nbsp;WIN&nbsp;:&nbsp;2846<br/>&nbsp;&nbsp;DRAW&nbsp;:&nbsp;1317<br/><br/>○&nbsp;WIN&nbsp;:&nbsp;5863<br/>×&nbsp;WIN&nbsp;:&nbsp;2924<br/>&nbsp;&nbsp;DRAW&nbsp;:&nbsp;1213<br/><br/>○&nbsp;WIN&nbsp;:&nbsp;5811<br/>×&nbsp;WIN&nbsp;:&nbsp;2895<br/>&nbsp;&nbsp;DRAW&nbsp;:&nbsp;1294
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>

<span class="k">namespace</span> <span class="err">どう書く</span><span class="nn">_org_</span><span class="err">マルバツゲ</span><span class="n">ー</span><span class="err">ム</span> <span class="k">{</span>
    <span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
            <span class="kt">int</span> <span class="n">maruWin</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">batuWin</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">draw</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="n">IPlayerBase</span> <span class="n">maru</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Player</span><span class="p">()</span> <span class="k">{</span> <span class="n">Name</span> <span class="p">=</span> <span class="s">&quot;○&quot;</span> <span class="k">}</span><span class="p">;</span>
            <span class="n">IPlayerBase</span> <span class="n">batu</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Player</span><span class="p">()</span> <span class="k">{</span> <span class="n">Name</span> <span class="p">=</span> <span class="s">&quot;×&quot;</span> <span class="k">}</span><span class="p">;</span>

            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">10000</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
                <span class="n">Game</span> <span class="n">game</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Game</span><span class="p">(</span><span class="n">maru</span><span class="p">,</span> <span class="n">batu</span><span class="p">);</span>
                <span class="k">switch</span><span class="p">(</span><span class="n">game</span><span class="p">.</span><span class="n">Start</span><span class="p">())</span> <span class="k">{</span>
                <span class="k">case</span> <span class="s">&quot;○&quot;</span><span class="p">:</span>
                    <span class="n">maruWin</span><span class="p">++;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="k">case</span> <span class="s">&quot;×&quot;</span><span class="p">:</span>
                    <span class="n">batuWin</span><span class="p">++;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="k">case</span> <span class="s">&quot;draw&quot;</span><span class="p">:</span>
                    <span class="n">draw</span><span class="p">++;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="k">}</span>
            <span class="k">}</span>

            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;○ WIN : &quot;</span> <span class="p">+</span> <span class="n">maruWin</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;× WIN : &quot;</span> <span class="p">+</span> <span class="n">batuWin</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;  DRAW : &quot;</span> <span class="p">+</span> <span class="n">draw</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>

            <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
        <span class="k">}</span>
    <span class="k">}</span>

    <span class="k">class</span> <span class="nc">Game</span> <span class="k">{</span>
        <span class="k">private</span> <span class="n">IPlayerBase</span> <span class="n">_maru</span><span class="p">;</span>
        <span class="k">private</span> <span class="n">IPlayerBase</span> <span class="n">_batu</span><span class="p">;</span>

        <span class="k">public</span> <span class="kt">string</span><span class="p">[]</span> <span class="n">Board</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">string</span><span class="p">[]</span> <span class="k">{</span>
            <span class="s">&quot;□□□&quot;</span><span class="p">,</span>
            <span class="s">&quot;□□□&quot;</span><span class="p">,</span>
            <span class="s">&quot;□□□&quot;</span> <span class="k">}</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">Game</span><span class="p">(</span><span class="n">IPlayerBase</span> <span class="n">maru</span><span class="p">,</span> <span class="n">IPlayerBase</span> <span class="n">batu</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">_maru</span> <span class="p">=</span> <span class="n">maru</span><span class="p">;</span>
            <span class="n">_maru</span><span class="p">.</span><span class="n">Game</span> <span class="p">=</span> <span class="k">this</span><span class="p">;</span>
            <span class="n">_batu</span> <span class="p">=</span> <span class="n">batu</span><span class="p">;</span>
            <span class="n">_batu</span><span class="p">.</span><span class="n">Game</span> <span class="p">=</span> <span class="k">this</span><span class="p">;</span>
        <span class="k">}</span>

        <span class="k">public</span> <span class="kt">string</span> <span class="nf">Start</span><span class="p">()</span> <span class="k">{</span>
            <span class="kt">string</span> <span class="n">jadge</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
            <span class="k">while</span><span class="p">(</span><span class="k">true</span><span class="p">)</span> <span class="k">{</span>
                <span class="n">_maru</span><span class="p">.</span><span class="n">Play</span><span class="p">();</span>
                <span class="n">jadge</span> <span class="p">=</span> <span class="n">Judge</span><span class="p">(</span><span class="n">_maru</span><span class="p">.</span><span class="n">Name</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">jadge</span> <span class="p">!=</span> <span class="s">&quot;&quot;</span><span class="p">)</span> <span class="k">{</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="k">}</span>
                <span class="n">_batu</span><span class="p">.</span><span class="n">Play</span><span class="p">();</span>
                <span class="n">jadge</span> <span class="p">=</span> <span class="n">Judge</span><span class="p">(</span><span class="n">_batu</span><span class="p">.</span><span class="n">Name</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">jadge</span> <span class="p">!=</span> <span class="s">&quot;&quot;</span><span class="p">)</span> <span class="k">{</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="k">}</span>
            <span class="k">}</span>

            <span class="k">return</span> <span class="n">jadge</span><span class="p">;</span>
        <span class="k">}</span>

        <span class="c">//勝者を判定</span>
        <span class="k">private</span> <span class="kt">string</span> <span class="nf">Judge</span><span class="p">(</span><span class="kt">string</span> <span class="n">name</span><span class="p">)</span> <span class="k">{</span>
            <span class="kt">string</span> <span class="n">name3</span> <span class="p">=</span> <span class="n">name</span> <span class="p">+</span> <span class="n">name</span> <span class="p">+</span> <span class="n">name</span><span class="p">;</span>
            <span class="c">//横</span>
            <span class="k">foreach</span><span class="p">(</span><span class="kt">string</span> <span class="n">str</span> <span class="k">in</span> <span class="n">Board</span><span class="p">)</span> <span class="k">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">str</span> <span class="p">==</span> <span class="n">name3</span><span class="p">)</span> <span class="k">{</span>
                    <span class="k">return</span> <span class="n">name</span><span class="p">;</span>
                <span class="k">}</span>
            <span class="k">}</span>

            <span class="c">//縦</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&lt;</span> <span class="m">3</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span> <span class="k">{</span>
                <span class="kt">string</span> <span class="n">str</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">y</span> <span class="p">&lt;</span> <span class="m">3</span><span class="p">;</span> <span class="n">y</span><span class="p">++)</span> <span class="k">{</span>
                    <span class="n">str</span> <span class="p">+=</span> <span class="n">Board</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">];</span>
                <span class="k">}</span>
                <span class="k">if</span><span class="p">(</span><span class="n">str</span> <span class="p">==</span> <span class="n">name3</span><span class="p">)</span> <span class="k">{</span>
                    <span class="k">return</span> <span class="n">name</span><span class="p">;</span>
                <span class="k">}</span>
            <span class="k">}</span>

            <span class="c">//斜め</span>
            <span class="kt">string</span> <span class="n">tmp</span> <span class="p">=</span> <span class="n">Board</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">0</span><span class="p">].</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="n">Board</span><span class="p">[</span><span class="m">1</span><span class="p">][</span><span class="m">1</span><span class="p">].</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="n">Board</span><span class="p">[</span><span class="m">2</span><span class="p">][</span><span class="m">2</span><span class="p">].</span><span class="n">ToString</span><span class="p">();</span>
            <span class="k">if</span><span class="p">(</span><span class="n">tmp</span> <span class="p">==</span> <span class="n">name3</span><span class="p">)</span> <span class="k">{</span>
                <span class="k">return</span> <span class="n">name</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="n">tmp</span> <span class="p">=</span> <span class="n">Board</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">2</span><span class="p">].</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="n">Board</span><span class="p">[</span><span class="m">1</span><span class="p">][</span><span class="m">1</span><span class="p">].</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="n">Board</span><span class="p">[</span><span class="m">2</span><span class="p">][</span><span class="m">0</span><span class="p">].</span><span class="n">ToString</span><span class="p">();</span>
            <span class="k">if</span><span class="p">(</span><span class="n">tmp</span> <span class="p">==</span> <span class="n">name3</span><span class="p">)</span> <span class="k">{</span>
                <span class="k">return</span> <span class="n">name</span><span class="p">;</span>
            <span class="k">}</span>

            <span class="c">//引き分け</span>
            <span class="k">if</span><span class="p">(!(</span><span class="n">Board</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">+</span> <span class="n">Board</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">+</span> <span class="n">Board</span><span class="p">[</span><span class="m">2</span><span class="p">]).</span><span class="n">Contains</span><span class="p">(</span><span class="sc">&#39;□&#39;</span><span class="p">))</span> <span class="k">{</span>
                <span class="k">return</span> <span class="s">&quot;draw&quot;</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
        <span class="k">}</span>
    <span class="k">}</span>

    <span class="k">class</span> <span class="nc">Player</span> <span class="p">:</span><span class="n">IPlayerBase</span> <span class="k">{</span>
        <span class="cp">#region IPlayerBase メンバ</span>

        <span class="k">public</span> <span class="n">Game</span> <span class="n">Game</span> <span class="k">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="k">}</span> <span class="c">//参加しているゲーム</span>

        <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span> <span class="k">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="k">}</span> <span class="c">//○か×か</span>

        <span class="k">private</span> <span class="n">Random</span> <span class="n">Rnd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Random</span><span class="p">();</span>
        <span class="c">//一手打つ</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">Play</span><span class="p">()</span> <span class="k">{</span>
            <span class="n">List</span><span class="p">&lt;</span><span class="n">Location</span><span class="p">&gt;</span> <span class="n">cells</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Location</span><span class="p">&gt;();</span> <span class="c">//置けるマス</span>

            <span class="c">//置けるマスを列挙</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">y</span> <span class="p">&lt;</span> <span class="m">3</span><span class="p">;</span> <span class="n">y</span><span class="p">++)</span> <span class="k">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">x</span> <span class="p">&lt;</span> <span class="m">3</span><span class="p">;</span> <span class="n">x</span><span class="p">++)</span> <span class="k">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">Game</span><span class="p">.</span><span class="n">Board</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">]</span> <span class="p">==</span> <span class="sc">&#39;□&#39;</span><span class="p">)</span> <span class="k">{</span>
                        <span class="n">Location</span> <span class="n">location</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Location</span><span class="p">();</span>
                        <span class="n">location</span><span class="p">.</span><span class="n">x</span> <span class="p">=</span> <span class="n">x</span><span class="p">;</span>
                        <span class="n">location</span><span class="p">.</span><span class="n">y</span> <span class="p">=</span> <span class="n">y</span><span class="p">;</span>

                        <span class="n">cells</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">location</span><span class="p">);</span>
                    <span class="k">}</span>
                <span class="k">}</span>
            <span class="k">}</span>

            <span class="c">//置けるマスが無ければ何もしない</span>
            <span class="k">if</span><span class="p">(</span><span class="n">cells</span><span class="p">.</span><span class="n">Count</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>

            <span class="c">//乱数で置くマスを決定</span>
            <span class="kt">int</span> <span class="n">index</span> <span class="p">=</span> <span class="n">Rnd</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">cells</span><span class="p">.</span><span class="n">Count</span><span class="p">);</span>
            <span class="n">Location</span> <span class="n">cell</span> <span class="p">=</span> <span class="n">cells</span><span class="p">[</span><span class="n">index</span><span class="p">];</span>

            <span class="c">//石を置く</span>
            <span class="n">Game</span><span class="p">.</span><span class="n">Board</span><span class="p">[</span><span class="n">cell</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="p">=</span> <span class="n">Game</span><span class="p">.</span><span class="n">Board</span><span class="p">[</span><span class="n">cell</span><span class="p">.</span><span class="n">y</span><span class="p">].</span><span class="n">Remove</span><span class="p">(</span><span class="n">cell</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="m">1</span><span class="p">).</span><span class="n">Insert</span><span class="p">(</span><span class="n">cell</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">Name</span><span class="p">);</span>
        <span class="k">}</span>
        <span class="cp">#endregion</span>
    <span class="k">}</span>

    <span class="c">//マスの位置</span>
    <span class="k">struct</span> <span class="nc">Location</span> <span class="k">{</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">y</span><span class="p">;</span>
    <span class="k">}</span>

    <span class="c">//プレーヤーが実装するインターフェース</span>
    <span class="c">//これを実装したプレーヤーに差し替え可</span>
    <span class="k">interface</span> <span class="n">IPlayerBase</span> <span class="k">{</span>
        <span class="n">Game</span> <span class="n">Game</span> <span class="k">{</span> <span class="k">set</span><span class="p">;</span> <span class="k">get</span><span class="p">;</span> <span class="k">}</span>
        <span class="kt">string</span> <span class="n">Name</span> <span class="k">{</span> <span class="k">set</span><span class="p">;</span> <span class="k">get</span><span class="p">;</span> <span class="k">}</span>
        <span class="k">void</span> <span class="n">Play</span><span class="p">();</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6192/addtag/" class="addtag" id="addtag_6192">Tags</a>:
	
    
    <a href="/web/20080908103508/http://ja.doukaku.org/tag/C%233.0/">C#3.0</a>
    
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6192/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6192/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6192"
  >-</span><span
  class="button yellow"
  id="rating_z_6192"
  >0</span><span 
  class="button green"
  id="rating_p_6192"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6192/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6193">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6193/">#6193</a>(<script language="JavaScript">print_time(new Date("2008/04/22 04:50 GMT"));</script><noscript>2008/04/22 04:50 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Playerを実装すれば、実装を置き換えられます。
しかし、Scalaと比べてだいぶ長くなっちゃいました。
とりあえず、3回実行してみた結果です。

Result:
Player1 won: 5214
Player2 won: 2355
draw game  : 2431

Result:
Player1 won: 5211
Player2 won: 2444
draw game  : 2345

Result:
Player1 won: 5174
Player2 won: 2404
draw game  : 2422
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.Random</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">TicTacToe</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">SIZE</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>

    <span class="k">private</span> <span class="k">final</span> <span class="n">Mark</span><span class="o">[][]</span> <span class="n">fields_</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Mark</span><span class="o">[</span><span class="n">SIZE</span><span class="o">][</span><span class="n">SIZE</span><span class="o">];</span>
    <span class="k">private</span> <span class="k">final</span> <span class="n">Pair</span><span class="o">[][]</span> <span class="n">lines_</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">[][]</span> <span class="o">{</span>
            <span class="o">{</span><span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">2</span><span class="o">)},</span>
            <span class="o">{</span><span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">)},</span>
            <span class="o">{</span><span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">0</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">2</span><span class="o">)},</span>
            <span class="o">{</span><span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">0</span><span class="o">)},</span>
            <span class="o">{</span><span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">)},</span>
            <span class="o">{</span><span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">2</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">2</span><span class="o">)},</span>
            <span class="o">{</span><span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">2</span><span class="o">)},</span>
            <span class="o">{</span><span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">2</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">),</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">)},</span>
    <span class="o">};</span>


    <span class="k">public</span> <span class="n">TicTacToe</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">SIZE</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">SIZE</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">fields_</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span> <span class="o">=</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">Mark</span> <span class="n">getMark</span><span class="o">(</span><span class="n">Pair</span> <span class="n">pair</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">fields_</span><span class="o">[</span><span class="n">pair</span><span class="o">.</span><span class="na">x</span><span class="o">][</span><span class="n">pair</span><span class="o">.</span><span class="na">y</span><span class="o">];</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="kt">void</span> <span class="n">setMark</span><span class="o">(</span><span class="n">Pair</span> <span class="n">pair</span><span class="o">,</span> <span class="n">Mark</span> <span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">fields_</span><span class="o">[</span><span class="n">pair</span><span class="o">.</span><span class="na">x</span><span class="o">][</span><span class="n">pair</span><span class="o">.</span><span class="na">y</span><span class="o">]</span> <span class="o">=</span> <span class="n">mark</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">boolean</span> <span class="n">nextStep</span><span class="o">(</span><span class="n">Pair</span> <span class="n">pair</span><span class="o">,</span> <span class="n">Mark</span> <span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">getMark</span><span class="o">(</span><span class="n">pair</span><span class="o">)</span> <span class="o">!=</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="n">setMark</span><span class="o">(</span><span class="n">pair</span><span class="o">,</span> <span class="n">mark</span><span class="o">);</span>
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">Mark</span> <span class="n">isEndGame</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">Pair</span><span class="o">[]</span> <span class="nl">row:</span> <span class="n">lines_</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">Mark</span> <span class="n">m</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
            <span class="kt">boolean</span> <span class="n">isSame</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="n">Pair</span> <span class="nl">cell:</span> <span class="n">row</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">Mark</span> <span class="n">mark</span> <span class="o">=</span> <span class="n">fields_</span><span class="o">[</span><span class="n">cell</span><span class="o">.</span><span class="na">x</span><span class="o">][</span><span class="n">cell</span><span class="o">.</span><span class="na">y</span><span class="o">];</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">m</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">m</span> <span class="o">=</span> <span class="n">mark</span><span class="o">;</span>
                    <span class="k">continue</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">m</span> <span class="o">!=</span> <span class="n">mark</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">isSame</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">isSame</span><span class="o">)</span> <span class="k">return</span> <span class="n">m</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">Mark</span><span class="o">.</span><span class="na">E</span><span class="o">;</span>
    <span class="o">}</span>


    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Player</span> <span class="n">player1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RandomPlayer</span><span class="o">(</span><span class="n">Mark</span><span class="o">.</span><span class="na">O</span><span class="o">,</span> <span class="s">&quot;Player1&quot;</span><span class="o">);</span>
        <span class="n">Player</span> <span class="n">player2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RandomPlayer</span><span class="o">(</span><span class="n">Mark</span><span class="o">.</span><span class="na">X</span><span class="o">,</span> <span class="s">&quot;Player2&quot;</span><span class="o">);</span>

        <span class="kt">int</span> <span class="n">maxTurn</span> <span class="o">=</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span> <span class="o">*</span> <span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">round</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">round</span> <span class="o">&lt;</span> <span class="mi">10000</span><span class="o">;</span> <span class="n">round</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">TicTacToe</span> <span class="n">game</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TicTacToe</span><span class="o">();</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">turn</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">turn</span> <span class="o">&lt;=</span> <span class="n">maxTurn</span><span class="o">;</span> <span class="n">turn</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">turn</span> <span class="o">==</span> <span class="n">maxTurn</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">result</span><span class="o">[</span><span class="mi">2</span><span class="o">]++;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">turn</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">player1</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">game</span><span class="o">);</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="n">player2</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">game</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="n">Mark</span> <span class="n">mark</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">isEndGame</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">mark</span> <span class="o">==</span> <span class="n">Mark</span><span class="o">.</span><span class="na">O</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">result</span><span class="o">[</span><span class="mi">0</span><span class="o">]++;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">mark</span> <span class="o">==</span> <span class="n">Mark</span><span class="o">.</span><span class="na">X</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">result</span><span class="o">[</span><span class="mi">1</span><span class="o">]++;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Result:&quot;</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%s won: %d%n&quot;</span><span class="o">,</span> <span class="n">player1</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="n">result</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%s won: %d%n&quot;</span><span class="o">,</span> <span class="n">player2</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="n">result</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;draw game  : %d%n&quot;</span><span class="o">,</span> <span class="n">result</span><span class="o">[</span><span class="mi">2</span><span class="o">]);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="k">enum</span> <span class="n">Mark</span> <span class="o">{</span>
    <span class="n">E</span> <span class="o">{</span> <span class="nd">@Override</span> <span class="k">public</span> <span class="n">Mark</span> <span class="n">getOpponent</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">E</span><span class="o">;</span> <span class="o">}</span> <span class="o">},</span>
    <span class="n">O</span> <span class="o">{</span> <span class="nd">@Override</span> <span class="k">public</span> <span class="n">Mark</span> <span class="n">getOpponent</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">X</span><span class="o">;</span> <span class="o">}</span> <span class="o">},</span>
    <span class="n">X</span> <span class="o">{</span> <span class="nd">@Override</span> <span class="k">public</span> <span class="n">Mark</span> <span class="n">getOpponent</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">O</span><span class="o">;</span> <span class="o">}</span> <span class="o">};</span>

    <span class="k">public</span> <span class="k">abstract</span> <span class="n">Mark</span> <span class="n">getOpponent</span><span class="o">();</span>
<span class="o">}</span>
<span class="k">class</span> <span class="nc">Pair</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">x</span><span class="o">;</span>
    <span class="k">public</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">y</span><span class="o">;</span>

    <span class="k">public</span> <span class="n">Pair</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>


<span class="k">abstract</span> <span class="k">class</span> <span class="nc">Player</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">final</span> <span class="n">Mark</span> <span class="n">mark</span><span class="o">;</span>
    <span class="k">public</span> <span class="k">final</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>

    <span class="k">public</span> <span class="n">Player</span><span class="o">(</span><span class="n">Mark</span> <span class="n">mark</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">mark</span> <span class="o">=</span> <span class="n">mark</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">abstract</span> <span class="kt">void</span> <span class="n">put</span><span class="o">(</span><span class="n">TicTacToe</span> <span class="n">game</span><span class="o">);</span>
<span class="o">}</span>

<span class="k">class</span> <span class="nc">RandomPlayer</span> <span class="k">extends</span> <span class="n">Player</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">final</span> <span class="n">Random</span> <span class="n">random_</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>

    <span class="k">public</span> <span class="n">RandomPlayer</span><span class="o">(</span><span class="n">Mark</span> <span class="n">mark</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">super</span><span class="o">(</span><span class="n">mark</span><span class="o">,</span> <span class="n">name</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="k">public</span> <span class="kt">void</span> <span class="n">put</span><span class="o">(</span><span class="n">TicTacToe</span> <span class="n">game</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(;;)</span> <span class="o">{</span>
            <span class="n">Pair</span> <span class="n">pair</span> <span class="o">=</span> <span class="n">getNextPair</span><span class="o">();</span>
            <span class="kt">boolean</span> <span class="n">res</span> <span class="o">=</span> <span class="n">game</span><span class="o">.</span><span class="na">nextStep</span><span class="o">(</span><span class="n">pair</span><span class="o">,</span> <span class="n">mark</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">res</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="n">Pair</span> <span class="n">getNextPair</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">Pair</span><span class="o">(</span><span class="n">random_</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">),</span> <span class="n">random_</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="n">TicTacToe</span><span class="o">.</span><span class="na">SIZE</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6193/addtag/" class="addtag" id="addtag_6193">Tags</a>:
	
    
    <a href="/web/20080908103508/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6193/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6193/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6193"
  >-</span><span
  class="button yellow"
  id="rating_z_6193"
  >0</span><span 
  class="button green"
  id="rating_p_6193"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080908103508/http://ja.doukaku.org/comment/6193/">
    1
    reply
  </a>

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6193/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6194">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6194/">#6194</a>(<script language="JavaScript">print_time(new Date("2008/04/22 05:13 GMT"));</script><noscript>2008/04/22 05:13 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Squeak Smalltalk で。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="highlight"><pre>| マス目群 勝敗カウンタ 勝ち判定 |
マス目群 := OrderedCollection new.
(1 to: 3) asDigitsToPower: 2 do: [:座標 | マス目群 add: 座標 copy].

勝敗カウンタ := Bag new.

1e4 timesRepeat: [
    | 残りのマス目群 先手 後手 打ち手順 手番 結果 |
    残りのマス目群 := マス目群 copy shuffled.
    先手 := OrderedCollection new. 後手 := 先手 copy.
    打ち手順 := {先手. 後手}.
    手番 := 0.
    結果 := nil.
    勝ち判定 := [:取得済み |
        (#(first second) anySatisfy: [:セレクタ |
            (取得済み
                groupBy: [:各々 | 各々 perform: セレクタ]
                having: [:括り | 括り size = 3]) notEmpty]) or: [
        {[:各々 | 各々 first = 各々 second]. [:各々 | 各々 sum = 4]}
            anySatisfy: [:条件 | (取得済み count: 条件) = 3]]].

    [残りのマス目群
        ifEmpty: [結果 := #引き分け]
        ifNotEmpty: [
            | 取得マス目群 |
            (取得マス目群 := 打ち手順 atWrap: (手番 := 手番 + 1))
                add: 残りのマス目群 removeFirst.
            (勝ち判定 value: 取得マス目群) ifTrue: [
                結果 := 手番 odd
                    ifTrue: [#先手勝ち]
                    ifFalse: [#後手勝ち]]].
    結果 isNil] whileTrue.

    勝敗カウンタ add: 結果].

^勝敗カウンタ sortedCounts asArray

&quot;=&gt; {5895-&gt;#先手勝ち. 2796-&gt;#後手勝ち. 1309-&gt;#引き分け} &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6194/addtag/" class="addtag" id="addtag_6194">Tags</a>:
	
    
    <a href="/web/20080908103508/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6194/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6194/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6194"
  >-</span><span
  class="button yellow"
  id="rating_z_6194"
  >0</span><span 
  class="button green"
  id="rating_p_6194"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080908103508/http://ja.doukaku.org/comment/6194/">
    1
    reply
  </a>

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6194/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6195">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6195/">#6195</a>(<script language="JavaScript">print_time(new Date("2008/04/22 07:40 GMT"));</script><noscript>2008/04/22 07:40 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>勝敗判定が分かりづらかったので変えてみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre>| マス目群 ライン群 勝敗カウンタ |
マス目群 := OrderedCollection new.
(1 to: 3) asDigitsToPower: 2 do: [:座標 | マス目群 add: 座標 copy].

ライン群 := OrderedCollection new.
(1 to: 3) do: [:座標１ |
    ライン群 add: ((1 to: 3) collect: [:座標２ | {座標１. 座標２}]).
    ライン群 add: ((1 to: 3) collect: [:座標２ | {座標２. 座標１}])].
ライン群 add: #((1 1) (2 2) (3 3)); add: #((1 3) (2 2) (3 1)).

勝敗カウンタ := Bag new.

1e4 timesRepeat: [
    | 残りのマス目群 先手 後手 打ち手順 手番 結果 |
    残りのマス目群 := マス目群 copy shuffled.
    先手 := OrderedCollection new. 後手 := 先手 copy.
    打ち手順 := {先手. 後手}.
    手番 := 0.
    結果 := nil.

    [残りのマス目群
        ifEmpty: [結果 := #引き分け]
        ifNotEmpty: [
            | 取得マス目群 |
            (取得マス目群 := 打ち手順 atWrap: (手番 := 手番 + 1))
                add: 残りのマス目群 removeFirst.
            (ライン群 anySatisfy: [:必須マス群 |
                    取得マス目群 includesAllOf: 必須マス群])
                ifTrue: [結果 := 手番 odd
                    ifTrue: [#先手勝ち] ifFalse: [#後手勝ち]]].
    結果 isNil] whileTrue.

    勝敗カウンタ add: 結果].

^勝敗カウンタ sortedCounts asArray
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6195/addtag/" class="addtag" id="addtag_6195">Tags</a>:
	
    
    <a href="/web/20080908103508/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6195/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6195/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6195"
  >-</span><span
  class="button yellow"
  id="rating_z_6195"
  >0</span><span 
  class="button green"
  id="rating_p_6195"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080908103508/http://ja.doukaku.org/comment/6194/"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080908103508/http://ja.doukaku.org/comment/6195/root/"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6195/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6196">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/790/" target="_top">nel</a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6196/">#6196</a>(<script language="JavaScript">print_time(new Date("2008/04/22 07:57 GMT"));</script><noscript>2008/04/22 07:57 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ちょっと力業でしょうか。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69</pre></td><td class="code"><div class="highlight"><pre>(use srfi-1)
(use srfi-27)
(use util.list)

(random-source-randomize! default-random-source)

;; board: (0 1 0 0 0 0 0 0 0)
;; board -&gt; board
(define (player-random board self)
  (define (okeru)
    (length (filter zero? board)))

  (let loop ((board board)
         (next  (random-integer (okeru))))
    (if (null? board)
    ()
    (cons (if (= next 0)
          self
          (car board))
          (loop (cdr board)
            (if (= (car board) 0)
            (- next 1)
            next
            ))))))

(define (play p1 p2)
  (define (finish? board)
    (or (&gt; (judge board) 0)
    (not (find zero? board))))

  (let loop ((board (make-list 9 0))
         (phase 1))
    (if (finish? board)
    board
    (if (= phase 1)
        (loop (p1 board 1) 2)
        (loop (p2 board 2) 1)))))

(define (judge board)
  (define line-points-list
    &#39;((0 1 2)
      (3 4 5)
      (6 7 8)
      (0 3 6)
      (1 4 7)
      (2 5 8)
      (0 4 8)
      (2 4 6)))

  (define (judge-4-player n)
    (find (lambda (line-points)
        (every (lambda (j)
             (= (ref board j) n))
           line-points))
      line-points-list))

  (cond ((judge-4-player 1) 1)
    ((judge-4-player 2) 2)
    (else 0)))

(define (marubatsu p1 p2)
  (define (one-play)
    (judge (play p1 p2)))

  (define hash (make-hash-table))
  (dotimes (counter 10000)
    (hash-table-update! hash (one-play) (cut + 1 &lt;&gt;) 0))

  (write (hash-table-&gt;alist hash)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6196/addtag/" class="addtag" id="addtag_6196">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6196/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6196/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6196"
  >-</span><span
  class="button yellow"
  id="rating_z_6196"
  >0</span><span 
  class="button green"
  id="rating_p_6196"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6196/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6197">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/790/" target="_top">nel</a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6197/">#6197</a>(<script language="JavaScript">print_time(new Date("2008/04/22 07:59 GMT"));</script><noscript>2008/04/22 07:59 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ちょっと力業でしょうか。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-1</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-27</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">util</span><span class="o">.</span><span class="nv">list</span><span class="p">)</span>

<span class="p">(</span><span class="nf">random-source-randomize!</span> <span class="nv">default-random-source</span><span class="p">)</span>

<span class="c1">;; board: (0 1 0 0 0 0 0 0 0)</span>
<span class="c1">;; board -&gt; board</span>
<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">player-random</span> <span class="nv">board</span> <span class="nv">self</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">okeru</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">length </span><span class="p">(</span><span class="nf">filter</span> <span class="nv">zero?</span> <span class="nv">board</span><span class="p">)))</span>

  <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">board</span> <span class="nv">board</span><span class="p">)</span>
         <span class="p">(</span><span class="nf">next</span>  <span class="p">(</span><span class="nf">random-integer</span> <span class="p">(</span><span class="nf">okeru</span><span class="p">))))</span>
    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">null? </span><span class="nv">board</span><span class="p">)</span>
    <span class="p">()</span>
    <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="nv">next</span> <span class="mi">0</span><span class="p">)</span>
          <span class="nv">self</span>
          <span class="p">(</span><span class="nb">car </span><span class="nv">board</span><span class="p">))</span>
          <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">board</span><span class="p">)</span>
            <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="p">(</span><span class="nb">car </span><span class="nv">board</span><span class="p">)</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">(</span><span class="nb">- </span><span class="nv">next</span> <span class="mi">1</span><span class="p">)</span>
            <span class="nv">next</span>
            <span class="p">))))))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">play</span> <span class="nv">p1</span> <span class="nv">p2</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">finish?</span> <span class="nv">board</span><span class="p">)</span>
    <span class="p">(</span><span class="k">or </span><span class="p">(</span><span class="nb">&gt; </span><span class="p">(</span><span class="nf">judge</span> <span class="nv">board</span><span class="p">)</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">(</span><span class="nb">not </span><span class="p">(</span><span class="nf">find</span> <span class="nv">zero?</span> <span class="nv">board</span><span class="p">))))</span>

  <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">board</span> <span class="p">(</span><span class="nf">make-list</span> <span class="mi">9</span> <span class="mi">0</span><span class="p">))</span>
         <span class="p">(</span><span class="nf">phase</span> <span class="mi">1</span><span class="p">))</span>
    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nf">finish?</span> <span class="nv">board</span><span class="p">)</span>
    <span class="nv">board</span>
    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="nv">phase</span> <span class="mi">1</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nf">p1</span> <span class="nv">board</span> <span class="mi">1</span><span class="p">)</span> <span class="mi">2</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nf">p2</span> <span class="nv">board</span> <span class="mi">2</span><span class="p">)</span> <span class="mi">1</span><span class="p">)))))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">judge</span> <span class="nv">board</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="nv">line-points-list</span>
    <span class="o">&#39;</span><span class="p">((</span><span class="mi">0</span> <span class="mi">1</span> <span class="mi">2</span><span class="p">)</span>
      <span class="p">(</span><span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span><span class="p">)</span>
      <span class="p">(</span><span class="mi">6</span> <span class="mi">7</span> <span class="mi">8</span><span class="p">)</span>
      <span class="p">(</span><span class="mi">0</span> <span class="mi">3</span> <span class="mi">6</span><span class="p">)</span>
      <span class="p">(</span><span class="mi">1</span> <span class="mi">4</span> <span class="mi">7</span><span class="p">)</span>
      <span class="p">(</span><span class="mi">2</span> <span class="mi">5</span> <span class="mi">8</span><span class="p">)</span>
      <span class="p">(</span><span class="mi">0</span> <span class="mi">4</span> <span class="mi">8</span><span class="p">)</span>
      <span class="p">(</span><span class="mi">2</span> <span class="mi">4</span> <span class="mi">6</span><span class="p">)))</span>

  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">judge-4-player</span> <span class="nv">n</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">find</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">line-points</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">every</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">j</span><span class="p">)</span>
             <span class="p">(</span><span class="nb">= </span><span class="p">(</span><span class="nf">ref</span> <span class="nv">board</span> <span class="nv">j</span><span class="p">)</span> <span class="nv">n</span><span class="p">))</span>
           <span class="nv">line-points</span><span class="p">))</span>
      <span class="nv">line-points-list</span><span class="p">))</span>

  <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nf">judge-4-player</span> <span class="mi">1</span><span class="p">)</span> <span class="mi">1</span><span class="p">)</span>
    <span class="p">((</span><span class="nf">judge-4-player</span> <span class="mi">2</span><span class="p">)</span> <span class="mi">2</span><span class="p">)</span>
    <span class="p">(</span><span class="k">else </span><span class="mi">0</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">marubatsu</span> <span class="nv">p1</span> <span class="nv">p2</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">one-play</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">judge</span> <span class="p">(</span><span class="nf">play</span> <span class="nv">p1</span> <span class="nv">p2</span><span class="p">)))</span>

  <span class="p">(</span><span class="k">define </span><span class="nv">hash</span> <span class="p">(</span><span class="nf">make-hash-table</span><span class="p">))</span>
  <span class="p">(</span><span class="nf">dotimes</span> <span class="p">(</span><span class="nf">counter</span> <span class="mi">10000</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">hash-table-update!</span> <span class="nv">hash</span> <span class="p">(</span><span class="nf">one-play</span><span class="p">)</span> <span class="p">(</span><span class="nf">cut</span> <span class="nv">+</span> <span class="mi">1</span> <span class="nv">&lt;&gt;</span><span class="p">)</span> <span class="mi">0</span><span class="p">))</span>

  <span class="p">(</span><span class="nb">write </span><span class="p">(</span><span class="nf">hash-table-&gt;alist</span> <span class="nv">hash</span><span class="p">)))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6197/addtag/" class="addtag" id="addtag_6197">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6197/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6197/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6197"
  >-</span><span
  class="button yellow"
  id="rating_z_6197"
  >0</span><span 
  class="button green"
  id="rating_p_6197"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6197/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6199">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6199/">#6199</a>(<script language="JavaScript">print_time(new Date("2008/04/22 08:41 GMT"));</script><noscript>2008/04/22 08:41 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
<p>1行ミスってました。コピペはいけませんね･･･。あらためて
</p>
<pre><code>player1 won:    5826
player2 won:    2857
draw :  1317
</code></pre><p>という感じです。
</p>



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="gu">@@ -4,7 +4,7 @@</span>
   protected val field = new Array[Array[char]](size,size)
   val len = size*size
   val lines = _stline((v,v2) =&gt; (v,v2))++_stline((v,v2) =&gt; (v2,v))++
<span class="gd">-              List(((size-1).until(-1,-1)).map(v=&gt;(v,v))) ++</span>
<span class="gi">+              List(((size-1).until(-1,-1)).map(v=&gt; (v,(size-1-v)))) ++</span>
               List((0 until size).map(v=&gt;(v,v)))

   def _stline(f:(int,int) =&gt; Pair[int,int]) =
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6199/addtag/" class="addtag" id="addtag_6199">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6199/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6199/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6199"
  >-</span><span
  class="button yellow"
  id="rating_z_6199"
  >0</span><span 
  class="button green"
  id="rating_p_6199"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080908103508/http://ja.doukaku.org/comment/6191/"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080908103508/http://ja.doukaku.org/comment/6199/root/"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080908103508/http://ja.doukaku.org/comment/6199/">
    1
    reply
  </a>

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6199/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6201">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6201/">#6201</a>(<script language="JavaScript">print_time(new Date("2008/04/22 15:40 GMT"));</script><noscript>2008/04/22 15:40 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>出題者です。統計的には試行回数が多いほど誤差が小さくなるので、試しに１００万×５回ほどやってみました。</p>
<p>その結果、</p>
<p>先攻勝ち：先攻負け：引き分け　≒ 58.5：28.8：12.7</p>
<p>と出ました。
そこらへんの数字の人は正解と思われます。</p>
<p>乱数は素直につかえば問題ないのですが、変なロジックをとおした結果、かたよりが出たりすると怖いです。
処理系によって乱数の癖が見れたりしたら面白かったかも？？</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6201/addtag/" class="addtag" id="addtag_6201">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6201"
  >-</span><span
  class="button yellow"
  id="rating_z_6201"
  >0</span><span 
  class="button green"
  id="rating_p_6201"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080908103508/http://ja.doukaku.org/comment/6199/"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080908103508/http://ja.doukaku.org/comment/6201/root/"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080908103508/http://ja.doukaku.org/comment/6201/">
    1
    reply
  </a>

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6201/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6202">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6202/">#6202</a>(<script language="JavaScript">print_time(new Date("2008/04/23 04:33 GMT"));</script><noscript>2008/04/23 04:33 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>終了判定にバグ発見してしまいました。
ここを直して、100万回実行した結果以下のようになりました。
これでほぼ合っていそうです。

Result:
Player1 won: 582337
Player2 won: 290884
draw game  : 126779
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="highlight"><pre>15c15
&lt;                       {new Pair(2,2), new Pair(1,1), new Pair(0,0)},
<span class="gd">---</span>
&gt;                       {new Pair(0,2), new Pair(1,1), new Pair(2,0)},
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6202/addtag/" class="addtag" id="addtag_6202">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6202/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6202/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6202"
  >-</span><span
  class="button yellow"
  id="rating_z_6202"
  >0</span><span 
  class="button green"
  id="rating_p_6202"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080908103508/http://ja.doukaku.org/comment/6193/"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080908103508/http://ja.doukaku.org/comment/6202/root/"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6202/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6203">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6203/">#6203</a>(<script language="JavaScript">print_time(new Date("2008/04/23 07:53 GMT"));</script><noscript>2008/04/23 07:53 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>プレイヤーを単純な関数として実装しました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre><span class="k">from</span> <span class="nn">random</span> <span class="k">import</span> <span class="n">choice</span>

<span class="k">def</span> <span class="nf">p</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
  <span class="k">return</span> <span class="n">choice</span><span class="p">([</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">d</span><span class="p">)</span> <span class="k">if</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span><span class="p">])</span>

<span class="k">def</span> <span class="nf">w</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">i</span><span class="p">):</span>
  <span class="n">f</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">l</span><span class="p">:</span> <span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">==</span> <span class="n">l</span>
  <span class="k">return</span> <span class="p">(</span><span class="n">f</span><span class="p">(</span><span class="n">d</span><span class="p">[:</span><span class="mi">3</span><span class="p">])</span> <span class="ow">or</span> <span class="n">f</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">3</span><span class="p">:</span><span class="mi">6</span><span class="p">])</span> <span class="ow">or</span> <span class="n">f</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">6</span><span class="p">:])</span> <span class="ow">or</span>
          <span class="n">f</span><span class="p">(</span><span class="n">d</span><span class="p">[::</span><span class="mi">3</span><span class="p">])</span> <span class="ow">or</span> <span class="n">f</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">1</span><span class="p">::</span><span class="mi">3</span><span class="p">])</span> <span class="ow">or</span> <span class="n">f</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">2</span><span class="p">::</span><span class="mi">3</span><span class="p">])</span> <span class="ow">or</span>
          <span class="n">f</span><span class="p">(</span><span class="n">d</span><span class="p">[::</span><span class="mi">4</span><span class="p">])</span> <span class="ow">or</span> <span class="n">f</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">7</span><span class="p">:</span><span class="mi">2</span><span class="p">]))</span>

<span class="k">def</span> <span class="nf">m</span><span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">):</span>
  <span class="n">d</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">9</span>
  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">9</span><span class="p">):</span>
    <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="n">d</span><span class="p">[</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="p">](</span><span class="n">d</span><span class="p">,</span> <span class="n">x</span><span class="p">)]</span> <span class="o">=</span> <span class="n">x</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">3</span> <span class="ow">and</span> <span class="n">w</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
      <span class="k">return</span> <span class="n">x</span>
  <span class="k">return</span> <span class="mi">0</span>

<span class="n">r</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">3</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10000</span><span class="p">):</span>
  <span class="n">r</span><span class="p">[</span><span class="n">m</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">p</span><span class="p">)]</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="k">print</span> <span class="s">&#39;draw: </span><span class="si">%d</span><span class="se">\n</span><span class="s">1st:  </span><span class="si">%d</span><span class="se">\n</span><span class="s">2nd:  </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6203/addtag/" class="addtag" id="addtag_6203">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6203/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6203/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6203"
  >-</span><span
  class="button yellow"
  id="rating_z_6203"
  >0</span><span 
  class="button green"
  id="rating_p_6203"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6203/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6204">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6204/">#6204</a>(<script language="JavaScript">print_time(new Date("2008/04/23 12:08 GMT"));</script><noscript>2008/04/23 12:08 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>○×ゲームなのに視覚的なものはほとんど考慮してないので恐縮ですが...

ちなみに、100万回勝負させたら

player 1 won : 3595448(0.359545)
player 2 won : 2882753(0.288275)
draw : 3521799(0.35218)

だそうです。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;algorithm&gt;</span>
<span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;map&gt;</span>
<span class="cp">#include &lt;ctime&gt;</span>

<span class="k">class</span> <span class="nc">board</span>
<span class="p">{</span>
  <span class="kt">int</span> <span class="n">cell</span><span class="p">[</span><span class="mi">3</span><span class="o">*</span><span class="mi">3</span><span class="p">];</span>

  <span class="k">public</span><span class="o">:</span>
  <span class="n">board</span><span class="p">()</span> <span class="p">{</span> <span class="n">reset</span><span class="p">();</span> <span class="p">}</span>
  <span class="kt">void</span> <span class="n">reset</span><span class="p">()</span> <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">fill_n</span><span class="p">(</span><span class="n">cell</span><span class="p">,</span> <span class="mi">3</span><span class="o">*</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="p">}</span>

  <span class="kt">int</span><span class="o">&amp;</span> <span class="k">operator</span><span class="p">()(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
  <span class="p">{</span> <span class="k">return</span> <span class="n">cell</span><span class="p">[</span><span class="n">x</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="n">y</span><span class="p">];</span> <span class="p">}</span>
  <span class="k">const</span> <span class="kt">int</span><span class="o">&amp;</span> <span class="k">operator</span><span class="p">()(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="k">const</span>
  <span class="p">{</span> <span class="k">return</span> <span class="n">cell</span><span class="p">[</span><span class="n">x</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="n">y</span><span class="p">];</span> <span class="p">}</span>
<span class="p">};</span>
<span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="k">operator</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="n">os</span><span class="p">,</span> <span class="k">const</span> <span class="n">board</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">for</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="o">++</span><span class="n">y</span> <span class="p">)</span> <span class="p">{</span>
    <span class="n">y</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">os</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;-+-+-</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
    <span class="n">os</span> <span class="o">&lt;&lt;</span> <span class="n">b</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">y</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;|&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">b</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;|&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">b</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="n">y</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="n">os</span><span class="p">;</span>
<span class="p">}</span>


<span class="k">class</span> <span class="nc">player</span>
<span class="p">{</span>
  <span class="k">static</span> <span class="kt">int</span> <span class="n">player_id_</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">id_</span><span class="p">;</span>

  <span class="k">protected</span><span class="o">:</span>
  <span class="n">player</span><span class="p">()</span> <span class="o">:</span> <span class="n">id_</span><span class="p">(</span><span class="o">++</span><span class="n">player_id_</span><span class="p">)</span> <span class="p">{}</span>
  <span class="k">virtual</span> <span class="o">~</span><span class="n">player</span><span class="p">();</span>

  <span class="k">public</span><span class="o">:</span>
  <span class="kt">int</span> <span class="n">id</span><span class="p">()</span><span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="n">id_</span><span class="p">;</span> <span class="p">}</span>

  <span class="kt">void</span> <span class="k">operator</span><span class="p">()(</span><span class="n">board</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span> <span class="k">const</span>
  <span class="p">{</span> <span class="n">next</span><span class="p">(</span><span class="n">b</span><span class="p">);</span> <span class="p">}</span>


  <span class="k">private</span><span class="o">:</span>
  <span class="k">virtual</span> <span class="kt">void</span>
    <span class="n">next</span><span class="p">(</span><span class="n">board</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span>
  <span class="k">const</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">};</span>
<span class="kt">int</span> <span class="n">player</span><span class="o">::</span><span class="n">player_id_</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="n">player</span><span class="o">::~</span><span class="n">player</span><span class="p">()</span> <span class="p">{}</span>

<span class="k">class</span> <span class="nc">rand_player</span>
<span class="o">:</span> <span class="k">public</span> <span class="n">player</span>
<span class="p">{</span>
  <span class="kt">void</span> <span class="n">next</span><span class="p">(</span><span class="n">board</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span> <span class="k">const</span><span class="p">;</span>
<span class="p">};</span>
<span class="kt">void</span>
<span class="n">rand_player</span><span class="o">::</span><span class="n">next</span><span class="p">(</span><span class="n">board</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span>
  <span class="k">const</span>
<span class="p">{</span>
  <span class="k">while</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">rand</span><span class="p">()</span> <span class="o">%</span> <span class="mi">3</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">rand</span><span class="p">()</span> <span class="o">%</span> <span class="mi">3</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span> <span class="n">b</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span> <span class="p">{</span>
      <span class="n">b</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span> <span class="o">=</span> <span class="n">id</span><span class="p">();</span>
      <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="k">struct</span> <span class="n">board_checker</span>
<span class="p">{</span>
  <span class="kt">int</span> <span class="k">operator</span><span class="p">()(</span><span class="n">board</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span> <span class="k">const</span><span class="p">;</span>
<span class="p">};</span>

<span class="kt">int</span>
<span class="n">board_checker</span><span class="o">::</span><span class="k">operator</span><span class="p">()(</span><span class="n">board</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span>
  <span class="k">const</span>
<span class="p">{</span>
  <span class="kt">bool</span> <span class="n">draw</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span>
  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">draw</span> <span class="o">&amp;&amp;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="o">++</span><span class="n">x</span> <span class="p">)</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">draw</span> <span class="o">&amp;&amp;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="o">++</span><span class="n">y</span> <span class="p">)</span>
      <span class="n">draw</span> <span class="o">=</span> <span class="n">b</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span> <span class="n">draw</span> <span class="p">)</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
  
  <span class="k">if</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">id</span> <span class="o">=</span> <span class="n">b</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="p">)</span>
    <span class="k">if</span> <span class="p">((</span><span class="n">b</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span> <span class="p">)</span> <span class="o">||</span>
        <span class="p">(</span><span class="n">b</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span><span class="p">)</span> <span class="o">||</span>
        <span class="p">(</span><span class="n">b</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span><span class="p">)</span> <span class="o">||</span>
        <span class="p">(</span><span class="n">b</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span><span class="p">)</span> <span class="p">)</span>
      <span class="k">return</span> <span class="n">id</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">id</span> <span class="o">=</span> <span class="n">b</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="p">)</span>
    <span class="k">if</span> <span class="p">((</span><span class="n">b</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span><span class="p">)</span> <span class="o">||</span>
        <span class="p">(</span><span class="n">b</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span><span class="p">)</span> <span class="p">)</span>
      <span class="k">return</span> <span class="n">id</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">id</span> <span class="o">=</span> <span class="n">b</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="p">)</span>
    <span class="k">if</span> <span class="p">((</span><span class="n">b</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span><span class="p">)</span> <span class="o">||</span>
        <span class="p">(</span><span class="n">b</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="n">id</span><span class="p">)</span> <span class="p">)</span>
      <span class="k">return</span> <span class="n">id</span><span class="p">;</span>

  <span class="c">// not finish</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="n">srand</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">time</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>
  <span class="n">rand_player</span> <span class="n">p1</span><span class="p">,</span> <span class="n">p2</span><span class="p">;</span>
  <span class="n">player</span> <span class="o">*</span><span class="n">p</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="o">&amp;</span><span class="n">p1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">p2</span> <span class="p">};</span>
  <span class="n">board</span> <span class="n">b</span><span class="p">;</span>
  <span class="n">board_checker</span> <span class="n">bc</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">map</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">st</span><span class="p">;</span>
  <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">10000</span>
  <span class="k">for</span> <span class="p">(</span> <span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">max</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span> <span class="p">)</span> <span class="p">{</span>
    <span class="n">b</span><span class="p">.</span><span class="n">reset</span><span class="p">();</span>
    <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span> <span class="mi">1</span> <span class="p">)</span> <span class="p">{</span>
      <span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">[</span><span class="n">count</span><span class="o">++</span> <span class="o">%</span> <span class="mi">2</span><span class="p">])(</span><span class="n">b</span><span class="p">);</span>
<span class="c">//      std::cout &lt;&lt; &quot; i = &quot; &lt;&lt; i &lt;&lt; &quot; step = &quot; &lt;&lt; count &lt;&lt; &quot;\n&quot; &lt;&lt; b;</span>
      <span class="k">if</span> <span class="p">(</span> <span class="n">count</span> <span class="o">&gt;=</span> <span class="mi">4</span> <span class="p">)</span>
        <span class="k">if</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">bc</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
          <span class="n">st</span><span class="p">[</span><span class="n">result</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
          <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;player &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">p1</span><span class="p">.</span><span class="n">id</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; won : &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">st</span><span class="p">[</span><span class="n">p1</span><span class="p">.</span><span class="n">id</span><span class="p">()]</span>
    <span class="o">&lt;&lt;</span> <span class="s">&quot;(&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">st</span><span class="p">[</span><span class="n">p1</span><span class="p">.</span><span class="n">id</span><span class="p">()]</span><span class="o">/</span><span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span><span class="p">(</span><span class="n">max</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;player &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">p2</span><span class="p">.</span><span class="n">id</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">&quot; won : &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">st</span><span class="p">[</span><span class="n">p2</span><span class="p">.</span><span class="n">id</span><span class="p">()]</span>
    <span class="o">&lt;&lt;</span> <span class="s">&quot;(&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">st</span><span class="p">[</span><span class="n">p2</span><span class="p">.</span><span class="n">id</span><span class="p">()]</span><span class="o">/</span><span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span><span class="p">(</span><span class="n">max</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;draw : &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">st</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
    <span class="o">&lt;&lt;</span> <span class="s">&quot;(&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">st</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">/</span><span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span><span class="p">(</span><span class="n">max</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>


  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6204/addtag/" class="addtag" id="addtag_6204">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20080908103508/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6204/download/">
		download code
      </a>]
	  [<a href="/web/20080908103508/http://ja.doukaku.org/comment/6204/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6204"
  >-</span><span
  class="button yellow"
  id="rating_z_6204"
  >0</span><span 
  class="button green"
  id="rating_p_6204"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080908103508/http://ja.doukaku.org/comment/6204/">
    1
    reply
  </a>

  [<a href="/web/20080908103508/http://ja.doukaku.org/173/reply_to/6204/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6205">
  <p class="banner"><a href="/web/20080908103508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080908103508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080908103508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080908103508/http://ja.doukaku.org/comment/6205/">#6205</a>(<script language="JavaScript">print_time(new Date("2008/04/23 12:14 GMT"));</script><noscript>2008/04/23 12:14 GMT</noscript>)
	
	
	
	[<a href="/web/20080908103508/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>こんにちは。
お手軽実装のはずが、コンパイラにおこられて、ソース分割する羽目になりました。
無駄に拡張性を重視したもので、長くなり、冗長になりました。orz
でもその代わりに、長さ3以外もいけます。
あぁ、バグ取りはしましたけど、保障はしません。</p>
<p>result:
Player1[5853] Player2[2865] Draw[1282]</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219</pre></td><td class="code"><div class="highlight"><pre><span class="c">//////////////////////Main.cpp////////////////////////////</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;time.h&gt;</span>
<span class="cp">#include &lt;stdio.h&gt;</span>

<span class="cp">#include &quot;MBGame.h&quot;</span>
<span class="cp">#include &quot;Player.h&quot;</span>

<span class="kt">void</span> <span class="n">ShowVisual</span><span class="p">(</span><span class="n">MBGame</span><span class="o">&amp;</span> <span class="n">in</span><span class="p">){</span>
    <span class="n">Mark</span> <span class="n">V</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">in</span><span class="p">.</span><span class="n">Length</span><span class="p">();</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">in</span><span class="p">.</span><span class="n">Length</span><span class="p">();</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
                <span class="n">V</span><span class="o">=</span><span class="n">in</span><span class="p">.</span><span class="n">At</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">V</span> <span class="o">==</span> <span class="n">None</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;+&quot;</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">V</span> <span class="o">==</span> <span class="n">Maru</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;O&quot;</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">V</span> <span class="o">==</span> <span class="n">Batu</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;X&quot;</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
        <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">Len</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
    <span class="n">MBGame</span> <span class="n">mbg</span><span class="p">(</span><span class="n">Len</span><span class="p">);</span>
    <span class="n">Player</span> <span class="n">A</span><span class="p">,</span><span class="n">B</span><span class="p">;</span>
    <span class="n">Mark</span> <span class="n">F</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">P1</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">P2</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">D</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="c">//srand(time(NULL));</span>
    <span class="n">mbg</span><span class="p">.</span><span class="n">SetPlayer</span><span class="p">(</span><span class="n">A</span><span class="p">,</span><span class="n">B</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">c</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">;</span><span class="n">c</span><span class="o">++</span><span class="p">){</span>
        <span class="n">mbg</span><span class="p">.</span><span class="n">Init</span><span class="p">(</span><span class="n">Len</span><span class="p">);</span>
        <span class="n">F</span> <span class="o">=</span> <span class="n">mbg</span><span class="p">.</span><span class="n">Play</span><span class="p">();</span>
        <span class="k">if</span><span class="p">(</span><span class="n">F</span> <span class="o">==</span> <span class="n">None</span><span class="p">)</span> <span class="p">{</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;[%d] Draw!!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">c</span><span class="p">);</span><span class="n">D</span><span class="o">++</span><span class="p">;}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">F</span> <span class="o">==</span> <span class="n">Maru</span><span class="p">)</span> <span class="p">{</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;[%d] O Win!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">c</span><span class="p">);</span><span class="n">P1</span><span class="o">++</span><span class="p">;}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">F</span> <span class="o">==</span> <span class="n">Batu</span><span class="p">)</span> <span class="p">{</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;[%d] X Win!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">c</span><span class="p">);</span><span class="n">P2</span><span class="o">++</span><span class="p">;}</span>
        <span class="n">ShowVisual</span><spa>




<!--
     FILE ARCHIVED ON 10:35:08 Sep 8, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 13:08:02 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
