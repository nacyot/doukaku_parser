
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
exp(pi * sqrt(n))が整数に近くなるnを探す
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20090221103043cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20090221103043cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20090221103043cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20090221103043/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20090221103043/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20090221103043js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20090221103043js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20090221103043js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20090221103043js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app15.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/60\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "21";
var displayMonth = "Feb";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/60/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090221103043" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20081202203938/http://ja.doukaku.org/60/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="2 Dec 2008"><strong>DEC</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 10:30:43 Feb 21, 2009">FEB</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Mar
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20081202203938/http://ja.doukaku.org/60/flatten/" title="20:39:38 Dec 2, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 10:30:43 Feb 21, 2009">21</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080205094410/http://ja.doukaku.org/60/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="5 Feb 2008"><strong>2008</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 10:30:43 Feb 21, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20090221103043*/http://ja.doukaku.org/60/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>5 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 21 Feb 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000000_2008:-1:010100000001_2009:1:010000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20090221103043/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20090221103043/http://ja.doukaku.org/60/">exp(pi * sqrt(n))が整数に近くなるnを探す</a>
</h2>

    





<div class="comment" id="comment3416">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/564/" target="_top">herumi</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3416/">#3416</a>(<script language="JavaScript">print_time(new Date("2007/09/14 13:31 GMT"));</script><noscript>2007/09/14 13:31 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  1以上200未満の整数nのうち、
exp(pi * sqrt(n))がほとんど整数であるようなnを求めるコードを書いてください。
なお、expは底がeである<a href="/web/20090221103043/http://ja.wikipedia.org/wiki/%E6%8C%87%E6%95%B0%E9%96%A2%E6%95%B0">指数関数 - Wikipedia</a>、
piは円周率、sqrtは平方根です。また「ほとんど整数である」とは
整数からプラスマイナス0.0001の範囲にあることとします。 
<p>
Pythonで34行のスクリプトを書いて得られた出力の例が下のようになります。
<pre>
37 199148647.999978
58 24591257752.000000
67 147197952743.999999
163 262537412640768744.000000 
</pre>
この問題は光成さんに教えて頂いた
<a href="/web/20090221103043/http://www.kaynet.or.jp/~kay/misc/epi163.html">e^{π*sqrt{163}}≒26253741640768744</a>
が元になっています。ご協力ありがとうございました。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3416/addtag/" class="addtag" id="addtag_3416">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3416"
  >-</span><span
  class="button yellow"
  id="rating_z_3416"
  >0</span><span 
  class="button green"
  id="rating_p_3416"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3416/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20090221103043/http://ja.doukaku.org/60/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - フラット表示</h2>
<a href="/web/20090221103043/http://ja.doukaku.org/60/nested/">ネスト表示</a>
<a href="/web/20090221103043/http://ja.doukaku.org/60/">非表示</a> 


  
  




<div class="comment" id="comment3016">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/428/" target="_top">Y</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3016/">#3016</a>(<script language="JavaScript">print_time(new Date("2007/09/14 14:29 GMT"));</script><noscript>2007/09/14 14:29 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/mathematica/">
	  Mathematica
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>1から199まで(Range)の整数から、選ぶ(Select)、
基準は、
「x=Exp[Pi Sqrt[n]]として(With)、Abs[x-Round@x]が10^-4以下のもの」

「10^-4を0.0001と書いてはいけない」という問題かな</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="highlight"><pre>Select[Range@199,
  Function[{n}, 
    With[{x = Exp[Pi Sqrt@n]},
      Abs[x - Round@x] &lt;= 10^-4]]]
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3016/addtag/" class="addtag" id="addtag_3016">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/mathematica/">
		Mathematica
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3016/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3016/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3016"
  >-</span><span
  class="button yellow"
  id="rating_z_3016"
  >0</span><span 
  class="button green"
  id="rating_p_3016"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090221103043/http://ja.doukaku.org/comment/3016/">
    1
    reply
  </a>

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3016/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3018">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3018/">#3018</a>(<script language="JavaScript">print_time(new Date("2007/09/14 15:16 GMT"));</script><noscript>2007/09/14 15:16 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>もともとかなり古いライブラリだけど。。。使い勝手は悪くないと思う。

CReal モジュールを使う

このモジュールではデフォルトで小数点以下40桁まで表示。</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090221103043/http://darcs.augustsson.net/Darcs/CReal/">CReal</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Main</span> <span class="p">(</span><span class="nv">main</span><span class="p">)</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">CReal</span>

<span class="kr">default</span> <span class="p">(</span><span class="n">CReal</span><span class="p">)</span>

<span class="nv">f</span> <span class="o">::</span> <span class="n">CReal</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Int</span><span class="p">,</span> <span class="n">CReal</span><span class="p">)</span>
<span class="nv">f</span> <span class="nv">n</span> <span class="o">=</span> <span class="p">(</span><span class="nv">ceiling</span> <span class="nv">n</span><span class="p">,</span> <span class="nv">exp</span> <span class="o">$</span> <span class="nv">pi</span> <span class="o">*</span> <span class="nv">sqrt</span> <span class="nv">n</span><span class="p">)</span>

<span class="nv">g</span> <span class="o">::</span> <span class="n">CReal</span> <span class="o">-&gt;</span> <span class="n">Bool</span>
<span class="nv">g</span> <span class="nv">n</span> <span class="o">=</span> <span class="mf">0.0001</span> <span class="o">&gt;</span> <span class="kr">if</span> <span class="mf">0.5</span> <span class="o">&gt;</span> <span class="nv">n&#39;</span> <span class="o">-</span> <span class="nv">n</span> <span class="kr">then</span> <span class="nv">n&#39;</span> <span class="o">-</span> <span class="nv">n</span> <span class="kr">else</span> <span class="mi">1</span> <span class="o">-</span> <span class="p">(</span><span class="nv">n&#39;</span> <span class="o">-</span> <span class="nv">n</span><span class="p">)</span>
  <span class="kr">where</span> <span class="nv">n&#39;</span> <span class="o">=</span> <span class="nv">fromInteger</span> <span class="o">$</span> <span class="nv">ceiling</span> <span class="nv">n</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="nv">mapM_</span>  <span class="p">(</span><span class="nv">putStrLn</span> <span class="o">.</span> <span class="nv">show</span><span class="p">)</span> <span class="o">$</span> <span class="nv">filter</span> <span class="p">(</span><span class="nv">g</span> <span class="o">.</span> <span class="nv">snd</span><span class="p">)</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">f</span> <span class="o">$</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="mi">200</span><span class="p">]</span>

<span class="cm">{-</span>
<span class="cm">*Main&gt; :main</span>
<span class="cm">(37,199148647.9999780465518567665009238753359004336659)</span>
<span class="cm">(58,24591257751.9999998222132414695761923552658122276102)</span>
<span class="cm">(67,147197952743.9999986624542245068292613125786285081833)</span>
<span class="cm">(163,262537412640768743.9999999999992500725971981856888793538563)</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3018/addtag/" class="addtag" id="addtag_3018">タグ</a>:
	
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/CReal/">CReal</a>
    
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3018/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3018/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3018"
  >-</span><span
  class="button yellow"
  id="rating_z_3018"
  >0</span><span 
  class="button green"
  id="rating_p_3018"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090221103043/http://ja.doukaku.org/comment/3018/">
    3
    replies
  </a>

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3018/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3019">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3019/">#3019</a>(<script language="JavaScript">print_time(new Date("2007/09/14 15:21 GMT"));</script><noscript>2007/09/14 15:21 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>あっ。200未満か。まぁいいか。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3019/addtag/" class="addtag" id="addtag_3019">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3019"
  >-</span><span
  class="button yellow"
  id="rating_z_3019"
  >0</span><span 
  class="button green"
  id="rating_p_3019"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3018/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3019/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3019/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3020">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/24/" target="_top">ココサブ</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3020/">#3020</a>(<script language="JavaScript">print_time(new Date("2007/09/14 17:06 GMT"));</script><noscript>2007/09/14 17:06 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffdfdf;">-2/2=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>GNU拡張使用。
精度の問題か163はひっかからず。

実行結果は
37 199148647.999978
58 24591257752.000000
67 147197952743.999999</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#define __USE_GNU</span>
<span class="cp">#include &lt;math.h&gt;</span>

<span class="kt">void</span> <span class="nf">func</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">long</span> <span class="kt">double</span> <span class="n">d</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">n_normal</span><span class="p">,</span> <span class="n">n_plus</span><span class="p">,</span> <span class="n">n_minus</span><span class="p">;</span>

    <span class="c">/* exp(pi * sqrt(n)) を求める */</span>
    <span class="n">d</span> <span class="o">=</span> <span class="n">expl</span><span class="p">(</span><span class="n">M_PIl</span> <span class="o">*</span> <span class="n">sqrtl</span><span class="p">((</span><span class="kt">double</span><span class="p">)</span><span class="n">n</span><span class="p">));</span>

    <span class="c">/* 精度倍する。1を加減算して桁上がりするか */</span>
    <span class="n">n_normal</span> <span class="o">=</span> <span class="n">fmodl</span><span class="p">(</span><span class="n">d</span><span class="o">*</span><span class="mf">10000.0</span><span class="p">,</span> <span class="mf">10000.0</span><span class="p">);</span>
    <span class="n">n_plus</span>   <span class="o">=</span> <span class="n">n_normal</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="n">n_minus</span>  <span class="o">=</span> <span class="n">n_normal</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">((</span><span class="n">n_normal</span> <span class="o">%</span> <span class="mi">10000</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span>
     <span class="o">||</span> <span class="p">(</span><span class="n">n_plus</span>   <span class="o">%</span> <span class="mi">10000</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span>
     <span class="o">||</span> <span class="p">(</span><span class="n">n_minus</span>  <span class="o">%</span> <span class="mi">10000</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d %Lf</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">d</span><span class="p">);</span> 
    <span class="p">}</span>   
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
                                                                        
    <span class="k">for</span> <span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">200</span><span class="p">;</span> <span class="n">n</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>                                         
        <span class="n">func</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3020/addtag/" class="addtag" id="addtag_3020">タグ</a>:
	
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/GNU/">GNU</a>
    
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3020/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3020/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffdfdf;"
  >-2/2=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3020"
  >-</span><span
  class="button yellow"
  id="rating_z_3020"
  >0</span><span 
  class="button green"
  id="rating_p_3020"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090221103043/http://ja.doukaku.org/comment/3020/">
    1
    reply
  </a>

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3020/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3021">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3021/">#3021</a>(<script language="JavaScript">print_time(new Date("2007/09/14 17:06 GMT"));</script><noscript>2007/09/14 17:06 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>&gt;「10^-4を0.0001と書いてはいけない」

そうなんですか？</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3021/addtag/" class="addtag" id="addtag_3021">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3021"
  >-</span><span
  class="button yellow"
  id="rating_z_3021"
  >0</span><span 
  class="button green"
  id="rating_p_3021"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3016/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3021/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3021/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3022">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3022/">#3022</a>(<script language="JavaScript">print_time(new Date("2007/09/14 17:32 GMT"));</script><noscript>2007/09/14 17:32 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>ええと、long doubleは18桁くらいの精度ですよね。
67の計算には足りて、163の計算には足りないのでしょうね、きっと。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3022/addtag/" class="addtag" id="addtag_3022">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3022"
  >-</span><span
  class="button yellow"
  id="rating_z_3022"
  >0</span><span 
  class="button green"
  id="rating_p_3022"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3020/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3022/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3022/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3023">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3023/">#3023</a>(<script language="JavaScript">print_time(new Date("2007/09/14 17:51 GMT"));</script><noscript>2007/09/14 17:51 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
<p>Apfloatを使いました。
</p>
<p>それだけじゃ何も芸がない感じだったので、implicitでApfloatをあまり意識せずに書ける様にしました。
</p>



	</div>
	
	<p class="link">
	  参考: <a href="/web/20090221103043/http://www.apfloat.org/apfloat_java/">Apfloat</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre>import org.apfloat._
import scala.runtime._

object findAlmostInt {
  implicit def toApfloat[A &lt;: AnyVal](i:A):Apfloat = {
    new Apfloat(i.toString, 32)
  }
  implicit def toDouble(i:Apfloat):RichDouble = i.doubleValue.toDouble
  val PI = ApfloatMath.pi(32)

  def apply(i:int, j:int) = {
    (i to j-1).filter{n =&gt;
      val x = ApfloatMath.exp(PI.multiply(ApfloatMath.sqrt(n)))
      val y = x.ceil.subtract(x)
      (if(y&lt;0.5){y}else{1.subtract(y)}).abs &lt; 0.0001
    }.toList
  }
}

println(findAlmostInt(1,200))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3023/addtag/" class="addtag" id="addtag_3023">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3023/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3023/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3023"
  >-</span><span
  class="button yellow"
  id="rating_z_3023"
  >0</span><span 
  class="button green"
  id="rating_p_3023"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090221103043/http://ja.doukaku.org/comment/3023/">
    1
    reply
  </a>

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3023/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3024">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3024/">#3024</a>(<script language="JavaScript">print_time(new Date("2007/09/14 19:12 GMT"));</script><noscript>2007/09/14 19:12 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Decimalを使って多倍長計算。sqrtは組み込みのものを使い、expは安直にマクローリン展開で収束するまで回しています。psycoを使ってますが、それでもかなり遅いです。
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090221103043/http://d.hatena.ne.jp/piro_suke/20070822/1187756537">Pythonで10進数計算したり数値を丸めたりする</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="k">from</span> <span class="nn">decimal</span> <span class="k">import</span> <span class="o">*</span>
<span class="k">import</span> <span class="nn">itertools</span>

<span class="k">def</span> <span class="nf">decimal_exp</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
    <span class="n">curr</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">bunbo</span> <span class="o">=</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;1.0&quot;</span><span class="p">),</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;1.0&quot;</span><span class="p">),</span> <span class="mi">1</span>
    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">itertools</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">bunsi</span> <span class="o">*=</span> <span class="n">x</span>
        <span class="n">bunbo</span> <span class="o">*=</span> <span class="n">k</span>
        <span class="n">next</span> <span class="o">=</span> <span class="n">curr</span> <span class="o">+</span> <span class="n">bunsi</span> <span class="o">/</span> <span class="n">bunbo</span>
        <span class="k">if</span> <span class="n">curr</span> <span class="o">==</span> <span class="n">next</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">curr</span>
        <span class="n">curr</span> <span class="o">=</span> <span class="n">next</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">pi</span> <span class="o">=</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;3.141592653589793238462643383279&quot;</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">200</span><span class="p">):</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">decimal_exp</span><span class="p">(</span><span class="n">pi</span> <span class="o">*</span> <span class="n">Decimal</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">.</span><span class="n">sqrt</span><span class="p">())</span> <span class="c"># result</span>
        <span class="n">i</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">quantize</span><span class="p">(</span><span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;1.0&quot;</span><span class="p">),</span> <span class="n">rounding</span><span class="o">=</span><span class="n">ROUND_HALF_UP</span><span class="p">)</span> <span class="c"># nearest integer</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="o">-</span> <span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">quantize</span><span class="p">(</span><span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;0.00001&quot;</span><span class="p">),</span> <span class="n">rounding</span><span class="o">=</span><span class="n">ROUND_DOWN</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="k">print</span> <span class="n">n</span><span class="p">,</span> <span class="n">x</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">import</span> <span class="nn">psyco</span>
    <span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
        <span class="k">pass</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">psyco</span><span class="o">.</span><span class="n">full</span><span class="p">()</span>
    <span class="n">main</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3024/addtag/" class="addtag" id="addtag_3024">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3024/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3024/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3024"
  >-</span><span
  class="button yellow"
  id="rating_z_3024"
  >0</span><span 
  class="button green"
  id="rating_p_3024"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090221103043/http://ja.doukaku.org/comment/3024/">
    3
    replies
  </a>

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3024/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3025">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3025/">#3025</a>(<script language="JavaScript">print_time(new Date("2007/09/15 06:18 GMT"));</script><noscript>2007/09/15 06:18 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  あああ、すみません。組み終わった後に&nbsp;".00..."&nbsp;という表記を自分好みの&nbsp;"0.00.."&nbsp;という表記に書き換えたときにエンバグしちゃったみたいで、37&nbsp;が表示されなくなってました。プラス評価もらったのに申し訳ない。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="gd">--- a.orig	Sat Sep 15 15:12:33 2007</span>
<span class="gi">+++ a.py	Sat Sep 15 15:12:50 2007</span>
<span class="gu">@@ -16,7 +16,7 @@</span>
     for n in xrange(1, 200):
         x = decimal_exp(pi * Decimal(n).sqrt()) # result
         i = x.quantize(Decimal(&quot;1.0&quot;), rounding=ROUND_HALF_UP) # nearest integer
<span class="gd">-        if (x - i).quantize(Decimal(&quot;0.00001&quot;), rounding=ROUND_DOWN) == 0:</span>
<span class="gi">+        if (x - i).quantize(Decimal(&quot;0.0001&quot;), rounding=ROUND_DOWN) == 0:</span>
             print n, x
 
 if __name__ == &#39;__main__&#39;:
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3025/addtag/" class="addtag" id="addtag_3025">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3025/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3025/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3025"
  >-</span><span
  class="button yellow"
  id="rating_z_3025"
  >0</span><span 
  class="button green"
  id="rating_p_3025"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3024/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3025/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3025/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3026">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3026/">#3026</a>(<script language="JavaScript">print_time(new Date("2007/09/15 09:04 GMT"));</script><noscript>2007/09/15 09:04 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>f の定義がちょっとアレげなので、リファクタリング

f :: Integer -&gt; (Integer, CReal)
f n = (n, exp $ pi * sqrt (fromInteger n))
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3026/addtag/" class="addtag" id="addtag_3026">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3026"
  >-</span><span
  class="button yellow"
  id="rating_z_3026"
  >0</span><span 
  class="button green"
  id="rating_p_3026"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3018/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3026/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3026/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3027">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/380/" target="_top">vtwntmtn</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3027/">#3027</a>(<script language="JavaScript">print_time(new Date("2007/09/15 09:21 GMT"));</script><noscript>2007/09/15 09:21 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>素直にbigdecimalを使って。</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090221103043/http://www.ruby-lang.org/ja/man/?cmd=view;name=BigDecimal">Rubyリファレンスマニュアル - bigdecimal</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s2">&quot;bigdecimal&quot;</span>
<span class="nb">require</span> <span class="s2">&quot;bigdecimal/math.rb&quot;</span>

<span class="kp">include</span> <span class="no">BigMath</span>

<span class="k">def</span> <span class="nf">exp_pi_sqrt</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
  <span class="n">tmp</span> <span class="o">=</span> <span class="n">exp</span><span class="p">(</span><span class="no">PI</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span> <span class="o">*</span> <span class="n">sqrt</span><span class="p">(</span><span class="no">BigDecimal</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">to_s</span><span class="p">),</span> <span class="mi">30</span><span class="p">),</span> <span class="mi">30</span><span class="p">)</span>
  <span class="n">err</span> <span class="o">=</span> <span class="no">BigDecimal</span> <span class="mi">0</span><span class="o">.</span><span class="mo">0001</span><span class="o">.</span><span class="n">to_s</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">tmp</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">tmp</span><span class="o">.</span><span class="n">floor</span> <span class="o">-</span> <span class="n">err</span><span class="p">))</span> <span class="ow">and</span> <span class="p">(</span><span class="n">tmp</span> <span class="o">&lt;</span> <span class="p">(</span><span class="n">tmp</span><span class="o">.</span><span class="n">floor</span> <span class="o">+</span> <span class="n">err</span><span class="p">))</span>
    <span class="nb">print</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">x</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">tmp</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="s2">&quot;F&quot;</span><span class="p">)</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
  <span class="k">elsif</span> <span class="p">(</span><span class="n">tmp</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">tmp</span><span class="o">.</span><span class="n">ceil</span> <span class="o">-</span> <span class="n">err</span><span class="p">))</span> <span class="ow">and</span> <span class="p">(</span><span class="n">tmp</span> <span class="o">&lt;</span> <span class="p">(</span><span class="n">tmp</span><span class="o">.</span><span class="n">ceil</span> <span class="o">+</span> <span class="n">err</span><span class="p">))</span>
    <span class="nb">print</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">x</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">tmp</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="s2">&quot;F&quot;</span><span class="p">)</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="cm">=begin</span>
<span class="cm">for i in 1 .. 200</span>
<span class="cm">  exp_pi_sqrt i</span>
<span class="cm">end</span>
<span class="cm">=end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3027/addtag/" class="addtag" id="addtag_3027">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3027/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3027/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3027"
  >-</span><span
  class="button yellow"
  id="rating_z_3027"
  >0</span><span 
  class="button green"
  id="rating_p_3027"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3027/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3028">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3028/">#3028</a>(<script language="JavaScript">print_time(new Date("2007/09/15 10:39 GMT"));</script><noscript>2007/09/15 10:39 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  強引に解いてみました。BigDecimalを使用していますがライブラリがないので自前で計算しています。expの計算方法が非効率的なので非常に時間がかかります（苦笑）。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.math.MathContext</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">double</span> <span class="n">EPS</span> <span class="o">=</span> <span class="mf">0.000001</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">double</span> <span class="n">EPS2</span> <span class="o">=</span> <span class="mi">1</span><span class="n">e</span><span class="o">-</span><span class="mi">25</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">BigDecimal</span> <span class="n">TWO</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">BigDecimal</span> <span class="n">PI</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span>
        <span class="o">(</span><span class="s">&quot;3.1415926535897932384626433&quot;</span><span class="o">);</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">BigDecimal</span> <span class="n">exp</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="n">BigDecimal</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">i</span><span class="o">++);</span>
        <span class="n">BigDecimal</span> <span class="n">c</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
        <span class="n">BigDecimal</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="mf">1.0</span><span class="o">);</span>
        <span class="n">BigDecimal</span> <span class="n">d</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">((</span><span class="n">d</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">divide</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="n">MathContext</span><span class="o">.</span><span class="na">DECIMAL128</span><span class="o">)).</span><span class="na">doubleValue</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">EPS</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">d</span><span class="o">);</span>
            <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">i</span><span class="o">++));</span>
            <span class="n">c</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">x</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">a</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="n">BigDecimal</span> <span class="n">sqrt</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">BigDecimal</span> <span class="n">x</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
        <span class="n">BigDecimal</span> <span class="n">delta</span><span class="o">;</span>
        <span class="k">do</span> <span class="o">{</span>
            <span class="n">delta</span> <span class="o">=</span> <span class="o">(</span><span class="n">x</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">x</span><span class="o">).</span><span class="na">subtract</span><span class="o">(</span><span class="n">a</span><span class="o">)).</span><span class="na">divide</span><span class="o">(</span><span class="n">TWO</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">x</span><span class="o">),</span> 
                                                       <span class="n">MathContext</span><span class="o">.</span><span class="na">DECIMAL128</span><span class="o">);</span>
            <span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="na">subtract</span><span class="o">(</span><span class="n">delta</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">delta</span><span class="o">.</span><span class="na">abs</span><span class="o">().</span><span class="na">doubleValue</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">EPS2</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">x</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">200</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">BigDecimal</span> <span class="n">er</span> <span class="o">=</span> <span class="n">exp</span><span class="o">(</span><span class="n">PI</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">sqrt</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">i</span><span class="o">))));</span>
            <span class="n">BigDecimal</span> <span class="n">rer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">er</span><span class="o">.</span><span class="na">toBigInteger</span><span class="o">());</span>
            <span class="kt">double</span> <span class="n">a</span> <span class="o">=</span> <span class="n">er</span><span class="o">.</span><span class="na">subtract</span><span class="o">(</span><span class="n">rer</span><span class="o">).</span><span class="na">doubleValue</span><span class="o">();</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">&lt;</span> <span class="mf">0.0001</span> <span class="o">||</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mf">0.9999</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%d: %f%n&quot;</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">er</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3028/addtag/" class="addtag" id="addtag_3028">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3028/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3028/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3028"
  >-</span><span
  class="button yellow"
  id="rating_z_3028"
  >0</span><span 
  class="button green"
  id="rating_p_3028"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090221103043/http://ja.doukaku.org/comment/3028/">
    1
    reply
  </a>

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3028/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3029">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/190/" target="_top">fkmn</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3029/">#3029</a>(<script language="JavaScript">print_time(new Date("2007/09/15 14:02 GMT"));</script><noscript>2007/09/15 14:02 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>ふつうに Math::BigFloat を使ってます。

実行結果：
37 =&gt; 199148647.99997804655185676650092387533591914368128
58 =&gt; 24591257751.999999822213241469576192355288556885837
67 =&gt; 147197952743.99999866245422450682926131235350749310
163 =&gt; 262537412640768743.99999999999925007259524857371873</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Math::</span><span class="n">BigFloat</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">$diff</span> <span class="o">=</span> <span class="mi">0</span><span class="o">.</span><span class="mo">0001</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$pi</span>   <span class="o">=</span> <span class="nn">Math::</span><span class="n">BigFloat</span><span class="o">-&gt;</span><span class="n">bpi</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span>

<span class="k">sub </span><span class="nf">exp_pi_sqrt</span> <span class="p">($)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nb">exp</span><span class="p">(</span> <span class="nv">$pi</span> <span class="o">*</span> <span class="nn">Math::</span><span class="n">BigFloat</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">)</span><span class="o">-&gt;</span><span class="n">bsqrt</span> <span class="p">);</span>
<span class="p">}</span>

<span class="k">print</span><span class="p">(</span> <span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="s">&quot; =&gt; &quot;</span><span class="p">,</span> <span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="s">&quot;\n&quot;</span> <span class="p">)</span> <span class="k">for</span> 
    <span class="nb">grep</span> <span class="p">{</span>
           <span class="nb">abs</span><span class="p">(</span> <span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">copy</span><span class="o">-&gt;</span><span class="n">bfloor</span> <span class="p">)</span>  <span class="o">&lt;=</span> <span class="nv">$diff</span>
        <span class="o">||</span> <span class="nb">abs</span><span class="p">(</span> <span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">copy</span><span class="o">-&gt;</span><span class="n">bceil</span>  <span class="p">)</span>  <span class="o">&lt;=</span> <span class="nv">$diff</span>
    <span class="p">}</span>
    <span class="nb">map</span> <span class="p">{</span> <span class="p">[</span> <span class="nv">$_</span> <span class="o">=&gt;</span> <span class="n">exp_pi_sqrt</span><span class="p">(</span><span class="nv">$_</span><span class="p">)</span> <span class="p">]</span> <span class="p">}</span> <span class="mi">1</span> <span class="o">..</span> <span class="mi">200</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3029/addtag/" class="addtag" id="addtag_3029">タグ</a>:
	
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/Math%3A%3ABigFloat/">Math::BigFloat</a>
    
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3029/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3029/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3029"
  >-</span><span
  class="button yellow"
  id="rating_z_3029"
  >0</span><span 
  class="button green"
  id="rating_p_3029"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3029/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3030">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3030/">#3030</a>(<script language="JavaScript">print_time(new Date("2007/09/15 14:55 GMT"));</script><noscript>2007/09/15 14:55 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>どう書く.orgさんの趣旨に沿っているか分かりませんが、プログラマブル電卓を使用しました☆
使い方は、コードをコピペして
　編集→クリップボードを実行
です☆</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090221103043/http://www.vector.co.jp/soft/win95/personal/se242555.html">多倍長電卓LM</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="highlight"><pre>for(n=1;n&lt;200;n++)
  if((exp(pi*sqrt(n))*10000+1)%10000&lt;2)
    printf(&quot;%d %.99f\n&quot;,n,exp(pi*sqrt(n)));
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3030/addtag/" class="addtag" id="addtag_3030">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3030/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3030/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3030"
  >-</span><span
  class="button yellow"
  id="rating_z_3030"
  >0</span><span 
  class="button green"
  id="rating_p_3030"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3030/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3031">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/438/" target="_top">koguro</a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3031/">#3031</a>(<script language="JavaScript">print_time(new Date("2007/09/15 15:03 GMT"));</script><noscript>2007/09/15 15:03 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Gaucheだと任意精度の小数が扱えないので基本的に有理数で計算しています。
ただしまともにやるととんでもない時間がかかるので、以下のように計算をはしょっています。
(1) 問題は「整数に近いかどうか？」というものなので、exp(pi*sqrt(n))を級数展開した
ときの各項では小数部分のみ計算している。これで、各項の最終的な精度はdoubleで十分になる。
(2) 分母、分子の桁数が大きくなるのを防ぐため、偶数項と奇数項で計算を分けている
(偶数項ではnの平方根はいらなくなるから)。

とはいえ、これでも結構時間がかかっていて、MacPro 3GHzで1500秒程度でした。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-1</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">calc-pi</span> <span class="nv">k</span><span class="p">)</span>
  <span class="p">(</span><span class="k">do </span><span class="p">((</span><span class="nf">n</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">n</span> <span class="mi">1</span><span class="p">))</span>
       <span class="p">(</span><span class="nf">a</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">* </span><span class="nv">a</span> <span class="p">(</span><span class="nb">- </span><span class="p">(</span><span class="nb">* </span><span class="mi">4</span> <span class="nv">n</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nb">* </span><span class="mi">2</span> <span class="nv">n</span><span class="p">))))</span>
       <span class="p">(</span><span class="nf">b</span> <span class="mi">2</span> <span class="p">(</span><span class="nb">* </span><span class="nv">b</span> <span class="mi">16</span><span class="p">))</span>
       <span class="p">(</span><span class="nf">c</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">* </span><span class="nv">c</span> <span class="nv">n</span><span class="p">))</span>
       <span class="p">(</span><span class="nf">p</span> <span class="mi">0</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">p</span> <span class="p">(</span><span class="nb">/ </span><span class="nv">a</span> <span class="p">(</span><span class="nb">* </span><span class="nv">b</span> <span class="nv">c</span> <span class="nv">c</span> <span class="p">(</span><span class="nb">- </span><span class="p">(</span><span class="nb">* </span><span class="mi">2</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">1</span><span class="p">))))))</span>
      <span class="p">((</span><span class="nb">&lt;= </span><span class="nv">k</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nb">* </span><span class="mi">6</span> <span class="nv">p</span><span class="p">))))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">%sqrt*</span> <span class="nv">a</span> <span class="nv">n</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">root</span> <span class="p">(</span><span class="nb">sqrt </span><span class="nv">a</span><span class="p">)))</span>
    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">= </span><span class="p">(</span><span class="nb">* </span><span class="nv">root</span> <span class="nv">root</span><span class="p">)</span> <span class="nv">a</span><span class="p">)</span>
        <span class="p">(</span><span class="nb">inexact-&gt;exact </span><span class="nv">root</span><span class="p">)</span>
        <span class="p">(</span><span class="k">do </span><span class="p">((</span><span class="nf">i</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">))</span>
             <span class="p">(</span><span class="nf">xn</span> <span class="nv">a</span> <span class="p">(</span><span class="nb">/ </span><span class="p">(</span><span class="nb">+ </span><span class="nv">xn</span> <span class="p">(</span><span class="nb">/ </span><span class="nv">a</span> <span class="nv">xn</span><span class="p">))</span> <span class="mi">2</span><span class="p">)))</span>
            <span class="p">((</span><span class="nb">&lt;= </span><span class="nv">n</span> <span class="nv">i</span><span class="p">)</span> <span class="nv">xn</span><span class="p">)))))</span>

<span class="p">(</span><span class="k">define </span><span class="nv">sqrt*</span> <span class="p">(</span><span class="nf">cut</span> <span class="nv">%sqrt*</span> <span class="nv">&lt;&gt;</span> <span class="mi">10</span><span class="p">))</span>

<span class="p">(</span><span class="k">define </span><span class="nv">pi*</span> <span class="p">(</span><span class="nf">calc-pi</span> <span class="mi">50</span><span class="p">))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">fract/</span> <span class="nv">n</span> <span class="nv">d</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">str-&gt;dbl</span> <span class="nv">str</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">string-&gt;number</span>
     <span class="p">(</span><span class="nb">string-append </span><span class="s">&quot;0.&quot;</span> <span class="p">(</span><span class="nb">substring </span><span class="nv">str</span> <span class="mi">0</span> <span class="p">(</span><span class="nb">min </span><span class="mi">15</span> <span class="p">(</span><span class="nb">string-length </span><span class="nv">str</span><span class="p">))))))</span>
  <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">dstr</span> <span class="p">(</span><span class="nb">number-&gt;string </span><span class="nv">d</span><span class="p">))</span>
        <span class="p">(</span><span class="nf">nstr</span> <span class="p">(</span><span class="nb">number-&gt;string </span><span class="p">(</span><span class="nb">modulo </span><span class="nv">n</span> <span class="nv">d</span><span class="p">))))</span>
    <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">d*</span> <span class="p">(</span><span class="nf">str-&gt;dbl</span> <span class="nv">dstr</span><span class="p">))</span>
          <span class="p">(</span><span class="nf">n*</span> <span class="p">(</span><span class="nf">str-&gt;dbl</span> <span class="nv">nstr</span><span class="p">)))</span>
      <span class="p">(</span><span class="nf">/</span><span class="o">.</span> <span class="nv">n*</span> <span class="nv">d*</span> <span class="p">(</span><span class="nb">expt </span><span class="mi">10</span> <span class="p">(</span><span class="nb">- </span><span class="p">(</span><span class="nb">string-length </span><span class="nv">dstr</span><span class="p">)</span> <span class="p">(</span><span class="nb">string-length </span><span class="nv">nstr</span><span class="p">)))))))</span>
    
<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">%fract-exp-pi*</span> <span class="nv">n</span> <span class="nv">epsilon</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">q1</span> <span class="p">(</span><span class="nf">sqrt*</span> <span class="nv">n</span><span class="p">)))</span>
    <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">pin</span> <span class="p">(</span><span class="nb">numerator </span><span class="nv">pi*</span><span class="p">))</span>
          <span class="p">(</span><span class="nf">pid</span> <span class="p">(</span><span class="nb">denominator </span><span class="nv">pi*</span><span class="p">))</span>
          <span class="p">(</span><span class="nf">q1n</span> <span class="p">(</span><span class="nb">numerator </span><span class="nv">q1</span><span class="p">))</span>
          <span class="p">(</span><span class="nf">q1d</span> <span class="p">(</span><span class="nb">denominator </span><span class="nv">q1</span><span class="p">)))</span>
      <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">odd-term</span> <span class="nv">i</span> <span class="nv">pn</span> <span class="nv">pd</span> <span class="nv">fract</span><span class="p">)</span>
        <span class="p">(</span><span class="k">let* </span><span class="p">((</span><span class="nf">new-pn</span> <span class="p">(</span><span class="nb">* </span><span class="nv">pn</span> <span class="nv">pin</span><span class="p">))</span>
               <span class="p">(</span><span class="nf">new-pd</span> <span class="p">(</span><span class="nb">* </span><span class="nv">pd</span> <span class="nv">pid</span> <span class="nv">i</span><span class="p">))</span>
               <span class="p">(</span><span class="nf">af</span> <span class="p">(</span><span class="nf">fract/</span> <span class="p">(</span><span class="nb">* </span><span class="nv">new-pn</span> <span class="nv">q1n</span><span class="p">)</span> <span class="p">(</span><span class="nb">* </span><span class="nv">new-pd</span> <span class="nv">q1d</span><span class="p">)))</span>
               <span class="p">(</span><span class="nf">new-fract</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">fract</span> <span class="nv">af</span><span class="p">)))</span>
          <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&lt; </span><span class="mf">0.0</span> <span class="nv">af</span> <span class="nv">epsilon</span><span class="p">)</span>
              <span class="nv">new-fract</span>
              <span class="p">(</span><span class="nf">even-term</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">new-pn</span> <span class="nv">new-pd</span> <span class="nv">new-fract</span><span class="p">))))</span>
      <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">even-term</span> <span class="nv">i</span> <span class="nv">pn</span> <span class="nv">pd</span> <span class="nv">fract</span><span class="p">)</span>
        <span class="p">(</span><span class="k">let* </span><span class="p">((</span><span class="nf">new-pn</span> <span class="p">(</span><span class="nb">* </span><span class="nv">pn</span> <span class="nv">pin</span> <span class="nv">n</span><span class="p">))</span>
               <span class="p">(</span><span class="nf">new-pd</span> <span class="p">(</span><span class="nb">* </span><span class="nv">pd</span> <span class="nv">pid</span> <span class="nv">i</span><span class="p">))</span>
               <span class="p">(</span><span class="nf">af</span> <span class="p">(</span><span class="nf">fract/</span> <span class="nv">new-pn</span> <span class="nv">new-pd</span><span class="p">))</span>
               <span class="p">(</span><span class="nf">new-fract</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">fract</span> <span class="nv">af</span><span class="p">)))</span>
          <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&lt; </span><span class="mf">0.0</span> <span class="nv">af</span> <span class="nv">epsilon</span><span class="p">)</span>
              <span class="nv">new-fract</span>
              <span class="p">(</span><span class="nf">odd-term</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">new-pn</span> <span class="nv">new-pd</span> <span class="nv">new-fract</span><span class="p">))))</span>
      <span class="p">(</span><span class="nf">odd-term</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">0</span><span class="p">))))</span>

<span class="p">(</span><span class="k">define </span><span class="nv">fract-exp-pi*</span> <span class="p">(</span><span class="nf">cut</span> <span class="nv">%fract-exp-pi*</span> <span class="nv">&lt;&gt;</span> <span class="mf">0.00001</span><span class="p">))</span>
  
<span class="p">(</span><span class="nf">print</span> <span class="p">(</span><span class="nf">filter</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">n</span><span class="p">)</span>
                 <span class="p">(</span><span class="nf">let1</span> <span class="nv">x</span> <span class="p">(</span><span class="nf">fract-exp-pi*</span> <span class="nv">n</span><span class="p">)</span>
                   <span class="p">(</span><span class="nb">&lt;= </span><span class="p">(</span><span class="nb">abs </span><span class="p">(</span><span class="nb">- </span><span class="nv">x</span> <span class="p">(</span><span class="nb">round </span><span class="nv">x</span><span class="p">)))</span> <span class="mf">0.0001</span><span class="p">)))</span>
               <span class="p">(</span><span class="nf">iota</span> <span class="mi">199</span> <span class="mi">1</span><span class="p">)))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3031/addtag/" class="addtag" id="addtag_3031">タグ</a>:
	
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3031/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3031/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3031"
  >-</span><span
  class="button yellow"
  id="rating_z_3031"
  >0</span><span 
  class="button green"
  id="rating_p_3031"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090221103043/http://ja.doukaku.org/comment/3031/">
    1
    reply
  </a>

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3031/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3032">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/438/" target="_top">koguro</a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3032/">#3032</a>(<script language="JavaScript">print_time(new Date("2007/09/15 15:41 GMT"));</script><noscript>2007/09/15 15:41 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>すみません、さっきのコードだと(pi * sqrt(n))^k / k! がたまたま整数に近かったときに
誤動作する可能性がありました(今回の解の探索範囲では問題ないのですが)。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="gd">--- eps.scm.orig        2007-09-16 00:31:43.000000000 +0900</span>
<span class="gi">+++ eps.scm     2007-09-16 00:32:29.000000000 +0900</span>
<span class="gu">@@ -39,9 +39,11 @@</span>
       (define (odd-term i pn pd fract)
         (let* ((new-pn (* pn pin))
                (new-pd (* pd pid i))
<span class="gd">-               (af (fract/ (* new-pn q1n) (* new-pd q1d)))</span>
<span class="gi">+               (an (* new-pn q1n))</span>
<span class="gi">+               (ad (* new-pd q1d))</span>
<span class="gi">+               (af (fract/ an ad))</span>
                (new-fract (+ fract af)))
<span class="gd">-          (if (&lt; 0.0 af epsilon)</span>
<span class="gi">+          (if (and (&lt; 0.0 af epsilon) (&lt; an ad))</span>
               new-fract
               (even-term (+ i 1) new-pn new-pd new-fract))))
       (define (even-term i pn pd fract)
<span class="gu">@@ -49,7 +51,7 @@</span>
                (new-pd (* pd pid i))
                (af (fract/ new-pn new-pd))
                (new-fract (+ fract af)))
<span class="gd">-          (if (&lt; 0.0 af epsilon)</span>
<span class="gi">+          (if (and (&lt; 0.0 af epsilon) (&lt; new-pn new-pd))</span>
               new-fract
               (odd-term (+ i 1) new-pn new-pd new-fract))))
       (odd-term 1 1 1 0))))
<span class="gu">@@ -60,3 +62,4 @@</span>
                  (let1 x (fract-exp-pi* n)
                    (&lt;= (abs (- x (round x))) 0.0001)))
                (iota 199 1)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3032/addtag/" class="addtag" id="addtag_3032">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3032/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3032/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3032"
  >-</span><span
  class="button yellow"
  id="rating_z_3032"
  >0</span><span 
  class="button green"
  id="rating_p_3032"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3031/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3032/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3032/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3033">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3033/">#3033</a>(<script language="JavaScript">print_time(new Date("2007/09/16 02:19 GMT"));</script><noscript>2007/09/16 02:19 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Squeak&nbsp;Smalltalk&nbsp;で。<br/><br/>組み込みの&nbsp;ScaledDecimal（Java&nbsp;でいうところの&nbsp;BigDecimal&nbsp;）を使って、sqrt&nbsp;と&nbsp;exp&nbsp;を自前で用意。sqrt&nbsp;には、開平法を使用しています。1GHz&nbsp;PowerPC&nbsp;(OS&nbsp;X)&nbsp;で、21&nbsp;分ほどかかりました(^_^;)。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="highlight"><pre>| pi exp sqrt |

pi := 3.141592653589793238462643s24.

sqrt := [:x |
    | pairs digits mem rem |
    pairs := OrderedCollection new.
    [x &gt; 0] whileTrue: [pairs addFirst: x \\ 100. x := x // 100].
    pairs addAll: (Array new: 24 withAll: 0).
    digits := rem := mem := 0.
    pairs do: [:pair |
        | next found |
        rem := rem * 100 + pair.
        (0 to: 9) findLast: [:i | rem - ((next := mem * 10 + (found := i)) * i) &gt;= 0].
        rem := rem - (next * found).
        mem := next + found.
        digits := digits * 10 + found].
    (digits / 1e24) asScaledDecimal: 24].

exp := [:x |
    | val fac mul i delta |
    val := fac := i := 1s5.
    mul := x := x asScaledDecimal: 5.
    [(delta := mul / fac) &gt; 0.00001s5] whileTrue: [
        val := val + delta.
        mul := mul * x.
        fac := fac * (i := i + 1)].
    val].

^(1 to: 200)
    collect: [:n | n -&gt; (exp value: (pi * (sqrt value: n)))]
    thenSelect: [:assoc | (assoc value - (assoc value roundTo: 1)) abs &lt;= 0.0001s4]

&quot;=&gt; {37 -&gt; 199148647.99996s5. 
     58 -&gt; 24591257751.99999s5. 
     67 -&gt; 147197952743.99998s5. 
     163 -&gt; 262537412640768743.99998s5} &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3033/addtag/" class="addtag" id="addtag_3033">タグ</a>:
	
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3033/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3033/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3033"
  >-</span><span
  class="button yellow"
  id="rating_z_3033"
  >0</span><span 
  class="button green"
  id="rating_p_3033"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3033/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3034">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3034/">#3034</a>(<script language="JavaScript">print_time(new Date("2007/09/16 02:37 GMT"));</script><noscript>2007/09/16 02:37 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>人のふんどしで相撲を取るシリーズ。

上記のコードを任意精度演算ライブラリとしてgmpを使いCに移植しました。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &lt;gmp.h&gt;</span>

<span class="n">mpf_t</span> <span class="n">curr</span><span class="p">,</span> <span class="n">next</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">bunbo</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">mpf_exp</span><span class="p">(</span><span class="n">mpf_t</span> <span class="n">x</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">k</span><span class="p">;</span>

    <span class="n">mpf_set_ui</span><span class="p">(</span><span class="n">curr</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">);</span>
    <span class="n">mpf_set_ui</span><span class="p">(</span><span class="n">bunsi</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">);</span>
    <span class="n">mpf_set_ui</span><span class="p">(</span><span class="n">bunbo</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">);</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">mpf_mul</span><span class="p">(</span><span class="n">bunsi</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
        <span class="n">mpf_mul_ui</span><span class="p">(</span><span class="n">bunbo</span><span class="p">,</span> <span class="n">bunbo</span><span class="p">,</span> <span class="n">k</span><span class="p">);</span>
        <span class="n">mpf_div</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">bunbo</span><span class="p">);</span>
        <span class="n">mpf_add</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">next</span><span class="p">,</span> <span class="n">curr</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">mpf_cmp</span><span class="p">(</span><span class="n">curr</span><span class="p">,</span> <span class="n">next</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">mpf_set</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">curr</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">mpf_set</span><span class="p">(</span><span class="n">curr</span><span class="p">,</span> <span class="n">next</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">128</span><span class="p">],</span> <span class="n">tmp</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span>
    <span class="kt">double</span> <span class="n">d</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="n">mpf_t</span> <span class="n">x</span><span class="p">,</span> <span class="n">pi</span><span class="p">;</span>

    <span class="n">mpf_set_default_prec</span><span class="p">(</span><span class="mi">128</span><span class="p">);</span>

    <span class="n">mpf_init</span><span class="p">(</span><span class="n">curr</span><span class="p">);</span>
    <span class="n">mpf_init</span><span class="p">(</span><span class="n">next</span><span class="p">);</span>
    <span class="n">mpf_init</span><span class="p">(</span><span class="n">bunsi</span><span class="p">);</span>
    <span class="n">mpf_init</span><span class="p">(</span><span class="n">bunbo</span><span class="p">);</span>
    <span class="n">mpf_init</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
    <span class="n">mpf_init</span><span class="p">(</span><span class="n">pi</span><span class="p">);</span>

    <span class="n">mpf_set_str</span><span class="p">(</span><span class="n">pi</span><span class="p">,</span> <span class="s">&quot;3.1415926535897932384626433832795029&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">200</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">mpf_set_ui</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
        <span class="n">mpf_sqrt</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
        <span class="n">mpf_mul</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">pi</span><span class="p">);</span>
        <span class="n">mpf_exp</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>

        <span class="n">gmp_sprintf</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="s">&quot;%.*Ff&quot;</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
        <span class="n">d</span> <span class="o">=</span> <span class="n">atof</span><span class="p">(</span><span class="n">strncpy</span><span class="p">(</span><span class="n">tmp</span><span class="p">,</span> <span class="n">strchr</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="sc">&#39;.&#39;</span><span class="p">),</span> <span class="mi">7</span><span class="p">));</span>
        <span class="k">if</span> <span class="p">((</span><span class="n">d</span> <span class="o">&lt;</span> <span class="mf">0.0001</span><span class="p">)</span> <span class="o">||</span> <span class="p">((</span><span class="mi">1</span> <span class="o">-</span> <span class="n">d</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mf">0.0001</span><span class="p">))</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">mpf_clear</span><span class="p">(</span><span class="n">curr</span><span class="p">);</span>
    <span class="n">mpf_clear</span><span class="p">(</span><span class="n">next</span><span class="p">);</span>
    <span class="n">mpf_clear</span><span class="p">(</span><span class="n">bunsi</span><span class="p">);</span>
    <span class="n">mpf_clear</span><span class="p">(</span><span class="n">bunbo</span><span class="p">);</span>
    <span class="n">mpf_clear</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
    <span class="n">mpf_clear</span><span class="p">(</span><span class="n">pi</span><span class="p">);</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3034/addtag/" class="addtag" id="addtag_3034">タグ</a>:
	
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/gmp/">gmp</a>
    
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3034/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3034/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3034"
  >-</span><span
  class="button yellow"
  id="rating_z_3034"
  >0</span><span 
  class="button green"
  id="rating_p_3034"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3024/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3034/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090221103043/http://ja.doukaku.org/comment/3034/">
    1
    reply
  </a>

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3034/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3063">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/343/" target="_top">matyr</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3063/">#3063</a>(<script language="JavaScript">print_time(new Date("2007/09/18 01:03 GMT"));</script><noscript>2007/09/18 01:03 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  &nbsp;便乗。このライブラリは重宝しそう。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">doukaku60</span><span class="p">(){</span> <span class="c">// 精度的に 58 が限界。</span>
  <span class="k">with</span><span class="p">(</span><span class="nb">Math</span><span class="p">)</span> <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">r</span> <span class="o">=</span> <span class="p">[]</span><span class="o">,</span> <span class="nx">f</span><span class="o">,</span> <span class="nx">n</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="nx">n</span> <span class="o">&lt;</span> <span class="mi">200</span><span class="o">;</span> <span class="nx">n</span><span class="o">++</span><span class="p">)</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">abs</span><span class="p">((</span><span class="nx">f</span> <span class="o">=</span> <span class="nx">exp</span><span class="p">(</span><span class="nx">PI</span> <span class="o">*</span> <span class="nx">sqrt</span><span class="p">(</span><span class="nx">n</span><span class="p">)))</span> <span class="o">-</span> <span class="nx">round</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="nx">e</span><span class="o">-</span><span class="mi">4</span><span class="p">)</span> <span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">n</span><span class="o">,</span> <span class="nx">f</span><span class="p">]);</span>
  <span class="k">return</span> <span class="nx">r</span><span class="o">;</span>
<span class="p">}</span>
<span class="c">// ↓ Apfloat を用いて書き換え //</span>

<span class="k">function</span> <span class="nx">doukaku60_</span><span class="p">(){</span>
  <span class="k">var</span> <span class="nx">F</span> <span class="o">=</span> <span class="nb">Packages</span><span class="p">.</span><span class="nx">org</span><span class="p">.</span><span class="nx">apfloat</span><span class="p">.</span><span class="nx">Apfloat</span><span class="o">;</span>
  <span class="k">var</span> <span class="nx">M</span> <span class="o">=</span> <span class="nb">Packages</span><span class="p">.</span><span class="nx">org</span><span class="p">.</span><span class="nx">apfloat</span><span class="p">.</span><span class="nx">ApfloatMath</span><span class="o">;</span>
  <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">r</span> <span class="o">=</span> <span class="p">[]</span><span class="o">,</span> <span class="nx">p</span> <span class="o">=</span> <span class="mi">25</span><span class="o">,</span> <span class="nx">h</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="mf">0.5</span><span class="o">,</span> <span class="nx">p</span><span class="p">)</span><span class="o">,</span> <span class="nx">f</span><span class="o">,</span> <span class="nx">n</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="nx">n</span> <span class="o">&lt;</span> <span class="mi">200</span><span class="o">;</span> <span class="nx">n</span><span class="o">++</span><span class="p">){</span>
    <span class="nx">f</span> <span class="o">=</span> <span class="nx">M</span><span class="p">.</span><span class="nx">exp</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">pi</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">multiply</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="k">new</span> <span class="nx">F</span><span class="p">(</span><span class="nx">n</span><span class="o">,</span> <span class="nx">p</span><span class="p">))));</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">subtract</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">floor</span><span class="p">())).</span><span class="nx">floatValue</span><span class="p">()</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="nx">e</span><span class="o">-</span><span class="mi">4</span><span class="p">)</span> <span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">n</span><span class="o">,</span> <span class="nx">f</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="kc">true</span><span class="p">)]);</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">r</span><span class="o">;</span>
<span class="p">}</span>
<span class="nx">print</span><span class="p">(</span><span class="nx">doukaku60_</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;\n&#39;</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3063/addtag/" class="addtag" id="addtag_3063">タグ</a>:
	
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/Apfloat/">Apfloat</a>
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/Rhino/">Rhino</a>
    
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3063/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3063/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3063"
  >-</span><span
  class="button yellow"
  id="rating_z_3063"
  >0</span><span 
  class="button green"
  id="rating_p_3063"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3023/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3063/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3063/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3070">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3070/">#3070</a>(<script language="JavaScript">print_time(new Date("2007/09/18 09:20 GMT"));</script><noscript>2007/09/18 09:20 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>上記のコードをctypesを使ってpythonで実装してみました。

Cのヘッダファイル内で#ifdefやら#defineが多用されているので、もしかしたら
環境依存になっているかもしれません。

呼び出し毎にインスタンスを生成するexp関数と、静的なインスタンスを持つ
exp2関数の速度を比較すると、exp2の方が20%ほどはやいようです。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99</pre></td><td class="code"><div class="highlight"><pre><span class="k">from</span> <span class="nn">ctypes</span> <span class="k">import</span> <span class="o">*</span>

<span class="n">gmp</span> <span class="o">=</span> <span class="n">cdll</span><span class="o">.</span><span class="n">LoadLibrary</span><span class="p">(</span><span class="s">&#39;libgmp.so&#39;</span><span class="p">)</span>

<span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="p">[</span><span class="s">&#39;set_default_prec&#39;</span><span class="p">,</span> <span class="s">&#39;init&#39;</span><span class="p">,</span> <span class="s">&#39;clear&#39;</span><span class="p">,</span> <span class="s">&#39;set&#39;</span><span class="p">,</span> <span class="s">&#39;set_ui&#39;</span><span class="p">,</span> <span class="s">&#39;set_str&#39;</span><span class="p">,</span> <span class="s">&#39;mul&#39;</span>
<span class="p">,</span> <span class="s">&#39;mul_ui&#39;</span><span class="p">,</span> <span class="s">&#39;div&#39;</span><span class="p">,</span> <span class="s">&#39;add&#39;</span><span class="p">,</span> <span class="s">&#39;cmp&#39;</span><span class="p">,</span> <span class="s">&#39;sqrt&#39;</span><span class="p">,</span> <span class="s">&#39;printf&#39;</span><span class="p">,</span> <span class="s">&#39;snprintf&#39;</span><span class="p">]:</span>
  <span class="k">try</span><span class="p">:</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">__setattr__</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">gmp</span><span class="o">.</span><span class="n">__getattr__</span><span class="p">(</span><span class="s">&#39;__gmpf_&#39;</span><span class="o">+</span><span class="n">s</span><span class="p">))</span>
  <span class="k">except</span><span class="p">:</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">__setattr__</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">gmp</span><span class="o">.</span><span class="n">__getattr__</span><span class="p">(</span><span class="s">&#39;__gmp_&#39;</span><span class="o">+</span><span class="n">s</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">mpf</span><span class="p">():</span>
  <span class="k">class</span> <span class="nc">mpf_t</span><span class="p">(</span><span class="n">Structure</span><span class="p">):</span>
    <span class="n">_fields_</span> <span class="o">=</span> <span class="p">[(</span><span class="s">&quot;_mp_prec&quot;</span><span class="p">,</span> <span class="n">c_int</span><span class="p">),</span> <span class="p">(</span><span class="s">&quot;_mp_size&quot;</span><span class="p">,</span> <span class="n">c_int</span><span class="p">),</span> <span class="p">(</span><span class="s">&quot;_mp_exp&quot;</span><span class="p">,</span> <span class="n">c_int</span><span class="p">),</span> <span class="p">(</span><span class="s">&quot;</span>
<span class="n">_mp_d</span><span class="s">&quot;, c_void_p)]</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
      <span class="n">Structure</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
      <span class="n">gmp</span><span class="o">.</span><span class="n">init</span><span class="p">(</span><span class="n">byref</span><span class="p">(</span><span class="bp">self</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">__del__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
      <span class="k">try</span><span class="p">:</span>
        <span class="n">gmp</span><span class="o">.</span><span class="n">clear</span><span class="p">(</span><span class="n">byref</span><span class="p">(</span><span class="bp">self</span><span class="p">))</span>
      <span class="k">except</span><span class="p">:</span>
        <span class="k">pass</span>

  <span class="k">return</span> <span class="n">pointer</span><span class="p">(</span><span class="n">mpf_t</span><span class="p">())</span>

<span class="k">def</span> <span class="nf">exp</span><span class="p">(</span><span class="n">rop</span><span class="p">,</span> <span class="n">op</span><span class="p">):</span>
  <span class="n">curr</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">bunbo</span><span class="p">,</span> <span class="n">next</span> <span class="o">=</span> <span class="n">mpf</span><span class="p">(),</span> <span class="n">mpf</span><span class="p">(),</span> <span class="n">mpf</span><span class="p">(),</span> <span class="n">mpf</span><span class="p">()</span>

  <span class="n">gmp</span><span class="o">.</span><span class="n">set_ui</span><span class="p">(</span><span class="n">curr</span><span class="p">,</span> <span class="n">c_ulong</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
  <span class="n">gmp</span><span class="o">.</span><span class="n">set_ui</span><span class="p">(</span><span class="n">bunsi</span><span class="p">,</span> <span class="n">c_ulong</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
  <span class="n">gmp</span><span class="o">.</span><span class="n">set_ui</span><span class="p">(</span><span class="n">bunbo</span><span class="p">,</span> <span class="n">c_ulong</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>

  <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">mul</span><span class="p">(</span><span class="n">bunsi</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">op</span><span class="p">)</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">mul_ui</span><span class="p">(</span><span class="n">bunbo</span><span class="p">,</span> <span class="n">bunbo</span><span class="p">,</span> <span class="n">c_ulong</span><span class="p">(</span><span class="n">k</span><span class="p">))</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">bunbo</span><span class="p">)</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">next</span><span class="p">,</span> <span class="n">curr</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">gmp</span><span class="o">.</span><span class="n">cmp</span><span class="p">(</span><span class="n">curr</span><span class="p">,</span> <span class="n">next</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
      <span class="n">gmp</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">rop</span><span class="p">,</span> <span class="n">curr</span><span class="p">)</span>
      <span class="k">return</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">curr</span><span class="p">,</span> <span class="n">next</span><span class="p">)</span>
    <span class="n">k</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="k">def</span> <span class="nf">exp2</span><span class="p">(</span><span class="n">rop</span><span class="p">,</span> <span class="n">op</span><span class="p">):</span>
  <span class="k">try</span><span class="p">:</span>
    <span class="n">curr</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">bunbo</span><span class="p">,</span> <span class="n">next</span> <span class="o">=</span> <span class="n">exp2</span><span class="o">.</span><span class="n">curr</span><span class="p">,</span> <span class="n">exp2</span><span class="o">.</span><span class="n">bunsi</span><span class="p">,</span> <span class="n">exp2</span><span class="o">.</span><span class="n">bunbo</span><span class="p">,</span> <span class="n">exp2</span><span class="o">.</span><span class="n">next</span>
  <span class="k">except</span><span class="p">:</span>
    <span class="n">exp2</span><span class="o">.</span><span class="n">curr</span><span class="p">,</span> <span class="n">exp2</span><span class="o">.</span><span class="n">bunsi</span><span class="p">,</span> <span class="n">exp2</span><span class="o">.</span><span class="n">bunbo</span><span class="p">,</span> <span class="n">exp2</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="n">mpf</span><span class="p">(),</span> <span class="n">mpf</span><span class="p">(),</span> <span class="n">mpf</span><span class="p">(),</span> <span class="n">mpf</span><span class="p">()</span>
    <span class="n">curr</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">bunbo</span><span class="p">,</span> <span class="n">next</span> <span class="o">=</span> <span class="n">exp2</span><span class="o">.</span><span class="n">curr</span><span class="p">,</span> <span class="n">exp2</span><span class="o">.</span><span class="n">bunsi</span><span class="p">,</span> <span class="n">exp2</span><span class="o">.</span><span class="n">bunbo</span><span class="p">,</span> <span class="n">exp2</span><span class="o">.</span><span class="n">next</span>

  <span class="n">gmp</span><span class="o">.</span><span class="n">set_ui</span><span class="p">(</span><span class="n">curr</span><span class="p">,</span> <span class="n">c_ulong</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
  <span class="n">gmp</span><span class="o">.</span><span class="n">set_ui</span><span class="p">(</span><span class="n">bunsi</span><span class="p">,</span> <span class="n">c_ulong</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
  <span class="n">gmp</span><span class="o">.</span><span class="n">set_ui</span><span class="p">(</span><span class="n">bunbo</span><span class="p">,</span> <span class="n">c_ulong</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>

  <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">mul</span><span class="p">(</span><span class="n">bunsi</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">op</span><span class="p">)</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">mul_ui</span><span class="p">(</span><span class="n">bunbo</span><span class="p">,</span> <span class="n">bunbo</span><span class="p">,</span> <span class="n">c_ulong</span><span class="p">(</span><span class="n">k</span><span class="p">))</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">bunbo</span><span class="p">)</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">next</span><span class="p">,</span> <span class="n">curr</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">gmp</span><span class="o">.</span><span class="n">cmp</span><span class="p">(</span><span class="n">curr</span><span class="p">,</span> <span class="n">next</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
      <span class="n">gmp</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">rop</span><span class="p">,</span> <span class="n">curr</span><span class="p">)</span>
      <span class="k">return</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">curr</span><span class="p">,</span> <span class="n">next</span><span class="p">)</span>
    <span class="n">k</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="k">def</span> <span class="nf">frac_f</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
  <span class="n">buf</span> <span class="o">=</span> <span class="n">c_buffer</span><span class="p">(</span><span class="mi">256</span><span class="p">)</span>
  <span class="n">gmp</span><span class="o">.</span><span class="n">snprintf</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">buf</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;%.Ff&quot;</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
  <span class="k">return</span> <span class="nb">float</span><span class="p">(</span><span class="n">buf</span><span class="o">.</span><span class="n">value</span><span class="p">[</span><span class="n">buf</span><span class="o">.</span><span class="n">value</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">):])</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
  <span class="k">from</span> <span class="nn">time</span> <span class="k">import</span> <span class="n">time</span>
  <span class="n">t</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>

  <span class="n">gmp</span><span class="o">.</span><span class="n">set_default_prec</span><span class="p">(</span><span class="mi">128</span><span class="p">)</span>

  <span class="n">x</span><span class="p">,</span> <span class="n">pi</span> <span class="o">=</span> <span class="n">mpf</span><span class="p">(),</span> <span class="n">mpf</span><span class="p">()</span>

  <span class="n">gmp</span><span class="o">.</span><span class="n">set_str</span><span class="p">(</span><span class="n">pi</span><span class="p">,</span> <span class="s">&quot;3.141592653589793238462643383279502884197&quot;</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>

  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">200</span><span class="p">):</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">set_ui</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">c_ulong</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
    <span class="n">gmp</span><span class="o">.</span><span class="n">mul</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">pi</span><span class="p">)</span>
<span class="c">#    exp(x, x)</span>
    <span class="n">exp2</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
    <span class="n">f</span> <span class="o">=</span> <span class="n">frac_f</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">f</span> <span class="o">&lt;</span> <span class="mf">0.0001</span> <span class="ow">or</span> <span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">f</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mf">0.0001</span><span class="p">:</span>
      <span class="n">gmp</span><span class="o">.</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%d</span><span class="s"> </span><span class="si">%.6F</span><span class="s">f</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>

  <span class="k">print</span> <span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
  <span class="n">main</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3070/addtag/" class="addtag" id="addtag_3070">タグ</a>:
	
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/ctypes/">ctypes</a>
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/gmp/">gmp</a>
    
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3070/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3070/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3070"
  >-</span><span
  class="button yellow"
  id="rating_z_3070"
  >0</span><span 
  class="button green"
  id="rating_p_3070"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3034/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3070/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3070/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3082">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3082/">#3082</a>(<script language="JavaScript">print_time(new Date("2007/09/19 04:40 GMT"));</script><noscript>2007/09/19 04:40 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>20000以下で調べてみたら，

(37,199148647.9999780465518567665009238753359004336659)
(58,24591257751.9999998222132414695761923552658122276102)
(67,147197952743.9999986624542245068292613125786285081833)
(163,262537412640768743.9999999999992500725971981856888793538563)
(232,604729957825300084759.9999921715268564302785946808125512858845)
(652,68925893036109279891085639286943768.0000000001637386442092346075723290625709)
(719,3842614373539548891490294277805829192.9999872495660121875632701836570684449713)
(1169,44555719382988281777368496770130045948309444044.9999608028638684615024311524958053653676)
(1467,18095625621654510801615355531263454706630064771074975.9999999901236936712413276522472419790897)
(2608,4750778730825177725463920948909726618214491718039471366318747406368792.0000003084643221299811801879962000157848)
(4075,1247257156019637304856107520018074552566824585862995272173368815794085495792299621093743.9999936541874689715769690801805608661462)
(5773,46309587632860353087565367053742331250287153098248715578209888177688338779879045292937243508078581367989.9999155688538141662485158867634827239495)
(5868,327451666639079200503292535866541250265248788274691526825971156747731856100971255480468836963064283775072.0000971752541625920841201776565931010652)
(14370,35853082260707987565058966569844138230073788113687426211111838655289387060751425253235617998546754095483027646820100689677619375065141669969772221012766669726610356.0000809961676073067730760452585504610564)
(19183,932865712335864748985892137487224407024879778525651187858506512365813448395651706659915858370562540302669863675912417090372354324023009941419688829317421179304232837551154837099435561184585.9999366484683843100572967742009198686654)

という結果でした．163が題意の意味で一番整数に近いようです．
所要時間は，time ではかって，

2128.54s user 8.40s system 96% cpu 36:49.42 total

でした．
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Main</span> <span class="p">(</span><span class="nv">main</span><span class="p">)</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Environment</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">IO</span>
<span class="kr">import</span> <span class="n">CReal</span>

<span class="kr">default</span> <span class="p">(</span><span class="n">CReal</span><span class="p">)</span>

<span class="nv">f</span> <span class="o">::</span> <span class="n">CReal</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">Int</span><span class="p">,</span> <span class="n">CReal</span><span class="p">)</span>
<span class="nv">f</span> <span class="nv">n</span> <span class="o">=</span> <span class="p">(</span><span class="nv">ceiling</span> <span class="nv">n</span><span class="p">,</span> <span class="nv">exp</span> <span class="o">$</span> <span class="nv">pi</span> <span class="o">*</span> <span class="nv">sqrt</span> <span class="nv">n</span><span class="p">)</span>

<span class="nv">g</span> <span class="o">::</span> <span class="n">CReal</span> <span class="o">-&gt;</span> <span class="n">Bool</span>
<span class="nv">g</span> <span class="nv">n</span> <span class="o">=</span> <span class="mf">0.0001</span> <span class="o">&gt;</span> <span class="nv">h</span> <span class="nv">n</span>

<span class="nv">h</span> <span class="o">::</span> <span class="n">CReal</span> <span class="o">-&gt;</span> <span class="n">CReal</span>
<span class="nv">h</span> <span class="nv">n</span> <span class="o">=</span> <span class="kr">if</span> <span class="mf">0.5</span> <span class="o">&gt;</span> <span class="nv">n&#39;</span> <span class="o">-</span> <span class="nv">n</span> <span class="kr">then</span> <span class="nv">n&#39;</span> <span class="o">-</span> <span class="nv">n</span> <span class="kr">else</span> <span class="mi">1</span> <span class="o">-</span> <span class="p">(</span><span class="nv">n&#39;</span> <span class="o">-</span> <span class="nv">n</span><span class="p">)</span>
  <span class="kr">where</span> <span class="nv">n&#39;</span> <span class="o">=</span> <span class="nv">fromInteger</span> <span class="o">$</span> <span class="nv">ceiling</span> <span class="nv">n</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">args</span> <span class="o">&lt;-</span> <span class="nv">getArgs</span>
          <span class="p">;</span> <span class="kr">case</span> <span class="nv">args</span> <span class="kr">of</span>
              <span class="p">[]</span>  <span class="o">-&gt;</span> <span class="nv">loop</span> <span class="mi">100</span> <span class="mi">0</span>
              <span class="nv">n</span><span class="o">:</span><span class="kr">_</span> <span class="o">-&gt;</span> <span class="nv">loop</span> <span class="p">(</span><span class="nv">read</span> <span class="nv">n</span><span class="p">)</span> <span class="mi">0</span>
          <span class="p">}</span>
<span class="nv">loop</span> <span class="nv">n</span> <span class="nv">m</span> 
 <span class="o">|</span> <span class="nv">n</span> <span class="o">==</span> <span class="nv">m</span> <span class="o">=</span> <span class="nv">return</span> <span class="p">()</span>
 <span class="o">|</span> <span class="n">True</span>   <span class="o">=</span> <span class="nv">mapM_</span> <span class="p">(</span><span class="nv">k</span> <span class="o">.</span> <span class="nv">f</span><span class="p">)</span> <span class="p">[(</span><span class="nv">m</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span> <span class="o">..</span> <span class="p">(</span><span class="nv">m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="mi">100</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="nv">loop</span> <span class="nv">n</span> <span class="p">(</span><span class="nv">m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>

<span class="nv">k</span> <span class="o">::</span> <span class="p">(</span><span class="n">Int</span><span class="p">,</span><span class="n">CReal</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">k</span> <span class="nv">n</span><span class="o">@</span><span class="p">(</span><span class="nv">i</span><span class="p">,</span><span class="nv">r</span><span class="p">)</span> <span class="o">=</span> <span class="kr">if</span> <span class="nv">g</span> <span class="nv">r</span> <span class="kr">then</span> <span class="nv">hPutStrLn</span> <span class="nv">stdout</span> <span class="p">(</span><span class="nv">show</span> <span class="nv">n</span><span class="p">)</span> <span class="o">&gt;&gt;</span> <span class="nv">hFlush</span> <span class="nv">stdout</span>
	    <span class="kr">else</span> <span class="nv">putStr</span> <span class="p">(</span><span class="nv">show</span> <span class="nv">i</span> <span class="o">++</span> <span class="s">&quot;\r&quot;</span><span class="p">)</span> <span class="o">&gt;&gt;</span> <span class="nv">hFlush</span> <span class="nv">stdout</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3082/addtag/" class="addtag" id="addtag_3082">タグ</a>:
	
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/CReal/">CReal</a>
    
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3082/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3082/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3082"
  >-</span><span
  class="button yellow"
  id="rating_z_3082"
  >0</span><span 
  class="button green"
  id="rating_p_3082"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3018/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3082/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090221103043/http://ja.doukaku.org/comment/3082/">
    1
    reply
  </a>

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3082/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3083">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3083/">#3083</a>(<script language="JavaScript">print_time(new Date("2007/09/19 04:47 GMT"));</script><noscript>2007/09/19 04:47 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>cpuスペックを書きわすれた。
Intel(R) Pentium(R) M processor 2.13GHz
です</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3083/addtag/" class="addtag" id="addtag_3083">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3083"
  >-</span><span
  class="button yellow"
  id="rating_z_3083"
  >0</span><span 
  class="button green"
  id="rating_p_3083"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3082/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3083/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3083/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3130">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3130/">#3130</a>(<script language="JavaScript">print_time(new Date("2007/09/20 14:22 GMT"));</script><noscript>2007/09/20 14:22 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>expの計算の効率を上げる事で、なんとか実用(?)的な性能にする事ができました。

x = n log 10 + k の時
    exp(x) = 10^n * exp(k)
の性質を使っています。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.math.MathContext</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">double</span> <span class="n">EPS</span> <span class="o">=</span> <span class="mf">0.000001</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">double</span> <span class="n">EPS2</span> <span class="o">=</span> <span class="mi">1</span><span class="n">e</span><span class="o">-</span><span class="mi">25</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">BigDecimal</span> <span class="n">TWO</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">BigDecimal</span> <span class="n">PI</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span>
        <span class="o">(</span><span class="s">&quot;3.141592653589793238462643383279&quot;</span><span class="o">);</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">BigDecimal</span> <span class="n">LN10</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span>
        <span class="o">(</span><span class="s">&quot;2.3025850929940456840179914546844&quot;</span><span class="o">);</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">BigDecimal</span> <span class="n">exp</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">BigDecimal</span><span class="o">[]</span> <span class="n">dr</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="na">divideAndRemainder</span><span class="o">(</span><span class="n">LN10</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">dr</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">intValue</span><span class="o">();</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">dr</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="n">BigDecimal</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">i</span><span class="o">++);</span>
        <span class="n">BigDecimal</span> <span class="n">c</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="na">scaleByPowerOfTen</span><span class="o">(</span><span class="n">n</span><span class="o">);;</span>
        <span class="n">BigDecimal</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="mf">1.0</span><span class="o">).</span><span class="na">scaleByPowerOfTen</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
        <span class="n">BigDecimal</span> <span class="n">d</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">((</span><span class="n">d</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">divide</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="n">MathContext</span><span class="o">.</span><span class="na">DECIMAL128</span><span class="o">)).</span><span class="na">doubleValue</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">EPS</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">d</span><span class="o">);</span>
            <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">i</span><span class="o">++));</span>
            <span class="n">c</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">x</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">a</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="n">BigDecimal</span> <span class="n">sqrt</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">BigDecimal</span> <span class="n">x</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="n">a</span><span class="o">.</span><span class="na">doubleValue</span><span class="o">()));</span>
        <span class="n">BigDecimal</span> <span class="n">delta</span><span class="o">;</span>
        <span class="k">do</span> <span class="o">{</span>
            <span class="n">delta</span> <span class="o">=</span> <span class="o">(</span><span class="n">x</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">x</span><span class="o">).</span><span class="na">subtract</span><span class="o">(</span><span class="n">a</span><span class="o">)).</span><span class="na">divide</span><span class="o">(</span><span class="n">TWO</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">x</span><span class="o">),</span> 
                                                       <span class="n">MathContext</span><span class="o">.</span><span class="na">DECIMAL128</span><span class="o">);</span>
            <span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="na">subtract</span><span class="o">(</span><span class="n">delta</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">delta</span><span class="o">.</span><span class="na">abs</span><span class="o">().</span><span class="na">doubleValue</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">EPS2</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">x</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">200</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">BigDecimal</span> <span class="n">er</span> <span class="o">=</span> <span class="n">exp</span><span class="o">(</span><span class="n">PI</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">sqrt</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">i</span><span class="o">))));</span>
            <span class="n">BigDecimal</span> <span class="n">rer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">er</span><span class="o">.</span><span class="na">toBigInteger</span><span class="o">());</span>
            <span class="kt">double</span> <span class="n">a</span> <span class="o">=</span> <span class="n">er</span><span class="o">.</span><span class="na">subtract</span><span class="o">(</span><span class="n">rer</span><span class="o">).</span><span class="na">doubleValue</span><span class="o">();</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">&lt;</span> <span class="mf">0.0001</span> <span class="o">||</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mf">0.9999</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%d: %f%n&quot;</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">er</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3130/addtag/" class="addtag" id="addtag_3130">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3130/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3130/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3130"
  >-</span><span
  class="button yellow"
  id="rating_z_3130"
  >0</span><span 
  class="button green"
  id="rating_p_3130"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3028/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3130/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3130/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3138">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3138/">#3138</a>(<script language="JavaScript">print_time(new Date("2007/09/20 17:04 GMT"));</script><noscript>2007/09/20 17:04 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  #3130の匿名さんのアイデアを拝借して組みなおしてみたところ、2.6倍早くなりました。
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090221103043/http://bugs.python.org/issue1182?@ok_message=msg%2056056%20created%3Cbr%3Eissue%201182%20created&@template=item">これを組んでいて、Python2.5のバグを踏んでしまった（汗）</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre><span class="k">from</span> <span class="nn">decimal</span> <span class="k">import</span> <span class="o">*</span>
<span class="k">import</span> <span class="nn">itertools</span>

<span class="k">def</span> <span class="nf">divmod</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span> <span class="c"># workaround for python2.5 decimal mod bug.</span>
    <span class="n">div</span> <span class="o">=</span> <span class="n">x</span> <span class="o">//</span> <span class="n">y</span>
    <span class="n">mod</span> <span class="o">=</span> <span class="n">x</span> <span class="o">-</span> <span class="n">div</span> <span class="o">*</span> <span class="n">y</span>
    <span class="k">return</span> <span class="n">div</span><span class="p">,</span> <span class="n">mod</span>

<span class="k">def</span> <span class="nf">decimal_exp</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
    <span class="n">div</span><span class="p">,</span> <span class="n">mod</span> <span class="o">=</span> <span class="nb">divmod</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;2.3025850929940456840179914546844&quot;</span><span class="p">))</span>
    <span class="n">curr</span><span class="p">,</span> <span class="n">bunsi</span><span class="p">,</span> <span class="n">bunbo</span> <span class="o">=</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;1.0&quot;</span><span class="p">),</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;1.0&quot;</span><span class="p">),</span> <span class="mi">1</span>
    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">itertools</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">bunsi</span> <span class="o">*=</span> <span class="n">mod</span>
        <span class="n">bunbo</span> <span class="o">*=</span> <span class="n">k</span>
        <span class="n">next</span> <span class="o">=</span> <span class="n">curr</span> <span class="o">+</span> <span class="n">bunsi</span> <span class="o">/</span> <span class="n">bunbo</span>
        <span class="k">if</span> <span class="n">curr</span> <span class="o">==</span> <span class="n">next</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">(</span><span class="mi">10</span> <span class="o">**</span> <span class="n">div</span><span class="p">)</span> <span class="o">*</span> <span class="n">curr</span>
        <span class="n">curr</span> <span class="o">=</span> <span class="n">next</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">pi</span> <span class="o">=</span> <span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;3.141592653589793238462643383279&quot;</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">200</span><span class="p">):</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">decimal_exp</span><span class="p">(</span><span class="n">pi</span> <span class="o">*</span> <span class="n">Decimal</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">.</span><span class="n">sqrt</span><span class="p">())</span> <span class="c"># result</span>
        <span class="n">i</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="n">quantize</span><span class="p">(</span><span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;1.0&quot;</span><span class="p">),</span> <span class="n">rounding</span><span class="o">=</span><span class="n">ROUND_HALF_UP</span><span class="p">)</span> <span class="c"># nearest integer</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="o">-</span> <span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">quantize</span><span class="p">(</span><span class="n">Decimal</span><span class="p">(</span><span class="s">&quot;0.0001&quot;</span><span class="p">),</span> <span class="n">rounding</span><span class="o">=</span><span class="n">ROUND_DOWN</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="k">print</span> <span class="n">n</span><span class="p">,</span> <span class="n">x</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">import</span> <span class="nn">psyco</span>
    <span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
        <span class="k">pass</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">psyco</span><span class="o">.</span><span class="n">full</span><span class="p">()</span>
    <span class="n">main</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3138/addtag/" class="addtag" id="addtag_3138">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3138/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3138/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3138"
  >-</span><span
  class="button yellow"
  id="rating_z_3138"
  >0</span><span 
  class="button green"
  id="rating_p_3138"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3024/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3138/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090221103043/http://ja.doukaku.org/comment/3138/">
    1
    reply
  </a>

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3138/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3200">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3200/">#3200</a>(<script language="JavaScript">print_time(new Date("2007/09/30 15:28 GMT"));</script><noscript>2007/09/30 15:28 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>ext:long-float-digits の存在を知ったので使ってみたくなりまして。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre>(setf (ext:long-float-digits) 192)
(loop
  for x from 1 below 200
  as y = (exp (* pi (sqrt (float x 1L0))))
  if (&lt; (abs (- y (round y))) 1e-4)
  do (format t &quot;~D ~F~%&quot; x y))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3200/addtag/" class="addtag" id="addtag_3200">タグ</a>:
	
    
    <a href="/web/20090221103043/http://ja.doukaku.org/tag/CLISP/">CLISP</a>
    
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3200/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3200/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3200"
  >-</span><span
  class="button yellow"
  id="rating_z_3200"
  >0</span><span 
  class="button green"
  id="rating_p_3200"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3200/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3246">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/136/" target="_top">matarillo</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3246/">#3246</a>(<script language="JavaScript">print_time(new Date("2007/10/04 10:53 GMT"));</script><noscript>2007/10/04 10:53 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>doubleだと桁が足りなかったのでdecimalにした。そのせいでExpやSqrtを自分で書かないといけなかった。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103</pre></td><td class="code"><div class="highlight"><pre><span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
<span class="k">{</span>
  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">n</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">n</span> <span class="p">&lt;</span> <span class="m">200</span><span class="p">;</span> <span class="n">n</span><span class="p">++)</span>
  <span class="k">{</span>
    <span class="kt">decimal</span> <span class="n">f</span> <span class="p">=</span> <span class="n">Func</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">IsAlmostInteger</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="m">4</span><span class="p">))</span>
      <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0} {1:f6}&quot;</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">f</span><span class="p">);</span>
  <span class="k">}</span>
  <span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
<span class="k">}</span>

<span class="k">static</span> <span class="kt">decimal</span> <span class="nf">Func</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">)</span>
<span class="k">{</span>
  <span class="k">return</span> <span class="n">DecimalExpQuick</span><span class="p">(</span><span class="m">3.141592653589793238462643383279</span><span class="n">M</span> <span class="p">*</span> <span class="n">DecimalSqrt</span><span class="p">((</span><span class="kt">decimal</span><span class="p">)</span><span class="n">i</span><span class="p">));</span>
<span class="k">}</span>

<span class="k">static</span> <span class="kt">decimal</span> <span class="nf">DecimalExpQuick</span><span class="p">(</span><span class="kt">decimal</span> <span class="n">d</span><span class="p">)</span>
<span class="k">{</span>
  <span class="kt">int</span> <span class="n">n</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
  <span class="kt">decimal</span> <span class="n">p</span> <span class="p">=</span> <span class="m">1.0</span><span class="n">M</span><span class="p">;</span>
  <span class="kt">decimal</span> <span class="n">t</span> <span class="p">=</span> <span class="n">d</span><span class="p">;</span>
  <span class="k">do</span>
  <span class="k">{</span>
    <span class="n">n</span><span class="p">++;</span>
    <span class="n">p</span> <span class="p">*=</span> <span class="m">2</span><span class="p">;</span>
    <span class="n">t</span> <span class="p">/=</span> <span class="m">2</span><span class="p">;</span>
  <span class="k">}</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">t</span> <span class="p">&gt;=</span> <span class="m">0.1</span><span class="n">M</span><span class="p">);</span>

  <span class="kt">decimal</span> <span class="n">et</span> <span class="p">=</span> <span class="n">DecimalExp</span><span class="p">(</span><span class="n">t</span><span class="p">);</span>
  <span class="kt">decimal</span> <span class="n">ex</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">p</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
    <span class="n">ex</span> <span class="p">*=</span> <span class="n">et</span><span class="p">;</span>
  <span class="k">return</span> <span class="n">ex</span><span class="p">;</span>
<span class="k">}</span>

<span class="k">static</span> <span class="kt">decimal</span> <span class="nf">DecimalExp</span><span class="p">(</span><span class="kt">decimal</span> <span class="n">t</span><span class="p">)</span>
<span class="k">{</span>
  <span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
  <span class="kt">decimal</span> <span class="n">et</span> <span class="p">=</span> <span class="m">0.0</span><span class="n">M</span><span class="p">;</span>
  <span class="kt">decimal</span> <span class="n">ai</span> <span class="p">=</span> <span class="m">1.0</span><span class="n">M</span><span class="p">;</span>
  <span class="k">do</span>
  <span class="k">{</span>
    <span class="n">et</span> <span class="p">+=</span> <span class="n">ai</span><span class="p">;</span>
    <span class="n">i</span><span class="p">++;</span>
    <span class="n">ai</span> <span class="p">=</span> <span class="n">ai</span> <span class="p">*</span> <span class="p">(</span><span class="n">t</span> <span class="p">/</span> <span class="n">i</span><span class="p">);</span>
  <span class="k">}</span>
  <span class="k">while</span> <span class="p">(!</span><span class="n">NearlyEquals</span><span class="p">(</span><span class="n">ai</span><span class="p">,</span> <span class="m">0.0</span><span class="n">M</span><span class="p">));</span>
  <span class="k">return</span> <span class="n">et</span><span class="p">;</span>
<span class="k">}</span>

<span class="k">static</span> <span class="kt">decimal</span> <span class="nf">DecimalSqrt</span><span class="p">(</span><span class="kt">decimal</span> <span class="n">d</span><span class="p">)</span>
<span class="k">{</span>
  <span class="kt">decimal</span> <span class="n">x</span> <span class="p">=</span> <span class="m">1.0</span><span class="n">M</span><span class="p">;</span>
  <span class="kt">decimal</span> <span class="n">betterX</span> <span class="p">=</span> <span class="m">0.0</span><span class="n">M</span><span class="p">;</span>
  <span class="k">while</span><span class="p">(</span><span class="k">true</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="n">betterX</span> <span class="p">=</span> <span class="n">SqrtBailey</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">d</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">NearlyEquals</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">betterX</span><span class="p">))</span>
      <span class="k">return</span> <span class="n">betterX</span><span class="p">;</span>
    <span class="n">x</span> <span class="p">=</span> <span class="n">betterX</span><span class="p">;</span>
  <span class="k">}</span>
<span class="k">}</span>

<span class="k">static</span> <span class="kt">decimal</span> <span class="nf">SqrtBailey</span><span class="p">(</span><span class="kt">decimal</span> <span class="n">x</span><span class="p">,</span> <span class="kt">decimal</span> <span class="n">d</span><span class="p">)</span>
<span class="k">{</span>
  <span class="kt">decimal</span> <span class="n">fx</span> <span class="p">=</span> <span class="n">x</span> <span class="p">*</span> <span class="n">x</span> <span class="p">-</span> <span class="n">d</span><span class="p">;</span>
  <span class="kt">decimal</span> <span class="n">dfx</span> <span class="p">=</span> <span class="m">2.0</span><span class="n">M</span> <span class="p">*</span> <span class="n">x</span><span class="p">;</span>
  <span class="k">return</span> <span class="n">x</span> <span class="p">-</span> <span class="p">(</span><span class="n">fx</span> <span class="p">/</span> <span class="p">(</span><span class="n">dfx</span> <span class="p">-</span> <span class="p">(</span><span class="n">fx</span> <span class="p">/</span> <span class="n">dfx</span><span class="p">)));</span>
<span class="k">}</span>

<span class="k">static</span> <span class="kt">bool</span> <span class="nf">NearlyEquals</span><span class="p">(</span><span class="kt">decimal</span> <span class="n">d1</span><span class="p">,</span> <span class="kt">decimal</span> <span class="n">d2</span><span class="p">)</span>
<span class="k">{</span>
  <span class="kt">int</span> <span class="n">dights</span> <span class="p">=</span> <span class="n">IntDight</span><span class="p">(</span><span class="n">d1</span><span class="p">);</span>
  <span class="kt">decimal</span> <span class="n">delta</span> <span class="p">=</span> <span class="m">1e-28</span><span class="n">M</span> <span class="p">*</span> <span class="p">(</span><span class="kt">decimal</span><span class="p">)</span><span class="n">Math</span><span class="p">.</span><span class="n">Pow</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="n">dights</span><span class="p">);</span>
  <span class="k">return</span> <span class="p">((</span><span class="n">d1</span> <span class="p">-</span> <span class="n">d2</span> <span class="p">&lt;</span> <span class="n">delta</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">d2</span> <span class="p">-</span> <span class="n">d1</span> <span class="p">&lt;</span> <span class="n">delta</span><span class="p">));</span>
<span class="k">}</span>

<span class="k">static</span> <span class="kt">int</span> <span class="nf">IntDight</span><span class="p">(</span><span class="kt">decimal</span> <span class="n">d</span><span class="p">)</span>
<span class="k">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">d</span> <span class="p">&lt;</span> <span class="kt">decimal</span><span class="p">.</span><span class="n">Zero</span><span class="p">)</span>
    <span class="n">d</span> <span class="p">=</span> <span class="kt">decimal</span><span class="p">.</span><span class="n">Negate</span><span class="p">(</span><span class="n">d</span><span class="p">);</span>
  <span class="k">return</span> <span class="n">IntAbsDight</span><span class="p">(</span><span class="n">d</span><span class="p">);</span>
<span class="k">}</span>

<span class="k">static</span> <span class="kt">int</span> <span class="nf">IntAbsDight</span><span class="p">(</span><span class="kt">decimal</span> <span class="n">d</span><span class="p">)</span>
<span class="k">{</span>
  <span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">d</span> <span class="p">&gt;=</span> <span class="kt">decimal</span><span class="p">.</span><span class="n">One</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="n">d</span> <span class="p">/=</span> <span class="m">10.0</span><span class="n">M</span><span class="p">;</span>
    <span class="n">i</span><span class="p">++;</span>
  <span class="k">}</span>
  <span class="k">return</span> <span class="n">i</span><span class="p">;</span>
<span class="k">}</span>

<span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsAlmostInteger</span><span class="p">(</span><span class="kt">decimal</span> <span class="n">d</span><span class="p">,</span> <span class="kt">int</span> <span class="n">dights</span><span class="p">)</span>
<span class="k">{</span>
  <span class="kt">decimal</span> <span class="n">p</span> <span class="p">=</span> <span class="p">(</span><span class="kt">decimal</span><span class="p">)</span><span class="n">Math</span><span class="p">.</span><span class="n">Pow</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="n">dights</span><span class="p">);</span>
  <span class="kt">decimal</span> <span class="n">d1</span> <span class="p">=</span> <span class="kt">decimal</span><span class="p">.</span><span class="n">Round</span><span class="p">(</span><span class="n">d</span><span class="p">)</span> <span class="p">*</span> <span class="n">p</span><span class="p">;</span>
  <span class="kt">decimal</span> <span class="n">d2</span> <span class="p">=</span> <span class="kt">decimal</span><span class="p">.</span><span class="n">Round</span><span class="p">(</span><span class="n">d</span> <span class="p">*</span> <span class="n">p</span><span class="p">);</span>
  <span class="k">return</span> <span class="p">((</span><span class="n">d1</span> <span class="p">-</span> <span class="n">d2</span> <span class="p">&lt;=</span> <span class="m">1.0</span><span class="n">M</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">d2</span> <span class="p">-</span> <span class="n">d1</span> <span class="p">&lt;=</span> <span class="m">1.0</span><span class="n">M</span><span class="p">));</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3246/addtag/" class="addtag" id="addtag_3246">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3246/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3246/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3246"
  >-</span><span
  class="button yellow"
  id="rating_z_3246"
  >0</span><span 
  class="button green"
  id="rating_p_3246"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3246/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  <br/>

  
  




<div class="comment" id="comment3593">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3593/">#3593</a>(<script language="JavaScript">print_time(new Date("2007/10/30 09:03 GMT"));</script><noscript>2007/10/30 09:03 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Rは倍精度実数しか扱えないのと，nが67のときでも誤差がかなり大きいので，37と58しか拾えない
&gt; (1:67)[abs((exp(pi*sqrt(1:67))-round(exp(pi*sqrt(1:67))))) &lt; 0.0001]
[1] 37 58
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre>(1:67)[abs((exp(pi*sqrt(1:67))-round(exp(pi*sqrt(1:67))))) &lt; 0.0001]
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3593/addtag/" class="addtag" id="addtag_3593">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3593/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3593/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3593"
  >-</span><span
  class="button yellow"
  id="rating_z_3593"
  >0</span><span 
  class="button green"
  id="rating_p_3593"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3593/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3634">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3634/">#3634</a>(<script language="JavaScript">print_time(new Date("2007/10/31 14:40 GMT"));</script><noscript>2007/10/31 14:40 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/awk/">
	  awk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>やはり，awk も倍精度実数までしか使えないから
37 と 58 しか捕まえられないなあ

awk -f p3416.awk
37 : 199148647.99997794628
58 : 24591257751.999965668
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre>BEGIN {
    PI = atan2(1,1)*4
    for (n = 1; n &lt; 100; n++) {
        x = exp(PI*sqrt(n))
        if (abs(x-int(x+0.5)) &lt; 0.0001) printf &quot;%i : %.20g\n&quot;, n, x
    }
}

function abs(x) { return x &lt; 0 ? -x : x }
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/3634/addtag/" class="addtag" id="addtag_3634">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/awk/">
		awk
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3634/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/3634/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3634"
  >-</span><span
  class="button yellow"
  id="rating_z_3634"
  >0</span><span 
  class="button green"
  id="rating_p_3634"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/3634/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4544">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/380/" target="_top">vtwntmtn</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/4544/">#4544</a>(<script language="JavaScript">print_time(new Date("2007/12/01 14:44 GMT"));</script><noscript>2007/12/01 14:44 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/d/">
	  D
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Digital Mars D Compiler v1.015で動作確認しました。
#3020の方と同じく163がヒットしない…。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20090221103043/http://www.kmonos.net/alang/d/index.html">プログラミング言語 D</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="n">std</span>.<span class="n">stdio</span>;
<span class="k">import</span> <span class="n">std</span>.<span class="n">math</span>;

<span class="kt">void</span> <span class="n">exp_pi_sqrt</span>(<span class="kt">real</span> <span class="n">x</span>)
{
    <span class="kt">real</span> <span class="n">tmp</span> = <span class="n">exp</span>(<span class="n">PI</span> * <span class="n">sqrt</span>(<span class="n">x</span>));
    <span class="kt">real</span> <span class="n">err</span> = <span class="mf">0.0001</span>;
    <span class="k">if</span> ((<span class="n">tmp</span> &gt; (<span class="n">nearbyint</span>(<span class="n">tmp</span>) - <span class="n">err</span>)) &amp;&amp; (<span class="n">tmp</span> &lt; (<span class="n">nearbyint</span>(<span class="n">tmp</span>) + <span class="n">err</span>))) {
        <span class="n">writef</span>(<span class="s">&quot;%.0f %.4f\n&quot;</span>, <span class="n">x</span>, <span class="n">tmp</span>);
    }
}

<span class="c">/*</span>
<span class="c">void main(char[][] args)</span>
<span class="c">{</span>
<span class="c">    for (int i = 1; i &lt;= 200; ++i) {</span>
<span class="c">        exp_pi_sqrt(i);</span>
<span class="c">    }</span>
<span class="c">}</span>
<span class="c">*/</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/4544/addtag/" class="addtag" id="addtag_4544">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/d/">
		D
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/4544/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/4544/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4544"
  >-</span><span
  class="button yellow"
  id="rating_z_4544"
  >0</span><span 
  class="button green"
  id="rating_p_4544"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/4544/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5887">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20090221103043/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/5887/">#5887</a>(<script language="JavaScript">print_time(new Date("2008/02/27 17:35 GMT"));</script><noscript>2008/02/27 17:35 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>このバグはPython2.5.2で修正されました。というわけでパッチです。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre><span class="gd">--- a.py    Thu Feb 28 02:32:31 2008</span>
<span class="gi">+++ a.py    Thu Feb 28 02:32:46 2008</span>
<span class="gu">@@ -1,10 +1,11 @@</span>
 from decimal import *
<span class="gd">-import itertools</span>
<span class="gi">+import itertools, sys</span>
 
<span class="gd">-def divmod(x, y): # workaround for python2.5 decimal mod bug.</span>
<span class="gd">-    div = x // y</span>
<span class="gd">-    mod = x - div * y</span>
<span class="gd">-    return div, mod</span>
<span class="gi">+if sys.version_info[:3] &lt;= (2, 5, 1):</span>
<span class="gi">+    def divmod(x, y): # workaround for python2.5 decimal mod bug.</span>
<span class="gi">+        div = x // y</span>
<span class="gi">+        mod = x - div * y</span>
<span class="gi">+        return div, mod</span>
 
 def decimal_exp(x):
     div, mod = divmod(x, Decimal(&quot;2.3025850929940456840179914546844&quot;))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/5887/addtag/" class="addtag" id="addtag_5887">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/5887/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/5887/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5887"
  >-</span><span
  class="button yellow"
  id="rating_z_5887"
  >0</span><span 
  class="button green"
  id="rating_p_5887"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/3138/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090221103043/http://ja.doukaku.org/comment/5887/root/"><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/5887/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8178">
  <p class="banner"><a href="/web/20090221103043/http://ja.doukaku.org/user/973/" target="_top">taninsw</a>

	
	&nbsp;
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/8178/">#8178</a>(<script language="JavaScript">print_time(new Date("2008/12/15 00:58 GMT"));</script><noscript>2008/12/15 00:58 GMT</noscript>)
	
	
	
	[<a href="/web/20090221103043/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ただしい結果がかえってこないダメな例として投稿します。誤差の問題でしょうか</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre><span class="nv">f</span> <span class="o">=</span> <span class="p">(</span><span class="o">\</span><span class="nv">n</span><span class="o">-&gt;</span><span class="nv">exp</span><span class="p">(</span><span class="nv">pi</span> <span class="o">*</span> <span class="nv">sqrt</span> <span class="nv">n</span><span class="p">))</span>
<span class="nv">g</span> <span class="o">=</span> <span class="p">(</span><span class="o">\</span><span class="nv">x</span><span class="o">-&gt;</span><span class="mf">0.0001</span> <span class="o">&gt;</span> <span class="p">(</span><span class="nv">abs</span> <span class="o">$</span> <span class="nv">fromInteger</span><span class="p">(</span><span class="nv">round</span> <span class="nv">x</span><span class="p">)</span> <span class="o">-</span> <span class="nv">x</span><span class="p">)</span> <span class="p">)</span>
<span class="nv">main</span> <span class="o">=</span> <span class="nv">print</span><span class="o">$</span><span class="nv">filter</span> <span class="p">(</span><span class="nv">g</span><span class="o">.</span><span class="nv">f</span><span class="p">)</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="mi">200</span><span class="p">]</span>

<span class="cm">{-</span>
<span class="cm">[37.0,58.0,117.0,128.0,129.0,130.0,131.0,132.0,133.0,134.0,135.0,136.0,137.0,138.0,139.0,140.0,141.0,142.0,143.0,144.0,145.0,146.0,147.0,148.0,149.0,150.0,151.0,152.0,153.0,154.0,155.0,156.0,157.0,158.0,159.0,160.0,161.0,162.0,163.0,164.0,165.0,166.0,167.0,168.0,169.0,170.0,171.0,172.0,173.0,174.0,175.0,176.0,177.0,178.0,179.0,180.0,181.0,182.0,183.0,184.0,185.0,186.0,187.0,188.0,189.0,190.0,191.0,192.0,193.0,194.0,195.0,196.0,197.0,198.0,199.0,200.0]</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090221103043/http://ja.doukaku.org/comment/8178/addtag/" class="addtag" id="addtag_8178">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090221103043/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090221103043/http://ja.doukaku.org/comment/8178/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090221103043/http://ja.doukaku.org/comment/8178/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8178"
  >-</span><span
  class="button yellow"
  id="rating_z_8178"
  >0</span><span 
  class="button green"
  id="rating_p_8178"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090221103043/http://ja.doukaku.org/60/reply_to/8178/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20090221103043if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20090221103043/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20090221103043/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20090221103043/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20090221103043/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20090221103043/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20090221103043/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20090221103043/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20090221103043/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090221103043/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090221103043/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20090221103043im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20090221103043/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20090221103043/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20090221103043/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20090221103043/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20090221103043/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20090221103043/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20090221103043/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20090221103043/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20090221103043im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20090221103043/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20090221103043/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20090221103043/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20090221103043js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 10:30:43 Feb 21, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 13:42:21 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
