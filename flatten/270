
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
メソッド数の多い組み込みクラスを列挙
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20100712040233cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20100712040233cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20100712040233cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20100712040233/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20100712040233/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20100712040233js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20100712040233js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20100712040233js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20100712040233js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app11.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/270\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "12";
var displayMonth = "Jul";
var displayYear = "2010";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/270/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20100712040233" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20100506132704/http://ja.doukaku.org/270/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="6 May 2010"><strong>MAY</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 4:02:33 Jul 12, 2010">JUL</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Aug
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20100506132704/http://ja.doukaku.org/270/flatten/" title="13:27:04 May 6, 2010" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 4:02:33 Jul 12, 2010">12</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 4:02:33 Jul 12, 2010">2010</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2011
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20100712040233*/http://ja.doukaku.org/270/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">6 May 10 - 12 Jul 10</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000000000000_2010:6:000010100000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20100712040233/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20100712040233/http://ja.doukaku.org/270/">メソッド数の多い組み込みクラスを列挙</a>
</h2>

    





<div class="comment" id="comment9197">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9197/">#9197</a>(<script language="JavaScript">print_time(new Date("2009/06/19 04:52 GMT"));</script><noscript>2009/06/19 04:52 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefaf;">-1/5=-0.20</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>言語処理系に組み込みの全クラスについて、それぞれに定義されているメソッド数が多い順に上位10番目までのクラス名とメソッド数を出力するコードを書いてください。全クラス数も示してください。</p>
<p>なお、「組み込み」「クラス」「メソッド」などについては、必要であれば、その言語にふさわしい対象や機能に適宜読み替えてください。（たとえば、組み込み→標準添付、クラス→型・モジュール・パッケージ…、メソッド→関数・プロシージャ…といった具合に）</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9197/addtag/" class="addtag" id="addtag_9197">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/jJvLlYmc/">jJvLlYmc</a>
    
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffefaf;"
  >-1/5=-0.20</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9197"
  >-</span><span
  class="button yellow"
  id="rating_z_9197"
  >0</span><span 
  class="button green"
  id="rating_p_9197"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100712040233/http://ja.doukaku.org/comment/9197/">
    2
    replies
  </a>

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9197/">
  返信
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment9230">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9230/">#9230</a>(<script language="JavaScript">print_time(new Date("2009/06/24 01:41 GMT"));</script><noscript>2009/06/24 01:41 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>ああ…、ごめんなさい。大事な但し書きを忘れました。orz</p>
<p>可能であれば、継承したメソッド数は含まずに、そのクラスで定義（再定義も含む）されたメソッド数のみをカウントしてください。</p>
<p>言語処理系ごとに、普段目にするクラス群において、最大、どのくらいのメソッドを定義したクラスが存在するのか（心情的に許容されるのか）を知りたかったのですが、継承されたメソッドを含めてしまうと、階層が深くなるほどメソッド数が多くなる当たり前の傾向を見るだけになってしまうので…</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20100712040233/http://d.hatena.ne.jp/sumim/20090619/p1">Ruby がクラスにメソッドを詰め込みすぎだって？　ふっ…</a>
	</p>  
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9230/addtag/" class="addtag" id="addtag_9230">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/boRhxLSC/">boRhxLSC</a>
    
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9230"
  >-</span><span
  class="button yellow"
  id="rating_z_9230"
  >0</span><span 
  class="button green"
  id="rating_p_9230"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9197/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9230/root/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9230/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment9232">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9232/">#9232</a>(<script language="JavaScript">print_time(new Date("2009/06/24 02:54 GMT"));</script><noscript>2009/06/24 02:54 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>おなじ理由で、メタクラスを持たない言語では、static メソッドについてもカウントから除いてください。もし数える場合でも別物としてカウントしてください（SomeClass -&gt; 15, SomeClass static -&gt; 5 というように）。</p>
<p>おそらく、わざわざ static メソッドだけ個別にカウントせずとも、省いてしまっても結果には影響しないだろうと思われます（static メソッド数が上位10番に入るほど多く定義されているクラスは存在しないと予想されるので）。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9232/addtag/" class="addtag" id="addtag_9232">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9232"
  >-</span><span
  class="button yellow"
  id="rating_z_9232"
  >0</span><span 
  class="button green"
  id="rating_p_9232"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9197/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9232/root/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9232/">
  返信
  </a>]
  </div>
</div>
</div>




  


    </div>
  



<div class="indent">
<a href="/web/20100712040233/http://ja.doukaku.org/270/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - フラット表示</h2>
<a href="/web/20100712040233/http://ja.doukaku.org/270/nested/">ネスト表示</a>
<a href="/web/20100712040233/http://ja.doukaku.org/270/">非表示</a> 


  
  <br/>

  
  




<div class="comment" id="comment9228">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9228/">#9228</a>(<script language="JavaScript">print_time(new Date("2009/06/23 23:42 GMT"));</script><noscript>2009/06/23 23:42 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>「言語処理系に組み込みの全クラス」が、.NET Frameworkのどこまでに該当するかが分からなかったので、そのプロジェクトで参照されている全クラスを対象としました。</p>
<p>以下の実行結果は、普通にWindowsApplicationのプロジェクトを作ると参照されているものだけが対象になっています。参照するアセンブリを増やせば、結果が変わってくると思います。</p>
<p>以下、実行結果:</p>
<pre class="literal-block">
System.Convert: 314
System.Reflection.Emit.TypeBuilder: 170
System.Runtime.InteropServices.Marshal: 156
System.Type: 146
System.Reflection.Emit.EnumBuilder: 135
System.Net.Sockets.Socket: 135
System.Reflection.Emit.GenericTypeParameterBuilder: 134
System.RuntimeType: 131
System.ReflectionOnlyType: 131
System.Reflection.TypeDelegator: 129
System.Reflection.Emit.SymbolType: 129
System.Reflection.Emit.TypeBuilderInstantiation: 129
全クラス数: 4295
</pre>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Reflection</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">Doukaku270</span> <span class="k">{</span>
    <span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
            <span class="kt">int</span> <span class="n">classCount</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="n">SortedDictionary</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Type</span><span class="p">&gt;&gt;</span> <span class="n">result</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SortedDictionary</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Type</span><span class="p">&gt;&gt;();</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="n">AssemblyName</span> <span class="n">name</span> <span class="k">in</span> <span class="k">typeof</span><span class="p">(</span><span class="n">Program</span><span class="p">).</span><span class="n">Assembly</span><span class="p">.</span><span class="n">GetReferencedAssemblies</span><span class="p">())</span> <span class="k">{</span>
                <span class="n">Assembly</span> <span class="n">asm</span> <span class="p">=</span> <span class="n">Assembly</span><span class="p">.</span><span class="n">Load</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">asm</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="k">{</span>
                    <span class="k">foreach</span> <span class="p">(</span><span class="n">Type</span> <span class="n">type</span> <span class="k">in</span> <span class="n">asm</span><span class="p">.</span><span class="n">GetTypes</span><span class="p">())</span> <span class="k">{</span>
                        <span class="kt">int</span> <span class="n">methodCount</span> <span class="p">=</span> <span class="n">type</span><span class="p">.</span><span class="n">GetMethods</span><span class="p">().</span><span class="n">Length</span><span class="p">;</span>
                        <span class="k">if</span> <span class="p">(!</span><span class="n">result</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="n">methodCount</span><span class="p">))</span> <span class="k">{</span>
                            <span class="n">result</span><span class="p">[</span><span class="n">methodCount</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Type</span><span class="p">&gt;();</span>
                        <span class="k">}</span>
                        <span class="n">result</span><span class="p">[</span><span class="n">methodCount</span><span class="p">].</span><span class="n">Add</span><span class="p">(</span><span class="n">type</span><span class="p">);</span>
                        <span class="n">classCount</span><span class="p">++;</span>
                    <span class="k">}</span>
                <span class="k">}</span>
            <span class="k">}</span>

            <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">keyList</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;(</span><span class="n">result</span><span class="p">.</span><span class="n">Keys</span><span class="p">);</span>
            <span class="n">keyList</span><span class="p">.</span><span class="n">Reverse</span><span class="p">();</span>
            <span class="kt">int</span> <span class="n">count</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="k">foreach</span> <span class="p">(</span><span class="kt">int</span> <span class="n">key</span> <span class="k">in</span> <span class="n">keyList</span><span class="p">.</span><span class="n">GetRange</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">10</span><span class="p">))</span> <span class="k">{</span>
                <span class="k">foreach</span> <span class="p">(</span><span class="n">Type</span> <span class="n">type</span> <span class="k">in</span> <span class="n">result</span><span class="p">[</span><span class="n">key</span><span class="p">])</span> <span class="k">{</span>
                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}: {1}&quot;</span><span class="p">,</span> <span class="n">type</span><span class="p">.</span><span class="n">FullName</span><span class="p">,</span> <span class="n">key</span><span class="p">);</span>
                    <span class="n">count</span><span class="p">++;</span>
                <span class="k">}</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">count</span> <span class="p">&gt;=</span> <span class="m">10</span><span class="p">)</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;全クラス数: {0}&quot;</span><span class="p">,</span> <span class="n">classCount</span><span class="p">);</span>
        <span class="k">}</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9228/addtag/" class="addtag" id="addtag_9228">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9228/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9228/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9228"
  >-</span><span
  class="button yellow"
  id="rating_z_9228"
  >0</span><span 
  class="button green"
  id="rating_p_9228"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9228/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9229">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/322/" target="_top">sawat</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9229/">#9229</a>(<script language="JavaScript">print_time(new Date("2009/06/24 00:54 GMT"));</script><noscript>2009/06/24 00:54 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  java.homeのrt.jar&nbsp;(最も基本的なライブラリ)&nbsp;に含まれる&nbsp;java&nbsp;か&nbsp;javax&nbsp;で始まるパッケージに属するクラスを対象としました。<br/>メソッド数はそのクラスが持つpublicメソッドの数で、継承されたものを含みます。<br/><br/>結果は以下の通り<br/>javax.swing.JMenuItem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;407<br/>javax.swing.JPasswordField&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;407<br/>javax.swing.text.html.FrameView$FrameEditorPane&nbsp;:&nbsp;408<br/>javax.swing.JEditorPane&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;408<br/>javax.swing.JCheckBoxMenuItem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;409<br/>javax.swing.JFormattedTextField&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;412<br/>javax.swing.JTextPane&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;422<br/>javax.swing.JMenu&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;433<br/>javax.swing.JTree&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;437<br/>javax.swing.JTable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;456
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58</pre></td><td class="code"><div class="highlight"><pre><span class="k">package</span> <span class="n">doukaku</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.concurrent.atomic.AtomicInteger</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.jar.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">HugeClasses</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="k">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="k">final</span> <span class="n">File</span> <span class="n">rt</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;java.home&quot;</span><span class="o">),</span> <span class="s">&quot;lib/rt.jar&quot;</span><span class="o">);</span>

        <span class="k">if</span> <span class="o">(!</span><span class="n">rt</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;rt.jarが見つかりません。&quot;</span><span class="o">);</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">final</span> <span class="kt">int</span> <span class="n">topN</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
        <span class="n">NavigableSet</span><span class="o">&lt;</span><span class="n">ClassHolder</span><span class="o">&gt;</span> <span class="n">sortSet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TreeSet</span><span class="o">&lt;</span><span class="n">ClassHolder</span><span class="o">&gt;();</span>

        <span class="k">for</span> <span class="o">(</span><span class="n">JarEntry</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">Collections</span><span class="o">.</span><span class="na">list</span><span class="o">(</span><span class="k">new</span> <span class="n">JarFile</span><span class="o">(</span><span class="n">rt</span><span class="o">).</span><span class="na">entries</span><span class="o">()))</span> <span class="o">{</span>
            <span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">entry</span><span class="o">.</span><span class="na">getName</span><span class="o">();</span>
            <span class="k">if</span> <span class="o">((</span><span class="n">name</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;java/&quot;</span><span class="o">)</span> <span class="o">||</span> <span class="n">name</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;javax/&quot;</span><span class="o">))</span>
                    <span class="o">&amp;&amp;</span> <span class="n">name</span><span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="s">&quot;.class&quot;</span><span class="o">))</span> <span class="o">{</span>

                <span class="n">String</span> <span class="n">className</span> <span class="o">=</span> <span class="n">name</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">name</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="mi">6</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="sc">&#39;/&#39;</span><span class="o">,</span> <span class="sc">&#39;.&#39;</span><span class="o">);</span>
                <span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">clazz</span> <span class="o">=</span> <span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="n">className</span><span class="o">);</span>
                <span class="n">sortSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">ClassHolder</span><span class="o">(</span><span class="n">clazz</span><span class="o">));</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">sortSet</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">topN</span><span class="o">)</span> <span class="n">sortSet</span><span class="o">.</span><span class="na">pollFirst</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">for</span> <span class="o">(</span><span class="n">ClassHolder</span> <span class="n">classHolder</span> <span class="o">:</span> <span class="n">sortSet</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%-60s: %d%n&quot;</span><span class="o">,</span> <span class="n">classHolder</span><span class="o">.</span><span class="na">className</span><span class="o">,</span>
                    <span class="n">classHolder</span><span class="o">.</span><span class="na">methodCount</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">ClassHolder</span> <span class="k">implements</span> <span class="n">Comparable</span><span class="o">&lt;</span><span class="n">ClassHolder</span><span class="o">&gt;</span> <span class="o">{</span>
        <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">AtomicInteger</span> <span class="n">idCounter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AtomicInteger</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="k">private</span> <span class="n">String</span> <span class="n">className</span><span class="o">;</span>
        <span class="k">private</span> <span class="kt">int</span> <span class="n">methodCount</span><span class="o">;</span>
        <span class="k">private</span> <span class="kt">int</span> <span class="n">id</span><span class="o">;</span>

        <span class="n">ClassHolder</span><span class="o">(</span><span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">clazz</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">id</span> <span class="o">=</span> <span class="n">idCounter</span><span class="o">.</span><span class="na">getAndIncrement</span><span class="o">();</span>
            <span class="n">className</span> <span class="o">=</span> <span class="n">clazz</span><span class="o">.</span><span class="na">getName</span><span class="o">();</span>
            <span class="n">methodCount</span> <span class="o">=</span> <span class="n">clazz</span><span class="o">.</span><span class="na">getMethods</span><span class="o">().</span><span class="na">length</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="nd">@Override</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">compareTo</span><span class="o">(</span><span class="n">ClassHolder</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">methodCount</span> <span class="o">!=</span> <span class="n">o</span><span class="o">.</span><span class="na">methodCount</span> <span class="o">?</span>
                    <span class="n">methodCount</span> <span class="o">-</span> <span class="n">o</span><span class="o">.</span><span class="na">methodCount</span>
                    <span class="o">:</span> <span class="n">id</span> <span class="o">-</span> <span class="n">o</span><span class="o">.</span><span class="na">id</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9229/addtag/" class="addtag" id="addtag_9229">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9229/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9229/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9229"
  >-</span><span
  class="button yellow"
  id="rating_z_9229"
  >0</span><span 
  class="button green"
  id="rating_p_9229"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9229/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9230">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9230/">#9230</a>(<script language="JavaScript">print_time(new Date("2009/06/24 01:41 GMT"));</script><noscript>2009/06/24 01:41 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ああ…、ごめんなさい。大事な但し書きを忘れました。orz</p>
<p>可能であれば、継承したメソッド数は含まずに、そのクラスで定義（再定義も含む）されたメソッド数のみをカウントしてください。</p>
<p>言語処理系ごとに、普段目にするクラス群において、最大、どのくらいのメソッドを定義したクラスが存在するのか（心情的に許容されるのか）を知りたかったのですが、継承されたメソッドを含めてしまうと、階層が深くなるほどメソッド数が多くなる当たり前の傾向を見るだけになってしまうので…</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20100712040233/http://d.hatena.ne.jp/sumim/20090619/p1">Ruby がクラスにメソッドを詰め込みすぎだって？　ふっ…</a>
	</p>  
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9230/addtag/" class="addtag" id="addtag_9230">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/boRhxLSC/">boRhxLSC</a>
    
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9230"
  >-</span><span
  class="button yellow"
  id="rating_z_9230"
  >0</span><span 
  class="button green"
  id="rating_p_9230"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9197/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9230/root/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9230/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9231">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/581/" target="_top">割と普通</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9231/">#9231</a>(<script language="JavaScript">print_time(new Date("2009/06/24 02:01 GMT"));</script><noscript>2009/06/24 02:01 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>私もhoriuchiさんと同じく、プロジェクトの参照しているアセンブリのみ対象として実施しました。
ワンライナー狙って見ましたが、やりすぎ感があったので、途中コードもコメントで残しておきました。
horiuchiさんとの差異については以下の部分かな？とか。

■コード
BindingFlagを使ってprivateも参照してる
# このフラグで合ってるはずですが・・・

■環境
Visual Studio 2010beta
.NET Framework 4.0</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre><span class="c">//全クラス数 : 3634</span>
<span class="c">//System.Linq.Expressions.Expression : 387</span>
<span class="c">//System.Convert : 313</span>
<span class="c">//System.Linq.ParallelEnumerable : 210</span>
<span class="c">//System.Runtime.InteropServices.Marshal : 203</span>
<span class="c">//System.Linq.Enumerable : 203</span>
<span class="c">//Microsoft.Win32.Win32Native : 199</span>
<span class="c">//System.Linq.Expressions.Strings : 180</span>
<span class="c">//System.Linq.Expressions.Error : 146</span>
<span class="c">//System.Linq.Queryable : 124</span>
<span class="c">//System.Console : 117</span>

<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Reflection</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="c">//var classTypes = typeof(Program).Assembly.GetReferencedAssemblies().Select(assemblyName =&gt; Assembly.Load(assemblyName).GetTypes()).SelectMany(classType =&gt; classType);</span>
        <span class="c">//var classCountDict = classTypes.ToDictionary(classType =&gt; classType, classType =&gt; classType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static | BindingFlags.DeclaredOnly).Count());</span>
        <span class="c">//var result = classCountDict.OrderByDescending(pair =&gt; pair.Value).Take(10);</span>
        <span class="n">var</span> <span class="n">classCountDict</span> <span class="p">=</span> <span class="k">typeof</span><span class="p">(</span><span class="n">Program</span><span class="p">).</span><span class="n">Assembly</span><span class="p">.</span><span class="n">GetReferencedAssemblies</span><span class="p">().</span><span class="n">Select</span><span class="p">(</span><span class="n">assemblyName</span> <span class="p">=&gt;</span> <span class="n">Assembly</span><span class="p">.</span><span class="n">Load</span><span class="p">(</span><span class="n">assemblyName</span><span class="p">).</span><span class="n">GetTypes</span><span class="p">()).</span><span class="n">SelectMany</span><span class="p">(</span><span class="n">classType</span> <span class="p">=&gt;</span> <span class="n">classType</span><span class="p">).</span><span class="n">ToDictionary</span><span class="p">(</span><span class="n">classType</span> <span class="p">=&gt;</span> <span class="n">classType</span><span class="p">,</span> <span class="n">classType</span> <span class="p">=&gt;</span> <span class="n">classType</span><span class="p">.</span><span class="n">GetMethods</span><span class="p">(</span><span class="n">BindingFlags</span><span class="p">.</span><span class="n">NonPublic</span> <span class="p">|</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">Public</span> <span class="p">|</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">Static</span> <span class="p">|</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">DeclaredOnly</span><span class="p">).</span><span class="n">Count</span><span class="p">());</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;全クラス数 : {0}&quot;</span><span class="p">,</span> <span class="n">classCountDict</span><span class="p">.</span><span class="n">Keys</span><span class="p">.</span><span class="n">Count</span><span class="p">());</span>
        <span class="k">foreach</span> <span class="p">(</span><span class="n">var</span> <span class="n">obj</span> <span class="k">in</span> <span class="n">classCountDict</span><span class="p">.</span><span class="n">OrderByDescending</span><span class="p">(</span><span class="n">pair</span> <span class="p">=&gt;</span> <span class="n">pair</span><span class="p">.</span><span class="n">Value</span><span class="p">).</span><span class="n">Take</span><span class="p">(</span><span class="m">10</span><span class="p">))</span>
        <span class="k">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0} : {1}&quot;</span><span class="p">,</span> <span class="n">obj</span><span class="p">.</span><span class="n">Key</span><span class="p">,</span> <span class="n">obj</span><span class="p">.</span><span class="n">Value</span><span class="p">);</span>
        <span class="k">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9231/addtag/" class="addtag" id="addtag_9231">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/LINQ/">LINQ</a>
    
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9231/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9231/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9231"
  >-</span><span
  class="button yellow"
  id="rating_z_9231"
  >0</span><span 
  class="button green"
  id="rating_p_9231"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9231/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9232">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9232/">#9232</a>(<script language="JavaScript">print_time(new Date("2009/06/24 02:54 GMT"));</script><noscript>2009/06/24 02:54 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>おなじ理由で、メタクラスを持たない言語では、static メソッドについてもカウントから除いてください。もし数える場合でも別物としてカウントしてください（SomeClass -&gt; 15, SomeClass static -&gt; 5 というように）。</p>
<p>おそらく、わざわざ static メソッドだけ個別にカウントせずとも、省いてしまっても結果には影響しないだろうと思われます（static メソッド数が上位10番に入るほど多く定義されているクラスは存在しないと予想されるので）。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9232/addtag/" class="addtag" id="addtag_9232">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9232"
  >-</span><span
  class="button yellow"
  id="rating_z_9232"
  >0</span><span 
  class="button green"
  id="rating_p_9232"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9197/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9232/root/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9232/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9233">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9233/">#9233</a>(<script language="JavaScript">print_time(new Date("2009/06/24 03:06 GMT"));</script><noscript>2009/06/24 03:06 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Squeak Smalltalk で。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre>| clsCount result |
clsCount := 0.
result := Dictionary new.
SystemNavigation default allBehaviorsDo: [:class |
    clsCount := clsCount + 1.
    result at: class put: class selectors size].
^{#全クラス数 -&gt; clsCount. (result associations sort: [:a :b | a value &gt; b value]) first: 10}


&quot;=&gt; {#全クラス数 -&gt; 4384. {
    Morph -&gt; 1165. 
    Player -&gt; 620. 
    PasteUpMorph -&gt; 469. 
    Preferences class -&gt; 450. 
    Object -&gt; 436. 
    ParagraphEditor -&gt; 284. 
    SyntaxMorph -&gt; 250. 
    Behavior -&gt; 243. 
    ScriptLoader -&gt; 236. 
    String -&gt; 233
}} &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9233/addtag/" class="addtag" id="addtag_9233">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9233/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9233/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9233"
  >-</span><span
  class="button yellow"
  id="rating_z_9233"
  >0</span><span 
  class="button green"
  id="rating_p_9233"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9233/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9234">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9234/">#9234</a>(<script language="JavaScript">print_time(new Date("2009/06/24 03:06 GMT"));</script><noscript>2009/06/24 03:06 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>何もuseしない場合のpackageとそこに定義されてるsubをSTASHから拾ってきて数えてます。</p>
<p>手元の環境(v5.10.0 built for MSWin32-x86-multi-thread) では</p>
<pre class="literal-block">
main::Win32 --- 21
main::version --- 16
Tie::Hash::NamedCapture --- 9
main::mro --- 9
main::utf8 --- 8
main::Internals --- 6
main::re --- 4
main::UNIVERSAL --- 4
PerlIO::Layer --- 2
main::DynaLoader --- 1
</pre>
<p>という結果になりました</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="k">my</span> <span class="nv">%cnt</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$top</span> <span class="o">=</span> <span class="s">&#39;*main::&#39;</span><span class="p">;</span>
<span class="n">count_subs</span><span class="p">(</span><span class="nv">$top</span><span class="p">,</span><span class="o">\</span><span class="nv">%cnt</span><span class="p">);</span>
<span class="o">--</span><span class="nv">$cnt</span><span class="p">{</span><span class="nv">$top</span><span class="p">};</span> <span class="c1"># sub count_subs の分を差し引く</span>
<span class="k">my</span> <span class="nv">$i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
<span class="vg">$\</span><span class="o">=</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="k">for</span> <span class="nb">map</span> <span class="p">{</span> <span class="s">&quot;@{[substr($_-&gt;[0],1,-2)]} --- $_-&gt;[1]&quot;</span> <span class="p">}</span>
<span class="nb">grep</span> <span class="p">{</span> <span class="o">++</span><span class="nv">$i</span> <span class="o">&lt;=</span> <span class="mi">10</span> <span class="p">}</span>
<span class="nb">sort</span> <span class="p">{</span><span class="nv">$b</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;=&gt;</span> <span class="nv">$a</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]}</span>
<span class="nb">map</span> <span class="p">{</span> <span class="p">[</span><span class="nv">$_</span><span class="p">,</span> <span class="nv">$cnt</span><span class="p">{</span><span class="nv">$_</span><span class="p">}]</span> <span class="p">}</span> <span class="nb">keys</span> <span class="nv">%cnt</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">%counted</span><span class="p">;</span>
<span class="k">sub </span><span class="nf">count_subs</span>
<span class="p">{</span>
  <span class="k">my</span> <span class="p">(</span><span class="nv">$mod</span><span class="p">,</span> <span class="nv">$cnt</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
  <span class="k">return</span> <span class="k">if</span> <span class="nb">exists</span> <span class="nv">$cnt</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$mod</span><span class="p">};</span>
  <span class="nv">$cnt</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$mod</span><span class="p">}</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">return</span> <span class="k">if</span> <span class="o">!</span><span class="nb">defined</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$mod</span><span class="p">};</span>
  <span class="k">while</span> <span class="p">(</span><span class="k">my</span> <span class="p">(</span><span class="nv">$k</span><span class="p">,</span><span class="nv">$v</span><span class="p">)</span> <span class="o">=</span> <span class="nb">each</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$mod</span><span class="p">})</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$k</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="ow">eq</span> <span class="s">&#39;::&#39;</span> <span class="p">)</span> <span class="p">{</span>
      <span class="n">count_subs</span><span class="p">(</span><span class="nv">$v</span><span class="p">,</span> <span class="o">\</span><span class="nv">%cnt</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">elsif</span> <span class="p">(</span><span class="nb">defined</span> <span class="o">&amp;</span><span class="p">{</span><span class="nv">$v</span><span class="p">}</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nb">exists</span> <span class="nv">$counted</span><span class="p">{</span><span class="nv">$v</span><span class="p">})</span> <span class="p">{</span>
      <span class="o">++</span><span class="nv">$cnt</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$mod</span><span class="p">};</span>
      <span class="nv">$counted</span><span class="p">{</span><span class="nv">$v</span><span class="p">}</span><span class="o">=</span><span class="nb">undef</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9234/addtag/" class="addtag" id="addtag_9234">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9234/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9234/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9234"
  >-</span><span
  class="button yellow"
  id="rating_z_9234"
  >0</span><span 
  class="button green"
  id="rating_p_9234"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9234/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9239">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/755/" target="_top">athos</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9239/">#9239</a>(<script language="JavaScript">print_time(new Date("2009/06/24 04:28 GMT"));</script><noscript>2009/06/24 04:28 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>もっといい方法がありそうな気がします。

$ gosh doukaku270.scm
&lt;top&gt;      : 36
&lt;class&gt;    : 17
&lt;generic&gt;  :  7
&lt;list&gt;     :  7
&lt;integer&gt;  :  7
&lt;method&gt;   :  5
&lt;symbol&gt;   :  5
&lt;string&gt;   :  5
&lt;regmatch&gt; :  4
&lt;object&gt;   :  4
$</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-1</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="nv">*builtin-identifiers*</span>
  <span class="p">(</span><span class="nf">let1</span> <span class="nv">module</span> <span class="p">(</span><span class="nf">find-module</span> <span class="ss">&#39;gauche</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">filter-map</span>
      <span class="p">(</span><span class="nf">cut</span> <span class="nv">global-variable-ref</span> <span class="nv">module</span> <span class="nv">&lt;&gt;</span> <span class="no">#f</span><span class="p">)</span>
      <span class="p">(</span><span class="nf">remove</span> <span class="p">(</span><span class="nf">cut</span> <span class="nv">eq?</span> <span class="ss">&#39;~$</span> <span class="nv">&lt;&gt;</span><span class="p">)</span>
              <span class="p">(</span><span class="nf">hash-table-map</span> <span class="p">(</span><span class="nf">module-table</span> <span class="nv">module</span><span class="p">)</span>
                              <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">sym</span> <span class="nv">_</span><span class="p">)</span> <span class="nv">sym</span><span class="p">))))))</span>

<span class="p">(</span><span class="k">define </span><span class="nv">*builtin-classes*</span>
  <span class="p">(</span><span class="nf">filter</span> <span class="p">(</span><span class="nf">cut</span> <span class="nv">is-a?</span> <span class="nv">&lt;&gt;</span> <span class="nv">&lt;class&gt;</span><span class="p">)</span> <span class="nv">*builtin-identifiers*</span><span class="p">))</span>

<span class="p">(</span><span class="k">define </span><span class="nv">*builtin-generic-functions*</span>
  <span class="p">(</span><span class="nf">filter</span> <span class="p">(</span><span class="nf">cut</span> <span class="nv">is-a?</span> <span class="nv">&lt;&gt;</span> <span class="nv">&lt;generic&gt;</span><span class="p">)</span> <span class="nv">*builtin-identifiers*</span><span class="p">))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">direct-methods</span> <span class="nv">class</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">filter-map</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">method</span><span class="p">)</span>
                <span class="p">(</span><span class="nf">let1</span> <span class="nv">specs</span> <span class="p">(</span><span class="nf">slot-ref</span> <span class="nv">method</span> <span class="ss">&#39;specializers</span><span class="p">)</span>
                  <span class="p">(</span><span class="k">and </span><span class="p">(</span><span class="nb">member </span><span class="nv">class</span> <span class="nv">specs</span><span class="p">)</span>
                       <span class="nv">method</span><span class="p">)))</span>
              <span class="p">(</span><span class="nf">append-map</span> <span class="p">(</span><span class="nf">cut</span> <span class="nv">slot-ref</span> <span class="nv">&lt;&gt;</span> <span class="ss">&#39;methods</span><span class="p">)</span>
                          <span class="nv">*builtin-generic-functions*</span><span class="p">)))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">main</span> <span class="nv">args</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">for-each</span>
    <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x</span><span class="p">)</span> <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;~10a : ~2d~%&quot;</span> <span class="p">(</span><span class="nf">class-name</span> <span class="p">(</span><span class="nb">car </span><span class="nv">x</span><span class="p">))</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">x</span><span class="p">)))</span>
    <span class="p">(</span><span class="nf">take</span> <span class="p">(</span><span class="nf">sort-by</span> <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">class</span><span class="p">)</span>
                          <span class="p">(</span><span class="nb">cons </span><span class="nv">class</span> <span class="p">(</span><span class="nb">length </span><span class="p">(</span><span class="nf">direct-methods</span> <span class="nv">class</span><span class="p">))))</span>
                        <span class="nv">*builtin-classes*</span><span class="p">)</span>
                   <span class="nv">cdr</span>
                   <span class="nv">&gt;</span><span class="p">)</span>
          <span class="mi">10</span><span class="p">))</span>
  <span class="mi">0</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9239/addtag/" class="addtag" id="addtag_9239">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/Gauche/">Gauche</a>
    
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9239/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9239/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9239"
  >-</span><span
  class="button yellow"
  id="rating_z_9239"
  >0</span><span 
  class="button green"
  id="rating_p_9239"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9239/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9241">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9241/">#9241</a>(<script language="JavaScript">print_time(new Date("2009/06/24 08:42 GMT"));</script><noscript>2009/06/24 08:42 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>パッケージごとに、関数定義をもつシンボルの個数を数えました。他のパッケージから継承したシンボルは含めていません。</p>
<p>CLISP 2.38 で動かしてみた結果:</p>
<pre class="literal-block">
SYSTEM          : 1394
COMMON-LISP     : 755
CS-COMMON-LISP  : 752
CLOS            : 647
EXT             : 503
POSIX           : 147
FFI             : 127
I18N            : 63
GRAY            : 31
EXPORTING       : 28
</pre>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre>(loop for p in (list-all-packages) collect
  (list (package-name p)
        (loop for s being each present-symbol in p count (fboundp s)))
  into x
  finally (format t &quot;~10{~{~15A : ~A~}~%~}~%&quot;
                  (sort x #&#39;&gt; :key #&#39;cadr)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9241/addtag/" class="addtag" id="addtag_9241">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9241/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9241/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9241"
  >-</span><span
  class="button yellow"
  id="rating_z_9241"
  >0</span><span 
  class="button green"
  id="rating_p_9241"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9241/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9243">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9243/">#9243</a>(<script language="JavaScript">print_time(new Date("2009/06/24 09:38 GMT"));</script><noscript>2009/06/24 09:38 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  組み込みのクラスを「ブートストラップクラス」と解釈しました（ブートストラップクラスはシステムプロパティ&nbsp;sun.boot.class.path&nbsp;で示されます）。クラスパスで示される&nbsp;Jar&nbsp;ファイルからクラス名を取り出し、リフレクションでメソッド数を数えています。<br/><br/>Mac&nbsp;OS&nbsp;X&nbsp;10.4.11&nbsp;の&nbsp;java&nbsp;1.5.0_19&nbsp;で実行した結果は以下です。<br/><br/>com.sun.corba.se.impl.logging.ORBUtilSystemException&nbsp;-&gt;&nbsp;1248<br/>com.sun.corba.se.impl.logging.OMGSystemException&nbsp;-&gt;&nbsp;524<br/>com.sun.corba.se.impl.logging.POASystemException&nbsp;-&gt;&nbsp;284<br/>java.awt.Component&nbsp;-&gt;&nbsp;277<br/>org.w3c.dom.css.CSS2Properties&nbsp;-&gt;&nbsp;244<br/>com.sun.rowset.CachedRowSetImpl&nbsp;-&gt;&nbsp;211<br/>com.sun.rowset.internal.SyncResolverImpl&nbsp;-&gt;&nbsp;206<br/>com.sun.tools.example.debug.expr.ExpressionParser&nbsp;-&gt;&nbsp;206<br/>com.sun.org.apache.bcel.internal.generic.EmptyVisitor&nbsp;-&gt;&nbsp;180<br/>com.sun.org.apache.bcel.internal.generic.Visitor&nbsp;-&gt;&nbsp;180<br/><br/>ちなみに、static&nbsp;メソッドのみを取り出した場合は以下です。<br/><br/>java.util.Arrays&nbsp;static&nbsp;-&gt;&nbsp;114<br/>java.nio.Bits&nbsp;static&nbsp;-&gt;&nbsp;114<br/>apple.laf.AquaImageFactory&nbsp;static&nbsp;-&gt;&nbsp;98<br/>java.lang.Character&nbsp;static&nbsp;-&gt;&nbsp;80<br/>sun.awt.FontConfiguration&nbsp;static&nbsp;-&gt;&nbsp;79<br/>com.sun.security.sasl.digest.DigestMD5Base&nbsp;static&nbsp;-&gt;&nbsp;70<br/>com.sun.org.apache.xalan.internal.xsltc.runtime.BasisLibrary&nbsp;static&nbsp;-&gt;&nbsp;69<br/>java.net.URI&nbsp;static&nbsp;-&gt;&nbsp;66<br/>apple.laf.AquaSliderUI&nbsp;static&nbsp;-&gt;&nbsp;65<br/>com.sun.tools.corba.se.idl.ParseException&nbsp;static&nbsp;-&gt;&nbsp;63
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.lang.reflect.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Map.Entry</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.jar.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="o">{</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="k">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">ClassNotFoundException</span> <span class="o">{</span>
        <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">classMap</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">jarName</span> <span class="o">:</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;sun.boot.class.path&quot;</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;path.separator&quot;</span><span class="o">)))</span> <span class="o">{</span>
            <span class="n">File</span> <span class="n">jar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">jarName</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">jar</span><span class="o">.</span><span class="na">isFile</span><span class="o">())</span> <span class="o">{</span>
                <span class="n">JarFile</span> <span class="n">jf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JarFile</span><span class="o">(</span><span class="n">jar</span><span class="o">);</span>
                <span class="k">for</span> <span class="o">(</span><span class="n">Enumeration</span><span class="o">&lt;</span><span class="n">JarEntry</span><span class="o">&gt;</span> <span class="n">i</span> <span class="o">=</span> <span class="n">jf</span><span class="o">.</span><span class="na">entries</span><span class="o">();</span> <span class="n">i</span><span class="o">.</span><span class="na">hasMoreElements</span><span class="o">();)</span> <span class="o">{</span>
                    <span class="n">String</span> <span class="n">entry</span> <span class="o">=</span> <span class="n">i</span><span class="o">.</span><span class="na">nextElement</span><span class="o">().</span><span class="na">getName</span><span class="o">();</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="s">&quot;.class&quot;</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">String</span> <span class="n">className</span> <span class="o">=</span> <span class="n">entry</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">entry</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="mi">6</span><span class="o">).</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">,</span> <span class="s">&quot;.&quot;</span><span class="o">);</span>
                        <span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">cc</span> <span class="o">=</span> <span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="n">className</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
                        <span class="kt">int</span> <span class="n">staticCount</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">memberCount</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                        <span class="k">for</span> <span class="o">(</span><span class="n">Method</span> <span class="n">m</span> <span class="o">:</span> <span class="n">cc</span><span class="o">.</span><span class="na">getDeclaredMethods</span><span class="o">())</span> <span class="o">{</span>
                            <span class="k">if</span> <span class="o">((</span><span class="n">m</span><span class="o">.</span><span class="na">getModifiers</span><span class="o">()</span> <span class="o">&amp;</span> <span class="n">Modifier</span><span class="o">.</span><span class="na">STATIC</span><span class="o">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span>
                                <span class="n">staticCount</span><span class="o">++;</span>
                            <span class="k">else</span> 
                                <span class="n">memberCount</span><span class="o">++;</span>
                        <span class="o">}</span>
                        <span class="n">classMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">className</span><span class="o">,</span> <span class="n">memberCount</span><span class="o">);</span>
                        <span class="n">classMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">className</span> <span class="o">+</span> <span class="s">&quot; static&quot;</span><span class="o">,</span> <span class="n">staticCount</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;[]</span> <span class="n">a</span> <span class="o">=</span> <span class="n">classMap</span><span class="o">.</span><span class="na">entrySet</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;&gt;</span> <span class="o">()</span> <span class="o">{</span>
            <span class="k">public</span> <span class="kt">int</span> <span class="n">compare</span><span class="o">(</span><span class="n">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">o1</span><span class="o">,</span> <span class="n">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">o2</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">return</span> <span class="o">-</span><span class="n">o1</span><span class="o">.</span><span class="na">getValue</span><span class="o">().</span><span class="na">compareTo</span><span class="o">(</span><span class="n">o2</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>
            <span class="o">}</span>    
        <span class="o">});</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;%s -&gt; %d%n&quot;</span><span class="o">,</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getKey</span><span class="o">(),</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getValue</span><span class="o">());</span>        
        <span class="o">}</span>
    <span class="o">}</span>

<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9243/addtag/" class="addtag" id="addtag_9243">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9243/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9243/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9243"
  >-</span><span
  class="button yellow"
  id="rating_z_9243"
  >0</span><span 
  class="button green"
  id="rating_p_9243"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9243/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9260">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/785/" target="_top">Dubhead</a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9260/">#9260</a>(<script language="JavaScript">print_time(new Date("2009/06/29 04:23 GMT"));</script><noscript>2009/06/29 04:23 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Fan 1.0.44で。
Podはnamespaceのようなもの、Typeはクラスのようなものです。
継承したメソッドを判別する綺麗な方法はないようで、いったん文字列に変換して比較する、という回りくどい事をやってます。
出力行数は十分小さいと仮定してエラーチェック手抜きしてます。

実行結果
% fan Doukaku270.fan
web::WebOutStream, 95
compiler::Parser, 84
compiler::CodeAsm, 75
compiler::CheckErrors, 74
sys::Buf, 71
sys::List, 65
sys::Str, 65
compiler::CType, 62
testSys::DateTimeTest, 54
testSys::StrTest, 52
testSys::UriTest, 52
%
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre>class Doukaku270
{
    static const Int numClassesToDisplay := 10

    Void main() {
        Int:Type[] counts := [:] // 連想配列: メソッド数 -&gt; クラスのリスト

        // countsを埋める
        Pod.list.each |Pod pod| {
            pod.types.each |Type type| {
                numMethods := type.methods.findAll {
                    // 継承したものでなく、このクラスで実装されたものを選ぶ
                    it.toStr.startsWith(&quot;${type.toStr}.&quot;)
                }.size
                counts[numMethods] = counts.get(numMethods, [,]).add(type)
            }
        }

        numPrints := 0  // 出力済みの行数
        keys := counts.keys.sortr
        while (numPrints &lt; numClassesToDisplay) {
            numMethods := keys.removeAt(0)
            counts[numMethods].each |Type type| {
                echo(&quot;${type.toStr}, $numMethods&quot;)
            }
            numPrints += counts[numMethods].size
        }
    }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9260/addtag/" class="addtag" id="addtag_9260">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/Fan/">Fan</a>
    
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9260/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9260/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9260"
  >-</span><span
  class="button yellow"
  id="rating_z_9260"
  >0</span><span 
  class="button green"
  id="rating_p_9260"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9260/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9261">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/813/" target="_top">lunlumo</a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9261/">#9261</a>(<script language="JavaScript">print_time(new Date("2009/06/29 12:36 GMT"));</script><noscript>2009/06/29 12:36 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  　Rubyはこんな感じでした。<br/><br/>total:&nbsp;&nbsp;135<br/>String:&nbsp;369<br/>Array:&nbsp;&nbsp;355<br/>File:&nbsp;&nbsp;&nbsp;349<br/>IO:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;340<br/>Hash:&nbsp;&nbsp;&nbsp;334<br/>Class:&nbsp;&nbsp;332<br/>Module:&nbsp;331<br/>Fixnum:&nbsp;329<br/>Bignum:&nbsp;327<br/>File::Stat:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;322
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre><span class="n">list</span> <span class="o">=</span> <span class="o">[]</span>
<span class="no">ObjectSpace</span><span class="o">.</span><span class="n">each_object</span><span class="p">(</span><span class="no">Class</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">klass</span><span class="o">|</span>
  <span class="n">info</span> <span class="o">=</span> <span class="p">{</span>
    <span class="ss">:name</span> <span class="o">=&gt;</span> <span class="n">klass</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
    <span class="ss">:methods</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="ss">:instance_methods</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="ss">:public</span> <span class="o">=&gt;</span> <span class="n">klass</span><span class="o">.</span><span class="n">public_instance_methods</span><span class="p">,</span>
        <span class="ss">:protected</span> <span class="o">=&gt;</span> <span class="n">klass</span><span class="o">.</span><span class="n">protected_instance_methods</span><span class="p">,</span>
        <span class="ss">:private</span> <span class="o">=&gt;</span> <span class="n">klass</span><span class="o">.</span><span class="n">private_instance_methods</span>
      <span class="p">},</span>
      <span class="ss">:class_methods</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="ss">:public</span> <span class="o">=&gt;</span> <span class="n">klass</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">public_instance_methods</span><span class="p">,</span>
        <span class="ss">:protected</span> <span class="o">=&gt;</span> <span class="n">klass</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">protected_instance_methods</span><span class="p">,</span>
        <span class="ss">:private</span> <span class="o">=&gt;</span> <span class="n">klass</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">private_instance_methods</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="n">info</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span> <span class="o">|</span><span class="n">obj</span><span class="o">|</span>
    <span class="k">def</span> <span class="nf">name</span>
      <span class="nb">self</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span>
    <span class="k">end</span>
    <span class="k">def</span> <span class="nf">method_count</span>
      <span class="o">[</span><span class="ss">:instance_methods</span><span class="p">,</span> <span class="ss">:class_methods</span><span class="o">].</span><span class="n">inject</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">c</span><span class="p">,</span> <span class="n">t</span><span class="o">|</span>
        <span class="n">c</span> <span class="o">+</span> <span class="o">[</span><span class="ss">:public</span><span class="p">,</span> <span class="ss">:protected</span><span class="p">,</span> <span class="ss">:private</span><span class="o">].</span><span class="n">inject</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">r</span><span class="p">,</span> <span class="n">s</span><span class="o">|</span>
          <span class="n">r</span> <span class="o">+</span> <span class="nb">self</span><span class="o">[</span><span class="ss">:methods</span><span class="o">][</span><span class="n">t</span><span class="o">][</span><span class="n">s</span><span class="o">].</span><span class="n">size</span>
        <span class="k">end</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="n">list</span> <span class="o">&lt;&lt;</span> <span class="n">info</span>
<span class="k">end</span>
<span class="nb">puts</span> <span class="s2">&quot;total:</span><span class="se">\t</span><span class="si">#{</span><span class="n">list</span><span class="o">.</span><span class="n">size</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="n">list</span><span class="o">.</span><span class="n">sort</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">|</span> <span class="n">b</span><span class="o">.</span><span class="n">method_count</span> <span class="o">&lt;=&gt;</span> <span class="n">a</span><span class="o">.</span><span class="n">method_count</span> <span class="p">}</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">:</span><span class="se">\t</span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">method_count</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9261/addtag/" class="addtag" id="addtag_9261">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9261/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9261/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9261"
  >-</span><span
  class="button yellow"
  id="rating_z_9261"
  >0</span><span 
  class="button green"
  id="rating_p_9261"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9261/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9280">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/813/" target="_top">lunlumo</a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9280/">#9280</a>(<script language="JavaScript">print_time(new Date("2009/07/03 14:37 GMT"));</script><noscript>2009/07/03 14:37 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  　scala-library.jarとscala-swing.jarについて調べてみました。Java側のリフレクションを使って調べているので，ソースコード上の値とはずれがあります。<br/><br/>total:&nbsp;&nbsp;3173<br/>scala.swing.Key:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;206<br/>scala.collection.jcl.Buffer$Projection:&nbsp;166<br/>scala.collection.jcl.ArrayList:&nbsp;158<br/>scala.collection.jcl.LinkedList:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;158<br/>scala.collection.jcl.Buffer$$anon$2:&nbsp;&nbsp;&nbsp;&nbsp;155<br/>scala.collection.jcl.SortedMap$$anon$1:&nbsp;153<br/>scala.collection.jcl.TreeMap:&nbsp;&nbsp;&nbsp;153<br/>scala.collection.jcl.SortedMap$$anon$2:&nbsp;151<br/>scala.collection.jcl.Buffer$Range:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;150<br/>scala.collection.jcl.TreeSet:&nbsp;&nbsp;&nbsp;146
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre>import scala.collection.jcl.Conversions
import java.io.File
import java.util.Collections
import java.util.jar.{JarEntry,JarFile}

object MethodCount {
    def getClassInformations(l:List[String]):List[Pair[String,Int]] = {
        def getInfo(n:String):Pair[String,Int] =
            try { (n, Class.forName(n).getDeclaredMethods.size) } catch { case _ =&gt; (n, -1) }
        def isClass(n:String):Boolean = n.endsWith(&quot;.class&quot;) &amp;&amp; !n.matches(&quot;\\$\\$anonfun\\$&quot;)
        def getClassName(n:String):String = n.substring(0, n.length - 6).replace(&#39;/&#39;, &#39;.&#39;)
        def getJarEntries(f:File):List[JarEntry] =
            Conversions.convertList(Collections.list((new JarFile(f)).entries)).toList
        def getFiles(l:List[String]):List[File] =
            l.map(new File(System.getProperty(&quot;scala.home&quot;), _)).filter(_.exists)
        getFiles(l).map(getJarEntries).flatten(identity(_)).map(_.getName).filter(isClass).map(getClassName).map(getInfo)
    }
    def main(args:Array[String]):Unit = {
        val l:List[Pair[String,Int]] = getClassInformations(List(&quot;lib/scala-library.jar&quot;, &quot;lib/scala-swing.jar&quot;))
        Console.printf(&quot;total:\t%d\n&quot;, l.size)
        l.sort(_._2 &gt; _._2).take(10).foreach((i) =&gt; Console.printf(&quot;%s:\t%d\n&quot;, i._1, i._2))
    }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9280/addtag/" class="addtag" id="addtag_9280">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9280/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9280/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9280"
  >-</span><span
  class="button yellow"
  id="rating_z_9280"
  >0</span><span 
  class="button green"
  id="rating_p_9280"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9280/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9348">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9348/">#9348</a>(<script language="JavaScript">print_time(new Date("2009/07/13 06:35 GMT"));</script><noscript>2009/07/13 06:35 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ghc 限定．Preludeからエクスポートされているclassは15個しかないので全部列挙
(10個に限定するなら，コード中のコメントアウトされている部分をuncommentする)
括弧内がメソッドの数</p>
<p>実行例:
<a href="/web/20100712040233/http://ja.doukaku.org/270/flatten/#id1" name="id2"><span class="problematic" id="id2">*</span></a>Main&gt; :main
Floating (18)
RealFloat (14)
Enum (8)
Ord (7)
Num (7)
Integral (7)
RealFrac (5)
Read (5)
Monad (4)
Show (3)
Fractional (3)
Eq (2)
Bounded (2)
Real (1)
Functor (1)
...
number of classes : 15</p>
<div class="system-message" id="id1">
<p class="system-message-title">System Message: <a name="id1">WARNING/2</a> (<tt class="docutils">&lt;string&gt;</tt>, line 5); <em><a href="/web/20100712040233/http://ja.doukaku.org/270/flatten/#id2">backlink</a></em></p>
Inline emphasis start-string without end-string.</div>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Ord</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Process</span>

<span class="kr">data</span> <span class="n">ClassInfo</span> <span class="o">=</span> <span class="n">CI</span> <span class="p">{</span> <span class="nv">className</span> <span class="o">::</span> <span class="n">String</span><span class="p">,</span> <span class="nv">numberOfMethods</span> <span class="o">::</span> <span class="n">Int</span> <span class="p">}</span>

<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span> <span class="p">{</span> <span class="nv">res</span> <span class="o">&lt;-</span> <span class="nv">readProcess</span> <span class="s">&quot;ghc&quot;</span> <span class="p">[</span><span class="s">&quot;-e&quot;</span><span class="p">,</span><span class="s">&quot;:browse Prelude&quot;</span><span class="p">]</span> <span class="p">[]</span>
          <span class="p">;</span> <span class="kr">let</span> <span class="nv">cis</span> <span class="o">=</span> <span class="nv">classInfos</span> <span class="p">[]</span> <span class="o">$</span> <span class="nv">lines</span> <span class="nv">res</span>
          <span class="p">;</span> <span class="kr">let</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">length</span> <span class="nv">cis</span>
          <span class="p">;</span> <span class="nv">putStr</span> <span class="o">$</span> <span class="nv">unlines</span> <span class="cm">{- $ take 10 -}</span>
          <span class="o">$</span> <span class="nv">map</span> <span class="nv">showClassInfo</span> <span class="o">$</span> <span class="nv">sortBy</span> <span class="p">(</span><span class="nv">flip</span> <span class="p">(</span><span class="nv">comparing</span> <span class="nv">numberOfMethods</span><span class="p">))</span> <span class="nv">cis</span>
          <span class="p">;</span> <span class="nv">putStr</span> <span class="o">$</span> <span class="nv">unlines</span> <span class="p">[</span><span class="s">&quot;...&quot;</span><span class="p">,</span><span class="s">&quot;number of classes : &quot;</span><span class="o">++</span><span class="nv">show</span> <span class="nv">n</span><span class="p">]</span>
          <span class="p">}</span>

<span class="nv">showClassInfo</span> <span class="o">::</span> <span class="n">ClassInfo</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">showClassInfo</span> <span class="p">(</span><span class="n">CI</span> <span class="nv">name</span> <span class="nv">n</span><span class="p">)</span> <span class="o">=</span> <span class="nv">name</span> <span class="o">++</span> <span class="s">&quot; (&quot;</span> <span class="o">++</span> <span class="nv">show</span> <span class="nv">n</span> <span class="o">++</span> <span class="s">&quot;)&quot;</span>

<span class="nv">classInfos</span> <span class="o">::</span> <span class="p">[</span><span class="n">ClassInfo</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">ClassInfo</span><span class="p">]</span>
<span class="nv">classInfos</span> <span class="nv">a</span> <span class="p">[]</span> <span class="o">=</span> <span class="nv">a</span>
<span class="nv">classInfos</span> <span class="nv">a</span> <span class="p">(</span><span class="nv">l</span><span class="o">:</span><span class="nv">ls</span><span class="p">)</span>
 <span class="o">|</span> <span class="nv">head</span> <span class="nv">lw</span> <span class="o">/=</span> <span class="s">&quot;class&quot;</span> <span class="o">=</span> <span class="nv">classInfos</span> <span class="nv">a</span> <span class="nv">ls</span>
 <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">=</span> <span class="nv">classInfos</span> <span class="p">(</span><span class="nv">ci</span><span class="o">:</span><span class="nv">a</span><span class="p">)</span> <span class="nv">ls&#39;&#39;</span>
   <span class="kr">where</span> 
     <span class="nv">lw</span> <span class="o">=</span> <span class="nv">words</span> <span class="nv">l</span>
     <span class="nv">ci</span> <span class="o">=</span> <span class="n">CI</span> <span class="nv">name</span> <span class="p">(</span><span class="kr">if</span> <span class="nv">null</span> <span class="nv">ls&#39;</span> <span class="kr">then</span> <span class="mi">1</span> <span class="kr">else</span> <span class="nv">length</span> <span class="nv">ls&#39;</span><span class="p">)</span>
     <span class="p">(</span><span class="nv">ls&#39;</span><span class="p">,</span><span class="nv">ls&#39;&#39;</span><span class="p">)</span> <span class="o">=</span> <span class="nv">break</span> <span class="p">(</span><span class="nv">not</span> <span class="o">.</span> <span class="p">(</span><span class="s">&quot;  &quot;</span> <span class="p">`</span><span class="nv">isPrefixOf</span><span class="p">`))</span> <span class="nv">ls</span>
     <span class="nv">name</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">break</span> <span class="p">(</span><span class="s">&quot;=&gt;&quot;</span><span class="o">==</span><span class="p">)</span> <span class="nv">lw</span> <span class="kr">of</span>
       <span class="p">(</span><span class="kr">_</span><span class="p">,[])</span>  <span class="o">-&gt;</span> <span class="nv">head</span> <span class="o">$</span> <span class="nv">tail</span> <span class="nv">lw</span>
       <span class="p">(</span><span class="kr">_</span><span class="p">,</span><span class="nv">lw&#39;</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">head</span> <span class="o">$</span> <span class="nv">tail</span> <span class="nv">lw&#39;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9348/addtag/" class="addtag" id="addtag_9348">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/System.Process/">System.Process</a>
    
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9348/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9348/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9348"
  >-</span><span
  class="button yellow"
  id="rating_z_9348"
  >0</span><span 
  class="button green"
  id="rating_p_9348"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100712040233/http://ja.doukaku.org/comment/9348/">
    1
    reply
  </a>

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9348/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9349">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9349/">#9349</a>(<script language="JavaScript">print_time(new Date("2009/07/13 06:40 GMT"));</script><noscript>2009/07/13 06:40 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>すみません。プレビューせずに、形式をまちがえてupしたので実行例がこわれてしまいました。orz  実行例だけupします

*Main&gt; :main
Floating (18)
RealFloat (14)
Enum (8)
Ord (7)
Num (7)
Integral (7)
RealFrac (5)
Read (5)
Monad (4)
Show (3)
Fractional (3)
Eq (2)
Bounded (2)
Real (1)
Functor (1)
...
number of classes : 15

</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9349/addtag/" class="addtag" id="addtag_9349">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9349"
  >-</span><span
  class="button yellow"
  id="rating_z_9349"
  >0</span><span 
  class="button green"
  id="rating_p_9349"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9348/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9349/root/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9349/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9352">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/994/" target="_top">creeper</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9352/">#9352</a>(<script language="JavaScript">print_time(new Date("2009/07/13 14:42 GMT"));</script><noscript>2009/07/13 14:42 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Squirrel3.0で。
「継承したメソッド数は含まずに」が出来なかったのでカッとなって横に伸ばした。
反省はしていない。

結果：
roottable  :  56
blob       :  13
file       :  10
stream     :   9
regexp     :   5

ええ、別に継承考慮しなくても結果変わらないんです。
あまりにさみしいので、グローバル関数のようなものをroottableとしてカウントしています。
自分自身が含まれてしまわないようにlocal tab = のような書き方になっています。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre>local tab =
{
    function count_function(cla)
    {
        local ret = 0;
        foreach(k,v in cla) if (type(v) == &quot;function&quot;) ret++;
        return ret;
    }

    function main()
    {
        local result = [{ key=&quot;roottable&quot;, val=count_function(getroottable()) }];
        foreach(k,v in getroottable()) if (type(v)==&quot;class&quot;) result.append({ key=k, val=count_function(v) });
        result.sort(@(a, b) b.val-a.val);
        for(local i=0; i&lt;10 &amp;&amp; i&lt;result.len(); i++) print(format(&quot;%-10s : %3d\n&quot;, result[i].key, result[i].val));
    }
}
tab.main();
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9352/addtag/" class="addtag" id="addtag_9352">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/Squirrel/">Squirrel</a>
    
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9352/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9352/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9352"
  >-</span><span
  class="button yellow"
  id="rating_z_9352"
  >0</span><span 
  class="button green"
  id="rating_p_9352"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100712040233/http://ja.doukaku.org/comment/9352/">
    1
    reply
  </a>

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9352/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9354">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/994/" target="_top">creeper</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9354/">#9354</a>(<script language="JavaScript">print_time(new Date("2009/07/13 14:57 GMT"));</script><noscript>2009/07/13 14:57 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>&gt;ええ、別に継承考慮しなくても結果変わらないんです。
と思いましたが、fileとblobはstreamを継承してるっぽいですorz</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9354/addtag/" class="addtag" id="addtag_9354">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9354"
  >-</span><span
  class="button yellow"
  id="rating_z_9354"
  >0</span><span 
  class="button green"
  id="rating_p_9354"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9352/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9354/root/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9354/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9361">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/1025/" target="_top">tanakahisateru</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9361/">#9361</a>(<script language="JavaScript">print_time(new Date("2009/07/13 16:20 GMT"));</script><noscript>2009/07/13 16:20 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>結果</p>
<p>Only regular methods: unicode(39), str(37), set(16), dict(15), file(15), list(9), frozenset(7), complex(1), enumerate(1), reversed(1)</p>
<p>Including special methods: unicode(66), str(64), bool(53), int(53), long(53), set(49), float(46), complex(45), list(41), dict(39)</p>
<p>「標準ライブラリ」は数え切れないほどあって、サードパーティ製との境目が不明瞭になるので、「組み込み」を意味する__builtins__モジュールに限って調査しました。</p>
<p>また、Pythonでは、__XXX__形式の特殊メソッドを実装してオブジェクトの暗黙的な振る舞いを定義するので、それらを含まない場合と含む場合で分けて調査しました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">bi_of</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">__builtins__</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">special_name</span><span class="p">(</span><span class="n">a</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="s">&quot;__&quot;</span> <span class="ow">and</span> <span class="n">a</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">:]</span> <span class="o">==</span> <span class="s">&quot;__&quot;</span>

<span class="k">def</span> <span class="nf">bi_methods_of</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
    <span class="n">o</span> <span class="o">=</span> <span class="n">bi_of</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
    <span class="k">return</span> <span class="nb">filter</span><span class="p">(</span>
        <span class="k">lambda</span> <span class="n">a</span><span class="p">:</span> <span class="ow">not</span> <span class="n">special_name</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="ow">and</span> <span class="nb">callable</span><span class="p">(</span><span class="nb">getattr</span><span class="p">(</span><span class="n">o</span><span class="p">,</span> <span class="n">a</span><span class="p">)),</span>
        <span class="nb">dir</span><span class="p">(</span><span class="n">o</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">bi_all_methods_of</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
    <span class="n">o</span> <span class="o">=</span> <span class="n">bi_of</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
    <span class="k">return</span> <span class="nb">filter</span><span class="p">(</span>
        <span class="k">lambda</span> <span class="n">a</span><span class="p">:</span> <span class="nb">callable</span><span class="p">(</span><span class="nb">getattr</span><span class="p">(</span><span class="n">o</span><span class="p">,</span> <span class="n">a</span><span class="p">)),</span>
        <span class="nb">dir</span><span class="p">(</span><span class="n">o</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">class_method_ranking</span><span class="p">(</span><span class="n">counter_func</span><span class="p">,</span> <span class="n">limit</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">map</span><span class="p">(</span>
        <span class="k">lambda</span> <span class="n">name</span><span class="p">:</span> <span class="s">&quot;</span><span class="si">%s</span><span class="s">(</span><span class="si">%d</span><span class="s">)&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">counter_func</span><span class="p">(</span><span class="n">name</span><span class="p">))),</span>
        <span class="n">sorted</span><span class="p">(</span>
            <span class="nb">filter</span><span class="p">(</span>
                <span class="k">lambda</span> <span class="n">name</span><span class="p">:</span> <span class="nb">type</span><span class="p">(</span><span class="n">bi_of</span><span class="p">(</span><span class="n">name</span><span class="p">))</span> <span class="o">==</span> <span class="nb">type</span><span class="p">,</span>
                <span class="nb">dir</span><span class="p">(</span><span class="n">__builtins__</span><span class="p">)),</span>
            <span class="k">lambda</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">:</span> <span class="nb">cmp</span><span class="p">(</span>
                <span class="nb">len</span><span class="p">(</span><span class="n">counter_func</span><span class="p">(</span><span class="n">a</span><span class="p">)),</span>
                <span class="nb">len</span><span class="p">(</span><span class="n">counter_func</span><span class="p">(</span><span class="n">b</span><span class="p">))</span>
                <span class="p">)</span> <span class="o">*</span> <span class="o">-</span><span class="mi">1</span>
        <span class="p">)[</span><span class="mi">0</span><span class="p">:</span><span class="n">limit</span><span class="p">]</span>
    <span class="p">)</span>

<span class="k">print</span> <span class="s">&quot;Only regular methods: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="s">&quot;, &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span>
    <span class="n">class_method_ranking</span><span class="p">(</span><span class="n">bi_methods_of</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
<span class="k">print</span> <span class="s">&quot;Including special methods: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="s">&quot;, &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span>
    <span class="n">class_method_ranking</span><span class="p">(</span><span class="n">bi_all_methods_of</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9361/addtag/" class="addtag" id="addtag_9361">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/Python2.5/">Python2.5</a>
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/WtUMGKcf/">WtUMGKcf</a>
    
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9361/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9361/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9361"
  >-</span><span
  class="button yellow"
  id="rating_z_9361"
  >0</span><span 
  class="button green"
  id="rating_p_9361"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100712040233/http://ja.doukaku.org/comment/9361/">
    1
    reply
  </a>

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9361/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9541">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/959/" target="_top">uehaj</a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9541/">#9541</a>(<script language="JavaScript">print_time(new Date("2009/08/30 23:04 GMT"));</script><noscript>2009/08/30 23:04 GMT</noscript>)
	
	
	
	[<a href="/web/20100712040233/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <div class="section">
<p>GDKの追加メソッドで調べてみました。具体的には、org.codehaus.groovy.runtime.*パッケージのDefaultGroovyMethods, DefaultGroovyStaticMethods, SwingGroovyMethodの３つのクラスで定義されているメソッドからです。</p>
<p>結果はこんな感じ。</p>
<p></p>
<p>1 : class java.lang.String=72</p>
<p>2 : class java.io.File=63</p>
<p>3 : class java.lang.Object=57</p>
<p>4 : interface java.util.Collection=44</p>
<p>5 : class java.lang.Number=33</p>
<p>6 : class [Ljava.lang.Object;=31</p>
<p>7 : interface java.util.Map=25</p>
<p>8 : interface java.util.List=25</p>
<p>9 : class java.io.InputStream=23</p>
<p>10 : class java.lang.Character=22</p>
</div>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>import org.codehaus.groovy.runtime.*

counter=[:]

[DefaultGroovyMethods,
 DefaultGroovyStaticMethods,
 SwingGroovyMethods].each {
    it.methods.each {
        if (it.parameterTypes.size() != 0) {
            cls = it.parameterTypes[0]
            counter[cls]==null? counter[cls]=1 : counter[cls]++
        }
    }
}
counter.entrySet().sort { -it.value }[0..9].eachWithIndex { it, idx -&gt;
    println &quot;${idx+1} : $it&quot;
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9541/addtag/" class="addtag" id="addtag_9541">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100712040233/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9541/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100712040233/http://ja.doukaku.org/comment/9541/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9541"
  >-</span><span
  class="button yellow"
  id="rating_z_9541"
  >0</span><span 
  class="button green"
  id="rating_p_9541"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9541/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9714">
  <p class="banner"><a href="/web/20100712040233/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100712040233/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9714/">#9714</a>(<script language="JavaScript">print_time(new Date("2009/12/05 07:44 GMT"));</script><noscript>2009/12/05 07:44 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Hello! :) is it work? &lt;a href=http://test.com&gt;test&lt;/a&gt;</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20100712040233/http://test.com/">Hello</a>
	</p>  
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100712040233/http://ja.doukaku.org/comment/9714/addtag/" class="addtag" id="addtag_9714">タグ</a>:
	
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/MKGPEHUJ/">MKGPEHUJ</a>
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/qbeJUVNe/">qbeJUVNe</a>
    
    <a href="/web/20100712040233/http://ja.doukaku.org/tag/xIoyWFFf/">xIoyWFFf</a>
    
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9714"
  >-</span><span
  class="button yellow"
  id="rating_z_9714"
  >0</span><span 
  class="button green"
  id="rating_p_9714"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9361/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100712040233/http://ja.doukaku.org/comment/9714/root/"><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100712040233/http://ja.doukaku.org/270/reply_to/9714/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20100712040233if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20100712040233/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20100712040233/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20100712040233/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20100712040233/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20100712040233/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20100712040233/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20100712040233/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20100712040233/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100712040233/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100712040233/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20100712040233im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20100712040233/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20100712040233/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20100712040233/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20100712040233/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20100712040233/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20100712040233/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20100712040233/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20100712040233/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20100712040233im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20100712040233/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20100712040233/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20100712040233/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20100712040233js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 4:02:33 Jul 12, 2010 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:38:03 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
