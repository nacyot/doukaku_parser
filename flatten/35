
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
ローカル変数の一覧を取得
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20080513064854cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20080513064854cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20080513064854cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20080513064854/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20080513064854/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20080513064854js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20080513064854js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20080513064854js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20080513064854js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app14.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/35\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "13";
var displayMonth = "May";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/35/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20080513064854" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20070513180302/http://ja.doukaku.org/35/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="13 May 2007"><strong>MAY</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 6:48:54 May 13, 2008">MAY</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jun
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20070513180302/http://ja.doukaku.org/35/flatten/" title="18:03:02 May 13, 2007" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 6:48:54 May 13, 2008">13</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2007
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 6:48:54 May 13, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20080513064854*/http://ja.doukaku.org/35/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 13 May 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000000_2008:4:000010000000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20080513064854/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20080513064854im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20080513064854/http://ja.doukaku.org/35/">ローカル変数の一覧を取得</a>
</h2>

    





<div class="comment" id="comment3391">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/3391/">#3391</a>(<script language="JavaScript">print_time(new Date("2007/07/30 15:31 GMT"));</script><noscript>2007/07/30 15:31 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  リフレクション系のお題の続編です。
ローカル変数の内容を取得して連想配列(ハッシュ、辞書など)に詰める
コードを書いてください。
<p>
Pythonで表現すると、下のコードの???部分を埋めることになります。
<pre>
>>> def foo():
	x = 1
	y = "hello"
	???
	return result

>>> foo()
{'y': 'hello', 'x': 1}
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/3391/addtag/" class="addtag" id="addtag_3391">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3391"
  >-</span><span
  class="button yellow"
  id="rating_z_3391"
  >0</span><span 
  class="button green"
  id="rating_p_3391"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/3391/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20080513064854/http://ja.doukaku.org/35/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - フラット表示</h2>
<a href="/web/20080513064854/http://ja.doukaku.org/35/nested/">ネスト表示</a>
<a href="/web/20080513064854/http://ja.doukaku.org/35/">非表示</a> 


  
  




<div class="comment" id="comment1597">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1597/">#1597</a>(<script language="JavaScript">print_time(new Date("2007/07/30 15:47 GMT"));</script><noscript>2007/07/30 15:47 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #bfffbf;">4/4=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  これはpythonからの挑戦状かな？
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">foo</span><span class="p">():</span>
  <span class="n">x</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="n">y</span> <span class="o">=</span> <span class="s">&quot;hello&quot;</span>
  <span class="n">result</span> <span class="o">=</span> <span class="nb">locals</span><span class="p">()</span>
  <span class="k">return</span> <span class="n">result</span>
<span class="k">print</span> <span class="n">foo</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1597/addtag/" class="addtag" id="addtag_1597">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1597/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1597/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #bfffbf;"
  >4/4=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1597"
  >-</span><span
  class="button yellow"
  id="rating_z_1597"
  >0</span><span 
  class="button green"
  id="rating_p_1597"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080513064854/http://ja.doukaku.org/comment/1597/">
    1
    reply
  </a>

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1597/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1598">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1598/">#1598</a>(<script language="JavaScript">print_time(new Date("2007/07/30 16:17 GMT"));</script><noscript>2007/07/30 16:17 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>&gt; foo()
      x       y 
    "1" "hello" </pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre>foo &lt;- function(){
    x = 1
    y = &quot;hello&quot;
    result &lt;- sapply(ls(), function(s) eval(as.symbol(s)))
    return(result)
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1598/addtag/" class="addtag" id="addtag_1598">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1598/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1598/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1598"
  >-</span><span
  class="button yellow"
  id="rating_z_1598"
  >0</span><span 
  class="button green"
  id="rating_p_1598"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1598/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1599">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1599/">#1599</a>(<script language="JavaScript">print_time(new Date("2007/07/30 16:26 GMT"));</script><noscript>2007/07/30 16:26 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">foo</span>
  <span class="n">x</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="n">y</span> <span class="o">=</span> <span class="s2">&quot;hello&quot;</span>
  <span class="no">Hash</span><span class="o">[*</span><span class="nb">local_variables</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="o">[</span><span class="n">v</span><span class="p">,</span><span class="nb">eval</span><span class="p">(</span><span class="n">v</span><span class="p">)</span><span class="o">]</span><span class="p">}</span><span class="o">.</span><span class="n">flatten</span><span class="o">]</span>
<span class="k">end</span>
<span class="n">foo</span><span class="p">()</span>                           <span class="c1"># =&gt; {&quot;x&quot;=&gt;1, &quot;y&quot;=&gt;&quot;hello&quot;}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1599/addtag/" class="addtag" id="addtag_1599">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1599/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1599/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1599"
  >-</span><span
  class="button yellow"
  id="rating_z_1599"
  >0</span><span 
  class="button green"
  id="rating_p_1599"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1599/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1600">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1600/">#1600</a>(<script language="JavaScript">print_time(new Date("2007/07/30 16:39 GMT"));</script><noscript>2007/07/30 16:39 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">foo</span>
  <span class="n">x</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="n">y</span> <span class="o">=</span> <span class="s2">&quot;hello&quot;</span>
  <span class="nb">local_variables</span><span class="o">.</span><span class="n">inject</span><span class="p">({})</span> <span class="p">{</span><span class="o">|</span><span class="n">result</span><span class="p">,</span> <span class="nb">name</span><span class="o">|</span>
    <span class="n">result</span><span class="o">[</span><span class="nb">name</span><span class="o">]</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
    <span class="n">result</span>
  <span class="p">}</span>
<span class="k">end</span>

<span class="nb">puts</span> <span class="s2">&quot;{&quot;</span><span class="o">+</span><span class="n">foo</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">k</span><span class="p">,</span><span class="n">v</span><span class="o">|</span> <span class="s2">&quot;&#39;</span><span class="si">#{</span><span class="n">k</span><span class="si">}</span><span class="s2">&#39; : </span><span class="si">#{</span><span class="n">v</span><span class="si">}</span><span class="s2">&#39;&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;}&quot;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1600/addtag/" class="addtag" id="addtag_1600">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1600/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1600/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1600"
  >-</span><span
  class="button yellow"
  id="rating_z_1600"
  >0</span><span 
  class="button green"
  id="rating_p_1600"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1600/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1601">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1601/">#1601</a>(<script language="JavaScript">print_time(new Date("2007/07/30 18:55 GMT"));</script><noscript>2007/07/30 18:55 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>これはキツイ…
Gaucheでは最適化によって、定数で初期化されて一度も
変更されないローカル変数とかは実行時には消えてしまいますし、
逆にマクロ展開によってプログラム上には無いローカル変数が
挿入される場合もあります。

やるとしたらマクロで処理系そのものを置き換えるしか
なさそうです。ここではletだけ再定義していますが、
ちゃんと動かすにはdefine, lambda, let*, letrec,
あたりの束縛系を全部再定義しないと…
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">util</span><span class="o">.</span><span class="nv">match</span><span class="p">)</span>

<span class="p">(</span><span class="nf">define-macro</span> <span class="p">(</span><span class="k">let </span><span class="nv">binds</span> <span class="o">.</span> <span class="nv">body</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">match</span> <span class="nv">binds</span>
    <span class="err">[</span><span class="p">((</span><span class="nf">var</span> <span class="nv">init</span><span class="p">)</span> <span class="o">...</span><span class="p">)</span>
     <span class="o">`</span><span class="p">((</span><span class="k">lambda </span><span class="p">(</span><span class="nf">local-vars</span><span class="p">)</span> <span class="p">(</span><span class="nb">apply </span><span class="p">(</span><span class="k">lambda </span><span class="o">,</span><span class="nv">var</span> <span class="o">,@</span><span class="nv">body</span><span class="p">)</span> <span class="p">(</span><span class="nb">map </span><span class="nv">cdr</span> <span class="nv">local-vars</span><span class="p">)))</span>
       <span class="p">(</span><span class="nb">list </span><span class="o">,@</span><span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">v</span> <span class="nv">i</span><span class="p">)</span> <span class="o">`</span><span class="p">(</span><span class="nb">cons </span><span class="ss">&#39;,v</span> <span class="o">,</span><span class="nv">i</span><span class="p">))</span> <span class="nv">var</span> <span class="nv">init</span><span class="p">)))</span><span class="err">]</span><span class="p">))</span>

<span class="c1">;;;</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">foo</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">x</span> <span class="mi">1</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">y</span> <span class="s">&quot;hello&quot;</span><span class="p">))</span>
    <span class="nv">local-vars</span><span class="p">))</span>
<span class="c1">;; =&gt; ((x . 1) (y . &quot;hello&quot;))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1601/addtag/" class="addtag" id="addtag_1601">タグ</a>:
	
    
    <a href="/web/20080513064854/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1601/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1601/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1601"
  >-</span><span
  class="button yellow"
  id="rating_z_1601"
  >0</span><span 
  class="button green"
  id="rating_p_1601"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1601/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1603">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1603/">#1603</a>(<script language="JavaScript">print_time(new Date("2007/07/31 01:19 GMT"));</script><noscript>2007/07/31 01:19 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Squeak Smalltalk で。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre>thisContext tempsAndValues
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1603/addtag/" class="addtag" id="addtag_1603">タグ</a>:
	
    
    <a href="/web/20080513064854/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1603/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1603/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1603"
  >-</span><span
  class="button yellow"
  id="rating_z_1603"
  >0</span><span 
  class="button green"
  id="rating_p_1603"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080513064854/http://ja.doukaku.org/comment/1603/">
    1
    reply
  </a>

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1603/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1605">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1605/">#1605</a>(<script language="JavaScript">print_time(new Date("2007/07/31 01:38 GMT"));</script><noscript>2007/07/31 01:38 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  すみません。タグを付け間違えていました(^_^;)。
お手数をおかけし恐縮ですが可能でしたら、Squeak_Smalltalk への変更を、お願いいたします。あわせて、#82 のタグも Squeak_Smalltalk に変えて、元のタグの Squeak は（今回の s といっしょに）削除していただければ幸いです。不注意でもうしわけありません。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1605/addtag/" class="addtag" id="addtag_1605">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1605"
  >-</span><span
  class="button yellow"
  id="rating_z_1605"
  >0</span><span 
  class="button green"
  id="rating_p_1605"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080513064854/http://ja.doukaku.org/comment/1603/"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080513064854/http://ja.doukaku.org/comment/1605/root/"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080513064854/http://ja.doukaku.org/comment/1605/">
    1
    reply
  </a>

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1605/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1606">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1606/">#1606</a>(<script language="JavaScript">print_time(new Date("2007/07/31 02:06 GMT"));</script><noscript>2007/07/31 02:06 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  修正しました。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1606/addtag/" class="addtag" id="addtag_1606">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1606"
  >-</span><span
  class="button yellow"
  id="rating_z_1606"
  >0</span><span 
  class="button green"
  id="rating_p_1606"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080513064854/http://ja.doukaku.org/comment/1605/"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080513064854/http://ja.doukaku.org/comment/1606/root/"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1606/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1607">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1607/">#1607</a>(<script language="JavaScript">print_time(new Date("2007/07/31 02:10 GMT"));</script><noscript>2007/07/31 02:10 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>他の言語からの挑戦状があまりたくさん届かないので
どうしても僕の得意なPythonからの挑戦状が増えます…
RubyのuniqとかPerlのマジカルインクリメントとか
いろいろ手を出してはいるんですけどね…</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1607/addtag/" class="addtag" id="addtag_1607">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1607"
  >-</span><span
  class="button yellow"
  id="rating_z_1607"
  >0</span><span 
  class="button green"
  id="rating_p_1607"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080513064854/http://ja.doukaku.org/comment/1597/"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080513064854/http://ja.doukaku.org/comment/1607/root/"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1607/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1611">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/96/" target="_top">ether</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1611/">#1611</a>(<script language="JavaScript">print_time(new Date("2007/07/31 03:58 GMT"));</script><noscript>2007/07/31 03:58 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/lua/">
	  Lua
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nf">locals</span><span class="p">()</span>
   <span class="kd">local</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>
   <span class="kd">local</span> <span class="n">t</span> <span class="o">=</span> <span class="p">{}</span>
   <span class="k">while</span> <span class="kc">true</span> <span class="k">do</span>
     <span class="kd">local</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="o">=</span> <span class="nf">debug.getlocal</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
     <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="kc">nil</span> <span class="k">then</span> <span class="k">break</span> <span class="k">end</span>
     <span class="n">t</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
     <span class="n">i</span> <span class="o">=</span>  <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
   <span class="k">end</span>
   <span class="k">return</span> <span class="n">t</span>
<span class="k">end</span>

<span class="k">function</span> <span class="nf">foo</span><span class="p">()</span>
  <span class="kd">local</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="kd">local</span> <span class="n">y</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">hello&quot;</span>
  <span class="k">return</span> <span class="n">locals</span><span class="p">(),</span> <span class="kc">nil</span>
<span class="k">end</span>

<span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="k">in</span> <span class="nf">pairs</span><span class="p">(</span><span class="n">foo</span><span class="p">())</span> <span class="k">do</span> <span class="nf">print</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span> <span class="k">end</span> 
<span class="c1">--&gt; y       hello</span>
<span class="c1">--&gt; x       1</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1611/addtag/" class="addtag" id="addtag_1611">タグ</a>:
	
    
    <a href="/web/20080513064854/http://ja.doukaku.org/tag/Lua5.1/">Lua5.1</a>
    
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/lua/">
		Lua
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1611/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1611/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1611"
  >-</span><span
  class="button yellow"
  id="rating_z_1611"
  >0</span><span 
  class="button green"
  id="rating_p_1611"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1611/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1615">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/172/" target="_top">cats</a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1615/">#1615</a>(<script language="JavaScript">print_time(new Date("2007/07/31 05:02 GMT"));</script><noscript>2007/07/31 05:02 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffdf;">0/2=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>正直、C#では厳しいので、静的な情報出力でお茶を濁している。
変数の名前も内容も出力していない。
できるとすれば、以下のような感じかな。デバッガ作るようなもんですね。
・コンパイルしてアセンブリにする。
・ホスティングプロセスでアセンブリを読込んで実行する。
・ProgramDebugDatabaseを読みこんでシンボルを取得。
・LocalVariablesを取得して表示。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Reflection</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Diagnostics</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
  <span class="k">{</span>
    <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
    <span class="kt">string</span> <span class="n">y</span> <span class="p">=</span> <span class="s">&quot;abc&quot;</span><span class="p">;</span>
    <span class="n">ShowLocalVariables</span><span class="p">(</span><span class="k">new</span> <span class="n">StackFrame</span><span class="p">(</span><span class="k">true</span><span class="p">));</span>
    <span class="c">// System.Int32 (0)</span>
    <span class="c">// System.String (1)</span>
  <span class="k">}</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">ShowLocalVariables</span><span class="p">(</span><span class="n">StackFrame</span> <span class="n">sf</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="n">LocalVariableInfo</span> <span class="n">lv</span> <span class="k">in</span> <span class="n">sf</span><span class="p">.</span><span class="n">GetMethod</span><span class="p">().</span><span class="n">GetMethodBody</span><span class="p">().</span><span class="n">LocalVariables</span><span class="p">)</span>
      <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">lv</span><span class="p">);</span>
  <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1615/addtag/" class="addtag" id="addtag_1615">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1615/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1615/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffdf;"
  >0/2=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1615"
  >-</span><span
  class="button yellow"
  id="rating_z_1615"
  >0</span><span 
  class="button green"
  id="rating_p_1615"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1615/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1617">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/60/" target="_top">noeta</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1617/">#1617</a>(<script language="JavaScript">print_time(new Date("2007/07/31 05:24 GMT"));</script><noscript>2007/07/31 05:24 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>それ、get_defined_vars() で</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">foo</span><span class="p">(){</span>
    <span class="nv">$x</span> <span class="o">=</span> <span class="m">1</span><span class="p">;</span>
    <span class="nv">$y</span> <span class="o">=</span> <span class="s1">&#39;hello&#39;</span><span class="p">;</span>
    <span class="k">return</span> <span class="nf">get_defined_vars</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1617/addtag/" class="addtag" id="addtag_1617">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1617/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1617/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1617"
  >-</span><span
  class="button yellow"
  id="rating_z_1617"
  >0</span><span 
  class="button green"
  id="rating_p_1617"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080513064854/http://ja.doukaku.org/comment/1617/">
    1
    reply
  </a>

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1617/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1623">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1623/">#1623</a>(<script language="JavaScript">print_time(new Date("2007/07/31 08:02 GMT"));</script><noscript>2007/07/31 08:02 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Perlでは局所変数を扱うためにはPadWalkerモジュールを使います。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="k">use</span> <span class="n">PadWalker</span> <span class="sx">qw(peek_my)</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Data::</span><span class="n">Dumper</span><span class="p">;</span>

<span class="k">sub </span><span class="nf">foo</span> <span class="p">{</span>
    <span class="k">my</span> <span class="nv">$x</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$y</span> <span class="o">=</span> <span class="s">&#39;hello&#39;</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$result</span> <span class="o">=</span> <span class="n">peek_my</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="k">return</span> <span class="nv">$result</span><span class="p">;</span>
<span class="p">}</span>

<span class="nb">warn</span> <span class="n">Dumper</span> <span class="n">foo</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1623/addtag/" class="addtag" id="addtag_1623">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1623/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1623/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1623"
  >-</span><span
  class="button yellow"
  id="rating_z_1623"
  >0</span><span 
  class="button green"
  id="rating_p_1623"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1623/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1626">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1626/">#1626</a>(<script language="JavaScript">print_time(new Date("2007/07/31 09:43 GMT"));</script><noscript>2007/07/31 09:43 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  ひたすら厳しい・・・。

とりあえずJDIで無理やり。
JAVA_OPTSに

-Xrunjdwp:transport=dt_socket,address=5056,server=y,suspend=n

と設定して実行します。なにかいい方法があったら是非教えてほしいです。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre>import com.sun.jdi._
import com.sun.jdi.connect._
import com.sun.jdi.connect.Connector._
import scala.collection.mutable.JavaMapAdaptor
import scala.collection.mutable.HashMap

class _localVariables(threadName:String) extends Thread {
 var result:HashMap[String, AnyRef] = null
 override def run = {
   val vmm = Bootstrap.virtualMachineManager
   val acs = vmm.attachingConnectors().toArray.map(_.asInstanceOf[AttachingConnector])
   val ac = acs.find(_.name == &quot;com.sun.jdi.SocketAttach&quot;).get
   val args = ac.defaultArguments
   val portNumber = args.get(&quot;port&quot;).asInstanceOf[IntegerArgument]
   portNumber.setValue(5056)
   val hostname   = args.get(&quot;hostname&quot;).asInstanceOf[StringArgument]
   hostname.setValue(&quot;localhost&quot;)

   val vm = ac.attach(args)
   val threads = vm.allThreads.toArray.map(_.asInstanceOf[ThreadReference])
   val mainthread = threads.find(_.name==threadName).get
   mainthread.suspend

   val f = mainthread.frame(4).asInstanceOf[StackFrame]
   val result = new
JavaMapAdaptor[LocalVariable,Value](f.getValues(f.visibleVariables))
   this.result = result.foldLeft(new HashMap[String, AnyRef]){(r, p) =&gt;
     r(p._1.name) = p._2
     r
   }
   mainthread.resume
 }
}

def localVariables = {
 val th = new _localVariables(currentThread.getName)
 th.start
 th.join
 th.result
}

def foo = {
 val x = 1
 val y = &quot;hoge&quot;
 localVariables
}
println(foo)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1626/addtag/" class="addtag" id="addtag_1626">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1626/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1626/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1626"
  >-</span><span
  class="button yellow"
  id="rating_z_1626"
  >0</span><span 
  class="button green"
  id="rating_p_1626"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1626/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1629">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/320/" target="_top">ApplePedlar</a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1629/">#1629</a>(<script language="JavaScript">print_time(new Date("2007/07/31 11:38 GMT"));</script><noscript>2007/07/31 11:38 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  コンパイルオプションで -g を指定することでクラスファイルにローカル変数名を入れることができるのですが、それを認識するAPIはありません。
クラスパスからクラスファイルを取得・解析してローカル変数名を取得することも多分可能ですが、変数名に対応する値を取得する方法がありません。
どうしようもないので内部クラスを使って似たようなことをやってみました。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">java.lang.reflect.Field</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
	<span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Map</span> <span class="n">map</span> <span class="o">=</span> <span class="n">foo</span><span class="o">();</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">map</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="k">static</span> <span class="n">Map</span> <span class="n">foo</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">Map</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">();</span>
		<span class="k">class</span> <span class="nc">Hoge</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
			<span class="n">String</span> <span class="n">y</span> <span class="o">=</span> <span class="s">&quot;hello&quot;</span><span class="o">;</span>
			
			<span class="n">Hoge</span><span class="o">()</span> <span class="o">{</span>
			<span class="o">}</span>
		<span class="o">}</span>
		
		<span class="n">Hoge</span> <span class="n">hoge</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Hoge</span><span class="o">();</span>
		<span class="n">Field</span><span class="o">[]</span> <span class="n">fields</span> <span class="o">=</span> <span class="n">hoge</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getDeclaredFields</span><span class="o">();</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">fields</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">fields</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getName</span><span class="o">(),</span> <span class="n">fields</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">get</span><span class="o">(</span><span class="n">hoge</span><span class="o">));</span>
			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">map</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1629/addtag/" class="addtag" id="addtag_1629">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1629/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1629/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1629"
  >-</span><span
  class="button yellow"
  id="rating_z_1629"
  >0</span><span 
  class="button green"
  id="rating_p_1629"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1629/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1631">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1631/">#1631</a>(<script language="JavaScript">print_time(new Date("2007/07/31 13:59 GMT"));</script><noscript>2007/07/31 13:59 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  ふと、自分自身(orソースコード)をgrepとかしてしまってもいいんじゃないかと思ってしまった今日この頃。
宣言と同時でも良ければそれで十分できそうな予感。
でもやらない(笑
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1631/addtag/" class="addtag" id="addtag_1631">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1631"
  >-</span><span
  class="button yellow"
  id="rating_z_1631"
  >0</span><span 
  class="button green"
  id="rating_p_1631"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1631/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1654">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/322/" target="_top">sawat</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1654/">#1654</a>(<script language="JavaScript">print_time(new Date("2007/08/01 11:51 GMT"));</script><noscript>2007/08/01 11:51 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  関数のソースを解析して、変数名を抽出し、evalで値を求めています。
ソース解析処理がすごく適当なので、一つのvarに複数の変数が定義されている場合に対応していないです。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="highlight"><pre><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">listLocalVariableNames</span> <span class="o">=</span> <span class="k">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">var</span> <span class="nx">regexp</span> <span class="o">=</span> <span class="sr">/var\s+(\w+)/g</span><span class="o">;</span>
  <span class="k">var</span> <span class="nx">source</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span>
  <span class="k">var</span> <span class="nx">match</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
  <span class="k">var</span> <span class="nx">variables</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="k">while</span><span class="p">(</span><span class="nx">match</span> <span class="o">=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">source</span><span class="p">))</span> <span class="p">{</span>
    <span class="nx">variables</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">match</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">variables</span><span class="o">;</span>
<span class="p">}</span>

<span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toHash</span><span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nx">iter</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">var</span> <span class="nx">hash</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
      <span class="nx">hash</span><span class="p">[</span><span class="k">this</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">iter</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
    <span class="p">}</span> <span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
      <span class="c">// エラーはパス</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">hash</span><span class="o">;</span>
<span class="p">};</span>

<span class="k">function</span> <span class="nx">func</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
  <span class="k">var</span> <span class="nx">y</span> <span class="o">=</span> <span class="s2">&quot;hello&quot;</span><span class="o">;</span>

  <span class="k">return</span> <span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">.</span><span class="nx">listLocalVariableNames</span><span class="p">().</span><span class="nx">toHash</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nb">eval</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span>
  <span class="p">});</span>
<span class="p">}</span>

<span class="k">var</span> <span class="nx">variablesMap</span> <span class="o">=</span> <span class="nx">func</span><span class="p">();</span>
<span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">prop</span> <span class="k">in</span> <span class="nx">variablesMap</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">alert</span><span class="p">(</span><span class="nx">prop</span> <span class="o">+</span> <span class="s2">&quot; =&gt; &quot;</span> <span class="o">+</span> <span class="nx">variablesMap</span><span class="p">[</span><span class="nx">prop</span><span class="p">]);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1654/addtag/" class="addtag" id="addtag_1654">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1654/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1654/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1654"
  >-</span><span
  class="button yellow"
  id="rating_z_1654"
  >0</span><span 
  class="button green"
  id="rating_p_1654"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1654/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1656">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1656/">#1656</a>(<script language="JavaScript">print_time(new Date("2007/08/01 13:49 GMT"));</script><noscript>2007/08/01 13:49 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  ネストできない＞＜
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre>(defmacro let-inspect (spec &amp;body body)
  (let* ((vars (mapcar (lambda (x) (if (consp x) (car x) x)) spec))
         (expr (loop for v in vars collect `(list &#39;,v (eval ,v)))))

  `(let ,spec
     (symbol-macrolet ((inspect (list ,@expr)))
     ,@body))))

(defparameter *gvar* 1)
(defun foo ()
  (let-inspect ((x 1)
                (y &quot;hello&quot;)
                z)
    inspect))

(foo)                                   ; =&gt; ((X 1) (Y &quot;hello&quot;) (Z NIL))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1656/addtag/" class="addtag" id="addtag_1656">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1656/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1656/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1656"
  >-</span><span
  class="button yellow"
  id="rating_z_1656"
  >0</span><span 
  class="button green"
  id="rating_p_1656"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080513064854/http://ja.doukaku.org/comment/1656/">
    1
    reply
  </a>

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1656/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1657">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/25/" target="_top">hamano</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1657/">#1657</a>(<script language="JavaScript">print_time(new Date("2007/08/01 15:05 GMT"));</script><noscript>2007/08/01 15:05 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #4fff4f;">11/11=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>C 言語の場合ローカル変数名はデバッグ情報にしか含まれませんので gcc の -g オプションが必須です。
デバッグ情報を得るために libelf, libdwarf と、ハッシュテーブルを使うために glib を使用しました。
コンパイルこんな感じです。

% gcc -g `pkg-config glib --cflags` locals.c -o locals `pkg-config glib --libs` -lelf -ldwarf

実行結果

% ./locals
x=hello
y=1

スタックフレームにある変数を得るのに複数の種類の型が混在していると厄介だったのでローカル変数は文字列(char*)のみとなってしまいました。
あと、X86 32bit 環境でしか動作しないと思います。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &lt;sys/types.h&gt;</span>
<span class="cp">#include &lt;sys/stat.h&gt;</span>
<span class="cp">#include &lt;fcntl.h&gt;</span>
<span class="cp">#include &lt;unistd.h&gt;</span>
<span class="cp">#include &lt;libelf.h&gt;</span>
<span class="cp">#include &lt;libdwarf/libdwarf.h&gt;</span>
<span class="cp">#include &lt;libdwarf/dwarf.h&gt;</span>
<span class="cp">#include &lt;glib.h&gt;</span>

<span class="n">GHashTable</span> <span class="o">*</span><span class="n">locals</span><span class="p">();</span>

<span class="n">GHashTable</span> <span class="o">*</span><span class="n">foo</span><span class="p">(){</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">x</span> <span class="o">=</span> <span class="s">&quot;1&quot;</span><span class="p">;</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">y</span> <span class="o">=</span> <span class="s">&quot;hello&quot;</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">locals</span><span class="p">();</span>
<span class="p">}</span>

<span class="n">GHashTable</span> <span class="o">*</span><span class="n">locals</span><span class="p">(){</span>
    <span class="n">GHashTable</span> <span class="o">*</span><span class="n">hash</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
    <span class="n">Elf</span> <span class="o">*</span><span class="n">elf</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">ret</span><span class="p">;</span>
    <span class="n">Dwarf_Debug</span> <span class="n">dbg</span><span class="p">;</span>
    <span class="n">Dwarf_Die</span> <span class="n">cu_die</span><span class="p">;</span>
    <span class="n">Dwarf_Die</span> <span class="n">func_die</span><span class="p">;</span>
    <span class="n">Dwarf_Die</span> <span class="n">var_die</span><span class="p">;</span>
    <span class="n">Dwarf_Die</span> <span class="n">var_die_tmp</span><span class="p">;</span>
    <span class="n">Dwarf_Error</span> <span class="n">err</span><span class="p">;</span>
    <span class="n">Dwarf_Unsigned</span> <span class="n">cu_header_length</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">Dwarf_Unsigned</span> <span class="n">abbrev_offset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">Dwarf_Half</span> <span class="n">version_stamp</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">Dwarf_Half</span> <span class="n">address_size</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">Dwarf_Unsigned</span> <span class="n">next_cu_offset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">Dwarf_Half</span> <span class="n">tag</span><span class="p">;</span>
    <span class="n">Dwarf_Attribute</span> <span class="n">attr</span><span class="p">;</span>
    <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
    <span class="n">Dwarf_Addr</span> <span class="n">high_pc</span><span class="p">;</span>
    <span class="n">Dwarf_Addr</span> <span class="n">low_pc</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="kt">void</span> <span class="o">*</span><span class="n">frame</span> <span class="o">=</span> <span class="n">__builtin_frame_address</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
    <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">retaddr</span> <span class="o">=</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="p">)</span><span class="n">__builtin_return_address</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>

    <span class="n">hash</span> <span class="o">=</span> <span class="n">g_hash_table_new</span><span class="p">((</span><span class="n">GHashFunc</span><span class="p">)</span><span class="n">g_str_hash</span><span class="p">,</span> <span class="p">(</span><span class="n">GCompareFunc</span><span class="p">)</span><span class="n">g_str_equal</span><span class="p">);</span>
    <span class="n">elf_version</span><span class="p">(</span><span class="n">EV_CURRENT</span><span class="p">);</span>
    <span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="s">&quot;/proc/self/exe&quot;</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">);</span>
    <span class="n">elf</span> <span class="o">=</span> <span class="n">elf_begin</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">ELF_C_READ</span><span class="p">,</span> <span class="p">(</span><span class="n">Elf</span><span class="o">*</span><span class="p">)</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">ret</span> <span class="o">=</span> <span class="n">dwarf_elf_init</span><span class="p">(</span><span class="n">elf</span><span class="p">,</span> <span class="n">DW_DLC_READ</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">dbg</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
    <span class="k">while</span> <span class="p">((</span><span class="n">ret</span> <span class="o">=</span> <span class="n">dwarf_next_cu_header</span><span class="p">(</span>
                <span class="n">dbg</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">cu_header_length</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">version_stamp</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">abbrev_offset</span><span class="p">,</span>
                <span class="o">&amp;</span><span class="n">address_size</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">next_cu_offset</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">))</span> <span class="o">==</span> <span class="n">DW_DLV_OK</span><span class="p">){</span>
        <span class="n">cu_die</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="n">dwarf_siblingof</span><span class="p">(</span><span class="n">dbg</span><span class="p">,</span> <span class="n">cu_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">cu_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">)</span> <span class="o">!=</span> <span class="n">DW_DLV_NO_ENTRY</span><span class="p">){</span>
            <span class="n">dwarf_tag</span><span class="p">(</span><span class="n">cu_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">tag</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">tag</span> <span class="o">!=</span> <span class="n">DW_TAG_compile_unit</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
            <span class="n">ret</span> <span class="o">=</span> <span class="n">dwarf_child</span><span class="p">(</span><span class="n">cu_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">func_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">ret</span> <span class="o">!=</span> <span class="n">DW_DLV_OK</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
            <span class="k">do</span><span class="p">{</span> 
                <span class="n">dwarf_tag</span><span class="p">(</span><span class="n">func_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">tag</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">tag</span> <span class="o">!=</span> <span class="n">DW_TAG_subprogram</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
                <span class="n">dwarf_attr</span><span class="p">(</span><span class="n">func_die</span><span class="p">,</span> <span class="n">DW_AT_high_pc</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">attr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
                <span class="n">dwarf_formaddr</span><span class="p">(</span><span class="n">attr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">high_pc</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
                <span class="n">dwarf_attr</span><span class="p">(</span><span class="n">func_die</span><span class="p">,</span> <span class="n">DW_AT_low_pc</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">attr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
                <span class="n">dwarf_formaddr</span><span class="p">(</span><span class="n">attr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">low_pc</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">low_pc</span> <span class="o">&gt;</span> <span class="n">retaddr</span> <span class="o">||</span> <span class="n">retaddr</span> <span class="o">&gt;</span> <span class="n">high_pc</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
                <span class="n">ret</span> <span class="o">=</span> <span class="n">dwarf_child</span><span class="p">(</span><span class="n">func_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">var_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="n">ret</span> <span class="o">!=</span> <span class="n">DW_DLV_OK</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
                <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
                <span class="n">var_die_tmp</span> <span class="o">=</span> <span class="n">var_die</span><span class="p">;</span>
                <span class="k">while</span><span class="p">(</span><span class="n">dwarf_siblingof</span><span class="p">(</span><span class="n">dbg</span><span class="p">,</span> <span class="n">var_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">var_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">)</span> <span class="o">!=</span> <span class="n">DW_DLV_NO_ENTRY</span><span class="p">)</span> <span class="n">i</span><span class="o">++</span><span class="p">;</span>
                <span class="n">var_die</span> <span class="o">=</span> <span class="n">var_die_tmp</span><span class="p">;</span>
                <span class="k">do</span><span class="p">{</span> 
                    <span class="n">dwarf_tag</span><span class="p">(</span><span class="n">var_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">tag</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">tag</span> <span class="o">!=</span> <span class="n">DW_TAG_variable</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
                    <span class="n">dwarf_attr</span><span class="p">(</span><span class="n">var_die</span><span class="p">,</span> <span class="n">DW_AT_name</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">attr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>                                                 
                    <span class="n">dwarf_formstring</span><span class="p">(</span><span class="n">attr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">name</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>                                                          
                    <span class="n">g_hash_table_insert</span><span class="p">(</span><span class="n">hash</span><span class="p">,</span> <span class="n">strdup</span><span class="p">(</span><span class="n">name</span><span class="p">),</span>
                                        <span class="n">strdup</span><span class="p">((</span><span class="n">frame</span> <span class="o">-</span> <span class="mi">4</span> <span class="o">-</span> <span class="p">(</span><span class="mi">4</span> <span class="o">*</span> <span class="n">i</span><span class="o">--</span><span class="p">))));</span>
                <span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">dwarf_siblingof</span><span class="p">(</span><span class="n">dbg</span><span class="p">,</span> <span class="n">var_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">var_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">)</span> <span class="o">!=</span> <span class="n">DW_DLV_NO_ENTRY</span><span class="p">);</span>

            <span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">dwarf_siblingof</span><span class="p">(</span><span class="n">dbg</span><span class="p">,</span> <span class="n">func_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">func_die</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">)</span> <span class="o">!=</span> <span class="n">DW_DLV_NO_ENTRY</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">dwarf_finish</span><span class="p">(</span><span class="n">dbg</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">err</span><span class="p">);</span>
    <span class="n">elf_end</span><span class="p">(</span><span class="n">elf</span><span class="p">);</span>
    <span class="n">close</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">hash</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[]){</span>
    <span class="n">GHashTable</span> <span class="o">*</span><span class="n">hash</span> <span class="o">=</span> <span class="n">foo</span><span class="p">();</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;x=%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="o">*</span><span class="p">(</span><span class="kt">char</span><span class="o">**</span><span class="p">)</span><span class="n">g_hash_table_lookup</span><span class="p">(</span><span class="n">hash</span><span class="p">,</span> <span class="s">&quot;x&quot;</span><span class="p">));</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;y=%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="o">*</span><span class="p">(</span><span class="kt">char</span><span class="o">**</span><span class="p">)</span><span class="n">g_hash_table_lookup</span><span class="p">(</span><span class="n">hash</span><span class="p">,</span> <span class="s">&quot;y&quot;</span><span class="p">));</span>
    <span class="n">g_hash_table_destroy</span><span class="p">(</span><span class="n">hash</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">EXIT_SUCCESS</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1657/addtag/" class="addtag" id="addtag_1657">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1657/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1657/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #4fff4f;"
  >11/11=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1657"
  >-</span><span
  class="button yellow"
  id="rating_z_1657"
  >0</span><span 
  class="button green"
  id="rating_p_1657"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1657/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1666">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1666/">#1666</a>(<script language="JavaScript">print_time(new Date("2007/08/01 16:24 GMT"));</script><noscript>2007/08/01 16:24 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #7fff7f;">8/8=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>ローカル変数の取得はリフレクションというよりはデバッグ用という感じがします。
そこで、Java Debug Interface を使ってみました。

public class Sample {
    public static void main(String[] args) {
        int x = 1;
        String y = "hello";
    }
}

というサンプルの場合は、-g オプションつきで Sample をコンパイルした後に、
    java TinyDB Sample
で起動すると、mainメソッドのローカル変数（引数つき）が出力されます。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">com.sun.jdi.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">com.sun.jdi.connect.LaunchingConnector</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">com.sun.jdi.connect.Connector</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">com.sun.jdi.event.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">com.sun.jdi.request.*</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">TinyDB</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="k">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="n">LaunchingConnector</span> <span class="n">lc</span> <span class="o">=</span> <span class="n">Bootstrap</span><span class="o">.</span><span class="na">virtualMachineManager</span><span class="o">().</span>
            <span class="n">defaultConnector</span><span class="o">();</span>
        <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Connector</span><span class="o">.</span><span class="na">Argument</span><span class="o">&gt;</span> <span class="n">arg</span> <span class="o">=</span> <span class="n">lc</span><span class="o">.</span><span class="na">defaultArguments</span><span class="o">();</span>
        <span class="n">arg</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;main&quot;</span><span class="o">).</span><span class="na">setValue</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>

        <span class="n">VirtualMachine</span> <span class="n">vm</span> <span class="o">=</span> <span class="n">lc</span><span class="o">.</span><span class="na">launch</span><span class="o">(</span><span class="n">arg</span><span class="o">);</span>
        <span class="n">EventQueue</span> <span class="n">q</span> <span class="o">=</span> <span class="n">vm</span><span class="o">.</span><span class="na">eventQueue</span><span class="o">();</span>
        <span class="n">EventSet</span> <span class="n">e</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">remove</span><span class="o">();</span> <span class="c">// get VMStartEvent</span>
        <span class="n">EventRequestManager</span> <span class="n">mgr</span> <span class="o">=</span> <span class="n">vm</span><span class="o">.</span><span class="na">eventRequestManager</span><span class="o">();</span>
        <span class="n">MethodExitRequest</span> <span class="n">exitReq</span> <span class="o">=</span> <span class="n">mgr</span><span class="o">.</span><span class="na">createMethodExitRequest</span><span class="o">();</span>
        <span class="n">exitReq</span><span class="o">.</span><span class="na">addClassFilter</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="n">exitReq</span><span class="o">.</span><span class="na">enable</span><span class="o">();</span>
        <span class="n">e</span><span class="o">.</span><span class="na">resume</span><span class="o">();</span>
        <span class="n">e</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">remove</span><span class="o">();</span> <span class="c">// MethodExitEvent</span>
        <span class="n">LocatableEvent</span> <span class="n">ev</span> <span class="o">=</span> <span class="o">(</span><span class="n">LocatableEvent</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">eventIterator</span><span class="o">().</span><span class="na">nextEvent</span><span class="o">();</span>
        <span class="n">ThreadReference</span> <span class="n">tr</span> <span class="o">=</span> <span class="n">ev</span><span class="o">.</span><span class="na">thread</span><span class="o">();</span>
        <span class="n">StackFrame</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">tr</span><span class="o">.</span><span class="na">frame</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">LocalVariable</span> <span class="n">var</span> <span class="o">:</span> <span class="n">frame</span><span class="o">.</span><span class="na">visibleVariables</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">var</span><span class="o">.</span><span class="na">name</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;: &quot;</span><span class="o">);</span>
            <span class="n">Value</span> <span class="n">val</span> <span class="o">=</span> <span class="n">frame</span><span class="o">.</span><span class="na">getValue</span><span class="o">(</span><span class="n">var</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">val</span> <span class="k">instanceof</span> <span class="n">PrimitiveValue</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(((</span><span class="n">PrimitiveValue</span><span class="o">)</span><span class="n">val</span><span class="o">).</span><span class="na">doubleValue</span><span class="o">());</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">val</span> <span class="k">instanceof</span> <span class="n">StringReference</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(((</span><span class="n">StringReference</span><span class="o">)</span><span class="n">val</span><span class="o">).</span><span class="na">value</span><span class="o">());</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">val</span> <span class="k">instanceof</span> <span class="n">ObjectReference</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">val</span><span class="o">.</span><span class="na">type</span><span class="o">().</span><span class="na">name</span><span class="o">());</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="n">e</span><span class="o">.</span><span class="na">resume</span><span class="o">();</span>
        <span class="n">e</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">remove</span><span class="o">();</span> <span class="c">// get VMDisconnectEvent</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1666/addtag/" class="addtag" id="addtag_1666">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1666/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1666/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #7fff7f;"
  >8/8=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1666"
  >-</span><span
  class="button yellow"
  id="rating_z_1666"
  >0</span><span 
  class="button green"
  id="rating_p_1666"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1666/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1668">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/235/" target="_top">onjo</a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1668/">#1668</a>(<script language="JavaScript">print_time(new Date("2007/08/01 16:38 GMT"));</script><noscript>2007/08/01 16:38 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  (list 'x (eval x)) だと x が二回評価されちゃいます。
ネストも扱うならこんな感じでしょうか。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre>(defpackage :doukaku-lisp (:use :cl) (:shadow #:let))
(in-package :doukaku-lisp)

(define-symbol-macro local-variables nil)
(defmacro let (binding &amp;body body)
  `(cl:let ,binding
     (cl:let ((local-variables (append
                                (list ,@(mapcar (lambda (e)
                                                  (if (consp e)
                                                     `(cons &#39;,(car e) ,(car e))
                                                     `(cons &#39;,e nil)))
                                                 binding))
                                 local-variables)))
       ,@body)))

(defun test ()
  (let ((x 1)
        (y &quot;hello&quot;))
    local-variables))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1668/addtag/" class="addtag" id="addtag_1668">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1668/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1668/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1668"
  >-</span><span
  class="button yellow"
  id="rating_z_1668"
  >0</span><span 
  class="button green"
  id="rating_p_1668"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080513064854/http://ja.doukaku.org/comment/1656/"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080513064854/http://ja.doukaku.org/comment/1668/root/"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1668/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1726">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/323/" target="_top">tomatsu</a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1726/">#1726</a>(<script language="JavaScript">print_time(new Date("2007/08/02 12:51 GMT"));</script><noscript>2007/08/02 12:51 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/pnuts/">
	  Pnuts
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>この技は pnuts -pure で起動したときだけ使えます。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre>import pnuts.tools.StackFrameInspector
function f(){
  x=1
  y=2
  StackFrameInspector.localSymbols(getContext())
}
println(f())
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1726/addtag/" class="addtag" id="addtag_1726">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/pnuts/">
		Pnuts
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1726/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1726/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1726"
  >-</span><span
  class="button yellow"
  id="rating_z_1726"
  >0</span><span 
  class="button green"
  id="rating_p_1726"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1726/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1728">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/256/" target="_top">rihi</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1728/">#1728</a>(<script language="JavaScript">print_time(new Date("2007/08/02 13:01 GMT"));</script><noscript>2007/08/02 13:01 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Haskellでは実行時に変数を操作する手段がないので、Template Haskellでコンパイル時にコードを挿入することで対処します。力ずくです。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138</pre></td><td class="code"><div class="highlight"><pre><span class="cm">{-# OPTIONS_GHC -fth #-}</span>

<span class="kr">module</span> <span class="n">LocalVariables</span><span class="p">(</span><span class="nv">localVariables</span><span class="p">,</span> <span class="nv">withLocalVariables</span><span class="p">)</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">Control</span><span class="o">.</span><span class="n">Monad</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Dynamic</span>
<span class="kr">import</span> <span class="n">Language</span><span class="o">.</span><span class="n">Haskell</span><span class="o">.</span><span class="n">TH</span>
<span class="kr">import</span> <span class="nv">qualified</span> <span class="n">Data</span><span class="o">.</span><span class="n">Map</span> <span class="nv">as</span> <span class="n">Map</span>

<span class="nv">localVariables</span> <span class="o">::</span> <span class="n">Map</span><span class="o">.</span><span class="n">Map</span> <span class="n">String</span> <span class="n">Dynamic</span>
<span class="nv">localVariables</span> <span class="o">=</span> <span class="nv">error</span> <span class="s">&quot;localVariables outside withLocalVariables&quot;</span>

<span class="nv">localVariablesName</span> <span class="o">::</span> <span class="n">Name</span>
<span class="nv">localVariablesName</span> <span class="o">=</span> <span class="sc">&#39;localVariables</span>

<span class="sc">withLocalVariables :: Q [Dec] -&gt; Q [Dec]</span>
<span class="sc">withLocalVariables = (&gt;&gt;=trDecs)</span>
<span class="sc">  where</span>
<span class="sc">    trDecs decs = mapM (trDec []) decs</span>

<span class="sc">    trDec vars dec = case dec of</span>
<span class="sc">      FunD name cls -&gt; liftM (FunD name) $ mapM (trClause vars) cls</span>
<span class="sc">      ValD pat body decs -&gt; do</span>
<span class="sc">        decs&#39;</span> <span class="o">&lt;-</span> <span class="nv">mapM</span> <span class="p">(</span><span class="nv">trDec</span> <span class="nv">vars</span><span class="p">)</span> <span class="nv">decs</span>
        <span class="nv">body&#39;</span> <span class="o">&lt;-</span> <span class="nv">trBody</span> <span class="p">(</span><span class="nv">vars</span> <span class="o">++</span> <span class="nv">concatMap</span> <span class="nv">decVars</span> <span class="nv">decs</span><span class="p">)</span> <span class="nv">body</span>
        <span class="nv">return</span> <span class="o">$</span> <span class="n">ValD</span> <span class="nv">pat</span> <span class="nv">body&#39;</span> <span class="nv">decs&#39;</span>
      <span class="kr">_</span> <span class="o">-&gt;</span> <span class="nv">return</span> <span class="nv">dec</span>

    <span class="nv">trClause</span> <span class="nv">vars</span> <span class="p">(</span><span class="n">Clause</span> <span class="nv">pats</span> <span class="nv">body</span> <span class="nv">decs</span><span class="p">)</span> <span class="o">=</span> <span class="kr">do</span>
      <span class="nv">decs&#39;</span> <span class="o">&lt;-</span> <span class="nv">mapM</span> <span class="p">(</span><span class="nv">trDec</span> <span class="nv">vars</span><span class="p">)</span> <span class="nv">decs</span>
      <span class="nv">body&#39;</span> <span class="o">&lt;-</span> <span class="nv">trBody</span> <span class="p">(</span><span class="nv">vars</span> <span class="o">++</span> <span class="nv">concatMap</span> <span class="nv">patVars</span> <span class="nv">pats</span> <span class="o">++</span> <span class="nv">concatMap</span> <span class="nv">decVars</span> <span class="nv">decs</span><span class="p">)</span> <span class="nv">body</span>
      <span class="nv">return</span> <span class="o">$</span> <span class="n">Clause</span> <span class="nv">pats</span> <span class="nv">body&#39;</span> <span class="nv">decs&#39;</span>

    <span class="nv">trBody</span> <span class="nv">vars</span> <span class="p">(</span><span class="n">GuardedB</span> <span class="nv">ges</span><span class="p">)</span> <span class="o">=</span> <span class="nv">liftM</span> <span class="n">GuardedB</span> <span class="o">$</span> <span class="nv">mapM</span> <span class="nv">trGuarded</span> <span class="nv">ges</span>
      <span class="kr">where</span>
        <span class="nv">trGuarded</span> <span class="p">(</span><span class="nv">guard</span><span class="p">,</span> <span class="nv">exp</span><span class="p">)</span> <span class="o">=</span> <span class="kr">do</span>
          <span class="nv">exp&#39;</span> <span class="o">&lt;-</span> <span class="nv">trExp</span> <span class="nv">vars</span> <span class="nv">exp</span>
          <span class="nv">return</span> <span class="p">(</span><span class="nv">guard</span><span class="p">,</span> <span class="nv">exp&#39;</span><span class="p">)</span>
    <span class="nv">trBody</span> <span class="nv">vars</span> <span class="p">(</span><span class="n">NormalB</span> <span class="nv">exp</span><span class="p">)</span> <span class="o">=</span> <span class="nv">liftM</span> <span class="n">NormalB</span> <span class="o">$</span> <span class="nv">trExp</span> <span class="nv">vars</span> <span class="nv">exp</span>

    <span class="nv">trExp</span> <span class="o">::</span> <span class="p">[</span><span class="n">Name</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">Exp</span> <span class="o">-&gt;</span> <span class="n">Q</span> <span class="n">Exp</span>
    <span class="nv">trExp</span> <span class="nv">vars</span> <span class="nv">exp</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">exp</span> <span class="kr">of</span>
      <span class="n">VarE</span> <span class="nv">name</span>
        <span class="o">|</span> <span class="nv">name</span> <span class="o">==</span> <span class="nv">localVariablesName</span> <span class="o">-&gt;</span> <span class="nv">replacement</span> <span class="nv">vars</span>
        <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">-&gt;</span> <span class="nv">return</span> <span class="nv">exp</span>
      <span class="n">AppE</span> <span class="nv">x</span> <span class="nv">y</span> <span class="o">-&gt;</span> <span class="nv">liftM2</span> <span class="n">AppE</span> <span class="p">(</span><span class="nv">rec</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nv">rec</span> <span class="nv">y</span><span class="p">)</span>
      <span class="n">InfixE</span> <span class="nv">x</span> <span class="nv">op</span> <span class="nv">y</span> <span class="o">-&gt;</span> <span class="nv">liftM3</span> <span class="n">InfixE</span> <span class="p">(</span><span class="nv">maybeMapM</span> <span class="nv">rec</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nv">rec</span> <span class="nv">op</span><span class="p">)</span> <span class="p">(</span><span class="nv">maybeMapM</span> <span class="nv">rec</span> <span class="nv">y</span><span class="p">)</span>
      <span class="n">LamE</span> <span class="nv">pats</span> <span class="nv">e</span> <span class="o">-&gt;</span> <span class="nv">liftM</span> <span class="p">(</span><span class="n">LamE</span> <span class="nv">pats</span><span class="p">)</span> <span class="o">$</span> <span class="nv">trExp</span> <span class="p">(</span><span class="nv">vars</span> <span class="o">++</span> <span class="nv">concatMap</span> <span class="nv">patVars</span> <span class="nv">pats</span><span class="p">)</span> <span class="nv">e</span>
      <span class="n">TupE</span> <span class="nv">es</span> <span class="o">-&gt;</span> <span class="nv">liftM</span> <span class="n">TupE</span> <span class="o">$</span> <span class="nv">mapM</span> <span class="nv">rec</span> <span class="nv">es</span>
      <span class="n">CondE</span> <span class="nv">c</span> <span class="nv">t</span> <span class="nv">f</span> <span class="o">-&gt;</span> <span class="nv">liftM3</span> <span class="n">CondE</span> <span class="p">(</span><span class="nv">rec</span> <span class="nv">c</span><span class="p">)</span> <span class="p">(</span><span class="nv">rec</span> <span class="nv">t</span><span class="p">)</span> <span class="p">(</span><span class="nv">rec</span> <span class="nv">f</span><span class="p">)</span>
      <span class="n">LetE</span> <span class="nv">decs</span> <span class="nv">e</span> <span class="o">-&gt;</span> <span class="kr">do</span>
        <span class="nv">decs&#39;</span> <span class="o">&lt;-</span> <span class="nv">mapM</span> <span class="p">(</span><span class="nv">trDec</span> <span class="nv">vars</span><span class="p">)</span> <span class="nv">decs</span>
        <span class="nv">e&#39;</span> <span class="o">&lt;-</span> <span class="nv">trExp</span> <span class="p">(</span><span class="nv">vars</span> <span class="o">++</span> <span class="nv">concatMap</span> <span class="nv">decVars</span> <span class="nv">decs</span><span class="p">)</span> <span class="nv">e</span>
        <span class="nv">return</span> <span class="o">$</span> <span class="n">LetE</span> <span class="nv">decs&#39;</span> <span class="nv">e&#39;</span>
      <span class="n">CaseE</span> <span class="nv">e</span> <span class="nv">matches</span> <span class="o">-&gt;</span> <span class="nv">liftM2</span> <span class="n">CaseE</span> <span class="p">(</span><span class="nv">rec</span> <span class="nv">e</span><span class="p">)</span> <span class="p">(</span><span class="nv">mapM</span> <span class="p">(</span><span class="nv">trMatch</span> <span class="nv">vars</span><span class="p">)</span> <span class="nv">matches</span><span class="p">)</span>
      <span class="n">DoE</span> <span class="nv">ss</span> <span class="o">-&gt;</span> <span class="nv">liftM</span> <span class="n">DoE</span> <span class="o">$</span> <span class="nv">trStmts</span> <span class="nv">vars</span> <span class="nv">ss</span>
      <span class="n">CompE</span> <span class="nv">ss</span> <span class="o">-&gt;</span> <span class="nv">liftM</span> <span class="n">CompE</span> <span class="o">$</span> <span class="nv">trStmts</span> <span class="nv">vars</span> <span class="nv">ss</span>
      <span class="n">ArithSeqE</span> <span class="nv">rng</span> <span class="o">-&gt;</span> <span class="nv">liftM</span> <span class="n">ArithSeqE</span> <span class="o">$</span> <span class="nv">trRange</span> <span class="nv">vars</span> <span class="nv">rng</span>
      <span class="n">ListE</span> <span class="nv">es</span> <span class="o">-&gt;</span> <span class="nv">liftM</span> <span class="n">ListE</span> <span class="o">$</span> <span class="nv">mapM</span> <span class="nv">rec</span> <span class="nv">es</span>
      <span class="n">SigE</span> <span class="nv">e</span> <span class="nv">tp</span> <span class="o">-&gt;</span> <span class="nv">liftM2</span> <span class="n">SigE</span> <span class="p">(</span><span class="nv">rec</span> <span class="nv">e</span><span class="p">)</span> <span class="p">(</span><span class="nv">return</span> <span class="nv">tp</span><span class="p">)</span>
      <span class="n">RecConE</span> <span class="nv">name</span> <span class="nv">fexps</span> <span class="o">-&gt;</span> <span class="nv">liftM</span> <span class="p">(</span><span class="n">RecConE</span> <span class="nv">name</span><span class="p">)</span> <span class="o">$</span> <span class="nv">mapM</span> <span class="p">(</span><span class="nv">trFexp</span> <span class="nv">vars</span><span class="p">)</span> <span class="nv">fexps</span>
      <span class="n">RecUpdE</span> <span class="nv">e</span> <span class="nv">fexps</span> <span class="o">-&gt;</span> <span class="nv">liftM2</span> <span class="n">RecUpdE</span> <span class="p">(</span><span class="nv">rec</span> <span class="nv">e</span><span class="p">)</span> <span class="p">(</span><span class="nv">mapM</span> <span class="p">(</span><span class="nv">trFexp</span> <span class="nv">vars</span><span class="p">)</span> <span class="nv">fexps</span><span class="p">)</span>
      <span class="kr">_</span> <span class="o">-&gt;</span> <span class="nv">return</span> <span class="nv">exp</span>
      <span class="kr">where</span>
        <span class="nv">rec</span> <span class="nv">e</span> <span class="o">=</span> <span class="nv">trExp</span> <span class="nv">vars</span> <span class="nv">e</span>
        <span class="nv">maybeMapM</span> <span class="nv">f</span> <span class="n">Nothing</span> <span class="o">=</span> <span class="nv">return</span> <span class="n">Nothing</span>
        <span class="nv">maybeMapM</span> <span class="nv">f</span> <span class="p">(</span><span class="n">Just</span> <span class="nv">v</span><span class="p">)</span> <span class="o">=</span> <span class="nv">liftM</span> <span class="n">Just</span> <span class="o">$</span> <span class="nv">f</span> <span class="nv">v</span>

    <span class="nv">trFexp</span> <span class="nv">vars</span> <span class="p">(</span><span class="nv">name</span><span class="p">,</span> <span class="nv">e</span><span class="p">)</span> <span class="o">=</span> <span class="kr">do</span>
      <span class="nv">e&#39;</span> <span class="o">&lt;-</span> <span class="nv">trExp</span> <span class="nv">vars</span> <span class="nv">e</span>
      <span class="nv">return</span> <span class="p">(</span><span class="nv">name</span><span class="p">,</span> <span class="nv">e&#39;</span><span class="p">)</span>

    <span class="nv">trRange</span> <span class="nv">vars</span> <span class="nv">rng</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">rng</span> <span class="kr">of</span>
      <span class="n">FromR</span> <span class="nv">x</span> <span class="o">-&gt;</span> <span class="nv">liftM</span> <span class="n">FromR</span> <span class="o">$</span> <span class="nv">tr</span> <span class="nv">x</span>
      <span class="n">FromThenR</span> <span class="nv">x</span> <span class="nv">y</span> <span class="o">-&gt;</span> <span class="nv">liftM2</span> <span class="n">FromThenR</span> <span class="p">(</span><span class="nv">tr</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nv">tr</span> <span class="nv">y</span><span class="p">)</span>
      <span class="n">FromToR</span> <span class="nv">x</span> <span class="nv">y</span> <span class="o">-&gt;</span> <span class="nv">liftM2</span> <span class="n">FromToR</span> <span class="p">(</span><span class="nv">tr</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nv">tr</span> <span class="nv">y</span><span class="p">)</span>
      <span class="n">FromThenToR</span> <span class="nv">x</span> <span class="nv">y</span> <span class="nv">z</span> <span class="o">-&gt;</span> <span class="nv">liftM3</span> <span class="n">FromThenToR</span> <span class="p">(</span><span class="nv">tr</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nv">tr</span> <span class="nv">y</span><span class="p">)</span> <span class="p">(</span><span class="nv">tr</span> <span class="nv">z</span><span class="p">)</span>
      <span class="kr">where</span>
        <span class="nv">tr</span> <span class="nv">e</span> <span class="o">=</span> <span class="nv">trExp</span> <span class="nv">vars</span> <span class="nv">e</span>

    <span class="nv">trStmts</span> <span class="o">::</span> <span class="p">[</span><span class="n">Name</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Stmt</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">Q</span> <span class="p">[</span><span class="n">Stmt</span><span class="p">]</span>
    <span class="nv">trStmts</span> <span class="nv">vars</span> <span class="p">[]</span> <span class="o">=</span> <span class="nv">return</span> <span class="p">[]</span>
    <span class="nv">trStmts</span> <span class="nv">vars</span> <span class="p">(</span><span class="nv">stmt</span><span class="o">:</span><span class="nv">rest</span><span class="p">)</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">stmt</span> <span class="kr">of</span>
      <span class="n">BindS</span> <span class="nv">pat</span> <span class="nv">exp</span> <span class="o">-&gt;</span> <span class="kr">let</span> <span class="nv">vars&#39;</span> <span class="o">=</span> <span class="nv">vars</span> <span class="o">++</span> <span class="nv">patVars</span> <span class="nv">pat</span>
        <span class="kr">in</span> <span class="nv">liftM2</span> <span class="p">(</span><span class="o">:</span><span class="p">)</span> <span class="p">(</span><span class="nv">liftM</span> <span class="p">(</span><span class="n">BindS</span> <span class="nv">pat</span><span class="p">)</span> <span class="p">(</span><span class="nv">trExp</span> <span class="nv">vars&#39;</span> <span class="nv">exp</span><span class="p">))</span> <span class="p">(</span><span class="nv">trStmts</span> <span class="nv">vars&#39;</span> <span class="nv">rest</span><span class="p">)</span>
      <span class="n">LetS</span> <span class="nv">decs</span> <span class="o">-&gt;</span> <span class="nv">liftM2</span> <span class="p">(</span><span class="o">:</span><span class="p">)</span> <span class="p">(</span><span class="nv">liftM</span> <span class="n">LetS</span> <span class="o">$</span> <span class="nv">mapM</span> <span class="p">(</span><span class="nv">trDec</span> <span class="nv">vars</span><span class="p">)</span> <span class="nv">decs</span><span class="p">)</span> <span class="p">(</span><span class="nv">trStmts</span> <span class="p">(</span><span class="nv">vars</span> <span class="o">++</span> <span class="nv">concatMap</span> <span class="nv">decVars</span> <span class="nv">decs</span><span class="p">)</span> <span class="nv">rest</span><span class="p">)</span>
      <span class="n">NoBindS</span> <span class="nv">exp</span> <span class="o">-&gt;</span> <span class="nv">liftM2</span> <span class="p">(</span><span class="o">:</span><span class="p">)</span> <span class="p">(</span><span class="nv">liftM</span> <span class="n">NoBindS</span> <span class="o">$</span> <span class="nv">trExp</span> <span class="nv">vars</span> <span class="nv">exp</span><span class="p">)</span> <span class="p">(</span><span class="nv">trStmts</span> <span class="nv">vars</span> <span class="nv">rest</span><span class="p">)</span>
      <span class="n">ParS</span> <span class="kr">_</span> <span class="o">-&gt;</span> <span class="nv">error</span> <span class="s">&quot;ParS: what&#39;s this?&quot;</span>

    <span class="nv">trMatch</span> <span class="nv">vars</span> <span class="p">(</span><span class="n">Match</span> <span class="nv">pat</span> <span class="nv">body</span> <span class="nv">decs</span><span class="p">)</span> <span class="o">=</span> <span class="kr">do</span>
      <span class="nv">decs&#39;</span> <span class="o">&lt;-</span> <span class="nv">mapM</span> <span class="p">(</span><span class="nv">trDec</span> <span class="nv">vars</span><span class="p">)</span> <span class="nv">decs</span>
      <span class="nv">body&#39;</span> <span class="o">&lt;-</span> <span class="nv">trBody</span> <span class="p">(</span><span class="nv">vars</span> <span class="o">++</span> <span class="nv">patVars</span> <span class="nv">pat</span> <span class="o">++</span> <span class="nv">concatMap</span> <span class="nv">decVars</span> <span class="nv">decs</span><span class="p">)</span> <span class="nv">body</span>
      <span class="nv">return</span> <span class="o">$</span> <span class="n">Match</span> <span class="nv">pat</span> <span class="nv">body&#39;</span> <span class="nv">decs&#39;</span>

    <span class="nv">decVars</span> <span class="nv">dec</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">dec</span> <span class="kr">of</span>
      <span class="n">FunD</span> <span class="nv">name</span> <span class="kr">_</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="nv">name</span><span class="p">]</span>
      <span class="n">ValD</span> <span class="nv">pat</span> <span class="kr">_</span> <span class="kr">_</span> <span class="o">-&gt;</span> <span class="nv">patVars</span> <span class="nv">pat</span>
      <span class="kr">_</span> <span class="o">-&gt;</span> <span class="p">[]</span>

    <span class="nv">patVars</span> <span class="nv">pat</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">pat</span> <span class="kr">of</span>
      <span class="n">VarP</span> <span class="nv">name</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="nv">name</span><span class="p">]</span>
      <span class="n">TupP</span> <span class="nv">pats</span> <span class="o">-&gt;</span> <span class="nv">concatMap</span> <span class="nv">patVars</span> <span class="nv">pats</span>
      <span class="n">ConP</span> <span class="nv">name</span> <span class="nv">pats</span> <span class="o">-&gt;</span> <span class="nv">concatMap</span> <span class="nv">patVars</span> <span class="nv">pats</span>
      <span class="n">InfixP</span> <span class="nv">p0</span> <span class="kr">_</span> <span class="nv">p1</span> <span class="o">-&gt;</span> <span class="nv">patVars</span> <span class="nv">p0</span> <span class="o">++</span> <span class="nv">patVars</span> <span class="nv">p1</span>
      <span class="n">TildeP</span> <span class="nv">p</span> <span class="o">-&gt;</span> <span class="nv">patVars</span> <span class="nv">p</span>
      <span class="n">AsP</span> <span class="nv">name</span> <span class="nv">p</span> <span class="o">-&gt;</span> <span class="nv">name</span> <span class="o">:</span> <span class="nv">patVars</span> <span class="nv">p</span>
      <span class="n">RecP</span> <span class="kr">_</span> <span class="nv">fps</span> <span class="o">-&gt;</span> <span class="nv">concatMap</span> <span class="nv">fpatVars</span> <span class="nv">fps</span>
      <span class="n">ListP</span> <span class="nv">pats</span> <span class="o">-&gt;</span> <span class="nv">concatMap</span> <span class="nv">patVars</span> <span class="nv">pats</span>
      <span class="kr">_</span> <span class="o">-&gt;</span> <span class="p">[]</span>

    <span class="nv">fpatVars</span> <span class="p">(</span><span class="kr">_</span><span class="p">,</span> <span class="nv">pat</span><span class="p">)</span> <span class="o">=</span> <span class="nv">patVars</span> <span class="nv">pat</span>

    <span class="nv">replacement</span> <span class="nv">vars</span> <span class="o">=</span> <span class="p">[</span><span class="o">|</span> <span class="n">Map</span><span class="o">.</span><span class="nv">fromList</span> <span class="o">$</span><span class="p">(</span><span class="nv">list</span><span class="p">)</span> <span class="o">|</span><span class="p">]</span>
      <span class="kr">where</span>
        <span class="nv">list</span> <span class="o">=</span> <span class="nv">listE</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">entry</span> <span class="nv">vars</span>
        <span class="nv">entry</span> <span class="nv">name</span> <span class="o">=</span> <span class="p">[</span><span class="o">|</span> <span class="p">(</span><span class="o">$</span><span class="p">(</span><span class="nv">str</span><span class="p">),</span> <span class="nv">toDyn</span> <span class="o">$</span><span class="p">(</span><span class="nv">obj</span><span class="p">))</span> <span class="o">|</span><span class="p">]</span>
          <span class="kr">where</span>
            <span class="nv">str</span> <span class="o">=</span> <span class="nv">return</span> <span class="o">$</span> <span class="n">LitE</span> <span class="o">$</span> <span class="n">StringL</span> <span class="o">$</span> <span class="nv">show</span> <span class="nv">name</span>
            <span class="nv">obj</span> <span class="o">=</span> <span class="nv">return</span> <span class="o">$</span> <span class="n">VarE</span> <span class="nv">name</span>

<span class="cm">{-</span>
<span class="cm">  使い方：</span>
<span class="cm">    別モジュールで</span>

<span class="cm">    import LocalVariables</span>

<span class="cm">    $(withLocalVariables [d|</span>

<span class="cm">      foo :: IO (Map.Map String Dynamic)</span>
<span class="cm">      foo = do</span>
<span class="cm">        let x = 1 :: Int</span>
<span class="cm">        let y = &quot;hello&quot;</span>
<span class="cm">        return localVariables</span>

<span class="cm">      |])</span>

<span class="cm">    のようにすると、localVariablesの出現を置換した上でfooが定義される</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1728/addtag/" class="addtag" id="addtag_1728">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1728/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1728/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1728"
  >-</span><span
  class="button yellow"
  id="rating_z_1728"
  >0</span><span 
  class="button green"
  id="rating_p_1728"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1728/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1989">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/96/" target="_top">ether</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1989/">#1989</a>(<script language="JavaScript">print_time(new Date("2007/08/07 13:37 GMT"));</script><noscript>2007/08/07 13:37 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/tcl/">
	  Tcl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Tcl にも info locals というずばりなコマンドがありますが Python と違って返されるのは名前のリストのみなので記述量は若干増えます。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre>proc foo {} {
  set x 1
  set y hello

  set locals [info locals]
  set result {}
  foreach k $locals { lappend result $k [set $k] }
  return $result
}

# % foo
# x 1 y hello
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/1989/addtag/" class="addtag" id="addtag_1989">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/tcl/">
		Tcl
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1989/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/1989/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1989"
  >-</span><span
  class="button yellow"
  id="rating_z_1989"
  >0</span><span 
  class="button green"
  id="rating_p_1989"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/1989/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2056">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/124/" target="_top">tsekine</a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/2056/">#2056</a>(<script language="JavaScript">print_time(new Date("2007/08/10 06:04 GMT"));</script><noscript>2007/08/10 06:04 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  BASHには連想配列がないのですが、表示がそのまま連想配列になってるように見えるというところでかんべんしてください。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre>foo <span class="o">()</span> <span class="o">{</span>
  <span class="nb">local</span> -i <span class="nv">x</span><span class="o">=</span>1
  <span class="nb">local </span><span class="nv">y</span><span class="o">=</span><span class="s2">&quot;Hello&quot;</span>
  <span class="nb">local</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/2056/addtag/" class="addtag" id="addtag_2056">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/2056/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/2056/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2056"
  >-</span><span
  class="button yellow"
  id="rating_z_2056"
  >0</span><span 
  class="button green"
  id="rating_p_2056"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/2056/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2692">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/409/" target="_top">130R</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/2692/">#2692</a>(<script language="JavaScript">print_time(new Date("2007/08/30 11:31 GMT"));</script><noscript>2007/08/30 11:31 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/powershell/">
	  PowerShell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>-scopeは規定値でLocalだけど、ローカルと言い張るために付けておきました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre>Get-Variable  -scope Local | %{$h=@{}} {$h[$_.name]=$_.value}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/2692/addtag/" class="addtag" id="addtag_2692">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/powershell/">
		PowerShell
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/2692/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/2692/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2692"
  >-</span><span
  class="button yellow"
  id="rating_z_2692"
  >0</span><span 
  class="button green"
  id="rating_p_2692"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/2692/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  <br/>

  
  




<div class="comment" id="comment3935">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/3935/">#3935</a>(<script language="JavaScript">print_time(new Date("2007/11/13 08:30 GMT"));</script><noscript>2007/11/13 08:30 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/nadesico/">
	  なでしこ
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>若干力技ですが。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre>mとはハッシュ

●foo
　　xとは整数= 1
　　yとは文字列= &quot;hello&quot;
　　
　　&quot;ローカル&quot;の変数列挙を反復
　　　　tmp=対象を&quot; +&quot;で正規表現区切る
　　　　m＠(切り取る(tmp,&quot;=&quot;))=tmp[1]
　　mで戻る

fooを表示
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/3935/addtag/" class="addtag" id="addtag_3935">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/nadesico/">
		なでしこ
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/3935/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/3935/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3935"
  >-</span><span
  class="button yellow"
  id="rating_z_3935"
  >0</span><span 
  class="button green"
  id="rating_p_3935"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/3935/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4875">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/4875/">#4875</a>(<script language="JavaScript">print_time(new Date("2007/12/18 18:55 GMT"));</script><noscript>2007/12/18 18:55 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/postscript/">
	  PostScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>PostScript です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="highlight"><pre>/foo{
    2 dict             % 2 個要素が入る辞書をオペランドスタックに置く
    begin              % スタックトップの辞書を辞書スタックに置く
        /x 1 def       % 辞書スタックのトップの辞書に、キー x 値 1 を登録する
                  % ここで x とすると、辞書スタックのトップからキー x を探し
                  % その値 (今の場合 1) をオペランドスタックに置く
                  % つまり、x を変数として扱える
        /y (hello) def
        currentdict    % 辞書スタックのトップの辞書をオペランドスタックに置く
    end                % 辞書スタックから辞書を1個除く
}def

foo        % 辞書がオペランドスタックに置かれる
% オペランドスタックの辞書の中身を表示
{
    exch
    (name: )print ==
    (value: )print ==
    (\n)print
}forall

% 以下は出力
name: /y
value: (hello)

name: /x
value: 1
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/4875/addtag/" class="addtag" id="addtag_4875">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/postscript/">
		PostScript
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/4875/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/4875/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4875"
  >-</span><span
  class="button yellow"
  id="rating_z_4875"
  >0</span><span 
  class="button green"
  id="rating_p_4875"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/4875/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5559">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/681/" target="_top">queck</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/5559/">#5559</a>(<script language="JavaScript">print_time(new Date("2008/01/29 16:35 GMT"));</script><noscript>2008/01/29 16:35 GMT</noscript>)
	
	
	
	[<a href="/web/20080513064854/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Factor では with-scope で変数のスコープを限定しないと、その変数のスコープは関数（ワード）をまたいでしまいます。</p>
<p>スタックベースの言語では関数ローカル変数はあまり需要がありませんし、Factor では変数は通常関数をまたいで情報を受け渡しするために使うためでしょう。</p>
<p>ということで with-scope で囲めばそのスコープ内の変数を namespace で取得できます。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="highlight"><pre>USE: namespaces
: foo
    [ 1 &quot;x&quot; set
      &quot;hello&quot; &quot;y&quot; set
      namespace ] with-scope ;

USE: prettyprint
foo . ! =&gt; H{ { &quot;x&quot; 1 } { &quot;y&quot; &quot;hello&quot; } }
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/5559/addtag/" class="addtag" id="addtag_5559">タグ</a>:
	
    
    <a href="/web/20080513064854/http://ja.doukaku.org/tag/Factor/">Factor</a>
    
	&nbsp;

	
      [<a href="/web/20080513064854/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20080513064854/http://ja.doukaku.org/comment/5559/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080513064854/http://ja.doukaku.org/comment/5559/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5559"
  >-</span><span
  class="button yellow"
  id="rating_z_5559"
  >0</span><span 
  class="button green"
  id="rating_p_5559"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/5559/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5929">
  <p class="banner"><a href="/web/20080513064854/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080513064854/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/5929/">#5929</a>(<script language="JavaScript">print_time(new Date("2008/03/04 08:30 GMT"));</script><noscript>2008/03/04 08:30 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>それだとglobalも含まれている気が・・。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080513064854/http://ja.doukaku.org/comment/5929/addtag/" class="addtag" id="addtag_5929">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5929"
  >-</span><span
  class="button yellow"
  id="rating_z_5929"
  >0</span><span 
  class="button green"
  id="rating_p_5929"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080513064854/http://ja.doukaku.org/comment/1617/"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080513064854/http://ja.doukaku.org/comment/5929/root/"><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080513064854/http://ja.doukaku.org/35/reply_to/5929/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20080513064854if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20080513064854/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20080513064854/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20080513064854/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20080513064854/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20080513064854/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20080513064854/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20080513064854/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20080513064854/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20080513064854/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20080513064854/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20080513064854im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20080513064854/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20080513064854/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20080513064854/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20080513064854/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20080513064854/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20080513064854/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20080513064854/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20080513064854/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20080513064854im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20080513064854/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20080513064854/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20080513064854/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20080513064854js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 6:48:54 May 13, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 13:51:56 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
