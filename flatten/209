
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
タブ区切りデータの処理
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20091213020717cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20091213020717cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20091213020717cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20091213020717/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20091213020717/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20091213020717js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20091213020717js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20091213020717js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20091213020717js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app0.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/209\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "13";
var displayMonth = "Dec";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/209/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20091213020717" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Nov
                       
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 2:07:17 Dec 13, 2009">DEC</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jan
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_prv_off.png" alt="Previous capture" width="14" height="16" border="0" />
                       
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 2:07:17 Dec 13, 2009">13</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2008
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 2:07:17 Dec 13, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20091213020717*/http://ja.doukaku.org/209/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>1 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 Dec 09 - 13 Dec 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:11:000000000001_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20091213020717/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20091213020717/http://ja.doukaku.org/209/">タブ区切りデータの処理</a>
</h2>

    





<div class="comment" id="comment7723">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/654/" target="_top">kh</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7723/">#7723</a>(<script language="JavaScript">print_time(new Date("2008/10/02 10:39 GMT"));</script><noscript>2008/10/02 10:39 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>タブ区切りのデータを読み込んで操作をし書き出す方法を教えてください。
読み込み・書き出しの方法は任意とします。</p>
<p>与えられるデータは:</p>
<ul class="simple">
<li>レコードの区切りは改行、カラムの区切りはタブです。</li>
<li>最初のレコードはヘッダで、カラムの名前が書いてあります。</li>
<li>それ以降はデータで、第1,4カラムは整数値、第2,3カラムは文字列値です。</li>
</ul>
<p>この入力データに対して以下の操作をしたものを書き出してください:</p>
<ul class="simple">
<li>第1カラムの値でデータを昇順にソートする。</li>
<li>第2カラムと第3カラムをヘッダを含めて入れ替える。</li>
<li>第4カラムの値にそれぞれ1を加える。</li>
</ul>
<p>入力の例:</p>
<pre class="literal-block">
ID      Surname Forename        Age
1       Sato    Hanako  17
0       Suzuki  Taro    18
...
</pre>
<p>出力の例:</p>
<pre class="literal-block">
ID      Forename        Surname Age
0       Taro    Suzuki  19
1       Hanako  Sato    18
...
</pre>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7723/addtag/" class="addtag" id="addtag_7723">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7723"
  >-</span><span
  class="button yellow"
  id="rating_z_7723"
  >0</span><span 
  class="button green"
  id="rating_p_7723"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7723/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20091213020717/http://ja.doukaku.org/209/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - フラット表示</h2>
<a href="/web/20091213020717/http://ja.doukaku.org/209/nested/">ネスト表示</a>
<a href="/web/20091213020717/http://ja.doukaku.org/209/">非表示</a> 


  
  <br/>

  
  




<div class="comment" id="comment7724">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7724/">#7724</a>(<script language="JavaScript">print_time(new Date("2008/10/02 13:07 GMT"));</script><noscript>2008/10/02 13:07 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  こんなんでいいのかなぁ。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre><span class="c">#text = open(&quot;data.txt&quot;).read()</span>
<span class="n">text</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;ID    Surname    Forename    Age</span>
<span class="s">1    Sato    Hanako    17</span>
<span class="s">0    Suzuki    Taro    18</span>
<span class="s">3    Ozawa    Ichiro    66</span>
<span class="s">2    Asoh    Taro    68</span>
<span class="s">&quot;&quot;&quot;</span>

<span class="n">records</span> <span class="o">=</span> <span class="p">[</span><span class="n">l</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\t</span><span class="s">&#39;</span><span class="p">)</span> <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">text</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)][:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<span class="n">header</span> <span class="o">=</span> <span class="n">records</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

<span class="n">records</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">r</span><span class="p">:</span> <span class="nb">int</span><span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
<span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="p">[</span><span class="n">header</span><span class="p">]</span> <span class="o">+</span> <span class="n">records</span><span class="p">:</span>
    <span class="n">r</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="n">r</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">r</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="n">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">records</span><span class="p">:</span>
    <span class="n">r</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="s">&quot;</span><span class="si">%d</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>

<span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="p">[</span><span class="n">header</span><span class="p">]</span> <span class="o">+</span> <span class="n">records</span><span class="p">:</span>
    <span class="k">print</span> <span class="s">&#39;</span><span class="se">\t</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7724/addtag/" class="addtag" id="addtag_7724">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7724/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7724/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7724"
  >-</span><span
  class="button yellow"
  id="rating_z_7724"
  >0</span><span 
  class="button green"
  id="rating_p_7724"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7724/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7725">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7725/">#7725</a>(<script language="JavaScript">print_time(new Date("2008/10/02 13:13 GMT"));</script><noscript>2008/10/02 13:13 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>標準入力から読込
標準出力への出力
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre><span class="nv">@header</span> <span class="o">=</span> <span class="nb">split</span><span class="p">(</span><span class="sr">/\t/</span><span class="p">,</span> <span class="o">&lt;&gt;</span><span class="p">);</span>
<span class="p">(</span><span class="nv">$header</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="nv">$header</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$header</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nv">$header</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
<span class="k">print</span> <span class="nb">join</span><span class="p">(</span><span class="s">&quot;\t&quot;</span><span class="p">,</span> <span class="nv">@header</span><span class="p">);</span>

<span class="k">print</span> <span class="nb">map</span> <span class="p">{</span> <span class="p">(</span><span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">=</span><span class="p">(</span><span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="nv">$_</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">++</span><span class="p">;</span> <span class="nb">join</span><span class="p">(</span><span class="s">&quot;\t&quot;</span><span class="p">,</span> <span class="nv">@$_</span><span class="p">)</span><span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span> <span class="p">}</span> <span class="nb">sort</span><span class="p">{</span> <span class="nv">$a</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;=&gt;</span> <span class="nv">$b</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">}</span> <span class="nb">map</span> <span class="p">[</span><span class="nb">split</span> <span class="sr">/\t/</span><span class="p">],</span> <span class="o">&lt;&gt;</span> <span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7725/addtag/" class="addtag" id="addtag_7725">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7725/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7725/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7725"
  >-</span><span
  class="button yellow"
  id="rating_z_7725"
  >0</span><span 
  class="button green"
  id="rating_p_7725"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7725/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7726">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/852/" target="_top">emasaka</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7726/">#7726</a>(<script language="JavaScript">print_time(new Date("2008/10/02 18:29 GMT"));</script><noscript>2008/10/02 18:29 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>sortを使いawkを使わない解。bashとdashで動作確認。</p>
<p>1、3、4、5行目にはタブ文字が含まれています。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre><span class="nv">IFS</span><span class="o">=</span><span class="s1">&#39;    &#39;</span>
<span class="nb">read</span> -r id forename surname age
<span class="nb">echo</span> <span class="s2">&quot;$id    $surname    $forename    $age&quot;</span>
sort -n -t <span class="s1">&#39;    &#39;</span> | <span class="k">while </span><span class="nb">read</span> -r id forename surname age;do
    <span class="nb">echo</span> <span class="s2">&quot;$id    $surname    $forename    $((age + 1))&quot;</span>
<span class="k">done</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7726/addtag/" class="addtag" id="addtag_7726">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7726/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7726/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7726"
  >-</span><span
  class="button yellow"
  id="rating_z_7726"
  >0</span><span 
  class="button green"
  id="rating_p_7726"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7726/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7726/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7727">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7727/">#7727</a>(<script language="JavaScript">print_time(new Date("2008/10/02 19:34 GMT"));</script><noscript>2008/10/02 19:34 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>標準入力から標準出力へ

$ runghc tsv.hs &lt; tsv.data
ID      Forename        Surname Age
0       Taro    Suzuki  19
1       Hanako  Sato    18
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Control</span><span class="o">.</span><span class="n">Arrow</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Function</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="nv">putStr</span> <span class="o">.</span> <span class="nv">unlines</span> <span class="o">.</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">concat</span> <span class="o">.</span> <span class="nv">intersperse</span> <span class="s">&quot;\t&quot;</span><span class="p">)</span> <span class="o">.</span> <span class="nv">uncurry</span> <span class="p">(</span><span class="o">++</span><span class="p">)</span> 
     <span class="o">.</span> <span class="nv">second</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">inccol4</span> <span class="o">.</span> <span class="nv">sortBy</span> <span class="p">(</span><span class="nv">compare</span> <span class="p">`</span><span class="nv">on</span><span class="p">`</span> <span class="nv">readInt</span> <span class="o">.</span> <span class="nv">head</span><span class="p">))</span> 
     <span class="o">.</span> <span class="nv">splitAt</span> <span class="mi">1</span> <span class="o">.</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">swap23</span> <span class="o">.</span> <span class="nv">words</span><span class="p">)</span> 
     <span class="o">.</span> <span class="nv">filter</span> <span class="p">(</span><span class="nv">not</span> <span class="o">.</span> <span class="nv">null</span><span class="p">)</span> <span class="o">.</span> <span class="nv">lines</span> <span class="o">=&lt;&lt;</span> <span class="nv">getContents</span>
  <span class="kr">where</span> <span class="nv">swap23</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">y</span><span class="o">:</span><span class="nv">z</span><span class="o">:</span><span class="nv">ws</span><span class="p">)</span> <span class="o">=</span> <span class="nv">x</span><span class="o">:</span><span class="nv">z</span><span class="o">:</span><span class="nv">y</span><span class="o">:</span><span class="nv">ws</span>
        <span class="nv">inccol4</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">y</span><span class="o">:</span><span class="nv">z</span><span class="o">:</span><span class="p">[</span><span class="nv">w</span><span class="p">])</span> <span class="o">=</span> <span class="nv">x</span><span class="o">:</span><span class="nv">y</span><span class="o">:</span><span class="nv">z</span><span class="o">:</span><span class="p">[</span><span class="nv">show</span> <span class="p">(</span><span class="nv">readInt</span> <span class="nv">w</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>
        <span class="nv">readInt</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">Int</span>
        <span class="nv">readInt</span> <span class="o">=</span> <span class="nv">read</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7727/addtag/" class="addtag" id="addtag_7727">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7727/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7727/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7727"
  >-</span><span
  class="button yellow"
  id="rating_z_7727"
  >0</span><span 
  class="button green"
  id="rating_p_7727"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7727/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7727/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7728">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7728/">#7728</a>(<script language="JavaScript">print_time(new Date("2008/10/02 19:51 GMT"));</script><noscript>2008/10/02 19:51 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>効率すこし改善版</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Control</span><span class="o">.</span><span class="n">Arrow</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Function</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="nv">mapM_</span> <span class="p">(</span><span class="nv">putStrLn</span> <span class="o">.</span> <span class="nv">concat</span> <span class="o">.</span> <span class="nv">intersperse</span> <span class="s">&quot;\t&quot;</span><span class="p">)</span> <span class="o">.</span> <span class="nv">uncurry</span> <span class="p">(</span><span class="o">++</span><span class="p">)</span> 
     <span class="o">.</span> <span class="p">(</span><span class="nv">map</span> <span class="p">(</span><span class="nv">swap23</span> <span class="o">.</span> <span class="nv">words</span><span class="p">)</span> <span class="o">***</span> <span class="nv">sortBy</span> <span class="p">(</span><span class="nv">compare</span> <span class="p">`</span><span class="nv">on</span><span class="p">`</span> <span class="nv">readInt</span> <span class="o">.</span> <span class="nv">head</span><span class="p">)</span> <span class="o">.</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">swap23inccol4</span> <span class="o">.</span> <span class="nv">words</span><span class="p">))</span> 
     <span class="o">.</span> <span class="nv">splitAt</span> <span class="mi">1</span> <span class="o">.</span> <span class="nv">filter</span> <span class="p">(</span><span class="nv">not</span> <span class="o">.</span> <span class="nv">null</span><span class="p">)</span> <span class="o">.</span> <span class="nv">lines</span> <span class="o">=&lt;&lt;</span> <span class="nv">getContents</span>
  <span class="kr">where</span> <span class="nv">swap23</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">y</span><span class="o">:</span><span class="nv">z</span><span class="o">:</span><span class="nv">ws</span><span class="p">)</span> <span class="o">=</span> <span class="nv">x</span><span class="o">:</span><span class="nv">z</span><span class="o">:</span><span class="nv">y</span><span class="o">:</span><span class="nv">ws</span>
        <span class="nv">swap23inccol4</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">y</span><span class="o">:</span><span class="nv">z</span><span class="o">:</span><span class="p">[</span><span class="nv">w</span><span class="p">])</span> <span class="o">=</span> <span class="nv">x</span><span class="o">:</span><span class="nv">z</span><span class="o">:</span><span class="nv">y</span><span class="o">:</span><span class="p">[</span><span class="nv">show</span> <span class="p">(</span><span class="nv">readInt</span> <span class="nv">w</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>
        <span class="nv">readInt</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">Int</span>
        <span class="nv">readInt</span> <span class="o">=</span> <span class="nv">read</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7728/addtag/" class="addtag" id="addtag_7728">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7728/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7728/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7728"
  >-</span><span
  class="button yellow"
  id="rating_z_7728"
  >0</span><span 
  class="button green"
  id="rating_p_7728"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7727/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7728/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7728/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7729">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7729/">#7729</a>(<script language="JavaScript">print_time(new Date("2008/10/02 21:51 GMT"));</script><noscript>2008/10/02 21:51 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>統計処理言語だけあって、Rでは、この手のデータ処理は非常に直感的です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre># タブ区切りのデータを読み込む
d &lt;- read.delim(&quot;input.tsv&quot;)

# 第1カラムの値でデータを昇順にソートする。
d &lt;- d[sort.list(d[,1]),]

# 第2カラムと第3カラムをヘッダを含めて入れ替える。
d[,c(2,3)] &lt;- d[,c(3,2)]
colnames(d)[c(2,3)] &lt;- colnames(d)[c(3,2)]

# 第4カラムの値にそれぞれ1を加える。
d[,4] &lt;- d[,4] + 1

# 書き出す
write.table(d, &quot;output.tsv&quot;, sep=&quot;\t&quot;, quote=F, row.names=F)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7729/addtag/" class="addtag" id="addtag_7729">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7729/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7729/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7729"
  >-</span><span
  class="button yellow"
  id="rating_z_7729"
  >0</span><span 
  class="button green"
  id="rating_p_7729"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7729/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7730">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7730/">#7730</a>(<script language="JavaScript">print_time(new Date("2008/10/02 22:11 GMT"));</script><noscript>2008/10/02 22:11 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>何とか。
しかし何か美しくない...</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;algorithm&gt;</span>
<span class="cp">#include &lt;functional&gt;</span>
<span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;iterator&gt;</span>
<span class="cp">#include &lt;sstream&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>

<span class="k">namespace</span>
<span class="p">{</span>

<span class="k">class</span> <span class="nc">Row</span>
<span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">data_</span><span class="p">;</span>

  <span class="k">friend</span> <span class="n">std</span><span class="o">::</span><span class="n">istream</span><span class="o">&amp;</span> <span class="k">operator</span><span class="o">&gt;&gt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">istream</span><span class="o">&amp;</span><span class="p">,</span> <span class="n">Row</span><span class="o">&amp;</span><span class="p">);</span>
  <span class="k">friend</span> <span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="k">operator</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span><span class="p">,</span> <span class="k">const</span> <span class="n">Row</span><span class="o">&amp;</span><span class="p">);</span>

  <span class="k">public</span><span class="o">:</span>
  <span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">find</span><span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&amp;</span> <span class="n">key</span><span class="p">)</span> <span class="k">const</span><span class="p">;</span> 

  <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&amp;</span> <span class="k">operator</span><span class="p">[](</span><span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">i</span><span class="p">)</span>
  <span class="p">{</span> <span class="k">return</span> <span class="n">data_</span><span class="p">.</span><span class="n">at</span><span class="p">(</span><span class="n">i</span><span class="p">);</span> <span class="p">}</span>
  <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&amp;</span> <span class="k">operator</span><span class="p">[](</span><span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">i</span><span class="p">)</span> <span class="k">const</span>
  <span class="p">{</span> <span class="k">return</span> <span class="n">data_</span><span class="p">.</span><span class="n">at</span><span class="p">(</span><span class="n">i</span><span class="p">);</span> <span class="p">}</span>

  <span class="kt">bool</span> <span class="n">empty</span><span class="p">()</span> <span class="k">const</span>
  <span class="p">{</span> <span class="k">return</span> <span class="n">data_</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">||</span> <span class="n">data_</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">data_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="p">}</span>
<span class="p">};</span>

<span class="n">std</span><span class="o">::</span><span class="n">istream</span><span class="o">&amp;</span>
<span class="k">operator</span><span class="o">&gt;&gt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">istream</span><span class="o">&amp;</span> <span class="n">is</span><span class="p">,</span> <span class="n">Row</span><span class="o">&amp;</span> <span class="n">r_</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">Row</span> <span class="n">r</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">line</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">getline</span><span class="p">(</span><span class="n">is</span><span class="p">,</span> <span class="n">line</span><span class="p">);</span>
  
  <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">::</span><span class="n">size_type</span> <span class="n">i</span><span class="p">,</span> <span class="n">o</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> 
  <span class="k">while</span> <span class="p">((</span><span class="n">i</span> <span class="o">=</span> <span class="n">line</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">o</span><span class="p">))</span> <span class="o">!=</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">::</span><span class="n">npos</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">r</span><span class="p">.</span><span class="n">data_</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">line</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">o</span><span class="p">,</span> <span class="n">i</span> <span class="o">-</span> <span class="n">o</span><span class="p">));</span>
    <span class="n">o</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="n">r</span><span class="p">.</span><span class="n">data_</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">line</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">o</span><span class="p">));</span>
  <span class="n">std</span><span class="o">::</span><span class="n">swap</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">r_</span><span class="p">);</span>
  <span class="k">return</span> <span class="n">is</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span>
<span class="k">operator</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="n">os</span><span class="p">,</span> <span class="k">const</span> <span class="n">Row</span><span class="o">&amp;</span> <span class="n">r</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="n">copy</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">data_</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">r</span><span class="p">.</span><span class="n">data_</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">std</span><span class="o">::</span><span class="n">ostream_iterator</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span><span class="p">(</span><span class="n">os</span><span class="p">,</span> <span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">));</span>
  <span class="n">os</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
  <span class="k">return</span> <span class="n">os</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">size_t</span>
<span class="n">Row</span><span class="o">::</span><span class="n">find</span><span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&amp;</span> <span class="n">key</span><span class="p">)</span>
<span class="k">const</span>
<span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;::</span><span class="n">const_iterator</span> <span class="n">it</span> <span class="o">=</span>
    <span class="n">std</span><span class="o">::</span><span class="n">find</span><span class="p">(</span><span class="n">data_</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">data_</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">key</span><span class="p">);</span>
  <span class="k">if</span> <span class="p">(</span> <span class="n">it</span> <span class="o">==</span> <span class="n">data_</span><span class="p">.</span><span class="n">end</span><span class="p">()</span> <span class="p">)</span>
    <span class="k">throw</span> <span class="s">&quot;not found&quot;</span><span class="p">;</span>
  <span class="k">return</span> <span class="n">std</span><span class="o">::</span><span class="n">distance</span><span class="p">(</span><span class="n">data_</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">it</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">typedef</span> <span class="n">Row</span> <span class="n">Header</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Table</span>
<span class="p">{</span>
  <span class="n">Header</span> <span class="n">header_</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">Row</span><span class="o">&gt;</span> <span class="n">rows_</span><span class="p">;</span>

  <span class="k">friend</span> <span class="n">std</span><span class="o">::</span><span class="n">istream</span><span class="o">&amp;</span> <span class="k">operator</span><span class="o">&gt;&gt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">istream</span><span class="o">&amp;</span><span class="p">,</span> <span class="n">Table</span><span class="o">&amp;</span><span class="p">);</span>
  <span class="k">friend</span> <span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="k">operator</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span><span class="p">,</span> <span class="k">const</span> <span class="n">Table</span><span class="o">&amp;</span><span class="p">);</span>

  <span class="k">public</span><span class="o">:</span>
    <span class="kt">void</span> <span class="n">sort_by</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">idx</span><span class="p">);</span>
    <span class="kt">void</span> <span class="n">swap_columns</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">col1</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">col2</span><span class="p">);</span>
    <span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">Filter</span><span class="o">&gt;</span>
      <span class="kt">void</span> <span class="n">filter</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">idx</span><span class="p">,</span> <span class="n">Filter</span> <span class="n">f</span><span class="p">);</span>

  <span class="k">private</span><span class="o">:</span>
    <span class="k">class</span> <span class="nc">comparator</span>
      <span class="o">:</span> <span class="k">public</span> <span class="n">std</span><span class="o">::</span><span class="n">binary_function</span><span class="o">&lt;</span><span class="kt">bool</span><span class="p">,</span> <span class="n">Row</span><span class="p">,</span> <span class="n">Row</span><span class="o">&gt;</span>
    <span class="p">{</span>
      <span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">col_</span><span class="p">;</span>
      <span class="k">public</span><span class="o">:</span>
      <span class="n">comparator</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">col</span><span class="p">)</span> <span class="o">:</span> <span class="n">col_</span><span class="p">(</span><span class="n">col</span><span class="p">)</span> <span class="p">{}</span>

      <span class="kt">bool</span> <span class="k">operator</span><span class="p">()(</span><span class="k">const</span> <span class="n">Row</span><span class="o">&amp;</span> <span class="n">r1</span><span class="p">,</span> <span class="k">const</span> <span class="n">Row</span><span class="o">&amp;</span> <span class="n">r2</span><span class="p">)</span> <span class="k">const</span>
      <span class="p">{</span> <span class="k">return</span> <span class="n">r1</span><span class="p">[</span><span class="n">col_</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">r2</span><span class="p">[</span><span class="n">col_</span><span class="p">];</span> <span class="p">}</span>
    <span class="p">};</span>
<span class="p">};</span>

<span class="n">std</span><span class="o">::</span><span class="n">istream</span><span class="o">&amp;</span>
<span class="k">operator</span><span class="o">&gt;&gt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">istream</span><span class="o">&amp;</span> <span class="n">is</span><span class="p">,</span> <span class="n">Table</span><span class="o">&amp;</span> <span class="n">t</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">is</span> <span class="o">&gt;&gt;</span> <span class="n">t</span><span class="p">.</span><span class="n">header_</span><span class="p">;</span>

  <span class="n">std</span><span class="o">::</span><span class="n">istream_iterator</span><span class="o">&lt;</span><span class="n">Row</span><span class="o">&gt;</span> <span class="n">b</span><span class="p">(</span><span class="n">is</span><span class="p">),</span><span class="n">e</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">copy</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">e</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">back_inserter</span><span class="p">(</span><span class="n">t</span><span class="p">.</span><span class="n">rows_</span><span class="p">));</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">t</span><span class="p">.</span><span class="n">rows_</span><span class="p">.</span><span class="n">back</span><span class="p">().</span><span class="n">empty</span><span class="p">())</span>
    <span class="n">t</span><span class="p">.</span><span class="n">rows_</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">t</span><span class="p">.</span><span class="n">rows_</span><span class="p">.</span><span class="n">end</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>

  <span class="k">return</span> <span class="n">is</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span>
<span class="k">operator</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">ostream</span><span class="o">&amp;</span> <span class="n">os</span><span class="p">,</span> <span class="k">const</span> <span class="n">Table</span><span class="o">&amp;</span> <span class="n">t</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">os</span> <span class="o">&lt;&lt;</span> <span class="n">t</span><span class="p">.</span><span class="n">header_</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">copy</span><span class="p">(</span><span class="n">t</span><span class="p">.</span><span class="n">rows_</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">t</span><span class="p">.</span><span class="n">rows_</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">std</span><span class="o">::</span><span class="n">ostream_iterator</span><span class="o">&lt;</span><span class="n">Row</span><span class="o">&gt;</span><span class="p">(</span><span class="n">os</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">));</span>
  <span class="k">return</span> <span class="n">os</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> 
<span class="n">Table</span><span class="o">::</span><span class="n">sort_by</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">idx</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">comparator</span> <span class="n">comp</span><span class="p">(</span><span class="n">idx</span><span class="p">);</span>
  <span class="n">std</span><span class="o">::</span><span class="n">sort</span><span class="p">(</span><span class="n">rows_</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">rows_</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">comp</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="n">Table</span><span class="o">::</span><span class="n">swap_columns</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">col1</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">col2</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span> <span class="n">col1</span> <span class="o">==</span> <span class="n">col2</span> <span class="p">)</span> <span class="k">return</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">swap</span><span class="p">(</span><span class="n">header_</span><span class="p">[</span><span class="n">col1</span><span class="p">],</span> <span class="n">header_</span><span class="p">[</span><span class="n">col2</span><span class="p">]);</span>
  <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">Row</span><span class="o">&gt;::</span><span class="n">iterator</span> <span class="n">it</span> <span class="o">=</span> <span class="n">rows_</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
  <span class="k">for</span> <span class="p">(</span> <span class="p">;</span> <span class="n">it</span> <span class="o">!=</span> <span class="n">rows_</span><span class="p">.</span><span class="n">end</span><span class="p">();</span> <span class="o">++</span><span class="n">it</span> <span class="p">)</span>
    <span class="n">std</span><span class="o">::</span><span class="n">swap</span><span class="p">((</span><span class="o">*</span><span class="n">it</span><span class="p">)[</span><span class="n">col1</span><span class="p">],</span> <span class="p">(</span><span class="o">*</span><span class="n">it</span><span class="p">)[</span><span class="n">col2</span><span class="p">]);</span>
<span class="p">}</span>

<span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">Filter</span><span class="o">&gt;</span>
<span class="kt">void</span>
<span class="n">Table</span><span class="o">::</span><span class="n">filter</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">size_t</span> <span class="n">idx</span><span class="p">,</span> <span class="n">Filter</span> <span class="n">f</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">Row</span><span class="o">&gt;::</span><span class="n">iterator</span> <span class="n">it</span> <span class="o">=</span> <span class="n">rows_</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
  <span class="k">for</span> <span class="p">(</span> <span class="p">;</span> <span class="n">it</span> <span class="o">!=</span> <span class="n">rows_</span><span class="p">.</span><span class="n">end</span><span class="p">();</span> <span class="o">++</span><span class="n">it</span> <span class="p">)</span>
  <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">stringstream</span> <span class="n">ss</span><span class="p">((</span><span class="o">*</span><span class="n">it</span><span class="p">)[</span><span class="n">idx</span><span class="p">]);</span>
    <span class="k">typename</span> <span class="n">Filter</span><span class="o">::</span><span class="n">result_type</span> <span class="n">v</span><span class="p">;</span>
    <span class="n">ss</span> <span class="o">&gt;&gt;</span> <span class="n">v</span><span class="p">;</span>
    <span class="n">v</span> <span class="o">=</span> <span class="n">f</span><span class="p">(</span><span class="n">v</span><span class="p">);</span>
    <span class="n">ss</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
    <span class="n">ss</span> <span class="o">&lt;&lt;</span> <span class="n">v</span><span class="p">;</span>
    <span class="p">(</span><span class="o">*</span><span class="n">it</span><span class="p">)[</span><span class="n">idx</span><span class="p">]</span> <span class="o">=</span> <span class="n">ss</span><span class="p">.</span><span class="n">str</span><span class="p">();</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">filter</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">)</span>
<span class="p">{</span> <span class="k">return</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="p">}</span>

<span class="p">}</span> <span class="c">// namespace</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="n">istringstream</span> <span class="n">ss</span><span class="p">(</span>
      <span class="s">&quot;ID</span><span class="se">\t</span><span class="s">Surname</span><span class="se">\t</span><span class="s">Forename</span><span class="se">\t</span><span class="s">Age</span><span class="se">\n</span><span class="s">&quot;</span>
      <span class="s">&quot;1</span><span class="se">\t</span><span class="s">Sato</span><span class="se">\t</span><span class="s">Hanako</span><span class="se">\t</span><span class="s">17</span><span class="se">\n</span><span class="s">&quot;</span>
      <span class="s">&quot;0</span><span class="se">\t</span><span class="s">Suzuki</span><span class="se">\t</span><span class="s">Taro</span><span class="se">\t</span><span class="s">18</span><span class="se">\n</span><span class="s">&quot;</span>
      <span class="p">);</span>

  <span class="n">Table</span> <span class="n">t</span><span class="p">;</span>
  <span class="n">ss</span> <span class="o">&gt;&gt;</span> <span class="n">t</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">t</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">=====</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>

  <span class="n">t</span><span class="p">.</span><span class="n">sort_by</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
  <span class="n">t</span><span class="p">.</span><span class="n">swap_columns</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
  <span class="n">t</span><span class="p">.</span><span class="n">filter</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">ptr_fun</span><span class="p">(</span><span class="n">filter</span><span class="p">));</span>

  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">t</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7730/addtag/" class="addtag" id="addtag_7730">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7730/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7730/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7730"
  >-</span><span
  class="button yellow"
  id="rating_z_7730"
  >0</span><span 
  class="button green"
  id="rating_p_7730"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7730/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7731">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/16/" target="_top">kiy0taka</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7731/">#7731</a>(<script language="JavaScript">print_time(new Date("2008/10/02 22:58 GMT"));</script><noscript>2008/10/02 22:58 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>


<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="o">{</span>

    <span class="k">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">header</span><span class="o">;</span>

    <span class="k">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">data</span><span class="o">;</span>

    <span class="k">public</span> <span class="n">Sample</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">boolean</span> <span class="n">isFirst</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">lines</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
        <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;(</span><span class="n">lines</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">line</span> <span class="o">:</span> <span class="n">str</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">row</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">line</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;\t&quot;</span><span class="o">));</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">isFirst</span> <span class="o">&amp;&amp;</span> <span class="o">!(</span><span class="n">isFirst</span> <span class="o">=</span> <span class="kc">false</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">header</span> <span class="o">=</span> <span class="n">row</span><span class="o">;</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">data</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">row</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">Sample</span> <span class="n">sort</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span> <span class="n">column</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;()</span> <span class="o">{</span>
            <span class="k">public</span> <span class="kt">int</span> <span class="n">compare</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">l</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">return</span> <span class="n">r</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">column</span><span class="o">).</span><span class="na">compareTo</span><span class="o">(</span><span class="n">l</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">column</span><span class="o">));</span>
            <span class="o">}</span>
        <span class="o">});</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">Sample</span> <span class="n">swapColumn</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span> <span class="n">column1</span><span class="o">,</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">column2</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;(</span><span class="n">data</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">header</span><span class="o">);</span>
        <span class="n">forAll</span><span class="o">(</span><span class="n">list</span><span class="o">,</span> <span class="k">new</span> <span class="n">Closure</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">public</span> <span class="kt">void</span> <span class="n">each</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">row</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">row</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">column1</span><span class="o">,</span> <span class="n">row</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">column2</span><span class="o">,</span> <span class="n">row</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">column1</span><span class="o">)));</span>
            <span class="o">}</span>
        <span class="o">});</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">Sample</span> <span class="n">addValue</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span> <span class="n">column</span><span class="o">,</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">add</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">forAll</span><span class="o">(</span><span class="k">new</span> <span class="n">Closure</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">public</span> <span class="kt">void</span> <span class="n">each</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">row</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">row</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">column</span><span class="o">,</span>
                    <span class="n">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">row</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">column</span><span class="o">))</span> <span class="o">+</span> <span class="n">add</span><span class="o">));</span> 
            <span class="o">}</span>
        <span class="o">});</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="kt">void</span> <span class="n">forAll</span><span class="o">(</span><span class="n">Closure</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">forAll</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">c</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="kt">void</span> <span class="n">forAll</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">list</span><span class="o">,</span> <span class="n">Closure</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">row</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">c</span><span class="o">.</span><span class="na">each</span><span class="o">(</span><span class="n">row</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="k">public</span> <span class="n">String</span> <span class="n">toString</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">join</span><span class="o">(</span><span class="n">header</span><span class="o">)).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">row</span> <span class="o">:</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">join</span><span class="o">(</span><span class="n">row</span><span class="o">)).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="n">String</span> <span class="n">join</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
        <span class="kt">boolean</span> <span class="n">isFirst</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">str</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(!</span><span class="n">isFirst</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\t&quot;</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">isFirst</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="k">interface</span> <span class="n">Closure</span> <span class="o">{</span>
        <span class="k">public</span> <span class="kt">void</span> <span class="n">each</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">row</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">str</span> <span class="o">=</span>
            <span class="s">&quot;ID\tSurname\tForename\tAge\n&quot;</span> <span class="o">+</span>
            <span class="s">&quot;1\tSato\tHanako\t17\n&quot;</span> <span class="o">+</span>
            <span class="s">&quot;0\tSuzuki\tTaro\t18\n&quot;</span><span class="o">;</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span>
            <span class="k">new</span> <span class="n">Sample</span><span class="o">(</span><span class="n">str</span><span class="o">).</span><span class="na">sort</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">swapColumn</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">).</span><span class="na">addValue</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7731/addtag/" class="addtag" id="addtag_7731">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7731/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7731/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7731"
  >-</span><span
  class="button yellow"
  id="rating_z_7731"
  >0</span><span 
  class="button green"
  id="rating_p_7731"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7731/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7732">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7732/">#7732</a>(<script language="JavaScript">print_time(new Date("2008/10/02 23:07 GMT"));</script><noscript>2008/10/02 23:07 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Squeak Smalltalk で。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="highlight"><pre>| data cr numRows numCols table rIdx labels rows |
data := &#39;ID    Surname    Forename    Age
1    Sato    Hanako    17
0    Suzuki    Taro    18
3    Ozawa    Ichiro    66
2    Asoh    Taro    68&#39;.

cr := Character cr.
numRows := (data occurrencesOf: cr) + 1.
numCols := ((data upTo: cr) occurrencesOf: Character tab) + 1.
table := Matrix rows: numRows columns: numCols.
rIdx := 0.
data linesDo: [:line |
    | cIdx |
    rIdx := rIdx + 1.
    cIdx := 0.
    line tabDelimitedFieldsDo: [:each | table at: rIdx at: (cIdx := cIdx + 1) put: each]].

labels := table atRow: 1.
table atColumn: 4 put: (table atColumn: 4) + 1.
table atRow: 1 put: labels.
table swapColumn: 2 withColumn: 3.
labels := table atRow: 1.
rows := (2 to: table rowCount) collect: [:idx | table atRow: idx].
rows sort: [:a :b | a first &lt; b first].

World findATranscript: nil.
{labels}, rows do: [:each |
    Transcript cr.
    each do: [:elem | Transcript show: elem] separatedBy: [Transcript tab]]

&quot;=&gt;
ID  Forename  Surname  Age
0   Taro      Suzuki   19
1   Hanako    Sato     18
2   Taro      Asoh     69
3   Ichiro    Ozawa    67  &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7732/addtag/" class="addtag" id="addtag_7732">タグ</a>:
	
    
    <a href="/web/20091213020717/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7732/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7732/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7732"
  >-</span><span
  class="button yellow"
  id="rating_z_7732"
  >0</span><span 
  class="button green"
  id="rating_p_7732"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7732/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7733">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/59/" target="_top">nori</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7733/">#7733</a>(<script language="JavaScript">print_time(new Date("2008/10/03 00:44 GMT"));</script><noscript>2008/10/03 00:44 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Python Code Reading 4に出てきたmetaclassをつかってみました。</p>
<p><a class="reference" href="/web/20091213020717/http://coreblog.org/ats/stuff/python-codereading/event-04">http://coreblog.org/ats/stuff/python-codereading/event-04</a></p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">readheader</span><span class="p">(</span><span class="n">line</span><span class="p">):</span>
  <span class="k">class</span> <span class="nc">_Meta</span><span class="p">(</span><span class="nb">type</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">cls</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">bases</span><span class="p">,</span> <span class="n">dct</span><span class="p">):</span>
      <span class="n">cls</span><span class="o">.</span><span class="n">_attrnames</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\t</span><span class="s">&#39;</span><span class="p">))</span>

  <span class="k">class</span> <span class="nc">TSVObject</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="n">__metaclass__</span> <span class="o">=</span> <span class="n">_Meta</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">line</span><span class="p">):</span>
      <span class="n">attrvalues</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\t</span><span class="s">&#39;</span><span class="p">))</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">__dict__</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_attrnames</span><span class="p">,</span> <span class="n">attrvalues</span><span class="p">)))</span>
    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
      <span class="k">return</span> <span class="s">&#39;&lt;TSVObject </span><span class="si">%s</span><span class="s">&gt;&#39;</span><span class="o">%</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s">&#39;</span><span class="si">%s</span><span class="s">=</span><span class="si">%s</span><span class="s">&#39;</span><span class="o">%</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span> <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">__dict__</span><span class="o">.</span><span class="n">items</span><span class="p">()]),)</span>
    <span class="n">__repr__</span> <span class="o">=</span> <span class="n">__str__</span>

  <span class="k">return</span> <span class="n">TSVObject</span>

<span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="n">lines</span><span class="p">):</span>
  <span class="n">klass</span> <span class="o">=</span> <span class="bp">None</span>
  <span class="n">L</span> <span class="o">=</span> <span class="nb">list</span><span class="p">()</span>
  <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">lines</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">klass</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
      <span class="n">klass</span> <span class="o">=</span> <span class="n">readheader</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
      <span class="k">continue</span>
    <span class="n">L</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">klass</span><span class="p">(</span><span class="n">line</span><span class="p">))</span>
  <span class="k">return</span> <span class="n">L</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">(</span>
  <span class="sd">&#39;&#39;&#39;ID\tSurname\tForename\tAge\n&#39;&#39;&#39;</span>
  <span class="sd">&#39;&#39;&#39;1\tSato\tHanako\t17\n&#39;&#39;&#39;</span>
  <span class="sd">&#39;&#39;&#39;0\tSuzuki\tTaro\t18\n&#39;&#39;&#39;</span>
  <span class="p">)</span>

<span class="n">lines</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">splitlines</span><span class="p">()</span>
<span class="n">L</span> <span class="o">=</span> <span class="n">parse</span><span class="p">(</span><span class="n">lines</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">cmp</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>
  <span class="n">a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">ID</span><span class="p">),</span> <span class="nb">int</span><span class="p">(</span><span class="n">b</span><span class="o">.</span><span class="n">ID</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">:</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
  <span class="k">elif</span> <span class="n">b</span> <span class="o">&lt;</span> <span class="n">a</span><span class="p">:</span>
    <span class="k">return</span> <span class="mi">1</span>
  <span class="k">return</span> <span class="mi">0</span>
<span class="n">L</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="nb">cmp</span><span class="p">)</span>

<span class="k">print</span> <span class="s">&#39;</span><span class="si">%s</span><span class="se">\t</span><span class="si">%s</span><span class="se">\t</span><span class="si">%s</span><span class="se">\t</span><span class="si">%s</span><span class="s">&#39;</span><span class="o">%</span><span class="p">(</span><span class="s">&#39;ID&#39;</span><span class="p">,</span> <span class="s">&#39;Forename&#39;</span><span class="p">,</span> <span class="s">&#39;Surname&#39;</span><span class="p">,</span> <span class="s">&#39;Age&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">L</span><span class="p">:</span>
  <span class="k">print</span> <span class="s">&#39;</span><span class="si">%s</span><span class="se">\t</span><span class="si">%s</span><span class="se">\t</span><span class="si">%s</span><span class="se">\t</span><span class="si">%s</span><span class="s">&#39;</span><span class="o">%</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">ID</span><span class="p">,</span> <span class="n">item</span><span class="o">.</span><span class="n">Forename</span><span class="p">,</span> <span class="n">item</span><span class="o">.</span><span class="n">Surname</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">Age</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7733/addtag/" class="addtag" id="addtag_7733">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7733/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7733/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7733"
  >-</span><span
  class="button yellow"
  id="rating_z_7733"
  >0</span><span 
  class="button green"
  id="rating_p_7733"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7733/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7734">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/405/" target="_top">g000001</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7734/">#7734</a>(<script language="JavaScript">print_time(new Date("2008/10/03 01:00 GMT"));</script><noscript>2008/10/03 01:00 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  なんだか書き捨てって感じになってしまいました(^^;
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre>(defpackage :doukaku-209 (:use :cl :split-sequence))
(in-package :doukaku-209)

(defun parse-integer-or-never (string &amp;key (after #&#39;values))
  (let ((num (parse-integer string :junk-allowed &#39;T)))
    (if num (funcall after num) string)))

(with-open-file (in &quot;doukaku-209.data&quot;)
  (with-open-file (out &quot;doukaku-209.out&quot; :direction :output :if-exists :supersede)
    (format out &quot;~{~{~A~^    ~}~%~}&quot;
            (destructuring-bind (title &amp;rest data)          
                (loop :for (id sur fore age) :=  (split-sequence #\Tab (read-line in nil nil)) 
                      :while (and id sur fore age)
                      :collect (list (parse-integer-or-never id) 
                                     fore 
                                     sur 
                                     (parse-integer-or-never age :after #&#39;1+)))
              `(,title ,@(sort data #&#39;&lt; :key #&#39;first))))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7734/addtag/" class="addtag" id="addtag_7734">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7734/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7734/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7734"
  >-</span><span
  class="button yellow"
  id="rating_z_7734"
  >0</span><span 
  class="button green"
  id="rating_p_7734"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7734/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7735">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/405/" target="_top">g000001</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7735/">#7735</a>(<script language="JavaScript">print_time(new Date("2008/10/03 03:11 GMT"));</script><noscript>2008/10/03 03:11 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  オブジェクト指向っぽく書いてみたつもりです…<br/>(with-open-file&nbsp;(in&nbsp;"doukaku-209.data")<br/>&nbsp;&nbsp;(update-file&nbsp;(make-instance&nbsp;'doukaku-209)&nbsp;in&nbsp;*standard-output*))<br/>;&gt;&gt;&gt;<br/>ID	Forename	Surname	Age<br/>0	Taro	Suzuki	19<br/>1	Hanako	Sato	18
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="highlight"><pre>(defpackage :doukaku-209 (:use :cl :split-sequence))
(in-package :doukaku-209)

(defclass file-op () ())

(defgeneric file-to-data (file-op stream))
(defgeneric swap-colum (file-op data))
(defgeneric sort-data (file-op data))
(defgeneric update-datum (file-op data))
(defgeneric format-out-data (file-op stream data))
(defgeneric update-file (file-op in-stream out-stream))

(defmethod update-file ((op file-op) (in stream) (out stream))
  (format-out-data op out
    (swap-colum op 
      (destructuring-bind (title &amp;rest data) (file-to-data op in)
        `(,title ,@(sort-data op (loop :for line :in data 
                                       :collect (update-datum op line))))))))
                     
(defclass doukaku-209 (file-op) ())

(defmethod file-to-data ((op doukaku-209) (in stream))
  (loop :for line := (read-line in nil nil) :while line
        :collect (split-sequence #\Tab line)))

(defmethod swap-colum ((op doukaku-209) (data list))
  (loop :for xx :in (copy-list data) 
        :do (rotatef (nth 1 xx) (nth 2 xx)) 
        :collect xx))

(defmethod sort-data ((op doukaku-209) (data list))
  (sort (copy-list data) #&#39;&lt; :key #&#39;first))

(defmethod format-out-data ((op doukaku-209) (out stream) (data list))
  (format out &quot;~{~{~A~^    ~}~%~}&quot; data))

(defmethod update-datum ((op doukaku-209) (row list))
  (destructuring-bind (id sur fore age) row
    (list (parse-integer id)
          sur
          fore
          (1+ (parse-integer age)))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7735/addtag/" class="addtag" id="addtag_7735">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7735/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7735/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7735"
  >-</span><span
  class="button yellow"
  id="rating_z_7735"
  >0</span><span 
  class="button green"
  id="rating_p_7735"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7735/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7736">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7736/">#7736</a>(<script language="JavaScript">print_time(new Date("2008/10/03 05:33 GMT"));</script><noscript>2008/10/03 05:33 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>項目の入れ替えが行われていない</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7736/addtag/" class="addtag" id="addtag_7736">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7736"
  >-</span><span
  class="button yellow"
  id="rating_z_7736"
  >0</span><span 
  class="button green"
  id="rating_p_7736"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7726/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7736/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7736/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7736/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7737">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7737/">#7737</a>(<script language="JavaScript">print_time(new Date("2008/10/03 05:38 GMT"));</script><noscript>2008/10/03 05:38 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  ↑(#7736)は、勘違い
すみませんでした。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7737/addtag/" class="addtag" id="addtag_7737">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7737"
  >-</span><span
  class="button yellow"
  id="rating_z_7737"
  >0</span><span 
  class="button green"
  id="rating_p_7737"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7736/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7737/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7737/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7739">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7739/">#7739</a>(<script language="JavaScript">print_time(new Date("2008/10/03 07:14 GMT"));</script><noscript>2008/10/03 07:14 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  いまいちすっきりと書けません。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">VB_IO</span> <span class="p">=</span> <span class="n">Microsoft</span><span class="p">.</span><span class="n">VisualBasic</span><span class="p">.</span><span class="n">FileIO</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
        <span class="c">//テーブルの準備</span>
        <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">headers</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;();</span>
        <span class="n">List</span><span class="p">&lt;</span><span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;&gt;</span> <span class="n">table</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;&gt;();</span>

        <span class="c">//TSVの読み込みにはMicrosoft.VisualBasic.FileIOTextFieldParserクラスが便利。CSVにも使えるよ。</span>
        <span class="c">//Microsoft.VisualBasicを参照に加えてね。</span>
        <span class="n">using</span><span class="p">(</span><span class="n">VB_IO</span><span class="p">.</span><span class="n">TextFieldParser</span> <span class="n">tfp</span> <span class="p">=</span> <span class="k">new</span> <span class="n">VB_IO</span><span class="p">.</span><span class="n">TextFieldParser</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">],</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">GetEncoding</span><span class="p">(</span><span class="s">&quot;shift-jis&quot;</span><span class="p">)))</span> <span class="k">{</span>
            <span class="n">tfp</span><span class="p">.</span><span class="n">SetDelimiters</span><span class="p">(</span><span class="s">&quot;\t&quot;</span><span class="p">);</span><span class="c">//区切り記号はタブ</span>

            <span class="c">//通常のテキストファイルと同じ感覚で扱えます。</span>
            <span class="n">headers</span><span class="p">.</span><span class="n">AddRange</span><span class="p">(</span><span class="n">tfp</span><span class="p">.</span><span class="n">ReadFields</span><span class="p">());</span>
            <span class="k">while</span><span class="p">(!</span><span class="n">tfp</span><span class="p">.</span><span class="n">EndOfData</span><span class="p">)</span> <span class="k">{</span>
                <span class="n">table</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="n">tfp</span><span class="p">.</span><span class="n">ReadFields</span><span class="p">()));</span>
            <span class="k">}</span>

            <span class="n">tfp</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
        <span class="k">}</span>

        <span class="c">//第1カラムの値でデータを昇順にソートする。</span>
        <span class="n">table</span><span class="p">.</span><span class="n">Sort</span><span class="p">((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="kt">int</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="m">0</span><span class="p">])</span> <span class="p">-</span> <span class="kt">int</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="m">0</span><span class="p">])));</span><span class="c">//何回見ても書いてもラムダ式きもい。</span>

        <span class="c">//第2カラムと第3カラムをヘッダを含めて入れ替える。</span>
        <span class="n">headers</span><span class="p">.</span><span class="n">Reverse</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span>
        <span class="k">foreach</span><span class="p">(</span><span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">row</span> <span class="k">in</span> <span class="n">table</span><span class="p">)</span><span class="k">{</span>
            <span class="n">row</span><span class="p">.</span><span class="n">Reverse</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span>
            <span class="c">//第4カラムの値にそれぞれ1を加える。</span>
            <span class="n">row</span><span class="p">[</span><span class="m">3</span><span class="p">]</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="m">3</span><span class="p">])</span> <span class="p">+</span> <span class="m">1</span><span class="p">).</span><span class="n">ToString</span><span class="p">();</span>
        <span class="k">}</span>

        <span class="c">//出力</span>
        <span class="k">foreach</span><span class="p">(</span><span class="kt">string</span> <span class="n">header</span> <span class="k">in</span> <span class="n">headers</span><span class="p">)</span><span class="k">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">header</span> <span class="p">+</span> <span class="s">&quot;\t&quot;</span><span class="p">);</span>
        <span class="k">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">();</span>
        <span class="k">foreach</span><span class="p">(</span><span class="n">List</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;</span> <span class="n">row</span> <span class="k">in</span> <span class="n">table</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">foreach</span><span class="p">(</span><span class="kt">string</span> <span class="n">cell</span> <span class="k">in</span> <span class="n">row</span><span class="p">)</span> <span class="k">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">cell</span> <span class="p">+</span> <span class="s">&quot;\t&quot;</span><span class="p">);</span>
            <span class="k">}</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">();</span>
        <span class="k">}</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7739/addtag/" class="addtag" id="addtag_7739">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7739/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7739/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7739"
  >-</span><span
  class="button yellow"
  id="rating_z_7739"
  >0</span><span 
  class="button green"
  id="rating_p_7739"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7739/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7740">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/190/" target="_top">fkmn</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7740/">#7740</a>(<script language="JavaScript">print_time(new Date("2008/10/03 08:39 GMT"));</script><noscript>2008/10/03 08:39 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>なぜか、ここまで Ruby が無かったので投稿。</p>
<p>こういうデータを扱うための、CSV というそのものズバリのクラスがあります。</p>
<p>データは標準入力から読み込み。</p>
<p># もう少しすっきりと書けそう。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20091213020717/http://doc.loveruby.net/refm/api/view/class/CSV">CSV - Rubyリファレンスマニュアル</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">&#39;csv&#39;</span>

<span class="n">rows</span> <span class="o">=</span> <span class="no">CSV</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="no">STDIN</span><span class="o">.</span><span class="n">read</span><span class="p">,</span> <span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)</span>
<span class="n">rows</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="n">rows</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">=</span> <span class="n">rows</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="n">rows</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
<span class="n">result</span> <span class="o">=</span> <span class="o">[]</span>
<span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">rows</span><span class="o">.</span><span class="n">shift</span>
<span class="n">rows</span><span class="o">.</span><span class="n">sort_by</span><span class="p">{</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span> <span class="n">r</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="p">}</span><span class="o">.</span>
  <span class="n">inject</span><span class="p">(</span><span class="n">result</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span> <span class="n">b</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">=</span> <span class="n">b</span><span class="o">[</span><span class="mi">3</span><span class="o">].</span><span class="n">to_i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="n">b</span> <span class="p">}</span><span class="o">.</span>
  <span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">r</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)</span> <span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7740/addtag/" class="addtag" id="addtag_7740">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7740/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7740/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7740"
  >-</span><span
  class="button yellow"
  id="rating_z_7740"
  >0</span><span 
  class="button green"
  id="rating_p_7740"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7740/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7741">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/428/" target="_top">Y</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7741/">#7741</a>(<script language="JavaScript">print_time(new Date("2008/10/03 09:46 GMT"));</script><noscript>2008/10/03 09:46 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>1. ファイルの終わりまで繰り返す
1.1. 1行を読む
1.2. \tでsplitして*r=vector&lt;string&gt;に格納
1.3. swapで入れ替え
1.4. rをvector&lt; vector&lt;string&gt; &gt;に格納
2.1. 並び替え
2.2. \tをはさみながらjoinして表示</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>
<span class="cp">#include &lt;algorithm&gt;</span>
<span class="cp">#include &lt;boost/algorithm/string.hpp&gt;</span>
<span class="cp">#include &lt;boost/algorithm/string/join.hpp&gt;</span>
<span class="cp">#include &lt;boost/foreach.hpp&gt;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">boost</span><span class="o">::</span><span class="n">algorithm</span><span class="p">;</span>
<span class="k">typedef</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">row</span><span class="p">;</span>

<span class="kt">bool</span> <span class="n">comp</span><span class="p">(</span><span class="n">row</span><span class="o">*</span> <span class="n">lhs</span><span class="p">,</span> <span class="n">row</span><span class="o">*</span> <span class="n">rhs</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="n">atoi</span><span class="p">((</span><span class="o">*</span><span class="n">lhs</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">c_str</span><span class="p">())</span> <span class="o">&lt;</span> <span class="n">atoi</span><span class="p">((</span><span class="o">*</span><span class="n">rhs</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">c_str</span><span class="p">());</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">row</span><span class="o">*&gt;</span> <span class="n">all</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">line</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span><span class="n">line</span><span class="p">))</span> <span class="p">{</span>
        <span class="n">row</span><span class="o">*</span> <span class="n">r</span><span class="o">=</span><span class="k">new</span> <span class="n">row</span><span class="p">();</span>
        <span class="n">split</span><span class="p">(</span><span class="o">*</span><span class="n">r</span><span class="p">,</span><span class="n">line</span><span class="p">,</span><span class="n">is_any_of</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">));</span>
        <span class="n">swap</span><span class="p">((</span><span class="o">*</span><span class="n">r</span><span class="p">)[</span><span class="mi">1</span><span class="p">],(</span><span class="o">*</span><span class="n">r</span><span class="p">)[</span><span class="mi">2</span><span class="p">]);</span>
        <span class="n">all</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">r</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">sort</span><span class="p">(</span><span class="n">all</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">all</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">comp</span><span class="p">);</span>
    <span class="n">BOOST_FOREACH</span><span class="p">(</span><span class="n">row</span><span class="o">*</span> <span class="n">r</span><span class="p">,</span> <span class="n">all</span><span class="p">)</span> <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">join</span><span class="p">(</span><span class="o">*</span><span class="n">r</span><span class="p">,</span><span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7741/addtag/" class="addtag" id="addtag_7741">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7741/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7741/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7741"
  >-</span><span
  class="button yellow"
  id="rating_z_7741"
  >0</span><span 
  class="button green"
  id="rating_p_7741"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7741/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7741/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7742">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7742/">#7742</a>(<script language="JavaScript">print_time(new Date("2008/10/03 10:24 GMT"));</script><noscript>2008/10/03 10:24 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>「第4カラムの値にそれぞれ1を加える」が抜けてますよー</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7742/addtag/" class="addtag" id="addtag_7742">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7742"
  >-</span><span
  class="button yellow"
  id="rating_z_7742"
  >0</span><span 
  class="button green"
  id="rating_p_7742"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7741/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7742/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7742/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7742/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7743">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/935/" target="_top">takeo</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7743/">#7743</a>(<script language="JavaScript">print_time(new Date("2008/10/03 18:48 GMT"));</script><noscript>2008/10/03 18:48 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>あまりScalaらしくありませんが...。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre>object Tsv {
  
  def tsv(text:String) : Unit = {
    import scala.io.Source
    val lines = Source.fromString(text).getLines
    print(lines.next)
    val data = lines.map({s:String =&gt; s.split(&quot;\t&quot;)})
    val lst = List.fromIterator(data).sort({(a:Array[String], b:Array[String]) =&gt; Integer.parseInt(a(0)) &lt; Integer.parseInt(b(0))})
    for (line &lt;- lst) {print(line(0) + &quot;\t&quot; + line(1) + &quot;\t&quot; + line(2) + &quot;\t&quot; + line(3))}
  }
  
  def main(args : Array[String]) : Unit = {
    val testData = &quot;ID\tSurname\tForename\tAge\n1\tSato\tHanako\t17\n0\tSuzuki\tTaro\t18\n&quot;
    tsv(testData)
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7743/addtag/" class="addtag" id="addtag_7743">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7743/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7743/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7743"
  >-</span><span
  class="button yellow"
  id="rating_z_7743"
  >0</span><span 
  class="button green"
  id="rating_p_7743"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7743/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7744">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/428/" target="_top">Y</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7744/">#7744</a>(<script language="JavaScript">print_time(new Date("2008/10/03 19:12 GMT"));</script><noscript>2008/10/03 19:12 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>ご指摘ありがとうございます。修正しました。

1. ファイルの終わりまで繰り返す
1.1. 1行を読む
1.2. \tでsplitして*r=vector&lt;string&gt;に格納
1.3. swapで入れ替え
1.4. 1を加える
1.5. rをvector&lt; vector&lt;string&gt; &gt;に格納
2.1. 並び替え
2.2. \tをはさみながらjoinして表示</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>
<span class="cp">#include &lt;algorithm&gt;</span>
<span class="cp">#include &lt;boost/algorithm/string.hpp&gt;</span>
<span class="cp">#include &lt;boost/algorithm/string/join.hpp&gt;</span>
<span class="cp">#include &lt;boost/foreach.hpp&gt;</span>
<span class="cp">#include &lt;boost/lexical_cast.hpp&gt;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">boost</span><span class="p">;</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">boost</span><span class="o">::</span><span class="n">algorithm</span><span class="p">;</span>
<span class="k">typedef</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">row</span><span class="p">;</span>

<span class="kt">bool</span> <span class="n">comp</span><span class="p">(</span><span class="n">row</span><span class="o">*</span> <span class="n">lhs</span><span class="p">,</span> <span class="n">row</span><span class="o">*</span> <span class="n">rhs</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="n">lexical_cast</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">((</span><span class="o">*</span><span class="n">lhs</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span> <span class="o">&lt;</span> <span class="n">lexical_cast</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">((</span><span class="o">*</span><span class="n">rhs</span><span class="p">)[</span><span class="mi">0</span><span class="p">]);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">row</span><span class="o">*&gt;</span> <span class="n">all</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">line</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span><span class="n">line</span><span class="p">))</span> <span class="p">{</span>
        <span class="n">row</span><span class="o">*</span> <span class="n">r</span><span class="o">=</span><span class="k">new</span> <span class="n">row</span><span class="p">;</span>
        <span class="n">split</span><span class="p">(</span><span class="o">*</span><span class="n">r</span><span class="p">,</span><span class="n">line</span><span class="p">,</span><span class="n">is_any_of</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">));</span>
        <span class="n">swap</span><span class="p">((</span><span class="o">*</span><span class="n">r</span><span class="p">)[</span><span class="mi">1</span><span class="p">],(</span><span class="o">*</span><span class="n">r</span><span class="p">)[</span><span class="mi">2</span><span class="p">]);</span>
        <span class="k">try</span> <span class="p">{</span> <span class="p">(</span><span class="o">*</span><span class="n">r</span><span class="p">)[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="n">lexical_cast</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">(</span><span class="n">lexical_cast</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">((</span><span class="o">*</span><span class="n">r</span><span class="p">)[</span><span class="mi">3</span><span class="p">])</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span> <span class="p">}</span>
        <span class="k">catch</span> <span class="p">(</span><span class="k">const</span> <span class="n">bad_lexical_cast</span><span class="o">&amp;</span><span class="p">)</span> <span class="p">{}</span>
        <span class="n">all</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">r</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">sort</span><span class="p">(</span><span class="n">all</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">all</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">comp</span><span class="p">);</span>
    <span class="n">BOOST_FOREACH</span><span class="p">(</span><span class="n">row</span><span class="o">*</span> <span class="n">r</span><span class="p">,</span> <span class="n">all</span><span class="p">)</span> <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">join</span><span class="p">(</span><span class="o">*</span><span class="n">r</span><span class="p">,</span><span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7744/addtag/" class="addtag" id="addtag_7744">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7744/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7744/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7744"
  >-</span><span
  class="button yellow"
  id="rating_z_7744"
  >0</span><span 
  class="button green"
  id="rating_p_7744"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7742/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7744/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7744/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7745">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/549/" target="_top">cappuccino</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7745/">#7745</a>(<script language="JavaScript">print_time(new Date("2008/10/04 00:17 GMT"));</script><noscript>2008/10/04 00:17 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ファイルから読んでファイルへ書き出します。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="k">{</span>
        <span class="n">var</span> <span class="n">header</span> <span class="p">=</span>
            <span class="n">from</span> <span class="n">line</span> <span class="k">in</span> <span class="n">File</span><span class="p">.</span><span class="n">ReadAllLines</span><span class="p">(</span><span class="s">&quot;inFile.txt&quot;</span><span class="p">).</span><span class="n">Take</span><span class="p">(</span><span class="m">1</span><span class="p">)</span>
            <span class="n">let</span> <span class="n">x</span> <span class="p">=</span> <span class="n">line</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39;\t&#39;</span><span class="p">)</span>
            <span class="n">select</span> <span class="n">x</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="n">x</span><span class="p">[</span><span class="m">2</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="n">x</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="n">x</span><span class="p">[</span><span class="m">3</span><span class="p">];</span>

        <span class="n">var</span> <span class="n">lines</span> <span class="p">=</span>
            <span class="n">from</span> <span class="n">line</span> <span class="k">in</span> <span class="n">File</span><span class="p">.</span><span class="n">ReadAllLines</span><span class="p">(</span><span class="s">&quot;inFile.txt&quot;</span><span class="p">).</span><span class="n">Skip</span><span class="p">(</span><span class="m">1</span><span class="p">)</span>
            <span class="n">let</span> <span class="n">x</span> <span class="p">=</span> <span class="n">line</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39;\t&#39;</span><span class="p">)</span>
            <span class="n">orderby</span> <span class="n">x</span><span class="p">[</span><span class="m">0</span><span class="p">]</span>
            <span class="n">select</span> <span class="n">x</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="n">x</span><span class="p">[</span><span class="m">2</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="n">x</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="p">(</span><span class="kt">int</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="m">3</span><span class="p">])</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>

        <span class="n">File</span><span class="p">.</span><span class="n">WriteAllLines</span><span class="p">(</span><span class="s">&quot;outFile.txt&quot;</span><span class="p">,</span> <span class="n">header</span><span class="p">.</span><span class="n">Concat</span><span class="p">(</span><span class="n">lines</span><span class="p">).</span><span class="n">ToArray</span><span class="p">());</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7745/addtag/" class="addtag" id="addtag_7745">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7745/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7745/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7745"
  >-</span><span
  class="button yellow"
  id="rating_z_7745"
  >0</span><span 
  class="button green"
  id="rating_p_7745"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7745/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7745/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7746">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/606/" target="_top">pooq</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7746/">#7746</a>(<script language="JavaScript">print_time(new Date("2008/10/03 21:23 GMT"));</script><noscript>2008/10/03 21:23 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/j/">
	  J
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>   ]d=.;:;._2 data            レコードを改行で、カラムをタブで区切りboxに入れる。
+--+-------+--------+---+
|ID|Surname|Forename|Age|
+--+-------+--------+---+
|1 |Sato   |Hanako  |17 |
+--+-------+--------+---+
|0 |Suzuki |Taro    |18 |
+--+-------+--------+---+

   ]h=.0{d                    1行目をヘッダに。J言語ではリストやテーブルの
+--+-------+--------+---+     インデックスは0－オリジン。
|ID|Surname|Forename|Age|
+--+-------+--------+---+

   ]d=.}.d                    2行目からをデータに。
+-+------+------+--+
|1|Sato  |Hanako|17|
+-+------+------+--+
|0|Suzuki|Taro  |18|
+-+------+------+--+

   ]d=. d /: 0{"1 d           第1カラムの値でデータを昇順にソートする。
+-+------+------+--+
|0|Suzuki|Taro  |18|
+-+------+------+--+
|1|Sato  |Hanako|17|
+-+------+------+--+

   ]h=.0 2 1 3{ h           ヘッダの第2カラムと第3カラムを入れ替える。
+--+--------+-------+---+
|ID|Forename|Surname|Age|
+--+--------+-------+---+

   ]d=. 0 2 1 3 {"1 d         データの第2カラムと第3カラムを入れ替える。
+-+------+------+--+
|0|Taro  |Suzuki|18|
+-+------+------+--+
|1|Hanako|Sato  |17|
+-+------+------+--+

   ]d=.(":&amp;&gt;:&amp;".&amp;.&gt;3{"1 d) 3}"0 1 d      第4カラムの値にそれぞれ1を加える。
+-+------+------+--+                     数値に変換して加算した後、文字列に戻す。
|0|Taro  |Suzuki|19|
+-+------+------+--+
|1|Hanako|Sato  |18|
+-+------+------+--+

   ]d=.h,d                       ヘッダとデータを連結。
+--+--------+--------+---+
|ID|Surname |Forename|Age|
+--+--------+--------+---+
|0 |Taro    |Suzuki  |19 |
+--+--------+--------+---+
|1 |Hanako  |Sato    |18 |
+--+--------+--------+---+

  ]d=.(,TAB&amp;;)/"1 d　　　　　　　カラムを区切るタブを挿入。
+--+-+--------+-+-------+-+---+
|ID| |Forename| |Surname| |Age|
+--+-+--------+-+-------+-+---+
|0 | |Taro    | |Suzuki | |19 |
+--+-+--------+-+-------+-+---+
|1 | |Hanako  | |Sato   | |18 |
+--+-+--------+-+-------+-+---+
　　　　　　　　　　　　　　　　　最後にboxから取り出して出力。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre>data =. ;: ;._2 stdin&#39;&#39;
header =. 0{data
data =. }.data
data =. data /: 0{&quot;1 data
header =. 0 2 1 3{ header
data =. 0 2 1 3{&quot;1 data
data =. (&quot;:&amp;&gt;:&amp;&quot;.&amp;.&gt;3{&quot;1 data) 3}&quot;0 1 data
data =. header , data
wd&amp;;&quot;1 (, TAB&amp;;)/&quot;1 data
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7746/addtag/" class="addtag" id="addtag_7746">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/j/">
		J
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7746/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7746/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7746"
  >-</span><span
  class="button yellow"
  id="rating_z_7746"
  >0</span><span 
  class="button green"
  id="rating_p_7746"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7746/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7747">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/840/" target="_top">leque</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7747/">#7747</a>(<script language="JavaScript">print_time(new Date("2008/10/03 23:50 GMT"));</script><noscript>2008/10/03 23:50 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>書き捨てっぽく。引き数でファイル名を取って標準出力へ。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-1</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">text</span><span class="o">.</span><span class="nv">csv</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">main</span> <span class="nv">args</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">receive</span> <span class="p">(</span><span class="nf">header</span> <span class="nv">body</span><span class="p">)</span> <span class="p">(</span><span class="nb">call-with-input-file </span><span class="p">(</span><span class="nb">cadr </span><span class="nv">args</span><span class="p">)</span>
                           <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">port</span><span class="p">)</span>
                             <span class="p">(</span><span class="nf">car+cdr</span> <span class="p">(</span><span class="nf">port-&gt;list</span> <span class="p">(</span><span class="nf">make-csv-reader</span> <span class="sc">#\tab</span><span class="p">)</span>
                                                  <span class="nv">port</span><span class="p">))))</span>
    <span class="p">(</span><span class="nf">for-each</span>
     <span class="p">(</span><span class="nf">cute</span> <span class="p">(</span><span class="nf">make-csv-writer</span> <span class="sc">#\tab</span><span class="p">)</span> <span class="p">(</span><span class="nf">current-output-port</span><span class="p">)</span> <span class="nv">&lt;&gt;</span><span class="p">)</span>
     <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">list </span><span class="p">(</span><span class="nf">first</span> <span class="nv">header</span><span class="p">)</span> <span class="p">(</span><span class="nf">third</span> <span class="nv">header</span><span class="p">)</span> <span class="p">(</span><span class="nf">second</span> <span class="nv">header</span><span class="p">)</span> <span class="p">(</span><span class="nf">fourth</span> <span class="nv">header</span><span class="p">))</span>
           <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="nf">cut</span> <span class="nv">map</span> <span class="nv">x-&gt;string</span> <span class="nv">&lt;&gt;</span><span class="p">)</span>
                <span class="p">(</span><span class="nf">sort</span>
                 <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">vs</span><span class="p">)</span>
                        <span class="p">(</span><span class="nb">list </span><span class="p">(</span><span class="nb">string-&gt;number </span><span class="p">(</span><span class="nf">first</span> <span class="nv">vs</span><span class="p">))</span>
                              <span class="p">(</span><span class="nf">third</span> <span class="nv">vs</span><span class="p">)</span>
                              <span class="p">(</span><span class="nf">second</span> <span class="nv">vs</span><span class="p">)</span>
                              <span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nb">string-&gt;number </span><span class="p">(</span><span class="nf">fourth</span> <span class="nv">vs</span><span class="p">))</span> <span class="mi">1</span><span class="p">)))</span>
                      <span class="nv">body</span><span class="p">)</span>
                 <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">v1</span> <span class="nv">v2</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt; </span><span class="p">(</span><span class="nf">first</span> <span class="nv">v1</span><span class="p">)</span> <span class="p">(</span><span class="nf">first</span> <span class="nv">v2</span><span class="p">)))))))))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7747/addtag/" class="addtag" id="addtag_7747">タグ</a>:
	
    
    <a href="/web/20091213020717/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7747/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7747/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7747"
  >-</span><span
  class="button yellow"
  id="rating_z_7747"
  >0</span><span 
  class="button green"
  id="rating_p_7747"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7747/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7750">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/646/" target="_top">silverwire</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7750/">#7750</a>(<script language="JavaScript">print_time(new Date("2008/10/04 09:23 GMT"));</script><noscript>2008/10/04 09:23 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/bat/">
	  Batchfile
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>バッチで。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45</pre></td><td class="code"><div class="highlight"><pre>@echo off
  setlocal enabledelayedexpansion
    set a=0
    set d=0
    set l=0
    set z=
    
    if &quot;%1&quot; == &quot;&quot; (echo %~n0 [FILE] &amp; exit /b 1)
    
    for /f &quot;tokens=1-4&quot; %%a in (%1) do (
      echo %%a    %%c    %%b    %%d
      goto _BREAK_
    )
    :_BREAK_
    
    for /f &quot;tokens=1&quot; %%a in (&#39;more +1 %1&#39;) do (
      if %%a gtr !a! set a=%%a
    )
    
    call :length %a% l
    for /l %%i in (1,1,%l%) do set z=!z!0
    
    for /f &quot;tokens=1-4&quot; %%a in (&#39;more +1 %1&#39;) do (
      set a=%z%%%a
      set /a d=%%d+1
      set %~n0_!a:~-%l%!=%%a    %%c    %%b    !d!
    )
    
    for /f &quot;tokens=2 delims==&quot; %%l in (&#39;set %~n0_&#39;) do echo %%l
  endlocal
goto :EOF

:length
  setlocal
    set i=0
    set t=%~1
    
    if &quot;%t%&quot; == &quot;&quot; endlocal &amp; set %2=0
    
    :_LENGTH_
      set t=%t:~1%
      set /a i+=1
    if not &quot;%t%&quot; == &quot;&quot; goto _LENGTH_
  endlocal &amp; set %2=%i%
goto :EOF
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7750/addtag/" class="addtag" id="addtag_7750">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/bat/">
		Batchfile
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7750/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7750/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7750"
  >-</span><span
  class="button yellow"
  id="rating_z_7750"
  >0</span><span 
  class="button green"
  id="rating_p_7750"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7750/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7753">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7753/">#7753</a>(<script language="JavaScript">print_time(new Date("2008/10/04 12:41 GMT"));</script><noscript>2008/10/04 12:41 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/erlang/">
	  Erlang
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>実行方法：
$ cat hoge.txt
ID	Surname	Forename	Age
1	Sato	Hanako	17
0	Suzuki	Taro	18

$ erlc doukaku7723.erl
$ erl -noshell -s doukaku7723 main hoge.txt -s init stop
ID	Forename	Surname	Age
0	Taro	Suzuki	19
1	Hanako	Sato	18</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre>-module(doukaku7723).
-export([main/1]).

main(Filename) -&gt;
    {ok, Bin} = file:read_file(Filename),
    A1 = string:tokens(binary_to_list(Bin), &quot;\r\n&quot;),
    [H | T] = lists:map(curry(flip(fun string:tokens/2), &quot;\t&quot;), A1),
    A2 = lists:map(fun swap23inc4/1, T),
    A3 = lists:sort(fun([E1|_], [E2|_]) -&gt; list_to_integer(E1) &lt; list_to_integer(E2) end, A2),
    A4 = lists:map(func_comp(fun lists:concat/1, curry(fun intersperse/2, &quot;\t&quot;)), [swap23(H) | A3]),
    A5 = lists:concat(intersperse(&quot;\r\n&quot;, A4)),
    io:format(&quot;~s~n&quot;, [A5]).

swap23([A,B,C,D | Rest]) -&gt; [A,C,B,D|Rest].
swap23inc4([A,B,C,D | Rest]) -&gt; [A,C,B,integer_to_list(1+list_to_integer(D)) | Rest].

intersperse(_, []) -&gt; [];
intersperse(_, [X]) -&gt; [X];
intersperse(Sep, [X | XS]) -&gt; [X, Sep | intersperse(Sep, XS)].
curry(F, A) -&gt; fun(B) -&gt; F(A, B) end.
flip(F) -&gt; fun(A, B) -&gt; F(B, A) end.
func_comp(F, G) -&gt; fun(X) -&gt; F(G(X)) end.
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7753/addtag/" class="addtag" id="addtag_7753">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/erlang/">
		Erlang
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7753/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7753/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7753"
  >-</span><span
  class="button yellow"
  id="rating_z_7753"
  >0</span><span 
  class="button green"
  id="rating_p_7753"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7753/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7754">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7754/">#7754</a>(<script language="JavaScript">print_time(new Date("2008/10/05 18:25 GMT"));</script><noscript>2008/10/05 18:25 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ほとんど #7724 さんと同じですね・・・でも書いちゃったので投稿。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">convert</span><span class="p">(</span><span class="nb">input</span><span class="p">,</span> <span class="n">output</span><span class="p">):</span>
    <span class="c"># read from file</span>
    <span class="n">datas</span> <span class="o">=</span> <span class="p">[</span><span class="n">line</span><span class="o">.</span><span class="n">rstrip</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\t</span><span class="s">&#39;</span><span class="p">)</span> <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="nb">open</span><span class="p">(</span><span class="nb">input</span><span class="p">)]</span>
    <span class="c"># swap column2 and column3 (with header)</span>
    <span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">datas</span><span class="p">:</span>
        <span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">data</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
    <span class="c"># remove header</span>
    <span class="n">header</span> <span class="o">=</span> <span class="n">datas</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
    <span class="c"># sort by column1</span>
    <span class="n">datas</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">data</span><span class="p">:</span> <span class="nb">int</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
    <span class="c"># add 1 to column4</span>
    <span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">datas</span><span class="p">:</span>
        <span class="n">data</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
    <span class="c"># restore header</span>
    <span class="n">datas</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">header</span><span class="p">)</span>
    <span class="c"># write to file</span>
    <span class="n">io</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">output</span><span class="p">,</span> <span class="s">&quot;w&quot;</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">datas</span><span class="p">:</span>
        <span class="n">io</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\t</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">convert</span><span class="p">(</span><span class="s">&quot;input.txt&quot;</span><span class="p">,</span> <span class="s">&quot;output.txt&quot;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7754/addtag/" class="addtag" id="addtag_7754">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7754/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7754/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7754"
  >-</span><span
  class="button yellow"
  id="rating_z_7754"
  >0</span><span 
  class="button green"
  id="rating_p_7754"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7754/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7754/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7757">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/218/" target="_top">susu</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7757/">#7757</a>(<script language="JavaScript">print_time(new Date("2008/10/05 23:50 GMT"));</script><noscript>2008/10/05 23:50 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre><span class="kr">let</span> <span class="n">succ_str</span> <span class="n">s</span> <span class="k">=</span>
  <span class="kr">try</span> <span class="k">(</span><span class="n">string_of_int</span> <span class="k">(</span><span class="n">int_of_string</span> <span class="n">s</span> <span class="k">+</span> <span class="mi">1</span><span class="k">))</span>
  <span class="kr">with</span> <span class="n">Failure</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="n">s</span>

<span class="kr">let</span> <span class="n">read</span> <span class="n">scanbuf</span> <span class="n">f</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">t</span> <span class="k">=</span> <span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span>  <span class="kr">and</span> <span class="n">nl</span> <span class="k">=</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>  <span class="kr">in</span>
  <span class="n">Scanf</span><span class="k">.</span><span class="n">bscanf</span> <span class="n">scanbuf</span> <span class="s2">&quot;%[^</span><span class="se">\t</span><span class="s2">]</span><span class="se">\t</span><span class="s2">%[^</span><span class="se">\t</span><span class="s2">]</span><span class="se">\t</span><span class="s2">%[^</span><span class="se">\t</span><span class="s2">]</span><span class="se">\t</span><span class="s2">%[^</span><span class="se">\n</span><span class="s2">]%c&quot;</span>
  <span class="k">(</span><span class="kr">fun</span> <span class="n">a</span> <span class="n">b</span> <span class="n">c</span> <span class="n">d</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="n">f</span> <span class="k">[</span><span class="n">a</span><span class="k">;</span><span class="n">t</span><span class="k">;</span><span class="n">c</span><span class="k">;</span><span class="n">t</span><span class="k">;</span><span class="n">b</span><span class="k">;</span><span class="n">t</span><span class="k">;</span> <span class="n">succ_str</span> <span class="n">d</span><span class="k">;</span> <span class="n">nl</span><span class="k">])</span>  

<span class="kr">let</span> <span class="n">f</span> <span class="n">ch</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">accu</span> <span class="k">=</span> <span class="n">ref</span> <span class="k">[]</span> <span class="kr">in</span>
  <span class="kr">try</span>
    <span class="n">read</span> <span class="n">ch</span> <span class="k">(</span><span class="n">List</span><span class="k">.</span><span class="n">iter</span> <span class="n">print_string</span><span class="k">);</span>
    <span class="kr">while</span> <span class="kr">true</span> <span class="kr">do</span>
      <span class="k">(</span><span class="n">read</span> <span class="n">ch</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">l</span> <span class="k">-&gt;</span> <span class="n">accu</span> <span class="k">:=</span> <span class="n">l</span><span class="k">::</span><span class="o">!</span><span class="n">accu</span><span class="k">))</span>
    <span class="kr">done</span><span class="k">;</span>
  <span class="kr">with</span> <span class="n">End_of_file</span> <span class="k">-&gt;</span>
    <span class="kr">let</span> <span class="n">l</span> <span class="k">=</span> <span class="n">List</span><span class="k">.</span><span class="n">stable_sort</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">a</span> <span class="n">b</span> <span class="k">-&gt;</span>
      <span class="n">compare</span> <span class="k">(</span><span class="n">List</span><span class="k">.</span><span class="n">hd</span> <span class="n">a</span><span class="k">)</span> <span class="k">(</span><span class="n">List</span><span class="k">.</span><span class="n">hd</span> <span class="n">b</span><span class="k">))</span> <span class="o">!</span><span class="n">accu</span>
    <span class="kr">in</span> <span class="n">List</span><span class="k">.</span><span class="n">iter</span> <span class="k">(</span><span class="n">List</span><span class="k">.</span><span class="n">iter</span> <span class="n">print_string</span><span class="k">)</span> <span class="n">l</span><span class="k">;;</span>
<span class="c">(*  </span>
<span class="c">let s = &quot;\</span>
<span class="c">ID\tSurname\tForename\tAge</span>
<span class="c">1\tSato\tHanako\t17</span>
<span class="c">0\tSuzuki\tTaro\t18</span>
<span class="c">&quot;</span>
<span class="c">let (path,o) = </span>
<span class="c">  Filename.open_temp_file &quot;doukaku209_&quot; &quot;.txt&quot;;;</span>
<span class="c">output_string o s;  close_out o;;</span>

<span class="c">let sbuf = Scanf.Scanning.from_file path in (f sbuf);;</span>
<span class="c">*)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7757/addtag/" class="addtag" id="addtag_7757">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7757/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7757/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7757"
  >-</span><span
  class="button yellow"
  id="rating_z_7757"
  >0</span><span 
  class="button green"
  id="rating_p_7757"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7757/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7758">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7758/">#7758</a>(<script language="JavaScript">print_time(new Date("2008/10/06 01:56 GMT"));</script><noscript>2008/10/06 01:56 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  最近Rubyを始めました。
どうでしょうか？


	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="n">lines</span> <span class="o">=</span> <span class="no">ARGF</span><span class="o">.</span><span class="n">readlines</span>

<span class="n">csvs</span> <span class="o">=</span> <span class="n">lines</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="n">line</span><span class="o">|</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)}</span>
<span class="n">head</span> <span class="o">=</span> <span class="n">csvs</span><span class="o">.</span><span class="n">shift</span>
<span class="nb">print</span> <span class="o">[</span><span class="n">head</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="n">head</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="n">head</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="n">head</span><span class="o">[</span><span class="mi">3</span><span class="o">]].</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)</span>

<span class="n">csvs</span><span class="o">.</span><span class="n">sort</span> <span class="p">{</span><span class="o">|</span><span class="n">csv1</span><span class="p">,</span> <span class="n">csv2</span><span class="o">|</span> <span class="n">csv1</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;=&gt;</span> <span class="n">csv2</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">csv</span><span class="o">|</span>
  <span class="nb">puts</span> <span class="o">[</span><span class="n">csv</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="n">csv</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="n">csv</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="n">csv</span><span class="o">[</span><span class="mi">3</span><span class="o">].</span><span class="n">to_i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7758/addtag/" class="addtag" id="addtag_7758">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7758/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7758/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7758"
  >-</span><span
  class="button yellow"
  id="rating_z_7758"
  >0</span><span 
  class="button green"
  id="rating_p_7758"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7758/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7758/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7759">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/913/" target="_top">nattou_curry</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7759/">#7759</a>(<script language="JavaScript">print_time(new Date("2008/10/06 09:22 GMT"));</script><noscript>2008/10/06 09:22 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>import java.io.*;
import java.util.*;

class Table {
	
	public static void main( String[] args ) {
		Table table = new Table()
			.input( "in.tsv" )
			.sort( 0 )
			.replace( 1, 2 )
			.increment( 3 )
			.output( "out.tsv" );
	}
	
	Cell[][] cells;
	
	class Cell {
		String value;
		Cell( String value ) {
			this.value = value;
		}
		public String toString() { return value; }
		public int compareTo( Cell that ) { return this.value.compareTo( that.value ); }
		public void increment() { value = ( Integer.parseInt( value ) + 1 ) + ""; }
	}
	
	class Sorter implements Comparable {
		Cell key;
		Cell[] row;
		Sorter( Cell key, Cell[] row ) {
			this.key = key;
			this.row = row;
		}
		public int compareTo( Object that ) {
			return this.key.compareTo( ( (Sorter) that ).key );
		}
	}
	
	Table input( String file ) {
		try {
			BufferedReader in = new BufferedReader( new FileReader( file ) );
			List&lt;Cell[]&gt; list = new ArrayList&lt;Cell[]&gt;();
			String line;
			while ( ( line = in.readLine() ) != null ) {
				list.add( makeCells( line.split( "\t" ) ) );
			}
			in.close();
			cells = list.toArray( new Cell[0][] );
			return this;
		} catch ( IOException e ) { throw new RuntimeException ( e ); }
	}
	
	Table sort( int ic ) {
		Cell[] column = column( ic );
		Sorter[] sorters = new Sorter[rows()-1];
		for ( int ir = 1; ir &lt; rows(); ++ir ) {
			sorters[ir-1] = new Sorter( column[ir], row( ir ) );
		}
		Arrays.sort( sorters );
		for ( int ir = 1; ir &lt; rows(); ++ir ) {
			cells[ir] = sorters[ir-1].row;
		}
		return this;
	}
	
	Table replace( int ic1, int ic2 ) {
		Cell[] column1 = column( ic1 );
		Cell[] column2 = column( ic2 );
		set( ic1, column2 );
		set( ic2, column1 );
		return this;
	}
	
	Table increment( int ic ) {
		Cell[] column = column( ic );
		for ( int ir = 1; ir &lt; rows(); ++ir ) {
			column[ir].increment();
		}
		return this;
	}
	
	Table output( String file ) {
		try {
			PrintWriter out = new PrintWriter( new BufferedWriter( new FileWriter( file ) ) );
			out.print( toString() );
			out.flush();
			out.close();
			return this;
		} catch ( IOException e ) { throw new RuntimeException( e ); }
	}

	Cell[] makeCells( String[] array ) {
		Cell[] cells = new Cell[array.length];
		for ( int i = 0; i &lt; array.length; ++i ) {
			cells[i] = new Cell( array[i] );
		}
		return cells;
	}
	
	void set( int ic, Cell[] column ) {
		for ( int ir = 0; ir &lt; rows(); ++ir ) {
			cells[ir][ic] = column[ir];
		}
	}
	
	Cell[] row( int ir ) {
		Cell[] bak = new Cell[columns()];
		for ( int ic = 0; ic &lt; columns(); ++ic ) {
			bak[ic] = cells[ir][ic];
		}
		return bak;
	}
	
	Cell[] column( int ic ) {
		Cell[] bak = new Cell[rows()];
		for ( int ir = 0; ir &lt; rows(); ++ir ) {
			bak[ir] = cells[ir][ic];
		}
		return bak;
	}
	
	int rows() { return cells.length; }
	
	int columns() { return cells[0].length; }
	
	public String toString() {
		StringBuilder bak = new StringBuilder();
		for ( int ir = 0; ir &lt; cells.length; ++ir ) {
			for ( int ic = 0; ic &lt; cells[0].length; ++ic ) {
				bak.append( ic &gt; 0 ? "\t"
						: "" ).append( cells[ir][ic].toString() );
			}
			bak.append( "\r\n" );
		}
		return bak.toString();
	}
}</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7759/addtag/" class="addtag" id="addtag_7759">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7759"
  >-</span><span
  class="button yellow"
  id="rating_z_7759"
  >0</span><span 
  class="button green"
  id="rating_p_7759"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7759/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7760">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/591/" target="_top">99yen</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7760/">#7760</a>(<script language="JavaScript">print_time(new Date("2008/10/07 05:56 GMT"));</script><noscript>2008/10/07 05:56 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/nadesico/">
	  なでしこ
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>なでしこで、手順に忠実に書いてみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="highlight"><pre>input=&quot;ID    Surname    Forename    Age
1    Sato    Hanako    17
0    Suzuki    Taro    18&quot;

data=inputをTSV取得
# ヘッダを切り取る
head=dataの0を配列切り取る

# 第1カラムでソート
dataの0を表数値ソート
# 第2カラムと第3カラムを入れ替え
data=dataの1と2を表列入替
# ヘッダも入れ替え
head=headの1と2を配列入替
# 第4カラムに1を加算
Iで0から(dataの配列要素数-1)まで繰り返す
    data[I][3]=data[I][3]+1
# ヘッダとデータを結合
output=(headの表行列交換)にdataを表追加
# 結果を表示
outputを表TSV変換して表示

●配列入替(AのXとYを)
    AのXにA[Y]を配列挿入
    AのY+1を配列削除
    Aで戻る

●表列入替(AのXとYを)
    AのYを表列取得
    AのXにそれを表列挿入
    それのY+1を表列削除
    それで戻る

●表追加(AにBを)
    Aの(Aの配列要素数)にBを配列一括挿入
    Aで戻る
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7760/addtag/" class="addtag" id="addtag_7760">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/nadesico/">
		なでしこ
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7760/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7760/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7760"
  >-</span><span
  class="button yellow"
  id="rating_z_7760"
  >0</span><span 
  class="button green"
  id="rating_p_7760"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7760/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7761">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7761/">#7761</a>(<script language="JavaScript">print_time(new Date("2008/10/07 10:14 GMT"));</script><noscript>2008/10/07 10:14 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  data は複数形なので datas はちょっと変かも。。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7761/addtag/" class="addtag" id="addtag_7761">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7761"
  >-</span><span
  class="button yellow"
  id="rating_z_7761"
  >0</span><span 
  class="button green"
  id="rating_p_7761"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7754/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7761/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7761/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7768">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/893/" target="_top">ckbx</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7768/">#7768</a>(<script language="JavaScript">print_time(new Date("2008/10/10 04:49 GMT"));</script><noscript>2008/10/10 04:49 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>一行Pythonで190 bytes.
標準入力から標準出力へ。

横に広がって見づらいので
適当に改行を入れました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">sys</span><span class="p">;</span><span class="n">T</span><span class="p">,</span><span class="n">N</span><span class="o">=</span><span class="s">&#39;</span><span class="se">\t\n</span><span class="s">&#39;</span><span class="p">;</span><span class="n">I</span><span class="o">=</span><span class="nb">int</span><span class="p">;</span><span class="n">R</span><span class="o">=</span><span class="p">[</span><span class="n">l</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">T</span><span class="p">)</span><span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">stdin</span><span class="p">];</span><span class="n">A</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">C</span><span class="p">,</span><span class="n">D</span><span class="o">=</span><span class="n">R</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
<span class="k">print</span> <span class="n">N</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="n">T</span><span class="o">.</span><span class="n">join</span><span class="p">,[(</span><span class="n">A</span><span class="p">,</span><span class="n">C</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">D</span><span class="p">)]</span><span class="o">+</span><span class="p">[(</span><span class="n">a</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="nb">str</span><span class="p">(</span><span class="n">I</span><span class="p">(</span><span class="n">d</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span><span class="k">for</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">d</span> <span class="ow">in</span> <span class="n">sorted</span><span class="p">(</span>
<span class="n">R</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span><span class="bp">None</span><span class="p">,</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="n">I</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]))])),</span><span class="n">N</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7768/addtag/" class="addtag" id="addtag_7768">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7768/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7768/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7768"
  >-</span><span
  class="button yellow"
  id="rating_z_7768"
  >0</span><span 
  class="button green"
  id="rating_p_7768"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7768/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7768/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7796">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/793/" target="_top">genzou</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7796/">#7796</a>(<script language="JavaScript">print_time(new Date("2008/10/14 08:39 GMT"));</script><noscript>2008/10/14 08:39 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre>def text = new File(&quot;test.csv&quot;).text

def lines = text.split(&quot;\n&quot;)

def titles = lines[0].split(&quot;\t&quot;)
def records = lines[1..-1].collect{
    it.split(&quot;\t&quot;)
}

// 第1カラムの値でデータを昇順にソートする。
records.sort{ it[0] }

// 第2カラムと第3カラムをヘッダを含めて入れ替える。
def change( row ){
    def tmp = row[2]
    row[2] = row[1]
    row[1] = tmp
}
change(titles)
records.each{
    change(it)    
}

// 第4カラムの値にそれぞれ1を加える。
records.each{ r -&gt;
    r[3] = (r[3].toInteger() + 1).toString()
}

([titles] + records).each{
    println it.join(&quot;\t&quot;)
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7796/addtag/" class="addtag" id="addtag_7796">タグ</a>:
	
    
    <a href="/web/20091213020717/http://ja.doukaku.org/tag/groovy/">groovy</a>
    
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7796/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7796/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7796"
  >-</span><span
  class="button yellow"
  id="rating_z_7796"
  >0</span><span 
  class="button green"
  id="rating_p_7796"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7796/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7799">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7799/">#7799</a>(<script language="JavaScript">print_time(new Date("2008/10/14 23:01 GMT"));</script><noscript>2008/10/14 23:01 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>genzouさんに触発されて書いてみました。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20091213020717/http://d.hatena.ne.jp/uehaj/20081015/1224043055">Grな日々</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre>boolean firstLine = true
def lines = []
new File(&quot;test.csv&quot;).eachLine {
    e = it.split(&quot;\t&quot;)
    if (firstLine) {
        println([e[0],e[2],e[1],e[3]].join(&quot;\t&quot;))
        firstLine = false
    }
    else {
        lines.push(e)
    }
}

lines.sort{it[0].toInteger()}.each{
    println([it[0],it[2],it[1],it[3].toInteger() +1].join(&quot;\t&quot;))
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7799/addtag/" class="addtag" id="addtag_7799">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7799/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7799/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7799"
  >-</span><span
  class="button yellow"
  id="rating_z_7799"
  >0</span><span 
  class="button green"
  id="rating_p_7799"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7799/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7800">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/918/" target="_top">ksky</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7800/">#7800</a>(<script language="JavaScript">print_time(new Date("2008/10/15 04:55 GMT"));</script><noscript>2008/10/15 04:55 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>私も書いてみました。わかりやすさ重視で書いたつもりです。。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre>lines = new File(&#39;test.csv&#39;).readLines()
rows = lines.collect { it.split(&#39;\t&#39;) }
head = rows.remove(0)
rows.each { row -&gt;
  [0, 3].each { row[it] = row[it].toInteger() }
}

rows.sort { it[0] }
[head, *rows].each { tmp = it[1]; it[1] = it[2]; it[2] = tmp }
rows.each { it[3]++ }

[head, *rows].each { println it.join(&#39;\t&#39;) }
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7800/addtag/" class="addtag" id="addtag_7800">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7800/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7800/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7800"
  >-</span><span
  class="button yellow"
  id="rating_z_7800"
  >0</span><span 
  class="button green"
  id="rating_p_7800"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7800/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7800/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7801">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/918/" target="_top">ksky</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7801/">#7801</a>(<script language="JavaScript">print_time(new Date("2008/10/15 05:05 GMT"));</script><noscript>2008/10/15 05:05 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>私も書いてみました。わかりやすさ重視で書いたつもりです。。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre>lines = new File(&#39;test.csv&#39;).readLines()
rows = lines.collect { it.split(&#39;\t&#39;) }
head = rows.remove(0)
rows.each { row -&gt;
  [0, 3].each { row[it] = row[it].toInteger() }
}

rows.sort { it[0] }
[head, *rows].each { tmp = it[1]; it[1] = it[2]; it[2] = tmp }
rows.each { it[3]++ }

[head, *rows].each { println it.join(&#39;\t&#39;) }
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7801/addtag/" class="addtag" id="addtag_7801">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7801/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7801/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7801"
  >-</span><span
  class="button yellow"
  id="rating_z_7801"
  >0</span><span 
  class="button green"
  id="rating_p_7801"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7801/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7802">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/918/" target="_top">ksky</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7802/">#7802</a>(<script language="JavaScript">print_time(new Date("2008/10/15 05:08 GMT"));</script><noscript>2008/10/15 05:08 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>間違えてOtherで投稿しちゃいました。削除はできないんですね。。Groovyに投稿し直します。ごめんなさい。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7802/addtag/" class="addtag" id="addtag_7802">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7802"
  >-</span><span
  class="button yellow"
  id="rating_z_7802"
  >0</span><span 
  class="button green"
  id="rating_p_7802"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7800/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7802/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7802/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7804">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/771/" target="_top">M.Suzuki</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7804/">#7804</a>(<script language="JavaScript">print_time(new Date("2008/10/16 06:35 GMT"));</script><noscript>2008/10/16 06:35 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>あまり美しくないですが、基本に忠実に。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Environment</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>

<span class="nv">q1</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">x</span><span class="o">:</span><span class="nv">sortBy</span> <span class="p">(</span><span class="o">\</span><span class="nv">a</span> <span class="nv">b</span> <span class="o">-&gt;</span> <span class="nv">compare</span> <span class="p">(</span><span class="nv">toNum</span> <span class="nv">a</span><span class="p">)</span> <span class="p">(</span><span class="nv">toNum</span> <span class="nv">b</span><span class="p">))</span> <span class="nv">xs</span>
    <span class="kr">where</span>
        <span class="nv">toNum</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">read</span> <span class="p">(</span><span class="nv">head</span> <span class="nv">n</span><span class="p">)</span><span class="o">::</span><span class="n">Int</span>
<span class="nv">q2</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="o">\</span><span class="p">[</span><span class="nv">i</span><span class="p">,</span><span class="nv">l</span><span class="p">,</span><span class="nv">f</span><span class="p">,</span><span class="nv">a</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="nv">i</span><span class="p">,</span><span class="nv">f</span><span class="p">,</span><span class="nv">l</span><span class="p">,</span><span class="nv">a</span><span class="p">])</span>
<span class="nv">q3</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">x</span><span class="o">:</span><span class="nv">map</span> <span class="p">(</span><span class="o">\</span><span class="p">[</span><span class="nv">i</span><span class="p">,</span><span class="nv">l</span><span class="p">,</span><span class="nv">f</span><span class="p">,</span><span class="nv">a</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="nv">i</span><span class="p">,</span><span class="nv">l</span><span class="p">,</span><span class="nv">f</span><span class="p">,</span><span class="nv">show</span> <span class="o">$</span> <span class="mi">1</span><span class="o">+</span><span class="nv">read</span> <span class="nv">a</span><span class="p">])</span> <span class="nv">xs</span>

<span class="nv">main</span> <span class="o">=</span> <span class="kr">do</span>
    <span class="nv">args</span> <span class="o">&lt;-</span> <span class="nv">getArgs</span>
    <span class="nv">contents</span> <span class="o">&lt;-</span> <span class="kr">if</span> <span class="p">(</span><span class="nv">not</span><span class="o">.</span><span class="nv">null</span><span class="p">)</span> <span class="nv">args</span>
        <span class="kr">then</span> <span class="nv">readFile</span> <span class="o">$</span> <span class="nv">head</span> <span class="nv">args</span>
        <span class="kr">else</span> <span class="nv">getContents</span>
    <span class="kr">let</span> <span class="nv">rec</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">words</span> <span class="o">$</span> <span class="nv">lines</span> <span class="nv">contents</span>
    <span class="nv">putStrLn</span> <span class="o">$</span> <span class="nv">shows</span> <span class="o">$</span> <span class="nv">q1</span> <span class="nv">rec</span>
    <span class="nv">putStrLn</span> <span class="o">$</span> <span class="nv">shows</span> <span class="o">$</span> <span class="nv">q2</span> <span class="nv">rec</span>
    <span class="nv">putStrLn</span> <span class="o">$</span> <span class="nv">shows</span> <span class="o">$</span> <span class="nv">q3</span> <span class="nv">rec</span>
    <span class="kr">where</span>
        <span class="nv">shows</span> <span class="nv">list</span> <span class="o">=</span> <span class="nv">unlines</span> <span class="o">$</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">concat</span><span class="o">.</span><span class="nv">intersperse</span> <span class="s">&quot;\t&quot;</span><span class="p">)</span> <span class="nv">list</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7804/addtag/" class="addtag" id="addtag_7804">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7804/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7804/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7804"
  >-</span><span
  class="button yellow"
  id="rating_z_7804"
  >0</span><span 
  class="button green"
  id="rating_p_7804"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7804/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7816">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/343/" target="_top">matyr</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7816/">#7816</a>(<script language="JavaScript">print_time(new Date("2008/10/22 16:58 GMT"));</script><noscript>2008/10/22 16:58 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  ワンライナ
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre>groovy -e &#39;{h,...r-&gt;[h,*r.each{it[0,4]*.toInteger()}.each{++it[3]}.sort{it[0]}]*.join(&quot;\t&quot;).any&quot;&quot;.&amp;println}(*&quot;$System.in&quot;.trim().split(/\n/)*.split(/\t/)*.getAt([0,2,1,3]))&#39;&lt;data.csv
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7816/addtag/" class="addtag" id="addtag_7816">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7816/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7816/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7816"
  >-</span><span
  class="button yellow"
  id="rating_z_7816"
  >0</span><span 
  class="button green"
  id="rating_p_7816"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091213020717/http://ja.doukaku.org/comment/7816/">
    1
    reply
  </a>

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7816/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7817">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/343/" target="_top">matyr</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7817/">#7817</a>(<script language="JavaScript">print_time(new Date("2008/10/22 17:43 GMT"));</script><noscript>2008/10/22 17:43 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>&lt; it[0,4]*.toInteger()
---
&gt; a-&gt;[0,3].each{a[it]=0.decode(a[it])}

全然違った。「it[0,3]=it[0,3]*.toInteger()」だとうまくいかなくて残念。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7817/addtag/" class="addtag" id="addtag_7817">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7817"
  >-</span><span
  class="button yellow"
  id="rating_z_7817"
  >0</span><span 
  class="button green"
  id="rating_p_7817"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7816/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7817/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7817/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7873">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/926/" target="_top">nobusuke_neko</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7873/">#7873</a>(<script language="JavaScript">print_time(new Date("2008/10/27 14:08 GMT"));</script><noscript>2008/10/27 14:08 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  C:\&gt;type&nbsp;emp.txt<br/>ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Surname&nbsp;Forename&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Age<br/>1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sato&nbsp;&nbsp;&nbsp;&nbsp;Hanako&nbsp;&nbsp;17<br/>0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Suzuki&nbsp;&nbsp;Taro&nbsp;&nbsp;&nbsp;&nbsp;18<br/><br/>C:\&gt;cscript&nbsp;/nologo&nbsp;csv.js&nbsp;&lt;&nbsp;emp.txt<br/>ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Forename&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Surname&nbsp;Age<br/>0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Taro&nbsp;&nbsp;&nbsp;&nbsp;Suzuki&nbsp;&nbsp;19<br/>1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hanako&nbsp;&nbsp;Sato&nbsp;&nbsp;&nbsp;&nbsp;18<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">each</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nx">iterator</span><span class="p">){</span>
  <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="nx">length</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">length</span><span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="nx">iterator</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">,</span><span class="nx">i</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">var</span> <span class="nx">table</span> <span class="o">=</span> <span class="p">[];</span>
<span class="nx">WScript</span><span class="p">.</span><span class="nx">StdIn</span><span class="p">.</span><span class="nx">ReadAll</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;\r\n&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nx">line</span><span class="p">){</span>
  <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">line</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^\s*$/</span><span class="p">))</span> <span class="nx">table</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">line</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;\t&#39;</span><span class="p">));</span>
<span class="p">});</span>
<span class="k">var</span> <span class="nx">header</span> <span class="o">=</span> <span class="nx">table</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span>

<span class="c">//第1カラムの値でデータを昇順にソートする</span>
<span class="nx">table</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nx">a</span><span class="o">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];});</span>
<span class="c">//第4カラムの値にそれぞれ1を加える</span>
<span class="nx">table</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nx">row</span><span class="p">){</span><span class="nx">row</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">row</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="mi">1</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="p">});</span>
<span class="c">//第2カラムと第3カラムをヘッダを含めて入れ替える</span>
<span class="nx">table</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">header</span><span class="p">);</span>
<span class="nx">table</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nx">row</span><span class="p">){</span>
  <span class="nx">WScript</span><span class="p">.</span><span class="nx">StdOut</span><span class="p">.</span><span class="nx">WriteLine</span><span class="p">([</span><span class="nx">row</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">,</span><span class="nx">row</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">,</span><span class="nx">row</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">,</span><span class="nx">row</span><span class="p">[</span><span class="mi">3</span><span class="p">]].</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;\t&#39;</span><span class="p">));</span>
<span class="p">});</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7873/addtag/" class="addtag" id="addtag_7873">タグ</a>:
	
    
    <a href="/web/20091213020717/http://ja.doukaku.org/tag/JScript/">JScript</a>
    
    <a href="/web/20091213020717/http://ja.doukaku.org/tag/WSH/">WSH</a>
    
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7873/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7873/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7873"
  >-</span><span
  class="button yellow"
  id="rating_z_7873"
  >0</span><span 
  class="button green"
  id="rating_p_7873"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7873/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7932">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/944/" target="_top">tonio_antonio</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7932/">#7932</a>(<script language="JavaScript">print_time(new Date("2008/11/03 00:22 GMT"));</script><noscript>2008/11/03 00:22 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>はじめまして。最初awk向きなのになぜ未投稿？と思ったのですが、ソートが必要なのですね。
教科書どおりのqsortですが、整数値をソートする、ということで17行目で　+0　してから比較してみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></td><td class="code"><div class="highlight"><pre>&gt;type data.txt
ID    Surname    Forename    Age
0    Suzuki    Taro    19
1    Sato    Hanako    18
11    Kato    Junko    40
3    Yamammoto    Shingo    46

&gt;type  tab_sort.awk
BEGIN{FS=&quot;\t&quot;;OFS=&quot;\t&quot;}

NR == 1{ print $1,$3,$2,$4 }
NR &gt; 1{t=$2;$2=$3;$3=t;$4=$4+1;A[NR]=$0;}

END{qsort(A,2,NR)
     for(i=2;i&lt;=NR;i++) print A[i]
    }

function qsort(A,left,right){
   if(left&gt;=right) return
   swap(A,left,left+int((right-left+1)*rand()))
   last=left
   for(i=left+1;i&lt;=right;i++)
       #if(A[i] &lt; A[left]) swap(A,++last,i)
       if(A[i] + 0 &lt; A[left] + 0) swap(A,++last,i)
   swap(A,left,last)
   qsort(A,left,last-1)
   qsort(A,last+1,right)
}

function swap(A,i,j){
   t=A[i];A[i]=A[j];A[j]=t
}

&gt;mawk32 -f tab_sort.awk data.txt &gt; kekka.txt
&gt;type kekka.txt
ID    Forename    Surname    Age
0    Taro    Suzuki    20
1    Hanako    Sato    19
3    Shingo    Yamammoto    47
11    Junko    Kato    41
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7932/addtag/" class="addtag" id="addtag_7932">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7932/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7932/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7932"
  >-</span><span
  class="button yellow"
  id="rating_z_7932"
  >0</span><span 
  class="button green"
  id="rating_p_7932"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7932/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7933">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/944/" target="_top">tonio_antonio</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7933/">#7933</a>(<script language="JavaScript">print_time(new Date("2008/11/03 06:31 GMT"));</script><noscript>2008/11/03 06:31 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/awk/">
	  awk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>はじめまして。最初awk向きなのになぜ未投稿？と思ったのですが、ソートが必要なのですね。
教科書どおりのqsortですが、整数値をソートする、ということで17行目で　+0　してから比較してみました。
#最初の投稿時、言語を指定しそこない、otherに投稿してしまいました。申し訳ありません。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></td><td class="code"><div class="highlight"><pre>&gt;type data.txt
ID    Surname    Forename    Age
0    Suzuki    Taro    19
1    Sato    Hanako    18
11    Kato    Junko    40
3    Yamammoto    Shingo    46

&gt;type  tab_sort.awk
BEGIN{FS=&quot;\t&quot;;OFS=&quot;\t&quot;}

NR == 1{ print $1,$3,$2,$4 }
NR &gt; 1{t=$2;$2=$3;$3=t;$4=$4+1;A[NR]=$0;}

END{qsort(A,2,NR)
     for(i=2;i&lt;=NR;i++) print A[i]
    }

function qsort(A,left,right){
   if(left&gt;=right) return
   swap(A,left,left+int((right-left+1)*rand()))
   last=left
   for(i=left+1;i&lt;=right;i++)
       #if(A[i] &lt; A[left]) swap(A,++last,i)
       if(A[i] + 0 &lt; A[left] + 0) swap(A,++last,i)
   swap(A,left,last)
   qsort(A,left,last-1)
   qsort(A,last+1,right)
}

function swap(A,i,j){
   t=A[i];A[i]=A[j];A[j]=t
}

&gt;mawk32 -f tab_sort.awk data.txt &gt; kekka.txt
&gt;type kekka.txt
ID    Forename    Surname    Age
0    Taro    Suzuki    20
1    Hanako    Sato    19
3    Shingo    Yamammoto    47
11    Junko    Kato    41
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/7933/addtag/" class="addtag" id="addtag_7933">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/awk/">
		awk
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7933/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/7933/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7933"
  >-</span><span
  class="button yellow"
  id="rating_z_7933"
  >0</span><span 
  class="button green"
  id="rating_p_7933"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/7933/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8055">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8055/">#8055</a>(<script language="JavaScript">print_time(new Date("2008/11/19 20:05 GMT"));</script><noscript>2008/11/19 20:05 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>どうですかね。Rubyっぽいですか？</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre><span class="n">lst</span> <span class="o">=</span> <span class="o">[]</span>

<span class="c1">#全部リスト(lst)に取り込んで</span>
<span class="k">while</span> <span class="nb">gets</span>
  <span class="n">lst</span> <span class="o">&lt;&lt;</span> <span class="nb">chomp</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)</span>
<span class="k">end</span>

<span class="c1">#Array#mapで第２カラムと第３カラムを入れ替えて</span>
<span class="n">lst</span><span class="o">.</span><span class="n">map!</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span><span class="n">x</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="n">x</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="n">x</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="n">x</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">=</span> 
            <span class="n">x</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="n">x</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="n">x</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="n">x</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span><span class="p">}</span>

<span class="c1">#見出しを出力して</span>
<span class="nb">puts</span> <span class="n">lst</span><span class="o">.</span><span class="n">shift</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)</span>

<span class="c1">#IDを数値にして、Ageに一つ加えて、IDで並び替えて出力</span>
<span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">lst</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|[</span><span class="n">x</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">to_i</span><span class="p">,</span> <span class="n">x</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="n">x</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="n">x</span><span class="o">[</span><span class="mi">3</span><span class="o">].</span><span class="n">next</span><span class="o">]</span><span class="p">}</span><span class="o">.</span><span class="n">sort</span>
  <span class="nb">puts</span> <span class="n">i</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)</span>
<span class="k">end</span>

<span class="cp">__END__</span>
<span class="cp">ID    Surname    Forename    Age</span>
<span class="cp">1    Sato    Hanako    17</span>
<span class="cp">0    Suzuki    Taro    18</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8055/addtag/" class="addtag" id="addtag_8055">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8055/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8055/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8055"
  >-</span><span
  class="button yellow"
  id="rating_z_8055"
  >0</span><span 
  class="button green"
  id="rating_p_8055"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/8055/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8056">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/437/" target="_top">mamamoto</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8056/">#8056</a>(<script language="JavaScript">print_time(new Date("2008/11/19 20:37 GMT"));</script><noscript>2008/11/19 20:37 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>5行目はprintでなくputsじゃないですか。
あと7行目、sortでなくsort_by{|csv| csv[0]}のがよくないですか。
(でもsort_byって昔なかったんですっけ)</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8056/addtag/" class="addtag" id="addtag_8056">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8056"
  >-</span><span
  class="button yellow"
  id="rating_z_8056"
  >0</span><span 
  class="button green"
  id="rating_p_8056"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7758/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/8056/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/8056/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8057">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/437/" target="_top">mamamoto</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8057/">#8057</a>(<script language="JavaScript">print_time(new Date("2008/11/19 21:09 GMT"));</script><noscript>2008/11/19 21:09 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>俺なりのRubyっぽく、かつ各操作の直交性を意識して書いてみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="n">str</span> <span class="o">=</span> <span class="s2">&quot;ID</span><span class="se">\t</span><span class="s2">Surname</span><span class="se">\t</span><span class="s2">Forename</span><span class="se">\t</span><span class="s2">Age</span>
<span class="s2">1</span><span class="se">\t</span><span class="s2">Sato</span><span class="se">\t</span><span class="s2">Hanako</span><span class="se">\t</span><span class="s2">17</span>
<span class="s2">0</span><span class="se">\t</span><span class="s2">Suzuki</span><span class="se">\t</span><span class="s2">Taro</span><span class="se">\t</span><span class="s2">18&quot;</span>

<span class="c1">#取り込み</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/\n/</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">line</span><span class="o">|</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)}</span>

<span class="c1">#第2カラムと第3カラムをヘッダを含めて入れ替える。</span>
<span class="n">data</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">t</span> <span class="o">=</span> <span class="n">record</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">;</span> <span class="n">record</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">record</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span><span class="p">;</span> <span class="n">record</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">=</span> <span class="n">t</span><span class="p">}</span>

<span class="n">head</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">shift</span>

<span class="c1">#第1カラムの値でデータを昇順にソートする。</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">sort_by</span><span class="p">{</span><span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">record</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">}</span>

<span class="c1">#第4カラムの値にそれぞれ1を加える。</span>
<span class="n">data</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="n">record</span><span class="o">[</span><span class="mi">3</span><span class="o">].</span><span class="n">succ!</span><span class="p">}</span>

<span class="c1">#表示</span>
<span class="p">(</span><span class="o">[</span><span class="n">head</span><span class="o">]+</span><span class="n">data</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">record</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">record</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="p">)}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8057/addtag/" class="addtag" id="addtag_8057">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8057/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8057/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8057"
  >-</span><span
  class="button yellow"
  id="rating_z_8057"
  >0</span><span 
  class="button green"
  id="rating_p_8057"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/8057/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8148">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/973/" target="_top">taninsw</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8148/">#8148</a>(<script language="JavaScript">print_time(new Date("2008/12/13 05:33 GMT"));</script><noscript>2008/12/13 05:33 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>配列とか知ってればもっとスマートにかけたと思うのですが、まだ学習中なので……。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">List</span>

<span class="nv">testdata</span> <span class="o">=</span> <span class="s">&quot;ID\tSurname\tForename\tAge\n&quot;</span> <span class="o">++</span>
           <span class="s">&quot;1\tSato\tHanako\t17\n&quot;</span> <span class="o">++</span>
           <span class="s">&quot;0\tSuzuki\tTaro\t18\n&quot;</span> <span class="o">++</span>
           <span class="s">&quot;2\tTanaka\tYaeko\t16&quot;</span> 



<span class="nv">readI</span> <span class="o">::</span><span class="n">String</span> <span class="o">-&gt;</span> <span class="n">Int</span>
<span class="nv">readI</span> <span class="o">=</span> <span class="nv">read</span>

<span class="nv">mkTable</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">words</span><span class="o">.</span><span class="nv">lines</span> 
<span class="nv">mkText</span> <span class="o">=</span> <span class="nv">unlines</span> <span class="o">.</span><span class="nv">map</span> <span class="p">(</span><span class="nv">concat</span><span class="o">.</span><span class="nv">intersperse</span> <span class="s">&quot;\t&quot;</span><span class="p">)</span> 

<span class="nv">sortTable</span> <span class="p">(</span><span class="nv">header</span><span class="o">:</span><span class="nv">body</span><span class="p">)</span><span class="o">=</span> <span class="nv">header</span><span class="o">:</span><span class="nv">sortBy</span> <span class="p">(</span><span class="o">\</span><span class="nv">a</span> <span class="nv">b</span><span class="o">-&gt;</span><span class="nv">compare</span> <span class="p">(</span><span class="nv">readI</span> <span class="o">$</span> <span class="nv">head</span> <span class="nv">a</span><span class="p">)</span> <span class="p">(</span><span class="nv">readI</span> <span class="o">$</span> <span class="nv">head</span> <span class="nv">b</span><span class="p">))</span> <span class="nv">body</span>


<span class="nv">swapColumn23</span> <span class="nv">table</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">swapItem</span> <span class="nv">table</span>
    <span class="kr">where</span> <span class="nv">swapItem</span> <span class="p">[</span><span class="nv">a</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">c</span><span class="p">,</span><span class="nv">d</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nv">a</span><span class="p">,</span><span class="nv">c</span><span class="p">,</span><span class="nv">b</span><span class="p">,</span><span class="nv">d</span><span class="p">]</span>

<span class="nv">add1Column4</span> <span class="p">(</span><span class="nv">header</span><span class="o">:</span><span class="nv">body</span><span class="p">)</span><span class="o">=</span> <span class="nv">header</span><span class="o">:</span><span class="nv">map</span> <span class="p">(</span><span class="nv">reverse</span><span class="o">.</span><span class="p">(</span><span class="o">\</span><span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span><span class="o">-&gt;</span><span class="nv">show</span><span class="p">(</span><span class="nv">readI</span><span class="p">(</span><span class="nv">x</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span><span class="o">.</span><span class="nv">reverse</span><span class="p">)</span> <span class="nv">body</span>

<span class="nv">converter</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">converter</span> <span class="nv">content</span> <span class="o">=</span> <span class="nv">mkText</span> <span class="o">$</span> <span class="nv">add1Column4</span> <span class="o">$</span> <span class="nv">swapColumn23</span> <span class="o">$</span> <span class="nv">sortTable</span> <span class="o">$</span> <span class="nv">mkTable</span> <span class="nv">content</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">interact</span> <span class="o">$</span> <span class="nv">converter</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8148/addtag/" class="addtag" id="addtag_8148">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8148/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8148/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8148"
  >-</span><span
  class="button yellow"
  id="rating_z_8148"
  >0</span><span 
  class="button green"
  id="rating_p_8148"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/8148/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8171">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/560/" target="_top">ihag</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8171/">#8171</a>(<script language="JavaScript">print_time(new Date("2008/12/14 14:27 GMT"));</script><noscript>2008/12/14 14:27 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Safe C String Library (SafeStr)に，ちょうどsafestr_splitがあるので，それを使ってみました．</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20091213020717/http://www.zork.org/safestr/">Safe C String Library</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &quot;safestr.h&quot;</span>

<span class="cp">#ifndef false</span>
<span class="cp"># define false 0</span>
<span class="cp">#endif</span>
<span class="cp">#ifndef true</span>
<span class="cp"># define true !false</span>
<span class="cp">#endif</span>

<span class="k">struct</span> <span class="n">item_t</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">is_int</span><span class="p">;</span>
    <span class="k">union</span> <span class="p">{</span>
        <span class="n">safestr_t</span> <span class="n">str</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">num</span><span class="p">;</span>
    <span class="p">}</span> <span class="n">value</span><span class="p">;</span>
<span class="p">};</span>


<span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span>
<span class="nf">create_record_from_list</span><span class="p">(</span><span class="n">safestr_t</span> <span class="o">*</span><span class="n">list</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="n">item</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">((</span><span class="n">item</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">item_t</span><span class="p">[</span><span class="mi">4</span><span class="p">])))</span>
        <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">perror</span><span class="p">(</span><span class="s">&quot;malloc&quot;</span><span class="p">);</span>
        <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
    <span class="p">}</span>
    
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span> <span class="o">&amp;&amp;</span> <span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">item</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">is_int</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="n">item</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">str</span> <span class="o">=</span> <span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="n">safestr_reference</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">!=</span> <span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;ERROR: 4 fields needed.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
        <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">item</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="nf">convert_int_fields</span><span class="p">(</span><span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="n">item</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">value</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">3</span><span class="p">;</span> <span class="n">i</span><span class="o">+=</span><span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">value</span> <span class="o">=</span> <span class="n">safestr_toint32</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">str</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="n">safestr_free</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">str</span><span class="p">);</span>
        <span class="n">item</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">num</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
        <span class="n">item</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">is_int</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="nf">records_dump</span><span class="p">(</span><span class="k">struct</span> <span class="n">item_t</span> <span class="o">**</span><span class="n">list</span><span class="p">,</span> <span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="n">header</span><span class="p">,</span>
             <span class="n">ssize_t</span> <span class="n">list_size</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">order</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">col</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="n">cur</span><span class="p">;</span>
    <span class="n">safestr_t</span> <span class="n">str</span> <span class="o">=</span> <span class="n">safestr_create</span><span class="p">(</span><span class="s">&quot;&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">safestr_t</span> <span class="n">str_p</span> <span class="o">=</span> <span class="n">str</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">list_size</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">cur</span> <span class="o">=</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">?</span> <span class="n">header</span> <span class="o">:</span> <span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">col</span> <span class="o">=</span> <span class="p">(</span><span class="n">order</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="o">?</span> <span class="n">j</span> <span class="o">:</span> <span class="n">order</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">cur</span><span class="p">[</span><span class="n">col</span><span class="p">].</span><span class="n">is_int</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">safestr_sprintf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">str</span><span class="p">,</span> <span class="n">SAFESTR_TEMP</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">),</span>
                                <span class="n">cur</span><span class="p">[</span><span class="n">col</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">num</span><span class="p">);</span>
                <span class="n">str_p</span> <span class="o">=</span> <span class="n">str</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="n">str_p</span> <span class="o">=</span> <span class="n">cur</span><span class="p">[</span><span class="n">col</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">str</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s%s&quot;</span><span class="p">,</span> <span class="p">(</span><span class="n">j</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="s">&quot;&quot;</span> <span class="o">:</span> <span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">,</span> <span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">str_p</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">safestr_free</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="nf">records_copy</span><span class="p">(</span><span class="k">struct</span> <span class="n">item_t</span> <span class="o">**</span><span class="n">dest</span><span class="p">,</span> <span class="k">struct</span> <span class="n">item_t</span> <span class="o">**</span><span class="n">src</span><span class="p">,</span>
             <span class="kt">int</span> <span class="n">record_size</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="n">item</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">record_size</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">((</span><span class="n">item</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">item_t</span><span class="p">[</span><span class="mi">4</span><span class="p">])))</span>
            <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">perror</span><span class="p">(</span><span class="s">&quot;malloc&quot;</span><span class="p">);</span>
            <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">dest</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">item</span><span class="p">;</span>

        <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">dest</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">src</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">dest</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">].</span><span class="n">is_int</span><span class="p">)</span>
                <span class="n">safestr_reference</span><span class="p">(</span><span class="n">dest</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">str</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="nf">records_free</span><span class="p">(</span><span class="k">struct</span> <span class="n">item_t</span> <span class="o">**</span><span class="n">list</span><span class="p">,</span> <span class="kt">int</span> <span class="n">record_size</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">record_size</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">].</span><span class="n">is_int</span><span class="p">)</span>
                <span class="n">safestr_release</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">str</span><span class="p">);</span>
        <span class="n">free</span><span class="p">(</span><span class="n">list</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="nf">compare</span><span class="p">(</span><span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">former</span><span class="p">,</span> <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">latter</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="n">former_p</span> <span class="o">=</span> <span class="o">*</span><span class="p">((</span><span class="k">struct</span> <span class="n">item_t</span> <span class="o">**</span><span class="p">)</span><span class="n">former</span><span class="p">);</span>
    <span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="n">latter_p</span> <span class="o">=</span> <span class="o">*</span><span class="p">((</span><span class="k">struct</span> <span class="n">item_t</span> <span class="o">**</span><span class="p">)</span><span class="n">latter</span><span class="p">);</span>

    <span class="k">return</span> <span class="p">(</span><span class="n">former_p</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">num</span> <span class="o">-</span> <span class="n">latter_p</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">num</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">safestr_t</span> <span class="n">line</span><span class="p">,</span> <span class="o">*</span><span class="n">list</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="n">record</span><span class="p">,</span> <span class="o">*</span><span class="n">header</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="n">records</span><span class="p">[</span><span class="mi">64</span><span class="p">],</span> <span class="o">*</span><span class="n">r_temp</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">record_size</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">order</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span> <span class="p">};</span>
    
    <span class="n">memset</span><span class="p">(</span><span class="o">&amp;</span><span class="n">records</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">records</span><span class="p">));</span>
    
    <span class="c">/* read data from stdin */</span>
    <span class="k">while</span> <span class="p">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">safestr_readline</span><span class="p">(</span><span class="n">stdin</span><span class="p">))</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">list</span> <span class="o">=</span> <span class="n">safestr_split</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="n">SAFESTR_TEMP</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">));</span>
        <span class="n">record</span> <span class="o">=</span> <span class="n">create_record_from_list</span><span class="p">(</span><span class="n">list</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">header</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
            <span class="n">header</span> <span class="o">=</span> <span class="n">record</span><span class="p">;</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="n">convert_int_fields</span><span class="p">(</span><span class="n">record</span><span class="p">);</span>
            <span class="n">records</span><span class="p">[</span><span class="n">record_size</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">record</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">safestr_free</span><span class="p">(</span><span class="n">line</span><span class="p">);</span>
        <span class="n">safestr_freelist</span><span class="p">(</span><span class="n">list</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">record_size</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_SUCCESS</span><span class="p">);</span>


    <span class="c">/*</span>
<span class="c">     * show results</span>
<span class="c">     */</span>
    <span class="c">/* #1 */</span>
    <span class="n">records_copy</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">records</span><span class="p">,</span> <span class="n">record_size</span><span class="p">);</span>
    <span class="n">qsort</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">record_size</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="p">),</span> <span class="n">compare</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Result of #1:</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">records_dump</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">header</span><span class="p">,</span> <span class="n">record_size</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">records_free</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">record_size</span><span class="p">);</span>

    <span class="c">/* #2 */</span>
    <span class="n">records_copy</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">records</span><span class="p">,</span> <span class="n">record_size</span><span class="p">);</span>
    <span class="n">qsort</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">record_size</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">item_t</span> <span class="o">*</span><span class="p">),</span> <span class="n">compare</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Result of #2:</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">records_dump</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">header</span><span class="p">,</span> <span class="n">record_size</span><span class="p">,</span> <span class="n">order</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">records_free</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">record_size</span><span class="p">);</span>

    <span class="c">/* #3 */</span>
    <span class="n">records_copy</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">records</span><span class="p">,</span> <span class="n">record_size</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">record_size</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="n">r_temp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">3</span><span class="p">].</span><span class="n">value</span><span class="p">.</span><span class="n">num</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Result of #3:</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">records_dump</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">header</span><span class="p">,</span> <span class="n">record_size</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">records_free</span><span class="p">(</span><span class="n">r_temp</span><span class="p">,</span> <span class="n">record_size</span><span class="p">);</span>


    <span class="c">/* finalize */</span>
    <span class="n">records_free</span><span class="p">(</span><span class="n">records</span><span class="p">,</span> <span class="n">record_size</span><span class="p">);</span>

    <span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8171/addtag/" class="addtag" id="addtag_8171">タグ</a>:
	
    
    <a href="/web/20091213020717/http://ja.doukaku.org/tag/SafeStr/">SafeStr</a>
    
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8171/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8171/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8171"
  >-</span><span
  class="button yellow"
  id="rating_z_8171"
  >0</span><span 
  class="button green"
  id="rating_p_8171"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/8171/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8307">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/549/" target="_top">cappuccino</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8307/">#8307</a>(<script language="JavaScript">print_time(new Date("2009/01/09 10:17 GMT"));</script><noscript>2009/01/09 10:17 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>１６行目を修正。</p>
<p>文字列型でソートしてました。</p>
<p>1</p>
<p>10   &lt;</p>
<p>2</p>
<p>3</p>
<p>4</p>
<p>5</p>
<p>6</p>
<p>7</p>
<p>8</p>
<p>9</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="k">{</span>
        <span class="n">var</span> <span class="n">header</span> <span class="p">=</span>
            <span class="n">from</span> <span class="n">line</span> <span class="k">in</span> <span class="n">File</span><span class="p">.</span><span class="n">ReadAllLines</span><span class="p">(</span><span class="s">&quot;inFile.txt&quot;</span><span class="p">).</span><span class="n">Take</span><span class="p">(</span><span class="m">1</span><span class="p">)</span>
            <span class="n">let</span> <span class="n">x</span> <span class="p">=</span> <span class="n">line</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39;\t&#39;</span><span class="p">)</span>
            <span class="n">select</span> <span class="n">x</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="n">x</span><span class="p">[</span><span class="m">2</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="n">x</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="n">x</span><span class="p">[</span><span class="m">3</span><span class="p">];</span>

        <span class="n">var</span> <span class="n">lines</span> <span class="p">=</span>
            <span class="n">from</span> <span class="n">line</span> <span class="k">in</span> <span class="n">File</span><span class="p">.</span><span class="n">ReadAllLines</span><span class="p">(</span><span class="s">&quot;inFile.txt&quot;</span><span class="p">).</span><span class="n">Skip</span><span class="p">(</span><span class="m">1</span><span class="p">)</span>
            <span class="n">let</span> <span class="n">x</span> <span class="p">=</span> <span class="n">line</span><span class="p">.</span><span class="n">Split</span><span class="p">(</span><span class="sc">&#39;\t&#39;</span><span class="p">)</span>
            <span class="n">orderby</span> <span class="kt">int</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="m">0</span><span class="p">])</span>
            <span class="n">select</span> <span class="n">x</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="n">x</span><span class="p">[</span><span class="m">2</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="n">x</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">+</span> <span class="sc">&#39;\t&#39;</span> <span class="p">+</span> <span class="p">(</span><span class="kt">int</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="m">3</span><span class="p">])</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>

        <span class="n">File</span><span class="p">.</span><span class="n">WriteAllLines</span><span class="p">(</span><span class="s">&quot;outFile.txt&quot;</span><span class="p">,</span> <span class="n">header</span><span class="p">.</span><span class="n">Concat</span><span class="p">(</span><span class="n">lines</span><span class="p">).</span><span class="n">ToArray</span><span class="p">());</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8307/addtag/" class="addtag" id="addtag_8307">タグ</a>:
	
    
    <a href="/web/20091213020717/http://ja.doukaku.org/tag/LINQ/">LINQ</a>
    
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8307/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8307/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8307"
  >-</span><span
  class="button yellow"
  id="rating_z_8307"
  >0</span><span 
  class="button green"
  id="rating_p_8307"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7745/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/8307/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/8307/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8428">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/856/" target="_top">fumokmm</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8428/">#8428</a>(<script language="JavaScript">print_time(new Date("2009/02/01 11:57 GMT"));</script><noscript>2009/02/01 11:57 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  いまさら投稿してみる。<br/>分かりやすく書いたつもりです。<br/><br/>**ポイント<br/>ヘッダとデータは　#head(),&nbsp;#tail()を使って取得。<br/>ヘッダごと入れ替え時は、列を1本ずつ取得してから、#transpose()で行・列を入れ替え。<br/><br/>**test.tsv<br/>ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Surname&nbsp;Forename&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Age<br/>1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sato&nbsp;&nbsp;&nbsp;&nbsp;Hanako&nbsp;&nbsp;17<br/>0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Suzuki&nbsp;&nbsp;Taro&nbsp;&nbsp;&nbsp;&nbsp;18<br/><br/>**実行結果<br/>[入力時]<br/>ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Surname&nbsp;Forename&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Age<br/>1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sato&nbsp;&nbsp;&nbsp;&nbsp;Hanako&nbsp;&nbsp;17<br/>0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Suzuki&nbsp;&nbsp;Taro&nbsp;&nbsp;&nbsp;&nbsp;18<br/><br/>[出力時]<br/>ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Forename&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Surname&nbsp;Age<br/>0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Taro&nbsp;&nbsp;&nbsp;&nbsp;Suzuki&nbsp;&nbsp;19<br/>1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hanako&nbsp;&nbsp;Sato&nbsp;&nbsp;&nbsp;&nbsp;18
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre>// 入力
def list0 = new File(&#39;test.tsv&#39;).readLines()*.split(&#39;\t&#39;)
// 第1カラムの値でデータを昇順にソートする。
def list1 = [list0.head(), *(list0.tail().sort{it[0]})]
// 第2カラムと第3カラムをヘッダを含めて入れ替える。
def list2 = [
  list1*.getAt(0),
  list1*.getAt(2), // ←第2カラムと
  list1*.getAt(1), // ←第3カラムの入れ替え
  list1*.getAt(3)
].transpose()
// 第4カラムの値にそれぞれ1を加える。
def list3 = [list2.head(),
   *(list2.tail().collect{ [*(it[0..2]), it[3].toInteger() + 1] })]
// 出力
println &quot;&quot;&quot;\
[入力時]
${ list0*.join(&#39;\t&#39;).join(&#39;\n&#39;) }

[出力時]
${ list3*.join(&#39;\t&#39;).join(&#39;\n&#39;) }\
&quot;&quot;&quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8428/addtag/" class="addtag" id="addtag_8428">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8428/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8428/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8428"
  >-</span><span
  class="button yellow"
  id="rating_z_8428"
  >0</span><span 
  class="button green"
  id="rating_p_8428"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/8428/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8538">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091213020717/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8538/">#8538</a>(<script language="JavaScript">print_time(new Date("2009/02/21 04:24 GMT"));</script><noscript>2009/02/21 04:24 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>F#で。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre><span class="k">#</span><span class="n">light</span> <span class="s2">&quot;off&quot;</span>
<span class="kr">open</span> <span class="n">System</span><span class="k">;</span>
<span class="kr">open</span> <span class="n">System</span><span class="k">.</span><span class="n">IO</span><span class="k">;</span>

<span class="kr">let</span> <span class="n">reader</span> <span class="k">(</span><span class="n">stream</span><span class="k">:</span><span class="n">TextReader</span><span class="k">)</span> <span class="k">=</span>
  <span class="mi">0</span> <span class="k">|&gt;</span> <span class="n">Seq</span><span class="k">.</span><span class="n">unfold</span>
      <span class="k">(</span><span class="kr">fun</span> <span class="n">x</span> <span class="k">-&gt;</span>
         <span class="kr">match</span> <span class="n">stream</span><span class="k">.</span><span class="n">ReadLine</span><span class="k">()</span> <span class="kr">with</span>
           <span class="k">|</span> <span class="n">null</span> <span class="k">-&gt;</span> <span class="n">None</span>
           <span class="k">|</span> <span class="n">s</span> <span class="k">-&gt;</span> <span class="n">Some</span><span class="k">(</span><span class="n">s</span><span class="k">.</span><span class="n">Split</span><span class="k">([|</span><span class="sc">&#39;\t&#39;</span><span class="k">|]),</span> <span class="n">x</span><span class="k">))</span>
<span class="kr">in</span>
<span class="kr">let</span> <span class="n">main</span> <span class="k">(</span><span class="n">input</span><span class="k">:</span><span class="n">TextReader</span><span class="k">)</span> <span class="k">(</span><span class="n">output</span><span class="k">:</span><span class="n">TextWriter</span><span class="k">)</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">records</span> <span class="k">=</span> <span class="n">reader</span> <span class="n">input</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">header</span> <span class="k">=</span> <span class="n">records</span> <span class="k">|&gt;</span> <span class="n">Seq</span><span class="k">.</span><span class="n">take</span> <span class="mi">1</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">contents</span> <span class="k">=</span>
    <span class="n">records</span>
    <span class="k">|&gt;</span> <span class="n">Seq</span><span class="k">.</span><span class="n">sort_by</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">x</span> <span class="k">-&gt;</span> <span class="n">int</span> <span class="n">x</span><span class="k">.[</span><span class="mi">0</span><span class="k">])</span>
    <span class="k">|&gt;</span> <span class="n">Seq</span><span class="k">.</span><span class="n">map</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">x</span> <span class="k">-&gt;</span> <span class="k">[|</span><span class="n">x</span><span class="k">.[</span><span class="mi">0</span><span class="k">];</span> <span class="n">x</span><span class="k">.[</span><span class="mi">1</span><span class="k">];</span> <span class="n">x</span><span class="k">.[</span><span class="mi">2</span><span class="k">];</span> <span class="n">string</span> <span class="k">((</span><span class="n">int</span> <span class="n">x</span><span class="k">.[</span><span class="mi">3</span><span class="k">])</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)|])</span>
  <span class="kr">in</span>
    <span class="n">Seq</span><span class="k">.</span><span class="n">append</span> <span class="n">header</span> <span class="n">contents</span>
    <span class="k">|&gt;</span> <span class="n">Seq</span><span class="k">.</span><span class="n">map</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">x</span> <span class="k">-&gt;</span> <span class="n">String</span><span class="k">.</span><span class="n">Join</span><span class="k">(</span><span class="s2">&quot;</span><span class="se">\t</span><span class="s2">&quot;</span><span class="k">,</span> <span class="k">[|</span><span class="n">x</span><span class="k">.[</span><span class="mi">0</span><span class="k">];</span> <span class="n">x</span><span class="k">.[</span><span class="mi">2</span><span class="k">];</span> <span class="n">x</span><span class="k">.[</span><span class="mi">1</span><span class="k">];</span> <span class="n">x</span><span class="k">.[</span><span class="mi">3</span><span class="k">]|]))</span>
    <span class="k">|&gt;</span> <span class="n">Seq</span><span class="k">.</span><span class="n">iter</span> <span class="n">output</span><span class="k">.</span><span class="n">WriteLine</span>
<span class="kr">in</span>
  <span class="n">main</span> <span class="n">Console</span><span class="k">.</span><span class="n">In</span> <span class="n">Console</span><span class="k">.</span><span class="n">Out</span><span class="k">;;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/8538/addtag/" class="addtag" id="addtag_8538">タグ</a>:
	
    
    <a href="/web/20091213020717/http://ja.doukaku.org/tag/F%23/">F#</a>
    
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8538/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/8538/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8538"
  >-</span><span
  class="button yellow"
  id="rating_z_8538"
  >0</span><span 
  class="button green"
  id="rating_p_8538"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/8538/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9002">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/1055/" target="_top">hiro_h</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/9002/">#9002</a>(<script language="JavaScript">print_time(new Date("2009/05/24 00:54 GMT"));</script><noscript>2009/05/24 00:54 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>python初心者ですが...
ちなみにpython2.3では動かないはず。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">sys</span>
<span class="k">def</span> <span class="nf">reorderdOutput</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="n">headerFlag</span><span class="p">):</span>
    <span class="n">line</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
    <span class="n">columns</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">)</span>
    <span class="n">columns</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">columns</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">columns</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">columns</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
    <span class="k">if</span> <span class="n">headerFlag</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">columns</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">columns</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
    <span class="k">print</span> <span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">columns</span><span class="p">)</span>
<span class="c">## main</span>
<span class="n">inFile</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">inFile</span><span class="p">)</span>
<span class="c">## header line treatment</span>
<span class="n">line</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
<span class="n">reorderdOutput</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="c">## data section treatment</span>
<span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">sorted</span><span class="p">(</span><span class="n">f</span><span class="p">):</span>
    <span class="n">reorderdOutput</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/9002/addtag/" class="addtag" id="addtag_9002">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/9002/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/9002/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9002"
  >-</span><span
  class="button yellow"
  id="rating_z_9002"
  >0</span><span 
  class="button green"
  id="rating_p_9002"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/7768/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091213020717/http://ja.doukaku.org/comment/9002/root/"><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/9002/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9640">
  <p class="banner"><a href="/web/20091213020717/http://ja.doukaku.org/user/1107/" target="_top">T_GYOUTEN</a>

	
	&nbsp;
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/9640/">#9640</a>(<script language="JavaScript">print_time(new Date("2009/10/22 12:02 GMT"));</script><noscript>2009/10/22 12:02 GMT</noscript>)
	
	
	
	[<a href="/web/20091213020717/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Personクラスを定義して、それのインスタンスのリストを作って、それをソートするという余計な手間ばかりをかけてます。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="highlight"><pre>open System.IO

let inputFileName = @&quot;s:\inputData.txt&quot;
let outputFileName = @&quot;s:\outputData.txt&quot;

type Person (st:string[]) =
    member this.id = System.Int32.Parse st.[0]
    member this.age = (System.Int32.Parse  st.[3]) + 1
    member this.toFormat () =
        this.id.ToString() + &quot;\t&quot; + st.[1] + &quot;\t&quot; + st.[2] + &quot;\t&quot; + this.age.ToString() 

let splitReplaceToArr (str:string) =
    let strArr = str.Split([|&#39;\t&#39;|])
    [|strArr.[0];strArr.[2];strArr.[1];strArr.[3]|]

let linesReadRepToList (inputFileName: string) =
    [                                             
        use fileReader = new StreamReader(inputFileName)  
        while not fileReader.EndOfStream do          
            let line = splitReplaceToArr (fileReader.ReadLine())
            yield line                               
     ]

let headerArr = List.hd (linesReadRepToList inputFileName)
let personList = List.map (fun arr -&gt; new Person (arr))  (List.tl (linesReadRepToList inputFileName))
let sortedList = List.sortWith(fun (l:Person) (r:Person) -&gt; r.age - l.age) personList 
let resultList = (Array.reduce  (fun s inStr -&gt; s + &quot;\t&quot; + inStr) headerArr) :: 
                    (List.map (fun (p:Person) -&gt; p.toFormat()) sortedList) 

File.WriteAllLines(outputFileName,resultList)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091213020717/http://ja.doukaku.org/comment/9640/addtag/" class="addtag" id="addtag_9640">タグ</a>:
	
    
    <a href="/web/20091213020717/http://ja.doukaku.org/tag/F%23/">F#</a>
    
	&nbsp;

	
      [<a href="/web/20091213020717/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20091213020717/http://ja.doukaku.org/comment/9640/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091213020717/http://ja.doukaku.org/comment/9640/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9640"
  >-</span><span
  class="button yellow"
  id="rating_z_9640"
  >0</span><span 
  class="button green"
  id="rating_p_9640"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091213020717/http://ja.doukaku.org/209/reply_to/9640/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20091213020717if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20091213020717/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20091213020717/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20091213020717/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20091213020717/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20091213020717/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20091213020717/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20091213020717/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20091213020717/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20091213020717/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20091213020717/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20091213020717im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20091213020717/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20091213020717/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20091213020717/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20091213020717/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20091213020717/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20091213020717/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20091213020717/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20091213020717/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20091213020717im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20091213020717/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20091213020717/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20091213020717/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20091213020717js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 2:07:17 Dec 13, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:55:56 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
