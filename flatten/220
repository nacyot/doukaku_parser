
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
数独の問題数を数え上げる
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20090512171057cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20090512171057cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20090512171057cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20090512171057/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20090512171057/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20090512171057js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20090512171057js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20090512171057js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20090512171057js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app19.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/220\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "12";
var displayMonth = "May";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/220/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090512171057" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20090102215326/http://ja.doukaku.org/220/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="2 Jan 2009"><strong>JAN</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 17:10:57 May 12, 2009">MAY</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jun
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20090102215326/http://ja.doukaku.org/220/flatten/" title="21:53:26 Jan 2, 2009" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 17:10:57 May 12, 2009">12</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2008
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 17:10:57 May 12, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20090512171057*/http://ja.doukaku.org/220/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">2 Jan 09 - 12 May 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:4:100010000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20090512171057/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20090512171057im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20090512171057/http://ja.doukaku.org/220/">数独の問題数を数え上げる</a>
</h2>

    





<div class="comment" id="comment8115">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/893/" target="_top">ckbx</a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8115/">#8115</a>(<script language="JavaScript">print_time(new Date("2008/12/05 05:41 GMT"));</script><noscript>2008/12/05 05:41 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffcf;">1/3=0.33</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>4×4のマスを2×2の4ブロックに区切り、いくつかのマスに1～4の数字を配置します。

以下、空白のマスすべてに数字を補い、縦、横、および各ブロックについて1～4の数字が
それぞれ一個ずつ含まれている状態にすることが可能で、かつその方法が一意であるもの、
つまり数独の問題として成立するもののみを考えます。

4 1 | 2           4 1 | 2 3
2   | 4 1         2 3 | 4 1
----+-----  ---&gt;  ----+----
  2 | 3 4         1 2 | 3 4
3 4 | 1           3 4 | 1 2

このようなものの総数を「初期配置の数字の個数ごとに」カウントしてください。

余力のある人は、極小な配置に限定してカウントしてみてください。
ただし、極小な配置とは、どの数字を取り除いても数独の問題として
不成立になる配置を指すものとします。


まどろっこしい言い回しになってしまいましたが、
一言で言えば「数独の問題数を数え上げよ」という問題になります。

参考：http://ja.wikipedia.org/wiki/%E6%95%B0%E7%8B%AC</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8115/addtag/" class="addtag" id="addtag_8115">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffcf;"
  >1/3=0.33</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8115"
  >-</span><span
  class="button yellow"
  id="rating_z_8115"
  >0</span><span 
  class="button green"
  id="rating_p_8115"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8115/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20090512171057/http://ja.doukaku.org/220/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - フラット表示</h2>
<a href="/web/20090512171057/http://ja.doukaku.org/220/nested/">ネスト表示</a>
<a href="/web/20090512171057/http://ja.doukaku.org/220/">非表示</a> 


  
  <br/>

  
  




<div class="comment" id="comment8117">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/780/" target="_top">gandalf</a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8117/">#8117</a>(<script language="JavaScript">print_time(new Date("2008/12/06 05:52 GMT"));</script><noscript>2008/12/06 05:52 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>極小なもののみ数えました。
回転、反転、置換で同じ形になるものも区別しています。
初期配置15の時の288種類は正解の総数と同じです。
0: 0
1: 0
2: 0
3: 0
4: 25728
5: 260544
6: 816960
7: 1428288
8: 1681248
9: 1418304
10: 879456
11: 402144
12: 133152
13: 30432
14: 4320
15: 288
16: 0
total: 7080864</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;sys/types.h&gt;</span>

<span class="cp">#include &lt;assert.h&gt;</span>
<span class="cp">#include &lt;libgen.h&gt;</span>
<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &lt;strings.h&gt;</span>
<span class="cp">#include &lt;unistd.h&gt;</span>

<span class="kt">int</span> <span class="n">pats</span><span class="p">[</span><span class="mi">24</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
    <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">},</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">},</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">},</span> <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">},</span> <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span> <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">},</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">},</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">},</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span> <span class="p">{</span><span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">},</span> <span class="p">{</span><span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
    <span class="p">{</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">},</span> <span class="p">{</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">},</span>
<span class="p">};</span>

<span class="cp">#define nelems(e)    (sizeof (e)/ sizeof *(e))</span>

<span class="kt">void</span> <span class="n">put</span><span class="p">(</span><span class="kt">int</span> <span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">],</span> <span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="p">);</span>
<span class="kt">int</span> <span class="n">chk</span><span class="p">(</span><span class="kt">int</span> <span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">]);</span>
<span class="kt">int</span> <span class="n">try</span><span class="p">(</span><span class="kt">int</span> <span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">],</span> <span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">);</span>
<span class="kt">int</span> <span class="n">uniqp</span><span class="p">(</span><span class="kt">int</span> <span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">]);</span>
<span class="kt">int</span> <span class="n">subsetp</span><span class="p">(</span><span class="kt">int</span> <span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">],</span> <span class="kt">int</span> <span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">]);</span>
<span class="kt">int</span> <span class="n">wellp</span><span class="p">(</span><span class="kt">int</span> <span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">]);</span>
<span class="kt">void</span> <span class="n">pull</span><span class="p">(</span><span class="kt">int</span> <span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">],</span> <span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="p">);</span>
<span class="kt">int</span> <span class="n">havesp</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">);</span>
<span class="kt">int</span> <span class="n">nzero</span><span class="p">(</span><span class="kt">int</span> <span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">]);</span>
<span class="kt">void</span> <span class="n">print</span><span class="p">(</span><span class="kt">int</span> <span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">]);</span>

<span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">r</span><span class="p">[</span><span class="mi">300</span><span class="p">])[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">nr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">na</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">h</span><span class="p">[</span><span class="mi">17</span><span class="p">];</span>

<span class="kt">int</span> <span class="n">wflag</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">pflag</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="kt">char</span> <span class="o">*</span><span class="n">pname</span><span class="p">;</span>

<span class="kt">void</span>
<span class="nf">usage</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;usage: %s [-w] [-p]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">pname</span><span class="p">);</span>
    <span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="n">main</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">)</span>
<span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[];</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">c</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">ch</span><span class="p">;</span>

    <span class="n">pname</span> <span class="o">=</span> <span class="n">basename</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>

    <span class="k">while</span> <span class="p">((</span><span class="n">ch</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="s">&quot;wp&quot;</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">switch</span> <span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">case</span> <span class="sc">&#39;w&#39;</span><span class="o">:</span>
            <span class="n">wflag</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="sc">&#39;p&#39;</span><span class="o">:</span>
            <span class="n">pflag</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="k">default</span><span class="o">:</span>
            <span class="n">usage</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">argc</span> <span class="o">-=</span> <span class="n">optind</span><span class="p">,</span> <span class="n">argv</span> <span class="o">+=</span> <span class="n">optind</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">usage</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="n">bzero</span><span class="p">(</span><span class="n">h</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">h</span><span class="p">);</span>
    <span class="n">bzero</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">b</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="n">nelems</span><span class="p">(</span><span class="n">pats</span><span class="p">);</span> <span class="n">n</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">put</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pats</span><span class="p">[</span><span class="n">n</span><span class="p">]);</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">nelems</span><span class="p">(</span><span class="n">pats</span><span class="p">);</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">put</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pats</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
            <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">nelems</span><span class="p">(</span><span class="n">pats</span><span class="p">);</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">put</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">pats</span><span class="p">[</span><span class="n">j</span><span class="p">]);</span>
                <span class="k">for</span> <span class="p">(</span><span class="n">k</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="n">nelems</span><span class="p">(</span><span class="n">pats</span><span class="p">);</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">put</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">pats</span><span class="p">[</span><span class="n">k</span><span class="p">]);</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">chk</span><span class="p">(</span><span class="n">b</span><span class="p">))</span> <span class="p">{</span>
                        <span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">new</span><span class="p">)[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
                        <span class="n">new</span> <span class="o">=</span> <span class="n">calloc</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="k">sizeof</span> <span class="o">*</span><span class="n">new</span><span class="p">);</span>
                        <span class="n">bcopy</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">new</span><span class="p">,</span> <span class="k">sizeof</span> <span class="o">*</span><span class="n">new</span><span class="p">);</span>
                        <span class="n">r</span><span class="p">[</span><span class="n">nr</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">new</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">c</span> <span class="o">&lt;</span> <span class="n">nr</span><span class="p">;</span> <span class="n">c</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">try</span><span class="p">(</span><span class="o">*</span><span class="n">r</span><span class="p">[</span><span class="n">c</span><span class="p">],</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">c</span> <span class="o">&lt;</span> <span class="n">nelems</span><span class="p">(</span><span class="n">h</span><span class="p">);</span> <span class="n">c</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d: %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">h</span><span class="p">[</span><span class="n">c</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;total: %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">na</span><span class="p">);</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="n">put</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">x0</span><span class="p">,</span> <span class="n">y0</span><span class="p">,</span> <span class="n">p</span><span class="p">)</span>
<span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
<span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
<span class="p">{</span>
    <span class="n">b</span><span class="p">[</span><span class="n">y0</span> <span class="o">+</span> <span class="mi">0</span><span class="p">][</span><span class="n">x0</span> <span class="o">+</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">p</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="n">b</span><span class="p">[</span><span class="n">y0</span> <span class="o">+</span> <span class="mi">0</span><span class="p">][</span><span class="n">x0</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">p</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="n">b</span><span class="p">[</span><span class="n">y0</span> <span class="o">+</span> <span class="mi">1</span><span class="p">][</span><span class="n">x0</span> <span class="o">+</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">p</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
    <span class="n">b</span><span class="p">[</span><span class="n">y0</span> <span class="o">+</span> <span class="mi">1</span><span class="p">][</span><span class="n">x0</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">p</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="n">chk</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">k</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">x</span><span class="p">[</span><span class="mi">5</span><span class="p">];</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">bzero</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">x</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">k</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">x</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">bzero</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">x</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">k</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">x</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="n">try</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">j0</span><span class="p">,</span> <span class="n">i0</span><span class="p">,</span> <span class="n">l</span><span class="p">)</span>
<span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">minimum</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">uniqp</span><span class="p">(</span><span class="n">b</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="n">j0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="n">i0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="kt">int</span> <span class="n">k</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">((</span><span class="n">k</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">])</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">try</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">l</span> <span class="o">+</span> <span class="mi">1</span><span class="p">))</span> <span class="p">{</span>
                    <span class="n">minimum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">k</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">i0</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">j0</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">minimum</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">wflag</span> <span class="o">||</span> <span class="n">wellp</span><span class="p">(</span><span class="n">b</span><span class="p">))</span> <span class="p">{</span>
            <span class="n">na</span><span class="o">++</span><span class="p">;</span>
            <span class="n">h</span><span class="p">[</span><span class="mi">16</span> <span class="o">-</span> <span class="n">nzero</span><span class="p">(</span><span class="n">b</span><span class="p">)]</span><span class="o">++</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">pflag</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">print</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="n">uniqp</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">c</span><span class="p">,</span> <span class="n">u</span><span class="p">;</span>
    <span class="n">u</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">c</span> <span class="o">&lt;</span> <span class="n">nr</span><span class="p">;</span> <span class="n">c</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">subsetp</span><span class="p">(</span><span class="o">*</span><span class="n">r</span><span class="p">[</span><span class="n">c</span><span class="p">],</span> <span class="n">b</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">u</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">u</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">assert</span><span class="p">(</span><span class="n">u</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="n">subsetp</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
<span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">],</span> <span class="n">b</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="n">a</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">])</span> <span class="p">{</span>
                <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="n">wellp</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">p</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>
    <span class="n">pull</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">havesp</span><span class="p">(</span><span class="n">p</span><span class="p">))</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">pull</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">havesp</span><span class="p">(</span><span class="n">p</span><span class="p">))</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">pull</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">havesp</span><span class="p">(</span><span class="n">p</span><span class="p">))</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">pull</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">havesp</span><span class="p">(</span><span class="n">p</span><span class="p">))</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="n">pull</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">x0</span><span class="p">,</span> <span class="n">y0</span><span class="p">,</span> <span class="n">p</span><span class="p">)</span>
<span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
<span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
<span class="p">{</span>
    <span class="n">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="n">y0</span> <span class="o">+</span> <span class="mi">0</span><span class="p">][</span><span class="n">x0</span> <span class="o">+</span> <span class="mi">0</span><span class="p">];</span>
    <span class="n">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="n">y0</span> <span class="o">+</span> <span class="mi">0</span><span class="p">][</span><span class="n">x0</span> <span class="o">+</span> <span class="mi">1</span><span class="p">];</span>
    <span class="n">p</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="n">y0</span> <span class="o">+</span> <span class="mi">1</span><span class="p">][</span><span class="n">x0</span> <span class="o">+</span> <span class="mi">0</span><span class="p">];</span>
    <span class="n">p</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="n">y0</span> <span class="o">+</span> <span class="mi">1</span><span class="p">][</span><span class="n">x0</span> <span class="o">+</span> <span class="mi">1</span><span class="p">];</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="n">havesp</span><span class="p">(</span><span class="n">p</span><span class="p">)</span>
<span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span>
<span class="n">nzero</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">n</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">n</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span>
<span class="n">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">4</span><span class="p">];</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">j</span><span class="p">,</span> <span class="n">i</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d &quot;</span><span class="p">,</span> <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]);</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">&quot;| &quot;</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">j</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;----+----</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8117/addtag/" class="addtag" id="addtag_8117">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8117/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8117/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8117"
  >-</span><span
  class="button yellow"
  id="rating_z_8117"
  >0</span><span 
  class="button green"
  id="rating_p_8117"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090512171057/http://ja.doukaku.org/comment/8117/">
    1
    reply
  </a>

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8117/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8118">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/780/" target="_top">gandalf</a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8118/">#8118</a>(<script language="JavaScript">print_time(new Date("2008/12/06 05:54 GMT"));</script><noscript>2008/12/06 05:54 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ごめんなさい、間違えています。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8118/addtag/" class="addtag" id="addtag_8118">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8118"
  >-</span><span
  class="button yellow"
  id="rating_z_8118"
  >0</span><span 
  class="button green"
  id="rating_p_8118"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8117/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8118/root/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090512171057/http://ja.doukaku.org/comment/8118/">
    1
    reply
  </a>

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8118/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8119">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/780/" target="_top">gandalf</a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8119/">#8119</a>(<script language="JavaScript">print_time(new Date("2008/12/05 23:58 GMT"));</script><noscript>2008/12/05 23:58 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>これでなおったと思う。
0: 0
1: 0
2: 0
3: 0
4: 32928
5: 363744
6: 1264464
7: 2476896
8: 3303600
9: 3205392
10: 2331264
11: 1283904
12: 532416
13: 162240
14: 34560
15: 4608
16: 0
total: 14996016</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="highlight"><pre>@@ -103,7 +103,11 @@
        }
 
        for (c = 0; c &lt; nr; c++) {
-               try(*r[c], j, i, 0);
+               for (j = 0; j &lt; 4; j++) {
+                       for (i = 0; i &lt; 4; i++) {
+                               try(*r[c], j, i, 0);
+                       }
+               }
        }
 
        for (c = 0; c &lt; nelems(h); c++) {
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8119/addtag/" class="addtag" id="addtag_8119">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8119/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8119/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8119"
  >-</span><span
  class="button yellow"
  id="rating_z_8119"
  >0</span><span 
  class="button green"
  id="rating_p_8119"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8118/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8119/root/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090512171057/http://ja.doukaku.org/comment/8119/">
    1
    reply
  </a>

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8119/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8120">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8120/">#8120</a>(<script language="JavaScript">print_time(new Date("2008/12/06 06:55 GMT"));</script><noscript>2008/12/06 06:55 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>まだ間違っています。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8120/addtag/" class="addtag" id="addtag_8120">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8120"
  >-</span><span
  class="button yellow"
  id="rating_z_8120"
  >0</span><span 
  class="button green"
  id="rating_p_8120"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8119/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8120/root/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8120/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8124">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/154/" target="_top">xsd</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8124/">#8124</a>(<script language="JavaScript">print_time(new Date("2008/12/07 00:00 GMT"));</script><noscript>2008/12/07 00:00 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>極小な配置のものについて、1/4!だけカウントして後で4!倍してます。
答えは、以下の通り。(あってる自信なし)

[xsd@colinux dk220]$ time ./dk220
 0:     0
 1:     0
 2:     0
 3:     0
 4: 25728
 5: 58368
 6:  1536
 7:     0
 8:     0
 9:     0
10:     0
11:     0
12:     0
13:     0
14:     0
15:     0
16:     0

real    0m31.660s
user    0m21.770s
sys     0m9.890s
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">I</span> <span class="k">=</span> <span class="n">Int64</span>

<span class="kr">let</span> <span class="n">build_answer</span> <span class="k">()</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">addm</span> <span class="n">m1</span> <span class="n">m2</span> <span class="k">=</span> <span class="n">I</span><span class="k">.</span><span class="n">logor</span> <span class="k">(</span><span class="n">I</span><span class="k">.</span><span class="n">shift_left</span> <span class="n">m1</span> <span class="mi">16</span><span class="k">)</span> <span class="k">(</span><span class="n">I</span><span class="k">.</span><span class="n">of_int</span> <span class="n">m2</span><span class="k">)</span> <span class="kr">in</span>

    <span class="kr">let</span> <span class="n">sep</span> <span class="n">m</span> <span class="k">=</span>
        <span class="kr">let</span> <span class="n">f</span> <span class="n">s</span> <span class="k">=</span> <span class="k">(</span><span class="n">m</span> <span class="kr">lsr</span> <span class="k">(</span><span class="mi">4</span> <span class="k">*</span> <span class="n">s</span><span class="k">))</span> <span class="kr">land</span> <span class="mi">15</span> <span class="kr">in</span>
        <span class="n">f</span> <span class="mi">3</span> <span class="kr">lor</span> <span class="n">f</span> <span class="mi">2</span><span class="k">,</span> <span class="n">f</span> <span class="mi">1</span> <span class="kr">lor</span> <span class="n">f</span> <span class="mi">0</span> <span class="kr">in</span>

    <span class="kr">let</span> <span class="n">pat</span> <span class="k">=</span> <span class="k">[</span>
        <span class="mi">0</span><span class="n">x1248</span><span class="k">;</span> <span class="mi">0</span><span class="n">x1284</span><span class="k">;</span> <span class="mi">0</span><span class="n">x1428</span><span class="k">;</span> <span class="mi">0</span><span class="n">x1482</span><span class="k">;</span> <span class="mi">0</span><span class="n">x1824</span><span class="k">;</span> <span class="mi">0</span><span class="n">x1842</span><span class="k">;</span>
        <span class="mi">0</span><span class="n">x2148</span><span class="k">;</span> <span class="mi">0</span><span class="n">x2184</span><span class="k">;</span> <span class="mi">0</span><span class="n">x2418</span><span class="k">;</span> <span class="mi">0</span><span class="n">x2481</span><span class="k">;</span> <span class="mi">0</span><span class="n">x2814</span><span class="k">;</span> <span class="mi">0</span><span class="n">x2841</span><span class="k">;</span>
        <span class="mi">0</span><span class="n">x4128</span><span class="k">;</span> <span class="mi">0</span><span class="n">x4182</span><span class="k">;</span> <span class="mi">0</span><span class="n">x4218</span><span class="k">;</span> <span class="mi">0</span><span class="n">x4281</span><span class="k">;</span> <span class="mi">0</span><span class="n">x4812</span><span class="k">;</span> <span class="mi">0</span><span class="n">x4821</span><span class="k">;</span>
        <span class="mi">0</span><span class="n">x8124</span><span class="k">;</span> <span class="mi">0</span><span class="n">x8142</span><span class="k">;</span> <span class="mi">0</span><span class="n">x8214</span><span class="k">;</span> <span class="mi">0</span><span class="n">x8241</span><span class="k">;</span> <span class="mi">0</span><span class="n">x8412</span><span class="k">;</span> <span class="mi">0</span><span class="n">x8421</span> <span class="k">]</span> <span class="kr">in</span>

    <span class="kr">let</span> <span class="kr">rec</span> <span class="n">loop</span> <span class="n">n</span> <span class="n">acc</span> <span class="n">tmp</span> <span class="n">m0</span> <span class="n">m1</span> <span class="n">m2</span> <span class="n">lis</span> <span class="k">=</span>
        <span class="kr">if</span> <span class="n">n</span> <span class="k">=</span> <span class="mi">0</span> <span class="kr">then</span> <span class="n">tmp</span> <span class="k">::</span> <span class="n">acc</span> <span class="kr">else</span> <span class="kr">match</span> <span class="n">lis</span> <span class="kr">with</span>
        <span class="k">|</span> <span class="k">[]</span>       <span class="k">-&gt;</span> <span class="n">acc</span>
        <span class="k">|</span> <span class="n">hd</span> <span class="k">::</span> <span class="n">tl</span> <span class="k">-&gt;</span>
            <span class="kr">let</span> <span class="n">mm</span> <span class="k">=</span> <span class="n">hd</span> <span class="kr">in</span>
            <span class="kr">let</span> <span class="n">mu</span><span class="k">,</span> <span class="n">ml</span> <span class="k">=</span> <span class="n">sep</span> <span class="n">mm</span> <span class="kr">in</span>
            <span class="kr">let</span> <span class="n">acc</span> <span class="k">=</span> <span class="k">(</span><span class="kr">match</span> <span class="n">n</span><span class="k">,</span> <span class="n">m0</span> <span class="kr">land</span> <span class="n">mm</span><span class="k">,</span> <span class="n">m1</span> <span class="kr">land</span> <span class="n">mu</span><span class="k">,</span> <span class="n">m2</span> <span class="kr">land</span> <span class="n">ml</span> <span class="kr">with</span>
                <span class="k">|</span> <span class="mi">4</span><span class="k">,</span> <span class="mi">0</span><span class="k">,</span> <span class="k">_,</span> <span class="k">_</span>
                <span class="k">|</span> <span class="mi">2</span><span class="k">,</span> <span class="mi">0</span><span class="k">,</span> <span class="k">_,</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="n">loop</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="n">acc</span> <span class="k">(</span><span class="n">addm</span> <span class="n">tmp</span> <span class="n">mm</span><span class="k">)</span> <span class="k">(</span><span class="n">m0</span> <span class="kr">lor</span> <span class="n">mm</span><span class="k">)</span> <span class="k">(</span><span class="n">m1</span> <span class="kr">lor</span> <span class="n">mu</span><span class="k">)</span> <span class="k">(</span><span class="n">m2</span> <span class="kr">lor</span> <span class="n">ml</span><span class="k">)</span> <span class="n">pat</span>
                <span class="k">|</span> <span class="k">_,</span> <span class="mi">0</span><span class="k">,</span> <span class="mi">0</span><span class="k">,</span> <span class="mi">0</span> <span class="k">-&gt;</span> <span class="n">loop</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="n">acc</span> <span class="k">(</span><span class="n">addm</span> <span class="n">tmp</span> <span class="n">mm</span><span class="k">)</span> <span class="k">(</span><span class="n">m0</span> <span class="kr">lor</span> <span class="n">mm</span><span class="k">)</span> <span class="mi">0</span> <span class="mi">0</span> <span class="n">pat</span>
                <span class="k">|</span> <span class="k">_</span>          <span class="k">-&gt;</span> <span class="n">acc</span><span class="k">)</span> <span class="kr">in</span>
            <span class="n">loop</span> <span class="n">n</span> <span class="n">acc</span> <span class="n">tmp</span> <span class="n">m0</span> <span class="n">m1</span> <span class="n">m2</span> <span class="n">tl</span> <span class="kr">in</span>
    <span class="n">loop</span> <span class="mi">4</span> <span class="k">[]</span> <span class="mi">0</span><span class="n">L</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="n">pat</span>

<span class="kr">let</span> <span class="n">test_answer</span> <span class="n">ans</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">sr4</span> <span class="n">m</span> <span class="k">=</span> <span class="n">I</span><span class="k">.</span><span class="n">shift_right_logical</span> <span class="n">m</span> <span class="mi">4</span> <span class="kr">in</span>

    <span class="kr">let</span> <span class="n">count</span> <span class="n">target</span> <span class="n">ans</span> <span class="n">mask</span> <span class="k">=</span>
        <span class="kr">let</span> <span class="kr">rec</span> <span class="n">loop</span> <span class="n">acc</span> <span class="n">m</span> <span class="k">=</span> <span class="kr">function</span>
            <span class="k">|</span> <span class="k">[]</span> <span class="k">-&gt;</span> <span class="n">acc</span>
            <span class="k">|</span> <span class="n">hd</span> <span class="k">::</span> <span class="n">tl</span> <span class="k">-&gt;</span> <span class="kr">if</span> <span class="n">acc</span> <span class="k">&gt;</span> <span class="mi">1</span> <span class="kr">then</span> <span class="n">acc</span>
                                     <span class="kr">else</span> <span class="n">loop</span> <span class="k">(</span><span class="kr">if</span> <span class="n">I</span><span class="k">.</span><span class="n">logand</span> <span class="n">hd</span> <span class="n">m</span> <span class="k">=</span> <span class="n">m</span> <span class="kr">then</span> <span class="n">acc</span> <span class="k">+</span> <span class="mi">1</span> <span class="kr">else</span> <span class="n">acc</span><span class="k">)</span> <span class="n">m</span> <span class="n">tl</span> <span class="kr">in</span>
        <span class="n">loop</span> <span class="mi">0</span> <span class="k">(</span><span class="n">I</span><span class="k">.</span><span class="n">logand</span> <span class="n">target</span> <span class="k">(</span><span class="n">I</span><span class="k">.</span><span class="n">lognot</span> <span class="n">mask</span><span class="k">))</span> <span class="n">ans</span> <span class="kr">in</span>

    <span class="kr">let</span> <span class="n">ismin</span> <span class="n">target</span> <span class="n">ans</span> <span class="n">mask</span> <span class="k">=</span>
        <span class="kr">let</span> <span class="kr">rec</span> <span class="n">im</span> <span class="n">target</span> <span class="n">ans</span> <span class="n">mask</span> <span class="k">=</span> <span class="kr">function</span>
            <span class="k">|</span> <span class="mi">0</span><span class="n">L</span> <span class="k">-&gt;</span> <span class="kr">true</span>
            <span class="k">|</span> <span class="n">m</span>  <span class="k">-&gt;</span> <span class="kr">if</span> <span class="n">I</span><span class="k">.</span><span class="n">logand</span> <span class="n">mask</span> <span class="n">m</span> <span class="k">=</span> <span class="mi">0</span><span class="n">L</span> <span class="k">&amp;&amp;</span> <span class="n">count</span> <span class="n">target</span> <span class="n">ans</span> <span class="k">(</span><span class="n">I</span><span class="k">.</span><span class="n">logor</span> <span class="n">mask</span> <span class="n">m</span><span class="k">)</span> <span class="k">=</span> <span class="mi">1</span> <span class="kr">then</span> <span class="kr">false</span>
                    <span class="kr">else</span> <span class="n">im</span> <span class="n">target</span> <span class="n">ans</span> <span class="n">mask</span> <span class="k">(</span><span class="n">sr4</span> <span class="n">m</span><span class="k">)</span> <span class="kr">in</span>
        <span class="n">im</span> <span class="n">target</span> <span class="n">ans</span> <span class="n">mask</span> <span class="mi">0</span><span class="n">xF000000000000000L</span> <span class="kr">in</span>

    <span class="kr">let</span> <span class="kr">rec</span> <span class="n">check</span> <span class="n">ans</span> <span class="n">target</span> <span class="n">arr</span> <span class="n">n</span> <span class="n">curm</span> <span class="n">m</span> <span class="k">=</span>
        <span class="kr">if</span> <span class="n">m</span> <span class="k">=</span> <span class="mi">0</span><span class="n">L</span> <span class="kr">then</span> <span class="n">arr</span> <span class="kr">else</span>
            <span class="kr">let</span> <span class="n">nextm</span> <span class="k">=</span> <span class="n">I</span><span class="k">.</span><span class="n">logor</span> <span class="n">curm</span> <span class="n">m</span> <span class="kr">in</span>
            <span class="kr">let</span> <span class="n">m4</span> <span class="k">=</span> <span class="n">sr4</span> <span class="n">m</span> <span class="kr">in</span>
            <span class="kr">match</span> <span class="n">count</span> <span class="n">target</span> <span class="n">ans</span> <span class="n">nextm</span> <span class="kr">with</span>
            <span class="k">|</span> <span class="mi">0</span> <span class="k">-&gt;</span> <span class="n">arr</span>
            <span class="k">|</span> <span class="mi">1</span> <span class="k">-&gt;</span> <span class="kr">let</span> <span class="n">arr</span> <span class="k">=</span> <span class="kr">if</span> <span class="n">ismin</span> <span class="n">target</span> <span class="n">ans</span> <span class="n">nextm</span> <span class="kr">then</span> <span class="k">(</span><span class="n">arr</span><span class="k">.(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="k">&lt;-</span> <span class="n">arr</span><span class="k">.(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="k">+</span> <span class="mi">1</span><span class="k">;</span> <span class="n">arr</span><span class="k">)</span>
                        <span class="kr">else</span> <span class="n">check</span> <span class="n">ans</span> <span class="n">target</span> <span class="n">arr</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="n">nextm</span> <span class="n">m4</span> <span class="kr">in</span>
                    <span class="n">check</span> <span class="n">ans</span> <span class="n">target</span> <span class="n">arr</span> <span class="n">n</span> <span class="n">curm</span> <span class="n">m4</span>
            <span class="k">|</span> <span class="k">_</span> <span class="k">-&gt;</span>  <span class="n">check</span> <span class="n">ans</span> <span class="n">target</span> <span class="k">(</span><span class="n">check</span> <span class="n">ans</span> <span class="n">target</span> <span class="n">arr</span> <span class="k">(</span><span class="n">n</span><span class="k">-</span><span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">I</span><span class="k">.</span><span class="n">logor</span> <span class="n">curm</span> <span class="n">m</span><span class="k">)</span> <span class="n">m4</span><span class="k">)</span> <span class="n">n</span> <span class="n">curm</span> <span class="n">m4</span> <span class="kr">in</span>

    <span class="kr">let</span> <span class="n">loop</span> <span class="n">ans</span> <span class="n">arr</span> <span class="n">target</span> <span class="k">=</span>
<span class="c">(*        let _ = Printf.printf &quot;%16LX\n%!&quot; target in *)</span>
        <span class="n">check</span> <span class="n">ans</span> <span class="n">target</span> <span class="n">arr</span> <span class="mi">16</span> <span class="mi">0</span><span class="n">L</span> <span class="mi">0</span><span class="n">xF000000000000000L</span> <span class="kr">in</span>
    <span class="n">List</span><span class="k">.</span><span class="n">fold_left</span> <span class="k">(</span><span class="n">loop</span> <span class="n">ans</span><span class="k">)</span> <span class="k">(</span><span class="n">Array</span><span class="k">.</span><span class="n">create</span> <span class="mi">17</span> <span class="mi">0</span><span class="k">)</span>
        <span class="k">(</span><span class="n">List</span><span class="k">.</span><span class="n">filter</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">x</span> <span class="k">-&gt;</span> <span class="n">Int64</span><span class="k">.</span><span class="n">logand</span> <span class="n">x</span> <span class="mi">0</span><span class="n">x1248L</span> <span class="k">=</span> <span class="mi">0</span><span class="n">x1248L</span><span class="k">)</span> <span class="n">ans</span><span class="k">)</span>

<span class="kr">let</span> <span class="k">_</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">ans</span> <span class="k">=</span> <span class="n">build_answer</span> <span class="k">()</span> <span class="kr">in</span>
    <span class="kr">let</span> <span class="n">arr</span> <span class="k">=</span> <span class="n">test_answer</span> <span class="n">ans</span> <span class="kr">in</span>
    <span class="n">Array</span><span class="k">.</span><span class="n">iteri</span> <span class="k">(</span><span class="kr">fun</span> <span class="n">i</span> <span class="n">m</span> <span class="k">-&gt;</span> <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;%2d: %5d</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="n">i</span> <span class="k">(</span><span class="n">m</span><span class="k">*</span><span class="mi">24</span><span class="k">))</span> <span class="n">arr</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8124/addtag/" class="addtag" id="addtag_8124">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8124/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8124/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8124"
  >-</span><span
  class="button yellow"
  id="rating_z_8124"
  >0</span><span 
  class="button green"
  id="rating_p_8124"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8124/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8129">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/642/" target="_top">saws</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8129/">#8129</a>(<script language="JavaScript">print_time(new Date("2008/12/10 16:00 GMT"));</script><noscript>2008/12/10 16:00 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>解答そのものと解答数について応えてくれます.
たぶん.</p>
<p>それはそうと, ppメソッドは違う名前の方がいいのかもしれませんがアイデアがなかったのでこの名前になりました.</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52</pre></td><td class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">NumPlace</span>
  <span class="c1">#an instance for initial argument of matrix</span>
  <span class="c1">#|3 2 - 0|</span>
  <span class="c1">#|0 1 - 3|</span>
  <span class="c1">#|2 - 0 1| =&gt; mat = [[3, 2, nil, 0], [0, 1, nil, 3],</span>
  <span class="c1">#|1 - 3 2|           [2, nil, 0, 1], [1, nil, 3, 2]]</span>
  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="n">mat</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">n</span><span class="o">**</span><span class="mi">2</span><span class="p">){</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">n</span><span class="o">**</span><span class="mi">2</span><span class="p">)})</span>
    <span class="vi">@n</span><span class="p">,</span> <span class="vi">@size</span> <span class="o">=</span> <span class="n">n</span><span class="p">,</span> <span class="n">n</span><span class="o">**</span><span class="mi">2</span>
    <span class="vi">@mat</span> <span class="o">=</span> <span class="n">mat</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">solve</span>
    <span class="n">out</span> <span class="o">=</span> <span class="o">[]</span> <span class="ow">and</span> <span class="n">solve_aux</span> <span class="o">=</span> <span class="nb">proc</span><span class="p">{</span><span class="o">|</span><span class="n">mat</span><span class="p">,</span> <span class="n">pos</span><span class="o">|</span>
      <span class="n">pos</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="n">out</span> <span class="o">&lt;&lt;</span> <span class="n">mat</span> <span class="p">:</span>
      <span class="vi">@size</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">val</span><span class="o">|</span>
        <span class="n">m</span> <span class="o">=</span> <span class="n">renew</span><span class="p">(</span><span class="n">mat</span><span class="p">,</span> <span class="n">pos</span><span class="p">,</span> <span class="n">val</span><span class="p">)</span>
        <span class="n">solve_aux</span><span class="o">.</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">succ</span><span class="p">(</span><span class="o">*</span><span class="n">pos</span><span class="p">))</span> <span class="k">if</span> <span class="n">check</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">pos</span><span class="p">)}}</span>
    <span class="n">solve_aux</span><span class="o">.</span><span class="p">(</span><span class="vi">@mat</span><span class="p">,</span> <span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">)</span> <span class="ow">and</span> <span class="n">out</span>
  <span class="k">end</span>
  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">check</span><span class="p">(</span><span class="n">mat</span><span class="p">,</span> <span class="n">pos</span><span class="p">)</span>
    <span class="n">get_anum</span> <span class="o">=</span> <span class="nb">proc</span><span class="p">{</span><span class="o">|</span><span class="n">pos</span><span class="o">|</span> <span class="c1">#get an area number that is indentical</span>
      <span class="n">pos</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="vi">@n</span><span class="p">)</span> <span class="o">+</span> <span class="n">pos</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="vi">@n</span><span class="p">)</span><span class="o">*</span><span class="vi">@n</span><span class="p">}</span>
    <span class="n">area</span> <span class="o">=</span> <span class="nb">proc</span><span class="p">{</span><span class="o">|</span><span class="n">mat</span><span class="p">,</span><span class="n">pos</span><span class="o">|</span> <span class="c1">#get an area at the position belonged</span>
      <span class="nb">scan</span><span class="p">(</span><span class="n">mat</span><span class="p">){</span><span class="o">|</span><span class="n">row</span><span class="o">|</span> <span class="n">row</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="p">,</span><span class="nb">p</span><span class="o">|</span>
          <span class="n">get_anum</span><span class="o">.</span><span class="p">(</span><span class="nb">p</span><span class="p">)</span> <span class="o">==</span> <span class="n">get_anum</span><span class="o">.</span><span class="p">(</span><span class="n">pos</span><span class="p">)}</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:first</span><span class="p">)}</span><span class="o">.</span>
      <span class="n">reject</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:empty?</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span><span class="p">}</span>
    <span class="o">[</span><span class="n">mat</span><span class="o">[</span><span class="n">pos</span><span class="o">.</span><span class="n">first</span><span class="o">]</span><span class="p">,</span> <span class="n">mat</span><span class="o">.</span><span class="n">transpose</span><span class="o">[</span><span class="n">pos</span><span class="o">.</span><span class="n">last</span><span class="o">]</span><span class="p">,</span> <span class="n">area</span><span class="o">.</span><span class="p">(</span><span class="n">mat</span><span class="p">,</span> <span class="n">pos</span><span class="p">)</span><span class="o">].</span>
      <span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:compact</span><span class="p">)</span><span class="o">.</span><span class="n">none?</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:uniq!</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">succ</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">)</span><span class="c1">#get the successor of the position coordinate</span>
    <span class="k">if</span>    <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="vi">@size</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">j</span><span class="p">)</span> <span class="k">then</span> <span class="o">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span>
    <span class="k">elsif</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="vi">@size</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">then</span> <span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="o">]</span>
    <span class="k">else</span> <span class="kp">nil</span> <span class="k">end</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">renew</span><span class="p">(</span><span class="n">mat</span><span class="p">,</span> <span class="n">pos</span><span class="p">,</span> <span class="n">val</span><span class="p">)</span>
    <span class="n">mat</span><span class="o">[</span><span class="n">pos</span><span class="o">.</span><span class="n">first</span><span class="o">][</span><span class="n">pos</span><span class="o">.</span><span class="n">last</span><span class="o">]</span> <span class="p">?</span> <span class="n">mat</span> <span class="p">:</span>
      <span class="nb">scan</span><span class="p">(</span><span class="n">mat</span><span class="p">){</span><span class="o">|</span><span class="n">row</span><span class="o">|</span> <span class="n">row</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="p">,</span><span class="nb">p</span><span class="o">|</span> <span class="n">pos</span> <span class="o">==</span> <span class="nb">p</span> <span class="p">?</span> <span class="n">val</span> <span class="p">:</span> <span class="n">x</span><span class="p">}}</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">scan</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span> <span class="c1">#scan the matrix with index</span>
    <span class="n">mat</span><span class="o">.</span><span class="n">each_with_index</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">row</span><span class="p">,</span><span class="n">i</span><span class="o">|</span>
      <span class="k">yield</span> <span class="n">row</span><span class="o">.</span><span class="n">each_with_index</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="p">,</span><span class="n">j</span><span class="o">|</span> <span class="o">[</span><span class="n">x</span><span class="p">,</span> <span class="o">[</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="o">]]</span><span class="p">}}</span>
  <span class="k">end</span>
  <span class="k">def</span> <span class="nf">pp</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span>
    <span class="nb">puts</span> <span class="n">mat</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">row</span><span class="o">|</span> <span class="n">row</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span> <span class="p">?</span> <span class="n">x</span> <span class="p">:</span> <span class="s1">&#39;-&#39;</span><span class="p">}}</span><span class="o">.</span>
      <span class="n">each_slice</span><span class="p">(</span><span class="vi">@n</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">area</span><span class="o">|</span>
      <span class="n">area</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">each_slice</span><span class="p">(</span><span class="vi">@n</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:join</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\s</span><span class="s2">&quot;</span><span class="p">)}</span><span class="o">.</span>
      <span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">),</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
  <span class="k">end</span>
<span class="k">end</span>
<span class="n">np</span> <span class="o">=</span> <span class="no">NumPlace</span><span class="o">.</span><span class="n">new</span>
<span class="n">out</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">solve</span>
<span class="nb">p</span> <span class="n">out</span><span class="o">.</span><span class="n">size</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8129/addtag/" class="addtag" id="addtag_8129">タグ</a>:
	
    
    <a href="/web/20090512171057/http://ja.doukaku.org/tag/1.9.0/">1.9.0</a>
    
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8129/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8129/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8129"
  >-</span><span
  class="button yellow"
  id="rating_z_8129"
  >0</span><span 
  class="button green"
  id="rating_p_8129"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8129/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8130">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/980/" target="_top">manzo</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8130/">#8130</a>(<script language="JavaScript">print_time(new Date("2008/12/10 22:20 GMT"));</script><noscript>2008/12/10 22:20 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  数独はやったことがないので、答え方もわからなかったのですが、ｓｗａｓさんの答えと同じだったので、上げてみます。<br/><br/>遅くて、ものぐさな方法です。<br/><br/><br/>１）Array#permutationで順列を得て、<br/>２）そのうち縦目、２×２ブロックのそれぞれのsortがすべてが[1,2,3,4]であるものを探す。<br/><br/>というやり方でやりました。<br/>Ruby&nbsp;1.8.7
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#結果を入れる配列。</span>
<span class="n">total</span> <span class="o">=</span> <span class="o">[]</span>

<span class="c1">#Array#permutationで順列を作る。255024</span>
<span class="n">b</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="o">].</span><span class="n">permutation</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">permutation</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>

<span class="c1">#それぞれのパターンについて縦目、２×２を作ります。</span>
<span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">b</span>
  <span class="n">ret</span> <span class="o">=</span> <span class="o">[]</span>

<span class="c1">#2×2のパターンを作る。</span>
  <span class="n">ret</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span> <span class="o">+</span> <span class="n">i</span><span class="o">[</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span>
  <span class="n">ret</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span> <span class="o">+</span> <span class="n">i</span><span class="o">[</span><span class="mi">1</span><span class="o">][</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span>
  <span class="n">ret</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="o">[</span><span class="mi">2</span><span class="o">][</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span> <span class="o">+</span> <span class="n">i</span><span class="o">[</span><span class="mi">3</span><span class="o">][</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span>
  <span class="n">ret</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="o">[</span><span class="mi">2</span><span class="o">][</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span> <span class="o">+</span> <span class="n">i</span><span class="o">[</span><span class="mi">3</span><span class="o">][</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span>

<span class="c1">#縦目のパターンを作る。</span>
<span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">i</span><span class="o">.</span><span class="n">transpose</span>
  <span class="n">ret</span> <span class="o">&lt;&lt;</span> <span class="n">j</span>
<span class="k">end</span>

<span class="c1">#2×2のパターンと縦目のパターンのすべてがuniqすると[1,2,3,4]のみの場合にtotalに入れる。</span>
    <span class="k">if</span> <span class="n">ret</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:sort</span><span class="p">)</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">flatten</span> <span class="o">==</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="o">]</span>
      <span class="n">total</span> <span class="o">&lt;&lt;</span> <span class="n">i</span>
    <span class="k">end</span>
<span class="k">end</span>

<span class="c1">#集められたパターンの総数</span>
<span class="nb">puts</span> <span class="n">total</span><span class="o">.</span><span class="n">size</span> <span class="c1">#=&gt; 288</span>

<span class="c1">#以下は、集められたパターンの出力</span>
<span class="n">n</span> <span class="o">=</span> <span class="s2">&quot;0&quot;</span>

<span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">total</span>
  <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
  <span class="nb">puts</span> <span class="s2">&quot;#&quot;</span> <span class="o">+</span> <span class="n">n</span><span class="o">.</span><span class="n">next!</span>
  <span class="n">c</span> <span class="o">=</span> <span class="mi">1</span>

  <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">i</span>
    <span class="nb">puts</span> <span class="o">[</span><span class="n">j</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span><span class="n">j</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span><span class="s2">&quot;|&quot;</span><span class="p">,</span><span class="n">j</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span><span class="n">j</span><span class="o">[</span><span class="mi">3</span><span class="o">]].</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span>
    <span class="nb">puts</span> <span class="s2">&quot;----+----&quot;</span> <span class="k">if</span> <span class="n">c</span> <span class="o">==</span> <span class="mi">2</span>
    <span class="n">c</span> <span class="o">+=</span> <span class="mi">1</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8130/addtag/" class="addtag" id="addtag_8130">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8130/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8130/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8130"
  >-</span><span
  class="button yellow"
  id="rating_z_8130"
  >0</span><span 
  class="button green"
  id="rating_p_8130"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8130/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8131">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8131/">#8131</a>(<script language="JavaScript">print_time(new Date("2008/12/10 23:06 GMT"));</script><noscript>2008/12/10 23:06 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Squeak Smalltalk で。Ruby に倣ってとりあえず解答数だけ。問題数の数え上げは折を見て。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre>| elems mat1 mat2 mat3 mat4 arr1 arr2 arr3 arr4 check results |
elems := (1 to: 4) asSet.
mat1 := Matrix rows: 2 columns: 2 contents: (arr1 := elems asArray).
mat2 := Matrix rows: 2 columns: 2 contents: (arr2 := elems asArray).
mat3 := Matrix rows: 2 columns: 2 contents: (arr3 := elems asArray).
mat4 := Matrix rows: 2 columns: 2 contents: (arr4 := elems asArray).

results := OrderedCollection new.

check := [:mt |
   (1 to: mt rowCount) allSatisfy: [:idx |
       ((mt atRow: idx) includesAllOf: elems)
           and: [(mt atColumn: idx) includesAllOf: elems]]].

arr1 permutationsStartingAt: 1 do: [:dummy1 |
   arr2 permutationsStartingAt: 1 do: [:dummy2 |
       arr3  permutationsStartingAt: 1 do: [:dummy3 |
           arr4 permutationsStartingAt: 1 do: [:dummy4 |
               | mat |
               mat := (mat1, mat2),, (mat3, mat4).
               (check value: mat) ifTrue: [results add: mat]]]]].

results inspect; size   &quot;=&gt; 288 &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8131/addtag/" class="addtag" id="addtag_8131">タグ</a>:
	
    
    <a href="/web/20090512171057/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8131/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8131/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8131"
  >-</span><span
  class="button yellow"
  id="rating_z_8131"
  >0</span><span 
  class="button green"
  id="rating_p_8131"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8131/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8134">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8134/">#8134</a>(<script language="JavaScript">print_time(new Date("2008/12/11 08:00 GMT"));</script><noscript>2008/12/11 08:00 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>試行錯誤の結果、とりあえず完成させましたがあってるのかどうか。

アルゴリズムとしては、

すべての解答面を列挙
面ごとに他面との違いを保存、ある面の問題の初期数字が他面との違いのリストの
それぞれに一つでも入っていれば、問題の一意性が確定する
それを初期文字数1から15まですべての可能な組み合わせと比較する

答えは

1 0
2 0
3 0
4 25728
5 284160
6 1041408
7 2141184
8 2961024
9 2958336
10 2204928
11 1239552
12 522624
13 161280
14 34560
15 4608

となりました。

取り合えず簡単に確かめられる初期文字数15はあってます。
(全解答面288)×(一面の組み合わせ数16) = 4608

なぜかバージョン3.0で書いてしまいました。注意してください。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49</pre></td><td class="code"><div class="highlight"><pre><span class="n">f</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">s</span><span class="p">:</span> <span class="p">[[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">j</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">s</span> <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">f</span><span class="p">(</span><span class="n">s</span> <span class="o">-</span> <span class="p">{</span><span class="n">i</span><span class="p">})]</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="k">else</span> <span class="p">[</span><span class="nb">list</span><span class="p">(</span><span class="n">s</span><span class="p">)]</span>

<span class="n">L</span> <span class="o">=</span> <span class="n">f</span><span class="p">({</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">})</span>

<span class="n">cond</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">:</span> <span class="nb">sum</span><span class="p">([</span><span class="n">a</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="ow">in</span> <span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">b</span><span class="p">]</span> <span class="ow">and</span> <span class="mi">1</span> <span class="ow">or</span> <span class="mi">0</span> <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">4</span><span class="p">)])</span>
<span class="n">F</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">L</span><span class="p">:</span>
  <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">L</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">set</span><span class="p">(</span><span class="n">i</span><span class="p">[:</span><span class="mi">2</span><span class="p">])</span> <span class="o">&amp;</span> <span class="n">set</span><span class="p">(</span><span class="n">j</span><span class="p">[:</span><span class="mi">2</span><span class="p">])</span> <span class="ow">or</span> <span class="n">set</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span> <span class="o">&amp;</span> <span class="n">set</span><span class="p">(</span><span class="n">j</span><span class="p">[</span><span class="mi">2</span><span class="p">:]):</span> <span class="k">continue</span>
    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">L</span><span class="p">:</span>
      <span class="k">if</span> <span class="n">cond</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]):</span> <span class="k">continue</span>
      <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">L</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">set</span><span class="p">(</span><span class="n">k</span><span class="p">[:</span><span class="mi">2</span><span class="p">])</span> <span class="o">&amp;</span> <span class="n">set</span><span class="p">(</span><span class="n">l</span><span class="p">[:</span><span class="mi">2</span><span class="p">])</span> <span class="ow">or</span> <span class="n">set</span><span class="p">(</span><span class="n">k</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span> <span class="o">&amp;</span> <span class="n">set</span><span class="p">(</span><span class="n">l</span><span class="p">[</span><span class="mi">2</span><span class="p">:]):</span> <span class="k">continue</span>
        <span class="k">if</span> <span class="n">cond</span><span class="p">(</span><span class="n">l</span><span class="p">,</span> <span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">]):</span> <span class="k">continue</span>
        <span class="n">F</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="n">j</span> <span class="o">+</span> <span class="n">k</span> <span class="o">+</span> <span class="n">l</span><span class="p">)</span>

<span class="n">D</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">F</span><span class="p">:</span>
  <span class="n">x</span> <span class="o">=</span> <span class="p">[]</span>
  <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">F</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="n">j</span><span class="p">:</span> <span class="k">continue</span>
    <span class="n">x</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="n">k</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="p">(</span><span class="n">l</span><span class="p">,</span> <span class="n">m</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">))</span> <span class="k">if</span> <span class="n">l</span> <span class="o">!=</span> <span class="n">m</span><span class="p">])</span>

  <span class="n">y</span> <span class="o">=</span> <span class="p">[]</span>
  <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">x</span><span class="p">:</span>
    <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">x</span><span class="p">:</span>
      <span class="k">if</span> <span class="n">a</span> <span class="o">==</span> <span class="n">b</span><span class="p">:</span> <span class="k">continue</span>
      <span class="k">if</span> <span class="n">set</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">set</span><span class="p">(</span><span class="n">b</span><span class="p">):</span> <span class="k">break</span>
    <span class="k">else</span><span class="p">:</span>
      <span class="n">y</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">set</span><span class="p">(</span><span class="n">a</span><span class="p">))</span>
  <span class="n">D</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">C</span><span class="p">(</span><span class="n">l</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span> <span class="k">yield</span> <span class="p">[]</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">l</span><span class="p">)):</span>
      <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">C</span><span class="p">(</span><span class="n">l</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">:],</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">):</span>
        <span class="k">yield</span> <span class="p">[</span><span class="n">l</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">+</span> <span class="n">j</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">16</span><span class="p">):</span>
  <span class="n">s</span> <span class="o">=</span> <span class="mi">0</span>
  <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">C</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">16</span><span class="p">)),</span> <span class="n">i</span><span class="p">):</span>
    <span class="n">j</span> <span class="o">=</span> <span class="n">set</span><span class="p">(</span><span class="n">j</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">D</span><span class="p">:</span>
      <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">k</span><span class="p">:</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">j</span> <span class="o">&amp;</span> <span class="n">l</span><span class="p">:</span> <span class="k">break</span>
      <span class="k">else</span><span class="p">:</span>
        <span class="n">s</span> <span class="o">+=</span> <span class="mi">1</span>
  <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">s</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8134/addtag/" class="addtag" id="addtag_8134">タグ</a>:
	
    
    <a href="/web/20090512171057/http://ja.doukaku.org/tag/python3.0/">python3.0</a>
    
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8134/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8134/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8134"
  >-</span><span
  class="button yellow"
  id="rating_z_8134"
  >0</span><span 
  class="button green"
  id="rating_p_8134"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090512171057/http://ja.doukaku.org/comment/8134/">
    1
    reply
  </a>

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8134/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8135">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8135/">#8135</a>(<script language="JavaScript">print_time(new Date("2008/12/12 03:41 GMT"));</script><noscript>2008/12/12 03:41 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>すべての２個空きと３個空きもユニークに初期数字が復元できるので
３個空きまでは簡単に確かめられます。
１個空きの組み合わせ数 16C1 = 16/1! = 16
２個空きの組み合わせ数 16C2 = 16*15/2! = 120
３個空きの組み合わせ数 16C3 = 16*15*14/3! = 560
なので
15: 4608   = 288 * 16
14: 34560  = 288 * 120
13: 161280 = 288 * 560

４個空きからがややこしい。
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8135/addtag/" class="addtag" id="addtag_8135">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8135"
  >-</span><span
  class="button yellow"
  id="rating_z_8135"
  >0</span><span 
  class="button green"
  id="rating_p_8135"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8134/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8135/root/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8135/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8137">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/973/" target="_top">taninsw</a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8137/">#8137</a>(<script language="JavaScript">print_time(new Date("2008/12/12 16:27 GMT"));</script><noscript>2008/12/12 16:27 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>問題数の数え上げはわからないので、他の方にならって解答数だけ。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">List</span>

<span class="nv">tate</span>   <span class="nv">lines</span> <span class="o">=</span> <span class="nv">transpose</span> <span class="nv">lines</span>
<span class="nv">sikaku</span> <span class="nv">lines</span> <span class="o">=</span> <span class="kr">let</span> <span class="nv">a</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">splitAt</span> <span class="mi">2</span><span class="p">)</span> <span class="nv">lines</span>
                   <span class="nv">b</span> <span class="o">=</span> <span class="p">[</span><span class="nv">take</span> <span class="mi">2</span> <span class="nv">a</span><span class="p">,</span><span class="nv">drop</span> <span class="mi">2</span> <span class="nv">a</span><span class="p">]</span>
               <span class="kr">in</span> <span class="nv">concatMap</span> <span class="p">(</span><span class="o">\</span><span class="nv">x</span><span class="o">-&gt;</span><span class="p">[</span><span class="nv">concatMap</span> <span class="nv">fst</span> <span class="nv">x</span><span class="p">,</span><span class="nv">concatMap</span> <span class="nv">snd</span> <span class="nv">x</span><span class="p">])</span> <span class="nv">b</span>
  
<span class="nv">check</span> <span class="nv">lines</span> <span class="o">=</span> <span class="nv">and</span> <span class="o">$</span> <span class="nv">map</span> <span class="p">(</span><span class="o">\</span><span class="nv">f</span><span class="o">-&gt;</span> <span class="nv">and</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">all_different</span> <span class="p">(</span><span class="nv">f</span> <span class="nv">lines</span><span class="p">))</span> <span class="p">[</span><span class="nv">tate</span><span class="p">,</span><span class="nv">sikaku</span><span class="p">]</span>
<span class="nv">all_different</span> <span class="nv">xs</span> <span class="o">=</span> <span class="nv">nub</span> <span class="nv">xs</span> <span class="o">==</span> <span class="nv">xs</span>  

<span class="nv">everyline</span>  <span class="o">=</span> <span class="nv">filter</span> <span class="nv">all_different</span> <span class="o">$</span> <span class="nv">sequence</span> <span class="o">$</span> <span class="nv">replicate</span> <span class="mi">4</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="mi">4</span><span class="p">]</span>
<span class="nv">answers</span> <span class="o">=</span> <span class="nv">filter</span> <span class="nv">check</span> <span class="o">$</span> <span class="nv">sequence</span> <span class="o">$</span> <span class="nv">replicate</span> <span class="mi">4</span> <span class="nv">everyline</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">print</span> <span class="o">$</span> <span class="nv">length</span> <span class="o">$</span> <span class="nv">answers</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8137/addtag/" class="addtag" id="addtag_8137">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8137/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8137/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8137"
  >-</span><span
  class="button yellow"
  id="rating_z_8137"
  >0</span><span 
  class="button green"
  id="rating_p_8137"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8137/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8145">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/960/" target="_top">nyoro2</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8145/">#8145</a>(<script language="JavaScript">print_time(new Date("2008/12/13 01:51 GMT"));</script><noscript>2008/12/13 01:51 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>288通りの最終盤面を取得し（Sudoku2x2#next()）、
各マスの数字の有無の全パターン（2^16-2通り）について
問題が解けるかどうか（SudokuSolver2x2#solve()）調べています。
要は総当たりです。

私の環境では、実行完了まで3分以上かかっています。

エレガントからはほど遠いコードですが
答えまで出る投稿が少ないので、参考までに。

$ time java Sudoku2x2
1 0
2 0
3 0
4 25728
5 284160
6 1041408
7 2141184
8 2961024
9 2958336
10 2204928
11 1239552
12 522624
13 161280
14 34560
15 4608

real    3m7.374s
user    3m6.433s
sys     0m0.334s</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sudoku2x2</span> <span class="k">implements</span> <span class="n">Iterator</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">[]&gt;,</span> <span class="n">SudokuCommon2x2</span> <span class="o">{</span>

    <span class="k">private</span> <span class="kt">int</span> <span class="n">count</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">maxCount</span><span class="o">;</span>
    <span class="k">private</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">nextValue</span><span class="o">;</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">countUpAll</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">countUpAll</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">Sudoku2x2</span> <span class="n">sudoku</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sudoku2x2</span><span class="o">();</span>
        <span class="n">SudokuSolver2x2</span> <span class="n">solver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SudokuSolver2x2</span><span class="o">();</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">counter</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">16</span><span class="o">];</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">,</span> <span class="n">nums2</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">16</span><span class="o">];</span>
        
        <span class="k">while</span> <span class="o">(</span><span class="n">sudoku</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">nums</span> <span class="o">=</span> <span class="n">sudoku</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
            
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mh">0xffff</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="n">Arrays</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="n">nums2</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
                <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">16</span><span class="o">;</span> <span class="o">++</span><span class="n">j</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="mi">0</span><span class="o">&lt;(</span><span class="n">i</span><span class="o">&amp;(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">j</span><span class="o">)))</span> <span class="o">{</span>
                        <span class="n">nums2</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">nums</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
                        <span class="o">++</span><span class="n">n</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
                <span class="k">if</span><span class="o">(</span><span class="n">solver</span><span class="o">.</span><span class="na">solve</span><span class="o">(</span><span class="n">nums2</span><span class="o">))</span> <span class="o">++</span><span class="n">counter</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
            <span class="o">}</span>
        <span class="o">}</span>
        
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">15</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="n">counter</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="n">Sudoku2x2</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">maxCount</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="n">DIGITS_PATTERN</span><span class="o">.</span><span class="na">length</span><span class="o">,</span> <span class="mi">4</span><span class="o">);</span>
        <span class="n">nextValue</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">16</span><span class="o">];</span>
        <span class="n">generateNext</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">boolean</span> <span class="n">hasNext</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">nextValue</span><span class="o">!=</span><span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">next</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">hasNext</span><span class="o">())</span> <span class="o">{</span>
            <span class="kt">int</span><span class="o">[]</span> <span class="n">returnValue</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">16</span><span class="o">];</span>
            <span class="n">System</span><span class="o">.</span><span class="na">arraycopy</span><span class="o">(</span><span class="n">nextValue</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">returnValue</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">16</span><span class="o">);</span>
            <span class="n">generateNext</span><span class="o">();</span>
            <span class="k">return</span> <span class="n">returnValue</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="n">NoSuchElementException</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="kt">void</span> <span class="n">generateNext</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">do</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">c0</span> <span class="o">=</span> <span class="n">count</span><span class="o">,</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">arraycopy</span><span class="o">(</span><span class="n">DIGITS_PATTERN</span><span class="o">[</span><span class="n">c0</span><span class="o">%</span><span class="mi">24</span><span class="o">],</span> <span class="mi">0</span><span class="o">,</span> <span class="n">nextValue</span><span class="o">,</span> <span class="n">i</span><span class="o">*</span><span class="mi">4</span><span class="o">,</span> <span class="mi">4</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">containsAllNumbers</span><span class="o">(</span><span class="n">nextValue</span><span class="o">,</span> <span class="n">BOX</span><span class="o">[</span><span class="mi">0</span><span class="o">]))</span> <span class="k">break</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">containsAllNumbers</span><span class="o">(</span><span class="n">nextValue</span><span class="o">,</span> <span class="n">BOX</span><span class="o">[</span><span class="mi">1</span><span class="o">]))</span> <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="n">c0</span> <span class="o">=</span> <span class="n">c0</span> <span class="o">/</span> <span class="mi">24</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="o">++</span><span class="n">count</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">while</span><span class="o">(</span>
            <span class="o">(</span>
            <span class="o">!</span><span class="n">containsAllNumbers</span><span class="o">(</span><span class="n">nextValue</span><span class="o">,</span> <span class="n">BOX</span><span class="o">[</span><span class="mi">2</span><span class="o">])</span>
            <span class="o">||</span> <span class="o">!</span><span class="n">containsAllNumbers</span><span class="o">(</span><span class="n">nextValue</span><span class="o">,</span> <span class="n">BOX</span><span class="o">[</span><span class="mi">3</span><span class="o">])</span>
            <span class="o">||</span> <span class="o">!</span><span class="n">containsAllNumbers</span><span class="o">(</span><span class="n">nextValue</span><span class="o">,</span> <span class="n">COLUMN</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span>
            <span class="o">||</span> <span class="o">!</span><span class="n">containsAllNumbers</span><span class="o">(</span><span class="n">nextValue</span><span class="o">,</span> <span class="n">COLUMN</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span>
            <span class="o">||</span> <span class="o">!</span><span class="n">containsAllNumbers</span><span class="o">(</span><span class="n">nextValue</span><span class="o">,</span> <span class="n">COLUMN</span><span class="o">[</span><span class="mi">2</span><span class="o">])</span>
            <span class="o">||</span> <span class="o">!</span><span class="n">containsAllNumbers</span><span class="o">(</span><span class="n">nextValue</span><span class="o">,</span> <span class="n">COLUMN</span><span class="o">[</span><span class="mi">3</span><span class="o">])</span>
            <span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">count</span> <span class="o">&lt;</span> <span class="n">maxCount</span>
        <span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">maxCount</span> <span class="o">&lt;=</span> <span class="n">count</span><span class="o">)</span> <span class="n">nextValue</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">private</span> <span class="k">static</span> <span class="kt">boolean</span> <span class="n">containsAllNumbers</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">block</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">test</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">index</span><span class="o">.</span><span class="na">length</span><span class="o">;++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">test</span> <span class="o">|=</span> <span class="mi">1</span><span class="o">&lt;&lt;(</span><span class="n">block</span><span class="o">[</span><span class="n">index</span><span class="o">[</span><span class="n">i</span><span class="o">]]-</span><span class="mi">1</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">test</span><span class="o">==</span><span class="mi">15</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">void</span> <span class="n">remove</span><span class="o">()</span> <span class="o">{</span> <span class="k">throw</span> <span class="k">new</span> <span class="n">UnsupportedOperationException</span><span class="o">();</span> <span class="o">}</span>
<span class="o">}</span>

<span class="k">class</span> <span class="nc">SudokuSolver2x2</span> <span class="k">implements</span> <span class="n">SudokuCommon2x2</span> <span class="o">{</span>
    <span class="n">SudokuCell</span><span class="o">[]</span> <span class="n">grid</span><span class="o">;</span>
    <span class="n">SudokuCell</span><span class="o">[][]</span> <span class="n">allBlocks</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">status</span><span class="o">;</span>
    
    <span class="n">SudokuSolver2x2</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">grid</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SudokuCell</span><span class="o">[</span><span class="mi">16</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">grid</span><span class="o">.</span><span class="na">length</span><span class="o">;++</span><span class="n">i</span><span class="o">)</span> <span class="n">grid</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SudokuCell</span><span class="o">();</span>
        <span class="n">allBlocks</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SudokuCell</span><span class="o">[][]</span> <span class="o">{</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">BOX</span><span class="o">[</span><span class="mi">0</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">BOX</span><span class="o">[</span><span class="mi">1</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">BOX</span><span class="o">[</span><span class="mi">2</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">BOX</span><span class="o">[</span><span class="mi">3</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">COLUMN</span><span class="o">[</span><span class="mi">0</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">COLUMN</span><span class="o">[</span><span class="mi">1</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">COLUMN</span><span class="o">[</span><span class="mi">2</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">COLUMN</span><span class="o">[</span><span class="mi">3</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">ROW</span><span class="o">[</span><span class="mi">0</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">ROW</span><span class="o">[</span><span class="mi">1</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">ROW</span><span class="o">[</span><span class="mi">2</span><span class="o">]),</span>
            <span class="n">getBlock</span><span class="o">(</span><span class="n">ROW</span><span class="o">[</span><span class="mi">3</span><span class="o">])</span>
        <span class="o">};</span>
    <span class="o">}</span>
        
    <span class="k">public</span> <span class="kt">boolean</span> <span class="n">solve</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">status</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">grid</span><span class="o">.</span><span class="na">length</span><span class="o">;++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">grid</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">value</span> <span class="o">=</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">?</span><span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">]:</span><span class="mi">0</span><span class="o">;</span>
            <span class="n">grid</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">possibleList</span> <span class="o">=</span> <span class="mi">0</span><span class="o">&lt;</span><span class="n">grid</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">value</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">15</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">solveInner</span><span class="o">();</span>
            <span class="k">switch</span><span class="o">(</span><span class="n">status</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">case</span> <span class="o">-</span><span class="mi">1</span><span class="o">:</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span> <span class="c">// logical error</span>
                <span class="k">case</span>  <span class="mi">1</span><span class="o">:</span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>  <span class="c">// solved</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="k">protected</span> <span class="kt">void</span> <span class="n">solveInner</span><span class="o">()</span> <span class="o">{</span>
        <span class="kt">boolean</span> <span class="n">modified</span> <span class="o">=</span> <span class="kc">false</span><span class="o">,</span> <span class="n">solved</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">test</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">allBlocks</span><span class="o">.</span><span class="na">length</span><span class="o">;++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">allBlocks</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;++</span><span class="n">j</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">modified</span> <span class="o">|=</span> <span class="n">allBlocks</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">updatePossibleList</span><span class="o">(</span><span class="n">allBlocks</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                <span class="n">test</span> <span class="o">|=</span> <span class="mi">1</span><span class="o">&lt;&lt;(</span><span class="n">allBlocks</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">value</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="n">solved</span> <span class="o">&amp;=</span> <span class="o">(</span><span class="n">test</span><span class="o">==</span><span class="mi">15</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(!</span><span class="n">modified</span><span class="o">&amp;&amp;!</span><span class="n">solved</span><span class="o">)</span> <span class="n">status</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">solved</span><span class="o">)</span> <span class="n">status</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">protected</span> <span class="n">SudokuCell</span><span class="o">[]</span> <span class="n">getBlock</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">indexes</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">SudokuCell</span><span class="o">[]</span> <span class="n">returnValue</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SudokuCell</span><span class="o">[</span><span class="n">indexes</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">indexes</span><span class="o">.</span><span class="na">length</span><span class="o">;++</span><span class="n">i</span><span class="o">)</span>
            <span class="n">returnValue</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">grid</span><span class="o">[</span><span class="n">indexes</span><span class="o">[</span><span class="n">i</span><span class="o">]];</span>
        <span class="k">return</span> <span class="n">returnValue</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">protected</span> <span class="k">class</span> <span class="nc">SudokuCell</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">value</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">possibleList</span><span class="o">;</span>
        
        <span class="k">public</span> <span class="kt">boolean</span> <span class="n">isPossible</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="mi">0</span><span class="o">&lt;</span><span class="n">i</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="mi">0</span><span class="o">&lt;(</span><span class="n">possibleList</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="o">&lt;&lt;(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)));</span>
        <span class="o">}</span>

        <span class="k">private</span> <span class="kt">void</span> <span class="n">setValue</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">value</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
            <span class="n">possibleList</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">public</span> <span class="kt">boolean</span> <span class="n">updatePossibleList</span><span class="o">(</span><span class="n">SudokuCell</span><span class="o">[]</span> <span class="n">sp</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">boolean</span> <span class="n">updated</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">sp</span><span class="o">.</span><span class="na">length</span><span class="o">;++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">==</span><span class="n">sp</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="k">continue</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">isPossible</span><span class="o">(</span><span class="n">sp</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">value</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">possibleList</span> <span class="o">&amp;=</span> <span class="o">~(</span><span class="mi">1</span><span class="o">&lt;&lt;(</span><span class="n">sp</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">value</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
                    <span class="n">updated</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">updated</span><span class="o">)</span> <span class="n">check</span><span class="o">();</span>
            <span class="k">return</span> <span class="n">updated</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">public</span> <span class="kt">void</span> <span class="n">check</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">value</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">switch</span><span class="o">(</span><span class="n">possibleList</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">case</span> <span class="mi">1</span><span class="o">:</span> <span class="n">setValue</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span> <span class="k">break</span><span class="o">;</span>
                    <span class="k">case</span> <span class="mi">2</span><span class="o">:</span> <span class="n">setValue</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span> <span class="k">break</span><span class="o">;</span>
                    <span class="k">case</span> <span class="mi">4</span><span class="o">:</span> <span class="n">setValue</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span> <span class="k">break</span><span class="o">;</span>
                    <span class="k">case</span> <span class="mi">8</span><span class="o">:</span> <span class="n">setValue</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span> <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="k">interface</span> <span class="n">SudokuCommon2x2</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">COLUMN</span> <span class="o">=</span> <span class="o">{</span>
        <span class="o">{</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">12</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">13</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">14</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">15</span> <span class="o">}</span>
    <span class="o">};</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">ROW</span> <span class="o">=</span> <span class="o">{</span>
        <span class="o">{</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">7</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">11</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">13</span><span class="o">,</span> <span class="mi">14</span><span class="o">,</span> <span class="mi">15</span> <span class="o">}</span>
    <span class="o">};</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">BOX</span> <span class="o">=</span> <span class="o">{</span>
        <span class="o">{</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">7</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">13</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">14</span><span class="o">,</span> <span class="mi">15</span> <span class="o">}</span>
    <span class="o">};</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">DIGITS_PATTERN</span> <span class="o">=</span> <span class="o">{</span>
        <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">},</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">},</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">},</span>
        <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">2</span><span class="o">},</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">},</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">},</span>
        <span class="o">{</span><span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">},</span> <span class="o">{</span><span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">},</span> <span class="o">{</span><span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">4</span><span class="o">},</span>
        <span class="o">{</span><span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span> <span class="o">{</span><span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">},</span> <span class="o">{</span><span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span>
        <span class="o">{</span><span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">},</span> <span class="o">{</span><span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">2</span><span class="o">},</span> <span class="o">{</span><span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">4</span><span class="o">},</span>
        <span class="o">{</span><span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span> <span class="o">{</span><span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">},</span> <span class="o">{</span><span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span>
        <span class="o">{</span><span class="mi">4</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">},</span> <span class="o">{</span><span class="mi">4</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">},</span> <span class="o">{</span><span class="mi">4</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">},</span>
        <span class="o">{</span><span class="mi">4</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span> <span class="o">{</span><span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">},</span> <span class="o">{</span><span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">}</span>
    <span class="o">};</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8145/addtag/" class="addtag" id="addtag_8145">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8145/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8145/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8145"
  >-</span><span
  class="button yellow"
  id="rating_z_8145"
  >0</span><span 
  class="button green"
  id="rating_p_8145"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8145/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8180">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8180/">#8180</a>(<script language="JavaScript">print_time(new Date("2008/12/15 08:37 GMT"));</script><noscript>2008/12/15 08:37 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>総当りで遅いですがシンプルさで勝負。
目新しいのは配置を整数に対応させて整数の演算ですましている点です。

・マスに素数を対応させ配置を整数化する。
  （例えば [[4,1,3,2],[2,3,1,4],...] は 2^4*3^1*5^3*7^2*11^2*13^3*17^1*19^4*... に整数化）
・全解答288パターンは基本3パターン
   [[1,2,3,4],[3,4,1,2],[2,1,4,3],[4,3,2,1]]
   [[1,2,3,4],[3,4,1,2],[2,3,4,1],[4,1,2,3]]
   [[1,2,3,4],[3,4,2,1],[2,1,4,3],[4,3,1,2]]
  から３行目と４行目の交換、３列目と４列目の交換、
  [1,2,3,4]の順列的交換で生成。(288 = 3*2*2*24)
・必要なマスだけ取り出すには素数の４乗の積との最大公約数を使う。
  （例えば左上４つを取り出すには (2*3*7*11)^4 との最大公約数）
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span> <span class="p">(</span><span class="nv">group</span><span class="p">,</span><span class="nv">sort</span><span class="p">,</span><span class="nv">permutations</span><span class="p">)</span>

<span class="nv">ps</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">29</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">37</span><span class="p">,</span><span class="mi">41</span><span class="p">,</span><span class="mi">43</span><span class="p">,</span><span class="mi">47</span><span class="p">,</span><span class="mi">53</span><span class="p">]</span>
<span class="nv">ps4</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="o">^</span><span class="mi">4</span><span class="p">)</span> <span class="nv">ps</span>
<span class="nv">perm</span> <span class="o">=</span> <span class="nv">permutations</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">3</span><span class="p">]</span>
<span class="nv">exch</span> <span class="nv">rows</span> <span class="nv">cols</span> <span class="nv">js</span> <span class="o">=</span> <span class="p">[</span><span class="nv">js</span><span class="p">,</span> <span class="p">[</span><span class="nv">js</span><span class="o">!!</span><span class="p">(</span><span class="mi">4</span><span class="o">*</span><span class="nv">i</span><span class="o">+</span><span class="nv">j</span><span class="p">)</span><span class="o">|</span> <span class="nv">i</span> <span class="o">&lt;-</span> <span class="nv">rows</span><span class="p">,</span> <span class="nv">j</span> <span class="o">&lt;-</span> <span class="nv">cols</span><span class="p">]]</span>
<span class="nv">bs</span> <span class="o">=</span> <span class="kr">do</span>
  <span class="nv">as</span> <span class="o">&lt;-</span> <span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span>
         <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span>
         <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]]</span>
         <span class="o">&gt;&gt;=</span> <span class="nv">exch</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">3</span><span class="p">]</span> <span class="o">&gt;&gt;=</span> <span class="nv">exch</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">3</span><span class="p">]</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>
  <span class="nv">js</span> <span class="o">&lt;-</span> <span class="nv">perm</span>
  <span class="nv">return</span> <span class="o">$</span> <span class="nv">product</span> <span class="o">$</span> <span class="nv">zipWith</span> <span class="p">(</span><span class="o">^</span><span class="p">)</span> <span class="nv">ps</span> <span class="o">$</span> <span class="nv">map</span> <span class="p">((</span><span class="mi">1</span><span class="o">+</span><span class="p">)</span><span class="o">.</span><span class="p">(</span><span class="nv">js</span><span class="o">!!</span><span class="p">))</span> <span class="nv">as</span>
<span class="nv">comb</span> <span class="mi">0</span> <span class="kr">_</span> <span class="o">=</span> <span class="p">[[]]</span>
<span class="nv">comb</span> <span class="kr">_</span> <span class="p">[]</span> <span class="o">=</span> <span class="p">[]</span>
<span class="nv">comb</span> <span class="nv">n</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="p">)</span> <span class="p">(</span><span class="nv">comb</span> <span class="p">(</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="nv">xs</span><span class="p">)</span> <span class="o">++</span> <span class="nv">comb</span> <span class="nv">n</span> <span class="nv">xs</span>

<span class="nv">solnum</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">length</span> <span class="o">$</span> <span class="nv">filter</span> <span class="p">(</span><span class="nv">null</span><span class="o">.</span><span class="nv">tail</span><span class="p">)</span>
  <span class="o">$</span> <span class="nv">group</span><span class="o">.</span><span class="nv">sort</span><span class="o">.</span><span class="p">(`</span><span class="nv">map</span><span class="p">`</span> <span class="nv">bs</span><span class="p">)</span><span class="o">.</span><span class="nv">gcd</span><span class="o">.</span><span class="nv">product</span> <span class="o">=&lt;&lt;</span> <span class="nv">comb</span> <span class="nv">n</span> <span class="nv">ps4</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">mapM</span> <span class="p">(</span><span class="o">\</span><span class="nv">i</span> <span class="o">-&gt;</span> <span class="nv">print</span> <span class="o">$</span> <span class="p">(</span><span class="nv">i</span><span class="p">,</span><span class="nv">solnum</span> <span class="nv">i</span><span class="p">))</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="mi">15</span><span class="p">]</span>

<span class="cm">{-</span>
<span class="cm">&gt; main</span>
<span class="cm">(1,0)</span>
<span class="cm">(2,0)</span>
<span class="cm">(3,0)</span>
<span class="cm">(4,25728)</span>
<span class="cm">(5,284160)</span>
<span class="cm">(6,1041408)</span>
<span class="cm">(7,2141184)</span>
<span class="cm">(8,2961024)</span>
<span class="cm">(9,2958336)</span>
<span class="cm">(10,2204928)</span>
<span class="cm">(11,1239552)</span>
<span class="cm">(12,522624)</span>
<span class="cm">(13,161280)</span>
<span class="cm">(14,34560)</span>
<span class="cm">(15,4608)</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8180/addtag/" class="addtag" id="addtag_8180">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8180/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8180/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8180"
  >-</span><span
  class="button yellow"
  id="rating_z_8180"
  >0</span><span 
  class="button green"
  id="rating_p_8180"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090512171057/http://ja.doukaku.org/comment/8180/">
    1
    reply
  </a>

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8180/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8202">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8202/">#8202</a>(<script language="JavaScript">print_time(new Date("2008/12/18 03:22 GMT"));</script><noscript>2008/12/18 03:22 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>#8180 の方法のままでは極小問題に挑むには時間がかかりすぎるので
高速化しました。[1,2,3,4]の順列的交換で移り合える配置は数独の
問題になるならないが一致するので配置を
[iが配置されているマスの素数の積 | i &lt;- [1..4]]
をソートした４つの整数に対応させます。
３０倍くらい高速化しました。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span> <span class="p">(</span><span class="nv">group</span><span class="p">,</span><span class="nv">sort</span><span class="p">,</span><span class="nv">elemIndices</span> <span class="p">)</span>

<span class="nv">ps</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">29</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">37</span><span class="p">,</span><span class="mi">41</span><span class="p">,</span><span class="mi">43</span><span class="p">,</span><span class="mi">47</span><span class="p">,</span><span class="mi">53</span><span class="p">]</span>
<span class="nv">exch</span> <span class="nv">rows</span> <span class="nv">cols</span> <span class="nv">js</span> <span class="o">=</span> <span class="p">[</span><span class="nv">js</span><span class="p">,</span> <span class="p">[</span><span class="nv">js</span><span class="o">!!</span><span class="p">(</span><span class="mi">4</span><span class="o">*</span><span class="nv">i</span><span class="o">+</span><span class="nv">j</span><span class="p">)</span><span class="o">|</span> <span class="nv">i</span> <span class="o">&lt;-</span> <span class="nv">rows</span><span class="p">,</span> <span class="nv">j</span> <span class="o">&lt;-</span> <span class="nv">cols</span><span class="p">]]</span>
<span class="nv">bs</span> <span class="o">=</span> <span class="kr">do</span>
  <span class="nv">as</span> <span class="o">&lt;-</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span>
         <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
         <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]]</span>
        <span class="o">&gt;&gt;=</span> <span class="nv">exch</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">3</span><span class="p">]</span> <span class="o">&gt;&gt;=</span> <span class="nv">exch</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">3</span><span class="p">]</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>
  <span class="nv">return</span> <span class="p">[</span><span class="nv">product</span> <span class="o">$</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">ps</span><span class="o">!!</span><span class="p">)</span> <span class="o">$</span> <span class="nv">elemIndices</span> <span class="nv">i</span> <span class="nv">as</span><span class="o">|</span> <span class="nv">i</span> <span class="o">&lt;-</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="mi">4</span><span class="p">]]</span>

<span class="nv">comb</span> <span class="mi">0</span> <span class="kr">_</span> <span class="o">=</span> <span class="p">[[]]</span>
<span class="nv">comb</span> <span class="kr">_</span> <span class="p">[]</span> <span class="o">=</span> <span class="p">[]</span>
<span class="nv">comb</span> <span class="nv">n</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="p">)</span> <span class="p">(</span><span class="nv">comb</span> <span class="p">(</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="nv">xs</span><span class="p">)</span> <span class="o">++</span> <span class="nv">comb</span> <span class="nv">n</span> <span class="nv">xs</span>

<span class="nv">solnum</span> <span class="nv">n</span> <span class="o">=</span> <span class="p">(</span><span class="mi">24</span><span class="o">*</span><span class="p">)</span> <span class="o">$</span> <span class="nv">length</span> <span class="o">$</span> <span class="nv">filter</span> <span class="p">(</span><span class="nv">null</span><span class="o">.</span><span class="nv">tail</span><span class="p">)</span> <span class="o">$</span> <span class="nv">concat</span>
  <span class="p">[</span><span class="nv">group</span> <span class="o">$</span> <span class="nv">filter</span> <span class="p">((</span><span class="o">/=</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="p">(</span><span class="o">!!</span><span class="mi">1</span><span class="p">))</span> <span class="o">$</span> <span class="nv">sort</span> <span class="o">$</span>
    <span class="nv">map</span> <span class="p">(</span><span class="nv">sort</span><span class="o">.</span><span class="nv">map</span> <span class="p">(</span><span class="nv">gcd</span> <span class="p">(</span><span class="nv">product</span> <span class="nv">x</span><span class="p">)))</span> <span class="nv">bs</span><span class="o">|</span> <span class="nv">x</span> <span class="o">&lt;-</span> <span class="nv">comb</span> <span class="nv">n</span> <span class="nv">ps</span><span class="p">]</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">mapM</span> <span class="p">(</span><span class="err">¥</span><span class="nv">i</span> <span class="o">-&gt;</span> <span class="nv">print</span> <span class="o">$</span> <span class="p">(</span><span class="nv">i</span><span class="p">,</span><span class="nv">solnum</span> <span class="nv">i</span><span class="p">))</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="mi">15</span><span class="p">]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8202/addtag/" class="addtag" id="addtag_8202">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8202/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8202/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8202"
  >-</span><span
  class="button yellow"
  id="rating_z_8202"
  >0</span><span 
  class="button green"
  id="rating_p_8202"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8180/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8202/root/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090512171057/http://ja.doukaku.org/comment/8202/">
    1
    reply
  </a>

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8202/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8206">
  <p class="banner"><a href="/web/20090512171057/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20090512171057/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8206/">#8206</a>(<script language="JavaScript">print_time(new Date("2008/12/19 04:43 GMT"));</script><noscript>2008/12/19 04:43 GMT</noscript>)
	
	
	
	[<a href="/web/20090512171057/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>極小配置問題数まで求めました。

・マスに素数を対応させ配置を４つの整数からなる組に対応させる。
・順列的交換で移り合うものは基本的に同一視する。
  （同一視が問題となる処理は filter ((/=1).(!!1).snd) の部分だけ）
  最終的には24(=4!)倍したものを問題個数とする。
・（同一視したうえでの）全解答12パターンは次の3パターン
   [[1,2,3,4],[3,4,1,2],[2,1,4,3],[4,3,2,1]]
   [[1,2,3,4],[3,4,1,2],[2,3,4,1],[4,1,2,3]]
   [[1,2,3,4],[3,4,2,1],[2,1,4,3],[4,3,1,2]]
  から３行目と４行目の交換、３列目と４列目の交換で生成する。
・必要なマスだけ取り出すにはマスに対応する素数の積との
  最大公約数を使う。（例えば左上４つを取り出すには 2*3*7*11 との最大公約数）
・各問題に対してその問題の解答が１２パターンのうちのどれに
  属するか記録しておく。
・問題はその問題のヒント個数より少ないヒント個数を持つどの
  極小配置も含まなければその問題も極小配置である。
・配置Ａが配置Ｂを含むかどうかはＡとＢの解答パターンが一致し
  Ａの４つの整数の積がＢの４つの整数の積で割り切れるかどうかで
  判断できる。

手元の Windowsマシンでの実行時間は約１０秒。

この結果が正しければ極小配置2×2数独問題のヒント個数は
４個から６個ということになります。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span> <span class="p">(</span><span class="nv">group</span><span class="p">,</span><span class="nv">sort</span><span class="p">,</span><span class="nv">elemIndices</span><span class="p">,</span><span class="nv">mapAccumL</span><span class="p">,</span><span class="nv">sortBy</span><span class="p">,</span><span class="nv">groupBy</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Array</span> <span class="p">(</span><span class="nv">accumArray</span><span class="p">,</span><span class="nv">elems</span><span class="p">)</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Ord</span> <span class="p">(</span><span class="nv">comparing</span><span class="p">)</span>

<span class="nv">ps</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">29</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">37</span><span class="p">,</span><span class="mi">41</span><span class="p">,</span><span class="mi">43</span><span class="p">,</span><span class="mi">47</span><span class="p">,</span><span class="mi">53</span><span class="p">]</span>
<span class="nv">exch</span> <span class="nv">rows</span> <span class="nv">cols</span> <span class="nv">js</span> <span class="o">=</span> <span class="p">[</span><span class="nv">js</span><span class="p">,</span> <span class="p">[</span><span class="nv">js</span><span class="o">!!</span><span class="p">(</span><span class="mi">4</span><span class="o">*</span><span class="nv">i</span><span class="o">+</span><span class="nv">j</span><span class="p">)</span><span class="o">|</span> <span class="nv">i</span> <span class="o">&lt;-</span> <span class="nv">rows</span><span class="p">,</span> <span class="nv">j</span> <span class="o">&lt;-</span> <span class="nv">cols</span><span class="p">]]</span>
<span class="nv">bs</span> <span class="o">=</span> <span class="kr">do</span>
  <span class="nv">as</span> <span class="o">&lt;-</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span>
         <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
         <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]]</span>
        <span class="o">&gt;&gt;=</span> <span class="nv">exch</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">3</span><span class="p">]</span> <span class="o">&gt;&gt;=</span> <span class="nv">exch</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">3</span><span class="p">]</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>
  <span class="nv">return</span> <span class="p">[</span><span class="nv">product</span> <span class="o">$</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">ps</span><span class="o">!!</span><span class="p">)</span> <span class="o">$</span> <span class="nv">elemIndices</span> <span class="nv">i</span> <span class="nv">as</span><span class="o">|</span> <span class="nv">i</span> <span class="o">&lt;-</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="mi">4</span><span class="p">]]</span>

<span class="nv">comb</span> <span class="mi">0</span> <span class="kr">_</span> <span class="o">=</span> <span class="p">[[]]</span>
<span class="nv">comb</span> <span class="kr">_</span> <span class="p">[]</span> <span class="o">=</span> <span class="p">[]</span>
<span class="nv">comb</span> <span class="nv">n</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">x</span><span class="o">:</span><span class="p">)</span> <span class="p">(</span><span class="nv">comb</span> <span class="p">(</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="nv">xs</span><span class="p">)</span> <span class="o">++</span> <span class="nv">comb</span> <span class="nv">n</span> <span class="nv">xs</span>

<span class="nv">problem</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="p">[(</span><span class="n">Int</span><span class="p">,[</span><span class="n">Integer</span><span class="p">])]</span>
<span class="nv">problem</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">map</span> <span class="nv">head</span> <span class="o">$</span> <span class="nv">filter</span> <span class="p">(</span><span class="nv">null</span><span class="o">.</span><span class="nv">tail</span><span class="p">)</span> <span class="o">$</span> <span class="nv">concat</span>
  <span class="p">[</span><span class="nv">groupBy</span> <span class="p">(</span><span class="o">\</span><span class="nv">a</span> <span class="nv">b</span> <span class="o">-&gt;</span> <span class="nv">snd</span> <span class="nv">a</span> <span class="o">==</span> <span class="nv">snd</span> <span class="nv">b</span><span class="p">)</span> <span class="o">$</span> <span class="nv">sortBy</span> <span class="p">(</span><span class="nv">comparing</span> <span class="nv">snd</span><span class="p">)</span>
    <span class="o">$</span> <span class="nv">filter</span> <span class="p">((</span><span class="o">/=</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="p">(</span><span class="o">!!</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="nv">snd</span><span class="p">)</span> <span class="o">$</span> <span class="nv">zip</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="p">]</span>
    <span class="o">$</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">sort</span><span class="o">.</span><span class="nv">map</span> <span class="p">(</span><span class="nv">gcd</span> <span class="p">(</span><span class="nv">product</span> <span class="nv">x</span><span class="p">)))</span> <span class="nv">bs</span><span class="o">|</span> <span class="nv">x</span> <span class="o">&lt;-</span> <span class="nv">comb</span> <span class="nv">n</span> <span class="nv">ps</span><span class="p">]</span>

<span class="nv">minimalProblem</span> <span class="o">::</span> <span class="p">[(</span><span class="n">Int</span><span class="p">,</span><span class="n">Int</span><span class="p">,</span><span class="n">Int</span><span class="p">)]</span>
<span class="nv">minimalProblem</span> <span class="o">=</span> <span class="nv">snd</span> <span class="o">$</span> <span class="nv">mapAccumL</span> <span class="nv">f</span> <span class="p">(</span><span class="nv">replicate</span> <span class="mi">12</span> <span class="p">[])</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">16</span><span class="p">]</span> <span class="kr">where</span>
  <span class="nv">f</span> <span class="nv">xss</span> <span class="nv">n</span> <span class="o">=</span> <span class="p">(</span><span class="nv">zipWith</span> <span class="p">(</span><span class="o">++</span><span class="p">)</span> <span class="nv">xss</span> <span class="nv">zss</span><span class="p">,</span> <span class="p">(</span><span class="nv">n</span><span class="p">,</span> <span class="mi">24</span><span class="o">*</span><span class="nv">length</span> <span class="nv">ys</span><span class="p">,</span>  <span class="mi">24</span><span class="o">*</span><span class="nv">length</span> <span class="p">(</span><span class="nv">concat</span> <span class="nv">zss</span><span class="p">)))</span> <span class="kr">where</span> 
    <span class="nv">ys</span> <span class="o">=</span> <span class="nv">problem</span> <span class="nv">n</span>
    <span class="nv">zss</span> <span class="o">=</span> <span class="nv">zipWith</span> <span class="nv">g</span> <span class="nv">xss</span> <span class="o">$</span> <span class="nv">elems</span>
           <span class="o">$</span> <span class="nv">accumArray</span> <span class="p">(</span><span class="o">\</span><span class="nv">a</span> <span class="nv">b</span> <span class="o">-&gt;</span> <span class="nv">product</span> <span class="nv">b</span><span class="o">:</span> <span class="nv">a</span><span class="p">)</span> <span class="p">[]</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">11</span><span class="p">)</span> <span class="nv">ys</span>
  <span class="nv">g</span> <span class="nv">xs</span> <span class="nv">ys</span> <span class="o">=</span> <span class="p">[</span><span class="nv">y</span><span class="o">|</span> <span class="nv">y</span> <span class="o">&lt;-</span> <span class="nv">ys</span><span class="p">,</span> <span class="nv">and</span> <span class="p">[</span><span class="nv">y</span> <span class="p">`</span><span class="nv">mod</span><span class="p">`</span> <span class="nv">x</span> <span class="o">/=</span> <span class="mi">0</span><span class="o">|</span> <span class="nv">x</span> <span class="o">&lt;-</span> <span class="nv">xs</span><span class="p">]]</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">mapM_</span> <span class="nv">print</span> <span class="nv">minimalProblem</span> 

<span class="cm">{-</span>
<span class="cm">&gt; main</span>
<span class="cm">(0,0,0)</span>
<span class="cm">(1,0,0)</span>
<span class="cm">(2,0,0)</span>
<span class="cm">(3,0,0)</span>
<span class="cm">(4,25728,25728)</span>
<span class="cm">(5,284160,58368)</span>
<span class="cm">(6,1041408,1536)</span>
<span class="cm">(7,2141184,0)</span>
<span class="cm">(8,2961024,0)</span>
<span class="cm">(9,2958336,0)</span>
<span class="cm">(10,2204928,0)</span>
<span class="cm">(11,1239552,0)</span>
<span class="cm">(12,522624,0)</span>
<span class="cm">(13,161280,0)</span>
<span class="cm">(14,34560,0)</span>
<span class="cm">(15,4608,0)</span>
<span class="cm">(16,288,0)</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512171057/http://ja.doukaku.org/comment/8206/addtag/" class="addtag" id="addtag_8206">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512171057/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8206/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512171057/http://ja.doukaku.org/comment/8206/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8206"
  >-</span><span
  class="button yellow"
  id="rating_z_8206"
  >0</span><span 
  class="button green"
  id="rating_p_8206"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8202/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512171057/http://ja.doukaku.org/comment/8206/root/"><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090512171057/http://ja.doukaku.org/220/reply_to/8206/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20090512171057if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20090512171057/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20090512171057/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20090512171057/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20090512171057/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20090512171057/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20090512171057/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20090512171057/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20090512171057/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090512171057/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090512171057/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20090512171057im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20090512171057/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20090512171057/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20090512171057/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20090512171057/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20090512171057/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20090512171057/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20090512171057/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20090512171057/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20090512171057im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20090512171057/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20090512171057/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20090512171057/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20090512171057js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 17:10:57 May 12, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:52:36 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
