
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
Meertens数
DouKaku? </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20081204130303cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20081204130303cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20081204130303cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20081204130303/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20081204130303/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20081204130303js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20081204130303js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20081204130303js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20081204130303js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app14.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/110\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "4";
var displayMonth = "Dec";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/110/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20081204130303" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080331050759/http://ja.doukaku.org/110/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="31 Mar 2008"><strong>MAR</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 13:03:03 Dec 4, 2008">DEC</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jan
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080331050759/http://ja.doukaku.org/110/flatten/" title="5:07:59 Mar 31, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 13:03:03 Dec 4, 2008">4</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20070513180302/http://ja.doukaku.org/110/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="13 May 2007"><strong>2007</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 13:03:03 Dec 4, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20081204130303*/http://ja.doukaku.org/110/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>4 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 4 Dec 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000001_2008:11:001000000001_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20081204130303/http://ja.doukaku.org/">DouKaku?</a><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png' alt=challenge>
<a href="/web/20081204130303/http://ja.doukaku.org/110/">Meertens数</a>
</h2>

    





<div class="comment" id="comment4710">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4710/">#4710</a>(<script language="JavaScript">print_time(new Date("2007/12/09 23:30 GMT"));</script><noscript>2007/12/09 23:30 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #bfffbf;">4/4=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <div class="section">
<p>お題#100「正整数のゲーデル数化？」で定義した goedel を適用すると自分自身になるような数，すなわち goedel (n) == n となるような正整数 n を見つける関数を定義してください．</p>
<p></p>
<p>このような数のことをMeertens数と言うそうです．</p>
<p></p>
<p>32bitsの符号なし整数(あるいは10進10桁整数)までの範囲で探すのにどのくらい計算時間がかかったかをCPUのスペックとともに教えてください．また，その実装で64bit符号なし整数(あるいは10進20桁整数)までの範囲で探すのにどのくらい計算時間がかかりそうか見積ってください(もちろん実際に計算して計算時間を示していただくのでもかまいません)．</p>
<p></p>
</div>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4710/addtag/" class="addtag" id="addtag_4710">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #bfffbf;"
  >4/4=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4710"
  >-</span><span
  class="button yellow"
  id="rating_z_4710"
  >0</span><span 
  class="button green"
  id="rating_p_4710"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4710/">
    1
    reply
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4710/">
  reply
  </a>]
  </div>
</div>
</div>




  
    <div class="indent compact" style="position: relative;">
      <img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/1x1dark_green.png" width=10 style="position: absolute;top:-10px;margin-left:8px;">
      





<div class="comment" id="comment4864">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4864/">#4864</a>(<script language="JavaScript">print_time(new Date("2007/12/18 04:12 GMT"));</script><noscript>2007/12/18 04:12 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>補足：</p>
<p>自分でやってみたHaskellでは30行ほどのプログラムで、10進10桁の範囲までの探索は ghci で 4.56秒(CPU Intel Core 2 Duo 2.6GHz)でした。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4864/addtag/" class="addtag" id="addtag_4864">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4864"
  >-</span><span
  class="button yellow"
  id="rating_z_4864"
  >0</span><span 
  class="button green"
  id="rating_p_4864"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4710/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4864/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4864/">
  reply
  </a>]
  </div>
</div>
</div>




  


    </div>
  



<div class="indent">
<a href="/web/20081204130303/http://ja.doukaku.org/110/post_comment/">
post comment
</a>
</div>


<h2>Posted feedbacks - Flatten</h2>
<a href="/web/20081204130303/http://ja.doukaku.org/110/nested/">Nested</a>
<a href="/web/20081204130303/http://ja.doukaku.org/110/">Hidden</a> 


  
  <br/>

  
  




<div class="comment" id="comment4864">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4864/">#4864</a>(<script language="JavaScript">print_time(new Date("2007/12/18 04:12 GMT"));</script><noscript>2007/12/18 04:12 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>補足：</p>
<p>自分でやってみたHaskellでは30行ほどのプログラムで、10進10桁の範囲までの探索は ghci で 4.56秒(CPU Intel Core 2 Duo 2.6GHz)でした。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4864/addtag/" class="addtag" id="addtag_4864">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4864"
  >-</span><span
  class="button yellow"
  id="rating_z_4864"
  >0</span><span 
  class="button green"
  id="rating_p_4864"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4710/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4864/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4864/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4865">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4865/">#4865</a>(<script language="JavaScript">print_time(new Date("2007/12/18 05:02 GMT"));</script><noscript>2007/12/18 05:02 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>(meertens n) で n 桁以下のものを探します。n=10 のとき、CLISP で1.6秒、SBCL で 0.5秒ほど(Celeron 2.66GHz)。</p>
<p>8～13 で試してみたところ桁数を1増やすごとにほぼ3倍になっているようなので、20桁の場合 SBCL なら単純計算で8時間ぐらいでしょうか。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre>(defconstant *primes*
  &#39;(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97))

(defun primes (n) (loop repeat n for p in *primes* collect p))
(defun basis (n) (loop repeat n for x = (expt 10 (1- n)) then (/ x 10) collect x))

(defun f (primes basis bound prod sum zero-ok)
  (if primes
      (loop for i from (if zero-ok 0 1) to 9
        as dp = (expt (car primes) i) and ds = (* i (car basis))
        while (&lt;= dp bound) nconc
        (f (cdr primes) (cdr basis) (floor bound dp)
           (* prod dp) (+ sum ds)
           t))
    (if (= prod sum) (list sum) nil)))

(defun meertens (n)
  (loop for i from 1 to n nconc (f (primes i) (basis i) (expt 10 i) 1 0 nil)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4865/addtag/" class="addtag" id="addtag_4865">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4865/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4865/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4865"
  >-</span><span
  class="button yellow"
  id="rating_z_4865"
  >0</span><span 
  class="button green"
  id="rating_p_4865"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4865/">
    2
    replies
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4865/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4866">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/374/" target="_top">omoikani</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4866/">#4866</a>(<script language="JavaScript">print_time(new Date("2007/12/18 10:28 GMT"));</script><noscript>2007/12/18 10:28 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/standardml/">
	  StandardML
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>MLtonでコンパイルして、符号無し32bit整数までで約2時間40分。64bitでは834174年。遅すぎですね。

  mlton meertes.sml
  ./meertes 4294967295</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre>fun goedel n = let
  open IntInf

  val p = [
     2,  3,  5,  7, 11, 13, 17, 19, 23, 29,
    31, 37, 41, 43, 47, 53, 59, 61, 67, 71
    ]
  val a = map (valOf o Int.fromString o str) ((explode o toString) n)
in
  ListPair.foldl (fn (x, y, z) =&gt; pow (x, y) * z) 1 (p, a)
end

fun meertens n = let
  fun loop i =
    if i &gt; n then ()
    else
      if goedel n = n then (print (IntInf.toString n ^ &quot;\n&quot;); loop (i + 1))
      else loop (i + 1)
  in
    loop 0
  end

val _ = (meertens o valOf o IntInf.fromString o hd o CommandLine.arguments) ()
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4866/addtag/" class="addtag" id="addtag_4866">Tags</a>:
	
    
    <a href="/web/20081204130303/http://ja.doukaku.org/tag/MLton/">MLton</a>
    
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/standardml/">
		StandardML
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4866/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4866/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4866"
  >-</span><span
  class="button yellow"
  id="rating_z_4866"
  >0</span><span 
  class="button green"
  id="rating_p_4866"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4866/">
    1
    reply
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4866/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4867">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/540/" target="_top">SiroKuro</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4867/">#4867</a>(<script language="JavaScript">print_time(new Date("2007/12/18 13:52 GMT"));</script><noscript>2007/12/18 13:52 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  うっかり&nbsp;"{0}"&nbsp;を書き忘れたまま実行して、２時間を棒に振りました。やりなおしやりなおし。<br/>32bit&nbsp;符号無し整数４２億９４９６万７２９６個を、実に２時間１分１８秒で総当たり完了。８桁の数が１個だけヒットしました。<br/>ちなみに&nbsp;64bit&nbsp;符号無しだと、およそ１００万年でしょうか。<br/><br/>……何かが根本的に間違っている気がします&nbsp;orz<br/>それから、明らかに&nbsp;num.ToString()&nbsp;と&nbsp;Math.Pow&nbsp;が遅いよなぁ……と。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">static</span> <span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span> <span class="k">{</span>
        <span class="n">DateTime</span> <span class="n">before</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">;</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;meertens = {0}&quot;</span><span class="p">,</span> <span class="kt">string</span><span class="p">.</span><span class="n">Join</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">,</span>
            <span class="n">Array</span><span class="p">.</span><span class="n">ConvertAll</span><span class="p">&lt;</span><span class="kt">long</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;(</span><span class="n">Meertens</span><span class="p">(),</span> <span class="k">delegate</span><span class="p">(</span><span class="kt">long</span> <span class="n">x</span><span class="p">)</span> <span class="k">{</span> <span class="k">return</span> <span class="n">x</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span> <span class="k">}</span><span class="p">)</span>
        <span class="p">));</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;time = {0}&quot;</span><span class="p">,</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span> <span class="p">-</span> <span class="n">before</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">static</span> <span class="kt">long</span><span class="p">[]</span> <span class="n">Meertens</span><span class="p">()</span> <span class="k">{</span>
        <span class="kt">int</span><span class="p">[]</span> <span class="n">primes</span> <span class="p">=</span> <span class="n">Primes</span><span class="p">(</span><span class="m">20</span><span class="p">);</span>
        <span class="n">List</span><span class="p">&lt;</span><span class="kt">long</span><span class="p">&gt;</span> <span class="n">meertens</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">long</span><span class="p">&gt;();</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">long</span> <span class="n">num</span> <span class="p">=</span> <span class="kt">uint</span><span class="p">.</span><span class="n">MaxValue</span><span class="p">;</span> <span class="m">0</span> <span class="p">&lt;=</span> <span class="n">num</span><span class="p">;</span> <span class="n">num</span><span class="p">--)</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">Goedel</span><span class="p">(</span><span class="n">num</span><span class="p">,</span> <span class="n">primes</span><span class="p">)</span> <span class="p">==</span> <span class="n">num</span><span class="p">)</span>
                <span class="n">meertens</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">num</span><span class="p">);</span>
        <span class="k">return</span> <span class="n">meertens</span><span class="p">.</span><span class="n">ToArray</span><span class="p">();</span>
    <span class="k">}</span>
    <span class="k">static</span> <span class="kt">double</span> <span class="nf">Goedel</span><span class="p">(</span><span class="kt">long</span> <span class="n">num</span><span class="p">,</span> <span class="kt">int</span><span class="p">[]</span> <span class="n">primes</span><span class="p">)</span> <span class="k">{</span>
        <span class="kt">double</span> <span class="n">goedel</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
        <span class="kt">string</span> <span class="n">numstr</span> <span class="p">=</span> <span class="n">num</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">numstr</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="n">goedel</span> <span class="p">*=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Pow</span><span class="p">(</span><span class="n">primes</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">numstr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">-</span> <span class="sc">&#39;0&#39;</span><span class="p">);</span>
        <span class="k">return</span> <span class="n">goedel</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="k">static</span> <span class="kt">int</span><span class="p">[]</span> <span class="n">Primes</span><span class="p">(</span><span class="kt">int</span> <span class="n">count</span><span class="p">)</span> <span class="k">{</span>
        <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">primes</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;();</span>
        <span class="n">primes</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="m">2</span><span class="p">);</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">num</span> <span class="p">=</span> <span class="m">3</span><span class="p">;</span> <span class="n">primes</span><span class="p">.</span><span class="n">Count</span> <span class="p">&lt;</span> <span class="n">count</span><span class="p">;</span> <span class="n">num</span> <span class="p">+=</span> <span class="m">2</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">foreach</span><span class="p">(</span><span class="kt">int</span> <span class="n">p</span> <span class="k">in</span> <span class="n">primes</span><span class="p">)</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">num</span> <span class="p">%</span> <span class="n">p</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
                    <span class="k">goto</span> <span class="n">SKIP</span><span class="p">;</span>
            <span class="n">primes</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">num</span><span class="p">);</span>
        <span class="n">SKIP</span><span class="p">:;</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="n">primes</span><span class="p">.</span><span class="n">ToArray</span><span class="p">();</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4867/addtag/" class="addtag" id="addtag_4867">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4867/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4867/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4867"
  >-</span><span
  class="button yellow"
  id="rating_z_4867"
  >0</span><span 
  class="button green"
  id="rating_p_4867"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4867/">
    2
    replies
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4867/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4870">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/374/" target="_top">omoikani</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4870/">#4870</a>(<script language="JavaScript">print_time(new Date("2007/12/18 16:17 GMT"));</script><noscript>2007/12/18 16:17 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>あ、CPUはPentiumD 3.0GHzです。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4870/addtag/" class="addtag" id="addtag_4870">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4870"
  >-</span><span
  class="button yellow"
  id="rating_z_4870"
  >0</span><span 
  class="button green"
  id="rating_p_4870"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4866/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4870/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4870/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4871">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/540/" target="_top">SiroKuro</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4871/">#4871</a>(<script language="JavaScript">print_time(new Date("2007/12/18 16:23 GMT"));</script><noscript>2007/12/18 16:23 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  とりあえず&nbsp;ToString&nbsp;使わないように改造してみた。３０秒速くなった。変化がねえ(；´Д｀)
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre><span class="gd">--- meertens.old.cs     Wed Dec 19 01:16:26 2007</span>
<span class="gi">+++ meertens.cs Wed Dec 19 01:17:20 2007</span>
<span class="gu">@@ -18,9 +18,10 @@</span>
     }
     static double Goedel(long num, int[] primes) {
         double goedel = 1;
<span class="gd">-        string numstr = num.ToString();</span>
<span class="gd">-        for(int i = 0; i &lt; numstr.Length; i++)</span>
<span class="gd">-            goedel *= Math.Pow(primes[i], numstr[i] - &#39;0&#39;);</span>
<span class="gi">+        for(int i = Length(num) - 1; 0 &lt;= i; i--) {</span>
<span class="gi">+            goedel *= Math.Pow(primes[i], num % 10);</span>
<span class="gi">+            num /= 10;</span>
<span class="gi">+        }</span>
         return goedel;
     }
     static int[] Primes(int count) {
<span class="gu">@@ -34,5 +35,14 @@</span>
         SKIP:;
         }
         return primes.ToArray();
<span class="gi">+    }</span>
<span class="gi">+    static int Length(long num) {</span>
<span class="gi">+        long num2 = 10;</span>
<span class="gi">+        int cnt = 1;</span>
<span class="gi">+        while(num2 &lt;= num) {</span>
<span class="gi">+            cnt++;</span>
<span class="gi">+            num2 *= 10;</span>
<span class="gi">+        }</span>
<span class="gi">+        return cnt;</span>
     }
 }
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4871/addtag/" class="addtag" id="addtag_4871">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4871/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4871/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4871"
  >-</span><span
  class="button yellow"
  id="rating_z_4871"
  >0</span><span 
  class="button green"
  id="rating_p_4871"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4867/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4871/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4871/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4872">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4872/">#4872</a>(<script language="JavaScript">print_time(new Date("2007/12/18 16:26 GMT"));</script><noscript>2007/12/18 16:26 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>とりあえず、再帰で書いてみた。
searchMeertens(n)でn桁の範囲で探索します。
8桁で一つ見つかりました。

8桁を調べるのに160秒かかりました。
桁数が上がるごとに10倍の計算量になるので、
10桁では4時間くらいかなぁ。

とりあえず、累乗計算をしないようにしたけど、これからどうしようかな。
もうちょっと枝が刈れそうな気がするけど。

Cで書けばもうちょっと早くなるかな。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">time</span>

<span class="k">def</span> <span class="nf">CreatePrimes</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">primes</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">c</span> <span class="o">=</span> <span class="mi">2</span>
    <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">primes</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">:</span>
        <span class="n">primes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">primes</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
            <span class="k">if</span> <span class="n">c</span><span class="o">%</span><span class="n">x</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">primes</span><span class="o">.</span><span class="n">pop</span><span class="p">();</span>
                <span class="k">break</span>
        <span class="n">c</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="n">primes</span>

<span class="k">def</span> <span class="nf">searchMeertens</span><span class="p">(</span><span class="n">keta</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">_search</span><span class="p">(</span><span class="n">keta</span><span class="p">,</span><span class="n">count</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">primes</span><span class="p">,</span><span class="n">first</span><span class="p">):</span>
        <span class="n">n</span> <span class="o">*=</span> <span class="mi">10</span>
        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">first</span><span class="p">,</span><span class="mi">10</span><span class="p">):</span>
            <span class="k">if</span> <span class="n">x</span><span class="p">:</span>
                <span class="n">r</span> <span class="o">*=</span> <span class="n">primes</span><span class="p">[</span><span class="n">count</span><span class="p">]</span>
                <span class="n">n</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">if</span> <span class="n">r</span> <span class="o">==</span> <span class="n">n</span><span class="p">:</span>
                <span class="k">print</span> <span class="s">&quot;Found Meertens.&quot;</span><span class="p">,</span><span class="n">n</span>
            <span class="k">if</span> <span class="n">keta</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">_search</span><span class="p">(</span><span class="n">keta</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">r</span> <span class="p">,</span><span class="n">n</span> <span class="p">,</span><span class="n">primes</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
    <span class="n">p</span> <span class="o">=</span> <span class="n">CreatePrimes</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
    <span class="n">_search</span><span class="p">(</span><span class="n">keta</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">p</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>


<span class="n">keta</span> <span class="o">=</span> <span class="mi">10</span>
<span class="n">t0</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
<span class="n">t1</span> <span class="o">=</span> <span class="n">t0</span>

<span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">keta</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
    <span class="n">searchMeertens</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
    <span class="k">print</span> <span class="n">n</span> <span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t1</span> <span class="p">,</span> <span class="s">&quot;sec&quot;</span>
    <span class="n">t1</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
    
<span class="k">print</span> <span class="s">&quot;total time&quot;</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t0</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4872/addtag/" class="addtag" id="addtag_4872">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4872/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4872/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4872"
  >-</span><span
  class="button yellow"
  id="rating_z_4872"
  >0</span><span 
  class="button green"
  id="rating_p_4872"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4872/">
    1
    reply
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4872/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4873">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/540/" target="_top">SiroKuro</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4873/">#4873</a>(<script language="JavaScript">print_time(new Date("2007/12/18 16:31 GMT"));</script><noscript>2007/12/18 16:31 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  あ、ごめんなさい。CPU&nbsp;は&nbsp;C2D&nbsp;の&nbsp;2.0GHz&nbsp;です。ただ優先度は通常以下で実行してました。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4873/addtag/" class="addtag" id="addtag_4873">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4873"
  >-</span><span
  class="button yellow"
  id="rating_z_4873"
  >0</span><span 
  class="button green"
  id="rating_p_4873"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4867/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4873/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4873/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4874">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4874/">#4874</a>(<script language="JavaScript">print_time(new Date("2007/12/18 17:09 GMT"));</script><noscript>2007/12/18 17:09 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Cで書き直したら恐ろしく速くなった。
10桁実行するのに176秒＠AthlonXP2500+
pythonで書いたのと比較して、だいたい100倍高速化した計算に。</p>
<p>ゲーテル数って10桁でintの範囲をあっさりと突破するのね・・・バグに気づかなかった。
unsigned long long int なんて初めて使ったよ。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;time.h&gt;</span>

<span class="kt">int</span> <span class="n">primes</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">29</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">37</span><span class="p">,</span><span class="mi">41</span><span class="p">,</span><span class="mi">43</span><span class="p">,</span><span class="mi">47</span><span class="p">,</span><span class="mi">53</span><span class="p">,</span><span class="mi">59</span><span class="p">,</span><span class="mi">61</span><span class="p">,</span><span class="mi">67</span><span class="p">,</span><span class="mi">71</span><span class="p">,</span><span class="mi">73</span><span class="p">,</span><span class="mi">79</span><span class="p">,</span><span class="mi">83</span><span class="p">,</span><span class="mi">89</span><span class="p">,</span><span class="mi">97</span><span class="p">};</span>

<span class="kt">void</span> <span class="n">searchMeertens</span><span class="p">(</span><span class="kt">int</span> <span class="n">keta</span><span class="p">,</span> <span class="kt">int</span> <span class="n">count</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="kt">int</span> <span class="n">r</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">first</span><span class="p">){</span>
    <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
    <span class="n">n</span> <span class="o">*=</span> <span class="mi">10</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="n">first</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span><span class="p">){</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span><span class="p">){</span>
            <span class="n">r</span> <span class="o">*=</span> <span class="n">primes</span><span class="p">[</span><span class="n">count</span><span class="p">];</span>
            <span class="n">n</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>    
        <span class="k">if</span> <span class="p">(</span><span class="n">r</span> <span class="o">==</span> <span class="n">n</span><span class="p">){</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Found Meertens %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">n</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">keta</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">){</span>
            <span class="n">searchMeertens</span><span class="p">(</span><span class="n">keta</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">count</span> <span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>


<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">keta</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
    <span class="n">time_t</span> <span class="n">t</span><span class="p">;</span>
    <span class="n">keta</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="n">keta</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span><span class="p">){</span>
        <span class="n">searchMeertens</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d %dsec</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">x</span><span class="p">,</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">)</span><span class="o">-</span><span class="n">t</span><span class="p">);</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;push anykey to exit.&quot;</span><span class="p">);</span>
    <span class="n">getchar</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4874/addtag/" class="addtag" id="addtag_4874">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4874/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4874/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4874"
  >-</span><span
  class="button yellow"
  id="rating_z_4874"
  >0</span><span 
  class="button green"
  id="rating_p_4874"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4872/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4874/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4874/">
    2
    replies
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4874/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4876">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4876/">#4876</a>(<script language="JavaScript">print_time(new Date("2007/12/18 19:03 GMT"));</script><noscript>2007/12/18 19:03 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>一応手元で11桁まで回り終わりましたが、
一桁増えると計算時間も10倍になりました。
(当然と言えば当然ですが)

なので、google先生に聞いたところ、20桁では
(176 * (10^10)) *秒 = 55 772.2258 年
だそうです。



</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4876/addtag/" class="addtag" id="addtag_4876">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4876"
  >-</span><span
  class="button yellow"
  id="rating_z_4876"
  >0</span><span 
  class="button green"
  id="rating_p_4876"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4874/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4876/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4876/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4877">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4877/">#4877</a>(<script language="JavaScript">print_time(new Date("2007/12/19 00:44 GMT"));</script><noscript>2007/12/19 00:44 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>少し効率化して時間が 2/3 程度になりました。寝てる間に20桁まで探させてみたところ約三時間で終わりましたが、結局一つしか見つからなくてちょっと残念です。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13</pre></td><td class="code"><div class="highlight"><pre>(defun f (primes basis bound prod sum zero-ok)
  (declare (optimize (speed 3) (safety 0))
           (type integer bound prod sum))
  (loop repeat (if zero-ok 10 9)
    with p fixnum = (car primes) and prest = (cdr primes)
    and b integer = (car basis) and brest = (cdr basis)
    for newbd integer = (if zero-ok bound (floor bound p)) then (floor newbd p)
    for newprod integer = (if zero-ok prod (* prod p)) then (* newprod p)
    for newsum integer = (if zero-ok sum (+ sum b)) then (+ newsum b)
    while (and (plusp newbd) (&lt;= newprod newsum)) nconc
    (if prest
        (f prest brest newbd newprod newsum t)
      (if (= newprod newsum) (list newsum) nil))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4877/addtag/" class="addtag" id="addtag_4877">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4877/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4877/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4877"
  >-</span><span
  class="button yellow"
  id="rating_z_4877"
  >0</span><span 
  class="button green"
  id="rating_p_4877"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4865/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4877/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4877/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4882">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4882/">#4882</a>(<script language="JavaScript">print_time(new Date("2007/12/19 05:17 GMT"));</script><noscript>2007/12/19 05:17 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Haskell の勉強にと移植してみました。GHCi で33秒とあんまり速くはありませんが、わりとすっきりしたコードになったので投稿してみます。ついでに中身について少し説明でも。</p>
<p>上の桁から順に決めていくのですが、その際に桁数を固定することでゲーデル数化する前と後の数(sum, prod)の両方を部分的に計算でき、枝刈りがやりやすくなります。</p>
<p>実際にやっているのは次の二つですが、他にも末尾の 0 の数で刈れたりするかもしれません。</p>
<ul class="simple">
<li>積&gt;和 になったら打ち切り(積のほうが速く増えるので)</li>
<li>bound にまだ決まっていない部分の積の上限を保持し、それを超えたら打ち切り</li>
</ul>
<p>後者のは実質「積が 10^i を超えたら」なのですが、上のようにした方が速いようです。(扱う数が fixnum に収まりやすい？)</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre><span class="nv">primes</span> <span class="o">=</span> <span class="nv">flip</span> <span class="nv">take</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">17</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span>
                     <span class="mi">31</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">41</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">47</span><span class="p">,</span> <span class="mi">53</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">61</span><span class="p">,</span> <span class="mi">67</span><span class="p">,</span> <span class="mi">71</span><span class="p">]</span>
<span class="nv">basis</span> <span class="nv">n</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="o">\</span><span class="nv">x</span> <span class="o">-&gt;</span> <span class="mi">10</span><span class="o">^</span><span class="nv">x</span><span class="p">)</span> <span class="p">[</span><span class="nv">n</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nv">n</span><span class="o">-</span><span class="mi">2</span><span class="o">..</span><span class="mi">0</span><span class="p">]</span>

<span class="nv">f</span> <span class="o">::</span> <span class="p">[</span><span class="n">Integer</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Integer</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">Integer</span> <span class="o">-&gt;</span> <span class="n">Integer</span> <span class="o">-&gt;</span> <span class="n">Integer</span> <span class="o">-&gt;</span> <span class="n">Integer</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Integer</span><span class="p">]</span>
<span class="nv">f</span> <span class="p">[]</span> <span class="p">[]</span> <span class="kr">_</span> <span class="nv">prod</span> <span class="nv">sum</span> <span class="kr">_</span>
    <span class="o">|</span> <span class="nv">prod</span> <span class="o">==</span> <span class="nv">sum</span> <span class="o">=</span> <span class="p">[</span><span class="nv">sum</span><span class="p">]</span>
    <span class="o">|</span> <span class="nv">otherwise</span>   <span class="o">=</span> <span class="p">[]</span>
<span class="nv">f</span> <span class="p">(</span><span class="nv">p</span><span class="o">:</span><span class="nv">ps</span><span class="p">)</span> <span class="p">(</span><span class="nv">b</span><span class="o">:</span><span class="nv">bs</span><span class="p">)</span> <span class="nv">bound</span> <span class="nv">prod</span> <span class="nv">sum</span> <span class="nv">start</span>
    <span class="o">|</span> <span class="nv">start</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nv">prod</span> <span class="o">&gt;</span> <span class="nv">sum</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">=</span>
        <span class="p">[</span><span class="nv">x</span> <span class="o">|</span> <span class="nv">i</span> <span class="o">&lt;-</span> <span class="p">[</span><span class="nv">start</span><span class="o">..</span><span class="mi">9</span><span class="p">],</span> <span class="nv">p</span><span class="o">^</span><span class="nv">i</span> <span class="o">&lt;=</span> <span class="nv">bound</span><span class="p">,</span>
             <span class="nv">x</span> <span class="o">&lt;-</span> <span class="nv">f</span> <span class="nv">ps</span> <span class="nv">bs</span> <span class="p">(</span><span class="nv">div</span> <span class="nv">bound</span> <span class="o">$</span> <span class="nv">p</span><span class="o">^</span><span class="nv">i</span><span class="p">)</span> <span class="p">(</span><span class="nv">prod</span> <span class="o">*</span> <span class="nv">p</span><span class="o">^</span><span class="nv">i</span><span class="p">)</span> <span class="p">(</span><span class="nv">sum</span> <span class="o">+</span> <span class="nv">b</span> <span class="o">*</span> <span class="nv">i</span><span class="p">)</span> <span class="mi">0</span><span class="p">]</span>

<span class="nv">meertens</span> <span class="nv">n</span> <span class="o">=</span> <span class="p">[</span><span class="nv">x</span> <span class="o">|</span> <span class="nv">i</span> <span class="o">&lt;-</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="nv">n</span><span class="p">],</span> <span class="nv">x</span> <span class="o">&lt;-</span> <span class="nv">f</span> <span class="p">(</span><span class="nv">primes</span> <span class="nv">i</span><span class="p">)</span> <span class="p">(</span><span class="nv">basis</span> <span class="nv">i</span><span class="p">)</span> <span class="p">(</span><span class="mi">10</span><span class="o">^</span><span class="nv">i</span><span class="p">)</span> <span class="mi">1</span> <span class="mi">0</span> <span class="mi">1</span><span class="p">]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4882/addtag/" class="addtag" id="addtag_4882">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4882/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4882/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4882"
  >-</span><span
  class="button yellow"
  id="rating_z_4882"
  >0</span><span 
  class="button green"
  id="rating_p_4882"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4865/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4882/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4882/">
    2
    replies
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4882/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4885">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4885/">#4885</a>(<script language="JavaScript">print_time(new Date("2007/12/19 10:09 GMT"));</script><noscript>2007/12/19 10:09 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>あーそうか。桁数を固定すればよかったのか。
そうすればかなりの量が枝狩りできますね。

桁数可変で探索してたから、枝がまったく狩れなかった。

ちょっと書き直してみよう。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4885/addtag/" class="addtag" id="addtag_4885">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4885"
  >-</span><span
  class="button yellow"
  id="rating_z_4885"
  >0</span><span 
  class="button green"
  id="rating_p_4885"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4882/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4885/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4885/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4886">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/596/" target="_top">梅紫蘇</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4886/">#4886</a>(<script language="JavaScript">print_time(new Date("2007/12/19 10:15 GMT"));</script><noscript>2007/12/19 10:15 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>多倍長演算を意識する・しないかで言語間の格差が出ますなぁ。</p>
<p>各桁の素数を0～9で乗算したテーブル作成＋論理演算＋枝切り。
残念ながら20桁だとunsigned long long(64bit)を溢れてしまうので、19桁までしか計算できません。
これ以上は面倒なので勘弁してくださいorz</p>
<p>10桁の計算結果は、1つ(81312000)。
計算時間は23.203[秒]（BITSET_SIZE=136, Pen4 3.06GHz, WinXP SP2, VS2005）。ゲーデル数チェック時に使用するbitset(のbit数)に依存する割合が高いので、適正なbit数にすればちょびっと速くなります（10桁を72bitで計算して10.156[秒]）。</p>
<p>枝切りもあるので断定できませんが、テーブル生成時間がほぼ0なので
20桁は10桁の時間×（10の10乗）ぐらいなのかなと。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;time.h&gt;</span>
<span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;bitset&gt;</span>

<span class="cp">#ifndef ARRAYSIZE</span>
<span class="cp">#define ARRAYSIZE(x)  (sizeof(x)/sizeof(x[0]))</span>
<span class="cp">#endif</span>

<span class="cp">#define BITSET_SIZE (64*2+8)</span>
<span class="c">//#define BITSET_SIZE (32*2+8)</span>

<span class="k">static</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">digit_base</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
<span class="mh">0x0000000000000001</span><span class="p">,</span> <span class="mh">0x000000000000000a</span><span class="p">,</span>
<span class="mh">0x0000000000000064</span><span class="p">,</span> <span class="mh">0x00000000000003E8</span><span class="p">,</span>
<span class="mh">0x0000000000002710</span><span class="p">,</span> <span class="mh">0x00000000000186A0</span><span class="p">,</span>
<span class="mh">0x00000000000F4240</span><span class="p">,</span> <span class="mh">0x0000000000989680</span><span class="p">,</span>
<span class="mh">0x0000000005F5E100</span><span class="p">,</span> <span class="mh">0x000000003B9ACA00</span><span class="p">,</span>
<span class="mh">0x00000002540BE400</span><span class="p">,</span> <span class="mh">0x000000174876E800</span><span class="p">,</span>
<span class="mh">0x000000E8D4A51000</span><span class="p">,</span> <span class="mh">0x000009184E72A000</span><span class="p">,</span>
<span class="mh">0x00005AF3107A4000</span><span class="p">,</span> <span class="mh">0x00038D7EA4C68000</span><span class="p">,</span>
<span class="mh">0x002386F26FC10000</span><span class="p">,</span> <span class="mh">0x016345785D8A0000</span><span class="p">,</span>
<span class="mh">0x0DE0B6B3A7640000</span><span class="p">,</span> <span class="mh">0x8AC7230489E80000</span> <span class="p">};</span>

<span class="k">static</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">prime</span><span class="p">[</span><span class="mi">20</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
 <span class="mi">2</span><span class="p">,</span>  <span class="mi">3</span><span class="p">,</span>  <span class="mi">5</span><span class="p">,</span>  <span class="mi">7</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">17</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span>
<span class="mi">31</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">41</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">47</span><span class="p">,</span> <span class="mi">53</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">61</span><span class="p">,</span> <span class="mi">67</span><span class="p">,</span> <span class="mi">71</span> <span class="p">};</span>

<span class="k">static</span> <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">PRIME_TABLE</span><span class="p">[</span><span class="n">ARRAYSIZE</span><span class="p">(</span><span class="n">prime</span><span class="p">)][</span><span class="mi">10</span><span class="p">];</span>

<span class="kt">int</span> <span class="n">CompareBitset</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">BITSET_SIZE</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">n</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">n</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">!=</span> <span class="n">b</span><span class="p">[</span><span class="n">n</span><span class="p">])</span> <span class="p">{</span> <span class="k">return</span> <span class="n">a</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">bitset_add</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">c</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span> <span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">c</span><span class="p">.</span><span class="n">any</span><span class="p">())</span> <span class="p">{</span> <span class="k">return</span> <span class="n">bitset_add</span><span class="p">((</span><span class="n">a</span> <span class="o">^</span> <span class="n">b</span><span class="p">),</span> <span class="n">c</span><span class="p">);</span> <span class="p">}</span>
    <span class="k">else</span>         <span class="p">{</span> <span class="k">return</span> <span class="p">(</span><span class="n">a</span> <span class="o">^</span> <span class="n">b</span><span class="p">);</span> <span class="p">}</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">bitset_multi</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">ans</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">any</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">.</span><span class="n">any</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">a</span><span class="p">.</span><span class="n">any</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">BITSET_SIZE</span><span class="p">);</span> <span class="n">i</span><span class="o">++</span><span class="p">,</span> <span class="n">a</span> <span class="o">&lt;&lt;=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="p">{</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">bitset_add</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span> <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">bitset_pow</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">v</span><span class="p">((</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="p">)</span><span class="mi">1</span><span class="p">);</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">n</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">&amp;</span> <span class="mh">0x1</span><span class="p">)</span>       <span class="p">{</span> <span class="n">v</span> <span class="o">=</span> <span class="n">bitset_multi</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span> <span class="p">}</span>
        <span class="k">if</span> <span class="p">((</span><span class="n">n</span> <span class="o">/=</span> <span class="mi">2</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">a</span> <span class="o">=</span> <span class="n">bitset_multi</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">v</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">digit</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">n</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">base</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(;</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">base</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span> <span class="n">n</span> <span class="o">/=</span> <span class="n">base</span><span class="p">)</span> <span class="p">{</span> <span class="n">d</span><span class="o">++</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">return</span> <span class="n">d</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">ulonglong2bitset</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">v</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">high</span><span class="p">((</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="p">)(</span><span class="n">v</span> <span class="o">&gt;&gt;</span> <span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="n">v</span><span class="p">)</span><span class="o">*</span><span class="mi">4</span><span class="p">)));</span>
    <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">low</span><span class="p">((</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="p">)</span><span class="n">v</span><span class="p">);</span>
    <span class="k">return</span> <span class="p">((</span><span class="n">high</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="n">v</span><span class="p">)</span><span class="o">*</span><span class="mi">4</span><span class="p">))</span> <span class="o">|</span> <span class="n">low</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">InitPrimeTable</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">ARRAYSIZE</span><span class="p">(</span><span class="n">PRIME_TABLE</span><span class="p">);</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">ARRAYSIZE</span><span class="p">(</span><span class="n">PRIME_TABLE</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">PRIME_TABLE</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">bitset_pow</span><span class="p">(</span><span class="n">ulonglong2bitset</span><span class="p">(</span><span class="n">prime</span><span class="p">[</span><span class="n">i</span><span class="p">]),</span> <span class="n">j</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">CheckMeertensNumber</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">m</span> <span class="o">=</span> <span class="n">ulonglong2bitset</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
    <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">g</span><span class="p">(</span><span class="mi">1</span><span class="n">UL</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">digit</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span> <span class="n">d</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="n">d</span><span class="o">--</span><span class="p">,</span> <span class="n">n</span> <span class="o">/=</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">p</span> <span class="o">=</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="p">)(</span><span class="n">n</span> <span class="o">%</span> <span class="mi">10</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">CompareBitset</span><span class="p">(</span><span class="n">PRIME_TABLE</span><span class="p">[</span><span class="n">d</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">p</span><span class="p">],</span> <span class="n">m</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
        <span class="n">g</span> <span class="o">=</span> <span class="n">bitset_multi</span><span class="p">(</span><span class="n">g</span><span class="p">,</span> <span class="n">PRIME_TABLE</span><span class="p">[</span><span class="n">d</span> <span class="o">-</span> <span class="mi">1</span><span class="p">][</span><span class="n">p</span><span class="p">]);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">CompareBitset</span><span class="p">(</span><span class="n">g</span><span class="p">,</span> <span class="n">m</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="p">(</span><span class="n">m</span> <span class="o">==</span> <span class="n">g</span><span class="p">)</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">SearchMeertensNumber</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">base</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">d</span><span class="p">,</span> <span class="kt">int</span><span class="o">&amp;</span> <span class="n">cnt</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">d</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="n">CheckMeertensNumber</span><span class="p">(</span><span class="n">base</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">ret</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">base</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
            <span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">SearchMeertensNumber</span><span class="p">(</span><span class="n">base</span><span class="p">,</span> <span class="n">d</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">cnt</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">base</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">base</span> <span class="o">+=</span> <span class="n">digit_base</span><span class="p">[</span><span class="n">d</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">SearchMeertensNumber</span><span class="p">(</span><span class="n">base</span><span class="p">,</span> <span class="n">d</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">cnt</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span> <span class="p">{</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">nDigit</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">nCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;---&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;bitsize=&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">BITSET_SIZE</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;digit  =&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">nDigit</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>

    <span class="n">clock_t</span> <span class="n">st</span> <span class="o">=</span> <span class="n">clock</span><span class="p">();</span>
    <span class="n">InitPrimeTable</span><span class="p">();</span>
    <span class="n">clock_t</span> <span class="n">mt</span> <span class="o">=</span> <span class="n">clock</span><span class="p">();</span>
    <span class="n">SearchMeertensNumber</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">nDigit</span><span class="p">,</span> <span class="n">nCount</span><span class="p">);</span>
    <span class="n">clock_t</span> <span class="n">et</span> <span class="o">=</span> <span class="n">clock</span><span class="p">();</span>

    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;count=&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">nCount</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;init[s]:&quot;</span> <span class="o">&lt;&lt;</span> <span class="p">((</span><span class="kt">double</span><span class="p">)(</span><span class="n">mt</span><span class="o">-</span><span class="n">st</span><span class="p">)</span><span class="o">/</span><span class="n">CLOCKS_PER_SEC</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;calc[s]:&quot;</span> <span class="o">&lt;&lt;</span> <span class="p">((</span><span class="kt">double</span><span class="p">)(</span><span class="n">et</span><span class="o">-</span><span class="n">mt</span><span class="p">)</span><span class="o">/</span><span class="n">CLOCKS_PER_SEC</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;full[s]:&quot;</span> <span class="o">&lt;&lt;</span> <span class="p">((</span><span class="kt">double</span><span class="p">)(</span><span class="n">et</span><span class="o">-</span><span class="n">st</span><span class="p">)</span><span class="o">/</span><span class="n">CLOCKS_PER_SEC</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4886/addtag/" class="addtag" id="addtag_4886">Tags</a>:
	
    
    <a href="/web/20081204130303/http://ja.doukaku.org/tag/%E4%B8%AD%E9%80%94%E5%8D%8A%E7%AB%AF/">中途半端</a>
    
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4886/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4886/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4886"
  >-</span><span
  class="button yellow"
  id="rating_z_4886"
  >0</span><span 
  class="button green"
  id="rating_p_4886"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4886/">
    1
    reply
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4886/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4898">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/596/" target="_top">梅紫蘇</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4898/">#4898</a>(<script language="JavaScript">print_time(new Date("2007/12/20 08:52 GMT"));</script><noscript>2007/12/20 08:52 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>コンパイラの最適化具合によるかもしれませんが、リファクタリングによって少し速度が改善されたので訂正。</p>
<p>bitサイズ136で、10桁 5.25[秒]，11桁 19.75[秒]，12桁 66.343[秒]，13桁 222.078[秒]。
（ちなみにbitサイズ72で、10桁 3.469[秒]）</p>
<p>どうも1桁あたり10倍ではなく、3.5～4.0倍になってるようなので、20桁で18日～60日程度と予想（幅ありすぎ）。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre><span class="c">//ソースは置換する関数のみ</span>
<span class="cp">#include &lt;limits&gt;</span>

<span class="kt">int</span> <span class="n">CompareBitset</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">mask</span><span class="p">(</span> <span class="n">std</span><span class="o">::</span><span class="n">numeric_limits</span><span class="o">&lt;</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="o">&gt;::</span><span class="n">max</span><span class="p">()</span> <span class="p">);</span>
    <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">any</span><span class="p">()</span> <span class="o">||</span> <span class="n">b</span><span class="p">.</span><span class="n">any</span><span class="p">())</span> <span class="p">{</span>
        <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">an</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span> <span class="o">&amp;</span> <span class="n">mask</span><span class="p">).</span><span class="n">to_ulong</span><span class="p">();</span>
        <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">bn</span> <span class="o">=</span> <span class="p">(</span><span class="n">b</span> <span class="o">&amp;</span> <span class="n">mask</span><span class="p">).</span><span class="n">to_ulong</span><span class="p">();</span>
        <span class="k">if</span>      <span class="p">(</span><span class="n">an</span> <span class="o">&gt;</span> <span class="n">bn</span><span class="p">)</span> <span class="p">{</span> <span class="n">ans</span> <span class="o">=</span>  <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">an</span> <span class="o">&lt;</span> <span class="n">bn</span><span class="p">)</span> <span class="p">{</span> <span class="n">ans</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
        <span class="n">a</span> <span class="o">&gt;&gt;=</span> <span class="n">std</span><span class="o">::</span><span class="n">numeric_limits</span><span class="o">&lt;</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="o">&gt;::</span><span class="n">digits</span><span class="p">;</span>
        <span class="n">b</span> <span class="o">&gt;&gt;=</span> <span class="n">std</span><span class="o">::</span><span class="n">numeric_limits</span><span class="o">&lt;</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="o">&gt;::</span><span class="n">digits</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">bitset_multi</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">bitset</span><span class="o">&lt;</span><span class="n">BITSET_SIZE</span><span class="o">&gt;</span> <span class="n">ans</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(;</span><span class="n">a</span><span class="p">.</span><span class="n">any</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="p">.</span><span class="n">any</span><span class="p">();</span> <span class="n">b</span> <span class="o">&gt;&gt;=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">a</span> <span class="o">&lt;&lt;=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="p">{</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">bitset_add</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4898/addtag/" class="addtag" id="addtag_4898">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4898/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4898/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4898"
  >-</span><span
  class="button yellow"
  id="rating_z_4898"
  >0</span><span 
  class="button green"
  id="rating_p_4898"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4886/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4898/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4898/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4903">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/374/" target="_top">omoikani</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4903/">#4903</a>(<script language="JavaScript">print_time(new Date("2007/12/20 18:21 GMT"));</script><noscript>2007/12/20 18:21 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/standardml/">
	  StandardML
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>SMLにも移植。爆速になったけど、MLtonでもSBCLより遅い。。。
10桁で0.79秒、20桁で9時間56分。

  ./110 10  0.79s user 0.00s system 99% cpu 0.795 total
  ./110 20  35746.36s user 4.25s system 99% cpu 9:56:05.18 total</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre>val p = [
   2,  3,  5,  7, 11, 13, 17, 19, 23, 29,
  31, 37, 41, 43, 47, 53, 59, 61, 67, 71
  ] : IntInf.int list

fun basis n = (rev o map (fn x =&gt; IntInf.pow (10, x)) o List.tabulate) (n, fn x =&gt; x)

fun meertens n = let
  val lst = List.tabulate (n, fn x =&gt; x + 1)

  open IntInf

  fun loop _ [] _ prod sum _ =
    if prod = sum then print (toString sum ^ &quot;\n&quot;) else ()
    | loop (p::ps) (b::bs) bound prod sum start = let
      fun f x = let
        val pp = pow (p, x)
      in
        if pp &lt;= bound then
          loop ps bs (bound div pp) (prod * pp) (sum + b * fromInt x) 0
        else ()
      end

      open Int
      val lst = List.tabulate (10 - start, fn x =&gt; x + start)
    in
      app f lst
    end
in
  app (fn i =&gt; loop p (basis i) (IntInf.pow (10, i)) 1 0 1) lst
end

val _ = (meertens o valOf o Int.fromString o hd o CommandLine.arguments) ()
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4903/addtag/" class="addtag" id="addtag_4903">Tags</a>:
	
    
    <a href="/web/20081204130303/http://ja.doukaku.org/tag/MLton/">MLton</a>
    
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/standardml/">
		StandardML
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4903/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4903/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4903"
  >-</span><span
  class="button yellow"
  id="rating_z_4903"
  >0</span><span 
  class="button green"
  id="rating_p_4903"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4882/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4903/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4903/">
    1
    reply
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4903/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4905">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4905/">#4905</a>(<script language="JavaScript">print_time(new Date("2007/12/20 20:43 GMT"));</script><noscript>2007/12/20 20:43 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>とりあえず40秒くらいまで縮まったけど、
他の人が何で爆速なのかが分からない。
あとどんな枝狩りすりゃいいねん。

枝狩りで分岐予測がこける関係で、Pen4系では遅いと思う。

関数型言語は読めないよ・・・</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;time.h&gt;</span>

<span class="kt">int</span> <span class="n">primes</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">29</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">37</span><span class="p">,</span><span class="mi">41</span><span class="p">,</span><span class="mi">43</span><span class="p">,</span><span class="mi">47</span><span class="p">,</span><span class="mi">53</span><span class="p">,</span><span class="mi">59</span><span class="p">,</span><span class="mi">61</span><span class="p">,</span><span class="mi">67</span><span class="p">,</span><span class="mi">71</span><span class="p">,</span><span class="mi">73</span><span class="p">,</span><span class="mi">79</span><span class="p">,</span><span class="mi">83</span><span class="p">,</span><span class="mi">89</span><span class="p">,</span><span class="mi">97</span><span class="p">};</span>

<span class="kt">void</span> <span class="n">_searchMeertens</span><span class="p">(</span><span class="kt">int</span> <span class="n">keta</span><span class="p">,</span> <span class="kt">int</span> <span class="n">count</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="kt">int</span> <span class="n">r</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
    <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
    <span class="n">n</span> <span class="o">*=</span> <span class="mi">10</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="p">(</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">);</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span><span class="p">){</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">x</span><span class="p">){</span>
            <span class="n">r</span> <span class="o">*=</span> <span class="n">primes</span><span class="p">[</span><span class="n">count</span><span class="p">];</span>
            <span class="n">n</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>    
        <span class="k">if</span> <span class="p">(</span><span class="n">keta</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="n">r</span> <span class="o">&gt;</span> <span class="n">n</span><span class="p">){</span>        <span class="c">//枝狩り</span>
                <span class="k">return</span><span class="p">;</span>    
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">r</span> <span class="o">==</span> <span class="n">n</span><span class="p">){</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Found Meertens %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">n</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
            <span class="n">_searchMeertens</span><span class="p">(</span><span class="n">keta</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">count</span> <span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">searchMeertens</span><span class="p">(</span><span class="kt">int</span> <span class="n">keta</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
    <span class="n">time_t</span> <span class="n">t</span><span class="p">;</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">keta</span><span class="p">;</span> <span class="n">x</span><span class="o">++</span><span class="p">){</span>
        <span class="n">_searchMeertens</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;keta = %d time = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">)</span> <span class="o">-</span> <span class="n">t</span><span class="p">);</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">keta</span><span class="p">;</span>
    <span class="n">time_t</span> <span class="n">t</span><span class="p">;</span>

    <span class="n">keta</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
    <span class="n">searchMeertens</span><span class="p">(</span><span class="n">keta</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%dsec</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">)</span><span class="o">-</span><span class="n">t</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;push anykey to exit.&quot;</span><span class="p">);</span>
    <span class="n">getchar</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4905/addtag/" class="addtag" id="addtag_4905">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4905/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4905/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4905"
  >-</span><span
  class="button yellow"
  id="rating_z_4905"
  >0</span><span 
  class="button green"
  id="rating_p_4905"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4874/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4905/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4905/">
    1
    reply
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4905/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4908">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/596/" target="_top">梅紫蘇</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4908/">#4908</a>(<script language="JavaScript">print_time(new Date("2007/12/21 01:37 GMT"));</script><noscript>2007/12/21 01:37 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>r が、その桁の最大値を超えたときを狩れば結構削れますよ。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre>void _searchMeertens(int keta, int count, unsigned long long int r, unsigned long long int n, unsigned long long int nmax)
{
    int x;
    n *= 10;
    for (x = (count == 0); x &lt; 10; x++) {
        if (x) {
            r *= primes[count];
            if (r &gt; nmax)    /* 枝狩り2 */
                return;
            n++;
        }
        if (keta == 0) {
            if(r &gt; n)       /* 枝狩り*/
                return;
            if (r == n)
                printf(&quot;Found Meertens %d\n&quot;, n);
        }else{
            _searchMeertens(keta -1, count + 1, r, n, nmax);
        }
    }
}

void searchMeertens(int keta)
{
    int x;
    unsigned long long int nmax;
    time_t t;
    t = time(NULL);
    for (x = 0; x &lt; keta; x++) {
        nmax = (unsigned long long)pow(10.0, x + 1) - 1UL;
        _searchMeertens(x, 0, 1, 0, nmax);
        printf(&quot;keta = %d time = %d\n&quot;, x + 1, time(NULL) - t);
        t = time(NULL);
    }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4908/addtag/" class="addtag" id="addtag_4908">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4908/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4908/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4908"
  >-</span><span
  class="button yellow"
  id="rating_z_4908"
  >0</span><span 
  class="button green"
  id="rating_p_4908"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4905/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081204130303/http://ja.doukaku.org/comment/4908/root/"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081204130303/http://ja.doukaku.org/comment/4908/">
    1
    reply
  </a>

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4908/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4909">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4909/">#4909</a>(<script language="JavaScript">print_time(new Date("2007/12/21 02:30 GMT"));</script><noscript>2007/12/21 02:30 GMT</noscript>)
	
	
	
	[<a href="/web/20081204130303/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>ghcでコンパイルすると
桁数 : 時間
10 :   0.6s
11 :   1.9s
12 :   6.1s
13 :  18.0s
14 :  52.4s
15 : 150.1s
1桁増えるごとに約3倍 20桁なら10時間かな?

Meertens数は81312000しか知られていないらしいです。
他にあるかどうかも未知らしい。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Main</span> <span class="p">(</span><span class="nv">main</span><span class="p">)</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Tree</span>
<span class="kr">import</span> <span class="n">System</span><span class="o">.</span><span class="n">Environment</span>

<span class="nv">primes</span> <span class="o">::</span> <span class="p">[</span><span class="n">Integer</span><span class="p">]</span>
<span class="nv">primes</span> <span class="o">=</span> <span class="nv">sieve</span> <span class="p">[</span><span class="mi">2</span><span class="o">..</span><span class="p">]</span> <span class="kr">where</span> <span class="nv">sieve</span> <span class="p">(</span><span class="nv">p</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">p</span><span class="o">:</span><span class="nv">sieve</span> <span class="p">[</span><span class="nv">x</span> <span class="o">|</span> <span class="nv">x</span> <span class="o">&lt;-</span> <span class="nv">xs</span><span class="p">,</span> <span class="nv">x</span> <span class="p">`</span><span class="nv">mod</span><span class="p">`</span> <span class="nv">p</span> <span class="o">/=</span> <span class="mi">0</span><span class="p">]</span>

<span class="kr">type</span> <span class="n">Label</span> <span class="o">=</span> <span class="p">(</span><span class="n">Integer</span><span class="p">,</span> <span class="n">Integer</span><span class="p">)</span>

<span class="nv">powers</span> <span class="o">::</span> <span class="n">Integer</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Integer</span><span class="p">]</span>
<span class="nv">powers</span> <span class="o">=</span> <span class="nv">flip</span> <span class="nv">iterate</span> <span class="mi">1</span> <span class="o">.</span> <span class="p">(</span><span class="o">*</span><span class="p">)</span>

<span class="nv">mktree</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Label</span> <span class="o">-&gt;</span> <span class="p">[[</span><span class="n">Integer</span><span class="p">]]</span> <span class="o">-&gt;</span> <span class="n">Tree</span> <span class="n">Label</span>
<span class="nv">mktree</span> <span class="nv">k</span> <span class="nv">l</span> <span class="nv">pss</span> <span class="o">=</span> <span class="nv">unfoldTree</span> <span class="nv">phi</span> <span class="p">(</span><span class="nv">l</span><span class="p">,</span><span class="nv">pss</span><span class="p">)</span>
  <span class="kr">where</span> <span class="nv">phi</span> <span class="p">(</span><span class="nv">x</span><span class="p">,[])</span>     <span class="o">=</span> <span class="p">(</span><span class="nv">x</span><span class="p">,[])</span>
        <span class="nv">phi</span> <span class="p">(</span><span class="nv">x</span><span class="p">,</span><span class="nv">ps</span><span class="o">:</span><span class="nv">pps</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">x</span><span class="p">,</span><span class="nv">zip</span> <span class="p">(</span><span class="nv">labels</span> <span class="nv">x</span> <span class="nv">ps</span><span class="p">)</span> <span class="p">(</span><span class="nv">repeat</span> <span class="nv">pps</span><span class="p">))</span>
        <span class="nv">labels</span> <span class="p">(</span><span class="nv">n</span><span class="p">,</span><span class="nv">g</span><span class="p">)</span> <span class="nv">ps</span> <span class="o">=</span> <span class="nv">zip</span> <span class="p">(</span><span class="nv">map</span> <span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="nv">n</span> <span class="o">+</span><span class="p">)</span> <span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">9</span><span class="p">])</span> <span class="p">(</span><span class="nv">takeWhile</span> <span class="p">(</span><span class="mi">10</span><span class="o">^</span><span class="nv">k</span> <span class="o">&gt;</span><span class="p">)</span> <span class="p">(</span><span class="nv">map</span> <span class="p">(</span><span class="nv">g</span><span class="o">*</span><span class="p">)</span> <span class="nv">ps</span><span class="p">))</span>

<span class="nv">gtree</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="n">Tree</span> <span class="n">Label</span>
<span class="nv">gtree</span> <span class="nv">k</span> <span class="o">=</span> <span class="nv">snip</span> <span class="o">$</span> <span class="nv">mktree</span> <span class="nv">k</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">powers</span> <span class="o">$</span> <span class="nv">take</span> <span class="nv">k</span> <span class="nv">primes</span>
 <span class="kr">where</span> <span class="nv">snip</span> <span class="p">(</span><span class="n">Node</span> <span class="nv">x</span> <span class="nv">ts</span><span class="p">)</span> <span class="o">=</span> <span class="n">Node</span> <span class="nv">x</span> <span class="p">(</span><span class="nv">tail</span> <span class="nv">ts</span><span class="p">)</span>

<span class="nv">meertens</span> <span class="o">::</span> <span class="n">Int</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Integer</span><span class="p">]</span>
<span class="nv">meertens</span> <span class="nv">k</span> <span class="o">=</span> <span class="p">[</span> <span class="nv">n</span> <span class="o">|</span> <span class="p">(</span><span class="nv">n</span><span class="p">,</span><span class="nv">g</span><span class="p">)</span> <span class="o">&lt;-</span> <span class="nv">flatten</span> <span class="o">$</span> <span class="nv">gtree</span> <span class="nv">k</span><span class="p">,</span> <span class="nv">n</span> <span class="o">==</span> <span class="nv">g</span> <span class="p">]</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="nv">putStr</span> <span class="o">.</span> <span class="nv">unlines</span> <span class="o">.</span> <span class="nv">map</span> <span class="nv">show</span> <span class="o">.</span> <span class="nv">meertens</span> <span class="o">.</span> <span class="nv">read</span> <span class="o">.</span> <span class="nv">head</span> <span class="o">=&lt;&lt;</span> <span class="nv">getArgs</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4909/addtag/" class="addtag" id="addtag_4909">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081204130303/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4909/download/">
		download code
      </a>]
	  [<a href="/web/20081204130303/http://ja.doukaku.org/comment/4909/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4909"
  >-</span><span
  class="button yellow"
  id="rating_z_4909"
  >0</span><span 
  class="button green"
  id="rating_p_4909"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081204130303/http://ja.doukaku.org/110/reply_to/4909/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment4910">
  <p class="banner"><a href="/web/20081204130303/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081204130303/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081204130303im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4910/">#4910</a>(<script language="JavaScript">print_time(new Date("2007/12/21 02:54 GMT"));</script><noscript>2007/12/21 02:54 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>なるほどなーと納得しました。

手元の奴で10桁が1秒未満で完了した・・・。
確かにそうすればよかったのかと後悔してます。

ちなみに私の環境での実行結果。
あまり時間が無かったので、18桁まで実行させましたが、20桁は20分くらいですね。
なのでトータルタイムは30分くらいでしょうか。

keta = 1 time = 0
keta = 2 time = 0
keta = 3 time = 0
keta = 4 time = 0
keta = 5 time = 0
keta = 6 time = 0
keta = 7 time = 0
Found Meertens 81312000
keta = 8 time = 0
keta = 9 time = 0
keta = 10 time = 0
keta = 11 time = 0
keta = 12 time = 0
keta = 13 time = 1
keta = 14 time = 2
keta = 15 time = 6
keta = 16 time = 16
keta = 17 time = 45
keta = 18 time = 127</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081204130303/http://ja.doukaku.org/comment/4910/addtag/" class="addtag" id="addtag_4910">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4910"
  >-</span><span
  class="button yellow"
  id="rating_z_4910"
  >0</span><span 
  class="button green"
  id="rating_p_4910"
  >+</span></span></span>
  

<p>

  
  




<!--
     FILE ARCHIVED ON 13:03:03 Dec 4, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 13:26:13 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
