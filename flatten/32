
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
メソッド名一覧の表示
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20091214051829cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20091214051829cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20091214051829cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20091214051829/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20091214051829/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20091214051829js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20091214051829js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20091214051829js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20091214051829js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app18.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/32\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "14";
var displayMonth = "Dec";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/32/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20091214051829" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080406172359/http://ja.doukaku.org/32/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="6 Apr 2008"><strong>APR</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 5:18:29 Dec 14, 2009">DEC</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jan
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080406172359/http://ja.doukaku.org/32/flatten/" title="17:23:59 Apr 6, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 5:18:29 Dec 14, 2009">14</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080406172359/http://ja.doukaku.org/32/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="6 Apr 2008"><strong>2008</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 5:18:29 Dec 14, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20091214051829*/http://ja.doukaku.org/32/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>5 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 14 Dec 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000100_2008:-1:010100000000_2009:11:000000000001_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20091214051829/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20091214051829/http://ja.doukaku.org/32/">メソッド名一覧の表示</a>
</h2>

    





<div class="comment" id="comment3388">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/3388/">#3388</a>(<script language="JavaScript">print_time(new Date("2007/07/26 08:48 GMT"));</script><noscript>2007/07/26 08:48 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  リフレクション系のお題の続編です。
<p>
「ある与えられたオブジェクト<em>target</em>のメソッドのうち、
"test_"で始まるものをすべて呼びだす」というコードを書いてください。
引数に関しては都合のいいように仮定して構いません(全部0個、など)。
<p>
メソッドという概念がない言語の場合は、
「複数の関数への参照を持っているようなオブジェクト(たとえばパッケージとかモジュールとか)から"test_"で始まる関数をすべて呼び出す」と読み替えても構いません。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/3388/addtag/" class="addtag" id="addtag_3388">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3388"
  >-</span><span
  class="button yellow"
  id="rating_z_3388"
  >0</span><span 
  class="button green"
  id="rating_p_3388"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/3388/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20091214051829/http://ja.doukaku.org/32/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - フラット表示</h2>
<a href="/web/20091214051829/http://ja.doukaku.org/32/nested/">ネスト表示</a>
<a href="/web/20091214051829/http://ja.doukaku.org/32/">非表示</a> 


  
  




<div class="comment" id="comment1459">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1459/">#1459</a>(<script language="JavaScript">print_time(new Date("2007/07/26 09:19 GMT"));</script><noscript>2007/07/26 09:19 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">types</span>

<span class="k">class</span> <span class="nc">A</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">bar</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">test_bar</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">baz</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">test_baz</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">def</span> <span class="nf">foo</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span> <span class="s">&quot;foo&quot;</span>
    <span class="k">def</span> <span class="nf">test_foo</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span> <span class="s">&quot;test_foo&quot;</span>
    <span class="k">def</span> <span class="nf">boo</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span> <span class="s">&quot;boo&quot;</span>
    <span class="k">def</span> <span class="nf">test_boo</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span> <span class="s">&quot;test_boo&quot;</span>

<span class="k">def</span> <span class="nf">call_tests</span><span class="p">(</span><span class="n">obj</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="nb">dir</span><span class="p">(</span><span class="n">obj</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">name</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&quot;test_&quot;</span><span class="p">):</span>
            <span class="n">attr</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">attr</span><span class="p">,</span> <span class="n">types</span><span class="o">.</span><span class="n">MethodType</span><span class="p">):</span>
                <span class="n">attr</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">call_tests</span><span class="p">(</span><span class="n">A</span><span class="p">())</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1459/addtag/" class="addtag" id="addtag_1459">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1459/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1459/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1459"
  >-</span><span
  class="button yellow"
  id="rating_z_1459"
  >0</span><span 
  class="button green"
  id="rating_p_1459"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1459/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1459/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1461">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1461/">#1461</a>(<script language="JavaScript">print_time(new Date("2007/07/26 09:52 GMT"));</script><noscript>2007/07/26 09:52 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Foo</span>
  <span class="kp">private</span><span class="p">;</span>   <span class="k">def</span> <span class="nf">test_foo</span><span class="p">()</span>   <span class="nb">puts</span><span class="p">(</span><span class="s2">&quot;test_foo_private&quot;</span><span class="p">)</span> <span class="k">end</span>
  <span class="kp">public</span><span class="p">;</span>   <span class="k">def</span> <span class="nf">test_foo2</span><span class="p">()</span>   <span class="nb">puts</span><span class="p">(</span><span class="s2">&quot;test_foo_public&quot;</span><span class="p">)</span> <span class="k">end</span>
  <span class="kp">protected</span><span class="p">;</span> <span class="k">def</span> <span class="nf">test_fuga</span><span class="p">()</span>  <span class="nb">puts</span><span class="p">(</span><span class="s2">&quot;test_fuga&quot;</span><span class="p">)</span> <span class="k">end</span>
  <span class="kp">public</span><span class="p">;</span>    <span class="k">def</span> <span class="nf">public_foo</span><span class="p">()</span> <span class="nb">puts</span><span class="p">(</span><span class="s2">&quot;public_foo&quot;</span><span class="p">)</span>   <span class="k">end</span>
<span class="k">end</span>

<span class="n">obj</span> <span class="o">=</span> <span class="no">Foo</span><span class="o">.</span><span class="n">new</span>
<span class="o">[</span><span class="s2">&quot;methods&quot;</span><span class="p">,</span><span class="s2">&quot;private_methods&quot;</span><span class="o">].</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">m</span><span class="o">|</span> <span class="n">obj</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">m</span><span class="p">)</span><span class="o">.</span><span class="n">grep</span><span class="p">(</span><span class="sr">/^test_/</span><span class="p">)}</span><span class="o">.</span><span class="n">flatten</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">m</span><span class="o">|</span> <span class="n">obj</span><span class="o">.</span><span class="n">instance_eval</span> <span class="n">m</span><span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1461/addtag/" class="addtag" id="addtag_1461">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1461/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1461/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1461"
  >-</span><span
  class="button yellow"
  id="rating_z_1461"
  >0</span><span 
  class="button green"
  id="rating_p_1461"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1461/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1462">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/96/" target="_top">ether</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1462/">#1462</a>(<script language="JavaScript">print_time(new Date("2007/07/26 10:15 GMT"));</script><noscript>2007/07/26 10:15 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/tcl/">
	  Tcl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre>info commands target::test_*
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1462/addtag/" class="addtag" id="addtag_1462">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/tcl/">
		Tcl
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1462/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1462/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1462"
  >-</span><span
  class="button yellow"
  id="rating_z_1462"
  >0</span><span 
  class="button green"
  id="rating_p_1462"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1462/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1462/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1463">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/96/" target="_top">ether</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1463/">#1463</a>(<script language="JavaScript">print_time(new Date("2007/07/26 10:36 GMT"));</script><noscript>2007/07/26 10:36 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/tcl/">
	  Tcl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  呼び出すって実行するところまでだと気づいたので修正。引数はなしで。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre>foreach cmd [info commands target::test_*] { $cmd }
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1463/addtag/" class="addtag" id="addtag_1463">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/tcl/">
		Tcl
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1463/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1463/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1463"
  >-</span><span
  class="button yellow"
  id="rating_z_1463"
  >0</span><span 
  class="button green"
  id="rating_p_1463"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1462/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1463/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1463/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1464">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1464/">#1464</a>(<script language="JavaScript">print_time(new Date("2007/07/26 10:41 GMT"));</script><noscript>2007/07/26 10:41 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Common Lispのメソッドはクラス内の概念ではないので「複数の関数への参照を持っているようなオブジェクト(たとえばパッケージとかモジュールとか)から"test_"で始まる関数をすべて呼び出す」

関数名はLisp的にはtest-なんだけどね～
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre>(require :cl-ppcre)
(defun test_1 () 1)
(defun test_2 () 2)
(defun test_3 () 3)

(loop for f in (ppcre:regex-apropos-list &quot;^test_&quot; *package*)
   collect (cons f (funcall f)))        ; =&gt; ((TEST_1 . 1) (TEST_3 . 3) (TEST_2 . 2))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1464/addtag/" class="addtag" id="addtag_1464">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1464/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1464/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1464"
  >-</span><span
  class="button yellow"
  id="rating_z_1464"
  >0</span><span 
  class="button green"
  id="rating_p_1464"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1464/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1464/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1465">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/309/" target="_top">halt</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1465/">#1465</a>(<script language="JavaScript">print_time(new Date("2007/07/26 10:44 GMT"));</script><noscript>2007/07/26 10:44 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>get_class_methods関数を使うと簡単にメソッド一覧を取得できます。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">class</span> <span class="nc">Doukaku</span>
<span class="p">{</span>
    <span class="k">function</span> <span class="nf">Doukaku</span><span class="p">()</span>
    <span class="p">{</span>
    <span class="p">}</span>

    <span class="k">function</span> <span class="nf">test_Doukaku</span><span class="p">()</span>
    <span class="p">{</span>
    <span class="p">}</span>

    <span class="k">function</span> <span class="nf">hello</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;hello world!&quot;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">function</span> <span class="nf">test_hello</span><span class="p">()</span>
    <span class="p">{</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nv">$doukaku</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Doukaku</span><span class="p">();</span>
<span class="nv">$result</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nf">get_class_methods</span><span class="p">(</span><span class="nv">$doukaku</span><span class="p">)</span> <span class="k">as</span> <span class="nv">$method</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nf">strpos</span><span class="p">(</span><span class="nv">$method</span><span class="p">,</span> <span class="s2">&quot;test_&quot;</span><span class="p">)</span> <span class="o">===</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$result</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$method</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nf">var_dump</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1465/addtag/" class="addtag" id="addtag_1465">タグ</a>:
	
    
    <a href="/web/20091214051829/http://ja.doukaku.org/tag/miss/">miss</a>
    
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1465/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1465/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1465"
  >-</span><span
  class="button yellow"
  id="rating_z_1465"
  >0</span><span 
  class="button green"
  id="rating_p_1465"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1465/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1465/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1466">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/309/" target="_top">halt</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1466/">#1466</a>(<script language="JavaScript">print_time(new Date("2007/07/26 10:47 GMT"));</script><noscript>2007/07/26 10:47 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>実行するとこが抜けてたorz</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">class</span> <span class="nc">Doukaku</span>
<span class="p">{</span>
    <span class="k">function</span> <span class="nf">php</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;php</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">function</span> <span class="nf">test_php</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;test_php</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">function</span> <span class="nf">hello</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;hello</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">function</span> <span class="nf">test_hello</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;test_hello</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nv">$doukaku</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Doukaku</span><span class="p">();</span>
<span class="nv">$result</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nf">get_class_methods</span><span class="p">(</span><span class="nv">$doukaku</span><span class="p">)</span> <span class="k">as</span> <span class="nv">$method</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nf">strpos</span><span class="p">(</span><span class="nv">$method</span><span class="p">,</span> <span class="s2">&quot;test_&quot;</span><span class="p">)</span> <span class="o">===</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$doukaku</span><span class="o">-&gt;</span><span class="nv">$method</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="cp">?&gt;</span><span class="x"></span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1466/addtag/" class="addtag" id="addtag_1466">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1466/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1466/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1466"
  >-</span><span
  class="button yellow"
  id="rating_z_1466"
  >0</span><span 
  class="button green"
  id="rating_p_1466"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1465/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1466/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1466/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1466/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1467">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1467/">#1467</a>(<script language="JavaScript">print_time(new Date("2007/07/26 10:58 GMT"));</script><noscript>2007/07/26 10:58 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>setAccessibleしないといけないのがなんとも。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre>class Foo {
  private def test_foo = println(&quot;test_foo_private&quot;)
  def test_foo2 = println(&quot;test_foo_public&quot;)
  protected def test_fuga = println(&quot;test_fuga&quot;)
  def public_foo = println(&quot;public_foo&quot;)
}

val foo = new Foo
foo.getClass.getDeclaredMethods.filter(_.getName.startsWith(&quot;test_&quot;))
   .map(x=&gt;{x.setAccessible(true);x}).foreach(_.invoke(foo,Array()))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1467/addtag/" class="addtag" id="addtag_1467">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1467/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1467/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1467"
  >-</span><span
  class="button yellow"
  id="rating_z_1467"
  >0</span><span 
  class="button green"
  id="rating_p_1467"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1467/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1468">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/212/" target="_top">odz</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1468/">#1468</a>(<script language="JavaScript">print_time(new Date("2007/07/26 11:05 GMT"));</script><noscript>2007/07/26 11:05 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  inspect モジュールの出番。
classmethod も呼んでしまうのはどうにかならんかな。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">inspect</span>

<span class="k">def</span> <span class="nf">call_tests</span><span class="p">(</span><span class="n">target</span><span class="p">):</span>
    <span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="n">method</span> <span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">method</span> <span class="ow">in</span> <span class="n">inspect</span><span class="o">.</span><span class="n">getmembers</span><span class="p">(</span><span class="n">target</span><span class="p">,</span> <span class="n">inspect</span><span class="o">.</span><span class="n">ismethod</span><span class="p">)</span> <span class="k">if</span> <span class="n">name</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&#39;test_&#39;</span><span class="p">)]</span>
    <span class="k">for</span> <span class="n">method</span> <span class="ow">in</span> <span class="n">methods</span><span class="p">:</span> <span class="n">method</span><span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1468/addtag/" class="addtag" id="addtag_1468">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1468/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1468/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1468"
  >-</span><span
  class="button yellow"
  id="rating_z_1468"
  >0</span><span 
  class="button green"
  id="rating_p_1468"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1468/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1468/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1470">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/103/" target="_top">mimizu</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1470/">#1470</a>(<script language="JavaScript">print_time(new Date("2007/07/26 12:43 GMT"));</script><noscript>2007/07/26 12:43 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">TestMethods</span> <span class="o">{</span>
    
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">test</span><span class="o">(</span><span class="n">Object</span> <span class="n">target</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Class</span> <span class="n">targetClass</span> <span class="o">=</span> <span class="n">target</span><span class="o">.</span><span class="na">getClass</span><span class="o">();</span>
        <span class="n">Method</span><span class="o">[]</span> <span class="n">methods</span> <span class="o">=</span> <span class="n">targetClass</span><span class="o">.</span><span class="na">getDeclaredMethods</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">Method</span> <span class="n">method</span> <span class="o">:</span> <span class="n">methods</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">method</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;test_&quot;</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">try</span> <span class="o">{</span>
                    <span class="n">method</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">target</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">test</span><span class="o">(</span><span class="k">new</span> <span class="n">Test</span><span class="o">());</span>
    <span class="o">}</span>
    
<span class="o">}</span>

<span class="k">class</span> <span class="nc">Test</span> <span class="o">{</span>
    <span class="k">public</span> <span class="kt">void</span> <span class="n">test_public</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;public method&quot;</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">protected</span> <span class="kt">void</span> <span class="n">test_protected</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;protected method&quot;</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kt">void</span> <span class="n">test_package_private</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;package private method&quot;</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">void</span> <span class="n">test_private</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;private method&quot;</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1470/addtag/" class="addtag" id="addtag_1470">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1470/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1470/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1470"
  >-</span><span
  class="button yellow"
  id="rating_z_1470"
  >0</span><span 
  class="button green"
  id="rating_p_1470"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1470/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1470/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1471">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1471/">#1471</a>(<script language="JavaScript">print_time(new Date("2007/07/26 12:46 GMT"));</script><noscript>2007/07/26 12:46 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  上のコードをJavaScriptに移植。IE6とFirefox2で動作確認。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">A</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">bar</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">test_bar</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">baz</span> <span class="o">=</span> <span class="p">[];</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">test_baz</span> <span class="o">=</span> <span class="p">{};</span>
<span class="p">}</span>

<span class="nx">A</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">foo</span> <span class="o">=</span> <span class="k">function</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;foo&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">A</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">test_foo</span> <span class="o">=</span> <span class="k">function</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;test_foo&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">A</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">boo</span> <span class="o">=</span> <span class="k">function</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;boo&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">A</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">test_boo</span> <span class="o">=</span> <span class="k">function</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;test_boo&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">function</span> <span class="nx">call_tests</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="k">var</span> <span class="nx">name</span> <span class="k">in</span> <span class="nx">obj</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">var</span> <span class="nx">attr</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">name</span><span class="p">];</span>

        <span class="k">if</span> <span class="p">(</span><span class="nx">attr</span> <span class="k">instanceof</span> <span class="nb">Function</span> <span class="o">&amp;&amp;</span> <span class="nx">name</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;test_&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nx">attr</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nx">call_tests</span><span class="p">(</span><span class="k">new</span> <span class="nx">A</span><span class="p">());</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1471/addtag/" class="addtag" id="addtag_1471">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1471/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1471/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1471"
  >-</span><span
  class="button yellow"
  id="rating_z_1471"
  >0</span><span 
  class="button green"
  id="rating_p_1471"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1459/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1471/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1471/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1472">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1472/">#1472</a>(<script language="JavaScript">print_time(new Date("2007/07/26 12:49 GMT"));</script><noscript>2007/07/26 12:49 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Squeak Smalltalk で。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre>target class selectors select: [:sel | sel beginsWith: #test]
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1472/addtag/" class="addtag" id="addtag_1472">タグ</a>:
	
    
    <a href="/web/20091214051829/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1472/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1472/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1472"
  >-</span><span
  class="button yellow"
  id="rating_z_1472"
  >0</span><span 
  class="button green"
  id="rating_p_1472"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1472/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1472/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1474">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/78/" target="_top">morchin</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1474/">#1474</a>(<script language="JavaScript">print_time(new Date("2007/07/26 13:10 GMT"));</script><noscript>2007/07/26 13:10 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>以下の特徴を持つ。
・call_tests()の第一引数にはクラスとインスタンスのどちらでも渡せる。
・ベースクラスのメソッドも呼ぶか、指定したクラスのみのメソッドしか呼ばないかを指定可能。
・staticmethodを呼ぶかどうかを指定可能。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">types</span>

<span class="k">class</span> <span class="nc">A</span><span class="p">:</span>
	<span class="n">a1</span> <span class="o">=</span> <span class="mi">1</span>
	<span class="n">test_a1</span> <span class="o">=</span> <span class="mi">1</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">a2</span> <span class="o">=</span> <span class="mi">2</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">test_a2</span> <span class="o">=</span> <span class="mi">2</span>
	<span class="k">def</span> <span class="nf">a3</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">print</span> <span class="s">&quot;a3 called!&quot;</span>
	<span class="k">def</span> <span class="nf">test_a3</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">print</span> <span class="s">&quot;test_a3 called!&quot;</span>

<span class="k">class</span> <span class="nc">B</span><span class="p">(</span><span class="n">A</span><span class="p">):</span>
	<span class="k">def</span> <span class="nf">b1</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">print</span> <span class="s">&#39;b1 called!&#39;</span>
	<span class="k">def</span> <span class="nf">test_b1</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">print</span> <span class="s">&#39;test_b1 called!&#39;</span>
	<span class="nd">@staticmethod</span>
	<span class="k">def</span> <span class="nf">test_b2</span><span class="p">():</span>
		<span class="k">print</span> <span class="s">&#39;test_b2 called!&#39;</span>

<span class="k">def</span> <span class="nf">call_tests</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">single_level</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">call_static</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
	<span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">types</span><span class="o">.</span><span class="n">InstanceType</span><span class="p">):</span>
		<span class="n">cls</span> <span class="o">=</span> <span class="n">obj</span><span class="o">.</span><span class="n">__class__</span>
	<span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">types</span><span class="o">.</span><span class="n">ClassType</span><span class="p">):</span>
		<span class="n">cls</span> <span class="o">=</span> <span class="n">obj</span>
		<span class="n">obj</span> <span class="o">=</span> <span class="n">obj</span><span class="p">()</span>  <span class="c"># obj is bound to instance object.</span>
	<span class="k">else</span><span class="p">:</span>
		<span class="k">return</span>
	<span class="c"># make dict of attributes</span>
	<span class="n">names</span> <span class="o">=</span> <span class="n">cls</span><span class="o">.</span><span class="n">__dict__</span>
	<span class="k">for</span> <span class="n">base</span> <span class="ow">in</span> <span class="n">cls</span><span class="o">.</span><span class="n">__bases__</span><span class="p">:</span>
		<span class="n">names</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">base</span><span class="o">.</span><span class="n">__dict__</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">single_level</span><span class="p">:</span>
		<span class="k">for</span> <span class="n">base</span> <span class="ow">in</span> <span class="n">cls</span><span class="o">.</span><span class="n">__bases__</span><span class="p">:</span>
			<span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">base</span><span class="o">.</span><span class="n">__dict__</span><span class="p">:</span>
				<span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">base</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
					<span class="k">del</span> <span class="n">names</span><span class="p">[</span><span class="n">name</span><span class="p">]</span>
	<span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">sorted</span><span class="p">(</span><span class="n">names</span><span class="p">):</span>
		<span class="k">if</span> <span class="n">name</span><span class="p">[:</span><span class="mi">5</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;test_&#39;</span><span class="p">:</span>
			<span class="k">if</span> <span class="n">call_static</span><span class="p">:</span>
				<span class="k">try</span><span class="p">:</span>
					<span class="nb">getattr</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">name</span><span class="p">)()</span>  <span class="c"># EAFP</span>
				<span class="k">except</span><span class="p">:</span>
					<span class="k">continue</span>
			<span class="k">else</span><span class="p">:</span>
				<span class="n">f</span> <span class="o">=</span> <span class="n">names</span><span class="p">[</span><span class="n">name</span><span class="p">]</span>
				<span class="k">if</span> <span class="nb">callable</span><span class="p">(</span><span class="n">f</span><span class="p">):</span>
					<span class="n">f</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
	<span class="n">call_tests</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
	<span class="k">print</span> <span class="s">&#39;===&#39;</span>
	<span class="n">call_tests</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
	<span class="k">print</span> <span class="s">&#39;===&#39;</span>
	<span class="n">call_tests</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
	<span class="k">print</span> <span class="s">&#39;===&#39;</span>
	<span class="n">call_tests</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="c"># output:</span>
<span class="c"># test_a3 called!</span>
<span class="c"># test_b1 called!</span>
<span class="c"># ===</span>
<span class="c"># test_b1 called!</span>
<span class="c"># ===</span>
<span class="c"># test_a3 called!</span>
<span class="c"># test_b1 called!</span>
<span class="c"># test_b2 called!</span>
<span class="c"># ===</span>
<span class="c"># test_b1 called!</span>
<span class="c"># test_b2 called!</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1474/addtag/" class="addtag" id="addtag_1474">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1474/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1474/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1474"
  >-</span><span
  class="button yellow"
  id="rating_z_1474"
  >0</span><span 
  class="button green"
  id="rating_p_1474"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1474/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1474/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1476">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1476/">#1476</a>(<script language="JavaScript">print_time(new Date("2007/07/26 14:53 GMT"));</script><noscript>2007/07/26 14:53 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  引数つきのメソッドでも呼び出せるようにしてみました。プリミティブ型なら 0（または false）、参照型なら null を渡すようにしています。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">callTest</span><span class="o">(</span><span class="n">Object</span> <span class="n">target</span><span class="o">)</span> <span class="k">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="n">Class</span> <span class="n">c</span> <span class="o">=</span> <span class="n">target</span><span class="o">.</span><span class="na">getClass</span><span class="o">();</span>
        <span class="n">Method</span><span class="o">[]</span> <span class="n">ms</span> <span class="o">=</span> <span class="n">c</span><span class="o">.</span><span class="na">getMethods</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">ms</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">ms</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getName</span><span class="o">().</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;test_&quot;</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">Class</span><span class="o">[]</span> <span class="n">argTypes</span> <span class="o">=</span> <span class="n">ms</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getParameterTypes</span><span class="o">();</span>
                <span class="n">Object</span><span class="o">[]</span> <span class="n">args</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[</span><span class="n">argTypes</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
                <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">argTypes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">argTypes</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="n">Character</span><span class="o">.</span><span class="na">TYPE</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">args</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">Character</span><span class="o">.</span><span class="na">valueOf</span><span class="o">((</span><span class="kt">char</span><span class="o">)</span> <span class="mi">0</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">argTypes</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="n">Boolean</span><span class="o">.</span><span class="na">TYPE</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">args</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">Boolean</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">argTypes</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">isPrimitive</span><span class="o">())</span> <span class="o">{</span>
                        <span class="n">args</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">Byte</span><span class="o">.</span><span class="na">valueOf</span><span class="o">((</span><span class="kt">byte</span><span class="o">)</span><span class="mi">0</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="n">args</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
                <span class="n">ms</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">invoke</span><span class="o">(</span><span class="n">target</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">void</span> <span class="n">test_1</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;test_1 called&quot;</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="kt">int</span> <span class="n">test_2</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;test_2 called&quot;</span><span class="o">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">test_3</span><span class="o">(</span><span class="kt">char</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;test_3 called&quot;</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">void</span> <span class="n">test_4</span><span class="o">(</span><span class="kt">byte</span> <span class="n">by</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">b</span><span class="o">,</span> <span class="kt">short</span> <span class="n">s</span><span class="o">,</span> <span class="n">String</span> <span class="n">str</span><span class="o">,</span> <span class="kt">double</span> <span class="n">d</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;test_4 called&quot;</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="k">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="n">callTest</span><span class="o">(</span><span class="k">new</span> <span class="n">Sample</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1476/addtag/" class="addtag" id="addtag_1476">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1476/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1476/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1476"
  >-</span><span
  class="button yellow"
  id="rating_z_1476"
  >0</span><span 
  class="button green"
  id="rating_p_1476"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1476/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1477">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/172/" target="_top">cats</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1477/">#1477</a>(<script language="JavaScript">print_time(new Date("2007/07/26 14:59 GMT"));</script><noscript>2007/07/26 14:59 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Reflection</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
  <span class="k">class</span> <span class="nc">Test</span>
  <span class="k">{</span>
    <span class="k">void</span> <span class="nf">test_1</span><span class="p">()</span> <span class="k">{</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;1&quot;</span><span class="p">);</span> <span class="k">}</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">test_2</span><span class="p">()</span> <span class="k">{</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;2&quot;</span><span class="p">);</span> <span class="k">}</span>
  <span class="k">}</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
  <span class="k">{</span>
    <span class="n">CallTest</span><span class="p">(</span><span class="k">new</span> <span class="n">Test</span><span class="p">());</span>
  <span class="k">}</span>
  <span class="k">static</span> <span class="k">void</span> <span class="nf">CallTest</span><span class="p">(</span><span class="kt">object</span> <span class="n">o</span><span class="p">)</span>
  <span class="k">{</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="n">MethodInfo</span> <span class="n">mi</span> <span class="k">in</span> <span class="n">o</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">GetMethods</span><span class="p">(</span>
      <span class="n">BindingFlags</span><span class="p">.</span><span class="n">Public</span> <span class="p">|</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">NonPublic</span> <span class="p">|</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">Instance</span> <span class="p">|</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">Static</span><span class="p">))</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">mi</span><span class="p">.</span><span class="n">Name</span><span class="p">.</span><span class="n">StartsWith</span><span class="p">(</span><span class="s">&quot;test_&quot;</span><span class="p">))</span> <span class="n">mi</span><span class="p">.</span><span class="n">Invoke</span><span class="p">(</span><span class="n">o</span><span class="p">,</span> <span class="k">new</span> <span class="kt">object</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
  <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1477/addtag/" class="addtag" id="addtag_1477">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1477/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1477/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1477"
  >-</span><span
  class="button yellow"
  id="rating_z_1477"
  >0</span><span 
  class="button green"
  id="rating_p_1477"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1477/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1478">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1478/">#1478</a>(<script language="JavaScript">print_time(new Date("2007/07/26 15:01 GMT"));</script><noscript>2007/07/26 15:01 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  題意の解釈によって色々書き方があると思いますが、一例として。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre>obj &lt;- list(
        test_f1 = function(){ print(&quot;f1&quot;) }, # OK
        text_f2 = function(){ print(&quot;f2&quot;) }, # NG
        txet_f3 = function(){ print(&quot;f3&quot;) }, # NG
        tesx_f4 = function(){ print(&quot;f4&quot;) }, # NG
        test_f5 = function(){ print(&quot;f5&quot;) }, # OK
        test_f6 = &quot;f6&quot;                       # NG (not a function)
)

dummy &lt;- sapply(obj[grep(&quot;^test_&quot;, names(obj))], function(f){if(is.function(f)) f()})
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1478/addtag/" class="addtag" id="addtag_1478">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1478/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1478/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1478"
  >-</span><span
  class="button yellow"
  id="rating_z_1478"
  >0</span><span 
  class="button green"
  id="rating_p_1478"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1478/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1478/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1481">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/25/" target="_top">hamano</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1481/">#1481</a>(<script language="JavaScript">print_time(new Date("2007/07/26 18:37 GMT"));</script><noscript>2007/07/26 18:37 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #8fff8f;">7/7=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>C言語にメソッドはないので共有ライブラリの関数を列挙し、呼び出すようにしました。

1. 共有ライブラリをコンパイルします。
% gcc --shared call_tests.c -o tests.so

2. 本体をコンパイルします。
% gcc call_tests.c -o call_tests -ldl -lbfd

3. 実行します
% ./call_tests ./tests.so
hello2
hello1
hello3
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;dlfcn.h&gt;</span>
<span class="cp">#include &lt;bfd.h&gt;</span>

<span class="kt">void</span> <span class="nf">test_hello1</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;hello1</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">test_hello2</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;hello2</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">test_hello3</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;hello3</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[]){</span>
    <span class="kt">void</span> <span class="o">*</span><span class="n">handle</span><span class="p">;</span>
    <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">func</span><span class="p">)();</span>
    <span class="n">bfd</span> <span class="o">*</span><span class="n">abfd</span><span class="p">;</span>
    <span class="n">asymbol</span> <span class="o">*</span><span class="n">store</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">symcount</span><span class="p">;</span>
    <span class="kt">void</span> <span class="o">*</span><span class="n">minisyms</span><span class="p">;</span>
    <span class="n">size_t</span> <span class="n">size</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="n">bfd_byte</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="o">*</span><span class="n">fromend</span><span class="p">;</span>
    <span class="n">asymbol</span> <span class="o">*</span><span class="n">sym</span><span class="p">;</span>
    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>

    <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span> <span class="k">return</span> <span class="n">EXIT_FAILURE</span><span class="p">;</span>
    <span class="n">handle</span> <span class="o">=</span> <span class="n">dlopen</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">RTLD_LAZY</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">handle</span><span class="p">)</span> <span class="k">return</span> <span class="n">EXIT_FAILURE</span><span class="p">;</span>
    <span class="n">abfd</span> <span class="o">=</span> <span class="n">bfd_openr</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nb">NULL</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">abfd</span><span class="p">)</span> <span class="k">return</span> <span class="n">EXIT_FAILURE</span><span class="p">;</span>
    <span class="n">bfd_check_format</span><span class="p">(</span><span class="n">abfd</span><span class="p">,</span> <span class="n">bfd_object</span><span class="p">);</span>
    <span class="n">store</span> <span class="o">=</span> <span class="n">bfd_make_empty_symbol</span><span class="p">(</span><span class="n">abfd</span><span class="p">);</span>
    <span class="n">symcount</span> <span class="o">=</span> <span class="n">bfd_read_minisymbols</span><span class="p">(</span><span class="n">abfd</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">minisyms</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">size</span><span class="p">);</span>
    <span class="n">from</span> <span class="o">=</span> <span class="p">(</span><span class="n">bfd_byte</span> <span class="o">*</span><span class="p">)</span><span class="n">minisyms</span><span class="p">;</span>
    <span class="n">fromend</span> <span class="o">=</span> <span class="n">from</span> <span class="o">+</span> <span class="n">symcount</span> <span class="o">*</span> <span class="n">size</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(;</span> <span class="n">from</span> <span class="o">&lt;</span> <span class="n">fromend</span><span class="p">;</span> <span class="n">from</span> <span class="o">+=</span> <span class="n">size</span><span class="p">){</span>
        <span class="n">sym</span> <span class="o">=</span> <span class="n">bfd_minisymbol_to_symbol</span><span class="p">(</span><span class="n">abfd</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">from</span><span class="p">,</span> <span class="n">store</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="n">sym</span><span class="o">-&gt;</span><span class="n">flags</span> <span class="o">!=</span> <span class="p">(</span><span class="n">BSF_FUNCTION</span> <span class="o">|</span> <span class="n">BSF_GLOBAL</span><span class="p">))</span> <span class="k">continue</span><span class="p">;</span>
        <span class="n">name</span> <span class="o">=</span> <span class="n">bfd_asymbol_name</span><span class="p">(</span><span class="n">sym</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="s">&quot;test_&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span> <span class="k">continue</span><span class="p">;</span>
        <span class="n">func</span> <span class="o">=</span> <span class="n">dlsym</span><span class="p">(</span><span class="n">handle</span><span class="p">,</span> <span class="n">name</span><span class="p">);</span>
        <span class="n">func</span><span class="p">();</span>
    <span class="p">}</span>
    
    <span class="n">bfd_close</span><span class="p">(</span><span class="n">abfd</span><span class="p">);</span>
    <span class="n">dlclose</span><span class="p">(</span><span class="n">handle</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">EXIT_SUCCESS</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1481/addtag/" class="addtag" id="addtag_1481">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1481/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1481/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #8fff8f;"
  >7/7=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1481"
  >-</span><span
  class="button yellow"
  id="rating_z_1481"
  >0</span><span 
  class="button green"
  id="rating_p_1481"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1481/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1482">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/41/" target="_top">shiro</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1482/">#1482</a>(<script language="JavaScript">print_time(new Date("2007/07/26 18:38 GMT"));</script><noscript>2007/07/26 18:38 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>GaucheではCommonLispと同様に、メソッドはクラスでなく総称関数に所属します。
ここではモジュールの中から探してみることにします。

使い方の例:
(define-module foo
  (define (test_1) (print 1))
  (define (test_2) (print 2))
  (define test_3 "I'm variable!")
  (define (test_4) (print 4)))

(call-tests (find-module 'foo))
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">call-tests</span> <span class="nv">module</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">hash-table-for-each</span> <span class="p">(</span><span class="nf">module-table</span> <span class="nv">module</span><span class="p">)</span>
                       <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">k</span> <span class="nv">v</span><span class="p">)</span>
                         <span class="p">(</span><span class="nf">and-let*</span> <span class="p">(</span><span class="err">[</span> <span class="p">(</span><span class="o">#</span><span class="nv">/^test_/</span> <span class="p">(</span><span class="nf">x-&gt;string</span> <span class="nv">k</span><span class="p">))</span> <span class="err">]</span>
                                    <span class="err">[</span><span class="nv">val</span> <span class="p">(</span><span class="nf">global-variable-ref</span> <span class="nv">module</span> <span class="nv">k</span><span class="p">)</span><span class="err">]</span>
                                    <span class="err">[</span> <span class="p">(</span><span class="nb">procedure? </span><span class="nv">val</span><span class="p">)</span> <span class="err">]</span><span class="p">)</span>
                           <span class="p">(</span><span class="nf">val</span><span class="p">)))))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1482/addtag/" class="addtag" id="addtag_1482">タグ</a>:
	
    
    <a href="/web/20091214051829/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1482/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1482/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1482"
  >-</span><span
  class="button yellow"
  id="rating_z_1482"
  >0</span><span 
  class="button green"
  id="rating_p_1482"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1482/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1485">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/235/" target="_top">onjo</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1485/">#1485</a>(<script language="JavaScript">print_time(new Date("2007/07/26 20:28 GMT"));</script><noscript>2007/07/26 20:28 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  変数の定義でもシンボルはインターンされるので fboundp を。ついでに大文字小文字を区別する別回答。
funcall は関数を探しにいきますので symbol-function は不要ですがなんとなく。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="highlight"><pre>(defun call-test (pakcage)
  (do-symbols (symbol pakcage)
    (when (and (fboundp symbol) (ppcre:scan &quot;^test_&quot; (symbol-name symbol)))
      (format t &quot;~A =&gt; ~A~%&quot; symbol (funcall (symbol-function symbol))))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1485/addtag/" class="addtag" id="addtag_1485">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1485/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1485/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1485"
  >-</span><span
  class="button yellow"
  id="rating_z_1485"
  >0</span><span 
  class="button green"
  id="rating_p_1485"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1464/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1485/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1485/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1485/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1486">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/105/" target="_top">rubikitch</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1486/">#1486</a>(<script language="JavaScript">print_time(new Date("2007/07/26 20:45 GMT"));</script><noscript>2007/07/26 20:45 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  ぎゃぁ、fboundpが抜けてたorzorzorz
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre>(require :cl-ppcre)
(defun test_1 () 1)
(defun test_2 () 2)
(defun test_3 () 3)
(defparameter test_var 0)

(loop for f in (ppcre:regex-apropos-list &quot;^test_&quot; *package*)
   when (fboundp f)
   collect (cons f (funcall f)))        ; =&gt; ((TEST_1 . 1) (TEST_3 . 3) (TEST_2 . 2))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1486/addtag/" class="addtag" id="addtag_1486">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1486/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1486/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1486"
  >-</span><span
  class="button yellow"
  id="rating_z_1486"
  >0</span><span 
  class="button green"
  id="rating_p_1486"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1485/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1486/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1486/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1487">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/237/" target="_top">talo</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1487/">#1487</a>(<script language="JavaScript">print_time(new Date("2007/07/27 03:09 GMT"));</script><noscript>2007/07/27 03:09 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  setAccessible(true);
が抜けているので、 private メソッドを実行すると IllegalAccessException が発生すると思います。

もっとも、Exception を握りつぶしていらっしゃるので、実行結果からは private メソッドがスルーされているように見えますが。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1487/addtag/" class="addtag" id="addtag_1487">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1487"
  >-</span><span
  class="button yellow"
  id="rating_z_1487"
  >0</span><span 
  class="button green"
  id="rating_p_1487"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1470/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1487/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1487/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1488">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/78/" target="_top">morchin</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1488/">#1488</a>(<script language="JavaScript">print_time(new Date("2007/07/27 03:12 GMT"));</script><noscript>2007/07/27 03:12 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>以下を修正。
・cls.__bases__で、1つ上の階層のベースクラスしかとれていなかったので、再帰的にベースクラスを探すようにした。 
・継承階層で同じ名称のメソッドをオーバーライドしていた場合、一番子供側のメソッドを呼び出すようにした。 
・新型クラスに対して、 isinstance(obj, types.InstanceType) と isinstance(obj, types.ClassType) の
  両方ともFalseになってしまって対応していなかったので対応した。 
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">call_tests</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">single_level</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">call_static</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
    <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="s">&#39;__bases__&#39;</span><span class="p">):</span>
        <span class="c"># class object</span>
        <span class="n">cls</span> <span class="o">=</span> <span class="n">obj</span>
        <span class="n">obj</span> <span class="o">=</span> <span class="n">obj</span><span class="p">()</span>  <span class="c"># obj is bound to instance object.</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="s">&#39;__class__&#39;</span><span class="p">):</span> <span class="k">return</span>  <span class="c"># non class type</span>
        <span class="c"># instance object</span>
        <span class="n">cls</span> <span class="o">=</span> <span class="n">obj</span><span class="o">.</span><span class="n">__class__</span>
    
    <span class="c"># make dict of attributes</span>
    <span class="n">bases</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">def</span> <span class="nf">base_classes</span><span class="p">(</span><span class="n">cls</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">cls</span><span class="o">.</span><span class="n">__bases__</span><span class="p">:</span>
            <span class="n">bases</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">cls</span><span class="o">.</span><span class="n">__bases__</span><span class="p">)</span>
            <span class="k">for</span> <span class="n">base</span> <span class="ow">in</span> <span class="n">cls</span><span class="o">.</span><span class="n">__bases__</span><span class="p">:</span>
                <span class="n">base_classes</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
    <span class="n">base_classes</span><span class="p">(</span><span class="n">cls</span><span class="p">)</span>
    
    <span class="n">names</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="n">names</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">cls</span><span class="o">.</span><span class="n">__dict__</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">base</span> <span class="ow">in</span> <span class="n">bases</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">attr</span><span class="p">,</span> <span class="n">val</span> <span class="ow">in</span> <span class="n">base</span><span class="o">.</span><span class="n">__dict__</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="n">names</span><span class="o">.</span><span class="n">has_key</span><span class="p">(</span><span class="n">attr</span><span class="p">):</span>
                <span class="n">names</span><span class="p">[</span><span class="n">attr</span><span class="p">]</span> <span class="o">=</span> <span class="n">val</span>
    
    <span class="k">if</span> <span class="n">single_level</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">base</span> <span class="ow">in</span> <span class="n">bases</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">base</span><span class="o">.</span><span class="n">__dict__</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">names</span><span class="o">.</span><span class="n">has_key</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
                    <span class="k">del</span> <span class="n">names</span><span class="p">[</span><span class="n">name</span><span class="p">]</span>
    
    <span class="c"># call function of attributes</span>
    <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">sorted</span><span class="p">(</span><span class="n">names</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">name</span><span class="p">[:</span><span class="mi">5</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;test_&#39;</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">call_static</span><span class="p">:</span>
                <span class="n">f</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
                <span class="k">if</span> <span class="nb">callable</span><span class="p">(</span><span class="n">f</span><span class="p">):</span> <span class="n">f</span><span class="p">()</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">f</span> <span class="o">=</span> <span class="n">names</span><span class="p">[</span><span class="n">name</span><span class="p">]</span>
                <span class="k">if</span> <span class="nb">callable</span><span class="p">(</span><span class="n">f</span><span class="p">):</span> <span class="n">f</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1488/addtag/" class="addtag" id="addtag_1488">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1488/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1488/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1488"
  >-</span><span
  class="button yellow"
  id="rating_z_1488"
  >0</span><span 
  class="button green"
  id="rating_p_1488"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1474/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1488/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1488/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1488/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1489">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/78/" target="_top">morchin</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1489/">#1489</a>(<script language="JavaScript">print_time(new Date("2007/07/27 03:16 GMT"));</script><noscript>2007/07/27 03:16 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>すみません。PrologとPythonの言語の選択間違えました(;_;)。にしおさん、修正お願いします。
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1489/addtag/" class="addtag" id="addtag_1489">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1489"
  >-</span><span
  class="button yellow"
  id="rating_z_1489"
  >0</span><span 
  class="button green"
  id="rating_p_1489"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1488/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1489/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1489/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1489/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1490">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1490/">#1490</a>(<script language="JavaScript">print_time(new Date("2007/07/27 03:20 GMT"));</script><noscript>2007/07/27 03:20 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>スーパークラス定義のメソッドを考慮するのをすっかり
忘れていました(^_^;)。

ということで改めて。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre>target class allSelectors select: [:sel | sel beginsWith: #test]
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1490/addtag/" class="addtag" id="addtag_1490">タグ</a>:
	
    
    <a href="/web/20091214051829/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1490/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1490/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1490"
  >-</span><span
  class="button yellow"
  id="rating_z_1490"
  >0</span><span 
  class="button green"
  id="rating_p_1490"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1472/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1490/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1490/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1491">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/311/" target="_top">KIYO-SHIT</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1491/">#1491</a>(<script language="JavaScript">print_time(new Date("2007/07/27 03:25 GMT"));</script><noscript>2007/07/27 03:25 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  環境選びますがfnmatchとかいかがざんすか？
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre><span class="x">foreach (get_class_methods($doukaku) as $method) {</span>
<span class="x">    if (fnmatch(&quot;test_*&quot;, $method)) {</span>
<span class="x">        $doukaku-&gt;$method();</span>
<span class="x">    }</span>
<span class="x">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1491/addtag/" class="addtag" id="addtag_1491">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1491/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1491/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1491"
  >-</span><span
  class="button yellow"
  id="rating_z_1491"
  >0</span><span 
  class="button green"
  id="rating_p_1491"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1466/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1491/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1491/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1492">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1492/">#1492</a>(<script language="JavaScript">print_time(new Date("2007/07/27 03:45 GMT"));</script><noscript>2007/07/27 03:45 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Pythonのクラスメソッドはあくまで
「呼んだときに第一引数にクラスオブジェクトが渡されるメソッド」
というだけなので、
単純に「xのメソッド」と言った場合には
classmethodやstaticmethodでラップしてあるメソッドも含まれるわけです。

なのでもしそれらを省きたければim_selfがインスタンス自身かどうかをチェックすればいいと思います。
下のコードならばtest_methodだけが呼ばれます。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">inspect</span>

<span class="k">class</span> <span class="nc">Foo</span><span class="p">():</span>
    <span class="nd">@classmethod</span>
    <span class="k">def</span> <span class="nf">test_classmethod</span><span class="p">(</span><span class="n">cls</span><span class="p">):</span>
        <span class="k">print</span> <span class="n">cls</span>

    <span class="nd">@staticmethod</span>
    <span class="k">def</span> <span class="nf">test_staticmethod</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
        <span class="k">print</span> <span class="n">x</span>

    <span class="k">def</span> <span class="nf">test_method</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span> <span class="bp">self</span>

<span class="n">target</span> <span class="o">=</span> <span class="n">Foo</span><span class="p">()</span>
<span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">method</span> <span class="ow">in</span> <span class="n">inspect</span><span class="o">.</span><span class="n">getmembers</span><span class="p">(</span><span class="n">target</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">inspect</span><span class="o">.</span><span class="n">ismethod</span><span class="p">(</span><span class="n">method</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">method</span><span class="o">.</span><span class="n">im_self</span> <span class="o">==</span> <span class="n">target</span><span class="p">:</span>
            <span class="k">print</span> <span class="s">&quot;call&quot;</span><span class="p">,</span> <span class="n">name</span>
            <span class="n">method</span><span class="p">()</span>
    
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1492/addtag/" class="addtag" id="addtag_1492">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1492/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1492/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1492"
  >-</span><span
  class="button yellow"
  id="rating_z_1492"
  >0</span><span 
  class="button green"
  id="rating_p_1492"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1468/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1492/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1492/">
    2
    replies
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1492/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1494">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/14/" target="_top">kawauchi</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1494/">#1494</a>(<script language="JavaScript">print_time(new Date("2007/07/27 06:07 GMT"));</script><noscript>2007/07/27 06:07 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Object</span>
  <span class="k">def</span> <span class="nf">call_test</span><span class="p">(</span><span class="n">prvt</span> <span class="o">=</span> <span class="kp">false</span><span class="p">)</span>
    <span class="n">test_methods</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">methods</span><span class="o">.</span><span class="n">grep</span><span class="p">(</span><span class="sr">/\Atest_/</span><span class="p">)</span>
    <span class="n">test_methods</span> <span class="o">+=</span> <span class="nb">self</span><span class="o">.</span><span class="n">private_methods</span><span class="o">.</span><span class="n">grep</span><span class="p">(</span><span class="sr">/\Atest_/</span><span class="p">)</span> <span class="k">if</span> <span class="n">prvt</span>
    <span class="n">test_methods</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="nb">method</span><span class="o">|</span>
      <span class="k">yield</span> <span class="nb">method</span><span class="p">,</span> <span class="nb">self</span><span class="o">.</span><span class="n">__send__</span><span class="p">(</span><span class="nb">method</span><span class="p">)</span>
    <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">if</span> <span class="vg">$0</span> <span class="o">==</span> <span class="bp">__FILE__</span>
  <span class="k">class</span> <span class="nc">Sample</span>
    <span class="k">def</span> <span class="nf">test_a</span>
      <span class="kp">true</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">o</span> <span class="o">=</span> <span class="no">Sample</span><span class="o">.</span><span class="n">new</span>
  <span class="n">o</span><span class="o">.</span><span class="n">call_test</span><span class="p">{</span><span class="o">|</span><span class="n">m</span><span class="p">,</span> <span class="n">r</span><span class="o">|</span>
    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">m</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">r</span><span class="si">}</span><span class="s2">&quot;</span>
  <span class="p">}</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1494/addtag/" class="addtag" id="addtag_1494">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1494/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1494/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1494"
  >-</span><span
  class="button yellow"
  id="rating_z_1494"
  >0</span><span 
  class="button green"
  id="rating_p_1494"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1494/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1495">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1495/">#1495</a>(<script language="JavaScript">print_time(new Date("2007/07/27 06:20 GMT"));</script><noscript>2007/07/27 06:20 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>だいぶ言語が増えてきたので選びづらいですよね。JavaScriptとかで
今までに投稿したことのある言語を簡単に選べるようにしようとは思いつつ
まだできていません。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1495/addtag/" class="addtag" id="addtag_1495">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1495"
  >-</span><span
  class="button yellow"
  id="rating_z_1495"
  >0</span><span 
  class="button green"
  id="rating_p_1495"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1489/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1495/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1495/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1496">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/312/" target="_top">tanuki</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1496/">#1496</a>(<script language="JavaScript">print_time(new Date("2007/07/27 06:34 GMT"));</script><noscript>2007/07/27 06:34 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  CPANだよりですが。。。^^;
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!/usr/local/bin/perl</span>

<span class="k">use</span> <span class="n">target</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Class::</span><span class="n">Inspector</span><span class="p">;</span>

<span class="k">foreach</span> <span class="k">my</span> <span class="nv">$f</span> <span class="p">(</span><span class="nv">@</span><span class="p">{(</span><span class="nn">Class::</span><span class="n">Inspector</span><span class="o">-&gt;</span><span class="n">functions</span><span class="p">(</span> <span class="s">&#39;target&#39;</span> <span class="p">))[</span><span class="mi">0</span><span class="p">]})</span> <span class="p">{</span>
    <span class="k">print</span> <span class="nb">eval</span><span class="p">{</span><span class="n">target</span><span class="o">-&gt;</span><span class="nv">$f</span><span class="p">()}</span> <span class="k">if</span> <span class="p">(</span><span class="nv">$f</span> <span class="o">=~</span><span class="sr"> /^test_.+$/</span><span class="p">);</span>
<span class="p">}</span>
<span class="nb">exit</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1496/addtag/" class="addtag" id="addtag_1496">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1496/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1496/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1496"
  >-</span><span
  class="button yellow"
  id="rating_z_1496"
  >0</span><span 
  class="button green"
  id="rating_p_1496"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1496/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1497">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/64/" target="_top">zigorou</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1497/">#1497</a>(<script language="JavaScript">print_time(new Date("2007/07/27 06:43 GMT"));</script><noscript>2007/07/27 06:43 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Class::Inspector, Scalar::Util使用版
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!/usr/bin/perl</span>

<span class="nb">package</span> <span class="n">Foo</span><span class="p">;</span>

<span class="p">{</span>
    <span class="nb">no</span> <span class="n">strict</span> <span class="s">&#39;refs&#39;</span><span class="p">;</span>

    <span class="k">for</span> <span class="k">my</span> <span class="nv">$method</span> <span class="p">(</span><span class="n">qw</span><span class="sr">/foo bar baz test_foo test_bar test_baz/</span><span class="p">)</span> <span class="p">{</span>
        <span class="o">*</span><span class="p">{</span><span class="s">&quot;Foo::$method&quot;</span><span class="p">}</span> <span class="o">=</span> <span class="k">sub </span><span class="p">{</span>
            <span class="k">print</span> <span class="nv">$method</span> <span class="o">.</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
        <span class="p">};</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">new</span> <span class="p">{</span>
    <span class="nb">bless</span> <span class="p">{}</span> <span class="o">=&gt;</span> <span class="nb">shift</span><span class="p">;</span>
<span class="p">}</span>

<span class="nb">package</span> <span class="n">main</span><span class="p">;</span>

<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>

<span class="k">use</span> <span class="nn">Scalar::</span><span class="n">Util</span> <span class="sx">qw(blessed)</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Class::</span><span class="n">Inspector</span><span class="p">;</span>

<span class="k">sub </span><span class="nf">call_methods_by_regex</span> <span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$target</span><span class="p">,</span> <span class="nv">$regex</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>

    <span class="k">return</span> <span class="k">unless</span> <span class="p">(</span><span class="k">my</span> <span class="nv">$class</span> <span class="o">=</span> <span class="n">blessed</span><span class="p">(</span><span class="nv">$target</span><span class="p">));</span>
    <span class="k">return</span> <span class="k">unless</span> <span class="p">(</span><span class="nb">ref</span> <span class="nv">$regex</span> <span class="ow">eq</span> <span class="s">&#39;Regexp&#39;</span><span class="p">);</span>

    <span class="k">my</span> <span class="nv">@methods</span> <span class="o">=</span> <span class="nb">grep</span> <span class="p">{</span> <span class="sr">/$regex/o</span> <span class="p">}</span> <span class="nv">@</span><span class="p">{</span><span class="nn">Class::</span><span class="n">Inspector</span><span class="o">-&gt;</span><span class="n">methods</span><span class="p">(</span><span class="nv">$class</span><span class="p">,</span> <span class="s">&#39;public&#39;</span><span class="p">)};</span>

    <span class="k">for</span> <span class="k">my</span> <span class="nv">$method</span> <span class="p">(</span><span class="nv">@methods</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$target</span><span class="o">-&gt;</span><span class="nv">$method</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="n">call_methods_by_regex</span><span class="p">(</span><span class="n">Foo</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">,</span> <span class="n">qr</span><span class="sr">/^test_/</span><span class="p">);</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1497/addtag/" class="addtag" id="addtag_1497">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1497/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1497/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1497"
  >-</span><span
  class="button yellow"
  id="rating_z_1497"
  >0</span><span 
  class="button green"
  id="rating_p_1497"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1497/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1501">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/64/" target="_top">zigorou</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1501/">#1501</a>(<script language="JavaScript">print_time(new Date("2007/07/27 07:42 GMT"));</script><noscript>2007/07/27 07:42 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffcf;">3/3=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  CPANに頼らない版
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!/usr/bin/perl</span>

<span class="nb">package</span> <span class="n">Foo</span><span class="p">;</span>

<span class="p">{</span>
    <span class="nb">no</span> <span class="n">strict</span> <span class="s">&#39;refs&#39;</span><span class="p">;</span>

    <span class="k">for</span> <span class="k">my</span> <span class="nv">$method</span> <span class="p">(</span><span class="n">qw</span><span class="sr">/foo bar baz test_foo test_bar test_baz/</span><span class="p">)</span> <span class="p">{</span>
        <span class="o">*</span><span class="p">{</span><span class="s">&quot;Foo::$method&quot;</span><span class="p">}</span> <span class="o">=</span> <span class="k">sub </span><span class="p">{</span>
            <span class="k">print</span> <span class="nv">$method</span> <span class="o">.</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
        <span class="p">};</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">new</span> <span class="p">{</span>
    <span class="nb">bless</span> <span class="p">{}</span> <span class="o">=&gt;</span> <span class="nb">shift</span><span class="p">;</span>
<span class="p">}</span>

<span class="nb">package</span> <span class="n">main</span><span class="p">;</span>

<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>

<span class="p">{</span>
    <span class="nb">no</span> <span class="n">strict</span> <span class="s">&#39;refs&#39;</span><span class="p">;</span>
    <span class="k">sub </span><span class="nf">call_methods_by_regex</span> <span class="p">{</span>
        <span class="k">my</span> <span class="p">(</span><span class="nv">$target</span><span class="p">,</span> <span class="nv">$regex</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
        <span class="k">my</span> <span class="nv">$class</span> <span class="o">=</span> <span class="nb">ref</span> <span class="nv">$target</span><span class="p">;</span>

        <span class="k">return</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$class</span> <span class="o">||</span> <span class="nv">$class</span> <span class="o">=~</span><span class="sr"> /^(SCALAR|ARRAY|HASH|CODE|GLOB|LVALUE)$/</span><span class="p">);</span>
        <span class="k">return</span> <span class="k">unless</span> <span class="p">(</span><span class="nb">ref</span> <span class="nv">$regex</span> <span class="ow">eq</span> <span class="s">&#39;Regexp&#39;</span><span class="p">);</span>

        <span class="k">my</span> <span class="nv">@methods</span> <span class="o">=</span> 
            <span class="nb">grep</span> <span class="p">{</span> <span class="o">*</span><span class="p">{</span><span class="nv">$</span><span class="p">{</span><span class="nv">$class</span> <span class="o">.</span> <span class="s">&quot;::&quot;</span><span class="p">}{</span><span class="nv">$_</span><span class="p">}}{</span><span class="n">CODE</span><span class="p">}</span> <span class="p">}</span> 
            <span class="nb">grep</span> <span class="p">{</span> <span class="sr">/$regex/o</span> <span class="p">}</span> 
                <span class="nb">keys</span> <span class="nv">%</span><span class="p">{</span><span class="nv">$class</span> <span class="o">.</span> <span class="s">&quot;::&quot;</span><span class="p">};</span>
        
        <span class="k">for</span> <span class="k">my</span> <span class="nv">$method</span> <span class="p">(</span><span class="nv">@methods</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$target</span><span class="o">-&gt;</span><span class="nv">$method</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="n">call_methods_by_regex</span><span class="p">(</span><span class="n">Foo</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">,</span> <span class="n">qr</span><span class="sr">/^test_/</span><span class="p">);</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1501/addtag/" class="addtag" id="addtag_1501">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1501/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1501/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffcf;"
  >3/3=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1501"
  >-</span><span
  class="button yellow"
  id="rating_z_1501"
  >0</span><span 
  class="button green"
  id="rating_p_1501"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1501/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1501/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1505">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/314/" target="_top">lany</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1505/">#1505</a>(<script language="JavaScript">print_time(new Date("2007/07/27 14:39 GMT"));</script><noscript>2007/07/27 14:39 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/delphi/">
	  Delphi
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>いけるのはpublishedで宣言されたもののみです。
ちなみにお題のタイトルのようにメソッド名一覧を表示する場合は、
Pos関数内で使ってるPShortString(...)^をWritelnしてやればOKです。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69</pre></td><td class="code"><div class="highlight"><pre><span class="k">program</span> <span class="n">EnumMethodNames</span><span class="o">;</span>

<span class="cm">{$APPTYPE CONSOLE}</span>

<span class="k">type</span>
    <span class="n">THoge</span> <span class="o">=</span> <span class="k">class</span><span class="p">(</span><span class="kt">TObject</span><span class="p">)</span>
    <span class="kp">published</span>
        <span class="k">procedure</span> <span class="nf">test_foo</span><span class="o">;</span>
    <span class="k">end</span><span class="o">;</span>
    <span class="n">THogeEx</span> <span class="o">=</span> <span class="k">class</span><span class="p">(</span><span class="n">THoge</span><span class="p">)</span>
    <span class="kp">published</span>
        <span class="k">procedure</span> <span class="nf">test_bar</span><span class="o">;</span>
        <span class="k">procedure</span> <span class="nf">foobar</span><span class="o">;</span>
    <span class="k">end</span><span class="o">;</span>
    <span class="n">THogeMethod</span> <span class="o">=</span> <span class="k">procedure</span> <span class="k">of</span> <span class="k">object</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nc">THoge</span><span class="o">.</span><span class="nf">test_foo</span><span class="o">;</span>
<span class="k">begin</span>
    <span class="nb">Writeln</span><span class="p">(</span><span class="s">&#39;foo&#39;</span><span class="p">)</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nc">THogeEx</span><span class="o">.</span><span class="nf">test_bar</span><span class="o">;</span>
<span class="k">begin</span>
    <span class="nb">Writeln</span><span class="p">(</span><span class="s">&#39;bar&#39;</span><span class="p">)</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nc">THogeEx</span><span class="o">.</span><span class="nf">foobar</span><span class="o">;</span>
<span class="k">begin</span>
    <span class="nb">Writeln</span><span class="p">(</span><span class="s">&#39;foobar&#39;</span><span class="p">)</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">procedure</span> <span class="nf">EnumMethods</span><span class="p">(</span><span class="n">target</span><span class="o">:</span> <span class="kt">TObject</span><span class="p">)</span><span class="o">;</span>
<span class="k">var</span>
    <span class="n">ref</span><span class="o">:</span> <span class="kt">TClass</span><span class="o">;</span>
    <span class="n">table</span><span class="o">:</span> <span class="kt">PChar</span><span class="o">;</span>
    <span class="n">count</span><span class="o">:</span> <span class="kt">Word</span><span class="o">;</span>
    <span class="n">method</span><span class="o">:</span> <span class="n">TMethod</span><span class="o">;</span>
<span class="k">begin</span>
    <span class="n">ref</span> <span class="o">:=</span> <span class="n">target</span><span class="o">.</span><span class="n">ClassType</span><span class="o">;</span>
    <span class="k">while</span> <span class="n">ref</span> <span class="o">&lt;&gt;</span> <span class="k">nil</span> <span class="k">do</span> <span class="k">begin</span>
        <span class="n">table</span> <span class="o">:=</span> <span class="kt">PPointer</span><span class="p">(</span><span class="kt">PChar</span><span class="p">(</span><span class="n">ref</span><span class="p">)</span> <span class="o">+</span> <span class="n">vmtMethodTable</span><span class="p">)</span><span class="o">^;</span>
        <span class="k">if</span> <span class="nb">Assigned</span><span class="p">(</span><span class="n">table</span><span class="p">)</span> <span class="k">then</span> <span class="k">begin</span>
            <span class="n">count</span> <span class="o">:=</span> <span class="kt">PWord</span><span class="p">(</span><span class="n">table</span><span class="p">)</span><span class="o">^;</span>
            <span class="nb">Inc</span><span class="p">(</span><span class="n">table</span><span class="o">,</span> <span class="nb">SizeOf</span><span class="p">(</span><span class="kt">Word</span><span class="p">))</span><span class="o">;</span>
            <span class="k">while</span> <span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="k">do</span> <span class="k">begin</span>
                <span class="k">if</span> <span class="nb">Pos</span><span class="p">(</span><span class="s">&#39;test_&#39;</span><span class="o">,</span> <span class="kt">PShortString</span><span class="p">(</span><span class="n">table</span><span class="o">+</span><span class="nb">SizeOf</span><span class="p">(</span><span class="kt">Word</span><span class="p">)</span><span class="o">+</span><span class="nb">SizeOf</span><span class="p">(</span><span class="kt">Pointer</span><span class="p">))</span><span class="o">^</span><span class="p">)</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">then</span> <span class="k">begin</span>
                    <span class="n">method</span><span class="o">.</span><span class="n">Code</span> <span class="o">:=</span> <span class="kt">PPointer</span><span class="p">(</span><span class="n">table</span><span class="o">+</span><span class="nb">SizeOf</span><span class="p">(</span><span class="kt">Word</span><span class="p">))</span><span class="o">^;</span>
                    <span class="n">method</span><span class="o">.</span><span class="n">Data</span> <span class="o">:=</span> <span class="n">target</span><span class="o">;</span>
                    <span class="n">THogeMethod</span><span class="p">(</span><span class="n">method</span><span class="p">)</span><span class="o">;</span>
                <span class="k">end</span><span class="o">;</span>
                <span class="nb">Inc</span><span class="p">(</span><span class="n">table</span><span class="o">,</span> <span class="kt">PWord</span><span class="p">(</span><span class="n">table</span><span class="p">)</span><span class="o">^</span><span class="p">)</span><span class="o">;</span>
                <span class="nb">Dec</span><span class="p">(</span><span class="n">count</span><span class="p">)</span><span class="o">;</span>
            <span class="k">end</span><span class="o">;</span>
        <span class="k">end</span><span class="o">;</span>
        <span class="n">ref</span> <span class="o">:=</span> <span class="n">ref</span><span class="o">.</span><span class="n">ClassParent</span><span class="o">;</span>
    <span class="k">end</span><span class="o">;</span>
<span class="k">end</span><span class="o">;</span>

<span class="k">var</span>
    <span class="n">Hoge</span><span class="o">:</span> <span class="n">THoge</span><span class="o">;</span>

<span class="k">begin</span>
    <span class="n">Hoge</span> <span class="o">:=</span> <span class="n">THogeEx</span><span class="o">.</span><span class="n">Create</span><span class="o">;</span>
    <span class="k">try</span>
        <span class="n">EnumMethods</span><span class="p">(</span><span class="n">Hoge</span><span class="p">)</span><span class="o">;</span>
    <span class="k">finally</span>
        <span class="n">Hoge</span><span class="o">.</span><span class="n">Free</span><span class="o">;</span>
    <span class="k">end</span><span class="o">;</span>
<span class="k">end</span><span class="o">.</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1505/addtag/" class="addtag" id="addtag_1505">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/delphi/">
		Delphi
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1505/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1505/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1505"
  >-</span><span
  class="button yellow"
  id="rating_z_1505"
  >0</span><span 
  class="button green"
  id="rating_p_1505"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1505/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1507">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/177/" target="_top">ocean</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1507/">#1507</a>(<script language="JavaScript">print_time(new Date("2007/07/27 15:11 GMT"));</script><noscript>2007/07/27 15:11 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>気づいたのですが、同一性の判定には、
if method.im_self is target: のように
==よりisを使った方がいいかもしれません。

</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1507/addtag/" class="addtag" id="addtag_1507">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1507"
  >-</span><span
  class="button yellow"
  id="rating_z_1507"
  >0</span><span 
  class="button green"
  id="rating_p_1507"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1492/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1507/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1507/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1507/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1511">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1511/">#1511</a>(<script language="JavaScript">print_time(new Date("2007/07/27 15:53 GMT"));</script><noscript>2007/07/27 15:53 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>もう少し題意を反映した感じで書いてみました。
Rのメソッドは、初めにgenericなメソッドを定義した後
「generic method名.クラス名」という形式で定義します。

generic methodを実行すると、第一引数のクラスによって
適切なメソッドが実行されます。

&gt; test_f1(target)
[1] "f1"
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><div class="highlight"><pre># define generic methods
test_f1 &lt;- function(x){ UseMethod(&quot;test_f1&quot;) }
text_f2 &lt;- function(x){ UseMethod(&quot;text_f2&quot;) }
txet_f3 &lt;- function(x){ UseMethod(&quot;txet_f3&quot;) }
tesx_f4 &lt;- function(x){ UseMethod(&quot;tesx_f4&quot;) }
test_f5 &lt;- function(x){ UseMethod(&quot;test_f5&quot;) }

# define class and object
setClass(&quot;doukaku&quot;, representation(x =&quot;numeric&quot;, y=&quot;numeric&quot;))
target &lt;- new(&quot;doukaku&quot;, x=1, y=2)

# define methods
test_f1.doukaku &lt;- function(x){ print(&quot;f1&quot;) } # OK
text_f2.doukaku &lt;- function(x){ print(&quot;f2&quot;) } # NG
txet_f3.doukaku &lt;- function(x){ print(&quot;f3&quot;) } # NG
tesx_f4.doukaku &lt;- function(x){ print(&quot;f4&quot;) } # NG
test_f5.doukaku &lt;- function(x){ print(&quot;f5&quot;) } # OK

dummy &lt;- sapply(grep(&quot;^test_&quot;, methods(class=attr(target, &quot;class&quot;)), value=TRUE),
                  (function(x) do.call(x, c(target))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1511/addtag/" class="addtag" id="addtag_1511">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1511/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1511/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1511"
  >-</span><span
  class="button yellow"
  id="rating_z_1511"
  >0</span><span 
  class="button green"
  id="rating_p_1511"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1478/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1511/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1511/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1517">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/212/" target="_top">odz</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1517/">#1517</a>(<script language="JavaScript">print_time(new Date("2007/07/27 16:50 GMT"));</script><noscript>2007/07/27 16:50 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  おぉ。なるほど。と、おもったら、im_self をチェックするというのネタを以前自分のブログに書いていた orz
それはそれとして、「x のメソッド」と表現したときに、メッセージのレシーバが x でないものを含めるかどうかというのはなかなか微妙な話かもしれない。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1517/addtag/" class="addtag" id="addtag_1517">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1517"
  >-</span><span
  class="button yellow"
  id="rating_z_1517"
  >0</span><span 
  class="button green"
  id="rating_p_1517"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1492/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1517/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/1517/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1517/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1529">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1529/">#1529</a>(<script language="JavaScript">print_time(new Date("2007/07/28 00:18 GMT"));</script><noscript>2007/07/28 00:18 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  なるほど、たしかに__eq__がオーバーライドされて同じインスタンスではなくてもTrueを返すようになっている可能性があるので==で判定してはダメですね。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1529/addtag/" class="addtag" id="addtag_1529">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1529"
  >-</span><span
  class="button yellow"
  id="rating_z_1529"
  >0</span><span 
  class="button green"
  id="rating_p_1529"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1507/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1529/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1529/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1530">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1530/">#1530</a>(<script language="JavaScript">print_time(new Date("2007/07/28 01:06 GMT"));</script><noscript>2007/07/28 01:06 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>微妙な話ですね。
「単純に「xのメソッド」と言った場合には
classmethodやstaticmethodで
ラップしてあるメソッドも含まれる」
というのは言い過ぎだったかも。
「メソッド」という言葉がの定義と、
classmethodやstaticmethodの実装を
追わないと正確なことは言えなかったですね。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1530/addtag/" class="addtag" id="addtag_1530">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1530"
  >-</span><span
  class="button yellow"
  id="rating_z_1530"
  >0</span><span 
  class="button green"
  id="rating_p_1530"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1517/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1530/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1530/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1588">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1588/">#1588</a>(<script language="JavaScript">print_time(new Date("2007/07/30 10:50 GMT"));</script><noscript>2007/07/30 10:50 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffbfbf;">-4/4=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1</pre></td><td class="code"><div class="highlight"><pre>return unless UNIVERSAL::isa($class, &#39;UNIVERSAL&#39;);
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1588/addtag/" class="addtag" id="addtag_1588">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1588/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1588/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffbfbf;"
  >-4/4=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1588"
  >-</span><span
  class="button yellow"
  id="rating_z_1588"
  >0</span><span 
  class="button green"
  id="rating_p_1588"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1501/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/1588/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1588/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1691">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/69/" target="_top">PHO</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1691/">#1691</a>(<script language="JavaScript">print_time(new Date("2007/08/02 06:50 GMT"));</script><noscript>2007/08/02 06:50 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #bfffbf;">4/4=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>コンパイルには -package ghc が必要。
引数で指定されたモジュールが export し、且つ test_ で始まる全部の IO モナドを実行する。
型は IO () でなければならず、そうでないものが存在したら実行時エラーになる。
GHC 6.6.1 以外の GHC を使う場合は ghcLibDir の値を訂正する事。

% ghc --make Main -package ghc
% ./Main Test</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="nv">qualified</span> <span class="n">GHC</span>
<span class="kr">import</span> <span class="nv">qualified</span> <span class="n">DynFlags</span>
<span class="kr">import</span> <span class="nv">qualified</span> <span class="n">Name</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>
<span class="kr">import</span> <span class="n">System</span>

<span class="cm">{-</span>
<span class="cm">例: Test.hs</span>

<span class="cm">module Test where</span>

<span class="cm">test_foo :: IO ()</span>
<span class="cm">test_foo = putStrLn &quot;called test_foo&quot;</span>

<span class="cm">test_bar :: IO ()</span>
<span class="cm">test_bar = putStrLn &quot;called test_bar&quot;</span>

<span class="cm">% ghc --make Test -package-name test</span>
<span class="cm">% ar cqs libHSTest.a Test.o</span>
<span class="cm">% ld -r --whole-archive -o HSTest.o libHSTest.a (MacOS X 以外の場合)</span>
<span class="cm">% ld -r -all_load -o HSTest.o libHSTest.a       (MacOS X の場合)</span>
<span class="cm">-}</span>

<span class="nv">ghcLibDir</span> <span class="o">::</span> <span class="n">String</span>
<span class="nv">ghcLibDir</span> <span class="o">=</span> <span class="s">&quot;/usr/local/lib/ghc-6.6.1&quot;</span> <span class="c1">-- % ghc --print-libdir</span>

<span class="nv">main</span> <span class="o">=</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">defaultErrorHandler</span> <span class="n">DynFlags</span><span class="o">.</span><span class="nv">defaultDynFlags</span> <span class="o">$</span>
       <span class="kr">do</span> <span class="p">[</span><span class="nv">modName</span><span class="p">]</span> <span class="o">&lt;-</span> <span class="nv">getArgs</span>
          <span class="nv">session</span> <span class="o">&lt;-</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">newSession</span> <span class="n">GHC</span><span class="o">.</span><span class="n">Interactive</span> <span class="p">(</span><span class="n">Just</span> <span class="nv">ghcLibDir</span><span class="p">)</span>
          <span class="nv">f0</span>      <span class="o">&lt;-</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">getSessionDynFlags</span> <span class="nv">session</span>
          <span class="n">GHC</span><span class="o">.</span><span class="nv">setSessionDynFlags</span> <span class="nv">session</span> <span class="nv">f0</span> <span class="p">{</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">hscTarget</span> <span class="o">=</span> <span class="n">GHC</span><span class="o">.</span><span class="n">HscInterpreted</span> <span class="p">}</span>

          <span class="nv">t</span>  <span class="o">&lt;-</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">guessTarget</span> <span class="nv">modName</span> <span class="n">Nothing</span>
          <span class="n">GHC</span><span class="o">.</span><span class="nv">addTarget</span> <span class="nv">session</span> <span class="nv">t</span>
          <span class="nv">f</span>  <span class="o">&lt;-</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">getSessionDynFlags</span> <span class="nv">session</span>
          <span class="nv">sf</span> <span class="o">&lt;-</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">defaultCleanupHandler</span> <span class="nv">f</span> <span class="p">(</span><span class="n">GHC</span><span class="o">.</span><span class="nv">load</span> <span class="nv">session</span> <span class="n">GHC</span><span class="o">.</span><span class="n">LoadAllTargets</span><span class="p">)</span>
          <span class="kr">case</span> <span class="nv">sf</span> <span class="kr">of</span>
            <span class="n">GHC</span><span class="o">.</span><span class="n">Failed</span>  
                <span class="o">-&gt;</span> <span class="nv">fail</span> <span class="s">&quot;Failed to load the module!&quot;</span>
            <span class="n">GHC</span><span class="o">.</span><span class="n">Succeeded</span>
                <span class="o">-&gt;</span> <span class="kr">do</span> <span class="nv">self</span> <span class="o">&lt;-</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">findModule</span> <span class="nv">session</span> <span class="p">(</span><span class="n">GHC</span><span class="o">.</span><span class="nv">mkModuleName</span> <span class="nv">modName</span><span class="p">)</span> <span class="n">Nothing</span>
                      <span class="nv">runNullaryIOMonads</span> <span class="nv">session</span> <span class="nv">self</span> <span class="p">(</span><span class="nv">any</span> <span class="p">(</span><span class="o">==</span> <span class="s">&quot;test_&quot;</span><span class="p">)</span> <span class="o">.</span> <span class="nv">inits</span><span class="p">)</span>

<span class="nv">runNullaryIOMonads</span> <span class="o">::</span> <span class="n">GHC</span><span class="o">.</span><span class="n">Session</span> <span class="o">-&gt;</span> <span class="n">GHC</span><span class="o">.</span><span class="n">Module</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="n">String</span> <span class="o">-&gt;</span> <span class="n">Bool</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">runNullaryIOMonads</span> <span class="nv">session</span> <span class="nv">self</span> <span class="nv">f</span>
    <span class="o">=</span> <span class="kr">do</span> <span class="n">Just</span> <span class="nv">modInfo</span> <span class="o">&lt;-</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">getModuleInfo</span> <span class="nv">session</span> <span class="nv">self</span>
         
         <span class="kr">let</span> <span class="nv">allFuncs</span>      <span class="o">=</span> <span class="nv">map</span> <span class="n">Name</span><span class="o">.</span><span class="nv">getOccString</span> <span class="o">$</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">modInfoExports</span> <span class="nv">modInfo</span>
             <span class="nv">selectedFuncs</span> <span class="o">=</span> <span class="nv">filter</span> <span class="nv">f</span> <span class="nv">allFuncs</span>

         <span class="n">GHC</span><span class="o">.</span><span class="nv">setContext</span> <span class="nv">session</span> <span class="p">[</span><span class="nv">self</span><span class="p">]</span> <span class="p">[]</span>
         <span class="nv">mapM_</span> <span class="nv">run</span> <span class="nv">selectedFuncs</span>
    <span class="kr">where</span>
      <span class="nv">run</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">IO</span> <span class="p">()</span>
      <span class="nv">run</span> <span class="nv">fName</span>
          <span class="o">=</span> <span class="n">GHC</span><span class="o">.</span><span class="nv">runStmt</span> <span class="nv">session</span> <span class="p">(</span><span class="nv">fName</span> <span class="o">++</span> <span class="s">&quot; :: IO ()&quot;</span><span class="p">)</span>
            <span class="o">&gt;&gt;</span> <span class="nv">return</span> <span class="p">()</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1691/addtag/" class="addtag" id="addtag_1691">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1691/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1691/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #bfffbf;"
  >4/4=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1691"
  >-</span><span
  class="button yellow"
  id="rating_z_1691"
  >0</span><span 
  class="button green"
  id="rating_p_1691"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1691/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1724">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/323/" target="_top">tomatsu</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1724/">#1724</a>(<script language="JavaScript">print_time(new Date("2007/08/02 12:47 GMT"));</script><noscript>2007/08/02 12:47 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/pnuts/">
	  Pnuts
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre>class Foo {
  test_foo(){println(&quot;test_foo&quot;)}
  test_foo2(){println(&quot;test_foo2&quot;)}
  test_foo3(){println(&quot;test_foo3&quot;)}
  public_foo(){println(&quot;public_foo&quot;)}
}

f = Foo()
for(m:f.class.methods[{m-&gt;m.name.startsWith(&quot;test_&quot;)}]){
  m.invoke(f, [])
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1724/addtag/" class="addtag" id="addtag_1724">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/pnuts/">
		Pnuts
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1724/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1724/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1724"
  >-</span><span
  class="button yellow"
  id="rating_z_1724"
  >0</span><span 
  class="button green"
  id="rating_p_1724"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1724/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1729">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/96/" target="_top">ether</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1729/">#1729</a>(<script language="JavaScript">print_time(new Date("2007/08/02 13:08 GMT"));</script><noscript>2007/08/02 13:08 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/powershell/">
	  PowerShell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="highlight"><pre>$target | get-member | 
  where { $_.name -like &quot;test_*&quot; } |
  foreach { invoke-expression (&quot;`$target.&quot; + $_.name + &quot;()&quot;) }
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1729/addtag/" class="addtag" id="addtag_1729">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/powershell/">
		PowerShell
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1729/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1729/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1729"
  >-</span><span
  class="button yellow"
  id="rating_z_1729"
  >0</span><span 
  class="button green"
  id="rating_p_1729"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1729/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1891">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/349/" target="_top">walf443</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1891/">#1891</a>(<script language="JavaScript">print_time(new Date("2007/08/06 00:40 GMT"));</script><noscript>2007/08/06 00:40 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  誰でも思いつく単純な回答
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre><span class="k">class</span> <span class="nc">Target</span>
 <span class="k">def</span> <span class="nf">test_foo</span>
  <span class="nb">p</span> <span class="s2">&quot;foo&quot;</span>
 <span class="k">end</span>
 <span class="k">def</span> <span class="nf">test_bar</span>
  <span class="nb">p</span> <span class="s2">&quot;bar&quot;</span>
 <span class="k">end</span>
 <span class="k">def</span> <span class="nf">test_baz</span>
  <span class="nb">p</span> <span class="s2">&quot;baz&quot;</span>
 <span class="k">end</span>
 <span class="k">def</span> <span class="nf">not_test</span>
  <span class="nb">p</span> <span class="s2">&quot;not test!!&quot;</span>
 <span class="k">end</span>
<span class="k">end</span>
  <span class="c1">#=&gt; nil</span>

<span class="n">target</span> <span class="o">=</span> <span class="no">Target</span><span class="o">.</span><span class="n">new</span>
  <span class="c1">#=&gt; #&lt;Target:0x107d1d0&gt;</span>

<span class="n">target</span><span class="o">.</span><span class="n">methods</span><span class="o">.</span><span class="n">grep</span><span class="p">(</span><span class="sr">/^test_.*$/</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">target</span><span class="o">.</span><span class="n">__send__</span> <span class="n">i</span> <span class="p">}</span>
<span class="s2">&quot;baz&quot;</span>
<span class="s2">&quot;foo&quot;</span>
<span class="s2">&quot;bar&quot;</span>
  <span class="c1">#=&gt; [&quot;test_baz&quot;, &quot;test_foo&quot;, &quot;test_bar&quot;]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1891/addtag/" class="addtag" id="addtag_1891">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1891/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1891/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1891"
  >-</span><span
  class="button yellow"
  id="rating_z_1891"
  >0</span><span 
  class="button green"
  id="rating_p_1891"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1891/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment1985">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/344/" target="_top">jz5</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1985/">#1985</a>(<script language="JavaScript">print_time(new Date("2007/08/07 12:20 GMT"));</script><noscript>2007/08/07 12:20 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/vbnet/">
	  VB.net
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>引数0で。</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20091214051829/http://dobon.net/vb/dotnet/programing/typegetmember.html">型に指定した名前のメンバがあるか調べる</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre><span class="k">Public</span> <span class="k">Sub</span> <span class="n">CallMethods</span><span class="p">(</span><span class="k">ByVal</span> <span class="n">obj</span> <span class="ow">As</span> <span class="kt">Object</span><span class="p">)</span>
    <span class="k">For</span> <span class="k">Each</span> <span class="n">m</span> <span class="ow">As</span> <span class="n">MethodInfo</span> <span class="ow">In</span> <span class="n">obj</span><span class="p">.</span><span class="n">GetType</span><span class="p">.</span><span class="n">GetMember</span><span class="p">(</span><span class="s">&quot;test_*&quot;</span><span class="p">,</span> <span class="n">MemberTypes</span><span class="p">.</span><span class="n">Method</span><span class="p">,</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">Instance</span> <span class="ow">Or</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">Public</span> <span class="ow">Or</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">NonPublic</span> <span class="ow">Or</span> <span class="n">BindingFlags</span><span class="p">.</span><span class="n">Static</span><span class="p">)</span>
        <span class="n">m</span><span class="p">.</span><span class="n">Invoke</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">)</span>
    <span class="k">Next</span>
<span class="k">End</span> <span class="k">Sub</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/1985/addtag/" class="addtag" id="addtag_1985">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/vbnet/">
		VB.net
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1985/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/1985/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_1985"
  >-</span><span
  class="button yellow"
  id="rating_z_1985"
  >0</span><span 
  class="button green"
  id="rating_p_1985"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/1985/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2040">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/335/" target="_top">yattom</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2040/">#2040</a>(<script language="JavaScript">print_time(new Date("2007/08/09 03:19 GMT"));</script><noscript>2007/08/09 03:19 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/awk/">
	  awk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>指定された *.awk ファイルをサーチして、
test_XXX という関数をすべて実行するような .awk ファイルを作り、
その .awk ファイルを実行します。
対象にするのは、
^function +test_.*
というパターンにマッチする関数定義だけです。

ex)
&gt; gawk -f testrunner.awk *.awk

test_XXX をすべて呼び出すために、_tmp_runner.awk というファイルを
生成します。このファイルは削除せず残します。
_tmp_runner.awk と同時に、test_XXX が含まれていた .awk ファイルをすべて、
読み込みます。それ以外の .awk ファイルは読みません。
このあたりの仕様は、実用性を考えると検討したほうがいいかも。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre>BEGIN {
	TMPFILE = &quot;_tmp_runner.awk&quot;
	awk_cmd = ARGV[0]
	targets = &quot; &quot;

	print &quot;BEGIN {&quot; &gt; TMPFILE
}

/^function +test_.*\(/ {
	fname = gensub(/^function +(test_[^(]*)\(.*$/, &quot;\\1&quot;, &quot;&quot;)
	printf &quot;\t%s()\n&quot;, fname &gt;&gt; TMPFILE

	if(index(targets, &quot; -f &quot; FILENAME &quot; &quot;) == 0) {
		targets = targets &quot;-f &quot; FILENAME &quot; &quot;
	}
}

END {
	print &quot;}&quot; &gt;&gt; TMPFILE
	close(TMPFILE)

	CMD = sprintf(&quot;%s -f%s %s&quot;, awk_cmd, TMPFILE, targets)
	system(CMD)
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2040/addtag/" class="addtag" id="addtag_2040">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/awk/">
		awk
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/2040/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/2040/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2040"
  >-</span><span
  class="button yellow"
  id="rating_z_2040"
  >0</span><span 
  class="button green"
  id="rating_p_2040"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/2040/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2163">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/124/" target="_top">tsekine</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2163/">#2163</a>(<script language="JavaScript">print_time(new Date("2007/08/14 13:25 GMT"));</script><noscript>2007/08/14 13:25 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>とりあえず、シェル内で既に定義されている全ての関数の中から、test_ で始まるものを実行してみました。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="highlight"><pre><span class="nb">declare</span> -fp  | grep <span class="s1">&#39;^test_.*() $&#39;</span> | <span class="k">while </span><span class="nb">read </span>func paren; <span class="k">do</span>
  <span class="nv">$func</span>
<span class="k">done</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2163/addtag/" class="addtag" id="addtag_2163">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/2163/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/2163/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2163"
  >-</span><span
  class="button yellow"
  id="rating_z_2163"
  >0</span><span 
  class="button green"
  id="rating_p_2163"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/2163/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2179">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/382/" target="_top">miyamuko</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2179/">#2179</a>(<script language="JavaScript">print_time(new Date("2007/08/14 17:25 GMT"));</script><noscript>2007/08/14 17:25 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/xtal/">
	  xtal
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>super クラスも検索するようにしてみました。

「bar: || "bar".p」というのは引数なしの lambda 関数を bar に束縛しているような感じです。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45</pre></td><td class="code"><div class="highlight"><pre>String::start_with: method(sub) {
    return this.split(&quot;&quot;).take(sub.length).to_a.join(&quot;&quot;) == sub;
}

TargetTest: class {
    test_foo: || &quot;test_foo&quot;.p;
    test_bar: || &quot;test_bar&quot;.p;
    foo: || &quot;foo&quot;.p;
    bar: || &quot;bar&quot;.p;
}
TargetTest2: class(TargetTest) {
    test_foo: || &quot;test_foo_sub&quot;.p;
    test_baz: || &quot;test_baz&quot;.p;
}

TestRunner: class {
    suite: method(target, inherited_too: true) fiber {
        klasses: [target];
        if (inherited_too) {
            klasses ~= target.each_ancestor.to_a;
        }

        override: Map();
        klasses {|klass|
            klass.each_member {|name, x, meth|
                if (! override[name] &amp;&amp; name.start_with(&quot;test_&quot;)) {
                    yield meth;
                }
               override[name] = true;
            }
        }
    }

    run: method(target) {
        suite(target) {
            it();
        }
    }
}

runner: TestRunner();
&quot;---&quot;.p;
runner.run(TargetTest2);
&quot;---&quot;.p;
runner.run(TargetTest);
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2179/addtag/" class="addtag" id="addtag_2179">タグ</a>:
	
    
    <a href="/web/20091214051829/http://ja.doukaku.org/tag/xtal0.9.7/">xtal0.9.7</a>
    
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/xtal/">
		xtal
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/2179/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/2179/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2179"
  >-</span><span
  class="button yellow"
  id="rating_z_2179"
  >0</span><span 
  class="button green"
  id="rating_p_2179"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/2179/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2198">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/91/" target="_top">yooskeh</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2198/">#2198</a>(<script language="JavaScript">print_time(new Date("2007/08/15 08:42 GMT"));</script><noscript>2007/08/15 08:42 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/prolog/">
	  Prolog
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></td><td class="code"><div class="highlight"><pre>:- module(target, []).
test_a :- writeln(test_a).
test_b :- writeln(test_b).
test_x(_) :- writeln(test_x).
no_test :- writeln(no_test).

% 指定されたモジュールの&#39;test_&#39;で始まる引数0の述語を全て実行
call_tests(Module) :-
	forall((  current_predicate(Module:Predicate/0),
	          atom_prefix(Predicate, test_)),
	       Module:Predicate).

:- call_tests(target).
%=&gt; test_a test_b
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2198/addtag/" class="addtag" id="addtag_2198">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/prolog/">
		Prolog
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/2198/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/2198/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2198"
  >-</span><span
  class="button yellow"
  id="rating_z_2198"
  >0</span><span 
  class="button green"
  id="rating_p_2198"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/2198/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2221">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/194/" target="_top">higeorange</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2221/">#2221</a>(<script language="JavaScript">print_time(new Date("2007/08/16 05:16 GMT"));</script><noscript>2007/08/16 05:16 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/io/">
	  Io
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24</pre></td><td class="code"><div class="highlight"><pre>Object callMethods := method(str,
    self slotNames foreach(slotname,
        if(slotname beginsWithSeq(str),
            self perform(slotname)
        )
    )
)

obj := Object clone
obj test_1 := method(
    &quot;test_1&quot; println
)
obj foobar := method(
    &quot;foobar&quot; println
)
obj test_2 := method(
    &quot;test_2&quot; println
)
obj test3 := method(
    &quot;test3&quot; println
)
obj test_4 := &quot;fuga&quot;

obj callMethods(&quot;test_&quot;)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2221/addtag/" class="addtag" id="addtag_2221">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/io/">
		Io
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/2221/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/2221/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2221"
  >-</span><span
  class="button yellow"
  id="rating_z_2221"
  >0</span><span 
  class="button green"
  id="rating_p_2221"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/2221/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2564">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/411/" target="_top">管理者</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2564/">#2564</a>(<script language="JavaScript">print_time(new Date("2007/08/28 08:19 GMT"));</script><noscript>2007/08/28 08:19 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Perlでワンライナーで書いているブログがあったのでリンク。</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20091214051829/http://d.hatena.ne.jp/fbis/20070727/1185528914">■[Perl]メソッド名一覧どーかく？</a>
	</p>  
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/2564/addtag/" class="addtag" id="addtag_2564">タグ</a>:
	
    
    <a href="/web/20091214051829/http://ja.doukaku.org/tag/Perl6/">Perl6</a>
    
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2564"
  >-</span><span
  class="button yellow"
  id="rating_z_2564"
  >0</span><span 
  class="button green"
  id="rating_p_2564"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/2564/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3125">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/446/" target="_top">tilde</a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/3125/">#3125</a>(<script language="JavaScript">print_time(new Date("2007/09/20 09:02 GMT"));</script><noscript>2007/09/20 09:02 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/objectivec/">
	  Objective-C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'></pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
<span class="cp">#import &lt;objc/objc-class.h&gt;</span>

<span class="k">@interface</span> <span class="nc">TestClass</span> : <span class="nc">NSObject</span> <span class="p">{</span>
<span class="p">}</span>
<span class="o">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">test_class_method</span><span class="p">;</span>
<span class="o">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">testClassMethod</span><span class="p">;</span>
<span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">test_instance_method</span><span class="p">;</span>
<span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">testInstanceMethod</span><span class="p">;</span>
<span class="k">@end</span>

<span class="k">@implementation</span> <span class="nc">TestClass</span>
<span class="o">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">test_class_method</span> <span class="p">{</span>
	<span class="n">NSLog</span><span class="p">(</span> <span class="s">@&quot;test_class_method called&quot;</span> <span class="p">);</span>
<span class="p">}</span>
<span class="o">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">testClassMethod</span> <span class="p">{</span>
	<span class="n">NSLog</span><span class="p">(</span> <span class="s">@&quot;testClassMethod called&quot;</span> <span class="p">);</span>
<span class="p">}</span>
<span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">test_instance_method</span> <span class="p">{</span>
	<span class="n">NSLog</span><span class="p">(</span> <span class="s">@&quot;test_instance_method called&quot;</span> <span class="p">);</span>
<span class="p">}</span>
<span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">testInstanceMethod</span> <span class="p">{</span>
	<span class="n">NSLog</span><span class="p">(</span> <span class="s">@&quot;testInstanceMethod called&quot;</span> <span class="p">);</span>
<span class="p">}</span>
<span class="k">@end</span>

<span class="kt">int</span> <span class="n">main</span> <span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">argv</span><span class="p">[])</span> <span class="p">{</span>
    <span class="n">NSAutoreleasePool</span> <span class="o">*</span> <span class="n">pool</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSAutoreleasePool</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
	
	<span class="n">Class</span> <span class="n">cls</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="p">[</span><span class="n">TestClass</span> <span class="n">class</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">isa</span><span class="p">,</span> <span class="p">[</span><span class="n">TestClass</span> <span class="n">class</span><span class="p">]</span> <span class="p">};</span>
	<span class="n">TestClass</span><span class="o">*</span> <span class="n">testClass</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">TestClass</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
	
	<span class="c">//forループ１回目はクラスメソッド、２回目はインスタンスメソッドの実行</span>
	<span class="k">for</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span> <span class="p">{</span>
		<span class="kt">void</span><span class="o">*</span> <span class="n">iterator</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="k">struct</span> <span class="n">objc_method_list</span><span class="o">*</span> <span class="n">mlist</span><span class="p">;</span>
		
		<span class="k">while</span> <span class="p">(</span> <span class="n">mlist</span> <span class="o">=</span> <span class="n">class_nextMethodList</span><span class="p">(</span> <span class="n">cls</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="o">&amp;</span><span class="n">iterator</span> <span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
			<span class="k">for</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">mlist</span><span class="o">-&gt;</span><span class="n">method_count</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span> <span class="p">)</span> <span class="p">{</span>
				<span class="n">Method</span> <span class="n">method</span> <span class="o">=</span> <span class="n">mlist</span><span class="o">-&gt;</span><span class="n">method_list</span> <span class="o">+</span> <span class="n">j</span><span class="p">;</span>
				<span class="n">NSString</span><span class="o">*</span> <span class="n">methodName</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithUTF8String:</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span><span class="p">)</span><span class="n">method</span><span class="o">-&gt;</span><span class="n">method_name</span><span class="p">];</span>
				<span class="k">if</span> <span class="p">(</span> <span class="p">[</span><span class="n">methodName</span> <span class="nl">hasPrefix:</span><span class="s">@&quot;test_&quot;</span><span class="p">]</span> <span class="p">)</span> <span class="p">{</span>
					<span class="k">if</span> <span class="p">(</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
						<span class="p">[</span><span class="n">TestClass</span> <span class="nl">performSelector:</span><span class="n">method</span><span class="o">-&gt;</span><span class="n">method_name</span><span class="p">];</span>
					<span class="k">else</span>
						<span class="p">[</span><span class="n">testClass</span> <span class="nl">performSelector:</span><span class="n">method</span><span class="o">-&gt;</span><span class="n">method_name</span><span class="p">];</span>
				<span class="p">}</span> <span class="k">else</span>
					<span class="n">NSLog</span><span class="p">(</span> <span class="s">@&quot;Skip %@&quot;</span><span class="p">,</span> <span class="n">methodName</span> <span class="p">);</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>
	
    <span class="p">[</span><span class="n">pool</span> <span class="n">release</span><span class="p">];</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/3125/addtag/" class="addtag" id="addtag_3125">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/objectivec/">
		Objective-C
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/3125/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/3125/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3125"
  >-</span><span
  class="button yellow"
  id="rating_z_3125"
  >0</span><span 
  class="button green"
  id="rating_p_3125"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/3125/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3205">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/451/" target="_top">cooldaemon</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/3205/">#3205</a>(<script language="JavaScript">print_time(new Date("2007/10/01 07:24 GMT"));</script><noscript>2007/10/01 07:24 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/erlang/">
	  Erlang
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>foo:get(erlang). とかで使えます。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre>-module(foo).
-export([get/1]).

get(PackageName) -&gt;
  [X || {X, Y} &lt;- proplists:get_value(exports, PackageName:module_info()),
    lists:suffix(&quot;_test&quot;, atom_to_list(X))].
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/3205/addtag/" class="addtag" id="addtag_3205">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/erlang/">
		Erlang
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/3205/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/3205/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3205"
  >-</span><span
  class="button yellow"
  id="rating_z_3205"
  >0</span><span 
  class="button green"
  id="rating_p_3205"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20091214051829/http://ja.doukaku.org/comment/3205/">
    1
    reply
  </a>

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/3205/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment3207">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/451/" target="_top">cooldaemon</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/3207/">#3207</a>(<script language="JavaScript">print_time(new Date("2007/10/01 08:20 GMT"));</script><noscript>2007/10/01 08:20 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/erlang/">
	  Erlang
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>お題を誤って理解してしまった為、前回投稿したコードは、_test が関数名の末尾に付いた関数の一覧を返します。

今回、投稿するコードは、test_ が関数名の先頭に付いた関数の一覧を返します。

修正箇所は、lists:suffix/2 を lists:prefix/2 にかえただけです。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre>-module(foo).
-export([get/1]).

get(PackageName) -&gt;
  [X || {X, Y} &lt;- proplists:get_value(exports, PackageName:module_info()),
    lists:prefix(&quot;test_&quot;, atom_to_list(X))].
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/3207/addtag/" class="addtag" id="addtag_3207">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/erlang/">
		Erlang
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/3207/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/3207/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3207"
  >-</span><span
  class="button yellow"
  id="rating_z_3207"
  >0</span><span 
  class="button green"
  id="rating_p_3207"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/3205/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20091214051829/http://ja.doukaku.org/comment/3207/root/"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/3207/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  <br/>

  
  




<div class="comment" id="comment4460">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/550/" target="_top">todogzm</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/4460/">#4460</a>(<script language="JavaScript">print_time(new Date("2007/11/28 09:51 GMT"));</script><noscript>2007/11/28 09:51 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/javafxscript/">
	  JavaFxScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>[obj].class.Operations
で、[obj]のクラスのメソッド一覧を取得できます。
上記で取得できるのはOperationクラスで、
Operation.Name でオペレーション名を取得できます。</p>
<p>念のためoperation, functionの両方で試しましたが、
両方ともOperationsで取得できました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>import java.lang.System;

public class TestClass {
    public function test_function();
    public operation test_operation();
    public function notest_function();
    public operation notest_operation();
}

var a = new TestClass();

var testNames = select op.Name from op in a.class.Operations 
    where op.Name.startsWith(&quot;test_&quot;);

for(name in testNames) {
    System.out.println(name);
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/4460/addtag/" class="addtag" id="addtag_4460">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/javafxscript/">
		JavaFxScript
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/4460/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/4460/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4460"
  >-</span><span
  class="button yellow"
  id="rating_z_4460"
  >0</span><span 
  class="button green"
  id="rating_p_4460"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/4460/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5151">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/642/" target="_top">saws</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/5151/">#5151</a>(<script language="JavaScript">print_time(new Date("2008/01/03 15:12 GMT"));</script><noscript>2008/01/03 15:12 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Privateメソッドも実行するために.</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre><span class="no">STR</span> <span class="o">=</span> <span class="s1">&#39;test_&#39;</span>
<span class="k">module</span> <span class="nn">ExeTest_</span>
  <span class="k">def</span> <span class="nf">exe_test_</span><span class="p">(</span><span class="n">x</span><span class="p">);</span> <span class="nb">eval</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">end</span>
<span class="k">end</span>
<span class="n">target</span> <span class="o">=</span> <span class="no">Object</span><span class="o">.</span><span class="n">new</span>
<span class="n">target</span><span class="o">.</span><span class="n">extend</span> <span class="no">ExeTest_</span>
<span class="n">target</span><span class="o">.</span><span class="n">methods</span><span class="o">.</span><span class="n">grep</span><span class="p">(</span><span class="sr">/\A</span><span class="si">#{</span><span class="no">STR</span><span class="si">}</span><span class="sr">/</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">target</span><span class="o">.</span><span class="n">exe_test_</span><span class="p">(</span><span class="n">x</span><span class="p">)}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/5151/addtag/" class="addtag" id="addtag_5151">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/5151/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/5151/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5151"
  >-</span><span
  class="button yellow"
  id="rating_z_5151"
  >0</span><span 
  class="button green"
  id="rating_p_5151"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/5151/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7217">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/793/" target="_top">genzou</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/7217/">#7217</a>(<script language="JavaScript">print_time(new Date("2008/08/19 08:01 GMT"));</script><noscript>2008/08/19 08:01 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre>outputMethod( target, &quot;test_&quot; )

def outputMethod(object, prefix){
    object.class.metaClass.methods.findAll{ it.name.startsWith(prefix) }.each{ println it.name }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/7217/addtag/" class="addtag" id="addtag_7217">タグ</a>:
	
    
    <a href="/web/20091214051829/http://ja.doukaku.org/tag/groovy/">groovy</a>
    
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/7217/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/7217/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7217"
  >-</span><span
  class="button yellow"
  id="rating_z_7217"
  >0</span><span 
  class="button green"
  id="rating_p_7217"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/7217/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8838">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/8838/">#8838</a>(<script language="JavaScript">print_time(new Date("2009/04/25 22:50 GMT"));</script><noscript>2009/04/25 22:50 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>暇潰しにやってみた。</p>
<p>反則っちゃ反則なんだけどPCLベースのCLOS実装やってる処理系だと似たようなことできるんちゃうかな</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre>(use-package :sb-mop)
(defclass c0 ()
  ((x :initarg :x :accessor x)
   (y :initarg :y :accessor y)))
(defgeneric magnitude (obj))
(defmethod magnitude ((obj c0))
  (sqrt (+ (expt (x obj) 2) (expt (y obj) 2))))
(mapcar #&#39;(lambda (m)
        (slot-value (slot-value m &#39;SB-PCL::%GENERIC-FUNCTION)
            &#39;SB-PCL::NAME))
    (car (slot-value (find-class &#39;c0) &#39;SB-PCL::DIRECT-METHODS)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/8838/addtag/" class="addtag" id="addtag_8838">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/8838/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/8838/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8838"
  >-</span><span
  class="button yellow"
  id="rating_z_8838"
  >0</span><span 
  class="button green"
  id="rating_p_8838"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/8838/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8848">
  <p class="banner"><a href="/web/20091214051829/http://ja.doukaku.org/user/759/" target="_top">egtra</a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20091214051829/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/8848/">#8848</a>(<script language="JavaScript">print_time(new Date("2009/04/28 13:59 GMT"));</script><noscript>2009/04/28 13:59 GMT</noscript>)
	
	
	
	[<a href="/web/20091214051829/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ここでまさかのC++。ええと、WindowsでCOM使っています。VBやスクリプト言語用のIDispatch/ITypeInfoでリフレクションに相当する情報が得られるので、そこからメソッド名test_で始まるものを選び、IDipatchのInvokeメソッドで呼び出しています。</p>
<p>main関数より後ろはヘルパ群、ITypeInfoの型情報やIDispatch対応オブジェクトの作成などといった関数が並んでいます。</p>
<p>ITypeInfoはIDLから作るしかないと思っていたところ、このプログラムのようにCreateDispTypeInfo関数を使うとC++ソースコードの記述だけでITypeInfoを作れることを知りました。これを知らなければこの課題をC++でやることはなかったでしょう。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226</pre></td><td class="code"><div class="highlight"><pre><span class="c">//#define WIN32_LEAN_AND_MEAN</span>

<span class="cp">#include &lt;iostream&gt;</span>

<span class="cp">#include &lt;ole2.h&gt;</span>
<span class="cp">#include &lt;windows.h&gt;</span>
<span class="cp">#include &lt;comdef.h&gt;</span>

<span class="cp">#include &lt;boost/implicit_cast.hpp&gt;</span>
<span class="k">using</span> <span class="n">boost</span><span class="o">::</span><span class="n">implicit_cast</span><span class="p">;</span>

<span class="c">// ここでは再発明しましたが、COMSTL (WinSTLの兄弟)のcom_exceptionがお薦め</span>
<span class="k">class</span> <span class="nc">ComException</span>
<span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="k">explicit</span> <span class="n">ComException</span><span class="p">(</span><span class="n">HRESULT</span> <span class="n">hr</span><span class="p">)</span> <span class="o">:</span> <span class="n">hr</span><span class="p">(</span><span class="n">hr</span><span class="p">)</span> <span class="p">{}</span>
    <span class="n">ComException</span><span class="p">(</span><span class="k">const</span> <span class="n">ComException</span><span class="o">&amp;</span> <span class="n">rhs</span><span class="p">)</span> <span class="o">:</span> <span class="n">hr</span><span class="p">(</span><span class="n">rhs</span><span class="p">.</span><span class="n">hr</span><span class="p">)</span> <span class="p">{}</span>
    <span class="n">ComException</span><span class="o">&amp;</span> <span class="k">operator</span> <span class="o">=</span><span class="p">(</span><span class="k">const</span> <span class="n">ComException</span><span class="o">&amp;</span> <span class="n">rhs</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">hr</span> <span class="o">=</span> <span class="n">rhs</span><span class="p">.</span><span class="n">hr</span><span class="p">;</span>
        <span class="k">return</span> <span class="o">*</span><span class="k">this</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">HRESULT</span> <span class="n">GetErrorCode</span><span class="p">()</span> <span class="k">const</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">hr</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="c">//swapは使わないので省略</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">HRESULT</span> <span class="n">hr</span><span class="p">;</span>
<span class="p">};</span>

<span class="kt">void</span> <span class="n">ThrowIfFailed</span><span class="p">(</span><span class="n">HRESULT</span> <span class="n">hr</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">FAILED</span><span class="p">(</span><span class="n">hr</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="k">throw</span> <span class="n">ComException</span><span class="p">(</span><span class="n">hr</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c">// COM関係のヘッダに#define interface structとある。</span>
<span class="n">interface</span> <span class="kr">__declspec</span><span class="p">(</span><span class="n">uuid</span><span class="p">(</span><span class="s">&quot;c70cd2de-1285-4ec5-a78a-5600cf6fc79a&quot;</span><span class="p">))</span> <span class="kr">__declspec</span><span class="p">(</span><span class="n">novtable</span><span class="p">)</span>
<span class="n">ITest</span> <span class="o">:</span> <span class="n">IUnknown</span>
<span class="p">{</span>
    <span class="n">STDMETHOD</span><span class="p">(</span><span class="n">test_Hello</span><span class="p">)()</span> <span class="n">PURE</span><span class="p">;</span>
    <span class="n">STDMETHOD</span><span class="p">(</span><span class="n">test_Goodbye</span><span class="p">)()</span> <span class="n">PURE</span><span class="p">;</span>
    <span class="n">STDMETHOD</span><span class="p">(</span><span class="n">piyo_Dummy</span><span class="p">)()</span> <span class="n">PURE</span><span class="p">;</span>
    <span class="c">// マクロを全て展開するとこうなる。</span>
    <span class="c">// virtual __declspec(nothrow) HRESULT __stdcall test_Hello() = 0;</span>
<span class="p">};</span>

<span class="c">// ITestの実装例</span>
<span class="k">class</span> <span class="nc">TestImpl</span> <span class="o">:</span> <span class="k">public</span> <span class="n">ITest</span>
<span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">TestImpl</span><span class="p">()</span> <span class="o">:</span> <span class="n">refCount</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{}</span>

    <span class="n">HRESULT</span> <span class="n">STDMETHODCALLTYPE</span> <span class="n">QueryInterface</span><span class="p">(</span><span class="n">REFIID</span> <span class="n">riid</span><span class="p">,</span> <span class="kt">void</span><span class="o">**</span> <span class="n">ppv</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">riid</span> <span class="o">==</span> <span class="kr">__uuidof</span> <span class="p">(</span><span class="n">IUnknown</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="o">*</span><span class="n">ppv</span> <span class="o">=</span> <span class="n">implicit_cast</span><span class="o">&lt;</span><span class="n">IUnknown</span><span class="o">*&gt;</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">riid</span> <span class="o">==</span> <span class="kr">__uuidof</span> <span class="p">(</span><span class="n">ITest</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="o">*</span><span class="n">ppv</span> <span class="o">=</span> <span class="n">implicit_cast</span><span class="o">&lt;</span><span class="n">ITest</span><span class="o">*&gt;</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="o">*</span><span class="n">ppv</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="k">return</span> <span class="n">E_NOTIMPL</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">S_OK</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">ULONG</span> <span class="n">STDMETHODCALLTYPE</span> <span class="n">AddRef</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="o">++</span><span class="n">refCount</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">ULONG</span> <span class="n">STDMETHODCALLTYPE</span> <span class="n">Release</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">--</span><span class="n">refCount</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">delete</span> <span class="k">this</span><span class="p">;</span>
            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">refCount</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">HRESULT</span> <span class="n">STDMETHODCALLTYPE</span> <span class="n">test_Hello</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Hello, world!&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">S_OK</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">HRESULT</span> <span class="n">STDMETHODCALLTYPE</span> <span class="n">test_Goodbye</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Goodbye!&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">S_OK</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">HRESULT</span> <span class="n">STDMETHODCALLTYPE</span> <span class="n">piyo_Dummy</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">E_NOTIMPL</span><span class="p">;</span>
    <span class="p">}</span>
<span class="k">private</span><span class="o">:</span>
    <span class="n">ULONG</span> <span class="n">refCount</span><span class="p">;</span>
<span class="p">};</span>

<span class="c">// もし、IホゲPtrが無くてエラーになるなら。</span>
<span class="c">//_COM_SMARTPTR_TYPEDEF(ITypeInfo, __uuidof (ITypeInfo));</span>
<span class="c">//_COM_SMARTPTR_TYPEDEF(IUnknown, __uuidof (IUnknown));</span>
<span class="c">//_COM_SMARTPTR_TYPEDEF(IDispatch, __uuidof (IDispatch));</span>

<span class="n">ITypeInfoPtr</span> <span class="n">GetFirstInterfaceTypeInfo</span><span class="p">(</span><span class="n">ITypeInfo</span><span class="o">*</span> <span class="n">pti</span><span class="p">);</span>
<span class="n">IDispatchPtr</span> <span class="n">CreateDispTest</span><span class="p">(</span><span class="n">ITypeInfo</span><span class="o">*</span> <span class="n">pti</span><span class="p">);</span>
<span class="n">ITypeInfoPtr</span> <span class="n">GetTestTypeInfo</span><span class="p">();</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">try</span>
    <span class="p">{</span>
        <span class="n">ThrowIfFailed</span><span class="p">(</span><span class="n">OleInitialize</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>
        <span class="n">ITypeInfoPtr</span> <span class="n">pti</span> <span class="o">=</span> <span class="n">GetTestTypeInfo</span><span class="p">();</span> <span class="c">//クラスを表すITypeInfo</span>
        <span class="n">IDispatchPtr</span> <span class="n">target</span> <span class="o">=</span> <span class="n">CreateDispTest</span><span class="p">(</span><span class="n">pti</span><span class="p">);</span> <span class="c">//オブジェクトの作成</span>
        <span class="n">ITypeInfoPtr</span> <span class="n">ptiInterface</span> <span class="o">=</span> <span class="n">GetFirstInterfaceTypeInfo</span><span class="p">(</span><span class="n">pti</span><span class="p">);</span> <span class="c">//ITestを表すITypeInfo</span>
        <span class="n">TYPEATTR</span><span class="o">*</span> <span class="n">pta</span><span class="p">;</span>
        <span class="n">ThrowIfFailed</span><span class="p">(</span><span class="n">ptiInterface</span><span class="o">-&gt;</span><span class="n">GetTypeAttr</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pta</span><span class="p">));</span>
        <span class="c">//DISPPARAMS dp2 = {};</span>
        <span class="c">//ThrowIfFailed(pdisp-&gt;Invoke(2, IID_NULL, LOCALE_SYSTEM_DEFAULT,</span>
        <span class="c">//    DISPATCH_METHOD, &amp;dp2, 0, 0, 0));</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">pta</span><span class="o">-&gt;</span><span class="n">cFuncs</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c">// i個目の関数のMEMIDを取得</span>
            <span class="n">FUNCDESC</span><span class="o">*</span> <span class="n">pfd</span><span class="p">;</span>
            <span class="n">ThrowIfFailed</span><span class="p">(</span><span class="n">ptiInterface</span><span class="o">-&gt;</span><span class="n">GetFuncDesc</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pfd</span><span class="p">));</span>
            <span class="c">// その関数の名前を取得</span>
            <span class="n">_bstr_t</span> <span class="n">name</span><span class="p">;</span>
            <span class="n">UINT</span> <span class="n">count</span><span class="p">;</span>
            <span class="n">ThrowIfFailed</span><span class="p">(</span><span class="n">ptiInterface</span><span class="o">-&gt;</span><span class="n">GetNames</span><span class="p">(</span><span class="n">pfd</span><span class="o">-&gt;</span><span class="n">memid</span><span class="p">,</span> <span class="n">name</span><span class="p">.</span><span class="n">GetAddress</span><span class="p">(),</span> <span class="mi">1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">count</span><span class="p">));</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">wmemcmp</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="s">L&quot;test_&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">{</span>
                 <span class="c">// その関数がtest_で始まっていれば引数なしで呼び出す</span>
                <span class="n">DISPPARAMS</span> <span class="n">dp</span> <span class="o">=</span> <span class="p">{};</span>
                <span class="n">ThrowIfFailed</span><span class="p">(</span><span class="n">target</span><span class="o">-&gt;</span><span class="n">Invoke</span><span class="p">(</span><span class="n">pfd</span><span class="o">-&gt;</span><span class="n">memid</span><span class="p">,</span> <span class="n">IID_NULL</span><span class="p">,</span> <span class="n">LOCALE_SYSTEM_DEFAULT</span><span class="p">,</span>
                    <span class="n">DISPATCH_METHOD</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">dp</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">));</span>
            <span class="p">}</span>
            <span class="n">ptiInterface</span><span class="o">-&gt;</span><span class="n">ReleaseFuncDesc</span><span class="p">(</span><span class="n">pfd</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">ptiInterface</span><span class="o">-&gt;</span><span class="n">ReleaseTypeAttr</span><span class="p">(</span><span class="n">pta</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">catch</span><span class="p">(</span><span class="n">ComException</span> <span class="k">const</span><span class="o">&amp;</span> <span class="n">e</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">LPSTR</span> <span class="n">msg</span><span class="p">;</span>
        <span class="n">FormatMessageA</span><span class="p">(</span>
            <span class="n">FORMAT_MESSAGE_ALLOCATE_BUFFER</span> <span class="o">|</span> <span class="n">FORMAT_MESSAGE_FROM_SYSTEM</span><span class="p">,</span>
            <span class="nb">NULL</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">GetErrorCode</span><span class="p">(),</span> <span class="n">LANG_USER_DEFAULT</span><span class="p">,</span>
            <span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="n">LPSTR</span><span class="o">&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">msg</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="n">msg</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
        <span class="n">LocalFree</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">OleUninitialize</span><span class="p">();</span>
<span class="p">}</span>

<span class="c">// CreateDispTypeInfoを使ったお手軽ITypeInfoの作成。</span>
<span class="n">ITypeInfoPtr</span> <span class="n">GetTestTypeInfo</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="n">METHODDATA</span> <span class="n">md</span><span class="p">[]</span> <span class="o">=</span>
    <span class="p">{</span>
        <span class="p">{</span>
            <span class="c">/* szName = */</span> <span class="s">L&quot;test_Hello&quot;</span><span class="p">,</span>
            <span class="c">/* ppdata = */</span> <span class="mi">0</span><span class="p">,</span> <span class="c">//引数情報</span>
            <span class="c">/* dispid = */</span> <span class="mi">1</span><span class="p">,</span> <span class="c">//IDispatch::Invokeで呼び出すときの識別番号。適当な正の値で良い。</span>
            <span class="c">/* iMeth = */</span> <span class="mi">3</span><span class="p">,</span> <span class="c">//VTBL上のインデックス</span>
            <span class="c">/* cc = */</span> <span class="n">CC_STDCALL</span><span class="p">,</span> <span class="c">//呼出規約</span>
            <span class="c">/* cArgs = */</span> <span class="mi">0</span><span class="p">,</span> <span class="c">//引数の個数</span>
            <span class="c">/* wFlags = */</span> <span class="n">DISPATCH_METHOD</span><span class="p">,</span> <span class="c">//メソッド・プロパティの種別</span>
            <span class="c">/* vtReturn = */</span> <span class="n">VT_EMPTY</span><span class="p">,</span> <span class="c">//戻り値の型</span>
        <span class="p">},</span>
        <span class="p">{</span>
            <span class="c">/* szName = */</span> <span class="s">L&quot;test_Goodbye&quot;</span><span class="p">,</span>
            <span class="c">/* ppdata = */</span> <span class="mi">0</span><span class="p">,</span>
            <span class="c">/* dispid = */</span> <span class="mi">2</span><span class="p">,</span>
            <span class="c">/* iMeth = */</span> <span class="mi">4</span><span class="p">,</span>
            <span class="c">/* cc = */</span> <span class="n">CC_STDCALL</span><span class="p">,</span>
            <span class="c">/* cArgs = */</span> <span class="mi">0</span><span class="p">,</span>
            <span class="c">/* wFlags = */</span> <span class="n">DISPATCH_METHOD</span><span class="p">,</span>
            <span class="c">/* vtReturn = */</span> <span class="n">VT_EMPTY</span><span class="p">,</span>
        <span class="p">},</span>
        <span class="p">{</span>
            <span class="c">/* szName = */</span> <span class="s">L&quot;piyo_Dummy&quot;</span><span class="p">,</span>
            <span class="c">/* ppdata = */</span> <span class="mi">0</span><span class="p">,</span>
            <span class="c">/* dispid = */</span> <span class="mi">3</span><span class="p">,</span>
            <span class="c">/* iMeth = */</span> <span class="mi">5</span><span class="p">,</span>
            <span class="c">/* cc = */</span> <span class="n">CC_STDCALL</span><span class="p">,</span>
            <span class="c">/* cArgs = */</span> <span class="mi">0</span><span class="p">,</span>
            <span class="c">/* wFlags = */</span> <span class="n">DISPATCH_METHOD</span><span class="p">,</span>
            <span class="c">/* vtReturn = */</span> <span class="n">VT_EMPTY</span><span class="p">,</span>
        <span class="p">},</span>
    <span class="p">};</span>
    <span class="k">static</span> <span class="n">INTERFACEDATA</span> <span class="n">id</span> <span class="o">=</span>
    <span class="p">{</span>
        <span class="n">md</span><span class="p">,</span> <span class="n">ARRAYSIZE</span><span class="p">(</span><span class="n">md</span><span class="p">),</span> <span class="c">// ARRAYSIZEは&lt;windows.h&gt;の中で定義されている配列の要素数を求めるマクロ</span>
    <span class="p">};</span>
    <span class="n">ITypeInfoPtr</span> <span class="n">pti</span><span class="p">;</span>
    <span class="n">ThrowIfFailed</span><span class="p">(</span><span class="n">CreateDispTypeInfo</span><span class="p">(</span><span class="o">&amp;</span><span class="n">id</span><span class="p">,</span> <span class="n">LOCALE_SYSTEM_DEFAULT</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">pti</span><span class="p">));</span>
    <span class="k">return</span> <span class="n">pti</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">// TestImplのディスパッチオブジェクトを作成。</span>
<span class="c">// ただし、ITypeInfを引数として与えること。</span>
<span class="n">IDispatchPtr</span> <span class="n">CreateDispTest</span><span class="p">(</span><span class="n">ITypeInfo</span><span class="o">*</span> <span class="n">pti</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">TestImpl</span><span class="o">*</span> <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TestImpl</span><span class="p">;</span>
    <span class="n">IUnknown</span><span class="o">*</span> <span class="n">punkDispObj</span><span class="p">;</span>
    <span class="n">ThrowIfFailed</span><span class="p">(</span><span class="n">CreateStdDispatch</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">pti</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">punkDispObj</span><span class="p">));</span>
    <span class="k">return</span> <span class="n">punkDispObj</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">// あるITypeInfoから、1番目に継承もしくは実装しているインタフェースを返すヘルパ。</span>
<span class="n">ITypeInfoPtr</span> <span class="n">GetFirstInterfaceTypeInfo</span><span class="p">(</span><span class="n">ITypeInfo</span><span class="o">*</span> <span class="n">pti</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">ITypeInfoPtr</span> <span class="n">res</span><span class="p">;</span>
    <span class="n">HREFTYPE</span> <span class="n">hrt</span><span class="p">;</span>
    <span class="n">ThrowIfFailed</span><span class="p">(</span><span class="n">pti</span><span class="o">-&gt;</span><span class="n">GetRefTypeOfImplType</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">hrt</span><span class="p">));</span>
    <span class="n">ThrowIfFailed</span><span class="p">(</span><span class="n">pti</span><span class="o">-&gt;</span><span class="n">GetRefTypeInfo</span><span class="p">(</span><span class="n">hrt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">res</span><span class="p">));</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20091214051829/http://ja.doukaku.org/comment/8848/addtag/" class="addtag" id="addtag_8848">タグ</a>:
	
    
    <a href="/web/20091214051829/http://ja.doukaku.org/tag/COM/">COM</a>
    
	&nbsp;

	
      [<a href="/web/20091214051829/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20091214051829/http://ja.doukaku.org/comment/8848/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20091214051829/http://ja.doukaku.org/comment/8848/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8848"
  >-</span><span
  class="button yellow"
  id="rating_z_8848"
  >0</span><span 
  class="button green"
  id="rating_p_8848"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20091214051829/http://ja.doukaku.org/32/reply_to/8848/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20091214051829if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20091214051829/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20091214051829/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20091214051829/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20091214051829/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20091214051829/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20091214051829/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20091214051829/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20091214051829/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20091214051829/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20091214051829/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20091214051829im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20091214051829/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20091214051829/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20091214051829/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20091214051829/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20091214051829/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20091214051829/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20091214051829/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20091214051829/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20091214051829im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20091214051829/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20091214051829/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20091214051829/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20091214051829js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 5:18:29 Dec 14, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 13:53:15 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
