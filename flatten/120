
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
コラッツ・角谷の問題
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20080926203709cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20080926203709cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20080926203709cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20080926203709/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20080926203709/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20080926203709js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20080926203709js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20080926203709js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20080926203709js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app2.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/120\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "26";
var displayMonth = "Sep";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/120/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20080926203709" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20070513180302/http://ja.doukaku.org/120/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="13 May 2007"><strong>MAY</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 20:37:09 Sep 26, 2008">SEP</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Oct
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20070513180302/http://ja.doukaku.org/120/flatten/" title="18:03:02 May 13, 2007" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 20:37:09 Sep 26, 2008">26</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20070513180302/http://ja.doukaku.org/120/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="13 May 2007"><strong>2007</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 20:37:09 Sep 26, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20080926203709*/http://ja.doukaku.org/120/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">13 May 07 - 26 Sep 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000010000000_2008:8:000000001000_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20080926203709/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20080926203709/http://ja.doukaku.org/120/">コラッツ・角谷の問題</a>
</h2>

    





<div class="comment" id="comment4969">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/4969/">#4969</a>(<script language="JavaScript">print_time(new Date("2007/12/25 15:18 GMT"));</script><noscript>2007/12/25 15:18 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <pre class='compact'>任意の数nを与えたときに
・nが偶数ならば2で割る　(n=n/2)
・nが奇数ならば3倍して1を足す （n = 3*n+1)
を繰り返すと、いづれは1になる。というものがあります。

数値計算の上ではかなりの数まで成り立つことが知られています。
（すべての数について成り立つかは不明）
参考リンク先参照

ある任意の数nがコラッツ・角谷の問題で1になるまでのステップ数をf(n)とします。
1～2^20までの数でf(n)を求めて、f(n)が最大になるときのnとf(n)を表示してください。

たとえばn=9だと次のような数列をたどって、19ステップで1になります。
9-&gt;28-&gt;14-&gt;7-&gt;22-&gt;11-&gt;34-&gt;17-&gt;52-&gt;26-&gt;13-&gt;40-&gt;20-&gt;10-&gt;5-&gt;16-&gt;8-&gt;4-&gt;2-&gt;1
つまりf(9)=19です。

また、最大を求めた際の実行時間と環境を書いてください。</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20080926203709/http://q.hatena.ne.jp/1115469752">コラッツの問題の成り立つ範囲</a>
	</p>  
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/4969/addtag/" class="addtag" id="addtag_4969">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_4969"
  >-</span><span
  class="button yellow"
  id="rating_z_4969"
  >0</span><span 
  class="button green"
  id="rating_p_4969"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/4969/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20080926203709/http://ja.doukaku.org/120/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - フラット表示</h2>
<a href="/web/20080926203709/http://ja.doukaku.org/120/nested/">ネスト表示</a>
<a href="/web/20080926203709/http://ja.doukaku.org/120/">非表示</a> 


  
  <br/>

  
  




<div class="comment" id="comment5086">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5086/">#5086</a>(<script language="JavaScript">print_time(new Date("2008/01/01 12:34 GMT"));</script><noscript>2008/01/01 12:34 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Pen4 2.40GHz で、以下のような結果になりました。最初にIntegerでやっていたので、113383 ではまってました。</p>
<p>f(837799)=524
elapse: 15469(ms)</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample120</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">final</span> <span class="kt">long</span> <span class="n">maxIndex_</span><span class="o">;</span>
    <span class="k">private</span> <span class="k">final</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">,</span> <span class="n">Long</span><span class="o">&gt;</span> <span class="n">memo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">,</span> <span class="n">Long</span><span class="o">&gt;();</span>

    <span class="k">public</span> <span class="n">Sample120</span><span class="o">(</span><span class="kt">int</span> <span class="n">max</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">long</span> <span class="n">maxInd</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">long</span> <span class="n">maxLen</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">&gt;</span> <span class="n">sequence</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">long</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;=</span> <span class="n">max</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">sequence</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
            <span class="kt">long</span> <span class="n">len</span> <span class="o">=</span> <span class="n">calc3n1</span><span class="o">(</span><span class="n">index</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">sequence</span><span class="o">);</span>
            <span class="n">createMemo</span><span class="o">(</span><span class="n">len</span><span class="o">,</span> <span class="n">sequence</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">maxLen</span> <span class="o">&lt;</span> <span class="n">len</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">maxLen</span> <span class="o">=</span> <span class="n">len</span><span class="o">;</span>
                <span class="n">maxInd</span> <span class="o">=</span> <span class="n">index</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">maxIndex_</span> <span class="o">=</span> <span class="n">maxInd</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">long</span> <span class="n">calc3n1</span><span class="o">(</span><span class="kt">long</span> <span class="n">x</span><span class="o">,</span> <span class="kt">long</span> <span class="n">length</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">&gt;</span> <span class="n">sequence</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">sequence</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">x</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">x</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="k">return</span> <span class="n">length</span><span class="o">;</span>

        <span class="n">Long</span> <span class="n">longVal</span> <span class="o">=</span> <span class="n">memo</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">x</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">longVal</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="k">return</span> <span class="n">length</span> <span class="o">+</span> <span class="n">longVal</span><span class="o">.</span><span class="na">longValue</span><span class="o">();</span>

        <span class="k">if</span> <span class="o">((</span><span class="n">x</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">calc3n1</span><span class="o">(</span><span class="n">x</span> <span class="o">/</span> <span class="mi">2</span><span class="o">,</span> <span class="n">length</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">sequence</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">calc3n1</span><span class="o">(</span><span class="mi">3</span> <span class="o">*</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">length</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">sequence</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">private</span> <span class="kt">void</span> <span class="n">createMemo</span><span class="o">(</span><span class="kt">long</span> <span class="n">length</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">&gt;</span> <span class="n">sequence</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">long</span> <span class="n">len</span> <span class="o">=</span> <span class="n">length</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">max</span> <span class="o">=</span> <span class="n">sequence</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">max</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">Long</span> <span class="n">longVal</span> <span class="o">=</span> <span class="n">sequence</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">memo</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">longVal</span><span class="o">)</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">memo</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">longVal</span><span class="o">,</span> <span class="n">len</span><span class="o">--);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="kt">long</span> <span class="n">getMaxIndex</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">maxIndex_</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="kt">long</span> <span class="n">getMaxLength</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">memo</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">maxIndex_</span><span class="o">);</span>
    <span class="o">}</span>


    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>

        <span class="n">Sample120</span> <span class="n">instance</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sample120</span><span class="o">((</span><span class="kt">int</span><span class="o">)</span><span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">20</span><span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">instance</span><span class="o">.</span><span class="na">getMaxIndex</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;:&quot;</span> <span class="o">+</span> <span class="n">instance</span><span class="o">.</span><span class="na">getMaxLength</span><span class="o">());</span>

        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;elapse: &quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span> <span class="o">-</span> <span class="n">start</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;(ms)&quot;</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5086/addtag/" class="addtag" id="addtag_5086">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/Java1.5/">Java1.5</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5086/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5086/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5086"
  >-</span><span
  class="button yellow"
  id="rating_z_5086"
  >0</span><span 
  class="button green"
  id="rating_p_5086"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5086/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5088">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5088/">#5088</a>(<script language="JavaScript">print_time(new Date("2008/01/01 12:48 GMT"));</script><noscript>2008/01/01 12:48 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>とりあえず書いたって感じですが。CLISP で約9秒。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre>(defun collatz (n)
  (let ((memo (make-hash-table)))
    (setf (gethash 1 memo) 1)
    (labels ((collatz-loop (i)
               (cond ((gethash i memo))
                     ((evenp i)
                      (setf (gethash i memo) (1+ (collatz-loop (/ i 2)))))
                     (t
                      (setf (gethash i memo) (1+ (collatz-loop (1+ (* 3 i)))))))))
      (loop with max = 0 and j for i from 1 to n as x = (collatz-loop i)
        if (&lt; max x) do (setf max x j i)
        finally (format t &quot;max ~D for n=~D~%&quot; max j)))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5088/addtag/" class="addtag" id="addtag_5088">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5088/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5088/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5088"
  >-</span><span
  class="button yellow"
  id="rating_z_5088"
  >0</span><span 
  class="button green"
  id="rating_p_5088"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5088/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5088/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5089">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/479/" target="_top">tsuwabuki</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5089/">#5089</a>(<script language="JavaScript">print_time(new Date("2008/01/01 12:57 GMT"));</script><noscript>2008/01/01 12:57 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>実行結果:
n=837799, f(n)=524

実行時間:
$ time ./a.out
(524,837799)

real    3m28.485s
user    3m27.893s
sys     0m0.368s

実行環境:
CPU: celeron 1.2GHz
MEM: 256MB</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Main</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Map</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">print</span> <span class="o">$</span> <span class="nv">findMax</span> <span class="o">$</span> <span class="nv">fromList</span> <span class="p">[(</span><span class="nv">collatz</span> <span class="nv">n</span><span class="p">,</span> <span class="nv">n</span><span class="p">)</span> <span class="o">|</span> <span class="nv">n</span> <span class="o">&lt;-</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="mi">2</span><span class="o">^</span><span class="mi">20</span><span class="p">]]</span>

<span class="nv">collatz</span> <span class="nv">n</span>
    <span class="o">|</span> <span class="nv">n</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="o">|</span> <span class="nv">even</span> <span class="nv">n</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">+</span> <span class="nv">collatz</span> <span class="p">(</span><span class="nv">n</span> <span class="p">`</span><span class="nv">div</span><span class="p">`</span> <span class="mi">2</span><span class="p">)</span>
    <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">+</span> <span class="nv">collatz</span> <span class="p">(</span><span class="nv">n</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5089/addtag/" class="addtag" id="addtag_5089">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5089/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5089/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5089"
  >-</span><span
  class="button yellow"
  id="rating_z_5089"
  >0</span><span 
  class="button green"
  id="rating_p_5089"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5089/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5089/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5090">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5090/">#5090</a>(<script language="JavaScript">print_time(new Date("2008/01/01 13:01 GMT"));</script><noscript>2008/01/01 13:01 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
<p>あけましておめでとうございます。
   今年もなにとぞよろしくおねがいします。
</p>
<p>軽くメモ化して。
</p>
<ul>
 <li>
     CPU: Athlon64 3000
 </li>

 <li>
     MEM: 1G
 </li>

 <li>
     OS: WinXP
 </li>
</ul>
<p>で
</p>
<p><code>f(837799)=524, 7281 ms.</code>
</p>
<p>という感じです。
</p>



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre>import scala.collection.mutable.HashMap
object collatz {
  val memo = new HashMap[long, int]
  def apply(n:int):int = apply(n, n, 0)

  def apply(n:long, m:int, i:int):int = {
    if(memo.contains(n)) {
      val o = memo(n) + i
      memo(m) = o; o
    } else n&amp;1 match {
          case 0 =&gt; apply(n/2, m, i+1)
          case x if n == 1 =&gt; memo(m) = i; i
          case x =&gt; apply(3*n+1, m, i+1)
    }
  }
}

object main {
  def main(args:Array[String]) = {
    val start = System.currentTimeMillis
    val limit = (2 &lt;&lt; (20 - 1)) + 1
    var biggest_n = 0
    var biggest_v = 0
    var v = 0
    var i = 0; while({i = i+1; i &lt; limit}){
      v = collatz(i)
      if(biggest_v &lt; v) {
        biggest_v = v
        biggest_n   = i
      }
    }
    println(&quot;f(&quot;+biggest_n+&quot;)=&quot;+biggest_v+&quot;, &quot;+(System.currentTimeMillis-start)+&quot; ms.&quot;)
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5090/addtag/" class="addtag" id="addtag_5090">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5090/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5090/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5090"
  >-</span><span
  class="button yellow"
  id="rating_z_5090"
  >0</span><span 
  class="button green"
  id="rating_p_5090"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5090/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5091">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5091/">#5091</a>(<script language="JavaScript">print_time(new Date("2008/01/01 13:05 GMT"));</script><noscript>2008/01/01 13:05 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>最大を与えるnが複数の場合を考慮するか？
1にならない可能性を考慮するか？

で実装がけっこう変わる場合があると思います。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5091/addtag/" class="addtag" id="addtag_5091">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5091"
  >-</span><span
  class="button yellow"
  id="rating_z_5091"
  >0</span><span 
  class="button green"
  id="rating_p_5091"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5091/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5091/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5092">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5092/">#5092</a>(<script language="JavaScript">print_time(new Date("2008/01/01 13:17 GMT"));</script><noscript>2008/01/01 13:17 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>SBCL 1.0.13 x86_64 / Linux / Core2 E6600 2.4GHzで、2〜3秒でした。
(time  (collatz-max (expt 2 20)))
;=&gt; f(837799) = 524
;
;Evaluation took:
;  1.355 seconds of real time
;  2.672167 seconds of user run time
;  0.0 seconds of system run time
;  0 calls to %EVAL
;  0 page faults and
;  1,728 bytes consed.</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre>(defun collatz (n)
  (do ((cnt 0 (1+ cnt))
       (res n (if (evenp res) (ash res -1) (1+ (* res 3)))))
      ((= 1 res) cnt)
    (declare (fixnum cnt res n))))

(defun collatz-max (num)
  (do ((i 1 (1+ i)) (n 0) (highest 0))
      ((&gt; i num) (format t &quot;f(~D) = ~D~%&quot; n highest))
    (let ((cur (collatz i))) 
      (when (&lt; highest cur) 
        (setq n i highest cur)))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5092/addtag/" class="addtag" id="addtag_5092">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5092/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5092/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5092"
  >-</span><span
  class="button yellow"
  id="rating_z_5092"
  >0</span><span 
  class="button green"
  id="rating_p_5092"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5092/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5093">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5093/">#5093</a>(<script language="JavaScript">print_time(new Date("2008/01/01 14:05 GMT"));</script><noscript>2008/01/01 14:05 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>f(837799)=524
4468ms</p>
<p>意外と速度出ました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre><span class="c">//http://ja.doukaku.org/120/　投稿用</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
        <span class="kt">long</span> <span class="n">ticks</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Ticks</span><span class="p">;</span><span class="c">//時間記録</span>
        <span class="kt">double</span> <span class="n">z</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Pow</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="m">20</span><span class="p">);</span><span class="c">//2^20</span>

        <span class="kt">int</span> <span class="n">step</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span><span class="c">//最大ステップ数</span>
        <span class="kt">double</span> <span class="n">n</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span><span class="c">//ステップが最大のn</span>

        <span class="k">for</span><span class="p">(</span><span class="kt">double</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">z</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span><span class="c">//2^20までループ</span>
            <span class="kt">int</span> <span class="n">stepTmp</span> <span class="p">=</span> <span class="n">fStep</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">step</span> <span class="p">&lt;</span> <span class="n">stepTmp</span><span class="p">)</span> <span class="k">{</span><span class="c">//大きければ更新</span>
                <span class="n">step</span> <span class="p">=</span> <span class="n">stepTmp</span><span class="p">;</span>
                <span class="n">n</span> <span class="p">=</span> <span class="n">i</span><span class="p">;</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;f(&quot;</span> <span class="p">+</span> <span class="n">n</span> <span class="p">+</span> <span class="s">&quot;)=&quot;</span> <span class="p">+</span> <span class="n">step</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">((</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Ticks</span> <span class="p">-</span> <span class="n">ticks</span><span class="p">)</span> <span class="p">/</span> <span class="m">10000L</span> <span class="p">+</span> <span class="s">&quot;ms&quot;</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">int</span> <span class="nf">fStep</span><span class="p">(</span><span class="kt">double</span> <span class="n">z</span><span class="p">)</span> <span class="k">{</span>
        <span class="kt">int</span> <span class="n">step</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        <span class="kt">double</span> <span class="n">n</span> <span class="p">=</span> <span class="n">z</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="n">n</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span> <span class="k">{</span><span class="c">//1になるまで</span>
            <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="p">%</span> <span class="m">2</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="n">n</span> <span class="p">/=</span> <span class="m">2</span><span class="p">;</span><span class="c">//偶数だったら</span>
            <span class="k">else</span> <span class="n">n</span> <span class="p">=</span> <span class="n">n</span> <span class="p">*</span> <span class="m">3</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span><span class="c">//奇数だったら</span>
            <span class="n">step</span><span class="p">++;</span><span class="c">//ステップを数える</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="n">step</span><span class="p">;</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5093/addtag/" class="addtag" id="addtag_5093">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/C%232.0/">C#2.0</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5093/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5093/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5093"
  >-</span><span
  class="button yellow"
  id="rating_z_5093"
  >0</span><span 
  class="button green"
  id="rating_p_5093"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5093/">
    2
    replies
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5093/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5094">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5094/">#5094</a>(<script language="JavaScript">print_time(new Date("2008/01/01 14:07 GMT"));</script><noscript>2008/01/01 14:07 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>環境を忘れてました。
OS:Windows XP Home SP2
CPU:AMD Sempron 3400+ 1.99GHz
メモリ:480MB</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5094/addtag/" class="addtag" id="addtag_5094">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5094"
  >-</span><span
  class="button yellow"
  id="rating_z_5094"
  >0</span><span 
  class="button green"
  id="rating_p_5094"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5093/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5094/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5094/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5095">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5095/">#5095</a>(<script language="JavaScript">print_time(new Date("2008/01/01 14:13 GMT"));</script><noscript>2008/01/01 14:13 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>リリースビルドで
3656ms
まで速くなりました。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5095/addtag/" class="addtag" id="addtag_5095">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5095"
  >-</span><span
  class="button yellow"
  id="rating_z_5095"
  >0</span><span 
  class="button green"
  id="rating_p_5095"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5093/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5095/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5095/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5096">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/507/" target="_top">fujidig</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5096/">#5096</a>(<script language="JavaScript">print_time(new Date("2008/01/01 14:18 GMT"));</script><noscript>2008/01/01 14:18 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>      user     system      total        real
 38.657000   0.109000  38.766000 ( 39.703000)
result : f( 837799 ) = 524
でした＞＜</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">f</span> <span class="n">n</span>
    <span class="n">step</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">_n</span> <span class="o">=</span> <span class="n">n</span>
    <span class="k">while</span> <span class="n">n</span> <span class="o">!=</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">n</span><span class="o">.</span><span class="n">class</span> <span class="o">==</span> <span class="no">Fixnum</span> <span class="o">&amp;&amp;</span> <span class="vg">$cache</span><span class="o">[</span><span class="n">n</span><span class="o">]</span> <span class="o">!=</span> <span class="kp">nil</span>
            <span class="n">step</span> <span class="o">+=</span> <span class="vg">$cache</span><span class="o">[</span><span class="n">n</span><span class="o">]</span>
            <span class="k">break</span>
        <span class="k">end</span>
        <span class="k">if</span> <span class="n">n</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span>
            <span class="n">n</span> <span class="o">=</span> <span class="n">n</span> <span class="o">/</span> <span class="mi">2</span>
        <span class="k">else</span>
            <span class="n">n</span> <span class="o">=</span>  <span class="mi">3</span> <span class="o">*</span> <span class="n">n</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">end</span>
        <span class="n">step</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">end</span>
    <span class="vg">$cache</span><span class="o">[</span><span class="n">_n</span><span class="o">]</span> <span class="o">=</span> <span class="n">step</span>
    <span class="k">return</span> <span class="n">step</span>
<span class="k">end</span>

<span class="vg">$cache</span> <span class="o">=</span> <span class="o">[]</span>

<span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>

<span class="n">max_f</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">max_i</span> <span class="o">=</span> <span class="mi">0</span>

<span class="nb">puts</span> <span class="no">Benchmark</span><span class="o">::</span><span class="no">CAPTION</span>
<span class="nb">puts</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">measure</span> <span class="p">{</span>
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">2</span><span class="o">**</span><span class="mi">20</span>
        <span class="n">f_i</span> <span class="o">=</span> <span class="n">f</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">f_i</span> <span class="o">&gt;</span> <span class="n">max_f</span>
            <span class="n">max_f</span> <span class="o">=</span> <span class="n">f_i</span>
            <span class="n">max_i</span> <span class="o">=</span> <span class="n">i</span>
        <span class="k">end</span>
    <span class="k">end</span>
<span class="p">}</span>

<span class="nb">puts</span> <span class="s2">&quot;result : f( </span><span class="si">#{</span><span class="n">max_i</span><span class="si">}</span><span class="s2"> ) = </span><span class="si">#{</span><span class="n">max_f</span><span class="si">}</span><span class="s2">&quot;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5096/addtag/" class="addtag" id="addtag_5096">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5096/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5096/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5096"
  >-</span><span
  class="button yellow"
  id="rating_z_5096"
  >0</span><span 
  class="button green"
  id="rating_p_5096"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5096/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5096/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5097">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/507/" target="_top">fujidig</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5097/">#5097</a>(<script language="JavaScript">print_time(new Date("2008/01/01 14:21 GMT"));</script><noscript>2008/01/01 14:21 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  環境を忘れていました。Pentium 4 CPU 2.40GHz / 512 MB RAM です。。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5097/addtag/" class="addtag" id="addtag_5097">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5097"
  >-</span><span
  class="button yellow"
  id="rating_z_5097"
  >0</span><span 
  class="button green"
  id="rating_p_5097"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5096/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5097/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5097/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5098">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/216/" target="_top">tosik</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5098/">#5098</a>(<script language="JavaScript">print_time(new Date("2008/01/01 14:24 GMT"));</script><noscript>2008/01/01 14:24 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Compiler: GCC 3.4.4
OS: Cygwin on Windows XP Pro SP2
CPU: Intel Centrino 1GHz
Memory: 504MB
----------------------
&gt;time ./collatz.exe
f(837799) = 524

real    0m0.530s
user    0m0.400s
sys     0m0.060s
----------------------
簡単なキャッシュを実装したら0.5秒と、思った以上に高速化できました。
答えが皆さんと同じなので安心。
C++なのにCっぽく書きましたが、可読性は若干犠牲になりますが、速度面でプラスになってると思います。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>

<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">1048577</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">cache</span><span class="p">[</span><span class="n">MAX</span><span class="p">];</span>

<span class="kt">int</span> <span class="n">collatz</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">org_n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">depth</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span> <span class="n">MAX</span> <span class="o">&gt;=</span> <span class="n">n</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span> <span class="n">cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cache</span><span class="p">[</span><span class="n">org_n</span><span class="p">]</span> <span class="o">=</span> <span class="n">cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">+</span> <span class="n">depth</span><span class="p">;</span>
            <span class="k">return</span> <span class="n">cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">+</span> <span class="n">depth</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span> <span class="n">n</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">collatz</span><span class="p">(</span> <span class="n">n</span> <span class="o">/</span> <span class="mi">2</span><span class="p">,</span> <span class="n">org_n</span><span class="p">,</span> <span class="n">depth</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cache</span><span class="p">[</span><span class="n">org_n</span><span class="p">]</span> <span class="o">=</span> <span class="n">depth</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">depth</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">collatz</span><span class="p">(</span> <span class="n">n</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">org_n</span><span class="p">,</span> <span class="n">depth</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>


<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span> <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">MAX</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">)</span>
        <span class="n">cache</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>

    <span class="kt">int</span> <span class="n">max_n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">max_steps</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">MAX</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">steps</span> <span class="o">=</span> <span class="n">collatz</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span> <span class="n">max_steps</span> <span class="o">&lt;</span> <span class="n">steps</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="n">max_steps</span> <span class="o">=</span> <span class="n">steps</span><span class="p">;</span>
            <span class="n">max_n</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;f(%d) = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">max_n</span><span class="p">,</span> <span class="n">max_steps</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5098/addtag/" class="addtag" id="addtag_5098">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5098/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5098/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5098"
  >-</span><span
  class="button yellow"
  id="rating_z_5098"
  >0</span><span 
  class="button green"
  id="rating_p_5098"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5098/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5098/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5099">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5099/">#5099</a>(<script language="JavaScript">print_time(new Date("2008/01/01 14:25 GMT"));</script><noscript>2008/01/01 14:25 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/diff/">
	  diff
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ステップ数をひとつ多く数えてました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2</pre></td><td class="code"><div class="highlight"><pre><span class="gd">-    (setf (gethash 1 memo) 1)</span>
<span class="gi">+    (setf (gethash 1 memo) 0)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5099/addtag/" class="addtag" id="addtag_5099">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/diff/">
		diff
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5099/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5099/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5099"
  >-</span><span
  class="button yellow"
  id="rating_z_5099"
  >0</span><span 
  class="button green"
  id="rating_p_5099"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5088/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5099/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5099/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5100">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/380/" target="_top">vtwntmtn</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5100/">#5100</a>(<script language="JavaScript">print_time(new Date("2008/01/01 14:49 GMT"));</script><noscript>2008/01/01 14:49 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/erlang/">
	  Erlang
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>環境</p>
<pre class="literal-block">
CPU : Intel(R) Celeron(R) CPU 2.40GHz
MEM : 774324 kB
OS : VineLinux 4.2
</pre>
<p>コマンド</p>
<pre class="literal-block">
erlc +native collatz_kakutani.erl
time -p erl +native -noshell -s collatz_kakutani main -s init stop
</pre>
<p>実行結果</p>
<pre class="literal-block">
f(837799) = 524
</pre>
<p>実行時間</p>
<pre class="literal-block">
real 18.46
user 14.72
sys 0.40
</pre>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre>-module(collatz_kakutani).
-export([main/0]).

step(1, Step) -&gt; Step;
step(Num, Step) -&gt;
        case Num rem 2 of
                0 -&gt; step(Num div 2, Step + 1);
                1 -&gt; step(3 * Num + 1, Step + 1)
        end.

max_step(1, MaxNum, MaxStep) -&gt; [MaxNum, MaxStep];
max_step(Num, MaxNum, MaxStep) -&gt;
        TmpStep = step(Num, 0),
        if
                TmpStep &gt; MaxStep -&gt; max_step(Num - 1, Num, TmpStep);
                true              -&gt; max_step(Num - 1, MaxNum, MaxStep)
        end.

main() -&gt; io:format(&quot;f(~B) = ~B~n&quot;, max_step(1 bsl 20, 1, 1)).
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5100/addtag/" class="addtag" id="addtag_5100">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/ErlangOTP_R10B-10/">ErlangOTP_R10B-10</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/erlang/">
		Erlang
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5100/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5100/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5100"
  >-</span><span
  class="button yellow"
  id="rating_z_5100"
  >0</span><span 
  class="button green"
  id="rating_p_5100"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5100/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5101">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5101/">#5101</a>(<script language="JavaScript">print_time(new Date("2008/01/01 16:27 GMT"));</script><noscript>2008/01/01 16:27 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>お題投稿者です。
先日、放送大学を見ていたらこの問題が紹介されていたので、懐かしかったので出題してみました。

AthlonXP2500+で4.3秒でした。
2^25まで調べてみました。
これよりも大きい数になると、メモリが必死になるから、メモ化とは別のアプローチが必要になるかなぁ。
だいたいmaxに比例する感じですね。

max =  524288 time =  2.31200003624 sec result = [511935, 469]
max =  1048576 time =  4.28099989891 sec result = [837799, 524]
max =  2097152 time =  8.67200016975 sec result = [1723519, 556]
max =  4194304 time =  17.875 sec result = [3732423, 596]
max =  8388608 time =  37.0779998302 sec result = [6649279, 664]
max =  16777216 time =  74.2660000324 sec result = [15733191, 704]
max =  33554432 time =  153.812000036 sec result = [31466382, 705]</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">time</span>
<span class="k">import</span> <span class="nn">sys</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">cMax</span><span class="p">):</span>
    <span class="n">memo</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">cMax</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">_f</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
            <span class="k">return</span> <span class="mi">0</span>
        <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="n">cMax</span> <span class="ow">and</span> <span class="n">memo</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">memo</span><span class="p">[</span><span class="n">n</span><span class="p">]</span>
        <span class="k">if</span> <span class="n">n</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">step</span> <span class="o">=</span> <span class="n">_f</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">step</span> <span class="o">=</span> <span class="n">_f</span><span class="p">(</span><span class="n">n</span><span class="o">*</span><span class="mi">3</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="n">cMax</span><span class="p">:</span>
            <span class="n">memo</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="n">step</span>
        <span class="k">return</span> <span class="n">step</span>

    <span class="n">m</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">cMax</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">memo</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">_f</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">memo</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">m</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span>
                <span class="n">m</span> <span class="o">=</span><span class="p">[</span><span class="n">x</span><span class="p">,</span><span class="n">memo</span><span class="p">[</span><span class="n">x</span><span class="p">]]</span>

    <span class="k">return</span> <span class="n">m</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">25</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
        <span class="n">result</span> <span class="o">=</span> <span class="n">main</span><span class="p">(</span><span class="mi">2</span><span class="o">**</span><span class="n">x</span><span class="p">)</span>
        <span class="k">print</span> <span class="s">&quot;max = &quot;</span><span class="p">,</span> <span class="mi">2</span><span class="o">**</span><span class="n">x</span> <span class="p">,</span> <span class="s">&quot;time = &quot;</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t</span><span class="p">,</span> <span class="s">&quot;sec result =&quot;</span><span class="p">,</span> <span class="n">result</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5101/addtag/" class="addtag" id="addtag_5101">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5101/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5101/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5101"
  >-</span><span
  class="button yellow"
  id="rating_z_5101"
  >0</span><span 
  class="button green"
  id="rating_p_5101"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5101/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5101/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5103">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/26/" target="_top">dankogai</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5103/">#5103</a>(<script language="JavaScript">print_time(new Date("2008/01/01 18:14 GMT"));</script><noscript>2008/01/01 18:14 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
<p>これ、<a href="/web/20080926203709/http://ll.jus.or.jp/2006/blog/doukaku2">キミならどう書く 2.0 - ROUND 2 -</a>と同じ問題ですね。違うのは、LL Ringの時の「どう書く」では、1の時も1と数えるので、1違うだけで。
</p>
<p>その時にいろいろ書いて出来た最速の奴を。j詳しくは<a href="/web/20080926203709/http://blog.livedoor.jp/dankogai/archives/50564170.html">404 Blog Not Found:h(4294967295) = 2610744987 where g = 1051</a>
   をご覧下さい。
</p>
<p>途中経過表示をやめれば、もっと速くなるでしょう。
</p>
<p>Dan the Number Cruncher
</p>



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82</pre></td><td class="code"><div class="highlight"><pre><span class="c">/*</span>
<span class="c">Core 2 Duo 2.33GHzで</span>

<span class="c">% time ./a.out 1000000</span>
<span class="c">h(1000000) = 837799 where g(837799) = 525</span>
<span class="c">0.264u 0.006s 0:00.27 96.2%     0+0k 0+0io 0pf+0w</span>
<span class="c">*/</span>

<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>

<span class="cp">#ifndef CACHE_SIZE</span>
<span class="cp">#define CACHE_SIZE 64*1024*1024 </span><span class="c">/* large enough */</span><span class="cp"></span>
<span class="cp">#endif</span>

<span class="cp">#define MAX_U16        65535</span>
<span class="k">typedef</span> <span class="kt">unsigned</span> <span class="kt">short</span> <span class="n">U16</span><span class="p">;</span>
<span class="k">typedef</span> <span class="kt">long</span> <span class="kt">long</span>      <span class="n">I64</span><span class="p">;</span>

<span class="n">U16</span> <span class="o">*</span><span class="n">cache</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">cachesize</span><span class="p">;</span>
<span class="cp">#define lookup(n)  ((n) &lt; cachesize ? cache[(n)] : 0)</span>
<span class="cp">#define store(n,g) if ((n) &lt; cachesize &amp;&amp; g &lt;= MAX_U16) cache[(n)] = (g)</span>

<span class="n">I64</span> <span class="n">g</span><span class="p">(</span><span class="n">I64</span> <span class="n">n</span><span class="p">){</span>
    <span class="n">I64</span> <span class="n">result</span> <span class="o">=</span> <span class="n">lookup</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">result</span><span class="p">)</span> <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
    <span class="n">I64</span> <span class="n">i</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
    <span class="n">I64</span> <span class="n">l</span><span class="p">;</span>
    <span class="n">result</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">){</span>
        <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">&amp;</span> <span class="mi">1</span> <span class="o">?</span> <span class="n">i</span><span class="o">*</span><span class="mi">3</span><span class="o">+</span><span class="mi">1</span> <span class="o">:</span> <span class="n">i</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="p">;</span>
        <span class="n">l</span> <span class="o">=</span> <span class="n">lookup</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">l</span><span class="p">){</span>
            <span class="n">result</span> <span class="o">+=</span> <span class="n">l</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
            <span class="n">result</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">)</span>       <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;overflow! g(%qd) = %qd</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
    <span class="n">store</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">result</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">I64</span> <span class="o">*</span><span class="n">h</span><span class="p">(</span><span class="n">I64</span> <span class="n">n</span><span class="p">){</span>
    <span class="n">I64</span> <span class="n">i</span><span class="p">,</span> <span class="n">nmax</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">gmax</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">gnext</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">static</span> <span class="n">I64</span> <span class="n">result</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">){</span>
        <span class="n">gnext</span> <span class="o">=</span> <span class="n">g</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
<span class="cp">#ifdef VERBOSE</span>
        <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;g(%qd) = %qd</span><span class="se">\r</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">gnext</span><span class="p">);</span>
<span class="cp">#endif</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">gnext</span> <span class="o">&gt;</span> <span class="n">gmax</span><span class="p">){</span>
            <span class="n">nmax</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span> <span class="n">gmax</span> <span class="o">=</span> <span class="n">gnext</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">&amp;</span> <span class="mh">0xffff</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
       <span class="n">printf</span><span class="p">(</span><span class="s">&quot;nmax = %qd, gmax = %qd, n = %qd</span><span class="se">\r</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">nmax</span><span class="p">,</span> <span class="n">gmax</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
       <span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">nmax</span><span class="p">;</span> <span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">gmax</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
<span class="p">}</span>

<span class="cp">#define min(x,y) ((x) &lt; (y) ? (x) : (y))</span>

<span class="kt">void</span> <span class="n">init_cache</span><span class="p">(</span><span class="n">I64</span> <span class="n">n</span><span class="p">){</span>
    <span class="n">cachesize</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">CACHE_SIZE</span><span class="p">);</span>
    <span class="n">cache</span>     <span class="o">=</span> <span class="p">(</span><span class="n">U16</span> <span class="o">*</span><span class="p">)</span><span class="n">calloc</span><span class="p">(</span><span class="n">cachesize</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">U16</span><span class="p">));</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">cache</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="n">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">){</span>
    <span class="n">I64</span> <span class="n">n</span> <span class="o">=</span> <span class="mh">0xffffffff</span><span class="p">;</span> <span class="c">/* look @ this! */</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">){</span>
        <span class="n">n</span> <span class="o">=</span> <span class="n">atoll</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="n">init_cache</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
    <span class="n">I64</span> <span class="o">*</span><span class="n">hg</span> <span class="o">=</span> <span class="n">h</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;h(%qd) = %qd where g(%qd) = %qd</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">hg</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">hg</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">hg</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5103/addtag/" class="addtag" id="addtag_5103">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/C99/">C99</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5103/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5103/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5103"
  >-</span><span
  class="button yellow"
  id="rating_z_5103"
  >0</span><span 
  class="button green"
  id="rating_p_5103"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5103/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5103/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5104">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5104/">#5104</a>(<script language="JavaScript">print_time(new Date("2008/01/01 19:43 GMT"));</script><noscript>2008/01/01 19:43 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>あー、バグめっけ。
24,25行目がタブ一個多いです。
Cに書き直してたら気づいたorz</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5104/addtag/" class="addtag" id="addtag_5104">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5104"
  >-</span><span
  class="button yellow"
  id="rating_z_5104"
  >0</span><span 
  class="button green"
  id="rating_p_5104"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5101/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5104/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5104/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5104/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5105">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5105/">#5105</a>(<script language="JavaScript">print_time(new Date("2008/01/01 20:32 GMT"));</script><noscript>2008/01/01 20:32 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>というわけでCで書き直した。

実行結果＠AthlonXP2500+
----
f(837799)=524
time=0.093000sec</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &lt;time.h&gt;</span>

<span class="cp">#define NMAX 1048576</span>

<span class="kt">short</span> <span class="n">memo</span><span class="p">[</span><span class="n">NMAX</span><span class="p">];</span>

<span class="kt">int</span> <span class="nf">_f</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">n</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">step</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="n">NMAX</span> <span class="o">&amp;&amp;</span> <span class="n">memo</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">memo</span><span class="p">[</span><span class="n">n</span><span class="p">];</span>

    <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">step</span> <span class="o">=</span> <span class="n">_f</span><span class="p">(</span><span class="n">n</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">else</span>
        <span class="n">step</span> <span class="o">=</span> <span class="n">_f</span><span class="p">(</span><span class="n">n</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>

    <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="n">NMAX</span><span class="p">)</span>
        <span class="n">memo</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="n">step</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">step</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">mf</span><span class="p">,</span><span class="n">mi</span><span class="p">;</span>
    
    <span class="n">mf</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">memo</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">NMAX</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">short</span><span class="p">));</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">NMAX</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
            <span class="n">_f</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">mf</span><span class="p">){</span>
            <span class="n">mi</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
            <span class="n">mf</span> <span class="o">=</span> <span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="p">}</span>    
    <span class="p">}</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;f(%d)=%d</span><span class="se">\n</span><span class="s">time=%fsec&quot;</span><span class="p">,</span> <span class="n">mi</span><span class="p">,</span><span class="n">mf</span><span class="p">,</span> <span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">clock</span><span class="p">()</span> <span class="o">/</span> <span class="n">CLOCKS_PER_SEC</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5105/addtag/" class="addtag" id="addtag_5105">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5105/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5105/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5105"
  >-</span><span
  class="button yellow"
  id="rating_z_5105"
  >0</span><span 
  class="button green"
  id="rating_p_5105"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5104/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5105/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5105/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5105/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5106">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/374/" target="_top">omoikani</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5106/">#5106</a>(<script language="JavaScript">print_time(new Date("2008/01/01 21:23 GMT"));</script><noscript>2008/01/01 21:23 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/standardml/">
	  StandardML
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>まんまの実装。MLtonでネイティブコンパイル、PenD 3.0GHz x86_64 Linuxで6.54s。

time ./collatz
f(837799) = 524
./collatz  6.54s user 0.00s system 99% cpu 6.550 total</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22</pre></td><td class="code"><div class="highlight"><pre>open Int64

fun collatz n =
  let
    fun f (1, i) = i
      | f (n&#39;, i) =
      if n&#39; mod 2 = 0 then f (n&#39; div 2, i + 1)
      else f (n&#39; * 3 + 1, i + 1)

    fun loop 0 max = max
      | loop n max =
      let
        val r = if n mod 2 = 0 then f (n div 2, 1) else f (n * 3 + 1, 1)
      in
        loop (n - 1) (if #2 max &gt; r then max else (n, r))
      end
  in
    loop n (n, 0)
  end

val (n, step) = (collatz o fromLarge o IntInf.pow) (2, 20)
val _ = print (&quot;f(&quot; ^ toString n ^ &quot;) = &quot; ^ toString step ^ &quot;\n&quot;)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5106/addtag/" class="addtag" id="addtag_5106">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/MLton/">MLton</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/standardml/">
		StandardML
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5106/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5106/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5106"
  >-</span><span
  class="button yellow"
  id="rating_z_5106"
  >0</span><span 
  class="button green"
  id="rating_p_5106"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5106/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5107">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/216/" target="_top">tosik</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5107/">#5107</a>(<script language="JavaScript">print_time(new Date("2008/01/01 22:30 GMT"));</script><noscript>2008/01/01 22:30 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>早いですね。
2^20を数えてないようですが。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5107/addtag/" class="addtag" id="addtag_5107">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5107"
  >-</span><span
  class="button yellow"
  id="rating_z_5107"
  >0</span><span 
  class="button green"
  id="rating_p_5107"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5105/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5107/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5107/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5111">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5111/">#5111</a>(<script language="JavaScript">print_time(new Date("2008/01/02 04:17 GMT"));</script><noscript>2008/01/02 04:17 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Squeak Smalltalk で。</p>
<p>1.0 GHz PowerPC、90 秒弱でした。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15</pre></td><td class="code"><div class="highlight"><pre>| collatz result |

collatz := [:nn |
    | nSteps |
    nSteps := 0.
    [   nSteps := nSteps + 1.
        nn := nn even ifTrue: [nn / 2] ifFalse: [3 * nn + 1].
        nn = 1] whileFalse.
    nSteps].

^{[result := (1 to: (2 raisedTo: 20))
    inject: 0 -&gt; 0
    into: [:max :mm | (collatz value: mm) -&gt; mm max: max]] timeToRun. result}

&quot;=&gt; {87834 . 524-&gt;837799} &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5111/addtag/" class="addtag" id="addtag_5111">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5111/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5111/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5111"
  >-</span><span
  class="button yellow"
  id="rating_z_5111"
  >0</span><span 
  class="button green"
  id="rating_p_5111"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5111/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5113">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5113/">#5113</a>(<script language="JavaScript">print_time(new Date("2008/01/02 05:51 GMT"));</script><noscript>2008/01/02 05:51 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>tosikさんの#5098をC#に移植してみました。
わずか421ミリ秒でした。.NETがこんなに速いとは驚きです。
コード全体を読まずに構文ごとにC#に書き換えて、最後に型の帳尻を合わせただけなのでtosikさんの意図に沿ったコードになっているか心配です。

    if ( MAX &gt;= n )
    {
        if ( cache[n] != -1 )
        {
            cache[org_n] = cache[n] + depth;
            return cache[n] + depth;
        }
    }

の部分でnがcacheの配列の境界を越えてしまったので
if ( MAX &gt;= n )
を
if ( MAX &gt; n )
にしたけどいいのだろうか…。
C++の配列の宣言の添え字は配列長そのもので良かった…筈…。

OS:Windows XP Home SP2 
CPU:AMD Sempron 3400+ 1.99GHz 
メモリ:480MB</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
    <span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="p">=</span> <span class="m">1048577</span><span class="p">;</span>
    <span class="k">static</span> <span class="kt">int</span><span class="p">[]</span> <span class="n">cache</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">MAX</span><span class="p">];</span>

    <span class="k">static</span> <span class="kt">int</span> <span class="nf">collatz</span><span class="p">(</span><span class="kt">ulong</span> <span class="n">n</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">collatz</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">static</span> <span class="kt">int</span> <span class="nf">collatz</span><span class="p">(</span><span class="kt">ulong</span> <span class="n">n</span><span class="p">,</span> <span class="kt">ulong</span> <span class="n">org_n</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">collatz</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">org_n</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">static</span> <span class="kt">int</span> <span class="nf">collatz</span><span class="p">(</span><span class="kt">ulong</span> <span class="n">n</span><span class="p">,</span> <span class="kt">ulong</span> <span class="n">org_n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">depth</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">MAX</span> <span class="p">&gt;</span> <span class="n">n</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span> <span class="k">{</span>
                <span class="n">cache</span><span class="p">[</span><span class="n">org_n</span><span class="p">]</span> <span class="p">=</span> <span class="n">cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="p">+</span> <span class="n">depth</span><span class="p">;</span>
                <span class="k">return</span> <span class="n">cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="p">+</span> <span class="n">depth</span><span class="p">;</span>
            <span class="k">}</span>
        <span class="k">}</span>

        <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="p">%</span> <span class="m">2</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">return</span> <span class="n">collatz</span><span class="p">(</span><span class="n">n</span> <span class="p">/</span> <span class="m">2</span><span class="p">,</span> <span class="n">org_n</span><span class="p">,</span> <span class="n">depth</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>
        <span class="k">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">cache</span><span class="p">[</span><span class="n">org_n</span><span class="p">]</span> <span class="p">=</span> <span class="n">depth</span><span class="p">;</span>
            <span class="k">return</span> <span class="n">depth</span><span class="p">;</span>
        <span class="k">}</span> <span class="k">else</span> <span class="k">{</span>
            <span class="k">return</span> <span class="n">collatz</span><span class="p">(</span><span class="n">n</span> <span class="p">*</span> <span class="m">3</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">org_n</span><span class="p">,</span> <span class="n">depth</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>
        <span class="k">}</span>
    <span class="k">}</span>


    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span> <span class="k">{</span>
        <span class="kt">long</span> <span class="n">tick</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Ticks</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">MAX</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="n">cache</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="p">-</span><span class="m">1</span><span class="p">;</span>

        <span class="kt">ulong</span> <span class="n">max_n</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">max_steps</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

        <span class="k">for</span><span class="p">(</span><span class="kt">ulong</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">MAX</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span> <span class="k">{</span>
            <span class="kt">int</span> <span class="n">steps</span> <span class="p">=</span> <span class="n">collatz</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">max_steps</span> <span class="p">&lt;</span> <span class="n">steps</span><span class="p">)</span> <span class="k">{</span>
                <span class="n">max_steps</span> <span class="p">=</span> <span class="n">steps</span><span class="p">;</span>
                <span class="n">max_n</span> <span class="p">=</span> <span class="n">i</span><span class="p">;</span>
            <span class="k">}</span>
        <span class="k">}</span>

        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;f(&quot;</span> <span class="p">+</span> <span class="n">max_n</span> <span class="p">+</span> <span class="s">&quot;)=&quot;</span> <span class="p">+</span> <span class="n">max_steps</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">((</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Ticks</span> <span class="p">-</span> <span class="n">tick</span><span class="p">)</span> <span class="p">/</span> <span class="m">10000L</span> <span class="p">+</span> <span class="s">&quot;ms&quot;</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5113/addtag/" class="addtag" id="addtag_5113">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/C%232.0/">C#2.0</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5113/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5113/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5113"
  >-</span><span
  class="button yellow"
  id="rating_z_5113"
  >0</span><span 
  class="button green"
  id="rating_p_5113"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5098/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5113/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5113/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5113/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5117">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5117/">#5117</a>(<script language="JavaScript">print_time(new Date("2008/01/02 10:14 GMT"));</script><noscript>2008/01/02 10:14 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>f(837799)=524
187ms

OS:Windows XP Home SP2 
CPU:AMD Sempron 3400+ 1.99GHz 
メモリ:480MB

高速化しました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Class1</span> <span class="k">{</span>
    <span class="k">static</span> <span class="kt">uint</span> <span class="n">MAX</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToUInt32</span><span class="p">(</span><span class="n">Math</span><span class="p">.</span><span class="n">Pow</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="m">20</span><span class="p">));</span>
    <span class="k">static</span> <span class="kt">int</span> <span class="n">max3Plus1</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">MAX</span> <span class="p">*</span> <span class="m">3</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>
    <span class="k">static</span> <span class="kt">int</span><span class="p">[]</span> <span class="n">cache</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">max3Plus1</span><span class="p">];</span>

    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span> <span class="k">{</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Ticks</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">maxStep</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        <span class="kt">uint</span> <span class="n">maxN</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">uint</span> <span class="n">n</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">n</span> <span class="p">&lt;=</span> <span class="n">MAX</span><span class="p">;</span> <span class="n">n</span><span class="p">++)</span> <span class="k">{</span>
            <span class="kt">int</span> <span class="n">step</span> <span class="p">=</span> <span class="n">collatz</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">maxStep</span> <span class="p">&lt;</span> <span class="n">step</span><span class="p">)</span> <span class="k">{</span>
                <span class="n">maxStep</span> <span class="p">=</span> <span class="n">step</span><span class="p">;</span>
                <span class="n">maxN</span> <span class="p">=</span> <span class="n">n</span><span class="p">;</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;f(&quot;</span> <span class="p">+</span> <span class="n">maxN</span> <span class="p">+</span> <span class="s">&quot;)=&quot;</span> <span class="p">+</span> <span class="n">maxStep</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">((</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Ticks</span> <span class="p">-</span> <span class="n">start</span><span class="p">)</span> <span class="p">/</span> <span class="m">10000L</span> <span class="p">+</span> <span class="s">&quot;ms&quot;</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">int</span> <span class="nf">collatz</span><span class="p">(</span><span class="kt">uint</span> <span class="n">n</span><span class="p">)</span> <span class="k">{</span>
        <span class="kt">int</span> <span class="n">step</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
        <span class="kt">uint</span> <span class="n">z</span> <span class="p">=</span> <span class="n">n</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="n">z</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span> <span class="k">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">z</span> <span class="p">-</span> <span class="m">1</span> <span class="p">&lt;=</span> <span class="n">max3Plus1</span> <span class="p">&amp;&amp;</span> <span class="n">cache</span><span class="p">[</span><span class="n">z</span> <span class="p">-</span> <span class="m">1</span><span class="p">]</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span>
                <span class="n">step</span> <span class="p">+=</span> <span class="n">cache</span><span class="p">[</span><span class="n">z</span> <span class="p">-</span> <span class="m">1</span><span class="p">];</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">}</span> <span class="k">else</span> <span class="k">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">z</span> <span class="p">%</span> <span class="m">2</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="n">z</span> <span class="p">/=</span> <span class="m">2</span><span class="p">;</span>
                <span class="k">else</span> <span class="n">z</span> <span class="p">=</span> <span class="n">z</span> <span class="p">*</span> <span class="m">3</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>
                <span class="n">step</span><span class="p">++;</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="n">cache</span><span class="p">[</span><span class="n">n</span> <span class="p">-</span> <span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="n">step</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">step</span><span class="p">;</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5117/addtag/" class="addtag" id="addtag_5117">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/C%232.0/">C#2.0</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5117/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5117/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5117"
  >-</span><span
  class="button yellow"
  id="rating_z_5117"
  >0</span><span 
  class="button green"
  id="rating_p_5117"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5117/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5119">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/216/" target="_top">tosik</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5119/">#5119</a>(<script language="JavaScript">print_time(new Date("2008/01/02 10:34 GMT"));</script><noscript>2008/01/02 10:34 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>移植ありがとうございます。
C++の添え字は長さです。これは僕のミスでした。
2^20までは偶然MAX==nになることはないので、正しく動作してましたが、n&gt;2^20の場合は実行時にエラーがでることがあるでしょうね。
このミスは、はじめにMAX=2^20にしていたときのもので、今のMAX=2^20+1に直したときに修正を忘れたものです。

ちなみにですが、このコードを書くときにひとつのバグにてこずりました。
それは全て int 型にしていたことが原因で、オーバーフローでマイナス値を出していたのが原因でした。
# 不慣れなgdbを使って挑戦したのでなかなか解明できなかった＾＾；</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5119/addtag/" class="addtag" id="addtag_5119">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5119"
  >-</span><span
  class="button yellow"
  id="rating_z_5119"
  >0</span><span 
  class="button green"
  id="rating_p_5119"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5113/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5119/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5119/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5120">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/154/" target="_top">xsd</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5120/">#5120</a>(<script language="JavaScript">print_time(new Date("2008/01/02 11:38 GMT"));</script><noscript>2008/01/02 11:38 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>OCamlは64bit整数を扱いだすと色々とオーバーヘッドが大きくなるので、なるべくintで
計算を行うようにして、あるところでint64に切り替えるようにしてます。
また、キャッシュもint64モードでは持たないようにして、ハッシュではなく配列で
アクセスの高速化を図っています。

PentiumM 1.7GHzで0.2秒強です。

 % time ./dk120
 f(837799)=524
 
 real    0m0.227s
 user    0m0.220s
 sys     0m0.007s
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre><span class="kr">open</span> <span class="n">Int64</span>

<span class="kr">let</span> <span class="n">maxN</span>       <span class="k">=</span> <span class="mi">1048576</span>
<span class="kr">let</span> <span class="n">cacheN</span>     <span class="k">=</span> <span class="n">maxN</span>
<span class="kr">let</span> <span class="n">cacheN64</span>   <span class="k">=</span> <span class="n">Int64</span><span class="k">.</span><span class="n">of_int</span> <span class="k">(</span><span class="mi">2</span> <span class="k">*</span> <span class="n">cacheN</span><span class="k">)</span>

<span class="kr">let</span> <span class="n">memo</span> <span class="k">=</span> <span class="n">Array</span><span class="k">.</span><span class="n">create</span> <span class="k">(</span><span class="n">cacheN</span><span class="k">+</span><span class="mi">1</span><span class="k">)</span> <span class="mi">0</span>

<span class="kr">let</span> <span class="kr">rec</span> <span class="n">colatz31</span> <span class="k">=</span> <span class="kr">function</span>
    <span class="k">|</span> <span class="mi">1</span> <span class="k">-&gt;</span> <span class="mi">0</span>
    <span class="k">|</span> <span class="n">n</span> <span class="k">-&gt;</span>
        <span class="kr">if</span> <span class="n">memo</span><span class="k">.(</span><span class="n">n</span><span class="k">)</span> <span class="k">&lt;&gt;</span> <span class="mi">0</span> <span class="kr">then</span> <span class="n">memo</span><span class="k">.(</span><span class="n">n</span><span class="k">)</span> <span class="kr">else</span> <span class="k">(</span>
            <span class="kr">let</span> <span class="n">c</span> <span class="k">=</span> <span class="mi">1</span> <span class="k">+</span>
                <span class="kr">if</span> <span class="n">n</span> <span class="kr">land</span> <span class="mi">1</span> <span class="k">=</span> <span class="mi">0</span> <span class="kr">then</span> <span class="n">colatz31</span> <span class="k">(</span><span class="n">n</span> <span class="kr">lsr</span> <span class="mi">1</span><span class="k">)</span>
                <span class="kr">else</span> <span class="k">(</span>
                    <span class="kr">let</span> <span class="n">t</span> <span class="k">=</span> <span class="n">n</span> <span class="k">*</span> <span class="mi">3</span> <span class="k">+</span> <span class="mi">1</span> <span class="kr">in</span>
                    <span class="kr">if</span> <span class="n">t</span> <span class="k">&lt;=</span> <span class="n">cacheN</span> <span class="kr">then</span> <span class="n">colatz31</span> <span class="n">t</span>
                                   <span class="kr">else</span> <span class="n">colatz64</span> <span class="k">(</span><span class="n">of_int</span> <span class="n">t</span><span class="k">))</span> <span class="kr">in</span>
            <span class="kr">let</span> <span class="k">_</span> <span class="k">=</span> <span class="n">memo</span><span class="k">.(</span><span class="n">n</span><span class="k">)</span> <span class="k">&lt;-</span> <span class="n">c</span> <span class="kr">in</span> <span class="n">c</span><span class="k">)</span>

<span class="kr">and</span> <span class="n">colatz64</span> <span class="n">n</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">t</span> <span class="k">=</span> <span class="n">to_int</span> <span class="n">n</span> <span class="kr">in</span>
    <span class="kr">if</span> <span class="k">(</span><span class="n">t</span> <span class="kr">land</span> <span class="mi">1</span><span class="k">)</span> <span class="k">=</span> <span class="mi">0</span> <span class="kr">then</span> <span class="k">(</span>
        <span class="kr">if</span> <span class="n">n</span> <span class="k">&lt;=</span> <span class="n">cacheN64</span> <span class="kr">then</span> <span class="mi">1</span> <span class="k">+</span> <span class="n">colatz31</span> <span class="k">(</span><span class="n">t</span> <span class="kr">lsr</span> <span class="mi">1</span><span class="k">)</span>
                         <span class="kr">else</span> <span class="mi">1</span> <span class="k">+</span> <span class="n">colatz64</span> <span class="k">(</span><span class="n">shift_right_logical</span> <span class="n">n</span> <span class="mi">1</span><span class="k">)</span>
    <span class="k">)</span> <span class="kr">else</span> <span class="mi">1</span> <span class="k">+</span> <span class="n">colatz64</span> <span class="k">(</span><span class="n">succ</span><span class="k">(</span><span class="n">mul</span> <span class="n">n</span> <span class="mi">3</span><span class="n">L</span><span class="k">))</span>

<span class="kr">let</span> <span class="kr">rec</span> <span class="n">loop</span> <span class="n">max1</span> <span class="n">max2</span> <span class="k">=</span> <span class="kr">function</span>
    <span class="k">|</span> <span class="n">n</span> <span class="kr">when</span> <span class="n">n</span> <span class="k">&gt;</span> <span class="n">maxN</span> <span class="k">-&gt;</span> <span class="n">max1</span><span class="k">,</span> <span class="n">max2</span>
    <span class="k">|</span> <span class="n">n</span> <span class="k">-&gt;</span> <span class="kr">let</span> <span class="n">max</span> <span class="k">=</span> <span class="n">colatz31</span> <span class="n">n</span> <span class="kr">in</span>
        <span class="kr">if</span> <span class="n">max</span> <span class="k">&gt;</span> <span class="n">max2</span> <span class="kr">then</span> <span class="n">loop</span> <span class="n">n</span> <span class="n">max</span> <span class="k">(</span><span class="n">n</span><span class="k">+</span><span class="mi">1</span><span class="k">)</span> <span class="kr">else</span> <span class="n">loop</span> <span class="n">max1</span> <span class="n">max2</span> <span class="k">(</span><span class="n">n</span><span class="k">+</span><span class="mi">1</span><span class="k">)</span>

<span class="kr">let</span> <span class="k">_</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="n">a</span><span class="k">,</span><span class="n">b</span> <span class="k">=</span> <span class="n">loop</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">1</span> <span class="kr">in</span>
    <span class="n">Printf</span><span class="k">.</span><span class="n">printf</span> <span class="s2">&quot;f(%d)=%d</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="n">a</span> <span class="n">b</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5120/addtag/" class="addtag" id="addtag_5120">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5120/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5120/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5120"
  >-</span><span
  class="button yellow"
  id="rating_z_5120"
  >0</span><span 
  class="button green"
  id="rating_p_5120"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5120/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5122">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/418/" target="_top">mad</a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5122/">#5122</a>(<script language="JavaScript">print_time(new Date("2008/01/02 12:55 GMT"));</script><noscript>2008/01/02 12:55 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>collatz nの値がユニークではないので、これだと最大値となるnが複数ある場合には最後の物しか得ることができなくなってしまいます。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5122/addtag/" class="addtag" id="addtag_5122">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5122"
  >-</span><span
  class="button yellow"
  id="rating_z_5122"
  >0</span><span 
  class="button green"
  id="rating_p_5122"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5089/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5122/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5122/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5122/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5123">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5123/">#5123</a>(<script language="JavaScript">print_time(new Date("2008/01/02 13:33 GMT"));</script><noscript>2008/01/02 13:33 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #dfffdf;">2/2=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>ただ計算を繰り返すだけのコードでメモ化等はしていませんが、
古えのLisp1.5/IBM7094はどんなものなのかなと思いぐるぐる回してみました。
ずっとGCしっぱなししたが、なんとか結果はでました。
IBM7094 / SIMH 3.7 / LINUX / Core2 E6600の環境で、
実行時間は7時間丁度でした。

実行結果:
 END OF EVALQUOTE, VALUE IS ..
 (837799 524)

  THE TIME ( 0/ 0  000.0) HAS COME, THE WALRUS SAID, TO TALK OF MANY THI
NGS .....   -LEWIS CARROLL-
 END OF EVALQUOTE OPERATOR
             FIN      END OF LISP RUN</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre>DEFINE((
(EVENP (LAMBDA (N) (ZEROP (REMAINDER N 2))))

(COLLATZ (LAMBDA (X Y)(PROG (N CNT)
                  (SETQ N X)
                  (SETQ CNT Y)
            L     (COND ((EQUAL 1 N) (RETURN CNT))
                        ((EVENP N) (SETQ N (QUOTIENT N 2)))
                        (T (SETQ N (ADD1 (TIMES 3 N)))))
                  (SETQ CNT (ADD1 CNT))
                  (GO L))))

(COLLTAZ-MAX (LAMBDA (X) (PROG (N RES HN HS)
                      (SETQ N 1)
                      (SETQ HS 0)
                L     (COND ((GREATERP N X) 
                             (RETURN (LIST HN HS))))
                      (SETQ RES (COLLATZ N 0))
                      (COND ((GREATERP RES HS)
                             (PROG ()
                                (SETQ HS RES)
                                (SETQ HN N))))
                      (SETQ N (ADD1 N))
                      (GO L))))
))

PROG(()
     (RETURN (COLLTAZ-MAX (EXPT 2 20))))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5123/addtag/" class="addtag" id="addtag_5123">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/Lisp1.5/">Lisp1.5</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5123/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5123/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #dfffdf;"
  >2/2=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5123"
  >-</span><span
  class="button yellow"
  id="rating_z_5123"
  >0</span><span 
  class="button green"
  id="rating_p_5123"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5123/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5124">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/418/" target="_top">mad</a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5124/">#5124</a>(<script language="JavaScript">print_time(new Date("2008/01/02 13:37 GMT"));</script><noscript>2008/01/02 13:37 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>すいません!この問題の場合にはすべての解を求める必要はないのですね。大変申し訳ありませんでした。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5124/addtag/" class="addtag" id="addtag_5124">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5124"
  >-</span><span
  class="button yellow"
  id="rating_z_5124"
  >0</span><span 
  class="button green"
  id="rating_p_5124"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5122/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5124/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5124/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5125">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/537/" target="_top">eeweiga</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5125/">#5125</a>(<script language="JavaScript">print_time(new Date("2008/01/02 14:24 GMT"));</script><noscript>2008/01/02 14:24 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <div class="section">
<ul>
<li>
CPU: 1.33GHz PowerPC G4
</li>
<li>
MEM: 512G
</li>
<li>OS: OSX 10.4.11</li>
</ul>
<p></p>
<p>で、</p>
<p>the code took:14 wallclock secs (14.12 usr +  0.15 sys = 14.27 CPU)</p>
<p>f(837799) = 524</p>
<p>です。</p>
<p></p>
<ul>
<li>
デバッグプリントをコメントアウトしたら一気に90秒くらい短縮して脱力しました。
</li>
<li>
"最大の数からチェック"してます。
</li>
<li>キャッシュしながら最大値を考えて、全部の値に対するキャッシュができたら終了するパターンも書きましたが、なんか逆に遅くなりました。</li>
</ul>
</div>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20080926203709/http://blog.livedoor.jp/dankogai/archives/50564170.html">h(4294967295) = 2610744987 where g = 1051</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56</pre></td><td class="code"><div class="highlight"><pre><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">@steps</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">@trace</span><span class="p">;</span>

<span class="k">sub </span><span class="nf">collatz</span> <span class="p">{</span>
    <span class="k">my</span> <span class="nv">$n</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">my</span> <span class="nv">$c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="nv">@trace</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$n</span><span class="p">);</span>
    <span class="k">until</span> <span class="p">(</span><span class="nv">$n</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nb">defined</span> <span class="nv">$steps</span><span class="p">[</span><span class="nv">$n</span><span class="p">])</span> <span class="p">{</span>
            <span class="nv">$c</span> <span class="o">+=</span> <span class="nv">$steps</span><span class="p">[</span><span class="nv">$n</span><span class="p">];</span>
            <span class="k">last</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$n</span> <span class="nv">%</span> <span class="nv">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$n</span> <span class="o">/=</span> <span class="mi">2</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="nv">$n</span> <span class="o">=</span> <span class="mi">3</span> <span class="o">*</span> <span class="nv">$n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nb">push</span> <span class="nv">@trace</span><span class="p">,</span> <span class="nv">$n</span><span class="p">;</span>
        <span class="nv">$c</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nv">$c</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">use</span> <span class="n">Benchmark</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$t0</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Benchmark</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">$max_n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$max_f</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$limit</span> <span class="o">=</span> <span class="mi">2</span><span class="o">**</span><span class="mi">20</span><span class="p">;</span>
<span class="k">for</span> <span class="p">(</span><span class="k">my</span> <span class="nv">$n</span> <span class="o">=</span> <span class="nv">$limit</span><span class="p">;</span> <span class="nv">$n</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$n</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">defined</span> <span class="nv">$steps</span><span class="p">[</span><span class="nv">$n</span><span class="p">])</span> <span class="p">{</span>
        <span class="k">my</span> <span class="nv">$c</span> <span class="o">=</span> <span class="n">collatz</span><span class="p">(</span><span class="nv">$n</span><span class="p">);</span>
        <span class="k">for</span> <span class="k">my</span> <span class="nv">$n</span> <span class="p">(</span><span class="nv">@trace</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">last</span> <span class="k">if</span> <span class="nb">defined</span> <span class="nv">$steps</span><span class="p">[</span><span class="nv">$n</span><span class="p">];</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$n</span> <span class="o">&lt;=</span> <span class="nv">$limit</span><span class="p">)</span> <span class="p">{</span>
                <span class="nv">$steps</span><span class="p">[</span><span class="nv">$n</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$c</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="nv">$c</span><span class="o">--</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$max_f</span> <span class="o">&lt;</span> <span class="nv">$steps</span><span class="p">[</span><span class="nv">$n</span><span class="p">])</span> <span class="p">{</span>
        <span class="nv">$max_n</span> <span class="o">=</span> <span class="nv">$n</span><span class="p">;</span>
        <span class="nv">$max_f</span> <span class="o">=</span> <span class="nv">$steps</span><span class="p">[</span><span class="nv">$n</span><span class="p">];</span>
    <span class="p">}</span>
<span class="c1">#    print &quot;$n\n&quot;;</span>
<span class="p">}</span>

<span class="k">my</span> <span class="nv">$t1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Benchmark</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$td</span> <span class="o">=</span> <span class="n">timediff</span><span class="p">(</span><span class="nv">$t1</span><span class="p">,</span> <span class="nv">$t0</span><span class="p">);</span>
<span class="k">print</span> <span class="s">&quot;the code took:&quot;</span><span class="p">,</span><span class="n">timestr</span><span class="p">(</span><span class="nv">$td</span><span class="p">),</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>

<span class="k">print</span> <span class="s">&quot;f($max_n) = $max_f\n&quot;</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5125/addtag/" class="addtag" id="addtag_5125">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5125/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5125/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5125"
  >-</span><span
  class="button yellow"
  id="rating_z_5125"
  >0</span><span 
  class="button green"
  id="rating_p_5125"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5125/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5126">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/392/" target="_top">tzik</a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5126/">#5126</a>(<script language="JavaScript">print_time(new Date("2008/01/02 15:57 GMT"));</script><noscript>2008/01/02 15:57 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre><span class="cm">{-# OPTIONS_GHC -fglasgow-exts -fbang-patterns #-}</span>

<span class="cm">{-</span>
<span class="cm">$ uname -sr</span>
<span class="cm">Linux 2.6.23-gentoo-r3</span>
<span class="cm">$ uname -p</span>
<span class="cm">Intel(R) Pentium(R) M processor 1.70GHz</span>
<span class="cm">$ ghc --version</span>
<span class="cm">The Glorious Glasgow Haskell Compilation System, version 6.8.2</span>
<span class="cm">$ ghc -O2 collatz.hs</span>
<span class="cm">$ time ./a.out</span>
<span class="cm">(524,837799)</span>
<span class="cm">./a.out  6.80s user 0.13s system 90% cpu 7.639 total</span>
<span class="cm">-}</span>

<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Array</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>

<span class="nv">nMax</span> <span class="o">::</span> <span class="n">Num</span> <span class="nv">a</span><span class="o">=&gt;</span><span class="nv">a</span>
<span class="nv">nMax</span> <span class="o">=</span> <span class="mi">2</span><span class="o">^</span><span class="mi">20</span>

<span class="c1">-- (m,k) = collatzStep n のとき、</span>
<span class="c1">-- nをステップ数kで[1..nMax]内のmに帰着できる。</span>
<span class="nv">collatzStep</span> <span class="o">::</span> <span class="n">Integer</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">Int</span><span class="p">,</span><span class="n">Int</span><span class="p">)</span>
<span class="nv">collatzStep</span> <span class="nv">n</span>
    <span class="o">|</span> <span class="nv">n&#39;</span> <span class="o">&lt;=</span> <span class="nv">nMax</span> <span class="o">=</span> <span class="p">(</span><span class="nv">fromIntegral</span> <span class="nv">n&#39;</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
    <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">=</span> <span class="kr">let</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="o">!</span><span class="nv">k</span><span class="p">)</span> <span class="o">=</span> <span class="nv">collatzStep</span> <span class="nv">n&#39;</span> <span class="kr">in</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">k</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="kr">where</span> <span class="nv">n&#39;</span> <span class="o">=</span> <span class="kr">if</span> <span class="nv">even</span> <span class="nv">n</span> <span class="kr">then</span> <span class="nv">n</span> <span class="p">`</span><span class="nv">div</span><span class="p">`</span> <span class="mi">2</span> <span class="kr">else</span> <span class="mi">3</span><span class="o">*</span><span class="nv">n</span><span class="o">+</span><span class="mi">1</span>

<span class="nv">collatzStep&#39;</span> <span class="o">::</span> <span class="n">Int</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">Int</span><span class="p">,(</span><span class="n">Int</span><span class="p">,</span><span class="n">Int</span><span class="p">))</span>
<span class="nv">collatzStep&#39;</span> <span class="nv">n</span> <span class="o">=</span> <span class="p">(</span><span class="nv">m</span><span class="p">,(</span><span class="nv">n</span><span class="p">,</span><span class="nv">k</span><span class="p">))</span>
    <span class="kr">where</span> <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="o">!</span><span class="nv">k</span><span class="p">)</span> <span class="o">=</span> <span class="nv">collatzStep</span> <span class="p">(</span><span class="nv">toInteger</span> <span class="nv">n</span><span class="p">)</span>

<span class="c1">-- collatzStep で得られる帰着関係を反転してグラフにする。</span>
<span class="c1">-- colltz 角谷の予想が正しければ1を根とした木になっている。</span>
<span class="nv">collatzTree</span> <span class="o">::</span> <span class="n">Array</span> <span class="n">Int</span> <span class="p">[(</span><span class="n">Int</span><span class="p">,</span><span class="n">Int</span><span class="p">)]</span>
<span class="nv">collatzTree</span> <span class="o">=</span> <span class="nv">accumArray</span> <span class="p">(</span><span class="nv">flip</span> <span class="p">(</span><span class="o">:</span><span class="p">))</span> <span class="p">[]</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nv">nMax</span><span class="p">)</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">collatzStep&#39;</span> <span class="p">[</span><span class="mi">2</span><span class="o">..</span><span class="nv">nMax</span><span class="p">])</span>

<span class="c1">-- DFSで高さを調べる。</span>
<span class="nv">deepest</span> <span class="o">::</span> <span class="n">Array</span> <span class="n">Int</span> <span class="p">[(</span><span class="n">Int</span><span class="p">,</span><span class="n">Int</span><span class="p">)]</span><span class="o">-&gt;</span><span class="n">Int</span><span class="o">-&gt;</span><span class="p">(</span><span class="n">Int</span><span class="p">,</span><span class="n">Int</span><span class="p">)</span>
<span class="nv">deepest</span> <span class="nv">ar</span> <span class="nv">m</span> <span class="o">=</span> <span class="nv">maximum</span><span class="o">.</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span><span class="nv">m</span><span class="p">)</span><span class="o">:</span><span class="p">)</span> <span class="o">$</span> <span class="p">[(</span><span class="nv">k</span><span class="o">+</span><span class="nv">k&#39;</span><span class="p">,</span><span class="nv">n&#39;</span><span class="p">)</span><span class="o">|</span><span class="p">(</span><span class="nv">n</span><span class="p">,</span><span class="nv">k</span><span class="p">)</span><span class="o">&lt;-</span><span class="nv">ar</span><span class="o">!</span><span class="nv">m</span><span class="p">,</span><span class="kr">let</span> <span class="p">(</span><span class="o">!</span><span class="nv">k&#39;</span><span class="p">,</span><span class="nv">n&#39;</span><span class="p">)</span><span class="o">=</span><span class="nv">deepest</span> <span class="nv">ar</span> <span class="nv">n</span><span class="p">]</span>

<span class="nv">main</span> <span class="o">::</span> <span class="n">IO</span> <span class="p">()</span>
<span class="nv">main</span> <span class="o">=</span> <span class="nv">putStrLn</span><span class="o">.</span><span class="nv">show</span> <span class="o">$</span> <span class="nv">deepest</span> <span class="nv">collatzTree</span> <span class="mi">1</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5126/addtag/" class="addtag" id="addtag_5126">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5126/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5126/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5126"
  >-</span><span
  class="button yellow"
  id="rating_z_5126"
  >0</span><span 
  class="button green"
  id="rating_p_5126"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5126/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5127">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/122/" target="_top">malark</a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5127/">#5127</a>(<script language="JavaScript">print_time(new Date("2008/01/02 17:28 GMT"));</script><noscript>2008/01/02 17:28 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Max(f(n)) = 524
n =
  837799
Time: 2652[ms]

Athlon64 X2 5000+(2.6GHz) / Windows Vista HP x64 / JRE1.6.0_03

これが限界・・・1秒切りたいなぁ</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60</pre></td><td class="code"><div class="highlight"><pre><span class="k">package</span> <span class="n">challenge120</span><span class="o">;</span>

<span class="k">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Challenge120</span> <span class="o">{</span>

    <span class="k">private</span> <span class="k">final</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">LIM</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">20</span><span class="o">;</span> <span class="c">// 1&lt;&lt;20 = 2^20</span>

    <span class="k">private</span> <span class="k">final</span> <span class="k">static</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">CACHE</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;();</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="k">final</span> <span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="k">final</span> <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>

        <span class="kt">int</span> <span class="n">fnMax</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">fnMaxN</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;();</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="n">LIM</span><span class="o">;</span> <span class="n">n</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">final</span> <span class="kt">int</span> <span class="n">fn</span> <span class="o">=</span> <span class="n">f</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">fn</span> <span class="o">&gt;</span> <span class="n">fnMax</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">fnMax</span> <span class="o">=</span> <span class="n">fn</span><span class="o">;</span>
                <span class="n">fnMaxN</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
                <span class="n">fnMaxN</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">fn</span> <span class="o">==</span> <span class="n">fnMax</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">fnMaxN</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">out</span><span class="o">(</span><span class="n">fnMax</span><span class="o">,</span> <span class="n">fnMaxN</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Time: &quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">start</span><span class="o">)</span>
                <span class="o">+</span> <span class="s">&quot;[ms]&quot;</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">f</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">fn</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">long</span> <span class="n">nTemp</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span> <span class="n">nTemp</span> <span class="o">!=</span> <span class="mi">1</span><span class="o">;)</span> <span class="o">{</span>
            <span class="k">final</span> <span class="n">Integer</span> <span class="n">cached</span> <span class="o">=</span> <span class="n">CACHE</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">nTemp</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">cached</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">nTemp</span> <span class="o">=</span> <span class="o">(</span><span class="n">nTemp</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">?</span> <span class="n">nTemp</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">:</span> <span class="n">nTemp</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
                <span class="n">fn</span><span class="o">++;</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">fn</span> <span class="o">+=</span> <span class="n">cached</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">CACHE</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">Long</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">n</span><span class="o">),</span> <span class="n">fn</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">fn</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">private</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">out</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span> <span class="n">maxN</span><span class="o">,</span> <span class="k">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">fnMaxN</span><span class="o">)</span> <span class="o">{</span>

        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Max(f(n)) = &quot;</span> <span class="o">+</span> <span class="n">maxN</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;n =&quot;</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="k">final</span> <span class="kt">int</span> <span class="n">n</span> <span class="o">:</span> <span class="n">fnMaxN</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;  &quot;</span> <span class="o">+</span> <span class="n">n</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5127/addtag/" class="addtag" id="addtag_5127">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/Java/">Java</a>
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/Java1.6/">Java1.6</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5127/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5127/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5127"
  >-</span><span
  class="button yellow"
  id="rating_z_5127"
  >0</span><span 
  class="button green"
  id="rating_p_5127"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5127/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5127/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5130">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/457/" target="_top">kgoto</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5130/">#5130</a>(<script language="JavaScript">print_time(new Date("2008/01/02 19:50 GMT"));</script><noscript>2008/01/02 19:50 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Celeron 2GHz メモリ1GBで17秒ほどで答え出ました．</p>
<p>% time python korattu.py</p>
<p>524</p>
<p>python korattu.py  16.98s user 0.47s system 88% cpu 19.652 total</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre><span class="n">D</span><span class="o">=</span><span class="p">{</span><span class="mi">1</span><span class="p">:</span><span class="mi">0</span><span class="p">}</span>
<span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">D</span><span class="o">.</span><span class="n">has_key</span><span class="p">(</span><span class="n">n</span><span class="p">):</span><span class="k">pass</span>
    <span class="k">elif</span> <span class="n">n</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span><span class="n">D</span><span class="p">[</span><span class="n">n</span><span class="p">]</span><span class="o">=</span><span class="n">f</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span>
    <span class="k">else</span><span class="p">:</span> <span class="n">D</span><span class="p">[</span><span class="n">n</span><span class="p">]</span><span class="o">=</span><span class="n">f</span><span class="p">(</span><span class="mi">3</span><span class="o">*</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span>
    <span class="k">return</span> <span class="n">D</span><span class="p">[</span><span class="n">n</span><span class="p">]</span>

<span class="k">if</span> <span class="n">__name__</span><span class="o">==</span><span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">step</span><span class="o">=</span><span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">**</span><span class="mi">20</span><span class="p">):</span>
        <span class="n">step</span><span class="o">=</span><span class="nb">max</span><span class="p">(</span><span class="n">step</span><span class="p">,</span> <span class="n">f</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
    <span class="k">print</span> <span class="n">step</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5130/addtag/" class="addtag" id="addtag_5130">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5130/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5130/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5130"
  >-</span><span
  class="button yellow"
  id="rating_z_5130"
  >0</span><span 
  class="button green"
  id="rating_p_5130"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5130/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5130/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5131">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/457/" target="_top">kgoto</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5131/">#5131</a>(<script language="JavaScript">print_time(new Date("2008/01/02 20:02 GMT"));</script><noscript>2008/01/02 20:02 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ステップ数が最大になる時のnを求めてませんでした.
main部分を修正しました
実行結果
(837799, 524)</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre><span class="k">if</span> <span class="n">__name__</span><span class="o">==</span><span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">step</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">**</span><span class="mi">20</span><span class="p">):</span>
        <span class="n">tmp</span><span class="o">=</span><span class="n">i</span><span class="p">,</span><span class="n">f</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">step</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">tmp</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span><span class="n">step</span><span class="o">=</span><span class="n">tmp</span>
    <span class="k">print</span> <span class="n">step</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5131/addtag/" class="addtag" id="addtag_5131">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5131/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5131/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5131"
  >-</span><span
  class="button yellow"
  id="rating_z_5131"
  >0</span><span 
  class="button green"
  id="rating_p_5131"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5130/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5131/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5131/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5133">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/154/" target="_top">xsd</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5133/">#5133</a>(<script language="JavaScript">print_time(new Date("2008/01/03 01:19 GMT"));</script><noscript>2008/01/03 01:19 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Listではなく、ただの配列でキャッシュを実装するとかなり高速化できますね。

PentiumM 2GHz/Windows XP (32bit)で125msでした。

C:¥&gt;java Dk120
f(837799)=524 in 125 ms</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="highlight"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">Dk120</span> <span class="o">{</span>
    <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">maxN</span> <span class="o">=</span> <span class="o">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">20</span><span class="o">);</span>
    <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> <span class="n">cacheN</span> <span class="o">=</span> <span class="n">maxN</span><span class="o">;</span>
    
    <span class="k">private</span> <span class="k">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">cache</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">cacheN</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
    
    <span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">colatz</span><span class="o">(</span><span class="kt">long</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">n</span> <span class="o">&lt;=</span> <span class="n">cacheN</span> <span class="o">&amp;&amp;</span> <span class="n">cache</span><span class="o">[(</span><span class="kt">int</span><span class="o">)</span><span class="n">n</span><span class="o">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="n">cache</span><span class="o">[(</span><span class="kt">int</span><span class="o">)</span><span class="n">n</span><span class="o">];</span>
        
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">+</span> <span class="o">((</span><span class="n">n</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">?</span> <span class="n">colatz</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">:</span> <span class="n">colatz</span><span class="o">(</span><span class="n">n</span> <span class="o">*</span> <span class="mi">3</span> <span class="o">+</span> <span class="mi">1</span><span class="o">));</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">n</span> <span class="o">&lt;=</span> <span class="n">cacheN</span><span class="o">)</span> <span class="n">cache</span><span class="o">[(</span><span class="kt">int</span><span class="o">)</span><span class="n">n</span><span class="o">]</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">c</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">maxValue</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">maxN</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">colatz</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">max</span> <span class="o">&lt;</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span> <span class="n">max</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span> <span class="n">maxValue</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;f(%d)=%d in %d ms&quot;</span><span class="o">,</span> <span class="n">maxValue</span><span class="o">,</span> <span class="n">max</span><span class="o">,</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">start</span><span class="o">);</span>
    <span class="o">}</span>    
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5133/addtag/" class="addtag" id="addtag_5133">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/JRE1.5/">JRE1.5</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5133/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5133/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5133"
  >-</span><span
  class="button yellow"
  id="rating_z_5133"
  >0</span><span 
  class="button green"
  id="rating_p_5133"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5127/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5133/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5133/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5136">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/166/" target="_top">ところてん</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5136/">#5136</a>(<script language="JavaScript">print_time(new Date("2008/01/03 06:33 GMT"));</script><noscript>2008/01/03 06:33 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>ビルドが通らなくておかしいなぁと思ったら、
変数宣言の前に命令があるからC99じゃないとコンパイルできないですねこれ。
（VC++でビルドしてました）

C99じゃないとビルドが通らないやつには、タグを付けといたほうがいいのかなぁ。
gccはデフォでC99だから、別に問題ないといえば問題ないけど。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5136/addtag/" class="addtag" id="addtag_5136">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5136"
  >-</span><span
  class="button yellow"
  id="rating_z_5136"
  >0</span><span 
  class="button green"
  id="rating_p_5136"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5103/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5136/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5136/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5136/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5140">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/117/" target="_top">katsu</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5140/">#5140</a>(<script language="JavaScript">print_time(new Date("2008/01/03 10:06 GMT"));</script><noscript>2008/01/03 10:06 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/prolog/">
	  Prolog
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>あけましておめでとうございます。
ぜんぜんprologらしくないのですみません。
cのループは、計算途中をassertaするために、あえて末尾再帰させていません。

結果：
 $ time pl -qs 120.pl
837799, 524

real    0m6.870s
user    0m6.308s
sys     0m0.551s
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre>:-dynamic(ca/2).

even(N):- 1 =:= N /\ 1.

c(1,0):-!.
c(N,R):-ca(N,R),!.
c(N,R) :-!, (even(N)-&gt;N1 is N * 3 + 1; N1 is N / 2),
            c(N1,R0),
            succ(R0,R),
            asserta(ca(N,R)).

max_c(M,M,MaxI,MaxF,(MaxI,MaxF)).
max_c(I,M,MaxI,MaxF,R):-!,
        c(I,F),
        succ(I,I1),
        (MaxF &lt; F -&gt; max_c(I1,M,I,F,R)
                   ; max_c(I1,M,MaxI,MaxF,R)).

max_c(M,R):-max_c(1,M,0,0,R).

:-N is integer(2^20) + 1, max_c(N,R), write(R), nl, halt.
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5140/addtag/" class="addtag" id="addtag_5140">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/SWI-prolog/">SWI-prolog</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/prolog/">
		Prolog
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5140/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5140/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5140"
  >-</span><span
  class="button yellow"
  id="rating_z_5140"
  >0</span><span 
  class="button green"
  id="rating_p_5140"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5140/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5141">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5141/">#5141</a>(<script language="JavaScript">print_time(new Date("2008/01/03 10:39 GMT"));</script><noscript>2008/01/03 10:39 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #bfffbf;">4/4=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>最大を与える n が複数の場合ってあるのかな？とちょっと気になったので調べてみました。</p>
<ul class="simple">
<li>f(18)=f(19)=20</li>
<li>f(54)=f(55)=112</li>
<li>f(231)=f(235)=127</li>
<li>f(649)=f(654)=f(655)=f(667)=144</li>
<li>f(2223)=f(2322)=f(2323)=182</li>
<li>f(17647)=f(17673)=278</li>
<li>f(34239)=f(35497)=310</li>
<li>f(1117065)=f(1126015)=527</li>
<li>f(1501353)=f(1564063)=530</li>
</ul>
<p>2^21 以下でそういう組み合わせはこれだけ見つかりました。何となくほとんどないんじゃないかと思ったんですが、結構あるんですね。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5141/addtag/" class="addtag" id="addtag_5141">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #bfffbf;"
  >4/4=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5141"
  >-</span><span
  class="button yellow"
  id="rating_z_5141"
  >0</span><span 
  class="button green"
  id="rating_p_5141"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5091/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5141/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5141/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5146">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5146/">#5146</a>(<script language="JavaScript">print_time(new Date("2008/01/03 13:17 GMT"));</script><noscript>2008/01/03 13:17 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>C99限定なのはC99限定だとタグをつけておいた方が読む人に親切だと思うなぁ。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5146/addtag/" class="addtag" id="addtag_5146">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5146"
  >-</span><span
  class="button yellow"
  id="rating_z_5146"
  >0</span><span 
  class="button green"
  id="rating_p_5146"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5136/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5146/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5146/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5202">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5202/">#5202</a>(<script language="JavaScript">print_time(new Date("2008/01/05 18:39 GMT"));</script><noscript>2008/01/05 18:39 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/d/">
	  D
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  f(837799)&nbsp;=&nbsp;524<br/><br/>Processor:&nbsp;Athlon&nbsp;X2&nbsp;3800+&nbsp;/&nbsp;Memory:&nbsp;1GB<br/>Compiler:&nbsp;Digital&nbsp;Mars&nbsp;D&nbsp;Compiler&nbsp;v2.009<br/>Process&nbsp;Time:&nbsp;0:00:00.125
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="n">std</span>.<span class="n">stdio</span>;

<span class="kt">void</span> <span class="n">main</span>() {
    <span class="kt">uint</span> <span class="n">i_max</span>, <span class="n">x_max</span>;
    <span class="k">foreach</span>(<span class="n">i</span>; <span class="mi">1</span> .. (<span class="mi">1</span> &lt;&lt; <span class="mi">20</span>) + <span class="mi">1</span>) {
        <span class="kt">uint</span> <span class="n">x</span> = <span class="n">f</span>(<span class="n">i</span>);
        <span class="k">if</span>(<span class="n">x_max</span> &lt; <span class="n">x</span>) {
            <span class="n">x_max</span> = <span class="n">x</span>;
            <span class="n">i_max</span> = <span class="n">i</span>;
        }
    }
    <span class="n">writefln</span>(<span class="s">&quot;f(%s) = %s&quot;</span>, <span class="n">i_max</span>, <span class="n">x_max</span>);
}

<span class="kt">uint</span> <span class="n">f</span>(<span class="k">const</span> <span class="kt">ulong</span> <span class="n">n</span>) {
    <span class="k">static</span> <span class="kt">uint</span>[<span class="mi">1</span> &lt;&lt; <span class="mi">20</span>] <span class="n">cache</span>;
    
    <span class="k">if</span>(<span class="n">n</span> == <span class="mi">1</span>) <span class="k">return</span> <span class="mi">0</span>;
    <span class="k">if</span>(<span class="n">n</span> &lt; <span class="n">cache</span>.<span class="n">length</span> &amp;&amp; <span class="n">cache</span>[<span class="n">n</span>])
        <span class="k">return</span> <span class="n">cache</span>[<span class="n">n</span>];
    
    <span class="k">auto</span> <span class="n">steps</span> = (<span class="n">n</span> % <span class="mi">2</span> == <span class="mi">0</span> ? <span class="n">f</span>(<span class="n">n</span> / <span class="mi">2</span>) : <span class="n">f</span>(<span class="n">n</span> * <span class="mi">3</span> + <span class="mi">1</span>)) + <span class="mi">1</span>;
    <span class="k">if</span>(<span class="n">n</span> &lt; <span class="n">cache</span>.<span class="n">length</span>) <span class="n">cache</span>[<span class="n">n</span>] = <span class="n">steps</span>;
    <span class="k">return</span> <span class="n">steps</span>;
}

<span class="k">unittest</span> {
    <span class="k">assert</span>(<span class="n">f</span>(<span class="mi">9</span>) == <span class="mi">19</span>);
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5202/addtag/" class="addtag" id="addtag_5202">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/d/">
		D
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5202/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5202/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5202"
  >-</span><span
  class="button yellow"
  id="rating_z_5202"
  >0</span><span 
  class="button green"
  id="rating_p_5202"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5202/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5213">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/596/" target="_top">梅紫蘇</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5213/">#5213</a>(<script language="JavaScript">print_time(new Date("2008/01/07 08:01 GMT"));</script><noscript>2008/01/07 08:01 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>お題の「1～2^20までの数でf(n)を求めて」の要件を満たすか微妙ですが。</p>
<p>キャッシュ未使用でサボる方法を。
数が減るときにはN÷2なので、2×Nのステップ数が既知であれば、Nのステップ数も既知（計算済み）として扱える。しかも f(N×２) ＞ f(N)。ということで、(2^20)から(2^20)÷2までの範囲を計算すれば、最大ステップはわかるのかな～と。</p>
<p>Pen4 3.06GHz, WinXP SP2, VS2005, 0.953[s]</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;time.h&gt;</span>
<span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>

<span class="cp">#define MIN_VALUE (0x0000001UL)        </span><span class="c">// 1</span>
<span class="cp">#define MAX_VALUE (0x0000001UL&lt;&lt;20)    </span><span class="c">// 2 ^ 20</span>

<span class="cp">#define STACK_TYPE std::vector&lt;unsigned long&gt;</span>

<span class="kt">int</span> <span class="n">f</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span>      <span class="p">(</span><span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="n">UL</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">&amp;</span> <span class="mh">0x01</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">f</span><span class="p">(</span><span class="n">n</span> <span class="o">*</span> <span class="mi">3</span><span class="n">UL</span> <span class="o">+</span> <span class="mi">1</span><span class="n">UL</span><span class="p">);</span> <span class="p">}</span>
    <span class="k">else</span>               <span class="p">{</span> <span class="k">return</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">f</span><span class="p">(</span><span class="n">n</span> <span class="o">/</span> <span class="mi">2</span><span class="n">UL</span><span class="p">);</span>       <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">outf</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span>      <span class="p">(</span><span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="n">UL</span><span class="p">)</span> <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">n</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">&amp;</span> <span class="mh">0x01</span><span class="p">)</span> <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">n</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;-&gt;&quot;</span><span class="p">;</span> <span class="k">return</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">outf</span><span class="p">(</span><span class="n">n</span> <span class="o">*</span> <span class="mi">3</span><span class="n">UL</span> <span class="o">+</span> <span class="mi">1</span><span class="n">UL</span><span class="p">);</span> <span class="p">}</span>
    <span class="k">else</span>               <span class="p">{</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">n</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;-&gt;&quot;</span><span class="p">;</span> <span class="k">return</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">outf</span><span class="p">(</span><span class="n">n</span> <span class="o">/</span> <span class="mi">2</span><span class="n">UL</span><span class="p">);</span>       <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span> <span class="p">{</span>
    <span class="n">clock_t</span> <span class="n">st</span> <span class="o">=</span> <span class="n">clock</span><span class="p">();</span>

    <span class="n">STACK_TYPE</span> <span class="n">ans</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">nMaxStep</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">nStep</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">n</span> <span class="o">=</span> <span class="n">MAX_VALUE</span><span class="p">;</span> <span class="p">(</span><span class="n">n</span> <span class="o">&gt;=</span> <span class="n">MIN_VALUE</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">((</span><span class="n">n</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">MAX_VALUE</span><span class="p">);</span> <span class="n">n</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">nStep</span> <span class="o">=</span> <span class="n">f</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">nStep</span> <span class="o">==</span> <span class="n">nMaxStep</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">ans</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">nStep</span> <span class="o">&gt;</span> <span class="n">nMaxStep</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">ans</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
            <span class="n">ans</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
            <span class="n">nMaxStep</span> <span class="o">=</span> <span class="n">nStep</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Max Step: &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">nMaxStep</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">STACK_TYPE</span><span class="o">::</span><span class="n">iterator</span> <span class="n">li</span> <span class="o">=</span> <span class="n">ans</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span> <span class="n">li</span> <span class="o">!=</span> <span class="n">ans</span><span class="p">.</span><span class="n">end</span><span class="p">();</span> <span class="n">li</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">outf</span><span class="p">(</span><span class="o">*</span><span class="n">li</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">clock_t</span> <span class="n">et</span> <span class="o">=</span> <span class="n">clock</span><span class="p">();</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;time[s]:&quot;</span> <span class="o">&lt;&lt;</span> <span class="p">((</span><span class="kt">double</span><span class="p">)(</span><span class="n">et</span><span class="o">-</span><span class="n">st</span><span class="p">)</span><span class="o">/</span><span class="n">CLOCKS_PER_SEC</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5213/addtag/" class="addtag" id="addtag_5213">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5213/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5213/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5213"
  >-</span><span
  class="button yellow"
  id="rating_z_5213"
  >0</span><span 
  class="button green"
  id="rating_p_5213"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5213/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5276">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/606/" target="_top">pooq</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5276/">#5276</a>(<script language="JavaScript">print_time(new Date("2008/01/12 09:23 GMT"));</script><noscript>2008/01/12 09:23 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/basic/">
	  BASIC
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>十進BASIC Ver7.0.4の2進モードで。
実行環境は、pentiumM 1.3GHz、メモリ256MB、WindowsXPです。 

f( 837799 ) = 524 
 3.15000000000873 sec
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre>!コラッツ・角谷の問題
LET  st = TIME
LET  n = 2^20
DIM  c(n)

FUNCTION f(k)
   IF k = 1 THEN
      LET  f = 0
   ELSEIF k &lt;= n AND c(k) &lt;&gt; 0 THEN
      LET  f = c(k)
   ELSE
      IF  MOD(k,2) = 0  THEN
         LET  s = f(k / 2) + 1
      ELSE
         LET  s = f((3 *  k + 1) / 2) + 2
      END IF
      IF k &lt;= n THEN  LET  c(k) = s 
      LET  f = s
   END IF
END FUNCTION 

LET  mx = f(n)
LET  no = n
FOR i = 3 TO n STEP 2
   LET  j = f(i)
   IF j &gt; mx THEN 
      LET  mx = j
      LET  no = i
   END IF
NEXT I 
PRINT &quot;f(&quot;;no;&quot;) =&quot;;mx
PRINT TIME - st;&quot;sec&quot;
END
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5276/addtag/" class="addtag" id="addtag_5276">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/%E5%8D%81%E9%80%B2BASIC/">十進BASIC</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/basic/">
		BASIC
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5276/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5276/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5276"
  >-</span><span
  class="button yellow"
  id="rating_z_5276"
  >0</span><span 
  class="button green"
  id="rating_p_5276"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5276/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5435">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/664/" target="_top">tenka</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5435/">#5435</a>(<script language="JavaScript">print_time(new Date("2008/01/23 14:20 GMT"));</script><noscript>2008/01/23 14:20 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>WinXP Pro SP2
CPU:C2D E6850
メモリ:2G

f(837799) = 524
46ms
ときどき
31ms

再帰をなくせばもう少しいける？
C#だってやればできる子</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Collatz</span>
<span class="k">{</span>
    <span class="k">private</span> <span class="kt">short</span><span class="p">[]</span> <span class="n">countData</span><span class="p">;</span>
    <span class="k">private</span> <span class="kt">long</span> <span class="n">MAX_VALUE</span><span class="p">;</span>
    <span class="k">public</span> <span class="nf">Collatz</span><span class="p">()</span>
    <span class="k">{</span>
        <span class="n">MAX_VALUE</span> <span class="p">=</span> <span class="m">1048576</span><span class="p">;</span><span class="c">//1 &lt;&lt; 20;</span>
        <span class="n">countData</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">short</span><span class="p">[</span><span class="n">MAX_VALUE</span> <span class="p">+</span> <span class="m">1</span><span class="p">];</span>
    <span class="k">}</span>

    <span class="k">public</span> <span class="k">void</span> <span class="nf">run</span><span class="p">()</span>
    <span class="k">{</span>
        <span class="kt">long</span> <span class="n">n</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">step</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span><span class="n">temp</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">long</span> <span class="n">i</span> <span class="p">=</span> <span class="n">MAX_VALUE</span><span class="p">;</span> <span class="n">i</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">;</span> <span class="p">--</span><span class="n">i</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="n">temp</span> <span class="p">=</span> <span class="n">calc</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">temp</span> <span class="p">-</span> <span class="n">step</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
            <span class="k">{</span>
                <span class="n">n</span> <span class="p">=</span> <span class="n">i</span><span class="p">;</span> <span class="n">step</span> <span class="p">=</span> <span class="n">temp</span><span class="p">;</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;f({0}) = {1}&quot;</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">step</span><span class="p">);</span>
    <span class="k">}</span>

    <span class="k">private</span> <span class="kt">long</span> <span class="nf">calc</span><span class="p">(</span><span class="kt">long</span> <span class="n">n</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">if</span> <span class="p">((</span><span class="n">n</span> <span class="p">^</span> <span class="m">1</span><span class="p">)</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="k">return</span> <span class="m">0</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">MAX_VALUE</span> <span class="p">-</span> <span class="n">n</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">calc</span><span class="p">(((</span><span class="n">n</span> <span class="p">&amp;</span> <span class="m">1</span><span class="p">)</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="p">?</span> <span class="p">(</span><span class="n">n</span> <span class="p">&gt;&gt;</span> <span class="m">1</span><span class="p">)</span> <span class="p">:</span> <span class="p">(</span><span class="n">n</span> <span class="p">&lt;&lt;</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="n">n</span> <span class="p">+</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">countData</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="k">return</span> <span class="p">(</span><span class="kt">long</span><span class="p">)</span><span class="n">countData</span><span class="p">[</span><span class="n">n</span><span class="p">];</span>
        <span class="k">return</span> <span class="p">(</span><span class="kt">long</span><span class="p">)(</span><span class="n">countData</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="p">=</span> <span class="p">(</span><span class="kt">short</span><span class="p">)(</span><span class="n">calc</span><span class="p">(((</span><span class="n">n</span> <span class="p">&amp;</span> <span class="m">1</span><span class="p">)</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="p">?</span> <span class="p">(</span><span class="n">n</span> <span class="p">&gt;&gt;</span> <span class="m">1</span><span class="p">)</span> <span class="p">:</span> <span class="p">(</span><span class="n">n</span> <span class="p">&lt;&lt;</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="n">n</span> <span class="p">+</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">));</span>
    <span class="k">}</span>
<span class="k">}</span>

<span class="k">class</span> <span class="nc">Program</span>
<span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="kt">long</span> <span class="n">tick</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Ticks</span><span class="p">;</span>
        <span class="k">new</span> <span class="n">Collatz</span><span class="p">().</span><span class="n">run</span><span class="p">();</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">((</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Ticks</span> <span class="p">-</span> <span class="n">tick</span><span class="p">)</span> <span class="p">/</span> <span class="m">10000L</span> <span class="p">+</span> <span class="s">&quot;ms&quot;</span><span class="p">);</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5435/addtag/" class="addtag" id="addtag_5435">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5435/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5435/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5435"
  >-</span><span
  class="button yellow"
  id="rating_z_5435"
  >0</span><span 
  class="button green"
  id="rating_p_5435"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5435/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5457">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/685/" target="_top">Nemo</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5457/">#5457</a>(<script language="JavaScript">print_time(new Date("2008/01/26 04:39 GMT"));</script><noscript>2008/01/26 04:39 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/postscript/">
	  PostScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>PostScript版。ともかく走る、というだけです。2倍長演算部分、全く汎用性無し....
219秒/Ghostscript 7.07/Intel Celeron 2GHz
169秒/Apple Preview 4.0/Intel X5365*2 3GHz
123秒/Adobe Acrobat Distiller (Win) 7.0 / Intel X5365 (Single Core 相当)
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87</pre></td><td class="code"><div class="highlight"><pre>%!PS

/Loop 1024 1024 mul def % (2^10)^2 = 2^20  (2 20 exp cvi)   
/TextOutput false def

/Limit 1024 1024 1024 mul mul 2 idiv def
/Limit2 Limit 2 idiv def


/F {
    /N 0 def
    {
    dup 1 eq { exit } if
    dup 2 mod 0 eq { 2 idiv } { 3 mul 1 add } ifelse
    /N 1 N add def
    } loop
    pop
    N
} def

/F2 {
    0
    exch
    0
    exch
    {
    dup 2 mod 0 eq {
        exch
        dup 2 mod 0 eq {
        2 idiv
        exch
        2 idiv    
        } {
        2 idiv
        exch
        2 idiv Limit2 add
        } ifelse
    } {
        dup 1 eq { exch dup 0 eq { exit } if exch } if
        3 mul 1 add
        exch
        3 mul
        exch
        {
        dup Limit ge {
            Limit sub
            exch
            1 add
            exch
        } {
            exit 
        } ifelse
        } loop
    } ifelse
    3 2 roll
    1 add
    3 1 roll
    } loop
    pop
    pop
} def

/StartTime realtime def
/Max 0 def
/MaxNum 0 def
1 1 Loop {
    dup F2 dup Max gt {
    /Max exch def
    /MaxNum exch def
    } {pop pop} ifelse
} for

/FinishTime realtime def

save

TextOutput { /show { print } def /showpage {} def } if
/Times-Roman findfont 20 scalefont setfont
100 500 moveto (Max =) show
Max 10 string cvs show
100 400 moveto (MaxNum = ) show
MaxNum 10 string cvs show
100 300 moveto (Timer =) show
FinishTime StartTime sub 10 string cvs show
( ms) show
showpage
restore
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5457/addtag/" class="addtag" id="addtag_5457">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/postscript/">
		PostScript
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5457/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5457/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5457"
  >-</span><span
  class="button yellow"
  id="rating_z_5457"
  >0</span><span 
  class="button green"
  id="rating_p_5457"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5457/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5589">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5589/">#5589</a>(<script language="JavaScript">print_time(new Date("2008/01/31 05:55 GMT"));</script><noscript>2008/01/31 05:55 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/arc/">
	  Arc
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Arcです。<br/>Core2&nbsp;Duo&nbsp;E6600/Linux&nbsp;2^20で6分位です。<br/>定義をメモ化できるdefmemoってのがあるので、それを使ってみたんですが、<br/>自分はあまり上手く使いこなせていないようで、スピードがでません…。<br/>実行結果<br/>(time&nbsp;(collatz-max&nbsp;(expt&nbsp;2&nbsp;20)))<br/>;=&gt;<br/>;time:&nbsp;334690&nbsp;msec.<br/>;"f(837799)&nbsp;=&nbsp;524"
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre>(def collatz-max (num)
  ((afn (num i n highest)
    (if (&gt; i num)
        (prn (string &quot;f(&quot; n &quot;) = &quot; highest))
        (let cur (collatz i)
          (if (&lt; highest cur)
          (self num (+ i 1) i cur)
          (self num (+ i 1) n highest)))))
   num 1 0 0))

(defmemo collatz (n)
  ((afn (res cnt)
    (if (is res 1)
        cnt
        (self (if (even res)
              (/ res 2)
              (+ (* res 3) 1))
          (+ cnt 1))))
   n 0))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5589/addtag/" class="addtag" id="addtag_5589">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/arc/">
		Arc
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5589/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5589/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5589"
  >-</span><span
  class="button yellow"
  id="rating_z_5589"
  >0</span><span 
  class="button green"
  id="rating_p_5589"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5589/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5670">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/646/" target="_top">silverwire</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5670/">#5670</a>(<script language="JavaScript">print_time(new Date("2008/02/03 14:55 GMT"));</script><noscript>2008/02/03 14:55 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/bat/">
	  Batchfile
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>バッチで書いてみました。

速度に難があるため、1 ~ 2^12までの範囲でしか確認できていませんが、一応投稿します。

実行時間の計測には「実行時間の測定」で投稿したものを使用しています。

  e.g.
    実行環境 : Pentium M (1.6GHz), 768MB RAM
    実行結果 : f(3711) = 237
    実行時間 : 450050 (ms)

最初は以下のようにcallを使用して再帰的に書いていたのですが、速度を考慮してgotoを
利用したループに書き換えました。

  e.g.
    :collatz
      if %1 leq 1 goto :EOF
      set /a m=%1%%2
      if %m% equ 0 (set /a n=%1/2) else (set /a n=3*%1+1)
      call :collatz %n%
    goto :EOF

ただそれでも2^20まで実行した場合 1日では終わらないので、全く異なるロジックを編み
出す以外、手詰まりとなってしまいました。

# おそらく、遅延環境変数展開を利用して書き換えたくらいでは焼け石に水でしょう。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><div class="highlight"><pre>@echo off
  setlocal
    set s_=0
    set i_=0
    set /a &quot;i=1&lt;&lt;12&quot;

    for /l %%i in (1,1,%i%) do call :collatz %%i

    echo f(%i_%) = %s_%
  endlocal
goto :EOF

:collatz
  set n=%1
  set s=0

  :loop
    if %n% leq 1 goto compare
    set /a m=%n%%%2
    if %m% equ 0 (set /a n/=2) else (set /a n=3*%n%+1)
    set /a s+=1
  goto loop

  :compare
    if %s% leq %s_% goto :EOF
    set s_=%s%
    set i_=%1
goto :EOF
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5670/addtag/" class="addtag" id="addtag_5670">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/bat/">
		Batchfile
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5670/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5670/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5670"
  >-</span><span
  class="button yellow"
  id="rating_z_5670"
  >0</span><span 
  class="button green"
  id="rating_p_5670"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5670/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5774">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/642/" target="_top">saws</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5774/">#5774</a>(<script language="JavaScript">print_time(new Date("2008/02/18 12:47 GMT"));</script><noscript>2008/02/18 12:47 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ハッシュへと結果をキャッシュして高速化を図っています.
メモリの使用量がやばいことに.
自分のCPU(P4;  2.8 GHz)で実行時間は以下の通り.</p>
<pre class="literal-block">
  user     system      total        real
33.828000   0.360000  34.188000 ( 39.031000)
f_max: f(837799) = 524
</pre>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">solv_collatz</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
  <span class="nb">hash</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">}</span>
  <span class="n">max_key</span> <span class="o">=</span> <span class="nb">hash</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">max</span>
  <span class="n">n</span><span class="o">.</span><span class="n">downto</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
    <span class="k">unless</span> <span class="nb">hash</span><span class="o">[</span><span class="n">n</span><span class="o">=</span><span class="n">i</span><span class="o">]</span>
      <span class="n">ary</span> <span class="o">=</span> <span class="o">[</span><span class="n">n</span><span class="o">]</span>
      <span class="n">ary</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">?</span> <span class="n">n</span><span class="o">.</span><span class="n">div</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="p">:</span> <span class="mi">3</span><span class="o">*</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="k">until</span> <span class="nb">hash</span><span class="o">[</span><span class="n">n</span><span class="o">]</span>
      <span class="n">pos</span> <span class="o">=</span> <span class="n">ary</span><span class="o">.</span><span class="n">size</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">+</span> <span class="nb">hash</span><span class="o">[</span><span class="n">ary</span><span class="o">.</span><span class="n">last</span><span class="o">]</span>
      <span class="n">ary</span><span class="o">.</span><span class="n">each_with_index</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="p">,</span><span class="n">j</span><span class="o">|</span>
        <span class="nb">hash</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="p">?</span> <span class="k">break</span> <span class="p">:</span> <span class="nb">hash</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">=</span> <span class="n">pos</span><span class="o">-</span><span class="n">j</span><span class="p">}</span>
    <span class="k">end</span>
    <span class="n">max_key</span> <span class="o">=</span> <span class="n">i</span> <span class="k">if</span> <span class="nb">hash</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&gt;</span> <span class="nb">hash</span><span class="o">[</span><span class="n">max</span><span class="o">]</span><span class="p">}</span>
  <span class="k">return</span> <span class="nb">hash</span><span class="p">,</span> <span class="n">max_key</span>
<span class="k">end</span>
<span class="n">collatz</span><span class="p">,</span> <span class="n">max</span> <span class="o">=</span> <span class="n">solv_collatz</span><span class="p">(</span><span class="mi">2</span><span class="o">**</span><span class="mi">20</span><span class="p">)</span>
<span class="nb">puts</span> <span class="s2">&quot;f_max: f(</span><span class="si">#{</span><span class="n">max</span><span class="si">}</span><span class="s2">) = </span><span class="si">#{</span><span class="n">collatz</span><span class="o">[</span><span class="n">max</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5774/addtag/" class="addtag" id="addtag_5774">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5774/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5774/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5774"
  >-</span><span
  class="button yellow"
  id="rating_z_5774"
  >0</span><span 
  class="button green"
  id="rating_p_5774"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5774/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment5998">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/711/" target="_top">まさぽん</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5998/">#5998</a>(<script language="JavaScript">print_time(new Date("2008/03/11 03:46 GMT"));</script><noscript>2008/03/11 03:46 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>できるだけ solve-collatz を実行しないように頑張ってみました。
環境は
CPU: Athlon 64 x2 2GHz
メモリ: 2GB
ぐらいです。

実行例:
gosh&gt; (time (let-values (((n steps) (collatz-max? (expt 2 20))))
              (print "n=" n " : steps=" steps)))
n=837799 : steps=524
;(time (let-values (((n steps) (collatz-max? (expt 2 20)))) (print "n="  ...
; real   3.247
; user   3.250
; sys    0.000
#&lt;undef&gt;</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-11</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">uvector</span><span class="p">)</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">solve-collatz</span> <span class="nv">n</span> <span class="nv">cache</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">n</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">step</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">len</span> <span class="p">(</span><span class="nb">- </span><span class="p">(</span><span class="nf">u16vector-length</span> <span class="nv">cache</span><span class="p">)</span> <span class="mi">1</span><span class="p">)))</span>
    <span class="p">(</span><span class="nf">cond</span>
     <span class="p">((</span><span class="nb">= </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">step</span><span class="p">)</span>
     <span class="p">((</span><span class="k">and </span><span class="p">(</span><span class="nb">&lt; </span><span class="nv">n</span> <span class="nv">len</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt; </span><span class="mi">0</span> <span class="p">(</span><span class="nf">u16vector-ref</span> <span class="nv">cache</span> <span class="nv">n</span><span class="p">)))</span>
      <span class="p">(</span><span class="nb">+ </span><span class="nv">step</span> <span class="p">(</span><span class="nf">u16vector-ref</span> <span class="nv">cache</span> <span class="nv">n</span><span class="p">)))</span>
     <span class="p">((</span><span class="nb">even? </span><span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">/ </span><span class="nv">n</span> <span class="mi">2</span><span class="p">)</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">step</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">len</span><span class="p">))</span>
     <span class="p">(</span><span class="k">else </span><span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">+ </span><span class="p">(</span><span class="nb">* </span><span class="nv">n</span> <span class="mi">3</span><span class="p">)</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">step</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">len</span><span class="p">)))))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">set-doubles</span> <span class="nv">i</span> <span class="nv">st</span> <span class="nv">limit</span> <span class="nv">cache</span><span class="p">)</span>
  <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&lt;= </span><span class="nv">i</span> <span class="nv">limit</span><span class="p">)</span> 
      <span class="p">(</span><span class="k">begin </span><span class="p">(</span><span class="nf">u16vector-set!</span> <span class="nv">cache</span> <span class="nv">i</span> <span class="nv">st</span><span class="p">)</span>
             <span class="p">(</span><span class="nf">set-doubles</span> <span class="p">(</span><span class="nb">* </span><span class="nv">i</span> <span class="mi">2</span><span class="p">)</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">st</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">limit</span> <span class="nv">cache</span><span class="p">))</span>
      <span class="p">(</span><span class="nb">values </span><span class="p">(</span><span class="nb">/ </span><span class="nv">i</span> <span class="mi">2</span><span class="p">)</span> <span class="p">(</span><span class="nb">- </span><span class="nv">st</span> <span class="mi">1</span><span class="p">))))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">collatz-max?</span> <span class="nv">limit</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let* </span><span class="p">((</span><span class="nf">max-n</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">max-steps</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">limit</span> <span class="nv">limit</span><span class="p">)</span> <span class="p">(</span><span class="nf">cache</span> <span class="p">(</span><span class="nf">make-u16vector</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">limit</span> <span class="mi">1</span><span class="p">)</span> <span class="mi">0</span><span class="p">)))</span>
    <span class="p">(</span><span class="k">do </span><span class="p">((</span><span class="nf">i</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">)))</span> <span class="p">((</span><span class="nb">&gt; </span><span class="nv">i</span> <span class="nv">limit</span><span class="p">))</span>
      <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">zero? </span><span class="p">(</span><span class="nf">u16vector-ref</span> <span class="nv">cache</span> <span class="nv">i</span><span class="p">))</span>
          <span class="p">(</span><span class="nf">let*-values</span> <span class="p">(((</span><span class="nf">steps</span><span class="p">)</span> <span class="p">(</span><span class="nf">solve-collatz</span> <span class="nv">i</span> <span class="nv">cache</span><span class="p">))</span>
                        <span class="p">((</span><span class="nf">mcn</span> <span class="nv">mcstep</span><span class="p">)</span> <span class="p">(</span><span class="nf">set-doubles</span> <span class="nv">i</span> <span class="nv">steps</span> <span class="nv">limit</span> <span class="nv">cache</span><span class="p">)))</span>
            <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&lt; </span><span class="nv">max-steps</span> <span class="nv">mcstep</span><span class="p">)</span>
                <span class="p">(</span><span class="k">begin </span><span class="p">(</span><span class="k">set! </span><span class="nv">max-n</span> <span class="nv">mcn</span><span class="p">)</span> <span class="p">(</span><span class="k">set! </span><span class="nv">max-steps</span> <span class="nv">mcstep</span><span class="p">))))))</span>
    <span class="p">(</span><span class="nb">values </span><span class="nv">max-n</span> <span class="nv">max-steps</span><span class="p">)))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/5998/addtag/" class="addtag" id="addtag_5998">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5998/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/5998/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_5998"
  >-</span><span
  class="button yellow"
  id="rating_z_5998"
  >0</span><span 
  class="button green"
  id="rating_p_5998"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20080926203709/http://ja.doukaku.org/comment/5998/">
    1
    reply
  </a>

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/5998/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6001">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/711/" target="_top">まさぽん</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/6001/">#6001</a>(<script language="JavaScript">print_time(new Date("2008/03/11 07:14 GMT"));</script><noscript>2008/03/11 07:14 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  C&nbsp;に移植したバージョン。<br/>最近の&nbsp;gcc&nbsp;は、コンパイル時に&nbsp;-O2&nbsp;を付けると末尾再帰呼び出しを最適化してくれるようですね。便利。<br/><br/>実行例:<br/>$&nbsp;cc&nbsp;-O2&nbsp;-o&nbsp;collatz&nbsp;collatz.c<br/>$&nbsp;time&nbsp;./collatz<br/>n=837799,&nbsp;steps=524<br/>./collatz&nbsp;&nbsp;0.07s&nbsp;user&nbsp;0.00s&nbsp;system&nbsp;95%&nbsp;cpu&nbsp;0.079&nbsp;total<br/><br/>やはりネイティブコンパイルできる処理系は早いですね。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>

<span class="cp">#define LIMIT 1048576</span>

<span class="kt">int</span> <span class="n">solve_collatz</span><span class="p">(</span><span class="kt">long</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">step</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">cache</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">step</span><span class="p">;</span>
    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">&lt;=</span> <span class="n">LIMIT</span> <span class="o">&amp;&amp;</span> <span class="n">cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">step</span> <span class="o">+</span> <span class="n">cache</span><span class="p">[</span><span class="n">n</span><span class="p">];</span>
    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">n</span> <span class="o">%</span> <span class="mi">2</span><span class="p">)</span> 
        <span class="k">return</span> <span class="n">solve_collatz</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">step</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">cache</span><span class="p">);</span>
    <span class="k">else</span>
        <span class="k">return</span> <span class="n">solve_collatz</span><span class="p">(</span><span class="n">n</span><span class="o">*</span><span class="mi">3</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">step</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">cache</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">long</span> <span class="n">set_doubles</span><span class="p">(</span><span class="kt">long</span> <span class="n">i</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">steps</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">cache</span><span class="p">){</span>
    <span class="k">for</span><span class="p">(;</span><span class="n">i</span> <span class="o">&lt;=</span> <span class="n">LIMIT</span><span class="p">;</span> <span class="n">i</span> <span class="o">*=</span> <span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="o">*</span><span class="n">steps</span><span class="p">)</span><span class="o">++</span><span class="p">)</span>
        <span class="n">cache</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="o">*</span><span class="n">steps</span><span class="p">;</span>
    <span class="o">*</span><span class="n">steps</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">i</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
    <span class="kt">int</span> <span class="o">*</span><span class="n">cache</span><span class="p">,</span> <span class="n">steps</span><span class="p">,</span> <span class="n">max_steps</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">long</span> <span class="n">n</span><span class="p">,</span> <span class="n">mc_n</span><span class="p">,</span> <span class="n">max_n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> 

    <span class="n">cache</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">((</span><span class="n">LIMIT</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">cache</span><span class="p">)</span> <span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">cache</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="n">LIMIT</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>

    <span class="k">for</span><span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="n">LIMIT</span><span class="p">;</span> <span class="n">n</span><span class="o">++</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
            <span class="n">steps</span> <span class="o">=</span> <span class="n">solve_collatz</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">cache</span><span class="p">);</span>
            <span class="n">mc_n</span> <span class="o">=</span> <span class="n">set_doubles</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">steps</span><span class="p">,</span> <span class="n">cache</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">max_steps</span> <span class="o">&lt;</span> <span class="n">steps</span><span class="p">){</span>
                <span class="n">max_n</span> <span class="o">=</span> <span class="n">mc_n</span><span class="p">;</span>
                <span class="n">max_steps</span> <span class="o">=</span> <span class="n">steps</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;n=%d, steps=%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">max_n</span><span class="p">,</span> <span class="n">cache</span><span class="p">[</span><span class="n">max_n</span><span class="p">]);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/6001/addtag/" class="addtag" id="addtag_6001">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/6001/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/6001/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6001"
  >-</span><span
  class="button yellow"
  id="rating_z_6001"
  >0</span><span 
  class="button green"
  id="rating_p_6001"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/5998/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20080926203709/http://ja.doukaku.org/comment/6001/root/"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/6001/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6482">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/793/" target="_top">genzou</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/6482/">#6482</a>(<script language="JavaScript">print_time(new Date("2008/06/13 08:41 GMT"));</script><noscript>2008/06/13 08:41 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>再帰処理を避けるように作ったのですが、
30分しても処理が終わりません・・・</p>
<p>マシンの貧弱性のためか、
言語の問題か、
はたまたコードが原因か。</p>
<p>2*17ぐらいなら何とか1分程度で処理できるんですけどね。</p>
<p>■スペック■
CPU:Celeron 1.30GHz
RAM:512MB
OS:Windows XP SP2</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31</pre></td><td class="code"><div class="highlight"><pre>def start  = new Date()
def f( double n ){
    int count = 0

    while( n != 1 ){
        if( n % 2 == 0){
            n = n/2
        } else {
            n = 3*n + 1
        }
        count++
    }
    
    count 
}

def max = [n:0, fn:0]

def last = 2**17
for( n in 1..last){
    def fn = f(n)
    if( max.fn &lt; fn ){
        max.n = n
        max.fn = fn
        println &quot;最大は f(${max.n}) = ${max.fn}&quot;
    }
}

def end = new Date()

println &quot;時間は ${end.time - start.time}&quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/6482/addtag/" class="addtag" id="addtag_6482">タグ</a>:
	
    
    <a href="/web/20080926203709/http://ja.doukaku.org/tag/groovy/">groovy</a>
    
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/6482/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/6482/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6482"
  >-</span><span
  class="button yellow"
  id="rating_z_6482"
  >0</span><span 
  class="button green"
  id="rating_p_6482"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/6482/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6564">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/468/" target="_top">だいら</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/6564/">#6564</a>(<script language="JavaScript">print_time(new Date("2008/06/23 21:55 GMT"));</script><noscript>2008/06/23 21:55 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>愚直に。
答えが出るまで数十分かかります。
PHP遅すぎる。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="nv">$max</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">);</span>
<span class="nv">$maxValue</span> <span class="o">=</span> <span class="nf">pow</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">20</span><span class="p">);</span>

<span class="k">for</span><span class="p">(</span><span class="nv">$i</span><span class="o">=</span><span class="m">1</span><span class="p">;</span><span class="nv">$i</span><span class="o">&lt;=</span><span class="nv">$maxValue</span><span class="p">;</span><span class="nv">$i</span><span class="o">++</span><span class="p">){</span>
    <span class="nv">$deep</span> <span class="o">=</span> <span class="nx">collatz</span><span class="p">(</span><span class="nv">$i</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="nv">$max</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="nv">$deep</span><span class="p">){</span>
        <span class="nv">$max</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$i</span><span class="p">;</span>
        <span class="nv">$max</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$deep</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="k">echo</span> <span class="s2">&quot;n=&quot;</span> <span class="o">.</span> <span class="nv">$max</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&quot; f(n)=&quot;</span> <span class="o">.</span> <span class="nv">$max</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>

<span class="k">function</span> <span class="nf">collatz</span><span class="p">(</span><span class="nv">$value</span><span class="p">,</span> <span class="nv">$deep</span> <span class="o">=</span> <span class="m">0</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="nv">$value</span> <span class="o">==</span> <span class="m">1</span><span class="p">){</span>
        <span class="k">return</span> <span class="nv">$deep</span><span class="p">;</span>
    <span class="p">}</span><span class="k">elseif</span><span class="p">(</span><span class="nv">$value</span><span class="o">%</span><span class="m">2</span> <span class="o">==</span> <span class="m">0</span><span class="p">){</span>
        <span class="nv">$deep</span> <span class="o">=</span> <span class="nx">collatz</span><span class="p">(</span><span class="nv">$value</span><span class="o">/</span><span class="m">2</span><span class="p">,</span> <span class="nv">$deep</span><span class="p">);</span>
    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
        <span class="nv">$deep</span> <span class="o">=</span> <span class="nx">collatz</span><span class="p">(</span><span class="nv">$value</span><span class="o">*</span><span class="m">3</span><span class="o">+</span><span class="m">1</span><span class="p">,</span> <span class="nv">$deep</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nv">$deep</span> <span class="o">+</span> <span class="m">1</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/6564/addtag/" class="addtag" id="addtag_6564">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/6564/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/6564/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6564"
  >-</span><span
  class="button yellow"
  id="rating_z_6564"
  >0</span><span 
  class="button green"
  id="rating_p_6564"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/6564/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment6575">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/6575/">#6575</a>(<script language="JavaScript">print_time(new Date("2008/06/24 11:10 GMT"));</script><noscript>2008/06/24 11:10 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/xslt/">
	  XSLT
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>OS: WindowsVista(Home Premium 32bit)
CPU: AMD Turion64X2 (1.6GHz)
メモリ: 1.5GB で、

XSLTプロセッサ環境が、
Saxon 9.0.0.6J from Saxonica
Java version 1.6.0_06

出力：
n=837799, f(n)=524

かかった時間は、
Stylesheet compilation time: 586 milliseconds
Execution time: 391187 milliseconds
だそうです。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49</pre></td><td class="code"><div class="highlight"><pre>&lt;xsl:stylesheet version=&quot;2.0&quot;
  xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
  xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;
  xmlns:fn=&quot;http://www.w3.org/2005/xpath-functions&quot;
  xmlns:my=&quot;uri:ja.doukaku.org:my-functions&quot;
  exclude-result-prefixes=&quot;my&quot;
  &gt;

  &lt;xsl:output method=&quot;text&quot; /&gt;

  &lt;xsl:template match=&quot;/&quot; &gt;
    &lt;xsl:variable name=&quot;collatzresult&quot; as=&quot;xs:integer*&quot;&gt;
      &lt;xsl:for-each select=&quot;1 to 1048576&quot;&gt;
        &lt;xsl:value-of select=&quot;my:collatz(.,0)&quot; /&gt;
      &lt;/xsl:for-each&gt;
    &lt;/xsl:variable&gt;

    &lt;xsl:variable name=&quot;max&quot; as=&quot;xs:integer&quot; select=&quot;fn:max($collatzresult)&quot; /&gt;

    &lt;xsl:text&gt;n=&lt;/xsl:text&gt;
    &lt;xsl:for-each select=&quot;$collatzresult&quot;&gt;
      &lt;xsl:if test=&quot;$max=.&quot;&gt;
        &lt;xsl:value-of select=&quot;fn:position()&quot; /&gt;
        &lt;xsl:text&gt;, &lt;/xsl:text&gt;
      &lt;/xsl:if&gt;
    &lt;/xsl:for-each&gt;
    &lt;xsl:text&gt;f(n)=&lt;/xsl:text&gt;
    &lt;xsl:value-of select=&quot;$max&quot; /&gt;
    &lt;xsl:text&gt;&amp;#xA;&lt;/xsl:text&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:function name=&quot;my:collatz&quot; as=&quot;xs:integer&quot;&gt;
    &lt;xsl:param name=&quot;n&quot; as=&quot;xs:integer&quot; /&gt;
    &lt;xsl:param name=&quot;cnt&quot; as=&quot;xs:integer&quot; /&gt;

    &lt;xsl:choose&gt;
      &lt;xsl:when test=&quot;$n=1&quot;&gt;
        &lt;xsl:value-of select=&quot;$cnt&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:when test=&quot;($n mod 2)=0&quot; &gt;
        &lt;xsl:value-of select=&quot;my:collatz($n idiv 2,$cnt+1)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:otherwise&gt;
        &lt;xsl:value-of select=&quot;my:collatz($n*3+1,$cnt+1)&quot; /&gt;
      &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
  &lt;/xsl:function&gt;

&lt;/xsl:stylesheet&gt;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/6575/addtag/" class="addtag" id="addtag_6575">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/xslt/">
		XSLT
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/6575/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/6575/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_6575"
  >-</span><span
  class="button yellow"
  id="rating_z_6575"
  >0</span><span 
  class="button green"
  id="rating_p_6575"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/6575/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment7636">
  <p class="banner"><a href="/web/20080926203709/http://ja.doukaku.org/user/926/" target="_top">nobusuke_neko</a><a href="/web/20080926203709/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/7636/">#7636</a>(<script language="JavaScript">print_time(new Date("2008/09/16 13:24 GMT"));</script><noscript>2008/09/16 13:24 GMT</noscript>)
	
	
	
	[<a href="/web/20080926203709/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  n&nbsp;=&nbsp;1..2^k&nbsp;の範囲で最大ステップ求める場合は、<br/>2^k-1..2^k&nbsp;間だけ調べることにしました。<br/>後はいたって普通というか、回りくどいというか。<br/>CeleronM1.8GHz,&nbsp;Memory1GB,&nbsp;WindowsXP,&nbsp;WSH(JScript)<br/>--------------------<br/>C:\temp&gt;cscript&nbsp;//nologo&nbsp;collatz.js<br/>f(&nbsp;837799&nbsp;)&nbsp;=&nbsp;524<br/>time&nbsp;=&nbsp;29578ms
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">steps</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span>
  <span class="k">var</span> <span class="nx">step</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="k">for</span><span class="p">(;</span><span class="nx">n</span><span class="o">!=</span><span class="mi">1</span><span class="o">;</span> <span class="nx">step</span><span class="o">++</span><span class="p">)</span>
    <span class="nx">n</span> <span class="o">=</span> <span class="p">(</span><span class="nx">n</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">)</span> <span class="o">?</span> <span class="nx">n</span><span class="o">*</span><span class="mi">3</span><span class="o">+</span><span class="mi">1</span> <span class="o">:</span> <span class="nx">n</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
  <span class="k">return</span> <span class="nx">step</span><span class="o">;</span>
<span class="p">}</span>
<span class="k">function</span> <span class="nx">maxim</span><span class="p">(</span><span class="nx">lim</span><span class="p">){</span>
  <span class="k">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="k">var</span> <span class="nx">step</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
  <span class="k">for</span><span class="p">(</span><span class="k">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">lim</span><span class="o">&amp;</span><span class="p">(</span><span class="nx">lim</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">lim</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span> <span class="nx">i</span><span class="o">&lt;=</span><span class="nx">lim</span><span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
    <span class="k">var</span> <span class="nx">temp</span> <span class="o">=</span> <span class="nx">steps</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">temp</span> <span class="o">&gt;</span> <span class="nx">step</span><span class="p">)</span> <span class="p">{</span> <span class="nx">step</span><span class="o">=</span><span class="nx">temp</span><span class="o">;</span> <span class="nx">result</span><span class="o">=</span><span class="nx">i</span><span class="o">;</span> <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">result</span><span class="o">;</span>
<span class="p">}</span>

<span class="k">var</span> <span class="nx">tm</span> <span class="o">=</span> <span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">();</span>
<span class="k">var</span> <span class="nx">n</span> <span class="o">=</span> <span class="nx">maxim</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">20</span><span class="p">));</span>
<span class="k">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">steps</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span>
<span class="nx">WScript</span><span class="p">.</span><span class="nx">Echo</span><span class="p">(</span><span class="s1">&#39;f( &#39;</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s1">&#39; ) = &#39;</span><span class="o">+</span><span class="nx">s</span><span class="p">);</span>
<span class="nx">WScript</span><span class="p">.</span><span class="nx">Echo</span><span class="p">(</span><span class="s1">&#39;time = &#39;</span><span class="o">+</span><span class="p">((</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">()</span><span class="o">-</span><span class="nx">tm</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;ms&#39;</span><span class="p">);</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20080926203709/http://ja.doukaku.org/comment/7636/addtag/" class="addtag" id="addtag_7636">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20080926203709/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20080926203709/http://ja.doukaku.org/comment/7636/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20080926203709/http://ja.doukaku.org/comment/7636/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7636"
  >-</span><span
  class="button yellow"
  id="rating_z_7636"
  >0</span><span 
  class="button green"
  id="rating_p_7636"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20080926203709/http://ja.doukaku.org/120/reply_to/7636/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20080926203709if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20080926203709/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20080926203709/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20080926203709/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20080926203709/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20080926203709/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20080926203709/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20080926203709/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20080926203709/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20080926203709/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20080926203709/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20080926203709im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20080926203709/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20080926203709/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20080926203709/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20080926203709/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20080926203709/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20080926203709/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20080926203709/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20080926203709/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20080926203709im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20080926203709/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20080926203709/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20080926203709/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20080926203709js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 20:37:09 Sep 26, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 13:22:45 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
