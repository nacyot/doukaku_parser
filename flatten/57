
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
改行をBRタグに置き換える
DouKaku? </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20081120020222cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20081120020222cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20081120020222cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20081120020222/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20081120020222/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20081120020222js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20081120020222js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20081120020222js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20081120020222js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app18.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/57\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "20";
var displayMonth = "Nov";
var displayYear = "2008";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/57/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20081120020222" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20080224102711/http://ja.doukaku.org/57/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="24 Feb 2008"><strong>FEB</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 2:02:22 Nov 20, 2008">NOV</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Dec
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20080224102711/http://ja.doukaku.org/57/flatten/" title="10:27:11 Feb 24, 2008" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 2:02:22 Nov 20, 2008">20</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2007
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 2:02:22 Nov 20, 2008">2008</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2009
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20081120020222*/http://ja.doukaku.org/57/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>3 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">16 Dec 07 - 20 Nov 08</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000001_2008:10:010000000010_2009:-1:000000000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20081120020222/http://ja.doukaku.org/">DouKaku?</a><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png' alt=challenge>
<a href="/web/20081120020222/http://ja.doukaku.org/57/">改行をBRタグに置き換える</a>
</h2>

    





<div class="comment" id="comment3413">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/3413/">#3413</a>(<script language="JavaScript">print_time(new Date("2007/09/04 05:31 GMT"));</script><noscript>2007/09/04 05:31 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffdfdf;">-2/2=-1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <a href="/web/20081120020222/http://ja.doukaku.org/54/">一部のHTMLタグを通すフィルタ どう書く？</a>の続編です。
前回の条件を満たしつつ、入力中の改行を&lt;br/>に置き換えてください。ただし、たとえば"&lt;a\nhref=...>"といったようにタグの中に改行がある場合、単純に置換するわけには行かないことに注意してください。
<p>
また、ユーザの入力注の&lt;br>は&lt;br/>に変換してください。
<p>
このお題はperezvonさんの提案を元にした三部作の二問目です。ご協力ありがとうございました。
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/3413/addtag/" class="addtag" id="addtag_3413">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffdfdf;"
  >-2/2=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_3413"
  >-</span><span
  class="button yellow"
  id="rating_z_3413"
  >0</span><span 
  class="button green"
  id="rating_p_3413"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/3413/">
  reply
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20081120020222/http://ja.doukaku.org/57/post_comment/">
post comment
</a>
</div>


<h2>Posted feedbacks - Flatten</h2>
<a href="/web/20081120020222/http://ja.doukaku.org/57/nested/">Nested</a>
<a href="/web/20081120020222/http://ja.doukaku.org/57/">Hidden</a> 


  
  




<div class="comment" id="comment2889">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2889/">#2889</a>(<script language="JavaScript">print_time(new Date("2007/09/04 06:11 GMT"));</script><noscript>2007/09/04 06:11 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>テストケースがあるといいですねぇ。
Tag Soup ライブラリをつかってます
#2757にすこし手を入れたものです</pre>
	</div>
	
	<p class="link">
	  see: <a href="/web/20081120020222/http://www.cs.york.ac.uk/fp/haddock/tagsoup/index.html">Tag Soup</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103</pre></td><td class="code"><div class="highlight"><pre><span class="kr">module</span> <span class="n">Main</span> <span class="p">(</span><span class="nv">main</span><span class="p">)</span> <span class="kr">where</span>

<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Char</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">List</span>
<span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Maybe</span>
<span class="kr">import</span> <span class="n">Text</span><span class="o">.</span><span class="n">HTML</span><span class="o">.</span><span class="n">TagSoup</span>

<span class="c1">-- Parsing</span>
<span class="c1">-- Text.HTML.TagSoup.parseTags :: String -&gt; [Tag Char]</span>

<span class="c1">-- Translating</span>
<span class="nv">translate</span> <span class="o">::</span> <span class="p">[</span><span class="n">Tag</span> <span class="n">Char</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Tag</span> <span class="n">Char</span><span class="p">]</span>
<span class="nv">translate</span> <span class="o">=</span> <span class="nv">concatMap</span> <span class="nv">trans</span>

<span class="nv">trans</span> <span class="o">::</span> <span class="n">Tag</span> <span class="n">Char</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Tag</span> <span class="n">Char</span><span class="p">]</span>
<span class="nv">trans</span> <span class="nv">tag</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">tag</span> <span class="kr">of</span>
  <span class="n">TagOpen</span> <span class="nv">t</span> <span class="nv">attrs</span> <span class="o">|</span> <span class="nv">ignore</span> <span class="nv">t</span>  <span class="o">-&gt;</span> <span class="p">[</span><span class="nv">escapeTagOpen</span> <span class="nv">t</span> <span class="nv">attrs</span><span class="p">]</span>
                  <span class="o">|</span> <span class="nv">otherwise</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">TagOpen</span> <span class="nv">t</span> <span class="p">(</span><span class="nv">filterAttr</span> <span class="nv">t</span> <span class="nv">attrs</span><span class="p">)]</span>
  <span class="n">TagClose</span> <span class="nv">t</span>      <span class="o">|</span> <span class="nv">ignore</span> <span class="nv">t</span>  <span class="o">-&gt;</span> <span class="p">[</span><span class="nv">escapeTagClose</span> <span class="nv">t</span><span class="p">]</span>
  <span class="n">TagText</span> <span class="nv">s</span> <span class="o">-&gt;</span> <span class="nv">concat</span> <span class="o">$</span> <span class="nv">intersperse</span> <span class="p">[</span><span class="n">TagOpen</span> <span class="s">&quot;br&quot;</span> <span class="p">[],</span> <span class="n">TagClose</span> <span class="s">&quot;br&quot;</span><span class="p">]</span>
             <span class="o">$</span> <span class="nv">map</span> <span class="p">((</span><span class="o">:</span><span class="p">[])</span> <span class="o">.</span> <span class="n">TagText</span><span class="p">)</span> <span class="o">$</span> <span class="nv">lines</span> <span class="nv">s</span>
  <span class="kr">_</span>                           <span class="o">-&gt;</span> <span class="p">[</span><span class="nv">tag</span><span class="p">]</span>

<span class="nv">ignore</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">Bool</span>
<span class="nv">ignore</span> <span class="o">=</span> <span class="nv">flip</span> <span class="nv">notElem</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">fst</span> <span class="nv">filterTable</span><span class="p">)</span> <span class="o">.</span> <span class="nv">map</span> <span class="nv">toLower</span>

<span class="nv">escapeTagOpen</span> <span class="nv">t</span> <span class="nv">attrs</span>
 <span class="o">=</span> <span class="n">TagText</span> <span class="o">$</span> <span class="s">&quot;&amp;lt;&quot;</span><span class="o">++</span><span class="nv">t</span><span class="o">++</span><span class="nv">escape</span> <span class="p">(</span><span class="sc">&#39; &#39;</span><span class="o">:</span><span class="nv">unwords</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">showAttr</span> <span class="nv">attrs</span><span class="p">))</span><span class="o">++</span><span class="s">&quot;&amp;gt;&quot;</span>
<span class="nv">escapeTagClose</span> <span class="nv">t</span>
 <span class="o">=</span> <span class="n">TagText</span> <span class="o">$</span> <span class="s">&quot;&amp;lt;/&quot;</span><span class="o">++</span><span class="nv">t</span><span class="o">++</span><span class="s">&quot;&amp;gt;&quot;</span>

<span class="nv">filterAttr</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Attribute</span> <span class="n">Char</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Attribute</span> <span class="n">Char</span><span class="p">]</span>
<span class="nv">filterAttr</span> <span class="nv">t</span> <span class="o">=</span> <span class="nv">filter</span> <span class="p">((</span><span class="nv">maybe</span> <span class="p">(</span><span class="nv">const</span> <span class="n">True</span><span class="p">)</span> <span class="nv">id</span> <span class="p">(</span><span class="nv">lookup</span> <span class="nv">t</span> <span class="nv">filterTable</span><span class="p">))</span> <span class="o">.</span> <span class="nv">fst</span><span class="p">)</span>

<span class="nv">filterTable</span> <span class="o">::</span> <span class="p">[(</span><span class="n">String</span><span class="p">,</span><span class="n">String</span><span class="o">-&gt;</span><span class="n">Bool</span><span class="p">)]</span>
<span class="nv">filterTable</span> <span class="o">=</span> <span class="p">[(</span><span class="s">&quot;a&quot;</span><span class="p">,</span><span class="nv">flip</span> <span class="nv">elem</span> <span class="p">[</span><span class="s">&quot;href&quot;</span><span class="p">,</span><span class="s">&quot;name&quot;</span><span class="p">])</span>
	      <span class="p">,(</span><span class="s">&quot;strong&quot;</span><span class="p">,</span><span class="nv">const</span> <span class="n">False</span><span class="p">)</span>
	      <span class="p">,(</span><span class="s">&quot;br&quot;</span><span class="p">,</span><span class="nv">const</span> <span class="n">False</span><span class="p">)]</span>

<span class="c1">-- Showing</span>

<span class="nv">showTags</span> <span class="o">::</span> <span class="p">[</span><span class="n">Tag</span> <span class="n">Char</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">showTags</span> <span class="p">[]</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
<span class="nv">showTags</span> <span class="p">(</span><span class="n">TagOpen</span> <span class="nv">s</span> <span class="p">[]</span> <span class="o">:</span> <span class="n">TagClose</span> <span class="nv">e</span> <span class="o">:</span> <span class="nv">ts</span><span class="p">)</span> <span class="o">|</span> <span class="nv">isEmptyTag</span> <span class="nv">s</span> <span class="o">&amp;&amp;</span> <span class="nv">s</span> <span class="o">==</span> <span class="nv">e</span>
 <span class="o">=</span> <span class="nv">angle</span> <span class="p">(</span><span class="nv">s</span> <span class="o">++</span><span class="s">&quot;/&quot;</span><span class="p">)</span><span class="o">++</span><span class="nv">showTags</span> <span class="nv">ts</span>
<span class="nv">showTags</span> <span class="p">(</span><span class="n">TagOpen</span> <span class="nv">s</span> <span class="nv">attrs</span> <span class="o">:</span> <span class="n">TagClose</span> <span class="nv">e</span> <span class="o">:</span> <span class="nv">ts</span><span class="p">)</span> <span class="o">|</span> <span class="nv">isEmptyTag</span> <span class="nv">s</span> <span class="o">&amp;&amp;</span> <span class="nv">s</span> <span class="o">==</span> <span class="nv">e</span>
 <span class="o">=</span> <span class="nv">angle</span> <span class="p">(</span><span class="nv">s</span> <span class="o">++</span> <span class="sc">&#39; &#39;</span><span class="o">:</span><span class="nv">unwords</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">showAttr</span> <span class="nv">attrs</span><span class="p">)</span><span class="o">++</span><span class="s">&quot;/&quot;</span><span class="p">)</span><span class="o">++</span><span class="nv">showTags</span> <span class="nv">ts</span>
<span class="nv">showTags</span> <span class="p">(</span><span class="n">TagOpen</span> <span class="nv">s</span> <span class="p">[]</span> <span class="o">:</span> <span class="nv">ts</span><span class="p">)</span> <span class="o">|</span> <span class="nv">isEmptyTag</span> <span class="nv">s</span> 
 <span class="o">=</span> <span class="nv">angle</span> <span class="p">(</span><span class="nv">s</span> <span class="o">++</span><span class="s">&quot;/&quot;</span><span class="p">)</span><span class="o">++</span><span class="nv">showTags</span> <span class="nv">ts</span>
<span class="nv">showTags</span> <span class="p">(</span><span class="n">TagOpen</span> <span class="nv">s</span> <span class="nv">attrs</span> <span class="o">:</span> <span class="nv">ts</span><span class="p">)</span> <span class="o">|</span> <span class="nv">isEmptyTag</span> <span class="nv">s</span> 
 <span class="o">=</span> <span class="nv">angle</span> <span class="p">(</span><span class="nv">s</span> <span class="o">++</span> <span class="sc">&#39; &#39;</span><span class="o">:</span><span class="nv">unwords</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">showAttr</span> <span class="nv">attrs</span><span class="p">)</span><span class="o">++</span><span class="s">&quot;/&quot;</span><span class="p">)</span><span class="o">++</span><span class="nv">showTags</span> <span class="nv">ts</span>
<span class="nv">showTags</span> <span class="p">(</span><span class="nv">t</span><span class="o">:</span><span class="nv">ts</span><span class="p">)</span> 
 <span class="o">=</span> <span class="nv">showTag</span> <span class="nv">t</span> <span class="o">++</span> <span class="nv">showTags</span> <span class="nv">ts</span>

<span class="nv">showTag</span> <span class="nv">tag</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">tag</span> <span class="kr">of</span>
  <span class="n">TagOpen</span> <span class="nv">t</span> <span class="nv">attrs</span> <span class="o">-&gt;</span> <span class="nv">angle</span> <span class="o">$</span> <span class="nv">t</span> <span class="o">++</span> <span class="sc">&#39; &#39;</span><span class="o">:</span><span class="nv">unwords</span> <span class="p">(</span><span class="nv">map</span> <span class="nv">showAttr</span> <span class="nv">attrs</span><span class="p">)</span>
  <span class="n">TagClose</span> <span class="nv">t</span>      <span class="o">-&gt;</span> <span class="nv">angle</span> <span class="o">$</span> <span class="nv">t</span> <span class="o">++</span> <span class="s">&quot;/&quot;</span>
  <span class="n">TagText</span> <span class="nv">s</span>       <span class="o">-&gt;</span> <span class="nv">s</span>
  <span class="n">TagComment</span> <span class="nv">c</span>    <span class="o">-&gt;</span> <span class="nv">angle</span> <span class="o">$</span> <span class="s">&quot;!--&quot;</span> <span class="o">++</span> <span class="nv">c</span> <span class="o">++</span> <span class="s">&quot;--&quot;</span>
  <span class="n">TagSpecial</span> <span class="nv">s</span> <span class="nv">t</span>  <span class="o">-&gt;</span> <span class="nv">angle</span> <span class="o">$</span> <span class="s">&quot;!&quot;</span> <span class="o">++</span> <span class="nv">s</span> <span class="o">++</span> <span class="sc">&#39; &#39;</span><span class="o">:</span><span class="nv">t</span>
  <span class="n">TagWarning</span> <span class="nv">s</span>    <span class="o">-&gt;</span> <span class="s">&quot;&quot;</span>

<span class="nv">angle</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">angle</span> <span class="nv">s</span> <span class="o">=</span> <span class="s">&quot;&lt;&quot;</span><span class="o">++</span><span class="nv">s</span><span class="o">++</span><span class="s">&quot;&gt;&quot;</span>

<span class="nv">isEmptyTag</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">Bool</span>
<span class="nv">isEmptyTag</span> <span class="o">=</span> <span class="nv">flip</span> <span class="nv">elem</span> <span class="p">[</span><span class="s">&quot;br&quot;</span><span class="p">,</span><span class="s">&quot;hr&quot;</span><span class="p">]</span>     <span class="c1">-- not full fledged</span>

<span class="nv">showAttr</span> <span class="o">::</span> <span class="n">Attribute</span> <span class="n">Char</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">showAttr</span> <span class="p">(</span><span class="nv">a</span><span class="p">,</span><span class="nv">v</span><span class="p">)</span> <span class="o">=</span> <span class="nv">a</span> <span class="o">++</span> <span class="s">&quot;=&quot;</span> <span class="o">++</span> <span class="nv">q</span> <span class="nv">v</span>
  <span class="kr">where</span> <span class="nv">q</span> <span class="nv">v</span> <span class="o">=</span> <span class="kr">if</span> <span class="nv">elem</span> <span class="nv">sq</span> <span class="nv">v</span> <span class="kr">then</span> <span class="nv">dq</span><span class="o">:</span><span class="nv">v</span><span class="o">++</span><span class="p">[</span><span class="nv">dq</span><span class="p">]</span>
              <span class="kr">else</span> <span class="nv">sq</span><span class="o">:</span><span class="nv">v</span><span class="o">++</span><span class="p">[</span><span class="nv">sq</span><span class="p">]</span>
        <span class="nv">sq</span> <span class="o">=</span> <span class="sc">&#39;\&#39;&#39;</span>
<span class="sc">        dq = &#39;</span><span class="o">\</span><span class="s">&quot;&#39;</span>

<span class="s">escape :: String -&gt; String</span>
<span class="s">escape = concatMap esc</span>
<span class="s"> where esc &#39;&lt;&#39; = &quot;</span><span class="o">&amp;</span><span class="nv">lt</span><span class="p">;</span><span class="s">&quot;</span>
<span class="s">       esc &#39;&gt;&#39; = &quot;</span><span class="o">&amp;</span><span class="nv">gt</span><span class="p">;</span><span class="s">&quot;</span>
<span class="s">       esc &#39;&amp;&#39; = &quot;</span><span class="o">&amp;</span><span class="nv">amp</span><span class="p">;</span><span class="s">&quot;</span>
<span class="s">       esc c   = [c]</span>

<span class="s">--</span>

<span class="s">main :: IO ()</span>
<span class="s">main = do { putStrLn . showTags . translate . parseTags $ testdata1</span>
<span class="s">	  ; putStrLn . showTags . translate . parseTags $ testdata2</span>
<span class="s">          ; putStrLn . showTags . translate . parseTags $ testdata3</span>
<span class="s">          ; putStrLn . showTags . translate . parseTags $ testdata4</span>
<span class="s">	  }</span>

<span class="s">testdata1 = &quot;</span><span class="o">&lt;</span><span class="nv">script</span> <span class="nv">foo</span><span class="o">=\</span><span class="s">&quot;&lt;script&gt;alert(&#39;bar&#39;)&lt;/script&gt;\&quot;</span><span class="o">&gt;</span><span class="nv">alert</span><span class="p">(</span><span class="sc">&#39;foo&#39;</span><span class="p">)</span><span class="o">&lt;/</span><span class="nv">script</span><span class="o">&gt;</span><span class="s">&quot;</span>
<span class="s">testdata2 = &quot;</span><span class="o">&lt;</span><span class="nv">script</span> <span class="nv">foo</span><span class="o">=\</span><span class="s">&quot;&lt;a href=&#39;link&#39;&gt;link&lt;/a&gt;\&quot;</span><span class="o">&gt;</span><span class="nv">alert</span><span class="p">(</span><span class="sc">&#39;foo&#39;</span><span class="p">)</span><span class="o">&lt;/</span><span class="nv">script</span><span class="o">&gt;</span><span class="s">&quot;</span>
<span class="s">testdata3 = &quot;</span><span class="o">&lt;</span><span class="nv">a</span> <span class="nv">href</span><span class="o">=</span><span class="sc">&#39;www.g&gt;oogle.com&#39;</span><span class="o">&gt;</span><span class="nv">link</span><span class="o">&lt;/</span><span class="nv">a</span><span class="o">&gt;</span><span class="s">&quot;</span>
<span class="s">testdata4 = &quot;</span><span class="o">&lt;</span><span class="nv">a</span><span class="o">\</span><span class="nv">n</span> <span class="nv">href</span><span class="o">=</span><span class="sc">&#39;www.google.com&#39;</span><span class="o">&gt;</span><span class="nv">link</span><span class="o">&lt;!--</span> <span class="nv">comment</span> <span class="c1">--&gt;&lt;/a&gt; This&lt;br&gt; is an\n example.&quot;</span>

<span class="cm">{-</span>
<span class="cm">*Main&gt; :main</span>
<span class="cm">&amp;lt;script foo=&quot;&amp;lt;script&amp;gt;alert(&#39;bar&#39;)&amp;lt;/script&amp;gt;&quot;&amp;gt;alert(&#39;foo&#39;)&amp;lt;/script&amp;gt;</span>
<span class="cm">&amp;lt;script foo=&quot;&amp;lt;a href=&#39;link&#39;&amp;gt;link&amp;lt;/a&amp;gt;&quot;&amp;gt;alert(&#39;foo&#39;)&amp;lt;/script&amp;gt;</span>
<span class="cm">&lt;a href=&#39;www.g&gt;oogle.com&#39;&gt;link&lt;a/&gt;</span>
<span class="cm">&lt;a href=&#39;www.google.com&#39;&gt;link&lt;!-- comment --&gt;&lt;a/&gt; This &lt;br/&gt; is an&lt;br/&gt; example.</span>
<span class="cm">-}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2889/addtag/" class="addtag" id="addtag_2889">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2889/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2889/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2889"
  >-</span><span
  class="button yellow"
  id="rating_z_2889"
  >0</span><span 
  class="button green"
  id="rating_p_2889"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2889/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2893">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/130/" target="_top">rucker</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2893/">#2893</a>(<script language="JavaScript">print_time(new Date("2007/09/04 07:28 GMT"));</script><noscript>2007/09/04 07:28 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>通すタグに含まれる改行は一度アトリビュート毎に分解するからそこで
消えるかと思いきや、''で括られてたりすると残るのでした。
URLに改行が含まれるというのもアレですが…
'&amp;lt;～&amp;gt;'に変換されたタグに含まれる改行をどうするか迷ったのですが
今回は&lt;br/&gt;には変換していません。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">safehtml</span><span class="p">(</span><span class="nv">$str</span><span class="p">)</span>
<span class="p">{</span>
	<span class="nv">$safetag</span><span class="o">=</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">=&gt;</span><span class="k">array</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;href&#39;</span><span class="p">,</span><span class="s1">&#39;name&#39;</span><span class="p">)),</span><span class="s1">&#39;strong&#39;</span><span class="o">=&gt;</span><span class="k">array</span><span class="p">(</span><span class="m">1</span><span class="p">),</span><span class="s1">&#39;br&#39;</span><span class="o">=&gt;</span><span class="k">array</span><span class="p">(</span><span class="m">2</span><span class="p">));</span>
	<span class="nv">$r</span><span class="o">=</span><span class="k">array</span><span class="p">();</span>
	<span class="nv">$tags</span><span class="o">=</span><span class="k">array</span><span class="p">();</span>
	<span class="nv">$offs</span><span class="o">=</span><span class="m">0</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="nf">preg_match</span><span class="p">(</span><span class="s1">&#39;!&lt;(\s*(/|)\s*(([^&gt;\&#39;&quot;/]+|\&#39;[^\&#39;]*\&#39;|&quot;[^&quot;]*&quot;)*)(/|)\s*)&gt;!&#39;</span><span class="p">,</span><span class="nv">$str</span><span class="p">,</span><span class="nv">$m1</span><span class="p">,</span><span class="nx">PREG_OFFSET_CAPTURE</span><span class="p">,</span><span class="nv">$offs</span><span class="p">))</span>
	<span class="p">{</span>	<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="nf">nl2br</span><span class="p">(</span><span class="nf">substr</span><span class="p">(</span><span class="nv">$str</span><span class="p">,</span><span class="nv">$offs</span><span class="p">,</span><span class="nv">$m1</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">1</span><span class="p">]</span><span class="o">-</span><span class="nv">$offs</span><span class="p">));</span>
		<span class="nv">$offs</span><span class="o">=</span><span class="nv">$m1</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">1</span><span class="p">]</span><span class="o">+</span><span class="nf">strlen</span><span class="p">(</span><span class="nv">$m1</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">0</span><span class="p">]);</span>
		<span class="nf">preg_match_all</span><span class="p">(</span><span class="s1">&#39;!([^\s\&#39;&quot;=]+)(\s*=\s*(&quot;[^&quot;]*&quot;|\&#39;[^\&#39;]*\&#39;|[^\s]+)|)!im&#39;</span><span class="p">,</span><span class="nv">$m1</span><span class="p">[</span><span class="m">3</span><span class="p">][</span><span class="m">0</span><span class="p">],</span><span class="nv">$m2</span><span class="p">,</span><span class="nx">PREG_SET_ORDER</span><span class="p">);</span>
		<span class="nv">$tag</span><span class="o">=</span><span class="nf">strtolower</span><span class="p">(</span><span class="nv">$m2</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">1</span><span class="p">]);</span>
		<span class="k">if</span><span class="p">(</span><span class="nf">isset</span><span class="p">(</span><span class="nv">$safetag</span><span class="p">[</span><span class="nv">$tag</span><span class="p">]))</span>
		<span class="p">{</span>	<span class="k">if</span><span class="p">(</span><span class="nv">$safetag</span><span class="p">[</span><span class="nv">$tag</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">&amp;</span><span class="m">1</span><span class="p">)</span>
			<span class="p">{</span>	<span class="k">if</span><span class="p">(</span><span class="nv">$m1</span><span class="p">[</span><span class="m">2</span><span class="p">][</span><span class="m">0</span><span class="p">])</span>
				<span class="p">{</span>	<span class="k">if</span><span class="p">(</span><span class="nf">array_search</span><span class="p">(</span><span class="nv">$tag</span><span class="p">,</span><span class="nv">$tags</span><span class="p">)</span><span class="o">===</span><span class="k">false</span><span class="p">)</span>
						<span class="k">continue</span><span class="p">;</span> <span class="c">// 開いてないタグは閉じない</span>
					<span class="k">while</span><span class="p">((</span><span class="nv">$t</span><span class="o">=</span><span class="nf">array_shift</span><span class="p">(</span><span class="nv">$tags</span><span class="p">)))</span> <span class="c">// 開いたのと逆順に閉じる</span>
					<span class="p">{</span>	<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="s2">&quot;&lt;/</span><span class="si">$t</span><span class="s2">&gt;&quot;</span><span class="p">;</span>
						<span class="k">if</span><span class="p">(</span><span class="nv">$t</span><span class="o">==</span><span class="nv">$tag</span><span class="p">)</span>
							<span class="k">break</span><span class="p">;</span>
					<span class="p">}</span>
					<span class="k">continue</span><span class="p">;</span>
				<span class="p">}</span>
				<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nv">$m1</span><span class="p">[</span><span class="m">5</span><span class="p">][</span><span class="m">0</span><span class="p">])</span>
					<span class="nf">array_unshift</span><span class="p">(</span><span class="nv">$tags</span><span class="p">,</span><span class="nv">$tag</span><span class="p">);</span>
			<span class="p">}</span>
			<span class="k">if</span><span class="p">(</span><span class="nv">$safetag</span><span class="p">[</span><span class="nv">$tag</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">&amp;</span><span class="m">2</span><span class="p">)</span>
			<span class="p">{</span>	<span class="nv">$m1</span><span class="p">[</span><span class="m">2</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span>
				<span class="nv">$m1</span><span class="p">[</span><span class="m">5</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;/&quot;</span><span class="p">;</span>
			<span class="p">}</span>
			<span class="nv">$t</span><span class="o">=</span><span class="k">array</span><span class="p">(</span><span class="nv">$tag</span><span class="p">);</span>
			<span class="k">if</span><span class="p">(</span><span class="nf">isset</span><span class="p">(</span><span class="nv">$safetag</span><span class="p">[</span><span class="nv">$tag</span><span class="p">][</span><span class="m">1</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nv">$m1</span><span class="p">[</span><span class="m">2</span><span class="p">][</span><span class="m">0</span><span class="p">])</span>
			<span class="p">{</span>	<span class="nf">array_shift</span><span class="p">(</span><span class="nv">$m2</span><span class="p">);</span>
				<span class="k">while</span><span class="p">(</span><span class="nv">$param</span><span class="o">=</span><span class="nf">array_shift</span><span class="p">(</span><span class="nv">$m2</span><span class="p">))</span>
				<span class="p">{</span>	<span class="k">if</span><span class="p">(</span><span class="nf">array_search</span><span class="p">(</span><span class="nf">strtolower</span><span class="p">(</span><span class="nv">$param</span><span class="p">[</span><span class="m">1</span><span class="p">]),</span><span class="nv">$safetag</span><span class="p">[</span><span class="nv">$tag</span><span class="p">][</span><span class="m">1</span><span class="p">])</span><span class="o">!==</span><span class="k">false</span><span class="p">)</span>
						<span class="nv">$t</span><span class="p">[]</span><span class="o">=</span><span class="nv">$param</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
				<span class="p">}</span>
			<span class="p">}</span>
			<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="s1">&#39;&lt;&#39;</span><span class="o">.</span><span class="nv">$m1</span><span class="p">[</span><span class="m">2</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">.</span><span class="nf">implode</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nv">$t</span><span class="p">)</span><span class="o">.</span><span class="nv">$m1</span><span class="p">[</span><span class="m">5</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">.</span><span class="s1">&#39;&gt;&#39;</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">else</span>
			<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="nf">str_replace</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;&lt;&#39;</span><span class="p">,</span><span class="s1">&#39;&gt;&#39;</span><span class="p">),</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;&amp;lt;&#39;</span><span class="p">,</span><span class="s1">&#39;&amp;gt;&#39;</span><span class="p">),</span><span class="nv">$m1</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">0</span><span class="p">]);</span>
	<span class="p">}</span>
	<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="nf">substr</span><span class="p">(</span><span class="nv">$str</span><span class="p">,</span><span class="nv">$offs</span><span class="p">);</span>
	<span class="k">while</span><span class="p">((</span><span class="nv">$tag</span><span class="o">=</span><span class="nf">array_shift</span><span class="p">(</span><span class="nv">$tags</span><span class="p">)))</span> <span class="c">// 閉じわすれタグを閉じる</span>
		<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="s2">&quot;&lt;/</span><span class="si">$tag</span><span class="s2">&gt;&quot;</span><span class="p">;</span>
	<span class="k">return</span> <span class="nf">implode</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nv">$r</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">echo</span> <span class="nx">safehtml</span><span class="p">(</span><span class="s">&lt;&lt;&lt;EOT</span>
<span class="s">&lt;a href=&#39;www.google.com&#39;</span>
<span class="s">target=_blank&gt;link&lt;/a&gt; &lt;blink dummy=&#39;&lt;&#39;&gt;and&lt;/blink&gt;&lt;br&gt; &lt;strong onClick=&#39;alert(&quot;NG&quot;)&#39;&gt;cli</span>
<span class="s">ck&lt;br/&gt;me!&lt;/strong&gt; &lt;z foo=&#39;&lt;script&gt;alert(&quot;Boo&quot;)&lt;/script&gt;&#39;&gt;</span>
<span class="s">EOT</span>
<span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2893/addtag/" class="addtag" id="addtag_2893">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2893/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2893/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2893"
  >-</span><span
  class="button yellow"
  id="rating_z_2893"
  >0</span><span 
  class="button green"
  id="rating_p_2893"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081120020222/http://ja.doukaku.org/comment/2893/">
    1
    reply
  </a>

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2893/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2895">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/322/" target="_top">sawat</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2895/">#2895</a>(<script language="JavaScript">print_time(new Date("2007/09/04 08:57 GMT"));</script><noscript>2007/09/04 08:57 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  前回のreplaceをwhileループに変更し、マッチしなかった箇所に対しても置換処理をする。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre><span class="k">var</span> <span class="nx">input</span> <span class="o">=</span> <span class="s2">&quot;&lt;a title=\&quot;(&gt;_&lt;;)\&quot; href=&#39;www.google.com&#39; name=&#39;hoge&#39;\n\</span>
<span class="s2">&gt;link&lt;/a&gt; &lt;blink&gt;and&lt;/blink&gt;\n &lt;strong onClick=&#39;alert(\&quot;NG\&quot;)&#39;&gt;click&lt;br&gt;me!&lt;/strong&gt;&quot;</span><span class="o">;</span>

<span class="k">function</span> <span class="nx">deleteAttr</span><span class="p">(</span><span class="nx">attr</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">attr</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s+(\w+)\s*=\s*([&quot;&#39;])((?:[\r\n]|.)*?)\2/g</span><span class="o">,</span>
    <span class="k">function</span><span class="p">(</span><span class="nx">all</span><span class="o">,</span> <span class="nx">name</span><span class="o">,</span> <span class="nx">q</span><span class="o">,</span> <span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">return</span> <span class="nx">name</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/name|href/i</span><span class="p">)</span> <span class="o">?</span> <span class="nx">all</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="o">;</span>
    <span class="p">});</span>
<span class="p">}</span>
<span class="k">function</span> <span class="nx">escapeHtml</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&amp;/g</span><span class="o">,</span> <span class="s1">&#39;&amp;amp;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;/g</span><span class="o">,</span> <span class="s1">&#39;&amp;lt;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\r?\n/g</span><span class="o">,</span> <span class="s1">&#39;&lt;br/&gt;&#39;</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">function</span> <span class="nx">escapeTag</span><span class="p">(</span><span class="nx">all</span><span class="o">,</span> <span class="nx">fslash</span><span class="o">,</span> <span class="nx">tag</span><span class="o">,</span> <span class="nx">attrs</span><span class="o">,</span> <span class="nx">q</span><span class="o">,</span> <span class="nx">rslash</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">switch</span><span class="p">(</span><span class="nx">tag</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">())</span> <span class="p">{</span>
    <span class="nx">case</span> <span class="s1">&#39;STRONG&#39;</span> <span class="o">:</span>  <span class="c">// drop through</span>
    <span class="nx">case</span> <span class="s1">&#39;BR&#39;</span> <span class="o">:</span> <span class="nx">attrs</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">;</span> <span class="nx">rslash</span> <span class="o">=</span> <span class="s1">&#39;/&#39;</span><span class="o">;</span> <span class="k">break</span><span class="o">;</span>
    <span class="nx">case</span> <span class="s1">&#39;A&#39;</span> <span class="o">:</span> <span class="nx">attrs</span> <span class="o">=</span> <span class="nx">deleteAttr</span><span class="p">(</span><span class="nx">attrs</span><span class="p">);</span> <span class="k">break</span><span class="o">;</span>
    <span class="nx">default</span> <span class="o">:</span> <span class="k">return</span> <span class="nx">escapeHtml</span><span class="p">(</span><span class="nx">all</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="s1">&#39;&lt;&#39;</span> <span class="o">+</span> <span class="nx">fslash</span> <span class="o">+</span> <span class="nx">tag</span> <span class="o">+</span> <span class="nx">attrs</span> <span class="o">+</span> <span class="nx">rslash</span> <span class="o">+</span> <span class="s1">&#39;&gt;&#39;</span><span class="o">;</span>
<span class="p">}</span>
<span class="k">function</span> <span class="nx">filter</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">var</span> <span class="nx">reg</span> <span class="o">=</span> <span class="sr">/&lt;(\/?)(\w+)((?:\s+\w+\s*=\s*([&quot;&#39;])(?:[\r\n]|.)*?\4)*)?(\/?)&gt;/gmi</span><span class="o">;</span>
  <span class="k">var</span> <span class="nx">output</span> <span class="o">=</span> <span class="p">[]</span><span class="o">,</span> <span class="nx">m</span><span class="o">,</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
  <span class="k">while</span><span class="p">(</span><span class="nx">m</span> <span class="o">=</span> <span class="nx">reg</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">html</span><span class="p">))</span> <span class="p">{</span>
    <span class="nx">output</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">escapeHtml</span><span class="p">(</span><span class="nx">html</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">i</span><span class="o">,</span> <span class="nx">m</span><span class="p">.</span><span class="nx">index</span><span class="p">)));</span>
    <span class="nx">output</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">escapeTag</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="o">,</span> <span class="nx">m</span><span class="p">));</span>
    <span class="nx">i</span><span class="o">=</span> <span class="nx">m</span><span class="p">.</span><span class="nx">index</span> <span class="o">+</span> <span class="nx">m</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="o">;</span>
  <span class="p">}</span>
  <span class="nx">output</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">escapeHtml</span><span class="p">(</span><span class="nx">html</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">i</span><span class="o">,</span> <span class="nx">html</span><span class="p">.</span><span class="nx">length</span><span class="p">)));</span>
  <span class="k">return</span> <span class="nx">output</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">);</span>
<span class="p">}</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">filter</span><span class="p">(</span><span class="nx">input</span><span class="p">);</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2895/addtag/" class="addtag" id="addtag_2895">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2895/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2895/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2895"
  >-</span><span
  class="button yellow"
  id="rating_z_2895"
  >0</span><span 
  class="button green"
  id="rating_p_2895"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2895/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2899">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2899/">#2899</a>(<script language="JavaScript">print_time(new Date("2007/09/04 10:26 GMT"));</script><noscript>2007/09/04 10:26 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>前のお題の#2759で実装したクラスを継承します。
#2759には下の方にテスト用の式をトップレベルに
書いてあるので適当に処理してください。

置き換えたタグ内の改行も、引用符にくくられていようと
無視して&lt;br/&gt;に置換しています。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</pre></td><td class="code"><div class="highlight"><pre><span class="k">from</span> <span class="nn">HTMLParser2</span> <span class="k">import</span> <span class="n">HTMLParser2</span>

<span class="k">class</span> <span class="nc">HTMLParser3</span><span class="p">(</span><span class="n">HTMLParser2</span><span class="p">):</span>

  <span class="k">def</span> <span class="nf">replace</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">s</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;&amp;&#39;</span><span class="p">,</span> <span class="s">&#39;&amp;amp;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;&lt;&#39;</span><span class="p">,</span> <span class="s">&#39;&amp;lt;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;&gt;&#39;</span><span class="p">,</span> <span class="s">&#39;&amp;gt;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">,</span> <span class="s">&#39;&lt;br/&gt;&#39;</span><span class="p">)</span>

  <span class="k">def</span> <span class="nf">handle_starttag</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">tag</span><span class="p">,</span> <span class="n">attrs</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">tag</span> <span class="o">==</span> <span class="s">&#39;br&#39;</span><span class="p">:</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">buf</span> <span class="o">+=</span> <span class="s">&#39;&lt;br/&gt;&#39;</span>
    <span class="k">else</span><span class="p">:</span>
      <span class="n">HTMLParser2</span><span class="o">.</span><span class="n">handle_starttag</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">tag</span><span class="p">,</span> <span class="n">attrs</span><span class="p">)</span>

  <span class="k">def</span> <span class="nf">handle_data</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">):</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">buf</span> <span class="o">+=</span> <span class="n">data</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">,</span> <span class="s">&#39;&lt;br/&gt;&#39;</span><span class="p">)</span>
  
<span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
  <span class="n">h</span> <span class="o">=</span> <span class="n">HTMLParser3</span><span class="p">()</span>
  <span class="n">h</span><span class="o">.</span><span class="n">feed</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
  <span class="k">print</span> <span class="n">s</span>
  <span class="k">print</span> <span class="n">h</span><span class="o">.</span><span class="n">buf</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
  <span class="n">f</span><span class="p">(</span><span class="s">&#39;&#39;&#39;&lt;script foo=&quot;&lt;script&gt;alert(&#39;bar&#39;)&lt;/script&gt;&quot;&gt;alert(&#39;foo&#39;)&lt;/script&gt;&#39;&#39;&#39;</span><span class="p">)</span>
  <span class="n">f</span><span class="p">(</span><span class="s">&#39;&#39;&#39;&lt;script foo=&quot;&lt;a href=&#39;link&#39;&gt;link&lt;/a&gt;&quot;&gt;alert(&#39;foo&#39;)&lt;/script&gt;&#39;&#39;&#39;</span><span class="p">)</span>
  <span class="n">f</span><span class="p">(</span><span class="s">&#39;&#39;&#39;&lt;a href=&#39;www.g&gt;oogle.com&#39;&gt;link&lt;/a&gt;&#39;&#39;&#39;</span><span class="p">)</span>
  <span class="n">f</span><span class="p">(</span><span class="s">&#39;&#39;&#39;&lt;br&gt;abc</span><span class="se">\n</span><span class="s">def</span><span class="se">\n</span><span class="s">&lt;br&gt;&#39;&#39;&#39;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2899/addtag/" class="addtag" id="addtag_2899">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2899/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2899/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2899"
  >-</span><span
  class="button yellow"
  id="rating_z_2899"
  >0</span><span 
  class="button green"
  id="rating_p_2899"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2899/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2901">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/402/" target="_top">tea</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2901/">#2901</a>(<script language="JavaScript">print_time(new Date("2007/09/04 12:11 GMT"));</script><noscript>2007/09/04 12:11 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>同じく前回の投稿 #2763 を再利用して。

折角、フィルタ登録型にしたのに、
フィルタ探索関数をクロージャにしてしまったのが裏目にでた。
MyHTMLParserを継承してますが、変更部分は filterメソッド内の find_filter のみです。

今回のお題の追加分は、
fix_br_tag, nl_to_br_in_text 。

</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47</pre></td><td class="code"><div class="highlight"><pre><span class="c"># wget http://ja.doukaku.org/comment/2763/download/ -O MyHTMLParser.py</span>
 

<span class="k">from</span> <span class="nn">MyHTMLParser</span> <span class="k">import</span> <span class="n">MyHTMLParser</span><span class="p">,</span> <span class="n">TEXT</span><span class="p">,</span><span class="n">TAG</span>


<span class="k">class</span> <span class="nc">MyHTMLParser2</span><span class="p">(</span><span class="n">MyHTMLParser</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">filter</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="p">(</span><span class="n">state</span><span class="p">,</span><span class="n">tag</span><span class="p">,</span><span class="n">attrs</span><span class="p">,</span><span class="n">text</span><span class="p">)):</span>
        <span class="c">#  find_filter = lambda x:x.get((state,tag.lower()), lambda x:x)</span>
        <span class="k">def</span> <span class="nf">find_filter</span><span class="p">(</span><span class="n">filters</span><span class="p">):</span>
            <span class="n">tag_</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
            <span class="k">if</span> <span class="n">filters</span><span class="o">.</span><span class="n">has_key</span><span class="p">((</span><span class="n">state</span><span class="p">,</span><span class="n">tag_</span><span class="p">)):</span>
                <span class="k">return</span> <span class="n">filters</span><span class="o">.</span><span class="n">get</span><span class="p">((</span><span class="n">state</span><span class="p">,</span><span class="n">tag_</span><span class="p">))</span>
            <span class="k">return</span> <span class="n">filters</span><span class="o">.</span><span class="n">get</span><span class="p">((</span><span class="n">state</span><span class="p">,</span><span class="bp">None</span><span class="p">),</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="n">x</span><span class="p">)</span>


        <span class="n">tag</span><span class="p">,</span><span class="n">attrs</span> <span class="o">=</span> <span class="n">find_filter</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tag_filters</span><span class="p">)((</span><span class="n">tag</span><span class="p">,</span><span class="n">attrs</span><span class="p">))</span>
        <span class="n">attrs</span> <span class="o">=</span> <span class="n">find_filter</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">attr_filters</span><span class="p">)(</span><span class="n">attrs</span><span class="p">)</span>
        <span class="n">text</span> <span class="o">=</span> <span class="n">find_filter</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">text_filters</span><span class="p">)(</span><span class="n">text</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">state</span><span class="p">,</span><span class="n">tag</span><span class="p">,</span><span class="n">attrs</span><span class="p">,</span><span class="n">text</span>


<span class="k">def</span> <span class="nf">test</span><span class="p">(</span><span class="n">html</span><span class="p">):</span>
    <span class="k">import</span> <span class="nn">re</span>

    <span class="k">def</span> <span class="nf">allow_attrs</span><span class="p">(</span><span class="o">*</span><span class="n">names</span><span class="p">):</span>
        <span class="k">return</span> <span class="k">lambda</span> <span class="n">attrs</span><span class="p">:</span> <span class="p">[(</span><span class="n">k</span><span class="p">,</span><span class="n">quote</span><span class="p">(</span><span class="n">v</span><span class="p">))</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">attrs</span> <span class="k">if</span> <span class="n">k</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span> <span class="ow">in</span> <span class="n">names</span><span class="p">]</span>

    <span class="k">def</span> <span class="nf">remove_all_attrs</span><span class="p">(</span><span class="n">attrs</span><span class="p">):</span>
        <span class="k">return</span> <span class="p">[]</span>

    <span class="k">def</span> <span class="nf">fix_br_tag</span><span class="p">((</span><span class="n">tag</span><span class="p">,</span><span class="n">attrs</span><span class="p">)):</span>
        <span class="k">return</span> <span class="p">(</span><span class="s">&#39;br/&#39;</span><span class="p">,</span><span class="n">attrs</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">nl_to_br_in_text</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="s">r&quot;(\r\n|\r|\n)&quot;</span><span class="p">,</span><span class="s">&quot;&lt;br /&gt;&quot;</span><span class="p">)</span>

    <span class="n">p</span> <span class="o">=</span> <span class="n">MyHTMLParser2</span><span class="p">()</span>
    <span class="n">p</span><span class="o">.</span><span class="n">allow_tags</span> <span class="o">+=</span> <span class="p">[</span><span class="s">&#39;a&#39;</span><span class="p">,</span> <span class="s">&#39;br&#39;</span><span class="p">,</span> <span class="s">&#39;strong&#39;</span><span class="p">]</span>
    <span class="n">p</span><span class="o">.</span><span class="n">attr_filters</span><span class="p">[(</span><span class="n">TAG</span><span class="p">,</span><span class="s">&#39;a&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">allow_attrs</span><span class="p">(</span><span class="s">&#39;href&#39;</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">)</span> 
    <span class="n">p</span><span class="o">.</span><span class="n">attr_filters</span><span class="p">[(</span><span class="n">TAG</span><span class="p">,</span><span class="s">&#39;br&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">remove_all_attrs</span>
    <span class="n">p</span><span class="o">.</span><span class="n">attr_filters</span><span class="p">[(</span><span class="n">TAG</span><span class="p">,</span><span class="s">&#39;strong&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">remove_all_attrs</span>
    <span class="n">p</span><span class="o">.</span><span class="n">tag_filters</span><span class="p">[(</span><span class="n">TAG</span><span class="p">,</span><span class="s">&#39;br&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">fix_br_tag</span>
    <span class="n">p</span><span class="o">.</span><span class="n">text_filters</span><span class="p">[(</span><span class="n">TEXT</span><span class="p">,</span><span class="bp">None</span><span class="p">)]</span> <span class="o">=</span> <span class="n">nl_to_br_in_text</span>
    <span class="n">p</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2901/addtag/" class="addtag" id="addtag_2901">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2901/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2901/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2901"
  >-</span><span
  class="button yellow"
  id="rating_z_2901"
  >0</span><span 
  class="button green"
  id="rating_p_2901"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081120020222/http://ja.doukaku.org/comment/2901/">
    1
    reply
  </a>

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2901/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2902">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/402/" target="_top">tea</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2902/">#2902</a>(<script language="JavaScript">print_time(new Date("2007/09/04 12:21 GMT"));</script><noscript>2007/09/04 12:21 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Copy&amp;Pasteしたらライブラリのimport漏れ。
test関数内import re の後に、from urllib import quote 追加して下さい。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2902/addtag/" class="addtag" id="addtag_2902">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2902"
  >-</span><span
  class="button yellow"
  id="rating_z_2902"
  >0</span><span 
  class="button green"
  id="rating_p_2902"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120020222/http://ja.doukaku.org/comment/2901/"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120020222/http://ja.doukaku.org/comment/2902/root/"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2902/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2903">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/343/" target="_top">matyr</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2903/">#2903</a>(<script language="JavaScript">print_time(new Date("2007/09/04 12:49 GMT"));</script><noscript>2007/09/04 12:49 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  &nbsp;ややこしいので最初に一括エスケープするように方針変更。タグ中の改行はスペースに置き換えて対処。<br/><br/>javascript:with(document.body)(function(s,i,g,n){i=/&amp;lt;(\/?(?:(a)|br|strong)\b\s?)((?:".*?"|'.*?'|[^&gt;])*?)(?=\/?&gt;)/gi,g=/\b(?:name|href)\s*=\s*(?:".*?"|'.*?'|[^\s&gt;]*)/gi,n=/\r\n|[\r\n]|&lt;br\s*&gt;/gi;innerHTML=s.replace(/&amp;/g,'&amp;amp;').replace(/&lt;/g,'&amp;lt;').replace(i,function(_,t,A,a){return('&lt;'+t+(A?(a.match(g)||[]).join('&nbsp;'):'')).replace(n,'&nbsp;')}).replace(n,'&lt;br/&gt;')})(innerHTML)
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="highlight"><pre><span class="k">function</span> <span class="nx">doukaku57</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span>
  <span class="k">var</span> <span class="nx">xOK</span> <span class="o">=</span> <span class="sr">/&amp;lt;(\/?(?:(a)|br|strong)\b\s?)((?:&quot;.*?&quot;|&#39;.*?&#39;|[^&gt;])*?)(?=\/?&gt;)/gi</span><span class="o">,</span>
      <span class="nx">xNH</span> <span class="o">=</span> <span class="sr">/\b(?:name|href)\s*=\s*(?:&quot;.*?&quot;|&#39;.*?&#39;|[^\s&gt;]*)/gi</span><span class="o">,</span>
      <span class="nx">xBR</span> <span class="o">=</span> <span class="sr">/\r\n|[\r\n]|&lt;br\s*&gt;/gi</span><span class="o">;</span>
  <span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&amp;/g</span><span class="o">,</span><span class="s1">&#39;&amp;amp;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;/g</span><span class="o">,</span><span class="s1">&#39;&amp;lt;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">xOK</span><span class="o">,</span> <span class="k">function</span><span class="p">(</span><span class="nx">_</span><span class="o">,</span> <span class="nx">tag</span><span class="o">,</span> <span class="nx">A</span><span class="o">,</span> <span class="nx">ats</span><span class="p">){</span>
    <span class="k">return</span> <span class="p">(</span><span class="s1">&#39;&lt;&#39;</span><span class="o">+</span> <span class="nx">tag</span> <span class="o">+</span> <span class="p">(</span><span class="nx">A</span> <span class="o">?</span> <span class="p">(</span><span class="nx">ats</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">xNH</span><span class="p">)</span> <span class="o">||</span> <span class="p">[]).</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">)).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">xBR</span><span class="o">,</span> <span class="s1">&#39; &#39;</span><span class="p">);</span>
  <span class="p">}).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">xBR</span><span class="o">,</span> <span class="s1">&#39;&lt;br/&gt;&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2903/addtag/" class="addtag" id="addtag_2903">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2903/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2903/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2903"
  >-</span><span
  class="button yellow"
  id="rating_z_2903"
  >0</span><span 
  class="button green"
  id="rating_p_2903"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2903/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2904">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2904/">#2904</a>(<script language="JavaScript">print_time(new Date("2007/09/04 12:55 GMT"));</script><noscript>2007/09/04 12:55 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  2706をベースにしてます。



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59</pre></td><td class="code"><div class="highlight"><pre>import java.util.regex._
class ExtendedString(self:String) {
  def gsub(reg:Pattern, f:(Matcher)=&gt;String):String = {
    val result = new StringBuffer
    val m = reg.matcher(self)
    while(m.find) m.appendReplacement(result, f(m))
    m.appendTail(result)
    result.toString
  }
  def gsub(reg:String, f:(Matcher)=&gt;String):String = gsub(Pattern.compile(reg), f)
}
implicit def string2ext(self:String) = new ExtendedString(self);

object htmlEscape{
  lazy val tagRegex = Pattern.compile(
    &quot;&quot;&quot;(&lt;\s*/?\s*)([^&quot;&#39;&lt;\s&gt;]*\s*)([^&quot;&#39;&lt;&gt;]*(?:&quot;[^&quot;]*&quot;[^&quot;&#39;&lt;&gt;]*|&#39;[^&#39;]*&#39;[^&quot;&#39;&lt;&gt;]*)*)((?:&gt;|(?=&lt;)|$(?!\n)))&quot;&quot;&quot;
  )
  lazy val attrRegex = Pattern.compile(
    &quot;&quot;&quot;[\s&#39;&quot;](\w+)\s*=\s*([^\s&#39;&quot;&gt;]+|&#39;[^&#39;]+&#39;|\&quot;[^&quot;]+&quot;)&quot;&quot;&quot;
  , Pattern.DOTALL | Pattern.CASE_INSENSITIVE)

  lazy val tagAllowed  = Set(&quot;a&quot;, &quot;br&quot;, &quot;strong&quot;)
  lazy val attrAllowed = Map(&quot;a&quot; -&gt; Set(&quot;href&quot;, &quot;name&quot;))

  def replace(s:String, rs:Pair[String,String]*) = {
    rs.foldLeft(s){(r,v)=&gt; r.replace(v._1, v._2)}
  }
  def apply(html:String) = {
    val other = tagRegex.split(html)
    val sb    = new StringBuilder
    val m     = tagRegex.matcher(html)
    var i = -1;while({
      i=i+1;
      try{
        sb.append(replace(other(i), (&quot;&lt;&quot;,&quot;&amp;lt;&quot;), (&quot;&gt;&quot;,&quot;&amp;gt;&quot;), (&quot;\n&quot;,&quot;&lt;br/&gt;&quot;)));
      }catch{case _=&gt; ()};
      m.find}
    ) {
      val tag = replace(m.group(2).toLowerCase, (&quot;/&quot;,&quot;&quot;)).trim
      sb.append(
        (if(tagAllowed.contains(tag)){
          val attrs = m.group(3).gsub(attrRegex, (m2:Matcher) =&gt; {
            if(attrAllowed.getOrElse(tag, Set[String]()).contains(m2.group(1).toLowerCase)) {
              m2.group(0)
            }else {
              &quot;&quot;
            }
          })
          if(tag == &quot;br&quot;) List(&quot;&lt;br/&gt;&quot;)
          else List(m.group(1),m.group(2), attrs, m.group(4))
        }else {
          List(replace(m.group(1), (&quot;&lt;&quot;, &quot;&amp;lt;&quot;)), m.group(2), 
               replace(m.group(3), (&quot;&lt;&quot;, &quot;&amp;lt;&quot;), (&quot;&gt;&quot;, &quot;&amp;gt;&quot;)), m.group(4))
        }).mkString(&quot;&quot;)
      )
    }
    sb.toString
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2904/addtag/" class="addtag" id="addtag_2904">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2904/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2904/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2904"
  >-</span><span
  class="button yellow"
  id="rating_z_2904"
  >0</span><span 
  class="button green"
  id="rating_p_2904"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20081120020222/http://ja.doukaku.org/comment/2904/">
    1
    reply
  </a>

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2904/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2905">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2905/">#2905</a>(<script language="JavaScript">print_time(new Date("2007/09/04 13:12 GMT"));</script><noscript>2007/09/04 13:12 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>ああやってしまった・・・Markdownにしてるの忘れて行頭に#2706を書いてしまいました。修正お願いできますか？</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2905/addtag/" class="addtag" id="addtag_2905">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2905"
  >-</span><span
  class="button yellow"
  id="rating_z_2905"
  >0</span><span 
  class="button green"
  id="rating_p_2905"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120020222/http://ja.doukaku.org/comment/2904/"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120020222/http://ja.doukaku.org/comment/2905/root/"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081120020222/http://ja.doukaku.org/comment/2905/">
    1
    reply
  </a>

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2905/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2908">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/130/" target="_top">rucker</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2908/">#2908</a>(<script language="JavaScript">print_time(new Date("2007/09/04 18:06 GMT"));</script><noscript>2007/09/04 18:06 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/php/">
	  PHP
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>#2906を見て&lt;&gt;の対応が崩れている場合にうまく対応できていない事に気がつきました。
それから最後のタグより後ろの部分の改行を変換し忘れていたので合わせて修正しました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61</pre></td><td class="code"><div class="highlight"><pre><span class="cp">&lt;?php</span>
<span class="k">function</span> <span class="nf">escapetag</span><span class="p">(</span><span class="nv">$str</span><span class="p">)</span>
<span class="p">{</span>
	<span class="k">return</span> <span class="nf">str_replace</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;&lt;&#39;</span><span class="p">,</span><span class="s1">&#39;&gt;&#39;</span><span class="p">),</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;&amp;lt;&#39;</span><span class="p">,</span><span class="s1">&#39;&amp;gt;&#39;</span><span class="p">),</span><span class="nv">$str</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">function</span> <span class="nf">safehtml</span><span class="p">(</span><span class="nv">$str</span><span class="p">)</span>
<span class="p">{</span>
	<span class="nv">$safetag</span><span class="o">=</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">=&gt;</span><span class="k">array</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;href&#39;</span><span class="p">,</span><span class="s1">&#39;name&#39;</span><span class="p">)),</span><span class="s1">&#39;strong&#39;</span><span class="o">=&gt;</span><span class="k">array</span><span class="p">(</span><span class="m">1</span><span class="p">),</span><span class="s1">&#39;br&#39;</span><span class="o">=&gt;</span><span class="k">array</span><span class="p">(</span><span class="m">2</span><span class="p">));</span>
	<span class="nv">$r</span><span class="o">=</span><span class="k">array</span><span class="p">();</span>
	<span class="nv">$tags</span><span class="o">=</span><span class="k">array</span><span class="p">();</span>
	<span class="nv">$offs</span><span class="o">=</span><span class="m">0</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="nf">preg_match</span><span class="p">(</span><span class="s1">&#39;!&lt;(\s*(/|)\s*(([^&lt;&gt;\&#39;&quot;/]+|\&#39;[^\&#39;]*\&#39;|&quot;[^&quot;]*&quot;)*)(/|)\s*)&gt;!&#39;</span><span class="p">,</span><span class="nv">$str</span><span class="p">,</span><span class="nv">$m1</span><span class="p">,</span><span class="nx">PREG_OFFSET_CAPTURE</span><span class="p">,</span><span class="nv">$offs</span><span class="p">))</span>
	<span class="p">{</span>	<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="nf">nl2br</span><span class="p">(</span><span class="nx">escapetag</span><span class="p">(</span><span class="nf">substr</span><span class="p">(</span><span class="nv">$str</span><span class="p">,</span><span class="nv">$offs</span><span class="p">,</span><span class="nv">$m1</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">1</span><span class="p">]</span><span class="o">-</span><span class="nv">$offs</span><span class="p">)));</span>
		<span class="nv">$offs</span><span class="o">=</span><span class="nv">$m1</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">1</span><span class="p">]</span><span class="o">+</span><span class="nf">strlen</span><span class="p">(</span><span class="nv">$m1</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">0</span><span class="p">]);</span>
		<span class="nf">preg_match_all</span><span class="p">(</span><span class="s1">&#39;!([^\s\&#39;&quot;=]+)(\s*=\s*(&quot;[^&quot;]*&quot;|\&#39;[^\&#39;]*\&#39;|[^\s]+)|)!im&#39;</span><span class="p">,</span><span class="nv">$m1</span><span class="p">[</span><span class="m">3</span><span class="p">][</span><span class="m">0</span><span class="p">],</span><span class="nv">$m2</span><span class="p">,</span><span class="nx">PREG_SET_ORDER</span><span class="p">);</span>
		<span class="nv">$tag</span><span class="o">=</span><span class="nf">strtolower</span><span class="p">(</span><span class="nv">$m2</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">1</span><span class="p">]);</span>
		<span class="k">if</span><span class="p">(</span><span class="nf">isset</span><span class="p">(</span><span class="nv">$safetag</span><span class="p">[</span><span class="nv">$tag</span><span class="p">]))</span>
		<span class="p">{</span>	<span class="k">if</span><span class="p">(</span><span class="nv">$safetag</span><span class="p">[</span><span class="nv">$tag</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">&amp;</span><span class="m">1</span><span class="p">)</span>
			<span class="p">{</span>	<span class="k">if</span><span class="p">(</span><span class="nv">$m1</span><span class="p">[</span><span class="m">2</span><span class="p">][</span><span class="m">0</span><span class="p">])</span>
				<span class="p">{</span>	<span class="k">if</span><span class="p">(</span><span class="nf">array_search</span><span class="p">(</span><span class="nv">$tag</span><span class="p">,</span><span class="nv">$tags</span><span class="p">)</span><span class="o">===</span><span class="k">false</span><span class="p">)</span>
						<span class="k">continue</span><span class="p">;</span> <span class="c">// 開いてないタグは閉じない</span>
					<span class="k">while</span><span class="p">((</span><span class="nv">$t</span><span class="o">=</span><span class="nf">array_shift</span><span class="p">(</span><span class="nv">$tags</span><span class="p">)))</span> <span class="c">// 開いたのと逆順に閉じる</span>
					<span class="p">{</span>	<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="s2">&quot;&lt;/</span><span class="si">$t</span><span class="s2">&gt;&quot;</span><span class="p">;</span>
						<span class="k">if</span><span class="p">(</span><span class="nv">$t</span><span class="o">==</span><span class="nv">$tag</span><span class="p">)</span>
							<span class="k">break</span><span class="p">;</span>
					<span class="p">}</span>
					<span class="k">continue</span><span class="p">;</span>
				<span class="p">}</span>
				<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nv">$m1</span><span class="p">[</span><span class="m">5</span><span class="p">][</span><span class="m">0</span><span class="p">])</span>
					<span class="nf">array_unshift</span><span class="p">(</span><span class="nv">$tags</span><span class="p">,</span><span class="nv">$tag</span><span class="p">);</span>
			<span class="p">}</span>
			<span class="k">if</span><span class="p">(</span><span class="nv">$safetag</span><span class="p">[</span><span class="nv">$tag</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">&amp;</span><span class="m">2</span><span class="p">)</span>
			<span class="p">{</span>	<span class="nv">$m1</span><span class="p">[</span><span class="m">2</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span>
				<span class="nv">$m1</span><span class="p">[</span><span class="m">5</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;/&quot;</span><span class="p">;</span>
			<span class="p">}</span>
			<span class="nv">$t</span><span class="o">=</span><span class="k">array</span><span class="p">(</span><span class="nv">$tag</span><span class="p">);</span>
			<span class="k">if</span><span class="p">(</span><span class="nf">isset</span><span class="p">(</span><span class="nv">$safetag</span><span class="p">[</span><span class="nv">$tag</span><span class="p">][</span><span class="m">1</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nv">$m1</span><span class="p">[</span><span class="m">2</span><span class="p">][</span><span class="m">0</span><span class="p">])</span>
			<span class="p">{</span>	<span class="nf">array_shift</span><span class="p">(</span><span class="nv">$m2</span><span class="p">);</span>
				<span class="k">while</span><span class="p">(</span><span class="nv">$param</span><span class="o">=</span><span class="nf">array_shift</span><span class="p">(</span><span class="nv">$m2</span><span class="p">))</span>
				<span class="p">{</span>	<span class="k">if</span><span class="p">(</span><span class="nf">array_search</span><span class="p">(</span><span class="nf">strtolower</span><span class="p">(</span><span class="nv">$param</span><span class="p">[</span><span class="m">1</span><span class="p">]),</span><span class="nv">$safetag</span><span class="p">[</span><span class="nv">$tag</span><span class="p">][</span><span class="m">1</span><span class="p">])</span><span class="o">!==</span><span class="k">false</span><span class="p">)</span>
						<span class="nv">$t</span><span class="p">[]</span><span class="o">=</span><span class="nv">$param</span><span class="p">[</span><span class="m">0</span><span class="p">];</span>
				<span class="p">}</span>
			<span class="p">}</span>
			<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="s1">&#39;&lt;&#39;</span><span class="o">.</span><span class="nv">$m1</span><span class="p">[</span><span class="m">2</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">.</span><span class="nf">implode</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nv">$t</span><span class="p">)</span><span class="o">.</span><span class="nv">$m1</span><span class="p">[</span><span class="m">5</span><span class="p">][</span><span class="m">0</span><span class="p">]</span><span class="o">.</span><span class="s1">&#39;&gt;&#39;</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">else</span>
			<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="nx">escapetag</span><span class="p">(</span><span class="nv">$m1</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="m">0</span><span class="p">]);</span>
	<span class="p">}</span>
	<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="nf">nl2br</span><span class="p">(</span><span class="nx">escapetag</span><span class="p">(</span><span class="nf">substr</span><span class="p">(</span><span class="nv">$str</span><span class="p">,</span><span class="nv">$offs</span><span class="p">)));</span>
	<span class="k">while</span><span class="p">((</span><span class="nv">$tag</span><span class="o">=</span><span class="nf">array_shift</span><span class="p">(</span><span class="nv">$tags</span><span class="p">)))</span> <span class="c">// 閉じわすれタグを閉じる</span>
		<span class="nv">$r</span><span class="p">[]</span><span class="o">=</span><span class="s2">&quot;&lt;/</span><span class="si">$tag</span><span class="s2">&gt;&quot;</span><span class="p">;</span>
	<span class="k">return</span> <span class="nf">implode</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nv">$r</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">echo</span> <span class="nx">safehtml</span><span class="p">(</span><span class="s">&lt;&lt;&lt;EOT</span>
<span class="s">&lt;a href=&#39;www.google.com&#39;</span>
<span class="s">target=_blank&gt;link&lt;/a&gt;&gt; &lt;blink dummy=&#39;&lt;&#39;&gt;and&lt;/blink&gt;&lt;&lt;br&gt; &lt;strong onClick=&#39;alert(&quot;NG&quot;)&#39;&gt;cli</span>
<span class="s">ck&lt;br/&gt;me!&lt;/strong&gt; &lt;z foo=&#39;&lt;script&gt;alert(&quot;Boo&quot;)&lt;/script&gt;&#39;&gt;&lt;</span>
<span class="s">EOT</span>
<span class="p">);</span>
<span class="cp">?&gt;</span><span class="x"></span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2908/addtag/" class="addtag" id="addtag_2908">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/php/">
		PHP
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2908/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2908/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2908"
  >-</span><span
  class="button yellow"
  id="rating_z_2908"
  >0</span><span 
  class="button green"
  id="rating_p_2908"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120020222/http://ja.doukaku.org/comment/2893/"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120020222/http://ja.doukaku.org/comment/2908/root/"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2908/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2910">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/1/" target="_top">にしお</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2910/">#2910</a>(<script language="JavaScript">print_time(new Date("2007/09/05 02:15 GMT"));</script><noscript>2007/09/05 02:15 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>修正しました。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2910/addtag/" class="addtag" id="addtag_2910">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2910"
  >-</span><span
  class="button yellow"
  id="rating_z_2910"
  >0</span><span 
  class="button green"
  id="rating_p_2910"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120020222/http://ja.doukaku.org/comment/2905/"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120020222/http://ja.doukaku.org/comment/2910/root/"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20081120020222/http://ja.doukaku.org/comment/2910/">
    1
    reply
  </a>

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2910/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2912">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/82/" target="_top">yuin</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2912/">#2912</a>(<script language="JavaScript">print_time(new Date("2007/09/05 07:12 GMT"));</script><noscript>2007/09/05 07:12 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
<p>ありがとうございました。
</p>
<p>以後気をつけます。
</p>



	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2912/addtag/" class="addtag" id="addtag_2912">Tags</a>:
	
	No tags
	&nbsp;

	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2912"
  >-</span><span
  class="button yellow"
  id="rating_z_2912"
  >0</span><span 
  class="button green"
  id="rating_p_2912"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20081120020222/http://ja.doukaku.org/comment/2910/"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20081120020222/http://ja.doukaku.org/comment/2912/root/"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2912/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2915">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2915/">#2915</a>(<script language="JavaScript">print_time(new Date("2007/09/05 10:08 GMT"));</script><noscript>2007/09/05 10:08 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  Squeak&nbsp;Smalltalk&nbsp;で。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41</pre></td><td class="code"><div class="highlight"><pre>| string accepts in out upToAnyOf letters separators replaceCRs |
string := &#39;&lt;a title=&quot;(&gt;_&lt;;)&quot; href=&#39;&#39;www.google.com&#39;&#39; 
name=&#39;&#39;hoge&#39;&#39; target=_blank&gt;link&lt;/a&gt; &lt;blink&gt;a
nd&lt;/blink&gt; &lt;strong onClick=&#39;&#39;alert(&quot;NG&quot;)&#39;&#39;&gt;click&lt;br&gt;me!&lt;/strong&gt;&#39;.

accepts := {#a-&gt;#(name href). #strong-&gt;#(). #br-&gt;#()} as: Dictionary.
string := string copyReplaceAll: &#39;&lt;br&gt;&#39; with: &#39;&lt;br/&gt;&#39;.
in := string readStream.
out := String new writeStream.
upToAnyOf := [:arr | String streamContents: [:ss |
    arr := arr copyWith: nil.
    [arr includes: in peek] whileFalse: [ss nextPut: in next]]].
letters := Character alphabet asArray, Character alphabet asUppercase.
separators := Character separators, #($/ $&gt;).
replaceCRs := [:str | str copyReplaceAll: String cr with: &#39;&lt;br/&gt;&#39;].

[out nextPutAll: (replaceCRs value: (in upTo: $&lt;) escapeEntities). in atEnd] whileFalse: [
    | tag lt isClose isAccepted blank rest |
    (isClose := in peek == $/) ifTrue: [in next].
    tag := upToAnyOf value: separators.
    lt := &#39;&lt;&#39;, (isClose ifTrue: [&#39;/&#39;] ifFalse: [&#39;&#39;]).
    (isAccepted := accepts keys includes: tag asLowercase) ifFalse: [lt := lt escapeEntities].
    out nextPutAll: lt, tag.
    [blank := upToAnyOf value: letters, &#39;&gt;&#39;. {nil. $&gt;} includes: in peek] whileFalse: [
        | attr equal value quote |
        attr := upToAnyOf value: #($= $&gt;).
        equal := in peek == $= ifTrue: [in next asString] ifFalse: [&#39;&#39;].
        value := (#($&#39; $&quot;) includes: (quote := in peek))
            ifTrue: [quote asString, (in next; upTo: quote), quote asString]
            ifFalse: [upToAnyOf value: #($  $&gt;)].
        out nextPutAll: (isAccepted
            ifFalse: [blank, attr, equal, value escapeEntities]
            ifTrue: [((accepts at: tag) includes: attr)
                ifTrue: [blank, attr, equal, value] ifFalse: [&#39;&#39;]])].
    rest := blank, (in peek == $&gt; ifTrue: [in next asString] ifFalse: [&#39;&#39;]).
    out nextPutAll: (isAccepted ifTrue: [rest] ifFalse: [rest escapeEntities])].
World findATranscript: nil.
Transcript cr; show: out contents

&quot;=&gt; &lt;a href=&#39;www.google.com&#39; 
name=&#39;hoge&#39;&gt;link&lt;/a&gt; &amp;lt;blink&amp;gt;a&lt;br/&gt;nd&amp;lt;/blink&amp;gt; &lt;strong&gt;click&lt;br/&gt;me!&lt;/strong&gt; &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2915/addtag/" class="addtag" id="addtag_2915">Tags</a>:
	
    
    <a href="/web/20081120020222/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2915/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2915/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2915"
  >-</span><span
  class="button yellow"
  id="rating_z_2915"
  >0</span><span 
  class="button green"
  id="rating_p_2915"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2915/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2916">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/405/" target="_top">mc</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2916/">#2916</a>(<script language="JavaScript">print_time(new Date("2007/09/05 10:27 GMT"));</script><noscript>2007/09/05 10:27 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>今回の改行の処理の対応と、
前回のものが、属性のなかのタグの途中で改行が入った
"&lt;foo clear='&lt;scr
   ipt&gt;foo&gt;'&gt;foo&lt;/foo&gt;"
のようなものを上手く処理できていないことに気付いたので直し…
…たつもりですが、私には問題が難し過ぎたようで、
何が何だが分からないものになり果てました…。

タグのエスケープ処理のため2種の文字を予約で消費してしまいます。
下記では、ここへの投稿のために"【"と"】"を使いました。

また、前回はライブラリが見付けられずAllegroのparse-htmlを
使用して作成しましたが、Clikiにポータブル版のpxmlutilsが
ありました。
http://www.cliki.net/pxmlutils
今回はそれを導入してsbclで動作確認しています。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111</pre></td><td class="code"><div class="highlight"><pre>(use-package :net.html.parser)
(use-package :cl-ppcre)
(use-package :url-rewrite)

(defun html-filter-2 (str)
  (regex-replace-all-lis 
   &#39;((&quot;】&quot; . &quot;&amp;gt;&quot;) (&quot;【&quot; . &quot;&amp;lt;&quot;) (&quot;\\n&quot; . &quot;&lt;br /&gt;&quot;))
   (html-filter-1 
    (prop-filter-2 (pickup-tag (&lt;&gt;-to-escape (prop-filter-1 str)))))))

(defun regex-replace-all-lis (repl-alist str 
			      &amp;optional &amp;key case-insensitive-mode)
  (reduce
   (lambda (res item)
     (let ((scan (create-scanner 
		  (car item)
		  :case-insensitive-mode case-insensitive-mode)))
       (regex-replace-all scan res (cdr item))))
   repl-alist :initial-value str))

(defun &lt;&gt;-to-escape (str)
  (regex-replace-all-lis &#39;((&quot;&gt;&quot; . &quot;】&quot;)(&quot;&lt;&quot; . &quot;【&quot;)) str))

(defun &lt;&gt;-to-ltgt (str)
  (regex-replace-all-lis &#39;((&quot;&gt;&quot; . &quot;&amp;gt;&quot;)(&quot;&lt;&quot; . &quot;&amp;lt;&quot;)) str))

(defun pickup-tag (str)
  (regex-replace-all-lis 
   &#39;((&quot;【(a\\s*[^\\s】]*)】&quot; .  &quot;&lt;\\1&gt;&quot;)
     (&quot;【(/a\\s*)】&quot; .  &quot;&lt;/a&gt;&quot;)
     (&quot;【(strong\\s*[^\\s】]*)】&quot; .  &quot;&lt;\\1&gt;&quot;)
     (&quot;【(/strong\\s*)】&quot; .  &quot;&lt;/strong&gt;&quot;)
     (&quot;【(br\\s*[^\\s】]*)】&quot; .  &quot;&lt;br /&gt;&quot;))
   str))

(defun prop-filter-1 (str)
  (prop-filter-* str &quot;(&#39;[^&#39;]*&#39;)&quot; #&#39;url-encode))

(defun prop-filter-2 (str)
  (prop-filter-* str &quot;(【[^】]*】)&quot; #&#39;&lt;&gt;-to-ltgt))

(defun prop-filter-* (str scan-pat repl-func)
  (let ((scan (create-scanner scan-pat :case-insensitive-mode t)))
    (regex-replace-all scan str 
		       (lambda (match &amp;rest rest)
			 (declare (ignore rest))
			 (if (scan &quot;[&lt;&gt;]&quot; match)
			     (funcall repl-func match)
			     match))
		       :simple-calls t)))

(defun html-filter-1 (string)
  (let ((form (sanitize-html (parse-html string))))
    (apply #&#39;concatenate &#39;string (build-html form))))

(defun sanitize-html (form)
  (mapcar 
   (lambda (item)
     (if (atom item)
	 item
	 (let ((keys `(,(car item) ,(and (consp (car item)) (caar item)))))
	   (cond ((member :a keys) 
		  `(,(car item) ,@(sanitize-html (cdr item))))
		 ((member :strong keys)
		  `(:strong ,@(sanitize-html (cdr item))))
		 ((member :br keys) :br)
		 (&#39;T &quot;&quot;)))))
   form))

(defun build-html (form)
  (if (atom form) 
      form
      (cond ((and (atom (car form)) (eq :br (car form)))
	     `(,(br) ,@(build-html (cdr form))))
	    ((consp (car form))
	     `(,(let* ((top (car form))
		       (keys `(,(car top) ,(and (consp (car top)) (caar top)))))
		      (cond ((member :a keys) (build-a top))
			    ((member :strong keys) (build-strong top))
			    (&#39;T top)))
		,@(build-html (cdr form))))
	    (&#39;T `(,(build-html (car form))
		   ,@(build-html (cdr form)))))))

(defun br () &quot;&lt;br /&gt;&quot;)

(defun build-strong (form)
  (format nil &quot;&lt;strong&gt;~{~A~}&lt;/strong&gt;&quot; (build-html (cdr form))))

(defun build-a (form)
  (let ((tag (car form))
	(body (build-html (cdr form))))
    (if (and (consp (car form)) 
	     (member (second tag) &#39;(:href :name)))
	(format nil &quot;&lt;a ~(~A~)=&#39;~A&#39;&gt;~{~A~}&lt;/a&gt;&quot; 
		(second tag) 
		(put-dotslash (third tag)) body)
	(format nil &quot;&lt;a&gt;~{~A~}&lt;/a&gt;&quot; (build-html (cdr form))))))

(defun put-dotslash (str)
  (let ((s (create-scanner &quot;^([Hh][Tt][Tt][Pp][Ss]*://|^/|\./)&quot;)))
    (if (scan s str)
	str
	(concatenate &#39;string &quot;./&quot; str))))

(defun prop-maker (lst)
  (do ((l lst (cddr l))
       result)
      ((endp l) (nreverse result))
  (push (format nil &quot;~A=\&quot;~A\&quot;&quot; 
		(car l) (&lt;&gt;-to-ltgt (cadr l))) result)))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2916/addtag/" class="addtag" id="addtag_2916">Tags</a>:
	
	No tags
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2916/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2916/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2916"
  >-</span><span
  class="button yellow"
  id="rating_z_2916"
  >0</span><span 
  class="button green"
  id="rating_p_2916"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2916/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2917">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2917/">#2917</a>(<script language="JavaScript">print_time(new Date("2007/09/05 13:25 GMT"));</script><noscript>2007/09/05 13:25 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>#2911 を改変。変換と出力を分離しました。
74 行目までは同じなのでそれ以降だけ。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62</pre></td><td class="code"><div class="highlight"><pre><span class="kr">let</span> <span class="n">filter_attributes</span> <span class="n">tagname</span> <span class="n">attrlist</span> <span class="k">=</span>
  <span class="n">List</span><span class="k">.</span><span class="n">filter</span>
    <span class="k">(</span><span class="kr">fun</span> <span class="k">(</span><span class="n">attrname</span><span class="k">,</span> <span class="k">_)</span> <span class="k">-&gt;</span> <span class="n">is_allowed_attribute</span> <span class="n">tagname</span> <span class="n">attrname</span><span class="k">)</span>
    <span class="n">attrlist</span>

<span class="kr">let</span> <span class="n">filter_input</span> <span class="n">src</span> <span class="k">=</span> <span class="kr">function</span>
  <span class="k">|</span> <span class="n">String</span> <span class="k">_</span> <span class="kr">as</span> <span class="n">x</span> <span class="k">-&gt;</span> <span class="n">x</span>
  <span class="k">|</span> <span class="n">SingleTag</span> <span class="k">(</span><span class="n">tagname</span><span class="k">,</span> <span class="n">attrs</span><span class="k">,</span> <span class="n">p</span><span class="k">,</span> <span class="n">q</span><span class="k">)</span> <span class="k">-&gt;</span>
      <span class="kr">if</span> <span class="n">is_allowed_tag</span> <span class="n">tagname</span> <span class="kr">then</span>
        <span class="n">SingleTag</span><span class="k">(</span><span class="n">tagname</span><span class="k">,</span> <span class="n">filter_attributes</span> <span class="n">tagname</span> <span class="n">attrs</span><span class="k">,</span> <span class="n">p</span><span class="k">,</span> <span class="n">q</span><span class="k">)</span>
      <span class="kr">else</span>
        <span class="n">String</span> <span class="k">(</span><span class="n">String</span><span class="k">.</span><span class="n">sub</span> <span class="n">src</span> <span class="n">p</span> <span class="k">(</span><span class="n">q</span><span class="k">-</span><span class="n">p</span><span class="k">))</span>
  <span class="k">|</span> <span class="n">OpenTag</span> <span class="k">(</span><span class="n">tagname</span><span class="k">,</span> <span class="n">attrs</span><span class="k">,</span> <span class="n">p</span><span class="k">,</span> <span class="n">q</span><span class="k">)</span> <span class="k">-&gt;</span>
      <span class="kr">if</span> <span class="n">tagname</span> <span class="k">===</span> <span class="s2">&quot;br&quot;</span> <span class="kr">then</span>
        <span class="n">SingleTag</span><span class="k">(</span><span class="n">tagname</span><span class="k">,</span> <span class="k">[],</span> <span class="n">p</span><span class="k">,</span> <span class="n">q</span><span class="k">)</span>
      <span class="kr">else</span> <span class="kr">if</span> <span class="n">is_allowed_tag</span> <span class="n">tagname</span> <span class="kr">then</span>
        <span class="n">OpenTag</span><span class="k">(</span><span class="n">tagname</span><span class="k">,</span> <span class="n">filter_attributes</span> <span class="n">tagname</span> <span class="n">attrs</span><span class="k">,</span> <span class="n">p</span><span class="k">,</span> <span class="n">q</span><span class="k">)</span>
      <span class="kr">else</span>
        <span class="n">String</span> <span class="k">(</span><span class="n">String</span><span class="k">.</span><span class="n">sub</span> <span class="n">src</span> <span class="n">p</span> <span class="k">(</span><span class="n">q</span><span class="k">-</span><span class="n">p</span><span class="k">))</span>
  <span class="k">|</span> <span class="n">CloseTag</span> <span class="k">(</span><span class="n">tagname</span><span class="k">,</span> <span class="n">p</span><span class="k">,</span> <span class="n">q</span><span class="k">)</span> <span class="kr">as</span> <span class="n">x</span> <span class="k">-&gt;</span>
      <span class="kr">if</span> <span class="n">is_allowed_tag</span> <span class="n">tagname</span> <span class="kr">then</span> <span class="n">x</span> <span class="kr">else</span>
        <span class="n">String</span> <span class="k">(</span><span class="n">String</span><span class="k">.</span><span class="n">sub</span> <span class="n">src</span> <span class="n">p</span> <span class="k">(</span><span class="n">q</span><span class="k">-</span><span class="n">p</span><span class="k">))</span>
  <span class="k">|</span> <span class="n">Eof</span> <span class="k">-&gt;</span> <span class="n">Eof</span>

<span class="kr">let</span> <span class="n">sanitizing_output</span> <span class="n">buf</span> <span class="n">string</span> <span class="n">p</span> <span class="n">q</span> <span class="k">=</span>
  <span class="kr">for</span> <span class="n">x</span> <span class="k">=</span> <span class="n">p</span> <span class="kr">to</span> <span class="n">q</span><span class="k">-</span><span class="mi">1</span> <span class="kr">do</span>
    <span class="kr">match</span> <span class="n">string</span><span class="k">.[</span><span class="n">x</span><span class="k">]</span> <span class="kr">with</span>
      <span class="k">|</span> <span class="sc">&#39;&lt;&#39;</span> <span class="k">-&gt;</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">add_string</span> <span class="n">buf</span> <span class="s2">&quot;&amp;lt;&quot;</span>
      <span class="k">|</span> <span class="sc">&#39;&gt;&#39;</span> <span class="k">-&gt;</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">add_string</span> <span class="n">buf</span> <span class="s2">&quot;&amp;gt;&quot;</span>
      <span class="k">|</span> <span class="sc">&#39;&amp;&#39;</span> <span class="k">-&gt;</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">add_string</span> <span class="n">buf</span> <span class="s2">&quot;&amp;amp;&quot;</span>
      <span class="k">|</span> <span class="sc">&#39;\n&#39;</span> <span class="k">-&gt;</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">add_string</span> <span class="n">buf</span> <span class="s2">&quot;&lt;br/&gt;&quot;</span>
      <span class="k">|</span> <span class="n">c</span> <span class="k">-&gt;</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">add_char</span> <span class="n">buf</span> <span class="n">c</span>
  <span class="kr">done</span>

<span class="kr">let</span> <span class="n">output_attribute</span> <span class="n">buf</span> <span class="k">(</span><span class="n">attrname</span><span class="k">,</span> <span class="n">value</span><span class="k">)</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">quote</span> <span class="k">=</span> <span class="kr">if</span> <span class="n">String</span><span class="k">.</span><span class="n">contains</span> <span class="n">value</span> <span class="sc">&#39;&quot;&#39;</span> <span class="kr">then</span> <span class="sc">&#39;\&#39;&#39;</span> <span class="kr">else</span> <span class="sc">&#39;&quot;&#39;</span> <span class="kr">in</span>
    <span class="n">Printf</span><span class="k">.</span><span class="n">bprintf</span> <span class="n">buf</span> <span class="s2">&quot; %s=%c%s%c&quot;</span> <span class="n">attrname</span> <span class="n">quote</span> <span class="n">value</span> <span class="n">quote</span>

<span class="kr">let</span> <span class="n">output_tag</span> <span class="n">buf</span> <span class="n">name</span> <span class="n">attrs</span> <span class="n">is_single</span> <span class="k">=</span>
  <span class="n">Printf</span><span class="k">.</span><span class="n">bprintf</span> <span class="n">buf</span> <span class="s2">&quot;&lt;%s&quot;</span> <span class="n">name</span><span class="k">;</span>
  <span class="n">List</span><span class="k">.</span><span class="n">iter</span> <span class="k">(</span><span class="n">output_attribute</span> <span class="n">buf</span><span class="k">)</span> <span class="n">attrs</span><span class="k">;</span>
  <span class="kr">if</span> <span class="n">is_single</span> <span class="kr">then</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">add_char</span> <span class="n">buf</span> <span class="sc">&#39;/&#39;</span><span class="k">;</span>
  <span class="n">Buffer</span><span class="k">.</span><span class="n">add_char</span> <span class="n">buf</span> <span class="sc">&#39;&gt;&#39;</span>

<span class="kr">let</span> <span class="n">output_text_fragment</span> <span class="n">buf</span> <span class="k">=</span> <span class="kr">function</span>
  <span class="k">|</span> <span class="n">String</span> <span class="n">s</span> <span class="k">-&gt;</span>
      <span class="n">sanitizing_output</span> <span class="n">buf</span> <span class="n">s</span> <span class="mi">0</span> <span class="k">(</span><span class="n">String</span><span class="k">.</span><span class="n">length</span> <span class="n">s</span><span class="k">)</span>
  <span class="k">|</span> <span class="n">SingleTag</span> <span class="k">(</span><span class="n">s</span><span class="k">,</span> <span class="n">attrs</span><span class="k">,</span> <span class="k">_,</span> <span class="k">_)</span> <span class="k">-&gt;</span>
      <span class="n">output_tag</span> <span class="n">buf</span> <span class="n">s</span> <span class="n">attrs</span> <span class="kr">true</span>
  <span class="k">|</span> <span class="n">OpenTag</span> <span class="k">(</span><span class="n">s</span><span class="k">,</span> <span class="n">attrs</span><span class="k">,</span> <span class="k">_,</span> <span class="k">_)</span> <span class="k">-&gt;</span>
      <span class="n">output_tag</span> <span class="n">buf</span> <span class="n">s</span> <span class="n">attrs</span> <span class="kr">false</span>
  <span class="k">|</span> <span class="n">CloseTag</span> <span class="k">(</span><span class="n">s</span><span class="k">,</span> <span class="k">_,</span> <span class="k">_)</span> <span class="k">-&gt;</span>
      <span class="n">Printf</span><span class="k">.</span><span class="n">bprintf</span> <span class="n">buf</span> <span class="s2">&quot;&lt;/%s&gt;&quot;</span> <span class="n">s</span>
  <span class="k">|</span> <span class="n">Eof</span> <span class="k">-&gt;</span> <span class="k">()</span>

<span class="kr">let</span> <span class="n">filter_text</span> <span class="n">text</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">list</span> <span class="k">=</span> <span class="n">parse_input</span> <span class="n">text</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">flist</span> <span class="k">=</span> <span class="n">List</span><span class="k">.</span><span class="n">map</span> <span class="k">(</span><span class="n">filter_input</span> <span class="n">text</span><span class="k">)</span> <span class="n">list</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">buf</span> <span class="k">=</span> <span class="n">Buffer</span><span class="k">.</span><span class="n">create</span> <span class="k">(</span><span class="n">String</span><span class="k">.</span><span class="n">length</span> <span class="n">text</span><span class="k">)</span> <span class="kr">in</span>
    <span class="n">List</span><span class="k">.</span><span class="n">iter</span> <span class="k">(</span><span class="n">output_text_fragment</span> <span class="n">buf</span><span class="k">)</span> <span class="n">flist</span><span class="k">;</span>
    <span class="n">Buffer</span><span class="k">.</span><span class="n">contents</span> <span class="n">buf</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2917/addtag/" class="addtag" id="addtag_2917">Tags</a>:
	
    
    <a href="/web/20081120020222/http://ja.doukaku.org/tag/ocamllex/">ocamllex</a>
    
	&nbsp;

	
      [<a href="/web/20081120020222/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2917/download/">
		download code
      </a>]
	  [<a href="/web/20081120020222/http://ja.doukaku.org/comment/2917/download_html/">
		get code as html
      </a>]<p>
	

  
  <span class="rating">
  Rating<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_2917"
  >-</span><span
  class="button yellow"
  id="rating_z_2917"
  >0</span><span 
  class="button green"
  id="rating_p_2917"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20081120020222/http://ja.doukaku.org/57/reply_to/2917/">
  reply
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment2918">
  <p class="banner"><a href="/web/20081120020222/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20081120020222/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20081120020222im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20081120020222/http://ja.doukaku.org/comment/2918/">#2918</a>(<script language="JavaScript">print_time(new Date("2007/09/05 13:54 GMT"));</script><noscript>2007/09/05 13:54 GMT</noscript>)
	
	
	
	[<a href="/web/20081120020222/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">Rating<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>#2906を元に改造しました。
&lt;/br&gt;は取り除くように変更しています（&lt;br&gt;&lt;/br&gt;の変換結果が不正になるのを防ぐため）。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.util.regex.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="n">Pattern</span> <span class="n">TAG_FILTER</span> <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span>
        <span class="o">(</span><span class="s">&quot;&lt;(¥¥w+)((¥¥s+¥¥w+(¥¥s*=¥¥s*(¥&quot;</span><span class="o">[^</span><span class="err">¥</span><span class="s">&quot;]*¥&quot;</span><span class="o">|</span><span class="err">&#39;</span><span class="o">[^</span><span class="err">&#39;</span><span class="o">]*</span><span class="err">&#39;</span><span class="o">|[</span><span class="err">¥¥</span><span class="n">w</span><span class="o">-:]*))?)*)</span><span class="err">¥¥</span><span class="n">s</span><span class="o">*/?</span><span class="err">¥¥</span><span class="n">s</span><span class="o">*&gt;</span><span class="s">&quot;);</span>
<span class="s">    private static final Pattern END_TAG_FILTER = Pattern.compile</span>
<span class="s">        (&quot;</span><span class="o">(?</span><span class="n">i</span><span class="o">)&lt;/(</span><span class="n">A</span><span class="o">|</span><span class="n">STRONG</span><span class="o">)</span><span class="err">¥¥</span><span class="n">s</span><span class="o">*&gt;</span><span class="s">&quot;);</span>
<span class="s">    private static final Pattern ATTR_FILTER = Pattern.compile</span>
<span class="s">        (&quot;</span><span class="o">(</span><span class="err">¥¥</span><span class="n">w</span><span class="o">+)</span><span class="err">¥¥</span><span class="n">s</span><span class="o">*=</span><span class="err">¥¥</span><span class="n">s</span><span class="o">*(</span><span class="err">¥</span><span class="s">&quot;[^¥&quot;</span><span class="o">]*</span><span class="err">¥</span><span class="s">&quot;|&#39;[^&#39;]*&#39;|[¥¥w-:]*)&quot;</span><span class="o">);</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">String</span> <span class="n">sanitizing</span><span class="o">(</span><span class="n">String</span> <span class="n">fragment</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">fragment</span> <span class="o">=</span> <span class="n">fragment</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;[¥¥p{Cntrl}&amp;&amp;[^¥¥s]]&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
        <span class="n">Matcher</span> <span class="n">m</span> <span class="o">=</span> <span class="n">TAG_FILTER</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">fragment</span><span class="o">);</span>
        <span class="n">StringBuffer</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">find</span><span class="o">())</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="s">&quot;A&quot;</span><span class="o">.</span><span class="na">equalsIgnoreCase</span><span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">1</span><span class="o">)))</span> <span class="o">{</span>
                <span class="n">String</span> <span class="n">href</span> <span class="o">=</span> <span class="kc">null</span><span class="o">,</span> <span class="n">name</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
                <span class="n">Matcher</span> <span class="n">m2</span> <span class="o">=</span> <span class="n">ATTR_FILTER</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">2</span><span class="o">));</span>
                <span class="k">while</span> <span class="o">(</span><span class="n">m2</span><span class="o">.</span><span class="na">find</span><span class="o">())</span> <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="s">&quot;href&quot;</span><span class="o">.</span><span class="na">equalsIgnoreCase</span><span class="o">(</span><span class="n">m2</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">1</span><span class="o">)))</span> <span class="o">{</span>
                        <span class="n">href</span> <span class="o">=</span> <span class="n">m2</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">.</span><span class="na">equalsIgnoreCase</span><span class="o">(</span><span class="n">m2</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">1</span><span class="o">)))</span> <span class="o">{</span>
                        <span class="n">name</span> <span class="o">=</span> <span class="n">m2</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}</span>
                <span class="n">String</span> <span class="n">tag</span> <span class="o">=</span> <span class="s">&quot;¥001&quot;</span><span class="o">+</span><span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="o">((</span><span class="n">href</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)?</span><span class="s">&quot; href=&quot;</span><span class="o">+</span><span class="n">href</span>
                    <span class="o">:</span> <span class="s">&quot;&quot;</span><span class="o">)</span> <span class="o">+</span> <span class="o">((</span><span class="n">name</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)?</span> <span class="s">&quot; name=&quot;</span><span class="o">+</span><span class="n">name</span> <span class="o">:</span> <span class="s">&quot;&quot;</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;¥002&quot;</span><span class="o">;</span>
                <span class="n">m</span><span class="o">.</span><span class="na">appendReplacement</span><span class="o">(</span><span class="n">sb</span><span class="o">,</span> <span class="n">m</span><span class="o">.</span><span class="na">quoteReplacement</span><span class="o">(</span><span class="n">tag</span><span class="o">));</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="s">&quot;BR&quot;</span><span class="o">.</span><span class="na">equalsIgnoreCase</span><span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">1</span><span class="o">)))</span> <span class="o">{</span>
                <span class="n">m</span><span class="o">.</span><span class="na">appendReplacement</span><span class="o">(</span><span class="n">sb</span><span class="o">,</span> <span class="s">&quot;¥001&quot;</span> <span class="o">+</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;/¥002&quot;</span><span class="o">);</span> 
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="s">&quot;STRONG&quot;</span><span class="o">.</span><span class="na">equalsIgnoreCase</span><span class="o">




<!--
     FILE ARCHIVED ON 2:02:22 Nov 20, 2008 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 13:43:22 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
