
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
IPv6アドレスの短縮
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20090612205550cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20090612205550cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20090612205550cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20090612205550/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20090612205550/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20090612205550js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20090612205550js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20090612205550js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20090612205550js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app0.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/226\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "12";
var displayMonth = "Jun";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/226/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090612205550" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20090118050703/http://ja.doukaku.org/226/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="18 Jan 2009"><strong>JAN</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 20:55:50 Jun 12, 2009">JUN</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jul
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20090118050703/http://ja.doukaku.org/226/flatten/" title="5:07:03 Jan 18, 2009" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 20:55:50 Jun 12, 2009">12</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2008
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 20:55:50 Jun 12, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20090612205550*/http://ja.doukaku.org/226/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">18 Jan 09 - 12 Jun 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:5:100001000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20090612205550/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20090612205550/http://ja.doukaku.org/226/">IPv6アドレスの短縮</a>
</h2>

    





<div class="comment" id="comment8308">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8308/">#8308</a>(<script language="JavaScript">print_time(new Date("2009/01/09 11:47 GMT"));</script><noscript>2009/01/09 11:47 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #bfffbf;">4/4=1.00</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  いろんなところでIPv6の実用化やそれに向けた実験が進められており、今後IPv6のアドレスを見かけることも多くなりそうなので少し触れてみよう、というお題です。<br/><br/>IPv6アドレスは16進表記した2バイトを、コロンで8つつなげて表記します。<br/>例）1230:5670:0000:0000:0123:0000:0000:00ab&nbsp;<br/><br/>各部分の頭の0は省略できます。上の例はこうなります。<br/>例）1230:5670:0:0:123:0:0:ab&nbsp;<br/><br/>また、0&nbsp;が複数続くところは&nbsp;「::」に置き換えることができます。（ただしアドレス内で1箇所のみ）<br/>例）1230:5670::123:0:0:ab&nbsp;<br/><br/>この短縮を行う関数を作ってください。<br/>余力のある方は逆変換（伸長）も考えてみてください。<br/>この程度ならライブラリに備わってるかも？？
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090612205550/http://ja.wikipedia.org/wiki/IPv6#IPv6_.E3.81.AE.E3.82.A2.E3.83.89.E3.83.AC.E3.82.B9.E8.A1.A8.E8.A8.98">Wikipedia：IPv6</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre>&gt; ipv6_compress( &#39;1230:5670:0000:0000:0123:0000:0000:00ab&#39; )
1230:5670::123:0:0:ab

&gt; ipv6_compress( &#39;0000:0000:0000:0000:0000:0000:0000:0001&#39; )
::1
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8308/addtag/" class="addtag" id="addtag_8308">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8308/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8308/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #bfffbf;"
  >4/4=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8308"
  >-</span><span
  class="button yellow"
  id="rating_z_8308"
  >0</span><span 
  class="button green"
  id="rating_p_8308"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8308/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20090612205550/http://ja.doukaku.org/226/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - フラット表示</h2>
<a href="/web/20090612205550/http://ja.doukaku.org/226/nested/">ネスト表示</a>
<a href="/web/20090612205550/http://ja.doukaku.org/226/">非表示</a> 


  
  <br/>

  
  




<div class="comment" id="comment8335">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/437/" target="_top">mamamoto</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8335/">#8335</a>(<script language="JavaScript">print_time(new Date("2009/01/16 01:57 GMT"));</script><noscript>2009/01/16 01:57 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffefef;">-1/1=-1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>最後が:0の繰り返しの場合どうすればいいんだろう。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">ipv6_compress</span><span class="p">(</span><span class="n">ip</span><span class="p">)</span>
  <span class="n">ip</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/:/</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="mi">16</span><span class="p">)}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="sr">/(:0)+:/</span><span class="p">,</span> <span class="s2">&quot;::&quot;</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8335/addtag/" class="addtag" id="addtag_8335">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8335/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8335/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffefef;"
  >-1/1=-1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8335"
  >-</span><span
  class="button yellow"
  id="rating_z_8335"
  >0</span><span 
  class="button green"
  id="rating_p_8335"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090612205550/http://ja.doukaku.org/comment/8335/">
    1
    reply
  </a>

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8335/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8336">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/437/" target="_top">mamamoto</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8336/">#8336</a>(<script language="JavaScript">print_time(new Date("2009/01/16 02:02 GMT"));</script><noscript>2009/01/16 02:02 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>ごめんなさい下のほうの::1ってやつ見逃してました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">ipv6_compress</span><span class="p">(</span><span class="n">ip</span><span class="p">)</span>
  <span class="n">ip</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/:/</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="mi">16</span><span class="p">)}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="sr">/0?(:0)+:/</span><span class="p">,</span> <span class="s2">&quot;::&quot;</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8336/addtag/" class="addtag" id="addtag_8336">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8336/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8336/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8336"
  >-</span><span
  class="button yellow"
  id="rating_z_8336"
  >0</span><span 
  class="button green"
  id="rating_p_8336"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8335/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8336/root/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8336/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8337">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8337/">#8337</a>(<script language="JavaScript">print_time(new Date("2009/01/16 08:43 GMT"));</script><noscript>2009/01/16 08:43 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>CPANモジュールで</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090612205550/http://search.cpan.org/~miker/NetAddr-IP-4.022/IP.pm">NetAddr::IP</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>

<span class="k">use</span> <span class="nn">NetAddr::</span><span class="n">IP</span><span class="p">;</span>

<span class="k">sub </span><span class="nf">ipv6_compress</span> <span class="p">{</span> <span class="nn">NetAddr::</span><span class="n">IP</span><span class="o">-&gt;</span><span class="n">new6</span><span class="p">(</span><span class="nb">shift</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">short</span> <span class="p">}</span>

<span class="k">print</span> <span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&#39;1230:5670:0000:0000:0123:0000:0000:00ab&#39;</span><span class="p">),</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&#39;0000:0000:0000:0000:0000:0000:0000:0001&#39;</span><span class="p">),</span> <span class="s">&quot;\n&quot;</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8337/addtag/" class="addtag" id="addtag_8337">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8337/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8337/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8337"
  >-</span><span
  class="button yellow"
  id="rating_z_8337"
  >0</span><span 
  class="button green"
  id="rating_p_8337"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8337/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8339">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8339/">#8339</a>(<script language="JavaScript">print_time(new Date("2009/01/16 09:46 GMT"));</script><noscript>2009/01/16 09:46 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>泥臭く正規表現で手作りしました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">re</span>

<span class="k">def</span> <span class="nf">ipv6_compress</span><span class="p">(</span><span class="n">addr</span><span class="p">):</span>
    <span class="n">s</span> <span class="o">=</span> <span class="s">&#39;:&#39;</span> <span class="o">+</span> <span class="s">&#39;:&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%x</span><span class="s">&#39;</span> <span class="o">%</span> <span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">addr</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;:&#39;</span><span class="p">))</span>
    <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">&#39;(?&lt;=:)&#39;</span> <span class="o">+</span> <span class="s">&#39;:&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s">&#39;0&#39;</span> <span class="o">*</span> <span class="n">n</span><span class="p">),</span> <span class="n">s</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">m</span><span class="p">:</span> <span class="k">return</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="n">m</span><span class="o">.</span><span class="n">start</span><span class="p">()]</span> <span class="o">+</span> <span class="s">&#39;:&#39;</span> <span class="o">+</span> <span class="n">s</span><span class="p">[</span><span class="n">m</span><span class="o">.</span><span class="n">end</span><span class="p">():]</span>
    <span class="k">return</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8339/addtag/" class="addtag" id="addtag_8339">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8339/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8339/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8339"
  >-</span><span
  class="button yellow"
  id="rating_z_8339"
  >0</span><span 
  class="button green"
  id="rating_p_8339"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090612205550/http://ja.doukaku.org/comment/8339/">
    1
    reply
  </a>

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8339/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8340">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/729/" target="_top">t_noborio</a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8340/">#8340</a>(<script language="JavaScript">print_time(new Date("2009/01/16 09:50 GMT"));</script><noscript>2009/01/16 09:50 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>素直に正規表現で</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">ipv6_compress</span><span class="p">(</span><span class="n">ip</span><span class="p">):</span>
    <span class="n">reg</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&quot;(?:^|:)0{0,3}&quot;</span><span class="p">)</span>
    <span class="n">reg2</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&quot;:0(:0)+&quot;</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">reg2</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">reg</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">ip</span><span class="p">)),</span> <span class="mi">1</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8340/addtag/" class="addtag" id="addtag_8340">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8340/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8340/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8340"
  >-</span><span
  class="button yellow"
  id="rating_z_8340"
  >0</span><span 
  class="button green"
  id="rating_p_8340"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090612205550/http://ja.doukaku.org/comment/8340/">
    1
    reply
  </a>

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8340/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8341">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8341/">#8341</a>(<script language="JavaScript">print_time(new Date("2009/01/16 03:58 GMT"));</script><noscript>2009/01/16 03:58 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>これって連続するゼロが複数箇所ある場合、最左を優先させて置き換えるのか、最長を優先させるのかどっちでしょうか？</p>
<p>自分はよくわからないので、最長を優先させることにしました。でももっとカッコ良く書けそうだと思いました。</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8341/addtag/" class="addtag" id="addtag_8341">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8341"
  >-</span><span
  class="button yellow"
  id="rating_z_8341"
  >0</span><span 
  class="button green"
  id="rating_p_8341"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8339/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8341/root/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8341/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8343">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8343/">#8343</a>(<script language="JavaScript">print_time(new Date("2009/01/16 14:51 GMT"));</script><noscript>2009/01/16 14:51 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Squeak Smalltalk には正規表現が組み込みでないので、手続き的に。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></td><td class="code"><div class="highlight"><pre>| ipv6Compress |
ipv6Compress := [:inStr |
    | subStrings sections max outStream |
    subStrings := inStr subStrings: #($:).
    sections := subStrings collect: [:each |
        ((&#39;16r&#39;, each asUppercase) asNumber radix: 16) asLowercase].
    sections := sections as: RunArray.
    max := ((1 to: sections runs size) select: [:each | (sections values at: each) = &#39;0&#39;])
        detectMax: [:idx | sections runs at: idx].
    sections values at: max put: &#39;&#39;.
    sections runs at: max put: 1.
    outStream := String new writeStream.
    sections first ifEmpty: [outStream nextPut: $:].
    sections do: [:each | outStream nextPutAll: each] separatedBy: [outStream nextPut: $:].
    sections last ifEmpty: [outStream nextPut: $:].
    outStream contents].

ipv6Compress value: &#39;1230:5670:0000:0000:0123:0000:0000:00ab&#39;.  &quot;=&gt; &#39;1230:5670::123:0:0:ab&#39; &quot;
ipv6Compress value: &#39;0000:0000:0000:0000:0000:0000:0000:0001&#39;.  &quot;=&gt; &#39;::1&#39; &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8343/addtag/" class="addtag" id="addtag_8343">タグ</a>:
	
    
    <a href="/web/20090612205550/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8343/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8343/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8343"
  >-</span><span
  class="button yellow"
  id="rating_z_8343"
  >0</span><span 
  class="button green"
  id="rating_p_8343"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8343/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8344">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8344/">#8344</a>(<script language="JavaScript">print_time(new Date("2009/01/16 09:45 GMT"));</script><noscript>2009/01/16 09:45 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>ども、raynstardです。
泥臭くループしてみました。

0000:0000:0000:0000:0000:0000:0000:0000で初期化して
"%lx" → "%04lx"
strncat() → memcpy()に変更すると
割と簡単に逆もできる予感。(not ::ffff:)
でも、ここまででだいぶ長くなってしまったので省略(笑
やっぱり、ほかの言語は短いですねぇ。。

// gcc -std=c99 -Wall doukaku226.c
環境によっては snprintf () が警告でるかも
cygwin は対処できませんでしたorz
どうすればこの警告消えるんだろう</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#define _XOPEN_SOURCE 600</span>

<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &lt;assert.h&gt;</span>

<span class="cp">#define ASSERT assert</span>

<span class="kt">char</span> <span class="o">*</span> <span class="nf">IPv6_compress</span><span class="p">(</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">ipv6Addr</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="kt">char</span> <span class="n">ipv6_string</span><span class="p">[</span><span class="mi">39</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>

    <span class="n">memset</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="sc">&#39;\0&#39;</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">));</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">strncmp</span><span class="p">(</span><span class="n">ipv6Addr</span><span class="p">,</span> <span class="s">&quot;::ffff:&quot;</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="c">/* IPv4 は そのまま返却する */</span>
        <span class="n">strncpy</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="n">ipv6Addr</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
     <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="c">/* IPv6 一般(?)形式 */</span>
        <span class="kt">char</span>   <span class="o">*</span><span class="n">cursor</span><span class="p">,</span> <span class="o">*</span><span class="n">cp</span><span class="p">;</span>
        <span class="kt">char</span>   <span class="n">hex</span><span class="p">[</span><span class="mi">5</span><span class="p">];</span>
        <span class="kt">int</span>    <span class="n">compress_zero</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span> <span class="kt">long</span> <span class="n">num</span> <span class="o">=</span> <span class="n">strtoul</span><span class="p">(</span><span class="n">ipv6Addr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">cp</span><span class="p">,</span> <span class="mi">16</span><span class="p">);</span> <span class="o">*</span><span class="n">cp</span> <span class="o">!=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span> <span class="n">num</span> <span class="o">=</span> <span class="n">strtoul</span><span class="p">(</span><span class="n">cursor</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">cp</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cursor</span> <span class="o">=</span> <span class="n">cp</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">snprintf</span><span class="p">(</span><span class="n">hex</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">hex</span><span class="p">),</span> <span class="s">&quot;%lx&quot;</span><span class="p">,</span> <span class="n">num</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span> <span class="n">compress_zero</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="p">)</span>
            <span class="p">{</span>
                <span class="c">/* もう圧縮しない or 圧縮の必要がない */</span>
                <span class="n">strncat</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="n">hex</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">);</span>
                <span class="n">strncat</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">);</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span> <span class="n">compress_zero</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">compress_zero</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">)</span>
            <span class="p">{</span>
                <span class="c">/* まだ圧縮したことない */</span>
                <span class="k">if</span><span class="p">(</span> <span class="n">num</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
                <span class="p">{</span>
                    <span class="c">/* 圧縮するかもしれない */</span>
                    <span class="n">compress_zero</span> <span class="o">++</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span> <span class="n">compress_zero</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">)</span>
                    <span class="p">{</span>
                        <span class="c">/* 圧宿の必要はないので省略した分を追加する出力 */</span>
                        <span class="n">strncat</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="s">&quot;0:&quot;</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">);</span>
                        <span class="n">compress_zero</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                    <span class="p">}</span>
                    <span class="n">strncat</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="n">hex</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">);</span>
                    <span class="n">strncat</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span> <span class="n">compress_zero</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">)</span>
            <span class="p">{</span>
                <span class="c">/* 圧縮中 */</span>
                <span class="k">if</span><span class="p">(</span> <span class="n">num</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">)</span>
                <span class="p">{</span>
                    <span class="c">/* もう圧縮しない */</span>
                    <span class="n">compress_zero</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
                    <span class="n">strncat</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">);</span>
                    <span class="n">strncat</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="n">hex</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">);</span>
                    <span class="n">strncat</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="p">{</span> <span class="c">/* ありえない */</span> <span class="n">assert</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">snprintf</span><span class="p">(</span><span class="n">hex</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">hex</span><span class="p">),</span> <span class="s">&quot;%lx&quot;</span><span class="p">,</span> <span class="n">strtoul</span><span class="p">(</span><span class="n">cursor</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">cp</span><span class="p">,</span> <span class="mi">16</span><span class="p">));</span>
        <span class="k">if</span><span class="p">(</span> <span class="o">*</span><span class="n">ipv6_string</span> <span class="o">==</span> <span class="sc">&#39;\0&#39;</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="c">/* 初っぱなから全部圧縮した */</span>
            <span class="o">*</span><span class="n">ipv6_string</span> <span class="o">=</span> <span class="sc">&#39;:&#39;</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">compress_zero</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="c">/* 圧縮中のまま最後まできた */</span>
            <span class="n">strncat</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">);</span>
        <span class="p">}</span>
        <span class="c">/* 最後ののこり出力 */</span>
        <span class="n">strncat</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">,</span> <span class="n">hex</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">ipv6_string</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">);</span>
    <span class="p">}</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[%s] =&gt; [%s]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ipv6Addr</span><span class="p">,</span> <span class="n">ipv6_string</span><span class="p">);</span>

    <span class="k">return</span> <span class="n">ipv6_string</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">ASSERT</span><span class="p">(</span> <span class="n">strcmp</span><span class="p">(</span> <span class="n">IPv6_compress</span><span class="p">(</span><span class="s">&quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot;</span><span class="p">),</span> <span class="s">&quot;1230:5670::123:0:0:ab&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">);</span>
    <span class="n">ASSERT</span><span class="p">(</span> <span class="n">strcmp</span><span class="p">(</span> <span class="n">IPv6_compress</span><span class="p">(</span><span class="s">&quot;1230:0567:0000:0000:0000:0000:0000:00ab&quot;</span><span class="p">),</span> <span class="s">&quot;1230:567::ab&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">);</span>
    <span class="n">ASSERT</span><span class="p">(</span> <span class="n">strcmp</span><span class="p">(</span> <span class="n">IPv6_compress</span><span class="p">(</span><span class="s">&quot;1230:0567:0000:0def:0000:0000:0000:00ff&quot;</span><span class="p">),</span> <span class="s">&quot;1230:567:0:def::ff&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">);</span>
    <span class="n">ASSERT</span><span class="p">(</span> <span class="n">strcmp</span><span class="p">(</span> <span class="n">IPv6_compress</span><span class="p">(</span><span class="s">&quot;0000:0000:0000:0000:0000:0000:0000:0001&quot;</span><span class="p">),</span> <span class="s">&quot;::1&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">);</span>
    <span class="n">ASSERT</span><span class="p">(</span> <span class="n">strcmp</span><span class="p">(</span> <span class="n">IPv6_compress</span><span class="p">(</span><span class="s">&quot;::ffff:192.168.1.1&quot;</span><span class="p">),</span> <span class="s">&quot;::ffff:192.168.1.1&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/* EOF */</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8344/addtag/" class="addtag" id="addtag_8344">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8344/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8344/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8344"
  >-</span><span
  class="button yellow"
  id="rating_z_8344"
  >0</span><span 
  class="button green"
  id="rating_p_8344"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8344/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8346">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8346/">#8346</a>(<script language="JavaScript">print_time(new Date("2009/01/16 21:38 GMT"));</script><noscript>2009/01/16 21:38 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  クラスライブラリ探しても見付からなくてむしゃくしゃして書きました。<br/>反省してません。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot;</span><span class="p">));</span> <span class="c">//1230:5670::123:0:0:ab</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">string</span> <span class="nf">ipv6_compress</span><span class="p">(</span><span class="kt">string</span> <span class="n">address</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">address</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">address</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;:0000:0000:&quot;</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">9</span><span class="p">).</span><span class="n">Split</span><span class="p">(</span><span class="k">new</span> <span class="kt">char</span><span class="p">[]</span> <span class="k">{</span> <span class="sc">&#39;:&#39;</span> <span class="k">}</span><span class="p">).</span><span class="n">Select</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;(</span><span class="n">str</span> <span class="p">=&gt;</span> <span class="n">str</span><span class="p">.</span><span class="n">TrimStart</span><span class="p">(</span><span class="k">new</span> <span class="kt">char</span><span class="p">[]</span> <span class="k">{</span> <span class="sc">&#39;0&#39;</span> <span class="k">}</span><span class="p">).</span><span class="n">PadLeft</span><span class="p">(</span><span class="n">Math</span><span class="p">.</span><span class="n">Min</span><span class="p">(</span><span class="n">str</span><span class="p">.</span><span class="n">Length</span><span class="p">,</span> <span class="m">1</span><span class="p">),</span> <span class="sc">&#39;0&#39;</span><span class="p">)).</span><span class="n">Aggregate</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="n">a</span> <span class="p">+</span> <span class="s">&quot;:&quot;</span> <span class="p">+</span> <span class="n">b</span><span class="p">));</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8346/addtag/" class="addtag" id="addtag_8346">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8346/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8346/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8346"
  >-</span><span
  class="button yellow"
  id="rating_z_8346"
  >0</span><span 
  class="button green"
  id="rating_p_8346"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090612205550/http://ja.doukaku.org/comment/8346/">
    1
    reply
  </a>

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8346/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8347">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/504/" target="_top">あにす</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8347/">#8347</a>(<script language="JavaScript">print_time(new Date("2009/01/16 22:20 GMT"));</script><noscript>2009/01/16 22:20 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  伸長も書いてみました、1行で。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Net</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot;</span><span class="p">));</span> <span class="c">//1230:5670::123:0:0:ab</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">ipv6_recompress</span><span class="p">(</span><span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot;</span><span class="p">)));</span> <span class="c">//1230:5670:0000:0000:0123:0000:0000:00ab</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">string</span> <span class="nf">ipv6_compress</span><span class="p">(</span><span class="kt">string</span> <span class="n">address</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">address</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">address</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;:0000:0000:&quot;</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">9</span><span class="p">).</span><span class="n">Split</span><span class="p">(</span><span class="k">new</span> <span class="kt">char</span><span class="p">[]</span> <span class="k">{</span> <span class="sc">&#39;:&#39;</span> <span class="k">}</span><span class="p">).</span><span class="n">Select</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;(</span><span class="n">str</span> <span class="p">=&gt;</span> <span class="n">str</span><span class="p">.</span><span class="n">TrimStart</span><span class="p">(</span><span class="k">new</span> <span class="kt">char</span><span class="p">[]</span> <span class="k">{</span> <span class="sc">&#39;0&#39;</span> <span class="k">}</span><span class="p">).</span><span class="n">PadLeft</span><span class="p">(</span><span class="n">Math</span><span class="p">.</span><span class="n">Min</span><span class="p">(</span><span class="n">str</span><span class="p">.</span><span class="n">Length</span><span class="p">,</span> <span class="m">1</span><span class="p">),</span> <span class="sc">&#39;0&#39;</span><span class="p">)).</span><span class="n">Aggregate</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="n">a</span> <span class="p">+</span> <span class="s">&quot;:&quot;</span> <span class="p">+</span> <span class="n">b</span><span class="p">));</span>
    <span class="k">}</span>

    <span class="k">static</span> <span class="kt">string</span> <span class="nf">ipv6_recompress</span><span class="p">(</span><span class="kt">string</span> <span class="n">address</span><span class="p">)</span> <span class="k">{</span>
        <span class="k">return</span> <span class="n">IPAddress</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">address</span><span class="p">).</span><span class="n">GetAddressBytes</span><span class="p">().</span><span class="n">Select</span><span class="p">&lt;</span><span class="kt">byte</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;(</span><span class="n">b</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0:x2}&quot;</span><span class="p">,</span> <span class="n">b</span><span class="p">))).</span><span class="n">Aggregate</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="n">a</span> <span class="p">+</span> <span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">LastIndexOf</span><span class="p">(</span><span class="sc">&#39;:&#39;</span><span class="p">)</span> <span class="p">==</span> <span class="n">a</span><span class="p">.</span><span class="n">Length</span> <span class="p">-</span> <span class="m">3</span> <span class="p">?</span> <span class="s">&quot;&quot;</span> <span class="p">:</span> <span class="s">&quot;:&quot;</span><span class="p">)</span> <span class="p">+</span> <span class="n">b</span><span class="p">));</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8347/addtag/" class="addtag" id="addtag_8347">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8347/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8347/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8347"
  >-</span><span
  class="button yellow"
  id="rating_z_8347"
  >0</span><span 
  class="button green"
  id="rating_p_8347"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8346/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8347/root/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090612205550/http://ja.doukaku.org/comment/8347/">
    1
    reply
  </a>

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8347/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8348">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/833/" target="_top">mattsan</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_bronze.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8348/">#8348</a>(<script language="JavaScript">print_time(new Date("2009/01/17 00:22 GMT"));</script><noscript>2009/01/17 00:22 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>不格好です(不満)。
お題にあるものは変換できたんですが、いつでもキチンと変換できるか自信がないです。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;sstream&gt;</span>
<span class="cp">#include &lt;iomanip&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>

<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">pv6_compress</span><span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&amp;</span> <span class="n">source</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c">// 数値列に分解</span>
    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">values</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">istringstream</span> <span class="n">iss</span><span class="p">(</span><span class="n">source</span><span class="p">);</span>
    <span class="n">iss</span> <span class="o">&gt;&gt;</span> <span class="n">std</span><span class="o">::</span><span class="n">hex</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">iss</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">values</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
        <span class="kt">char</span> <span class="n">c</span><span class="p">;</span>
        <span class="n">iss</span> <span class="o">&gt;&gt;</span> <span class="n">c</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c">// 0が続く範囲を抽出</span>
    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;::</span><span class="n">const_iterator</span> <span class="n">i</span>     <span class="o">=</span> <span class="n">values</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;::</span><span class="n">const_iterator</span> <span class="n">first</span> <span class="o">=</span> <span class="n">values</span><span class="p">.</span><span class="n">end</span><span class="p">();</span>
    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;::</span><span class="n">const_iterator</span> <span class="n">last</span>  <span class="o">=</span> <span class="n">values</span><span class="p">.</span><span class="n">end</span><span class="p">();</span>
    <span class="k">while</span><span class="p">(</span><span class="n">i</span> <span class="o">!=</span> <span class="n">values</span><span class="p">.</span><span class="n">end</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">((</span><span class="n">first</span> <span class="o">==</span> <span class="n">values</span><span class="p">.</span><span class="n">end</span><span class="p">())</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">*</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">first</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">((</span><span class="n">first</span> <span class="o">!=</span> <span class="n">values</span><span class="p">.</span><span class="n">end</span><span class="p">())</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">*</span><span class="n">i</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">last</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="o">++</span><span class="n">i</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c">// 再構築</span>
    <span class="n">std</span><span class="o">::</span><span class="n">ostringstream</span> <span class="n">oss</span><span class="p">;</span>
    <span class="n">oss</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">hex</span><span class="p">;</span>
    <span class="n">i</span> <span class="o">=</span> <span class="n">values</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="k">for</span><span class="p">(;;)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">first</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">oss</span> <span class="o">&lt;&lt;</span> <span class="p">((</span><span class="n">i</span> <span class="o">==</span> <span class="n">values</span><span class="p">.</span><span class="n">begin</span><span class="p">())</span> <span class="o">?</span> <span class="s">&quot;::&quot;</span> <span class="o">:</span> <span class="s">&quot;:&quot;</span><span class="p">);</span>
            <span class="n">i</span> <span class="o">=</span> <span class="n">last</span><span class="p">;</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">oss</span> <span class="o">&lt;&lt;</span> <span class="o">*</span><span class="n">i</span><span class="p">;</span>
        <span class="o">++</span><span class="n">i</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">values</span><span class="p">.</span><span class="n">end</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">oss</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;:&quot;</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">oss</span><span class="p">.</span><span class="n">str</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8348/addtag/" class="addtag" id="addtag_8348">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8348/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8348/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8348"
  >-</span><span
  class="button yellow"
  id="rating_z_8348"
  >0</span><span 
  class="button green"
  id="rating_p_8348"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090612205550/http://ja.doukaku.org/comment/8348/">
    1
    reply
  </a>

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8348/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8349">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8349/">#8349</a>(<script language="JavaScript">print_time(new Date("2009/01/17 03:21 GMT"));</script><noscript>2009/01/17 03:21 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Javaには、IPv6のアドレスも標準で扱えるようになっています。
ただ、アドレスの表示に関してはほとんど省略をしない形になっているため、その辺りを実装しました。逆変換もついでに実装してみました。</p>
<p>２つの関数の引数は、IPv6で認められている形式ならば、どのような値でも受け付けられます。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20090612205550/http://java.sun.com/javase/ja/6/docs/ja/api/java/net/Inet6Address.html">クラス Inet6Address</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.net.InetAddress</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.net.UnknownHostException</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample226</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">String</span> <span class="nf">compressIpv6</span><span class="o">(</span><span class="n">String</span> <span class="n">address</span><span class="o">)</span> <span class="k">throws</span> <span class="n">UnknownHostException</span> <span class="o">{</span>
        <span class="n">InetAddress</span> <span class="n">ipAddress</span> <span class="o">=</span> <span class="n">InetAddress</span><span class="o">.</span><span class="na">getByName</span><span class="o">(</span><span class="n">address</span><span class="o">);</span>
        <span class="n">String</span> <span class="n">hostAddress</span> <span class="o">=</span> <span class="n">ipAddress</span><span class="o">.</span><span class="na">getHostAddress</span><span class="o">();</span>
        <span class="n">hostAddress</span> <span class="o">=</span> <span class="n">hostAddress</span><span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span><span class="s">&quot;(^|:)(0:){2,}&quot;</span><span class="o">,</span> <span class="s">&quot;::&quot;</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">hostAddress</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="n">String</span> <span class="nf">decompressIpv6</span><span class="o">(</span><span class="n">String</span> <span class="n">address</span><span class="o">)</span> <span class="k">throws</span> <span class="n">UnknownHostException</span> <span class="o">{</span>
        <span class="n">InetAddress</span> <span class="n">ipAddress</span> <span class="o">=</span> <span class="n">InetAddress</span><span class="o">.</span><span class="na">getByName</span><span class="o">(</span><span class="n">address</span><span class="o">);</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">bs</span> <span class="o">=</span> <span class="n">ipAddress</span><span class="o">.</span><span class="na">getAddress</span><span class="o">();</span>
        <span class="n">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">bs</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">index</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">index</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">index</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="sc">&#39;:&#39;</span><span class="o">);</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%02x&quot;</span><span class="o">,</span> <span class="n">bs</span><span class="o">[</span><span class="n">index</span><span class="o">]));</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">String</span> <span class="n">comp1</span> <span class="o">=</span> <span class="n">compressIpv6</span><span class="o">(</span><span class="s">&quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot;</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">comp1</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">decompressIpv6</span><span class="o">(</span><span class="n">comp1</span><span class="o">));</span>

            <span class="n">String</span> <span class="n">comp2</span> <span class="o">=</span> <span class="n">compressIpv6</span><span class="o">(</span><span class="s">&quot;0000:0000:0000:0000:0000:0000:0000:0001&quot;</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">comp2</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">decompressIpv6</span><span class="o">(</span><span class="n">comp2</span><span class="o">));</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnknownHostException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8349/addtag/" class="addtag" id="addtag_8349">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8349/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8349/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8349"
  >-</span><span
  class="button yellow"
  id="rating_z_8349"
  >0</span><span 
  class="button green"
  id="rating_p_8349"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8349/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8351">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8351/">#8351</a>(<script language="JavaScript">print_time(new Date("2009/01/17 12:05 GMT"));</script><noscript>2009/01/17 12:05 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>文字列の切り貼りのみです。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">ipv6_compress</span><span class="p">(</span><span class="n">ip</span><span class="p">)</span>
  <span class="n">ip</span> <span class="o">=</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="n">ip</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span>
  <span class="mi">3</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="n">ip</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/:0/</span><span class="p">,</span> <span class="s2">&quot;:&quot;</span><span class="p">)}</span>
  <span class="n">ip</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/(:0)+:0/</span><span class="p">,</span> <span class="s2">&quot;::&quot;</span><span class="p">)</span>
  <span class="n">ip</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">ip</span><span class="o">.</span><span class="n">size</span> <span class="o">-</span> <span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="sr">/:::/</span><span class="p">,</span><span class="s2">&quot;::&quot;</span><span class="p">)</span>
<span class="k">end</span>

<span class="n">a</span><span class="o">=[</span><span class="s1">&#39;1230:5670:0000:0000:0123:0000:0000:00ab&#39;</span><span class="o">]</span> <span class="c1"># =&gt; &quot;1230:5670::123:0:0:ab&quot;</span>
<span class="n">a</span><span class="o">&lt;&lt;</span><span class="s1">&#39;1230:5670:0000:0300:0123:0000:0000:00ab&#39;</span> <span class="c1"># =&gt; &quot;1230:5670:0:300:123::ab&quot;</span>
<span class="n">a</span><span class="o">&lt;&lt;</span><span class="s1">&#39;0000:0000:0000:0000:0000:0000:0000:0001&#39;</span> <span class="c1"># =&gt; &quot;::1&quot;</span>
<span class="n">a</span><span class="o">&lt;&lt;</span><span class="s1">&#39;0002:0000:0700:0000:0000:0000:0000:0000&#39;</span> <span class="c1"># =&gt; &quot;2:0:700::&quot;</span>
<span class="n">a</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span><span class="nb">p</span> <span class="n">ipv6_compress</span><span class="p">(</span><span class="n">x</span><span class="p">)}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8351/addtag/" class="addtag" id="addtag_8351">タグ</a>:
	
    
    <a href="/web/20090612205550/http://ja.doukaku.org/tag/1.8.6/">1.8.6</a>
    
    <a href="/web/20090612205550/http://ja.doukaku.org/tag/ruby/">ruby</a>
    
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8351/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8351/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8351"
  >-</span><span
  class="button yellow"
  id="rating_z_8351"
  >0</span><span 
  class="button green"
  id="rating_p_8351"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8351/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8355">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8355/">#8355</a>(<script language="JavaScript">print_time(new Date("2009/01/17 15:18 GMT"));</script><noscript>2009/01/17 15:18 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>なるべくalgorithm使って書いてみました。

…しかし、行数は増えてしまった</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;algorithm&gt;</span>
<span class="cp">#include &lt;functional&gt;</span>
<span class="cp">#include &lt;iostream&gt;</span>
<span class="cp">#include &lt;iterator&gt;</span>
<span class="cp">#include &lt;sstream&gt;</span>
<span class="cp">#include &lt;string&gt;</span>
<span class="cp">#include &lt;vector&gt;</span>

<span class="kr">inline</span> <span class="kt">char</span>
<span class="n">transform_delimiter</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">&amp;</span> <span class="n">c</span><span class="p">)</span>
<span class="p">{</span> <span class="k">return</span> <span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;:&#39;</span> <span class="o">?</span> <span class="sc">&#39; &#39;</span> <span class="o">:</span> <span class="n">c</span><span class="p">;</span> <span class="p">}</span>

<span class="n">std</span><span class="o">::</span><span class="n">string</span>
<span class="n">ipv6_compress</span><span class="p">(</span>
        <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&amp;</span> <span class="n">source</span>
        <span class="p">)</span>
<span class="p">{</span>
    <span class="c">// 数値列に分解</span>
    <span class="k">typedef</span> <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">elements_t</span><span class="p">;</span>
    <span class="k">typedef</span> <span class="n">elements_t</span><span class="o">::</span><span class="n">const_iterator</span> <span class="n">elems_iter_t</span><span class="p">;</span>
    <span class="n">elements_t</span> <span class="n">elems</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">stringstream</span> <span class="n">ss</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">transform</span><span class="p">(</span>
            <span class="n">source</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">source</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span>
            <span class="n">std</span><span class="o">::</span><span class="n">ostream_iterator</span><span class="o">&lt;</span><span class="kt">char</span><span class="o">&gt;</span><span class="p">(</span><span class="n">ss</span><span class="p">),</span>
            <span class="n">transform_delimiter</span>
            <span class="p">);</span>

    <span class="n">ss</span> <span class="o">&gt;&gt;</span> <span class="n">std</span><span class="o">::</span><span class="n">hex</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">copy</span><span class="p">(</span>
            <span class="n">std</span><span class="o">::</span><span class="n">istream_iterator</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">ss</span><span class="p">),</span>
            <span class="n">std</span><span class="o">::</span><span class="n">istream_iterator</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(),</span>
            <span class="n">std</span><span class="o">::</span><span class="n">back_inserter</span><span class="p">(</span><span class="n">elems</span><span class="p">)</span>
            <span class="p">);</span>

    <span class="c">// 0 が続く範囲を探索</span>
    <span class="n">elems_iter_t</span> <span class="n">beg0</span> <span class="o">=</span> <span class="n">elems</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">end0</span> <span class="o">=</span> <span class="n">elems</span><span class="p">.</span><span class="n">end</span><span class="p">();</span>
    <span class="k">while</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">beg0</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">adjacent_find</span><span class="p">(</span><span class="n">beg0</span><span class="p">,</span> <span class="n">end0</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span> <span class="n">beg0</span> <span class="o">==</span> <span class="n">end0</span> <span class="p">)</span> <span class="k">break</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span> <span class="o">*</span><span class="n">beg0</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="n">end0</span> <span class="o">=</span> <span class="n">find_if</span><span class="p">(</span><span class="n">beg0</span><span class="p">,</span> <span class="n">end0</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">bind1st</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">not_equal_to</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(),</span> <span class="mi">0</span><span class="p">));</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">beg0</span> <span class="o">=</span> <span class="n">find_if</span><span class="p">(</span><span class="n">beg0</span><span class="p">,</span> <span class="n">end0</span><span class="p">,</span> <span class="n">std</span><span class="o">::</span><span class="n">bind1st</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">not_equal_to</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(),</span> <span class="o">*</span><span class="n">beg0</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="c">// 再構築</span>
    <span class="n">std</span><span class="o">::</span><span class="n">ostringstream</span> <span class="n">oss</span><span class="p">;</span>
    <span class="n">oss</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">hex</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">elems_iter_t</span> <span class="n">it</span> <span class="o">=</span> <span class="n">elems</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span> <span class="n">it</span> <span class="o">!=</span> <span class="n">elems</span><span class="p">.</span><span class="n">end</span><span class="p">();</span> <span class="o">++</span><span class="n">it</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span> <span class="n">it</span> <span class="o">==</span> <span class="n">beg0</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span> <span class="n">beg0</span> <span class="o">==</span> <span class="n">elems</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span> <span class="p">)</span> <span class="n">oss</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;:&quot;</span><span class="p">;</span>
            <span class="n">it</span> <span class="o">=</span> <span class="n">end0</span><span class="p">;</span>
            <span class="o">--</span><span class="n">it</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span>
            <span class="n">oss</span> <span class="o">&lt;&lt;</span> <span class="o">*</span><span class="n">it</span><span class="p">;</span>

        <span class="n">oss</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;:&quot;</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">result</span> <span class="o">=</span> <span class="n">oss</span><span class="p">.</span><span class="n">str</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span> <span class="n">result</span><span class="p">[</span><span class="n">result</span><span class="p">.</span><span class="n">length</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;:&#39;</span> <span class="o">&amp;&amp;</span>
            <span class="n">result</span><span class="p">[</span><span class="n">result</span><span class="p">.</span><span class="n">length</span><span class="p">()</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span> <span class="o">!=</span> <span class="sc">&#39;:&#39;</span><span class="p">)</span>
        <span class="n">result</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">result</span><span class="p">.</span><span class="n">length</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>

    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&quot;0000:0000:0000:0000:0000:0000:0000:0001&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&quot;0001:0000:0000:0000:0000:0000:0000:0000&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&quot;0000:0000:0000:0000:0000:0000:0000:0000&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&quot;0001:0001:0001:0002:0002:0002:0003:0003&quot;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8355/addtag/" class="addtag" id="addtag_8355">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8355/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8355/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8355"
  >-</span><span
  class="button yellow"
  id="rating_z_8355"
  >0</span><span 
  class="button green"
  id="rating_p_8355"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8348/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8355/root/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8355/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8356">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8356/">#8356</a>(<script language="JavaScript">print_time(new Date("2009/01/17 23:26 GMT"));</script><noscript>2009/01/17 23:26 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  0が3個以上続くときも::に置き換えてほしいです。0:0:0:0:0:0:0:1&nbsp;→&nbsp;::1&nbsp;みたいな。（問題文のサンプルが見づらくてすみません・・）
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8356/addtag/" class="addtag" id="addtag_8356">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8356"
  >-</span><span
  class="button yellow"
  id="rating_z_8356"
  >0</span><span 
  class="button green"
  id="rating_p_8356"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8347/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8356/root/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8356/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8359">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8359/">#8359</a>(<script language="JavaScript">print_time(new Date("2009/01/18 09:13 GMT"));</script><noscript>2009/01/18 09:13 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  逆変換(伸長)です。 これ以上短くする方法を思いつかない。
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre><span class="k">def</span> <span class="nf">ipv6_decompress</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
  <span class="n">s</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/::/</span><span class="p">,</span> <span class="s2">&quot; # &quot;</span><span class="p">)</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/:/</span><span class="p">,</span> <span class="s2">&quot; &quot;</span><span class="p">)</span>
  <span class="n">s</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/#/</span><span class="p">,</span> <span class="s2">&quot; 0000&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="mi">8</span> <span class="o">-</span> <span class="n">s</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/ /</span><span class="p">)</span><span class="o">.</span><span class="n">size</span><span class="p">))</span>
  <span class="n">s</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/ /</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span>
    <span class="s2">&quot;0&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="mi">4</span> <span class="o">-</span> <span class="n">x</span><span class="o">.</span><span class="n">size</span><span class="p">)</span> <span class="o">+</span> <span class="n">x</span>
  <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8359/addtag/" class="addtag" id="addtag_8359">タグ</a>:
	
    
    <a href="/web/20090612205550/http://ja.doukaku.org/tag/1.8.6/">1.8.6</a>
    
    <a href="/web/20090612205550/http://ja.doukaku.org/tag/ruby/">ruby</a>
    
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8359/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8359/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8359"
  >-</span><span
  class="button yellow"
  id="rating_z_8359"
  >0</span><span 
  class="button green"
  id="rating_p_8359"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8359/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8360">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/856/" target="_top">fumokmm</a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8360/">#8360</a>(<script language="JavaScript">print_time(new Date("2009/01/18 10:50 GMT"));</script><noscript>2009/01/18 10:50 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>素直に正規表現で。

複数続く0の数が同じ候補が2つ以上あった場合は、
先頭のものを圧縮するようにしました。
(#replaceFirstを利用)</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</pre></td><td class="code"><div class="highlight"><pre>/** 圧縮 */
def ipv6Compress(ipv6) {
  // 連続する0を除去(先頭の0:0)
  def ip = ipv6.replaceFirst(/:?0000(:0000)+/, &#39;:&#39;)
  // 先頭の0を除去
  ip = ip.split(&#39;:&#39;).collect{
    (it == &#39;&#39;) ? &#39;&#39; : Integer.toHexString(Integer.parseInt(it, 16))
  }.join(&#39;:&#39;)
}

/** 伸張 */
def ipv6Decompress(ipv6) {
  // 連続する0を伸張
  def ip = ipv6.split(&#39;:&#39;) as List
  int insert = ip.indexOf(&#39;&#39;)
  ip[insert..insert] = (&#39;0&#39; * (8 - ip.size() + 1)) as List
  // 先頭に0を付加
  ip.collect{ it.padLeft(4, &#39;0&#39;) }.join(&quot;:&quot;)
}

// 動作確認
assert ipv6Compress(&#39;1230:5670:0000:0000:0123:0000:0000:00ab&#39;) ==
&#39;1230:5670::123:0:0:ab&#39;
assert ipv6Decompress(&#39;1230:5670::123:0:0:ab&#39;) ==
&#39;1230:5670:0000:0000:0123:0000:0000:00ab&#39;
assert ipv6Compress(&#39;0000:0000:0000:0000:0000:0000:0000:0001&#39;) ==
&#39;::1&#39;
assert ipv6Decompress(&#39;::1&#39;) ==
&#39;0000:0000:0000:0000:0000:0000:0000:0001&#39;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8360/addtag/" class="addtag" id="addtag_8360">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8360/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8360/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8360"
  >-</span><span
  class="button yellow"
  id="rating_z_8360"
  >0</span><span 
  class="button green"
  id="rating_p_8360"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8360/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8361">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/759/" target="_top">egtra</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8361/">#8361</a>(<script language="JavaScript">print_time(new Date("2009/01/18 14:41 GMT"));</script><noscript>2009/01/18 14:41 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
<p>不慣れですがGaucheを使いました。初心者丸出しなコードだと思います。何せ副作用付きの!をまともに使うのは初めてなくらいですし。
</p>
<p>まず、分解して(((#x1230 #x5670) 2 3) ((#x123) 2 6) ((#xab) 0 8))のようなリストにします。この要素は(非0部分のリスト 後の0の数 元順序)となっています。このあと、ソートして0の数が一番多いのを先頭に持ってきます（ここでyに束縛）。::を使う目印として先頭の0の数を-1に書き換えてから、元順序を頼りに(sort-by! y caddr)して、文字列化しています。
</p>



	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">text</span><span class="o">.</span><span class="nv">tree</span><span class="p">)</span> <span class="c1">; tree-&gt;string</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">util</span><span class="o">.</span><span class="nv">list</span><span class="p">)</span> <span class="c1">; intersperse</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">srfi-1</span><span class="p">)</span>    <span class="c1">; iota</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">ipv6_compress</span> <span class="nv">s</span><span class="p">)</span>
    <span class="p">(</span><span class="k">define </span><span class="nv">x</span> <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="nf">cut</span> <span class="nv">string-&gt;number</span> <span class="nv">&lt;&gt;</span> <span class="mi">16</span><span class="p">)</span> <span class="p">(</span><span class="nf">string-split</span> <span class="nv">s</span> <span class="o">#</span><span class="err">\</span><span class="nv">:</span><span class="p">)))</span>
    <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">break-zero</span> <span class="nv">cur</span> <span class="nv">n</span><span class="p">)</span>
      <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">null? </span><span class="nv">cur</span><span class="p">)</span>
          <span class="p">(</span><span class="nb">list </span><span class="p">(</span><span class="nb">list </span><span class="p">()</span> <span class="mi">0</span> <span class="nv">n</span><span class="p">))</span>
        <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">t</span> <span class="p">(</span><span class="nf">break-zero</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">cur</span><span class="p">)</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">n</span> <span class="mi">1</span><span class="p">))))</span>
          <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">eqv? </span><span class="p">(</span><span class="nb">car </span><span class="nv">cur</span><span class="p">)</span> <span class="mi">0</span><span class="p">)</span>
                <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">null? </span><span class="p">(</span><span class="nb">caar </span><span class="nv">t</span><span class="p">))</span>
                    <span class="p">(</span><span class="nf">begin</span>
                        <span class="p">(</span><span class="nf">inc!</span> <span class="p">(</span><span class="nb">cadar </span><span class="nv">t</span><span class="p">))</span>
                        <span class="nv">t</span><span class="p">)</span>
                    <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">list </span><span class="p">()</span> <span class="mi">1</span> <span class="nv">n</span><span class="p">)</span> <span class="nv">t</span><span class="p">))</span>
                <span class="p">(</span><span class="nf">begin</span>
                    <span class="p">(</span><span class="nf">push!</span> <span class="p">(</span><span class="nb">caar </span><span class="nv">t</span><span class="p">)</span> <span class="p">(</span><span class="nb">car </span><span class="nv">cur</span><span class="p">))</span>
                    <span class="nv">t</span><span class="p">)))))</span>
    <span class="p">(</span><span class="k">define </span><span class="nv">y</span> <span class="p">(</span><span class="nf">sort-by!</span> <span class="p">(</span><span class="nf">break-zero</span> <span class="nv">x</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">compose</span> <span class="nv">-</span> <span class="nv">cadr</span><span class="p">)))</span>
    <span class="p">(</span><span class="nb">set-car! </span><span class="p">(</span><span class="nb">cdar </span><span class="nv">y</span><span class="p">)</span> <span class="mi">-1</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">sort-by!</span> <span class="nv">y</span> <span class="nv">caddr</span><span class="p">)</span>
    <span class="p">(</span><span class="nf">tree-&gt;string</span>
        <span class="p">(</span><span class="nf">map!</span>
            <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">x</span><span class="p">)</span>
                <span class="p">(</span><span class="nf">append!</span>
                    <span class="p">(</span><span class="nf">intersperse</span> <span class="s">&quot;:&quot;</span> <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="nf">cut</span> <span class="nv">number-&gt;string</span> <span class="nv">&lt;&gt;</span> <span class="mi">16</span><span class="p">)</span> <span class="p">(</span><span class="nb">car </span><span class="nv">x</span><span class="p">)))</span>
                    <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">eqv? </span><span class="p">(</span><span class="nb">cadr </span><span class="nv">x</span><span class="p">)</span> <span class="mi">-1</span><span class="p">)</span>
                        <span class="p">(</span><span class="nb">list </span><span class="s">&quot;::&quot;</span><span class="p">)</span>
                        <span class="p">(</span><span class="nf">map!</span> <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">dummy</span><span class="p">)</span> <span class="s">&quot;0:&quot;</span><span class="p">)</span> <span class="p">(</span><span class="nf">iota</span> <span class="p">(</span><span class="nb">cadr </span><span class="nv">x</span><span class="p">))))))</span>
            <span class="nv">y</span><span class="p">)))</span>
<span class="c1">;; テスト</span>
<span class="p">(</span><span class="nf">ipv6_compress</span> <span class="s">&quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot;</span><span class="p">)</span>
<span class="p">(</span><span class="nf">ipv6_compress</span> <span class="s">&quot;0000:0000:0000:0000:0000:0000:0000:0000&quot;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8361/addtag/" class="addtag" id="addtag_8361">タグ</a>:
	
    
    <a href="/web/20090612205550/http://ja.doukaku.org/tag/Gauche/">Gauche</a>
    
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8361/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8361/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8361"
  >-</span><span
  class="button yellow"
  id="rating_z_8361"
  >0</span><span 
  class="button green"
  id="rating_p_8361"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8361/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8362">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8362/">#8362</a>(<script language="JavaScript">print_time(new Date("2009/01/18 21:38 GMT"));</script><noscript>2009/01/18 21:38 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>OCamlの勉強のために書いてみましたが、ダメすぎな感じです……。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33</pre></td><td class="code"><div class="highlight"><pre><span class="kr">let</span> <span class="n">ipv6compress</span> <span class="n">addr</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">to_hex</span> <span class="n">n</span> <span class="k">=</span> <span class="n">Printf</span><span class="k">.</span><span class="n">sprintf</span> <span class="s2">&quot;%x&quot;</span> <span class="n">n</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">scan_buffer</span> <span class="k">=</span> <span class="n">Scanf</span><span class="k">.</span><span class="n">Scanning</span><span class="k">.</span><span class="n">from_string</span> <span class="k">(</span><span class="n">addr</span> <span class="o">^</span> <span class="s2">&quot;:&quot;</span><span class="k">)</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="kr">rec</span> <span class="n">split</span> <span class="n">acc</span> <span class="k">=</span>
    <span class="kr">try</span>
      <span class="kr">let</span> <span class="n">tok</span> <span class="k">=</span> <span class="n">Scanf</span><span class="k">.</span><span class="n">bscanf</span> <span class="n">scan_buffer</span> <span class="s2">&quot;%x:&quot;</span> <span class="n">to_hex</span> <span class="kr">in</span>
        <span class="n">split</span> <span class="k">(</span><span class="n">tok</span><span class="k">::</span><span class="n">acc</span><span class="k">)</span>
    <span class="kr">with</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="n">List</span><span class="k">.</span><span class="n">rev</span> <span class="n">acc</span>
  <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">tokens</span> <span class="k">=</span> <span class="n">split</span> <span class="k">[]</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="kr">rec</span> <span class="n">locate</span> <span class="n">index</span> <span class="n">n</span> <span class="n">maxi</span> <span class="n">maxn</span> <span class="k">=</span> <span class="kr">function</span>
      <span class="k">[]</span> <span class="k">-&gt;</span> <span class="k">(</span><span class="n">maxi</span> <span class="k">-</span> <span class="n">maxn</span> <span class="k">+</span> <span class="mi">1</span><span class="k">,</span> <span class="n">maxn</span><span class="k">)</span>
    <span class="k">|</span> <span class="s2">&quot;0&quot;</span><span class="k">::</span><span class="n">xs</span> <span class="k">-&gt;</span>
        <span class="kr">if</span> <span class="n">n</span> <span class="k">+</span> <span class="mi">1</span> <span class="k">&gt;</span> <span class="n">maxn</span> <span class="kr">then</span>
          <span class="n">locate</span> <span class="k">(</span><span class="n">index</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">n</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="n">index</span> <span class="k">(</span><span class="n">n</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="n">xs</span>
        <span class="kr">else</span>
          <span class="n">locate</span> <span class="k">(</span><span class="n">index</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">n</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="n">maxi</span> <span class="n">maxn</span> <span class="n">xs</span>
    <span class="k">|</span> <span class="n">x</span><span class="k">::</span><span class="n">xs</span> <span class="k">-&gt;</span> <span class="n">locate</span> <span class="k">(</span><span class="n">index</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="mi">0</span> <span class="n">maxi</span> <span class="n">maxn</span> <span class="n">xs</span>
  <span class="kr">in</span>
  <span class="kr">let</span> <span class="k">(</span><span class="n">index</span><span class="k">,</span> <span class="n">length</span><span class="k">)</span> <span class="k">=</span> <span class="n">locate</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="n">tokens</span> <span class="kr">in</span>
    <span class="kr">if</span> <span class="n">length</span> <span class="k">&lt;</span> <span class="mi">2</span> <span class="kr">then</span>
      <span class="n">String</span><span class="k">.</span><span class="n">concat</span> <span class="s2">&quot;:&quot;</span> <span class="n">tokens</span>
    <span class="kr">else</span>
      <span class="kr">let</span> <span class="n">arr</span> <span class="k">=</span> <span class="n">Array</span><span class="k">.</span><span class="n">of_list</span> <span class="n">tokens</span> <span class="kr">in</span>
      <span class="kr">let</span> <span class="n">part1</span> <span class="k">=</span> <span class="n">Array</span><span class="k">.</span><span class="n">sub</span> <span class="n">arr</span> <span class="mi">0</span> <span class="n">index</span> <span class="kr">in</span>
      <span class="kr">let</span> <span class="n">pos</span> <span class="k">=</span> <span class="n">index</span> <span class="k">+</span> <span class="n">length</span> <span class="kr">in</span>
      <span class="kr">let</span> <span class="n">part2</span> <span class="k">=</span> <span class="n">Array</span><span class="k">.</span><span class="n">sub</span> <span class="n">arr</span> <span class="n">pos</span> <span class="k">(</span><span class="n">Array</span><span class="k">.</span><span class="n">length</span> <span class="n">arr</span> <span class="k">-</span> <span class="n">pos</span><span class="k">)</span> <span class="kr">in</span>
      <span class="kr">let</span> <span class="n">delim</span> <span class="k">=</span>
        <span class="kr">if</span> <span class="k">(</span><span class="n">Array</span><span class="k">.</span><span class="n">length</span> <span class="n">part1</span><span class="k">)</span> <span class="k">*</span> <span class="k">(</span><span class="n">Array</span><span class="k">.</span><span class="n">length</span> <span class="n">part2</span><span class="k">)</span> <span class="k">=</span> <span class="mi">0</span> <span class="kr">then</span> <span class="s2">&quot;:&quot;</span>
        <span class="kr">else</span> <span class="s2">&quot;&quot;</span>
      <span class="kr">in</span>
        <span class="n">String</span><span class="k">.</span><span class="n">concat</span> <span class="s2">&quot;:&quot;</span>
          <span class="k">((</span><span class="n">Array</span><span class="k">.</span><span class="n">to_list</span> <span class="n">part1</span><span class="k">)</span> <span class="o">@</span> <span class="k">(</span><span class="n">delim</span> <span class="k">::</span> <span class="n">Array</span><span class="k">.</span><span class="n">to_list</span> <span class="n">part2</span><span class="k">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8362/addtag/" class="addtag" id="addtag_8362">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8362/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8362/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8362"
  >-</span><span
  class="button yellow"
  id="rating_z_8362"
  >0</span><span 
  class="button green"
  id="rating_p_8362"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090612205550/http://ja.doukaku.org/comment/8362/">
    1
    reply
  </a>

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8362/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8363">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/164/" target="_top">kozima</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8363/">#8363</a>(<script language="JavaScript">print_time(new Date("2009/01/19 07:19 GMT"));</script><noscript>2009/01/19 07:19 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>0 の並びで最長なものを探すところをどうやったら簡潔に書けるかと考えた末、search を使ってみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18</pre></td><td class="code"><div class="highlight"><pre>(defun ipv6-compress (s)
  (let ((ip (loop for i below 40 by 5
               collect (parse-integer s :start i :end (+ i 4) :radix 16))))
    (loop for i from 8 above 0
       as p = (search #8(0) ip :end1 i) ; 0 が i 個並んでいるところを探す
       ;; 0 があったとき
       if p return (format nil &quot;~(~{~X~^:~}::~{~X~^:~}~)&quot;
                           (subseq ip 0 p)
                           (subseq ip (+ i p)))
       ;; 0 がひとつもなかったとき
       finally (return (format nil &quot;~(~{~X~^:~}~)&quot; ip)))))

(flet ((test (from to) (assert (string= (ipv6-compress from) to))))
  (test &quot;f0f0:0100:0020:0003:1000:0100:0020:0003&quot; &quot;f0f0:100:20:3:1000:100:20:3&quot;)
  (test &quot;1234:5678:0000:0000:1234:0000:0000:9abc&quot; &quot;1234:5678::1234:0:0:9abc&quot;)
  (test &quot;1234:5678:0000:0000:0000:0000:0000:9abc&quot; &quot;1234:5678::9abc&quot;)
  (test &quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot; &quot;1230:5670::123:0:0:ab&quot;)
  (test &quot;0000:0000:0000:0000:0000:0000:0000:0001&quot; &quot;::1&quot;))
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8363/addtag/" class="addtag" id="addtag_8363">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8363/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8363/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8363"
  >-</span><span
  class="button yellow"
  id="rating_z_8363"
  >0</span><span 
  class="button green"
  id="rating_p_8363"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8363/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8364">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/994/" target="_top">creeper</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8364/">#8364</a>(<script language="JavaScript">print_time(new Date("2009/01/19 08:12 GMT"));</script><noscript>2009/01/19 08:12 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>・なるべく多くのセクションを圧縮
・展開も対応
・strtolとsprintfだけ
・エラー処理無し</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>

<span class="k">class</span> <span class="nc">ipv6</span>
<span class="p">{</span>
<span class="k">public</span><span class="o">:</span>
    <span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">IPV6_STR_LEN</span> <span class="o">=</span> <span class="mi">5</span><span class="o">*</span><span class="mi">8</span><span class="p">;</span>
    
<span class="k">protected</span><span class="o">:</span>
    <span class="kt">unsigned</span> <span class="kt">short</span> <span class="n">val</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">ipv6</span><span class="p">()</span> <span class="p">{}</span>
    <span class="n">ipv6</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">)</span> <span class="p">{</span> <span class="n">set</span><span class="p">(</span><span class="n">str</span><span class="p">);</span> <span class="p">}</span>
    
    <span class="kt">void</span> <span class="n">set</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">val</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">val</span><span class="p">));</span>
        
        <span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c">// 現在位置</span>
        <span class="kt">int</span> <span class="n">comp</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c">// 圧縮位置</span>
        
        <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">p</span> <span class="o">=</span> <span class="n">str</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="o">==</span><span class="sc">&#39;:&#39;</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">comp</span> <span class="o">=</span> <span class="n">pos</span><span class="p">;</span>
            <span class="n">p</span><span class="o">+=</span><span class="mi">2</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">char</span><span class="o">*</span> <span class="n">next</span><span class="p">;</span>
            <span class="n">val</span><span class="p">[</span><span class="n">pos</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">strtol</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">next</span><span class="p">,</span> <span class="mi">16</span><span class="p">);</span>
            <span class="n">p</span> <span class="o">=</span> <span class="n">next</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
            <span class="n">p</span><span class="o">++</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="o">==</span><span class="sc">&#39;:&#39;</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">comp</span> <span class="o">=</span> <span class="n">pos</span><span class="p">;</span>
                <span class="n">p</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">comp</span><span class="o">!=-</span><span class="mi">1</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c">// 圧縮分を後ろにずらす</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">pos</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="o">=</span><span class="mi">7</span><span class="p">;</span> <span class="n">i</span><span class="o">&gt;=</span><span class="n">comp</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">,</span> <span class="n">j</span><span class="o">--</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">val</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">val</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="n">val</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="kt">void</span> <span class="n">get_short</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c">// 圧縮位置を決定</span>
        <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c">// 圧縮長</span>
        <span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c">// 圧縮位置</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">8</span><span class="p">;</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="k">while</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="n">n</span><span class="o">&lt;</span><span class="mi">8</span> <span class="o">&amp;&amp;</span> <span class="n">val</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="n">n</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
                <span class="n">n</span><span class="o">++</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">n</span><span class="o">&gt;</span><span class="n">len</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">len</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
                <span class="n">pos</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">i</span> <span class="o">+=</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="c">// 出力</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">8</span><span class="p">;</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="n">pos</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">i</span> <span class="o">+=</span> <span class="n">len</span><span class="p">;</span>
                <span class="o">*</span><span class="n">str</span><span class="o">++=</span><span class="sc">&#39;:&#39;</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="mi">8</span><span class="p">)</span> <span class="o">*</span><span class="n">str</span><span class="o">++=</span><span class="sc">&#39;:&#39;</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">str</span><span class="o">+=</span><span class="n">sprintf</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="n">i</span><span class="o">==</span><span class="mi">0</span><span class="o">?</span><span class="s">&quot;%x&quot;</span><span class="o">:</span><span class="s">&quot;:%x&quot;</span><span class="p">,</span> <span class="n">val</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
                <span class="n">i</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="o">*</span><span class="n">str</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="kt">void</span> <span class="n">get_full</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">sprintf</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="s">&quot;%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x&quot;</span><span class="p">,</span>
            <span class="n">val</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">val</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">val</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">val</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span>
            <span class="n">val</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span> <span class="n">val</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span> <span class="n">val</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span> <span class="n">val</span><span class="p">[</span><span class="mi">7</span><span class="p">]);</span>
    <span class="p">}</span>
    
<span class="p">};</span>

<span class="k">static</span> <span class="kt">void</span> <span class="n">ipv6_test</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">ipv6</span> <span class="n">ip</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
    <span class="kt">char</span> <span class="n">temp</span><span class="p">[</span><span class="n">ipv6</span><span class="o">::</span><span class="n">IPV6_STR_LEN</span><span class="p">];</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;set()       %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">str</span><span class="p">);</span>
    <span class="n">ip</span><span class="p">.</span><span class="n">get_full</span><span class="p">(</span><span class="n">temp</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;get_full()  %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">temp</span><span class="p">);</span>
    <span class="n">ip</span><span class="p">.</span><span class="n">get_short</span><span class="p">(</span><span class="n">temp</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;get_short() %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">temp</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">ipv6_test</span><span class="p">(</span><span class="s">&quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot;</span><span class="p">);</span>
    <span class="n">ipv6_test</span><span class="p">(</span><span class="s">&quot;0000:0000:0000:0000:0000:0000:0000:0001&quot;</span><span class="p">);</span>
    <span class="n">ipv6_test</span><span class="p">(</span><span class="s">&quot;::1:2&quot;</span><span class="p">);</span>
    <span class="n">ipv6_test</span><span class="p">(</span><span class="s">&quot;1::2&quot;</span><span class="p">);</span>
    <span class="n">ipv6_test</span><span class="p">(</span><span class="s">&quot;1:2::&quot;</span><span class="p">);</span>
    <span class="n">ipv6_test</span><span class="p">(</span><span class="s">&quot;::1&quot;</span><span class="p">);</span>
    <span class="n">ipv6_test</span><span class="p">(</span><span class="s">&quot;::&quot;</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8364/addtag/" class="addtag" id="addtag_8364">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8364/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8364/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8364"
  >-</span><span
  class="button yellow"
  id="rating_z_8364"
  >0</span><span 
  class="button green"
  id="rating_p_8364"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090612205550/http://ja.doukaku.org/comment/8364/">
    1
    reply
  </a>

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8364/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8369">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8369/">#8369</a>(<script language="JavaScript">print_time(new Date("2009/01/19 21:12 GMT"));</script><noscript>2009/01/19 21:12 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>多少直しました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45</pre></td><td class="code"><div class="highlight"><pre><span class="kr">let</span> <span class="n">ipv6compress</span> <span class="n">addr</span> <span class="k">=</span>
  <span class="kr">let</span> <span class="n">to_hex</span> <span class="n">n</span> <span class="k">=</span> <span class="n">Printf</span><span class="k">.</span><span class="n">sprintf</span> <span class="s2">&quot;%x&quot;</span> <span class="n">n</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="kr">rec</span> <span class="n">split</span> <span class="n">ib</span> <span class="n">acc</span> <span class="k">=</span>
    <span class="kr">try</span>
      <span class="kr">let</span> <span class="n">tok</span> <span class="k">=</span> <span class="n">Scanf</span><span class="k">.</span><span class="n">bscanf</span> <span class="n">ib</span> <span class="s2">&quot;%x:&quot;</span> <span class="n">to_hex</span> <span class="kr">in</span>
        <span class="n">split</span> <span class="n">ib</span> <span class="k">(</span><span class="n">tok</span><span class="k">::</span><span class="n">acc</span><span class="k">)</span>
    <span class="kr">with</span> <span class="k">_</span> <span class="k">-&gt;</span> <span class="n">List</span><span class="k">.</span><span class="n">rev</span> <span class="n">acc</span>
  <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">enumerate</span> <span class="n">xs</span> <span class="k">=</span>
    <span class="kr">let</span> <span class="kr">rec</span> <span class="n">iter</span> <span class="n">i</span> <span class="k">=</span> <span class="kr">function</span>
        <span class="k">[]</span> <span class="k">-&gt;</span> <span class="k">[]</span>
      <span class="k">|</span> <span class="n">x</span><span class="k">::</span><span class="n">xs</span> <span class="k">-&gt;</span> <span class="k">(</span><span class="n">i</span><span class="k">,</span><span class="n">x</span><span class="k">)::(</span><span class="n">iter</span> <span class="k">(</span><span class="n">i</span><span class="k">+</span><span class="mi">1</span><span class="k">)</span> <span class="n">xs</span><span class="k">)</span>
    <span class="kr">in</span>
      <span class="n">iter</span> <span class="mi">0</span> <span class="n">xs</span>
  <span class="kr">in</span>
  <span class="kr">let</span> <span class="kr">rec</span> <span class="n">locate</span> <span class="n">index</span> <span class="n">n</span> <span class="n">maxi</span> <span class="n">maxn</span> <span class="k">=</span> <span class="kr">function</span>
      <span class="k">[]</span> <span class="k">-&gt;</span> <span class="k">(</span><span class="n">maxi</span> <span class="k">-</span> <span class="n">maxn</span><span class="k">,</span> <span class="n">maxn</span><span class="k">)</span>
    <span class="k">|</span> <span class="s2">&quot;0&quot;</span><span class="k">::</span><span class="n">xs</span> <span class="k">-&gt;</span>
        <span class="kr">if</span> <span class="n">n</span> <span class="k">+</span> <span class="mi">1</span> <span class="k">&gt;</span> <span class="n">maxn</span> <span class="kr">then</span>
          <span class="n">locate</span> <span class="k">(</span><span class="n">index</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">n</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">index</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">n</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="n">xs</span>
        <span class="kr">else</span>
          <span class="n">locate</span> <span class="k">(</span><span class="n">index</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="k">(</span><span class="n">n</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="n">maxi</span> <span class="n">maxn</span> <span class="n">xs</span>
    <span class="k">|</span> <span class="n">x</span><span class="k">::</span><span class="n">xs</span> <span class="k">-&gt;</span> <span class="n">locate</span> <span class="k">(</span><span class="n">index</span> <span class="k">+</span> <span class="mi">1</span><span class="k">)</span> <span class="mi">0</span> <span class="n">maxi</span> <span class="n">maxn</span> <span class="n">xs</span>
  <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">scan_buffer</span> <span class="k">=</span> <span class="n">Scanf</span><span class="k">.</span><span class="n">Scanning</span><span class="k">.</span><span class="n">from_string</span> <span class="k">(</span><span class="n">addr</span> <span class="o">^</span> <span class="s2">&quot;:&quot;</span><span class="k">)</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">tokens</span> <span class="k">=</span> <span class="n">split</span> <span class="n">scan_buffer</span> <span class="k">[]</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="n">ntokens</span> <span class="k">=</span> <span class="n">List</span><span class="k">.</span><span class="n">length</span> <span class="n">tokens</span> <span class="kr">in</span>
  <span class="kr">let</span> <span class="k">(</span><span class="n">index</span><span class="k">,</span> <span class="n">length</span><span class="k">)</span> <span class="k">=</span> <span class="n">locate</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span> <span class="n">tokens</span> <span class="kr">in</span>
    <span class="kr">if</span> <span class="n">length</span> <span class="k">&lt;</span> <span class="mi">2</span> <span class="kr">then</span>
      <span class="n">String</span><span class="k">.</span><span class="n">concat</span> <span class="s2">&quot;:&quot;</span> <span class="n">tokens</span>
    <span class="kr">else</span> <span class="kr">if</span> <span class="n">length</span> <span class="k">=</span> <span class="n">ntokens</span> <span class="kr">then</span>
      <span class="s2">&quot;::&quot;</span>
    <span class="kr">else</span>
      <span class="kr">let</span> <span class="n">delim</span> <span class="k">=</span>
        <span class="kr">if</span> <span class="n">index</span> <span class="k">&gt;</span> <span class="mi">0</span> <span class="k">&amp;&amp;</span> <span class="n">index</span> <span class="k">+</span> <span class="n">length</span> <span class="k">&lt;</span> <span class="n">ntokens</span> <span class="kr">then</span> <span class="s2">&quot;&quot;</span>
        <span class="kr">else</span> <span class="s2">&quot;:&quot;</span>
      <span class="kr">in</span>
        <span class="n">String</span><span class="k">.</span><span class="n">concat</span> <span class="s2">&quot;:&quot;</span>
          <span class="k">(</span><span class="n">List</span><span class="k">.</span><span class="n">fold_right</span>
             <span class="k">(</span><span class="kr">fun</span> <span class="k">(</span><span class="n">i</span><span class="k">,</span><span class="n">x</span><span class="k">)</span> <span class="n">xs</span> <span class="k">-&gt;</span>
                <span class="kr">if</span> <span class="n">i</span> <span class="k">&lt;</span> <span class="n">index</span> <span class="k">||</span> <span class="n">i</span> <span class="k">&gt;=</span> <span class="n">index</span> <span class="k">+</span> <span class="n">length</span> <span class="kr">then</span> <span class="n">x</span><span class="k">::</span><span class="n">xs</span>
                <span class="kr">else</span> <span class="kr">if</span> <span class="n">i</span> <span class="k">=</span> <span class="n">index</span> <span class="kr">then</span> <span class="n">delim</span><span class="k">::</span><span class="n">xs</span>
                <span class="kr">else</span> <span class="n">xs</span><span class="k">)</span>
             <span class="k">(</span><span class="n">enumerate</span> <span class="n">tokens</span><span class="k">)</span>
             <span class="k">[])</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8369/addtag/" class="addtag" id="addtag_8369">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8369/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8369/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8369"
  >-</span><span
  class="button yellow"
  id="rating_z_8369"
  >0</span><span 
  class="button green"
  id="rating_p_8369"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8362/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8369/root/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8369/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8370">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/437/" target="_top">mamamoto</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8370/">#8370</a>(<script language="JavaScript">print_time(new Date("2009/01/20 01:19 GMT"));</script><noscript>2009/01/20 01:19 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>なんとなくCで。ノーライブラリーで。高級言語の有り難味が身にしみます。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86</pre></td><td class="code"><div class="highlight"><pre><span class="kt">char</span><span class="o">*</span> <span class="n">strcpy</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">dest</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">src</span><span class="p">){</span>
    <span class="kt">char</span><span class="o">*</span> <span class="n">ret</span> <span class="o">=</span> <span class="n">dest</span><span class="p">;</span>

    <span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">src</span><span class="p">)</span> <span class="o">*</span><span class="n">dest</span><span class="o">++=*</span><span class="n">src</span><span class="o">++</span><span class="p">;</span>
    <span class="o">*</span><span class="n">dest</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">char</span><span class="o">*</span> <span class="n">next_block</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">p</span><span class="p">){</span>
    <span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">p</span> <span class="o">!=</span> <span class="sc">&#39;:&#39;</span><span class="p">){</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!*</span><span class="n">p</span><span class="p">)</span> <span class="k">return</span> <span class="n">p</span><span class="p">;</span>
        <span class="n">p</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">p</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">repeated_zero_size</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">){</span>
    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">p</span> <span class="o">=</span> <span class="n">str</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">size</span><span class="p">;</span>

    <span class="k">while</span><span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;0&#39;</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;:&#39;</span><span class="p">)){</span>
        <span class="n">p</span><span class="o">+=</span><span class="mi">2</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">size</span> <span class="o">=</span> <span class="n">p</span> <span class="o">-</span> <span class="n">str</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">size</span> <span class="o">&gt;=</span> <span class="mi">4</span> <span class="o">?</span> <span class="n">size</span> <span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">char</span><span class="o">*</span> <span class="n">comp_zero</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">){</span>
    <span class="kt">char</span><span class="o">*</span> <span class="n">p</span> <span class="o">=</span> <span class="n">str</span><span class="p">;</span>
    <span class="kt">char</span><span class="o">*</span> <span class="n">zero_p</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">max_size</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">p</span><span class="p">){</span>
        <span class="kt">int</span> <span class="n">tmp</span> <span class="o">=</span> <span class="n">repeated_zero_size</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">tmp</span><span class="p">){</span>
            <span class="n">p</span> <span class="o">=</span> <span class="n">next_block</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!*</span><span class="n">p</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">tmp</span> <span class="o">&gt;</span> <span class="n">max_size</span><span class="p">){</span>
            <span class="n">zero_p</span> <span class="o">=</span> <span class="n">p</span><span class="p">;</span>
            <span class="n">max_size</span> <span class="o">=</span> <span class="n">tmp</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">p</span><span class="o">+=</span><span class="n">tmp</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">zero_p</span><span class="p">){</span>
        <span class="o">*</span><span class="n">zero_p</span> <span class="o">=</span> <span class="sc">&#39;:&#39;</span><span class="p">;</span>
        <span class="n">strcpy</span><span class="p">(</span><span class="n">zero_p</span><span class="o">+</span><span class="p">(</span><span class="n">zero_p</span><span class="o">==</span><span class="n">str</span> <span class="o">?</span> <span class="mi">2</span> <span class="o">:</span> <span class="mi">1</span><span class="p">),</span> <span class="n">zero_p</span><span class="o">+</span><span class="n">max_size</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">str</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">char</span><span class="o">*</span> <span class="n">remove_zero</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">){</span>
    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">p</span> <span class="o">=</span> <span class="n">str</span><span class="p">;</span>

    <span class="k">while</span><span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;0&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!=</span><span class="sc">&#39;:&#39;</span><span class="p">)</span> <span class="n">p</span><span class="o">++</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">strcpy</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">char</span><span class="o">*</span> <span class="n">remove_zero_all</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">){</span>
    <span class="kt">char</span><span class="o">*</span> <span class="n">ret</span> <span class="o">=</span> <span class="n">str</span><span class="p">;</span>

    <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span>
        <span class="n">remove_zero</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
        <span class="n">str</span> <span class="o">=</span> <span class="n">next_block</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!*</span><span class="n">str</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">char</span><span class="o">*</span> <span class="n">ipv6_compress</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">){</span>
    <span class="k">return</span> <span class="n">comp_zero</span><span class="p">(</span><span class="n">remove_zero_all</span><span class="p">(</span><span class="n">str</span><span class="p">));</span>
<span class="p">}</span>

<span class="cp">#include &lt;stdio.h&gt;</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
    <span class="kt">char</span> <span class="n">s1</span><span class="p">[]</span> <span class="o">=</span> <span class="s">&quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot;</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">s2</span><span class="p">[]</span> <span class="o">=</span> <span class="s">&quot;0000:0000:0000:0000:0000:0000:0000:0001&quot;</span><span class="p">;</span>

    <span class="n">puts</span><span class="p">(</span><span class="n">ipv6_compress</span><span class="p">(</span><span class="n">s1</span><span class="p">));</span>
    <span class="n">puts</span><span class="p">(</span><span class="n">ipv6_compress</span><span class="p">(</span><span class="n">s2</span><span class="p">));</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8370/addtag/" class="addtag" id="addtag_8370">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8370/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8370/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8370"
  >-</span><span
  class="button yellow"
  id="rating_z_8370"
  >0</span><span 
  class="button green"
  id="rating_p_8370"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8370/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8371">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/995/" target="_top">kunitake</a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8371/">#8371</a>(<script language="JavaScript">print_time(new Date("2009/01/20 07:30 GMT"));</script><noscript>2009/01/20 07:30 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>turuginaさんのコードにインスパイヤーされて。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20090612205550/http://search.cpan.org/~tmonroe/Net-IPv6Addr-0.2/IPv6Addr.pm">Net::IPv6Addr</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8
9</pre></td><td class="code"><div class="highlight"><pre>#!/usr/bin/perl

use strict;
use warnings;
use Net::IPv6Addr;
sub ipv6_compress { Net::IPv6Addr::to_string_compressed(shift) }

print ipv6_compress(&#39;1230:5670:0000:0000:0123:0000:0000:00ab&#39;), &quot;\n&quot;;
print ipv6_compress(&#39;0000:0000:0000:0000:0000:0000:0000:0001&#39;), &quot;\n&quot;;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8371/addtag/" class="addtag" id="addtag_8371">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8371/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8371/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8371"
  >-</span><span
  class="button yellow"
  id="rating_z_8371"
  >0</span><span 
  class="button green"
  id="rating_p_8371"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8371/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8374">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/127/" target="_top">raynstard</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8374/">#8374</a>(<script language="JavaScript">print_time(new Date("2009/01/20 05:41 GMT"));</script><noscript>2009/01/20 05:41 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>たいした問題ではないのかもしれないけれど
C++で書くのなら読み込むヘッダファイルはなるべく
C++のもの(c～)を利用した方がよいのではないでしょうか。
# どの程度影響あるのかはしらない。。。

#include &lt;cstdio&gt;
#include &lt;cstdlib&gt;
#include &lt;cstring&gt;

ついでにいうと unsigned short val[8]は 
#include &lt;cstdint&gt;
uint16_t  にして public にしちゃってもよい予感です。
まぁ、こちらはだいぶ僕の好みがはいっちゃっていますが(笑

# あっでも、cstdint は c++0x かだめですね。。。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8374/addtag/" class="addtag" id="addtag_8374">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8374"
  >-</span><span
  class="button yellow"
  id="rating_z_8374"
  >0</span><span 
  class="button green"
  id="rating_p_8374"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8364/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8374/root/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8374/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8376">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/124/" target="_top">tsekine</a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8376/">#8376</a>(<script language="JavaScript">print_time(new Date("2009/01/20 21:27 GMT"));</script><noscript>2009/01/20 21:27 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>言語として &quot;bash&quot; と書く以上、bash only で C 風に仕上げてみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60</pre></td><td class="code"><div class="highlight"><pre>ipv6_compress<span class="o">()</span> <span class="o">{</span>
  <span class="nb">local </span><span class="nv">saved_ifs</span><span class="o">=</span><span class="s2">&quot;$IFS&quot;</span>
  <span class="nb">local</span> -ai parsed
  <span class="nb">local</span> -i i j k min
  <span class="nb">local</span> -a compressed

  <span class="nv">IFS</span><span class="o">=</span><span class="s2">&quot;:&quot;</span>
  <span class="nv">parsed</span><span class="o">=(</span>-1 16#<span class="k">${</span><span class="nv">1</span><span class="p">//:/:</span><span class="nv">16</span><span class="p">#</span><span class="k">}</span><span class="o">)</span>

  <span class="k">for</span> <span class="o">((</span><span class="nv">i</span><span class="o">=</span>1;i&lt;8;i++<span class="o">))</span>; <span class="k">do</span>
<span class="k">    if</span> <span class="o">((</span> <span class="o">(</span>parsed<span class="o">[</span>i<span class="o">]</span>|parsed<span class="o">[</span>i+1<span class="o">])</span> <span class="o">==</span> <span class="m">0</span> <span class="o">))</span>; <span class="k">then</span>
<span class="k">      </span><span class="nb">break</span>
<span class="nb">    </span><span class="k">fi</span>
<span class="k">  done</span>

<span class="k">  if</span> <span class="o">((</span>i&lt;8<span class="o">))</span>; <span class="k">then</span>
    <span class="c"># minus value means None</span>
    parsed<span class="o">[</span>9<span class="o">]=</span>-1
    <span class="k">for</span> <span class="o">((</span><span class="nv">j</span><span class="o">=</span>i+1;j&lt;<span class="o">=</span>8, parsed<span class="o">[</span>j+1<span class="o">]==</span>0;++j<span class="o">))</span>; <span class="k">do</span>
      :
    <span class="k">done</span>
<span class="k">    </span>parsed<span class="o">[</span>i<span class="o">]=</span>-1
    <span class="k">if</span> <span class="o">((</span>j&gt;<span class="o">=</span>8<span class="o">))</span>; <span class="k">then</span>
      :
    <span class="k">else</span>
<span class="k">      </span><span class="nb">unset </span>parsed<span class="o">[</span>9<span class="o">]</span>
    <span class="k">fi</span>

<span class="k">    for</span> <span class="o">((</span><span class="nv">k</span><span class="o">=</span>i+1;k&lt;<span class="o">=</span>j;k++<span class="o">))</span>; <span class="k">do</span>
<span class="k">      </span><span class="nb">unset </span>parsed<span class="o">[</span>k<span class="o">]</span>
    <span class="k">done</span>
<span class="k">  fi</span>

<span class="k">  if</span> <span class="o">((</span>i!<span class="o">=</span>1<span class="o">))</span>; <span class="k">then</span>
<span class="k">    </span><span class="nb">unset </span>parsed<span class="o">[</span>0<span class="o">]</span>
  <span class="k">fi</span>

<span class="k">  for </span>k in <span class="k">${</span><span class="p">!parsed[@]</span><span class="k">}</span>; <span class="k">do</span>
<span class="k">    if</span> <span class="o">((</span>parsed<span class="o">[</span>k<span class="o">]</span>&gt;<span class="o">=</span>0<span class="o">))</span>; <span class="k">then</span>
<span class="k">      </span>compressed<span class="o">[</span>k<span class="o">]=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s2">&quot;%x&quot;</span> <span class="k">${</span><span class="nv">parsed</span><span class="p">[k]</span><span class="k">})</span>
    <span class="k">else</span>
<span class="k">      </span>compressed<span class="o">[</span>k<span class="o">]=</span><span class="s2">&quot;&quot;</span>
    <span class="k">fi</span>
<span class="k">  done</span>

<span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;${compressed[*]}&quot;</span>
  <span class="nv">IFS</span><span class="o">=</span><span class="s2">&quot;$saved_ifs&quot;</span>
<span class="o">}</span>

<span class="nv">test_args</span><span class="o">=</span><span class="s2">&quot;1230:5670:0000:0000:0123:0000:0000:00ab</span>
<span class="s2">           1111:2222:3333:4444:5555:6666:7777:0000</span>
<span class="s2">           0000:1111:2222:3333:4444:5555:6666:7777</span>
<span class="s2">           0000:0000:0000:0000:0000:0000:0000:0000</span>
<span class="s2">           0000:0000:0000:0000:0000:0000:0000:0001</span>
<span class="s2">           0001:0000:0000:0000:0000:0000:0000:0000&quot;</span>

<span class="k">while </span><span class="nb">read </span>line; <span class="k">do</span>
<span class="k">  </span><span class="nv">result</span><span class="o">=</span><span class="k">$(</span>ipv6_compress <span class="s2">&quot;$line&quot;</span><span class="k">)</span>
  <span class="nb">echo</span> <span class="s2">&quot;$line =&gt; &#39;$result&#39;&quot;</span>
<span class="k">done</span> &lt;&lt;&lt; <span class="s2">&quot;$test_args&quot;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8376/addtag/" class="addtag" id="addtag_8376">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8376/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8376/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8376"
  >-</span><span
  class="button yellow"
  id="rating_z_8376"
  >0</span><span 
  class="button green"
  id="rating_p_8376"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8376/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8381">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/994/" target="_top">creeper</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8381/">#8381</a>(<script language="JavaScript">print_time(new Date("2009/01/22 00:30 GMT"));</script><noscript>2009/01/22 00:30 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>#8339を参考に。
#8340は000[1-9]: で始まるアドレスが圧縮できないと思います。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">re</span>

<span class="k">def</span> <span class="nf">ipv6_compress</span><span class="p">(</span><span class="n">ip</span><span class="p">):</span>
    <span class="k">print</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">&#39;(^|:)0(:0)+(:|$)&#39;</span><span class="p">,</span> <span class="s">&#39;::&#39;</span><span class="p">,</span> <span class="s">&#39;:&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%x</span><span class="s">&#39;</span><span class="o">%</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="mi">16</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">ip</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;:&#39;</span><span class="p">)),</span><span class="mi">1</span><span class="p">)</span>


<span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&#39;1230:5670:0000:0000:0123:0000:0000:00ab&#39;</span><span class="p">)</span>
<span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&#39;0000:0000:0000:0000:0000:0000:0000:0001&#39;</span><span class="p">)</span>
<span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&#39;0001:0000:0000:0000:0000:0000:0000:0001&#39;</span><span class="p">)</span>
<span class="n">ipv6_compress</span><span class="p">(</span><span class="s">&#39;0001:0000:0000:0000:0000:0000:0000:0000&#39;</span><span class="p">)</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8381/addtag/" class="addtag" id="addtag_8381">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8381/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8381/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8381"
  >-</span><span
  class="button yellow"
  id="rating_z_8381"
  >0</span><span 
  class="button green"
  id="rating_p_8381"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8381/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8383">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/98/" target="_top">nobsun</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8383/">#8383</a>(<script language="JavaScript">print_time(new Date("2009/01/22 01:15 GMT"));</script><noscript>2009/01/22 01:15 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>細かいところがけっこう面倒なことになってしまいました。美しくないですがとりあえず。

実行例
*Main&gt; :main
1230:5670:0000:0000:0123:0000:0000:00ab ==&gt; 1230:5670::123:0:0:ab
0000:0000:0000:0000:0000:0000:0000:0001 ==&gt; ::1
0000:0000:000a:0000:0000:0000:0000:0000 ==&gt; 0:0:a::
0000:0000:0000:0000:0000:0000:0000:0000 ==&gt; ::

</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48</pre></td><td class="code"><div class="highlight"><pre><span class="nv">compress</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">compress</span> <span class="o">=</span> <span class="nv">showAbbr</span> <span class="o">.</span> <span class="nv">grouping</span> <span class="o">.</span> <span class="nv">split</span>

<span class="nv">showAbbr</span> <span class="o">::</span> <span class="p">[</span><span class="n">Either</span> <span class="n">Int</span> <span class="n">String</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="n">String</span>
<span class="nv">showAbbr</span> <span class="nv">e</span> <span class="o">=</span> <span class="nv">xs</span>
  <span class="kr">where</span> 
    <span class="p">(</span><span class="nv">m</span><span class="p">,</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">f</span> <span class="n">True</span> <span class="n">True</span> <span class="nv">e</span>
    <span class="nv">f</span> <span class="kr">_</span> <span class="nv">b</span> <span class="p">[]</span>            <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">)</span>
    <span class="nv">f</span> <span class="kr">_</span> <span class="nv">b</span> <span class="p">(</span><span class="n">Right</span> <span class="nv">x</span> <span class="o">:</span><span class="p">[])</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="sc">&#39;:&#39;</span><span class="o">:</span><span class="nv">x</span><span class="p">)</span>
    <span class="nv">f</span> <span class="nv">t</span> <span class="nv">b</span> <span class="p">(</span><span class="n">Left</span>  <span class="nv">k</span> <span class="o">:</span><span class="p">[])</span> <span class="o">=</span> <span class="p">(</span><span class="nv">k</span><span class="p">,</span><span class="kr">if</span> <span class="nv">b</span> <span class="kr">then</span> <span class="s">&quot;::&quot;</span> <span class="kr">else</span> <span class="s">&quot;:0&quot;</span><span class="p">)</span>
    <span class="nv">f</span> <span class="nv">t</span> <span class="nv">b</span> <span class="p">(</span><span class="n">Right</span> <span class="nv">x</span> <span class="o">:</span><span class="nv">ys</span><span class="p">)</span> 
      <span class="o">=</span> <span class="kr">case</span> <span class="nv">f</span> <span class="n">False</span> <span class="nv">b</span> <span class="nv">ys</span> <span class="kr">of</span>
          <span class="p">(</span><span class="nv">n</span><span class="p">,</span><span class="nv">zs</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">n</span><span class="p">,</span><span class="nv">foldr</span> <span class="p">(</span><span class="o">:</span><span class="p">)</span> <span class="nv">zs</span> <span class="p">(</span><span class="kr">if</span> <span class="nv">t</span> <span class="kr">then</span> <span class="nv">x</span> <span class="kr">else</span> <span class="sc">&#39;:&#39;</span><span class="o">:</span><span class="nv">x</span><span class="p">))</span>
    <span class="nv">f</span> <span class="nv">t</span> <span class="nv">b</span> <span class="p">(</span><span class="n">Left</span>  <span class="nv">k</span> <span class="o">:</span><span class="nv">ys</span><span class="p">)</span>
      <span class="o">=</span> <span class="kr">let</span> <span class="nv">b&#39;</span> <span class="o">=</span> <span class="nv">m</span> <span class="o">==</span> <span class="nv">k</span>
        <span class="kr">in</span> <span class="kr">case</span> <span class="nv">f</span> <span class="n">False</span> <span class="p">(</span><span class="nv">not</span> <span class="nv">b&#39;</span><span class="p">)</span> <span class="nv">ys</span> <span class="kr">of</span>
             <span class="p">(</span><span class="nv">n</span><span class="p">,</span><span class="nv">zs</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">max</span> <span class="nv">k</span> <span class="nv">n</span>
                       <span class="p">,</span><span class="kr">let</span> <span class="nv">zs&#39;</span> <span class="o">=</span> <span class="nv">foldr</span> <span class="p">(</span><span class="o">++</span><span class="p">)</span> <span class="nv">zs</span> <span class="p">(</span><span class="nv">replicate</span> <span class="nv">k</span> <span class="s">&quot;:0&quot;</span><span class="p">)</span>
                        <span class="kr">in</span> <span class="kr">if</span> <span class="nv">b</span> <span class="o">&amp;&amp;</span> <span class="nv">b&#39;</span> <span class="kr">then</span> <span class="sc">&#39;:&#39;</span><span class="o">:</span><span class="nv">zs</span>
                           <span class="kr">else</span> <span class="kr">if</span> <span class="nv">t</span> <span class="kr">then</span> <span class="nv">tail</span> <span class="nv">zs&#39;</span> <span class="kr">else</span> <span class="nv">zs&#39;</span><span class="p">)</span>

<span class="nv">grouping</span> <span class="o">::</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">Either</span> <span class="n">Int</span> <span class="n">String</span><span class="p">]</span>
<span class="nv">grouping</span> <span class="p">[]</span> <span class="o">=</span> <span class="p">[]</span>
<span class="nv">grouping</span> <span class="p">(</span><span class="s">&quot;&quot;</span><span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">grouping</span> <span class="nv">xs</span> <span class="kr">of</span>
                     <span class="n">Left</span> <span class="nv">k</span><span class="o">:</span><span class="nv">ys</span> <span class="o">-&gt;</span> <span class="n">Left</span> <span class="p">(</span><span class="nv">k</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nv">ys</span>
                     <span class="nv">zs</span>        <span class="o">-&gt;</span> <span class="n">Left</span> <span class="mi">1</span><span class="o">:</span><span class="nv">zs</span>
<span class="nv">grouping</span> <span class="p">(</span><span class="nv">x</span> <span class="o">:</span><span class="nv">xs</span><span class="p">)</span> <span class="o">=</span> <span class="n">Right</span> <span class="nv">x</span> <span class="o">:</span> <span class="nv">grouping</span> <span class="nv">xs</span>

<span class="nv">split</span> <span class="o">::</span> <span class="n">String</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
<span class="nv">split</span> <span class="s">&quot;&quot;</span> <span class="o">=</span> <span class="p">[]</span>
<span class="nv">split</span> <span class="nv">xs</span> <span class="o">=</span> <span class="kr">case</span> <span class="nv">break</span> <span class="p">(</span><span class="sc">&#39;:&#39;</span><span class="o">==</span><span class="p">)</span> <span class="nv">xs</span> <span class="kr">of</span>
  <span class="p">(</span><span class="nv">ys</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">)</span>   <span class="o">-&gt;</span> <span class="nv">dropWhile</span> <span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">==</span><span class="p">)</span> <span class="nv">ys</span><span class="o">:</span><span class="p">[]</span>
  <span class="p">(</span><span class="nv">ys</span><span class="p">,</span><span class="kr">_</span><span class="o">:</span><span class="nv">zs</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">dropWhile</span> <span class="p">(</span><span class="sc">&#39;0&#39;</span><span class="o">==</span><span class="p">)</span> <span class="nv">ys</span><span class="o">:</span><span class="nv">split</span> <span class="nv">zs</span>

<span class="kr">if</span><span class="sc">&#39; :: Bool -&gt; a -&gt; a -&gt; a</span>
<span class="sc">if&#39;</span> <span class="o">=</span> <span class="nv">toBoole</span>
<span class="nv">toBoole</span> <span class="n">True</span>  <span class="o">=</span> <span class="nv">const</span>
<span class="nv">toBoole</span> <span class="n">False</span> <span class="o">=</span> <span class="nv">flip</span> <span class="nv">const</span>

<span class="c1">------------------------------------------------------------------------------</span>

<span class="nv">sample</span> <span class="mi">1</span> <span class="o">=</span> <span class="s">&quot;1230:5670:0000:0000:0123:0000:0000:00ab&quot;</span>
<span class="nv">sample</span> <span class="mi">2</span> <span class="o">=</span> <span class="s">&quot;0000:0000:0000:0000:0000:0000:0000:0001&quot;</span>
<span class="nv">sample</span> <span class="mi">3</span> <span class="o">=</span> <span class="s">&quot;0000:0000:000a:0000:0000:0000:0000:0000&quot;</span>
<span class="nv">sample</span> <span class="mi">4</span> <span class="o">=</span> <span class="s">&quot;0000:0000:0000:0000:0000:0000:0000:0000&quot;</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">mapM_</span> <span class="p">(</span><span class="nv">putStrLn</span> <span class="o">.</span> <span class="nv">disp</span> <span class="o">.</span> <span class="nv">sample</span><span class="p">)</span> <span class="p">[</span><span class="mi">1</span><span class="o">..</span><span class="mi">4</span><span class="p">]</span>
<span class="nv">disp</span> <span class="nv">s</span> <span class="o">=</span> <span class="nv">s</span> <span class="o">++</span> <span class="s">&quot; ==&gt; &quot;</span> <span class="o">++</span> <span class="nv">compress</span> <span class="nv">s</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8383/addtag/" class="addtag" id="addtag_8383">タグ</a>:
	
    
    <a href="/web/20090612205550/http://ja.doukaku.org/tag/ghc-6.10.1/">ghc-6.10.1</a>
    
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8383/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8383/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8383"
  >-</span><span
  class="button yellow"
  id="rating_z_8383"
  >0</span><span 
  class="button green"
  id="rating_p_8383"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8383/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8389">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/304/" target="_top">[1..100]&gt;&gt;=pen</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8389/">#8389</a>(<script language="JavaScript">print_time(new Date("2009/01/23 10:27 GMT"));</script><noscript>2009/01/23 10:27 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre><span class="nv">ipv6Compress</span> <span class="nv">xs</span> <span class="o">=</span> <span class="nv">concat</span> <span class="o">$</span> <span class="p">(</span><span class="nv">take</span> <span class="mi">2</span> <span class="o">=&lt;&lt;</span><span class="p">)</span>
  <span class="o">$</span> <span class="nv">group</span> <span class="o">$</span> <span class="nv">concat</span> <span class="o">$</span> <span class="nv">intersperse</span> <span class="p">[</span><span class="s">&quot;:&quot;</span><span class="p">]</span>
  <span class="o">$</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">maybe</span> <span class="p">[</span><span class="s">&quot;:&quot;</span><span class="p">,</span><span class="s">&quot;:&quot;</span><span class="p">]</span> <span class="p">((</span><span class="o">:</span><span class="p">[])</span><span class="o">.</span><span class="p">(</span><span class="o">$</span><span class="s">&quot;&quot;</span><span class="p">)</span><span class="o">.</span><span class="nv">showHex</span><span class="p">))</span>
  <span class="o">$</span> <span class="nv">snd</span> <span class="o">=&lt;&lt;</span> <span class="nv">cs</span> <span class="o">++</span> <span class="p">[(</span><span class="mi">0</span><span class="p">,[</span><span class="n">Nothing</span><span class="p">])]</span> <span class="o">++</span> <span class="nv">ds</span>  <span class="kr">where</span>
  <span class="nv">ys</span> <span class="o">=</span> <span class="nv">map</span> <span class="p">(</span><span class="o">\</span><span class="nv">ts</span> <span class="o">-&gt;</span> <span class="p">(</span><span class="nv">length</span> <span class="nv">ts</span><span class="p">,</span> <span class="nv">map</span> <span class="n">Just</span> <span class="nv">ts</span><span class="p">))</span>
    <span class="o">$</span> <span class="nv">groupBy</span> <span class="p">(</span><span class="o">\</span><span class="nv">a</span> <span class="nv">b</span> <span class="o">-&gt;</span> <span class="nv">a</span><span class="o">==</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nv">b</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
    <span class="o">$</span> <span class="nv">map</span> <span class="p">(</span><span class="nv">fst</span><span class="o">.</span><span class="nv">head</span><span class="o">.</span><span class="nv">readHex</span><span class="p">)</span> <span class="o">$</span> <span class="nv">words</span>
    <span class="o">$</span> <span class="nv">map</span> <span class="p">(</span><span class="o">\</span><span class="nv">c</span> <span class="o">-&gt;</span> <span class="kr">if</span> <span class="nv">c</span> <span class="o">==</span> <span class="sc">&#39;:&#39;</span> <span class="kr">then</span> <span class="sc">&#39; &#39;</span> <span class="kr">else</span> <span class="nv">c</span><span class="p">)</span> <span class="nv">xs</span>
  <span class="nv">m</span> <span class="o">=</span> <span class="nv">maximum</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">fst</span> <span class="nv">ys</span>
  <span class="p">(</span><span class="nv">cs</span><span class="p">,</span><span class="kr">_</span><span class="o">:</span><span class="nv">ds</span><span class="p">)</span> <span class="o">=</span> <span class="nv">span</span> <span class="p">((</span><span class="o">&lt;</span><span class="nv">m</span><span class="p">)</span><span class="o">.</span><span class="nv">fst</span><span class="p">)</span> <span class="nv">ys</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8389/addtag/" class="addtag" id="addtag_8389">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8389/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8389/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8389"
  >-</span><span
  class="button yellow"
  id="rating_z_8389"
  >0</span><span 
  class="button green"
  id="rating_p_8389"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8389/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8391">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/1000/" target="_top">matori</a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8391/">#8391</a>(<script language="JavaScript">print_time(new Date("2009/01/24 10:09 GMT"));</script><noscript>2009/01/24 10:09 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/sed/">
	  sed
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>初投稿。
関数ではありませんがsedで。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7
8</pre></td><td class="code"><div class="highlight"><pre>$ cat ipv6addr-example* ; cat ipv6addr-example* 
　　| sed &quot;s/00*\([0-9a-f]\)/\1/g; s/^0//; s/\(:\)0:0\(:0\)*/::/; s/:::/::/&quot;
1230:5670:0000:0000:0123:0000:0000:00ab
0000:0000:0000:0000:0000:0000:0000:0001
0001:0000:0000:0000:0000:0000:0000:0000
1230:5670::123:0:0:ab
::1
1::
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8391/addtag/" class="addtag" id="addtag_8391">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/sed/">
		sed
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8391/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8391/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8391"
  >-</span><span
  class="button yellow"
  id="rating_z_8391"
  >0</span><span 
  class="button green"
  id="rating_p_8391"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8391/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8429">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/729/" target="_top">t_noborio</a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8429/">#8429</a>(<script language="JavaScript">print_time(new Date("2009/02/01 18:36 GMT"));</script><noscript>2009/02/01 18:36 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>creeperさんのご指摘の通り動作しなかったので修正しました</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre>import re

def ipv6_compress(ip):
    return re.sub(&quot;(^|:)0(:0)+&quot;, &quot;:&quot;, &quot;:&quot;.join(
            [x for x in re.split(&quot;(?:^0{,3}|:0{,3})&quot;, ip) if x != &#39;&#39;]), 1)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8429/addtag/" class="addtag" id="addtag_8429">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8429/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8429/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8429"
  >-</span><span
  class="button yellow"
  id="rating_z_8429"
  >0</span><span 
  class="button green"
  id="rating_p_8429"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8340/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090612205550/http://ja.doukaku.org/comment/8429/root/"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8429/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8500">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/840/" target="_top">leque</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8500/">#8500</a>(<script language="JavaScript">print_time(new Date("2009/02/13 14:13 GMT"));</script><noscript>2009/02/13 14:13 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>場当たり的で美しくないですが。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">import</span> <span class="p">(</span><span class="nf">rnrs</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">srfi</span> <span class="nv">:13</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">srfi</span> <span class="nv">:14</span><span class="p">)</span>
        <span class="p">(</span><span class="nf">srfi</span> <span class="nv">:26</span><span class="p">))</span>

<span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">ipv6-compress</span> <span class="nv">str</span><span class="p">)</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">f</span> <span class="nv">xs</span><span class="p">)</span>
    <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">xs</span> <span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nf">i</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">n</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">pos</span> <span class="no">#f</span><span class="p">)</span> <span class="p">(</span><span class="nf">m</span> <span class="mi">0</span><span class="p">))</span>
      <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nb">null? </span><span class="nv">xs</span><span class="p">)</span> <span class="nv">pos</span><span class="p">)</span>
            <span class="p">((</span><span class="nf">string-null?</span> <span class="p">(</span><span class="nb">car </span><span class="nv">xs</span><span class="p">))</span>
             <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)</span> <span class="nv">i</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">n</span> <span class="mi">1</span><span class="p">)</span> <span class="nv">pos</span> <span class="nv">m</span><span class="p">))</span>
            <span class="p">(</span><span class="nf">else</span>
             <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">)</span> <span class="mi">0</span> <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">&gt; </span><span class="nv">n</span> <span class="nv">m</span><span class="p">)</span> <span class="nv">i</span> <span class="nv">pos</span><span class="p">)</span> <span class="p">(</span><span class="nb">max </span><span class="nv">m</span> <span class="nv">n</span><span class="p">))))))</span>
  <span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">g</span> <span class="nv">xs</span> <span class="nv">n</span><span class="p">)</span>
    <span class="p">(</span><span class="k">let </span><span class="nv">loop</span> <span class="p">((</span><span class="nf">xs</span> <span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nf">i</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nf">rs</span> <span class="o">&#39;</span><span class="p">()))</span>
      <span class="p">(</span><span class="k">cond </span><span class="p">((</span><span class="nb">null? </span><span class="nv">xs</span><span class="p">)</span>
             <span class="p">(</span><span class="nb">reverse </span><span class="nv">rs</span><span class="p">))</span>
            <span class="p">((</span><span class="nf">string-null?</span> <span class="p">(</span><span class="nb">car </span><span class="nv">xs</span><span class="p">))</span>
             <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="k">and </span><span class="nv">n</span> <span class="p">(</span><span class="nb">= </span><span class="nv">i</span> <span class="nv">n</span><span class="p">))</span>
                 <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)</span> <span class="nv">i</span> <span class="nv">rs</span><span class="p">)</span>
                 <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)</span> <span class="nv">i</span> <span class="p">(</span><span class="nb">cons </span><span class="s">&quot;0&quot;</span> <span class="nv">rs</span><span class="p">))))</span>
            <span class="p">(</span><span class="nf">else</span>
             <span class="p">(</span><span class="nf">loop</span> <span class="p">(</span><span class="nb">cdr </span><span class="nv">xs</span><span class="p">)</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">)</span>
                   <span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="k">and </span><span class="nv">n</span> <span class="p">(</span><span class="nb">= </span><span class="nv">i</span> <span class="nv">n</span><span class="p">))</span>
                       <span class="p">(</span><span class="nf">cons*</span> <span class="p">(</span><span class="nb">car </span><span class="nv">xs</span><span class="p">)</span> <span class="s">&quot;:&quot;</span> <span class="nv">rs</span><span class="p">)</span>
                       <span class="p">(</span><span class="nb">cons </span><span class="p">(</span><span class="nb">car </span><span class="nv">xs</span><span class="p">)</span> <span class="nv">rs</span><span class="p">)))))))</span>
  <span class="p">(</span><span class="k">let* </span><span class="p">((</span><span class="nf">ws</span> <span class="p">(</span><span class="nb">map </span><span class="p">(</span><span class="nf">cut</span> <span class="nv">string-trim</span> <span class="nv">&lt;&gt;</span> <span class="sc">#\0</span><span class="p">)</span>
                  <span class="p">(</span><span class="nf">string-tokenize</span> <span class="nv">str</span> <span class="nv">char-set:hex-digit</span><span class="p">)))</span>
         <span class="p">(</span><span class="nf">n</span> <span class="p">(</span><span class="nf">f</span> <span class="nv">ws</span><span class="p">))</span>
         <span class="p">(</span><span class="nf">ws*</span> <span class="p">(</span><span class="nf">g</span> <span class="nv">ws</span> <span class="nv">n</span><span class="p">)))</span>
    <span class="p">(</span><span class="nf">call-with-string-output-port</span>
      <span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">p</span><span class="p">)</span>
        <span class="p">(</span><span class="nb">display </span><span class="p">(</span><span class="nb">car </span><span class="nv">ws*</span><span class="p">)</span> <span class="nv">p</span><span class="p">)</span>
        <span class="p">(</span><span class="nb">for-each </span><span class="p">(</span><span class="k">lambda </span><span class="p">(</span><span class="nf">w</span><span class="p">)</span>
                    <span class="p">(</span><span class="nf">unless</span> <span class="p">(</span><span class="nb">string=? </span><span class="nv">w</span> <span class="s">&quot;:&quot;</span><span class="p">)</span>
                      <span class="p">(</span><span class="nb">display </span><span class="s">&quot;:&quot;</span> <span class="nv">p</span><span class="p">))</span>
                    <span class="p">(</span><span class="nb">display </span><span class="nv">w</span> <span class="nv">p</span><span class="p">))</span>
                  <span class="p">(</span><span class="nb">cdr </span><span class="nv">ws*</span><span class="p">))))))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8500/addtag/" class="addtag" id="addtag_8500">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8500/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8500/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8500"
  >-</span><span
  class="button yellow"
  id="rating_z_8500"
  >0</span><span 
  class="button green"
  id="rating_p_8500"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8500/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8722">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/646/" target="_top">silverwire</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8722/">#8722</a>(<script language="JavaScript">print_time(new Date("2009/03/25 06:03 GMT"));</script><noscript>2009/03/25 06:03 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/bat/">
	  Batchfile
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>バッチで。

  e.g.
    C:\&gt;226.bat 1230:5670:0000:0000:0123:0000:0000:00ab
    1230:5670::123:0:0:ab
    
    C:\&gt;226.bat 0000:0000:0000:0000:0000:0000:0000:0001
    ::1</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62</pre></td><td class="code"><div class="highlight"><pre>@echo off
  setlocal enabledelayedexpansion
    set #=0
    set i=0
    set t=
    set v=%~1
    
    if &quot;%v%&quot; == &quot;&quot; (echo usage: %~n0 IPV6_ADDRESS &gt;&amp;2) &amp; exit /b 1
    
    for %%v in (%v::= %) do (
      set /a #+=1
      set v[!#!]=%%v
    )
    
    if %#% lss 8 (echo usage: %~n0 IPV6_ADDRESS &gt;&amp;2) &amp; exit /b 1
    
    for /l %%i in (1,1,%#%) do (
      set /a x=0x!v[%%i]!
      call :X !x! v[%%i]
    )
    
    for /l %%i in (1,1,%#%) do (
      if !v[%%i]! equ 0 (set i=%%i) &amp; goto BREAK_1
      if %%i gtr 1 set t=!t!:
      set t=!t!!v[%%i]!
    )
    :BREAK_1
    
    for /l %%i in (%i%,1,%#%) do (
      if !v[%%i]! neq 0 goto BREAK_2
      set i=%%i
    )
    :BREAK_2
    
    if %i% gtr 0 (
      set t=!t!:
      if %i% equ %#% (
        set t=!t!:
      ) else (
        set /a i+=1
        for /l %%i in (!i!,1,%#%) do set t=!t!:!v[%%i]!
      )
    )
    
    echo %t%
  endlocal &amp; exit /b 0
goto :EOF

:X
  setlocal enabledelayedexpansion
    set m=
    set q=%~1
    set t=
    set x=0123456789abcdef
    
    :_
      set /a m=%q%%%16
      set /a q=%q%/16
      set t=!x:~%m%,1!%t%
    if %q% gtr 0 goto _
  endlocal &amp; set %~2=%t%
goto :EOF
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8722/addtag/" class="addtag" id="addtag_8722">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/bat/">
		Batchfile
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8722/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8722/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8722"
  >-</span><span
  class="button yellow"
  id="rating_z_8722"
  >0</span><span 
  class="button green"
  id="rating_p_8722"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8722/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8727">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090612205550/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8727/">#8727</a>(<script language="JavaScript">print_time(new Date("2009/03/26 01:02 GMT"));</script><noscript>2009/03/26 01:02 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Linuxで動きます。普通にライブラリ（？）を使いました。inet_ntopが必ず短縮したものを返すかどうかmanには記載されていませんでしたが、私のLinux(gcc 4.3.0)では短縮されています。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;netinet/in.h&gt;</span>
<span class="cp">#include &lt;arpa/inet.h&gt;</span>

<span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="nf">ipv6_compress</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">bufferSize</span><span class="p">)</span>
<span class="p">{</span>
        <span class="k">struct</span> <span class="n">in6_addr</span> <span class="n">addr</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">inet_pton</span><span class="p">(</span><span class="n">AF_INET6</span><span class="p">,</span><span class="n">str</span><span class="p">,</span><span class="o">&amp;</span><span class="n">addr</span><span class="p">)</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="n">inet_ntop</span><span class="p">(</span><span class="n">AF_INET6</span><span class="p">,</span><span class="o">&amp;</span><span class="n">addr</span><span class="p">,</span><span class="n">buffer</span><span class="p">,</span><span class="n">bufferSize</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">buffer</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="nf">ipv6_uncompress</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">bufferSize</span><span class="p">)</span>
<span class="p">{</span>
        <span class="k">struct</span> <span class="n">in6_addr</span> <span class="n">addr</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">inet_pton</span><span class="p">(</span><span class="n">AF_INET6</span><span class="p">,</span><span class="n">str</span><span class="p">,</span><span class="o">&amp;</span><span class="n">addr</span><span class="p">)</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="kt">int</span> <span class="n">pos</span><span class="p">,</span><span class="n">writesize</span><span class="p">;</span>
                <span class="k">for</span> <span class="p">(</span><span class="n">pos</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">writesize</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">pos</span> <span class="o">&lt;</span> <span class="mi">16</span> <span class="o">&amp;&amp;</span> <span class="n">writesize</span> <span class="o">&lt;</span> <span class="n">bufferSize</span><span class="p">;</span> <span class="n">pos</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                        <span class="n">writesize</span> <span class="o">+=</span> <span class="n">sprintf</span><span class="p">(</span><span class="n">buffer</span><span class="o">+</span><span class="n">writesize</span><span class="p">,</span><span class="s">&quot;%02x&quot;</span><span class="p">,</span><span class="n">addr</span><span class="p">.</span><span class="n">s6_addr</span><span class="p">[</span><span class="n">pos</span><span class="p">]);</span>
                        <span class="k">if</span> <span class="p">((</span><span class="n">pos</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
                                <span class="n">buffer</span><span class="p">[</span><span class="n">writesize</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;:&#39;</span><span class="p">;</span>
                        <span class="p">}</span>
                <span class="p">}</span>
                <span class="n">buffer</span><span class="p">[</span><span class="n">writesize</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">buffer</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
        <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="n">INET6_ADDRSTRLEN</span><span class="p">];</span>
        <span class="n">puts</span><span class="p">(</span><span class="n">ipv6_compress</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="n">buffer</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">buffer</span><span class="p">)));</span>
        <span class="n">puts</span><span class="p">(</span><span class="n">ipv6_uncompress</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="n">buffer</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">buffer</span><span class="p">)));</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8727/addtag/" class="addtag" id="addtag_8727">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8727/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8727/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8727"
  >-</span><span
  class="button yellow"
  id="rating_z_8727"
  >0</span><span 
  class="button green"
  id="rating_p_8727"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8727/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8921">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/813/" target="_top">lunlumo</a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8921/">#8921</a>(<script language="JavaScript">print_time(new Date("2009/05/08 13:07 GMT"));</script><noscript>2009/05/08 13:07 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>　行けてないかもですが...。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17</pre></td><td class="code"><div class="highlight"><pre>object CompressIpv6Address {
    def compress(s:String):String = s.split(&#39;:&#39;).map(
            e =&gt; e.take(e.size - 1).dropWhile(_ == &#39;0&#39;).mkString(&quot;&quot;) + e.last
        ).mkString(&quot;:&quot;).replaceFirst(&quot;(^|:)0(:0)+(:|$)&quot;, &quot;::&quot;)
    def decompress(s:String):String =
        (s.split(&quot;::&quot;, 2) match {
            case Array(a) =&gt; a
            case Array(h,t) =&gt; (
                h::List.make(8 - s.split(&quot;::?&quot;).filter(_.size &gt; 0).size, &quot;0&quot;):::List(t)
            ).filter(_.size &gt; 0).mkString(&quot;:&quot;)
        }).split(&quot;:&quot;).map(e =&gt; &quot;0&quot; * (4 - e.length) + e).mkString(&quot;:&quot;)
    def main(args:Array[String]):Unit = args match {
            case Array(a) =&gt; println(compress(a))
            case Array(&quot;-d&quot;, a) =&gt; println(decompress(a))
            case _ =&gt; println(&quot;usage: CompressIpv6Address [-d] ADDRESS&quot;)
        }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/8921/addtag/" class="addtag" id="addtag_8921">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8921/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/8921/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8921"
  >-</span><span
  class="button yellow"
  id="rating_z_8921"
  >0</span><span 
  class="button green"
  id="rating_p_8921"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/8921/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9038">
  <p class="banner"><a href="/web/20090612205550/http://ja.doukaku.org/user/763/" target="_top">Songmu</a>

	
	&nbsp;
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/9038/">#9038</a>(<script language="JavaScript">print_time(new Date("2009/06/02 22:03 GMT"));</script><noscript>2009/06/02 22:03 GMT</noscript>)
	
	
	
	[<a href="/web/20090612205550/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35</pre></td><td class="code"><div class="highlight"><pre><span class="k">sub </span><span class="nf">compress_ipv6</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$ipv6</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">return</span> <span class="k">unless</span> <span class="nv">$ipv6</span> <span class="o">=~</span><span class="sr"> /^(?:[0-9a-fA-F]{4}:){7}[0-9a-fA-F]{4}$/</span><span class="p">;</span>
    
    <span class="k">my</span> <span class="nv">@sections</span> <span class="o">=</span> <span class="nb">split</span> <span class="s">&#39;:&#39;</span><span class="p">,</span><span class="nv">$ipv6</span><span class="p">;</span>
    <span class="sr">s/^0{1,3}//</span> <span class="k">for</span> <span class="nv">@sections</span><span class="p">;</span>
    <span class="nv">$ipv6</span> <span class="o">=</span> <span class="nb">join</span> <span class="s">&#39;:&#39;</span><span class="p">,</span><span class="nv">@sections</span><span class="p">;</span>
    <span class="nv">$ipv6</span> <span class="o">=~</span> <span class="sr">s/(:0){2,}/:/</span><span class="p">;</span>
    <span class="nv">$ipv6</span> <span class="o">=~</span> <span class="sr">s/^0::/::/</span><span class="p">;</span>
    <span class="k">return</span> <span class="nv">$ipv6</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">sub </span><span class="nf">expand_ipv6</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$ipv6</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">return</span> <span class="k">if</span> <span class="nv">$ipv6</span> <span class="o">=~</span><span class="sr"> /[^0-9a-fA-F:]/</span><span class="p">;</span>
    <span class="k">return</span> <span class="k">if</span> <span class="nv">$ipv6</span> <span class="o">=~</span><span class="sr"> /[0-9a-fA-F]{5}/</span><span class="p">;</span>
    
    <span class="k">if</span><span class="p">(</span><span class="nv">$ipv6</span> <span class="o">=~</span><span class="sr"> /::/</span><span class="p">){</span>
        <span class="nv">$ipv6</span> <span class="o">=~</span> <span class="sr">s/^0::/::/</span><span class="p">;</span>
        <span class="nv">$ipv6</span> <span class="o">=~</span> <span class="sr">s/::0$/::/</span><span class="p">;</span>
        <span class="k">my</span> <span class="nv">$cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="nv">$cnt</span><span class="o">++</span> <span class="k">while</span> <span class="nv">$ipv6</span> <span class="o">=~</span><span class="sr"> /:/g</span><span class="p">;</span>
        <span class="nv">$cnt</span> <span class="o">=</span> <span class="mi">8</span> <span class="o">-</span> <span class="nv">$cnt</span><span class="p">;</span>
        <span class="k">my</span> <span class="nv">$replace_str</span> <span class="o">=</span> <span class="s">&#39;:0&#39;</span><span class="n">x</span><span class="nv">$cnt</span> <span class="o">.</span> <span class="s">&#39;:&#39;</span><span class="p">;</span>
        <span class="nv">$ipv6</span> <span class="o">=~</span> <span class="sr">s/::/$replace_str/</span><span class="p">;</span>
        <span class="nv">$ipv6</span> <span class="o">.=</span> <span class="s">&#39;0&#39;</span>        <span class="k">if</span> <span class="nv">$ipv6</span> <span class="o">=~</span><span class="sr"> /:$/</span><span class="p">;</span>
        <span class="nv">$ipv6</span> <span class="o">=</span> <span class="s">&#39;0&#39;</span> <span class="o">.</span> <span class="nv">$ipv6</span> <span class="k">if</span> <span class="nv">$ipv6</span> <span class="o">=~</span><span class="sr"> /^:/</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">my</span> <span class="nv">@sections</span> <span class="o">=</span> <span class="nb">split</span> <span class="s">&#39;:&#39;</span><span class="p">,</span><span class="nv">$ipv6</span><span class="p">;</span>
    <span class="k">return</span> <span class="k">if</span> <span class="nv">$#sections</span> <span class="o">!=</span> <span class="mi">7</span><span class="p">;</span>
    
    <span class="nv">$_</span> <span class="o">=</span> <span class="nb">sprintf</span><span class="p">(</span><span class="s">&quot;%04s&quot;</span><span class="p">,</span><span class="nv">$_</span><span class="p">)</span> <span class="k">for</span> <span class="nv">@sections</span><span class="p">;</span>
    <span class="nv">$ipv6</span> <span class="o">=</span> <span class="nb">join</span> <span class="s">&#39;:&#39;</span><span class="p">,</span><span class="nv">@sections</span><span class="p">;</span>
    <span class="k">return</span> <span class="nv">$ipv6</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090612205550/http://ja.doukaku.org/comment/9038/addtag/" class="addtag" id="addtag_9038">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090612205550/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20090612205550/http://ja.doukaku.org/comment/9038/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090612205550/http://ja.doukaku.org/comment/9038/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9038"
  >-</span><span
  class="button yellow"
  id="rating_z_9038"
  >0</span><span 
  class="button green"
  id="rating_p_9038"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090612205550/http://ja.doukaku.org/226/reply_to/9038/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20090612205550if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20090612205550/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20090612205550/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20090612205550/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20090612205550/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20090612205550/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20090612205550/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20090612205550/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20090612205550/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090612205550/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090612205550/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20090612205550im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20090612205550/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20090612205550/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20090612205550/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20090612205550/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20090612205550/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20090612205550/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20090612205550/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20090612205550/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20090612205550im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20090612205550/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20090612205550/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20090612205550/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20090612205550js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 20:55:50 Jun 12, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:50:34 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
