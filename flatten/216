
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
inline/embeded bytecode assembly
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20090512170312cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20090512170312cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20090512170312cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20090512170312/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20090512170312/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20090512170312js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20090512170312js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20090512170312js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20090512170312js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app12.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/216\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "12";
var displayMonth = "May";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/216/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090512170312" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20090103045927/http://ja.doukaku.org/216/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="3 Jan 2009"><strong>JAN</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 17:03:12 May 12, 2009">MAY</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jun
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20090103045927/http://ja.doukaku.org/216/flatten/" title="4:59:27 Jan 3, 2009" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 17:03:12 May 12, 2009">12</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2008
                       
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 17:03:12 May 12, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20090512170312*/http://ja.doukaku.org/216/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">3 Jan 09 - 12 May 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:4:100010000000_2010:-1:000000000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20090512170312/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20090512170312im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20090512170312/http://ja.doukaku.org/216/">inline/embeded bytecode assembly</a>
</h2>

    





<div class="comment" id="comment7961">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/59/" target="_top">nori</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/7961/">#7961</a>(<script language="JavaScript">print_time(new Date("2008/11/06 07:49 GMT"));</script><noscript>2008/11/06 07:49 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffcf8f;">-3/7=-0.43</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  <p>Duff's deviceをinline bytecode assemblyを使って実装してください。C言語ではよくあるinline asmのほかの言語バージョンといったところです。copyのsrcとdstは呼び出し側から渡すようにしてください。（要はbytecode側で閉じていてはならない)</p>
<p>Duff's deviceとは、
<a class="reference" href="/web/20090512170312/http://ja.wikipedia.org/wiki/Duff%27s_device">http://ja.wikipedia.org/wiki/Duff%27s_device</a> に説明がありますが、ループ展開したコピーのコードです。もちろんbytecodeである時点で速度の話をするのはナンセンスです。</p>
<p>bytecodeで速くするとかいう話よりも、ある言語で書かれたcodeの中にその言語で使用されているbytecodeが埋め込めるかどうか、どのようにできるのかが、このお題の意図です。面白い使い道があるならsiteしていただけると幸いです。</p>
<p>また、1言語につき1種のbytecodeとは限りません。たとえば、PythonならCPythonのbytecode, JythonのJavaVMのbytecode, IronPythonのCIL/CLRなどがあります。
もちろん特定アーキテクチャのasmを呼んでもよいです。x86を書くことができるpyasmなんてものもあるらしいです。
<a class="reference" href="/web/20090512170312/http://members.verizon.net/olsongt/usersGuide.pdf">http://members.verizon.net/olsongt/usersGuide.pdf</a></p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/7961/addtag/" class="addtag" id="addtag_7961">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffcf8f;"
  >-3/7=-0.43</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_7961"
  >-</span><span
  class="button yellow"
  id="rating_z_7961"
  >0</span><span 
  class="button green"
  id="rating_p_7961"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/7961/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20090512170312/http://ja.doukaku.org/216/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - フラット表示</h2>
<a href="/web/20090512170312/http://ja.doukaku.org/216/nested/">ネスト表示</a>
<a href="/web/20090512170312/http://ja.doukaku.org/216/">非表示</a> 


  
  <br/>

  
  




<div class="comment" id="comment8034">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8034/">#8034</a>(<script language="JavaScript">print_time(new Date("2008/11/14 05:09 GMT"));</script><noscript>2008/11/14 05:09 GMT</noscript>)
	
	
	
	[<a href="/web/20090512170312/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>marshal.dumps(compile(duff, &quot;&lt;script&gt;&quot;, &quot;single&quot;))
とかやって生成させたバイト列にコメントをつけただけです。
こんなんじゃダメっすよねえ……</p>
<p>Pythonバイトコードアセンブラのようなものはあるようですね。
ディスアセンブルは標準のdisでできるのですが。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143</pre></td><td class="code"><div class="highlight"><pre><span class="c">#!/usr/bin/env python</span>
<span class="k">import</span> <span class="nn">marshal</span>

<span class="c"># def duff(src):</span>
<span class="c">#     next = iter(src).next</span>
<span class="c">#     while True:</span>
<span class="c">#         yield next()</span>
<span class="c">#         yield next()</span>
<span class="c">#         yield next()</span>
<span class="c">#         yield next()</span>
<span class="c">#         yield next()</span>
<span class="c">#         yield next()</span>
<span class="c">#         yield next()</span>
<span class="c">#         yield next()</span>

<span class="k">exec</span> <span class="n">marshal</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span>
<span class="s">&quot;</span><span class="se">\x63</span><span class="s">&quot;</span>              <span class="c"># TYPE_CODE</span>
<span class="s">&quot;</span><span class="se">\x00\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   co_argcount: 0</span>
<span class="s">&quot;</span><span class="se">\x00\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   co_nlocals: 0</span>
<span class="s">&quot;</span><span class="se">\x01\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   co_stacksize: 1</span>
<span class="s">&quot;</span><span class="se">\x40\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   co_flags</span>
<span class="s">&quot;</span><span class="se">\x73</span><span class="s">&quot;</span>              <span class="c">#   co_code: TYPE_STRING</span>
<span class="s">&quot;</span><span class="se">\x0D\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   length of string: 13</span>
<span class="s">&quot;</span><span class="se">\x64\x00\x00</span><span class="s">&quot;</span>      <span class="c">#     LOAD_CONST 0</span>
<span class="s">&quot;</span><span class="se">\x84\x00\x00</span><span class="s">&quot;</span>      <span class="c">#     MAKE_FUNCTION 0</span>
<span class="s">&quot;</span><span class="se">\x5A\x00\x00</span><span class="s">&quot;</span>      <span class="c">#     STORE_NAME 0</span>
<span class="s">&quot;</span><span class="se">\x64\x01\x00</span><span class="s">&quot;</span>      <span class="c">#     LOAD_CONST 1</span>
<span class="s">&quot;</span><span class="se">\x53</span><span class="s">&quot;</span>              <span class="c">#     RETURN_VALUE</span>
<span class="s">&quot;</span><span class="se">\x28</span><span class="s">&quot;</span>              <span class="c">#   co_consts: TYPE_TUPLE</span>
<span class="s">&quot;</span><span class="se">\x02\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   length of tuple: 2</span>
<span class="s">&quot;</span><span class="se">\x63</span><span class="s">&quot;</span>              <span class="c">#     TYPE_CODE</span>
<span class="s">&quot;</span><span class="se">\x01\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       co_argcount: 1</span>
<span class="s">&quot;</span><span class="se">\x02\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       co_nlocals: 2</span>
<span class="s">&quot;</span><span class="se">\x02\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       co_stacksize: 1</span>
<span class="s">&quot;</span><span class="se">\x63\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       co_flags</span>
<span class="s">&quot;</span><span class="se">\x73</span><span class="s">&quot;</span>              <span class="c">#       co_code: TYPE_STRING</span>
<span class="s">&quot;</span><span class="se">\x62\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       length of string: 98</span>
<span class="s">&quot;</span><span class="se">\x74\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_GLOBAL 0</span>
<span class="s">&quot;</span><span class="se">\x7C\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_FAST 0</span>
<span class="s">&quot;</span><span class="se">\x83\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         CALL_FUNCTION 1</span>
<span class="s">&quot;</span><span class="se">\x69\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_ATTR 1</span>
<span class="s">&quot;</span><span class="se">\x7D\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         STORE_FAST 1</span>
<span class="s">&quot;</span><span class="se">\x78\x4C\x00</span><span class="s">&quot;</span>      <span class="c">#         SETUP_LOOP 76</span>
<span class="s">&quot;</span><span class="se">\x74\x02\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_GLOBAL 2</span>
<span class="s">&quot;</span><span class="se">\x6F\x44\x00</span><span class="s">&quot;</span>      <span class="c">#         JUMP_IF_FALSE 68</span>
<span class="s">&quot;</span><span class="se">\x01</span><span class="s">&quot;</span>              <span class="c">#         POP_TOP</span>
<span class="s">&quot;</span><span class="se">\x7C\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_FAST 1</span>
<span class="s">&quot;</span><span class="se">\x83\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         CALL_FUNCTION 0</span>
<span class="s">&quot;</span><span class="se">\x56</span><span class="s">&quot;</span>              <span class="c">#         YIELD_VALUE</span>
<span class="s">&quot;</span><span class="se">\x01</span><span class="s">&quot;</span>              <span class="c">#         POP_TOP</span>
<span class="s">&quot;</span><span class="se">\x7C\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_FAST 1</span>
<span class="s">&quot;</span><span class="se">\x83\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         CALL_FUNCTION 0</span>
<span class="s">&quot;</span><span class="se">\x56</span><span class="s">&quot;</span>              <span class="c">#         YIELD_VALUE</span>
<span class="s">&quot;</span><span class="se">\x01</span><span class="s">&quot;</span>              <span class="c">#         POP_TOP</span>
<span class="s">&quot;</span><span class="se">\x7C\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_FAST 1</span>
<span class="s">&quot;</span><span class="se">\x83\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         CALL_FUNCTION 0</span>
<span class="s">&quot;</span><span class="se">\x56</span><span class="s">&quot;</span>              <span class="c">#         YIELD_VALUE</span>
<span class="s">&quot;</span><span class="se">\x01</span><span class="s">&quot;</span>              <span class="c">#         POP_TOP</span>
<span class="s">&quot;</span><span class="se">\x7C\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_FAST 1</span>
<span class="s">&quot;</span><span class="se">\x83\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         CALL_FUNCTION 0</span>
<span class="s">&quot;</span><span class="se">\x56</span><span class="s">&quot;</span>              <span class="c">#         YIELD_VALUE</span>
<span class="s">&quot;</span><span class="se">\x01</span><span class="s">&quot;</span>              <span class="c">#         POP_TOP</span>
<span class="s">&quot;</span><span class="se">\x7C\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_FAST 1</span>
<span class="s">&quot;</span><span class="se">\x83\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         CALL_FUNCTION 0</span>
<span class="s">&quot;</span><span class="se">\x56</span><span class="s">&quot;</span>              <span class="c">#         YIELD_VALUE</span>
<span class="s">&quot;</span><span class="se">\x01</span><span class="s">&quot;</span>              <span class="c">#         POP_TOP</span>
<span class="s">&quot;</span><span class="se">\x7C\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_FAST 1</span>
<span class="s">&quot;</span><span class="se">\x83\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         CALL_FUNCTION 0</span>
<span class="s">&quot;</span><span class="se">\x56</span><span class="s">&quot;</span>              <span class="c">#         YIELD_VALUE</span>
<span class="s">&quot;</span><span class="se">\x01</span><span class="s">&quot;</span>              <span class="c">#         POP_TOP</span>
<span class="s">&quot;</span><span class="se">\x7C\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_FAST 1</span>
<span class="s">&quot;</span><span class="se">\x83\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         CALL_FUNCTION 0</span>
<span class="s">&quot;</span><span class="se">\x56</span><span class="s">&quot;</span>              <span class="c">#         YIELD_VALUE</span>
<span class="s">&quot;</span><span class="se">\x01</span><span class="s">&quot;</span>              <span class="c">#         POP_TOP</span>
<span class="s">&quot;</span><span class="se">\x7C\x01\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_FAST 1</span>
<span class="s">&quot;</span><span class="se">\x83\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         CALL_FUNCTION 0</span>
<span class="s">&quot;</span><span class="se">\x56</span><span class="s">&quot;</span>              <span class="c">#         YIELD_VALUE</span>
<span class="s">&quot;</span><span class="se">\x01</span><span class="s">&quot;</span>              <span class="c">#         POP_TOP</span>
<span class="s">&quot;</span><span class="se">\x71\x12\x00</span><span class="s">&quot;</span>      <span class="c">#         JUMP_ABSOLUTE 18</span>
<span class="s">&quot;</span><span class="se">\x01</span><span class="s">&quot;</span>              <span class="c">#         POP_TOP</span>
<span class="s">&quot;</span><span class="se">\x57</span><span class="s">&quot;</span>              <span class="c">#         POP_BLOCK</span>
<span class="s">&quot;</span><span class="se">\x64\x00\x00</span><span class="s">&quot;</span>      <span class="c">#         LOAD_CONST 0</span>
<span class="s">&quot;</span><span class="se">\x53</span><span class="s">&quot;</span>              <span class="c">#         RETURN_VALUE</span>
<span class="s">&quot;</span><span class="se">\x28</span><span class="s">&quot;</span>              <span class="c">#       co_consts: TYPE_TUPLE</span>
<span class="s">&quot;</span><span class="se">\x01\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       length of tuple: 1</span>
<span class="s">&quot;</span><span class="se">\x4E</span><span class="s">&quot;</span>              <span class="c">#         TYPE_NONE</span>
<span class="s">&quot;</span><span class="se">\x28</span><span class="s">&quot;</span>              <span class="c">#       co_names: TYPE_TUPLE</span>
<span class="s">&quot;</span><span class="se">\x03\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       length of tuple: 3</span>
<span class="s">&quot;</span><span class="se">\x74</span><span class="s">&quot;</span>              <span class="c">#         TYPE_INTERNED</span>
<span class="s">&quot;</span><span class="se">\x04\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#         length of string: 4</span>
<span class="s">&quot;</span><span class="se">\x69\x74\x65\x72</span><span class="s">&quot;</span>  <span class="c">#           &quot;iter&quot;</span>
<span class="s">&quot;</span><span class="se">\x74</span><span class="s">&quot;</span>              <span class="c">#         TYPE_INTERNED</span>
<span class="s">&quot;</span><span class="se">\x04\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#         length of string: 4</span>
<span class="s">&quot;</span><span class="se">\x6E\x65\x78\x74</span><span class="s">&quot;</span>  <span class="c">#           &quot;next&quot;</span>
<span class="s">&quot;</span><span class="se">\x74</span><span class="s">&quot;</span>              <span class="c">#         TYPE_INTERNED</span>
<span class="s">&quot;</span><span class="se">\x04\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#         length of string: 4</span>
<span class="s">&quot;</span><span class="se">\x54\x72\x75\x65</span><span class="s">&quot;</span>  <span class="c">#           &quot;True&quot;</span>
<span class="s">&quot;</span><span class="se">\x28</span><span class="s">&quot;</span>              <span class="c">#       co_varnames: TYPE_TUPLE</span>
<span class="s">&quot;</span><span class="se">\x02\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       length of tuple: 2</span>
<span class="s">&quot;</span><span class="se">\x74</span><span class="s">&quot;</span>              <span class="c">#         TYPE_INTERNED</span>
<span class="s">&quot;</span><span class="se">\x03\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#         length of string: 3</span>
<span class="s">&quot;</span><span class="se">\x73\x72\x63</span><span class="s">&quot;</span>      <span class="c">#           &quot;src&quot;</span>
<span class="s">&quot;</span><span class="se">\x52</span><span class="s">&quot;</span>              <span class="c">#         TYPE_STRINGREF</span>
<span class="s">&quot;</span><span class="se">\x01\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#         index: 1</span>
<span class="s">&quot;</span><span class="se">\x28</span><span class="s">&quot;</span>              <span class="c">#       co_freevars: TYPE_TUPLE</span>
<span class="s">&quot;</span><span class="se">\x00\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       length of tuple: 0</span>
<span class="s">&quot;</span><span class="se">\x28</span><span class="s">&quot;</span>              <span class="c">#       co_cellvars: TYPE_TUPLE</span>
<span class="s">&quot;</span><span class="se">\x00\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       length of tuple: 0</span>
<span class="s">&quot;</span><span class="se">\x73</span><span class="s">&quot;</span>              <span class="c">#       co_filename: TYPE_STRING</span>
<span class="s">&quot;</span><span class="se">\x08\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       length of string: 8</span>
<span class="s">&quot;</span><span class="se">\x3C\x73\x63\x72\x69\x70\x74\x3E</span><span class="s">&quot;</span>   <span class="c"># &quot;&lt;script&gt;&quot;</span>
<span class="s">&quot;</span><span class="se">\x74</span><span class="s">&quot;</span>              <span class="c">#       co_name: TYPE_INTERNED</span>
<span class="s">&quot;</span><span class="se">\x04\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       length of string: 4</span>
<span class="s">&quot;</span><span class="se">\x64\x75\x66\x66</span><span class="s">&quot;</span>  <span class="c">#         &quot;duff&quot;</span>
<span class="s">&quot;</span><span class="se">\x02\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       co_firstlineno: 2</span>
<span class="s">&quot;</span><span class="se">\x73</span><span class="s">&quot;</span>              <span class="c">#       co_lnotab: TYPE_STRING</span>
<span class="s">&quot;</span><span class="se">\x14\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#       length of string: 20</span>
<span class="s">&quot;</span><span class="se">\x00\x01\x0F\x01\x0A\x01\x08\x01</span><span class="s">&quot;</span>    <span class="c"># XXX: see codeobject.c</span>
<span class="s">&quot;</span><span class="se">\x08\x01\x08\x01\x08\x01\x08\x01</span><span class="s">&quot;</span>    <span class="c"># about co_lnotab.</span>
<span class="s">&quot;</span><span class="se">\x08\x01\x08\x01</span><span class="s">&quot;</span>                    <span class="c">#</span>
<span class="s">&quot;</span><span class="se">\x4E</span><span class="s">&quot;</span>              <span class="c">#     TYPE_NONE</span>
<span class="s">&quot;</span><span class="se">\x28</span><span class="s">&quot;</span>              <span class="c">#   co_names: TYPE_TUPLE</span>
<span class="s">&quot;</span><span class="se">\x01\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   length of tuple: 1</span>
<span class="s">&quot;</span><span class="se">\x52</span><span class="s">&quot;</span>              <span class="c">#     TYPE_STRINGREF</span>
<span class="s">&quot;</span><span class="se">\x04\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#     index: 4</span>
<span class="s">&quot;</span><span class="se">\x28</span><span class="s">&quot;</span>              <span class="c">#   co_varnames: TYPE_TUPLE</span>
<span class="s">&quot;</span><span class="se">\x00\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   length of tuple: 0</span>
<span class="s">&quot;</span><span class="se">\x28</span><span class="s">&quot;</span>              <span class="c">#   co_freevars: TYPE_TUPLE</span>
<span class="s">&quot;</span><span class="se">\x00\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   length of tuple: 0</span>
<span class="s">&quot;</span><span class="se">\x28</span><span class="s">&quot;</span>              <span class="c">#   co_cellvars: TYPE_TUPLE</span>
<span class="s">&quot;</span><span class="se">\x00\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   length of tuple: 8</span>
<span class="s">&quot;</span><span class="se">\x73</span><span class="s">&quot;</span>              <span class="c">#   co_filename: TYPE_STRING</span>
<span class="s">&quot;</span><span class="se">\x08\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   length of string: 8</span>
<span class="s">&quot;</span><span class="se">\x3C\x73\x63\x72\x69\x70\x74\x3E</span><span class="s">&quot;</span>   <span class="c"># &quot;&lt;script&gt;&quot;</span>
<span class="s">&quot;</span><span class="se">\x73</span><span class="s">&quot;</span>              <span class="c">#   co_name: TYPE_STRING</span>
<span class="s">&quot;</span><span class="se">\x08\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   length of string: 8</span>
<span class="s">&quot;</span><span class="se">\x3C\x6D\x6F\x64\x75\x6C\x65\x3E</span><span class="s">&quot;</span>   <span class="c"># &quot;&lt;module&gt;&quot;</span>
<span class="s">&quot;</span><span class="se">\x02\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   co_firstlineno: 2</span>
<span class="s">&quot;</span><span class="se">\x73</span><span class="s">&quot;</span>              <span class="c">#   co_lnotab: TYPE_STRING</span>
<span class="s">&quot;</span><span class="se">\x00\x00\x00\x00</span><span class="s">&quot;</span>  <span class="c">#   length of string: 0</span>
<span class="p">)</span>

<span class="k">print</span> <span class="nb">list</span><span class="p">(</span><span class="n">duff</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8034/addtag/" class="addtag" id="addtag_8034">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512170312/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8034/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8034/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8034"
  >-</span><span
  class="button yellow"
  id="rating_z_8034"
  >0</span><span 
  class="button green"
  id="rating_p_8034"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8034/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8036">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/438/" target="_top">koguro</a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8036/">#8036</a>(<script language="JavaScript">print_time(new Date("2008/11/14 13:49 GMT"));</script><noscript>2008/11/14 13:49 GMT</noscript>)
	
	
	
	[<a href="/web/20090512170312/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>dyncompを使って x86 のネイティブコードを生成してみました。さらにマクロを使いコピーするバイト数が定数の場合はループを展開しアセンブリコードを直接生成します。</p>
<p>Duff's deviceそのものを実装した訳ではないのですが、お題の目的が「bytecodeを埋め込めるか」というところにあるようなので、ご容赦ください(アセンブラも無理矢理使っているだけです)。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre><span class="p">(</span><span class="nf">use</span> <span class="nv">gauche</span><span class="o">.</span><span class="nv">uvector</span><span class="p">)</span>
<span class="p">(</span><span class="nf">use</span> <span class="nv">dyncomp</span><span class="p">)</span>

<span class="p">(</span><span class="nf">cinclude</span> <span class="s">&quot;gauche/uvector.h&quot;</span><span class="p">)</span>

<span class="p">(</span><span class="nf">define-macro</span> <span class="p">(</span><span class="nf">bytecopy</span> <span class="nv">to</span> <span class="nv">from</span> <span class="nv">count</span><span class="p">)</span>
  <span class="o">`</span><span class="p">(</span><span class="nb">apply </span><span class="o">,</span><span class="p">(</span><span class="k">if </span><span class="p">(</span><span class="nb">integer? </span><span class="nv">count</span><span class="p">)</span>
               <span class="o">`</span><span class="p">(</span><span class="nf">clambda</span> <span class="p">(</span><span class="nf">to</span> <span class="nv">from</span> <span class="nv">count</span><span class="p">)</span>
                   <span class="p">(</span><span class="k">let* </span><span class="p">((</span><span class="nf">dst</span> <span class="nv">::</span> <span class="err">|</span><span class="nv">char*</span><span class="err">|</span> <span class="p">(</span><span class="nf">SCM_U8VECTOR_ELEMENTS</span> <span class="nv">to</span><span class="p">))</span>
                          <span class="p">(</span><span class="nf">src</span> <span class="nv">::</span> <span class="err">|</span><span class="nv">char*</span><span class="err">|</span> <span class="p">(</span><span class="nf">SCM_U8VECTOR_ELEMENTS</span> <span class="nv">from</span><span class="p">)))</span>
                     <span class="o">,@</span><span class="p">(</span><span class="k">do </span><span class="p">((</span><span class="nf">i</span> <span class="mi">0</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">i</span> <span class="mi">1</span><span class="p">))</span>
                            <span class="p">(</span><span class="nf">asmbody</span> <span class="o">&#39;</span><span class="p">()</span> <span class="p">(</span><span class="nb">append </span><span class="nv">asmbody</span>
                                                 <span class="o">&#39;</span><span class="p">((</span><span class="nf">asm</span> <span class="s">&quot;movl   -32(%ebp), %eax&quot;</span><span class="p">)</span>
                                                   <span class="p">(</span><span class="nf">asm</span> <span class="s">&quot;movzbl (%eax), %edx&quot;</span><span class="p">)</span>         
                                                   <span class="p">(</span><span class="nf">asm</span> <span class="s">&quot;movl   -28(%ebp), %eax&quot;</span><span class="p">)</span>
                                                   <span class="p">(</span><span class="nf">asm</span> <span class="s">&quot;movb   %dl, (%eax)&quot;</span><span class="p">)</span>
                                                   <span class="p">(</span><span class="nf">asm</span> <span class="s">&quot;leal   -32(%ebp), %eax&quot;</span><span class="p">)</span>
                                                   <span class="p">(</span><span class="nf">asm</span> <span class="s">&quot;incl   (%eax)&quot;</span><span class="p">)</span>
                                                   <span class="p">(</span><span class="nf">asm</span> <span class="s">&quot;leal   -28(%ebp), %eax&quot;</span><span class="p">)</span>
                                                   <span class="p">(</span><span class="nf">asm</span> <span class="s">&quot;incl   (%eax)&quot;</span><span class="p">)))))</span>
                           <span class="p">((</span><span class="nb">&lt;= </span><span class="nv">count</span> <span class="nv">i</span><span class="p">)</span> <span class="nv">asmbody</span><span class="p">))))</span>
               <span class="o">`</span><span class="p">(</span><span class="nf">clambda</span> <span class="p">(</span><span class="nf">to</span> <span class="nv">from</span> <span class="nv">count::&lt;int&gt;</span><span class="p">)</span>
                         <span class="p">(</span><span class="k">let* </span><span class="p">((</span><span class="nf">dst</span> <span class="nv">::</span> <span class="err">|</span><span class="nv">char*</span><span class="err">|</span> <span class="p">(</span><span class="nf">SCM_U8VECTOR_ELEMENTS</span> <span class="nv">to</span><span class="p">))</span>
                                <span class="p">(</span><span class="nf">src</span> <span class="nv">::</span> <span class="err">|</span><span class="nv">char*</span><span class="err">|</span> <span class="p">(</span><span class="nf">SCM_U8VECTOR_ELEMENTS</span> <span class="nv">from</span><span class="p">))</span>
                                <span class="p">(</span><span class="nf">i</span> <span class="nv">::</span> <span class="nv">int</span><span class="p">))</span>
                           <span class="p">(</span><span class="nf">for</span> <span class="p">((</span><span class="k">set! </span><span class="nv">i</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt; </span><span class="nv">i</span> <span class="nv">count</span><span class="p">)</span> <span class="p">(</span><span class="nf">pre++</span> <span class="nv">i</span><span class="p">))</span>
                                <span class="p">(</span><span class="k">set! </span><span class="p">(</span><span class="nb">* </span><span class="nv">dst</span><span class="p">)</span> <span class="p">(</span><span class="nb">* </span><span class="nv">src</span><span class="p">))</span>
                                <span class="p">(</span><span class="nf">pre++</span> <span class="nv">dst</span><span class="p">)</span>
                                <span class="p">(</span><span class="nf">pre++</span> <span class="nv">src</span><span class="p">)))))</span>
          <span class="p">(</span><span class="nb">list </span><span class="o">,</span><span class="nv">to</span> <span class="o">,</span><span class="nv">from</span> <span class="o">,</span><span class="nv">count</span><span class="p">)))</span>

<span class="c1">;; 普通のループによるコピー</span>
<span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">from</span> <span class="o">#</span><span class="nv">u8</span><span class="p">(</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">6</span> <span class="mi">7</span> <span class="mi">8</span> <span class="mi">9</span> <span class="mi">10</span><span class="p">))</span>
      <span class="p">(</span><span class="nf">to</span> <span class="p">(</span><span class="nf">make-u8vector</span> <span class="mi">10</span><span class="p">)))</span>
  <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;before: ~s~%&quot;</span> <span class="nv">to</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">bytecopy</span> <span class="nv">to</span> <span class="nv">from</span> <span class="p">(</span><span class="nf">u8vector-length</span> <span class="nv">to</span><span class="p">))</span>
  <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;after:  ~s~%&quot;</span> <span class="nv">to</span><span class="p">))</span>

<span class="c1">;; ループを展開してコピー</span>
<span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">from</span> <span class="o">#</span><span class="nv">u8</span><span class="p">(</span><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">6</span> <span class="mi">7</span> <span class="mi">8</span> <span class="mi">9</span> <span class="mi">10</span><span class="p">))</span>
      <span class="p">(</span><span class="nf">to</span> <span class="p">(</span><span class="nf">make-u8vector</span> <span class="mi">10</span><span class="p">)))</span>
  <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;before: ~s~%&quot;</span> <span class="nv">to</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">bytecopy</span> <span class="nv">to</span> <span class="nv">from</span> <span class="mi">10</span><span class="p">)</span>
  <span class="p">(</span><span class="nf">format</span> <span class="no">#t</span> <span class="s">&quot;after:  ~s~%&quot;</span> <span class="nv">to</span><span class="p">))</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8036/addtag/" class="addtag" id="addtag_8036">タグ</a>:
	
    
    <a href="/web/20090512170312/http://ja.doukaku.org/tag/dyncomp/">dyncomp</a>
    
    <a href="/web/20090512170312/http://ja.doukaku.org/tag/gauche/">gauche</a>
    
	&nbsp;

	
      [<a href="/web/20090512170312/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8036/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8036/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8036"
  >-</span><span
  class="button yellow"
  id="rating_z_8036"
  >0</span><span 
  class="button green"
  id="rating_p_8036"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8036/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8037">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8037/">#8037</a>(<script language="JavaScript">print_time(new Date("2008/11/14 10:51 GMT"));</script><noscript>2008/11/14 10:51 GMT</noscript>)
	
	
	
	[<a href="/web/20090512170312/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Squeak Smalltalk で。</p>
<p>Smalltalk にはインラインでバイトコードを記述する機能はないので、代わりに通常 Smalltalk では表現できない C言語のスイッチ文（ラベルへのジャンプ）で書かれたDuff's deviceの動きを真似たメソッドを生成する操作を記述することにトライしてみました。</p>
<p>まず元になるコード（そのままでは機能しない）をコンパイルしたメソッドを処理系に生成させ、そのバイト列に対しあらためて、やはり Smalltalk にはない（が、バイトコード命令にはある）ジャンプ命令である「A4 00」を挿入して呼び出しに用いる最終的なメソッド（バイトコード列）を再構成しました。</p>
<p>ジャンプ命令「A4 00」の２バイト目は飛ぶ先（A4 の場合下流）を示します。「00」だと結果的にジャンプはせず次のバイトコードを実行するだけですが、このメソッドには実行時に与えられた配列のサイズによって自分のジャンプ先を動的に書き換える操作をあらかじめ加え、それによってお題のDuff's deviceの動きをシュミレートしています。</p>
<p>組み上がったメソッドはクラスには属させず #valueWithReceiver:arguments: でレシーバを含めた引数を与えて静的に呼び出しています。実行後のコードの内容を末尾のコメントに示しました。各行は「先頭からのバイト数 &lt;バイトコード&gt; 操作内容」という書式になっています。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91</pre></td><td class="code"><div class="highlight"><pre>| code original modified src dst |
code := &#39;copyFrom: src
    | idx mod |
    idx := src size.
    mod := idx negated \\ 4.
    thisContext method at: 50 put: mod * 11.
    [   self at: idx put: (src at: idx). idx := idx - 1.
        self at: idx put: (src at: idx). idx := idx - 1.
        self at: idx put: (src at: idx). idx := idx - 1.
        self at: idx put: (src at: idx). idx := idx - 1.
        idx &gt; 0
    ] whileTrue&#39;.

original := (Parser new parse: code class: WriteStream) generate asArray.
modified := ((original first: 48), #(16rA4 0), (original allButFirst: 48)).

src := 1 to: 10.
dst := Array new: src size.
(modified as: CompiledMethod) inspect; valueWithReceiver: dst arguments: {src}.
^dst   &quot;=&gt; #(1 2 3 4 5 6 7 8 9 10) &quot;


&quot;
33 &lt;10&gt; pushTemp: 0
34 &lt;C2&gt; send: size
35 &lt;69&gt; popIntoTemp: 1
36 &lt;11&gt; pushTemp: 1
37 &lt;D0&gt; send: negated
38 &lt;21&gt; pushConstant: 4
39 &lt;BA&gt; send: \\
40 &lt;6A&gt; popIntoTemp: 2
41 &lt;89&gt; pushThisContext: 
42 &lt;D2&gt; send: method
43 &lt;23&gt; pushConstant: 50
44 &lt;12&gt; pushTemp: 2
45 &lt;24&gt; pushConstant: 11
46 &lt;B8&gt; send: *
47 &lt;C1&gt; send: at:put:
48 &lt;87&gt; pop
49 &lt;A4 16&gt; jumpTo: 73   -- 追加されたジャンプ命令（ジャンプ先書き換え済み）
51 &lt;70&gt; self
52 &lt;11&gt; pushTemp: 1
53 &lt;10&gt; pushTemp: 0
54 &lt;11&gt; pushTemp: 1
55 &lt;C0&gt; send: at:
56 &lt;C1&gt; send: at:put:
57 &lt;87&gt; pop
58 &lt;11&gt; pushTemp: 1
59 &lt;76&gt; pushConstant: 1
60 &lt;B1&gt; send: -
61 &lt;69&gt; popIntoTemp: 1
62 &lt;70&gt; self
63 &lt;11&gt; pushTemp: 1
64 &lt;10&gt; pushTemp: 0
65 &lt;11&gt; pushTemp: 1
66 &lt;C0&gt; send: at:
67 &lt;C1&gt; send: at:put:
68 &lt;87&gt; pop
69 &lt;11&gt; pushTemp: 1
70 &lt;76&gt; pushConstant: 1
71 &lt;B1&gt; send: -
72 &lt;69&gt; popIntoTemp: 1
73 &lt;70&gt; self
74 &lt;11&gt; pushTemp: 1
75 &lt;10&gt; pushTemp: 0
76 &lt;11&gt; pushTemp: 1
77 &lt;C0&gt; send: at:
78 &lt;C1&gt; send: at:put:
79 &lt;87&gt; pop
80 &lt;11&gt; pushTemp: 1
81 &lt;76&gt; pushConstant: 1
82 &lt;B1&gt; send: -
83 &lt;69&gt; popIntoTemp: 1
84 &lt;70&gt; self
85 &lt;11&gt; pushTemp: 1
86 &lt;10&gt; pushTemp: 0
87 &lt;11&gt; pushTemp: 1
88 &lt;C0&gt; send: at:
89 &lt;C1&gt; send: at:put:
90 &lt;87&gt; pop
91 &lt;11&gt; pushTemp: 1
92 &lt;76&gt; pushConstant: 1
93 &lt;B1&gt; send: -
94 &lt;69&gt; popIntoTemp: 1
95 &lt;11&gt; pushTemp: 1
96 &lt;75&gt; pushConstant: 0
97 &lt;B3&gt; send: &gt;
98 &lt;99&gt; jumpFalse: 101
99 &lt;A3 CE&gt; jumpTo: 51
101 &lt;78&gt; returnSelf
&quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8037/addtag/" class="addtag" id="addtag_8037">タグ</a>:
	
    
    <a href="/web/20090512170312/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20090512170312/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8037/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8037/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8037"
  >-</span><span
  class="button yellow"
  id="rating_z_8037"
  >0</span><span 
  class="button green"
  id="rating_p_8037"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8037/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8038">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8038/">#8038</a>(<script language="JavaScript">print_time(new Date("2008/11/15 04:29 GMT"));</script><noscript>2008/11/15 04:29 GMT</noscript>)
	
	
	
	[<a href="/web/20090512170312/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>クラスローダを作成してバイトコードを直接ソースコード上に記述しました。
ちなみに読み込んだバイトコードは以下のクラスをコンパイルしたものです
（アセンブラで作ったものではありません）。

クラスローダを自作して任意のバイトコードをプログラム中で生成する方法は
「構造リフレクション」をJavaで行う場合の常道のようです。

public class Copy {
	public static void copy(byte[] to, byte[] from) {
		int count = from.length;
		int i = 0;
		switch (count % 8)  /* count &gt; 0 とする */
		 {
		   case 7: to[i] = from[i++];
		   case 6: to[i] = from[i++];
		   case 5: to[i] = from[i++];
		   case 4: to[i] = from[i++];
		   case 3: to[i] = from[i++];
		   case 2: to[i] = from[i++];
		   case 1: to[i] = from[i++];
		   case 0:
		 }
	   	while (i &lt; count) {  
	   		to[i] = from[i++];
	   		to[i] = from[i++];
	   		to[i] = from[i++];
	   		to[i] = from[i++];
	   		to[i] = from[i++];
	   		to[i] = from[i++];
	   		to[i] = from[i++];
	   		to[i] = from[i++];
	   	}
	}
}</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="k">extends</span> <span class="n">ClassLoader</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="k">public</span> <span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">findClass</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="k">throws</span> <span class="n">ClassNotFoundException</span> <span class="o">{</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">b</span> <span class="o">=</span> <span class="o">{</span>
                <span class="o">-</span><span class="mi">54</span><span class="o">,</span> <span class="o">-</span><span class="mi">2</span><span class="o">,</span> <span class="o">-</span><span class="mi">70</span><span class="o">,</span> <span class="o">-</span><span class="mi">66</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">49</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">24</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">67</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">112</span><span class="o">,</span> <span class="mi">121</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">16</span><span class="o">,</span> <span class="mi">106</span><span class="o">,</span> 
                <span class="mi">97</span><span class="o">,</span> <span class="mi">118</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> <span class="mi">47</span><span class="o">,</span> <span class="mi">108</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> <span class="mi">110</span><span class="o">,</span> <span class="mi">103</span><span class="o">,</span> <span class="mi">47</span><span class="o">,</span> <span class="mi">79</span><span class="o">,</span> <span class="mi">98</span><span class="o">,</span> <span class="mi">106</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">99</span><span class="o">,</span> <span class="mi">116</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">105</span><span class="o">,</span> <span class="mi">110</span><span class="o">,</span> <span class="mi">105</span><span class="o">,</span> <span class="mi">116</span><span class="o">,</span> 
                <span class="mi">62</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">40</span><span class="o">,</span> <span class="mi">41</span><span class="o">,</span> <span class="mi">86</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">67</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">15</span><span class="o">,</span> <span class="mi">76</span><span class="o">,</span> <span class="mi">105</span><span class="o">,</span> 
                <span class="mi">110</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">78</span><span class="o">,</span> <span class="mi">117</span><span class="o">,</span> <span class="mi">109</span><span class="o">,</span> <span class="mi">98</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">114</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> <span class="mi">98</span><span class="o">,</span> <span class="mi">108</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">18</span><span class="o">,</span> <span class="mi">76</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">99</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> <span class="mi">108</span><span class="o">,</span> <span class="mi">86</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> 
                <span class="mi">114</span><span class="o">,</span> <span class="mi">105</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> <span class="mi">98</span><span class="o">,</span> <span class="mi">108</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> <span class="mi">98</span><span class="o">,</span> <span class="mi">108</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">116</span><span class="o">,</span> <span class="mi">104</span><span class="o">,</span> <span class="mi">105</span><span class="o">,</span> <span class="mi">115</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">76</span><span class="o">,</span> <span class="mi">67</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> 
                <span class="mi">112</span><span class="o">,</span> <span class="mi">121</span><span class="o">,</span> <span class="mi">59</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">99</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">112</span><span class="o">,</span> <span class="mi">121</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">40</span><span class="o">,</span> <span class="mi">91</span><span class="o">,</span> <span class="mi">66</span><span class="o">,</span> <span class="mi">91</span><span class="o">,</span> <span class="mi">66</span><span class="o">,</span> <span class="mi">41</span><span class="o">,</span> <span class="mi">86</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">116</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> 
                <span class="mi">2</span><span class="o">,</span> <span class="mi">91</span><span class="o">,</span> <span class="mi">66</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">102</span><span class="o">,</span> <span class="mi">114</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">109</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">99</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">117</span><span class="o">,</span> <span class="mi">110</span><span class="o">,</span> <span class="mi">116</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">73</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">105</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> 
                <span class="mi">0</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">83</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">117</span><span class="o">,</span> <span class="mi">114</span><span class="o">,</span> <span class="mi">99</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">70</span><span class="o">,</span> <span class="mi">105</span><span class="o">,</span> <span class="mi">108</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">67</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">112</span><span class="o">,</span> <span class="mi">121</span><span class="o">,</span> <span class="mi">46</span><span class="o">,</span> <span class="mi">106</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> <span class="mi">118</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> 
                <span class="mi">0</span><span class="o">,</span> <span class="mi">33</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">47</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> 
                <span class="mi">42</span><span class="o">,</span> <span class="o">-</span><span class="mi">73</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="o">-</span><span class="mi">79</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> 
                <span class="mi">5</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">13</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">14</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">15</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">96</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">56</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="o">-</span><span class="mi">66</span><span class="o">,</span> 
                <span class="mi">61</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">62</span><span class="o">,</span> <span class="mi">28</span><span class="o">,</span> <span class="mi">16</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">112</span><span class="o">,</span> <span class="o">-</span><span class="mi">86</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">110</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">110</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> 
                <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">92</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">83</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">74</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">65</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">56</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">47</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> 
                <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span>
                <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> 
                <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="o">-</span><span class="mi">89</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">75</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> 
                <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> 
                <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> 
                <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">,</span> <span class="mi">29</span><span class="o">,</span> <span class="mi">28</span><span class="o">,</span> <span class="o">-</span><span class="mi">95</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">74</span><span class="o">,</span> <span class="o">-</span><span class="mi">79</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">86</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">21</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> 
                <span class="mi">0</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">56</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">65</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">74</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">83</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">92</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">110</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">13</span><span class="o">,</span> 
                <span class="mi">0</span><span class="o">,</span> <span class="mi">119</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">16</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">122</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">17</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">125</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">18</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">116</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">19</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">107</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">98</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">21</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">89</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> 
                <span class="mi">22</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">80</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">23</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">71</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">24</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">62</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">16</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">57</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">26</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">56</span><span class="o">,</span> 
                <span class="mi">0</span><span class="o">,</span> <span class="mi">16</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">17</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">56</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">18</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">17</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">59</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">19</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">61</span><span class="o">,</span> 
                <span class="mi">0</span><span class="o">,</span> <span class="mi">21</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">22</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">23</span><span class="o">};</span>
        <span class="k">return</span> <span class="n">defineClass</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">b</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">b</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="k">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">to</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">100</span><span class="o">];</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">from</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">100</span><span class="o">];</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">from</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
            <span class="n">from</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="o">(</span><span class="kt">byte</span><span class="o">)</span><span class="n">i</span><span class="o">;</span>
        <span class="n">Method</span><span class="o">[]</span> <span class="n">ms</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sample</span><span class="o">().</span><span class="na">loadClass</span><span class="o">(</span><span class="s">&quot;Copy&quot;</span><span class="o">).</span><span class="na">getMethods</span><span class="o">();</span>
        <span class="n">ms</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">invoke</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">to</span><span class="o">,</span> <span class="n">from</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">to</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8038/addtag/" class="addtag" id="addtag_8038">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512170312/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8038/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8038/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8038"
  >-</span><span
  class="button yellow"
  id="rating_z_8038"
  >0</span><span 
  class="button green"
  id="rating_p_8038"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090512170312/http://ja.doukaku.org/comment/8038/">
    1
    reply
  </a>

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8038/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8040">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/852/" target="_top">emasaka</a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8040/">#8040</a>(<script language="JavaScript">print_time(new Date("2008/11/15 06:22 GMT"));</script><noscript>2008/11/15 06:22 GMT</noscript>)
	
	
	
	[<a href="/web/20090512170312/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>言語がbashだった。別れたい…
bashだとアドレス渡された時なんか恥ずかしいｗｗ
セグフォしちゃうしｗｗ
ポインタにはせめて有効なアドレスを渡して欲しい・・・
カーネル空間を渡されたら・・・・もう最悪ｗｗ
せめて普通にページやマッピングぐらいは考えて欲しい。
常識的に仮想記憶を使って欲しいだけなんです！

# …ネタはさておき。
# スクリプトを実行しているbashに、組み込みコマンドとして
# duffを追加します。
# アセンブリ言語部分はCからgcc -O0 -Sで出力したものです。
</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20090512170312/http://anond.hatelabo.jp/20081111000645">彼氏が軽自動車に乗ってた。別れたい…</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192</pre></td><td class="code"><div class="highlight"><pre><span class="nv">pgm_dir</span><span class="o">=</span><span class="k">$(</span>mktemp -u /tmp/duff.XXXXXXXXXX<span class="k">)</span>
<span class="nv">pgm_name</span><span class="o">=</span>duff
<span class="nv">pgm_source</span><span class="o">=</span><span class="k">${</span><span class="nv">pgm</span><span class="p">_name</span><span class="k">}</span>.s

<span class="o">(</span>
    mkdir <span class="nv">$pgm_dir</span>
    <span class="nb">cd</span> <span class="nv">$pgm_dir</span>
    cat &gt; <span class="nv">$pgm_dir</span>/<span class="nv">$pgm_source</span> &lt;&lt;<span class="s1">&#39;__ASM__&#39;</span>
        .text
.globl duff_builtin
        .type   duff_builtin, @function
duff_builtin:
        pushl   %ebp
        movl    %esp, %ebp
        pushl   %ebx
        subl    <span class="nv">$36</span>, %esp
        call    __i686.get_pc_thunk.bx
        addl    <span class="nv">$_GLOBAL_OFFSET_TABLE_</span>, %ebx
        cmpl    <span class="nv">$0</span>, 8<span class="o">(</span>%ebp<span class="o">)</span>
        jne     .L2
        call    builtin_usage@PLT
        movl    <span class="nv">$258</span>, -28<span class="o">(</span>%ebp<span class="o">)</span>
        jmp     .L3
.L2:
        movl    8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movl    4<span class="o">(</span>%eax<span class="o">)</span>, %eax
        movl    <span class="o">(</span>%eax<span class="o">)</span>, %eax
        movl    %eax, <span class="o">(</span>%esp<span class="o">)</span>
        call    atoi@PLT
        movl    %eax, -8<span class="o">(</span>%ebp<span class="o">)</span>
        movl    8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movl    <span class="o">(</span>%eax<span class="o">)</span>, %eax
        movl    %eax, 8<span class="o">(</span>%ebp<span class="o">)</span>
        cmpl    <span class="nv">$0</span>, 8<span class="o">(</span>%ebp<span class="o">)</span>
        jne     .L4
        call    builtin_usage@PLT
        movl    <span class="nv">$258</span>, -28<span class="o">(</span>%ebp<span class="o">)</span>
        jmp     .L3
.L4:
        movl    8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movl    4<span class="o">(</span>%eax<span class="o">)</span>, %eax
        movl    <span class="o">(</span>%eax<span class="o">)</span>, %eax
        movl    %eax, <span class="o">(</span>%esp<span class="o">)</span>
        call    atoi@PLT
        movl    %eax, -12<span class="o">(</span>%ebp<span class="o">)</span>
        movl    8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movl    <span class="o">(</span>%eax<span class="o">)</span>, %eax
        movl    %eax, 8<span class="o">(</span>%ebp<span class="o">)</span>
        cmpl    <span class="nv">$0</span>, 8<span class="o">(</span>%ebp<span class="o">)</span>
        jne     .L5
        call    builtin_usage@PLT
        movl    <span class="nv">$258</span>, -28<span class="o">(</span>%ebp<span class="o">)</span>
        jmp     .L3
.L5:
        movl    8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movl    4<span class="o">(</span>%eax<span class="o">)</span>, %eax
        movl    <span class="o">(</span>%eax<span class="o">)</span>, %eax
        movl    %eax, <span class="o">(</span>%esp<span class="o">)</span>
        call    atoi@PLT
        movl    %eax, -16<span class="o">(</span>%ebp<span class="o">)</span>
        movl    -16<span class="o">(</span>%ebp<span class="o">)</span>, %edx
        movl    %edx, %eax
        sarl    <span class="nv">$31</span>, %eax
        movl    %eax, %ecx
        shrl    <span class="nv">$29</span>, %ecx
        leal    <span class="o">(</span>%edx,%ecx<span class="o">)</span>, %eax
        andl    <span class="nv">$7</span>, %eax
        subl    %ecx, %eax
        movl    %eax, -24<span class="o">(</span>%ebp<span class="o">)</span>
        cmpl    <span class="nv">$7</span>, -24<span class="o">(</span>%ebp<span class="o">)</span>
        ja      .L6
        movl    -24<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        sall    <span class="nv">$2</span>, %eax
        movl    .L15@GOTOFF<span class="o">(</span>%eax,%ebx<span class="o">)</span>, %eax
        addl    %ebx, %eax
        jmp     *%eax
        .section        .rodata
        .align 4
        .align 4
.L15:
        .long   .L7@GOTOFF
        .long   .L8@GOTOFF
        .long   .L9@GOTOFF
        .long   .L10@GOTOFF
        .long   .L11@GOTOFF
        .long   .L12@GOTOFF
        .long   .L13@GOTOFF
        .long   .L14@GOTOFF
        .text
.L7:
        movl    -12<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movzbl  <span class="o">(</span>%eax<span class="o">)</span>, %edx
        movl    -8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movb    %dl, <span class="o">(</span>%eax<span class="o">)</span>
        addl    <span class="nv">$1</span>, -12<span class="o">(</span>%ebp<span class="o">)</span>
.L14:
        movl    -12<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movzbl  <span class="o">(</span>%eax<span class="o">)</span>, %edx
        movl    -8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movb    %dl, <span class="o">(</span>%eax<span class="o">)</span>
        addl    <span class="nv">$1</span>, -12<span class="o">(</span>%ebp<span class="o">)</span>
.L13:
        movl    -12<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movzbl  <span class="o">(</span>%eax<span class="o">)</span>, %edx
        movl    -8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movb    %dl, <span class="o">(</span>%eax<span class="o">)</span>
        addl    <span class="nv">$1</span>, -12<span class="o">(</span>%ebp<span class="o">)</span>
.L12:
        movl    -12<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movzbl  <span class="o">(</span>%eax<span class="o">)</span>, %edx
        movl    -8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movb    %dl, <span class="o">(</span>%eax<span class="o">)</span>
        addl    <span class="nv">$1</span>, -12<span class="o">(</span>%ebp<span class="o">)</span>
.L11:
        movl    -12<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movzbl  <span class="o">(</span>%eax<span class="o">)</span>, %edx
        movl    -8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movb    %dl, <span class="o">(</span>%eax<span class="o">)</span>
        addl    <span class="nv">$1</span>, -12<span class="o">(</span>%ebp<span class="o">)</span>
.L10:
        movl    -12<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movzbl  <span class="o">(</span>%eax<span class="o">)</span>, %edx
        movl    -8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movb    %dl, <span class="o">(</span>%eax<span class="o">)</span>
        addl    <span class="nv">$1</span>, -12<span class="o">(</span>%ebp<span class="o">)</span>
.L9:
        movl    -12<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movzbl  <span class="o">(</span>%eax<span class="o">)</span>, %edx
        movl    -8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movb    %dl, <span class="o">(</span>%eax<span class="o">)</span>
        addl    <span class="nv">$1</span>, -12<span class="o">(</span>%ebp<span class="o">)</span>
.L8:
        movl    -12<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movzbl  <span class="o">(</span>%eax<span class="o">)</span>, %edx
        movl    -8<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        movb    %dl, <span class="o">(</span>%eax<span class="o">)</span>
        addl    <span class="nv">$1</span>, -12<span class="o">(</span>%ebp<span class="o">)</span>
        subl    <span class="nv">$8</span>, -16<span class="o">(</span>%ebp<span class="o">)</span>
        cmpl    <span class="nv">$0</span>, -16<span class="o">(</span>%ebp<span class="o">)</span>
        jg      .L7
.L6:
        movl    <span class="nv">$0</span>, -28<span class="o">(</span>%ebp<span class="o">)</span>
.L3:
        movl    -28<span class="o">(</span>%ebp<span class="o">)</span>, %eax
        addl    <span class="nv">$36</span>, %esp
        popl    %ebx
        popl    %ebp
        ret
        .size   duff_builtin, .-duff_builtin
.globl duff_doc
        .section        .rodata
.LC0:
        .string <span class="s2">&quot;Duff&#39;s device implementation&quot;</span>
        .section        .data.rel.local,<span class="s2">&quot;aw&quot;</span>,@progbits
        .align 4
        .type   duff_doc, @object
        .size   duff_doc, 8
duff_doc:
        .long   .LC0
        .long   0
.globl duff_struct
        .section        .rodata
.LC1:
        .string <span class="s2">&quot;duff&quot;</span>
.LC2:
        .string <span class="s2">&quot;duff to from count&quot;</span>
        .section        .data.rel,<span class="s2">&quot;aw&quot;</span>,@progbits
        .align 4
        .type   duff_struct, @object
        .size   duff_struct, 24
duff_struct:
        .long   .LC1
        .long   duff_builtin
        .long   1
        .long   duff_doc
        .long   .LC2
        .long   0
        .section        .text.__i686.get_pc_thunk.bx,<span class="s2">&quot;axG&quot;</span>,@progbits,__i686.get_pc_thunk.bx,comdat
.globl __i686.get_pc_thunk.bx
        .hidden __i686.get_pc_thunk.bx
        .type   __i686.get_pc_thunk.bx, @function
__i686.get_pc_thunk.bx:
        movl    <span class="o">(</span>%esp<span class="o">)</span>, %ebx
        ret
        .section        .note.GNU-stack,<span class="s2">&quot;&quot;</span>,@progbits
__ASM__

    cc -shared -o <span class="nv">$pgm_name</span> <span class="nv">$pgm_source</span>
<span class="o">)</span>

<span class="nb">enable</span> -f <span class="nv">$pgm_dir</span>/<span class="nv">$pgm_name</span> <span class="nv">$pgm_name</span>
rm -rf <span class="nv">$pgm_dir</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8040/addtag/" class="addtag" id="addtag_8040">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512170312/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8040/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8040/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8040"
  >-</span><span
  class="button yellow"
  id="rating_z_8040"
  >0</span><span 
  class="button green"
  id="rating_p_8040"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8040/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8041">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8041/">#8041</a>(<script language="JavaScript">print_time(new Date("2008/11/15 07:09 GMT"));</script><noscript>2008/11/15 07:09 GMT</noscript>)
	
	
	
	[<a href="/web/20090512170312/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>以下のコードを、.NET Frameworkのリフレクションの機能で実装しました。
C#のswitch文では fall-through ができないのですが、ILでは関係なく動かせます。また、IL作るのにC#の言語機能が使えるのは面白いですね。

static void Copy(byte[] to, byte[] from) {
    int count = from.Length;
    int index = 0;
    switch (count % 8) {
        case 7:
            to[index] = from[index++];
            goto case 6;
        case 6:
            to[index] = from[index++];
            goto case 5;
        case 5:
            to[index] = from[index++];
            goto case 4;
        case 4:
            to[index] = from[index++];
            goto case 3;
        case 3:
            to[index] = from[index++];
            goto case 2;
        case 2:
            to[index] = from[index++];
            goto case 1;
        case 1:
            to[index] = from[index++];
            goto case 0;
        case 0:
            break;
    }
    while (index &lt; count) {
        to[index] = from[index++];
        to[index] = from[index++];
        to[index] = from[index++];
        to[index] = from[index++];
        to[index] = from[index++];
        to[index] = from[index++];
        to[index] = from[index++];
        to[index] = from[index++];
    }
}
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Reflection</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Reflection.Emit</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">doukaku216</span> <span class="k">{</span>
    <span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
        <span class="k">public</span> <span class="k">delegate</span> <span class="k">void</span> <span class="n">CopyDelegate</span><span class="p">(</span><span class="kt">byte</span><span class="p">[]</span> <span class="n">to</span><span class="p">,</span> <span class="kt">byte</span><span class="p">[]</span> <span class="n">from</span><span class="p">);</span>
        <span class="k">public</span> <span class="k">static</span> <span class="n">CopyDelegate</span> <span class="nf">CreateCopy</span><span class="p">()</span> <span class="k">{</span>
            <span class="n">DynamicMethod</span> <span class="n">method</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DynamicMethod</span><span class="p">(</span><span class="s">&quot;Copy&quot;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">new</span> <span class="n">Type</span><span class="p">[]</span> <span class="k">{</span> <span class="k">typeof</span><span class="p">(</span><span class="kt">byte</span><span class="p">[]),</span> <span class="k">typeof</span><span class="p">(</span><span class="kt">byte</span><span class="p">[])</span> <span class="k">}</span><span class="p">);</span>
            <span class="n">ILGenerator</span> <span class="n">ilgen</span> <span class="p">=</span> <span class="n">method</span><span class="p">.</span><span class="n">GetILGenerator</span><span class="p">();</span>

            <span class="n">LocalBuilder</span> <span class="n">countLocal</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DeclareLocal</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
            <span class="n">LocalBuilder</span> <span class="n">indexLocal</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DeclareLocal</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldarg_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldlen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Stloc_0</span><span class="p">);</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldc_I4_0</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Stloc_1</span><span class="p">);</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldloc_0</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldc_I4_8</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Rem</span><span class="p">);</span>

            <span class="n">Label</span> <span class="n">startLabel</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">endLabel</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case1Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case2Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case3Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case4Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case5Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case6Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case7Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Switch</span><span class="p">,</span> <span class="k">new</span> <span class="n">Label</span><span class="p">[]</span> <span class="k">{</span> <span class="n">endLabel</span><span class="p">,</span> <span class="n">case1Label</span><span class="p">,</span> <span class="n">case2Label</span><span class="p">,</span> <span class="n">case3Label</span><span class="p">,</span> <span class="n">case4Label</span><span class="p">,</span> <span class="n">case5Label</span><span class="p">,</span> <span class="n">case6Label</span><span class="p">,</span> <span class="n">case7Label</span> <span class="k">}</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Br</span><span class="p">,</span> <span class="n">endLabel</span><span class="p">);</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case7Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case6Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case5Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case4Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case3Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case2Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case1Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Br_S</span><span class="p">,</span> <span class="n">endLabel</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">startLabel</span><span class="p">);</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">index</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">index</span> <span class="p">&lt;</span> <span class="m">8</span><span class="p">;</span> <span class="n">index</span><span class="p">++)</span> <span class="k">{</span>
                <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="k">}</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">endLabel</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldloc_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldloc_0</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Blt_S</span><span class="p">,</span> <span class="n">startLabel</span><span class="p">);</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ret</span><span class="p">);</span>
            <span class="k">return</span> <span class="n">method</span><span class="p">.</span><span class="n">CreateDelegate</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">CopyDelegate</span><span class="p">))</span> <span class="k">as</span> <span class="n">CopyDelegate</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">CreateCopyIL</span><span class="p">(</span><span class="n">ILGenerator</span> <span class="n">ilgen</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldarg_0</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldloc_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldarg_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldloc_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Dup</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldc_I4_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Add</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Stloc_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldelem_U1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Stelem_I1</span><span class="p">);</span>
        <span class="k">}</span>


        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
            <span class="kt">byte</span><span class="p">[]</span> <span class="n">to</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[</span><span class="m">100</span><span class="p">];</span>
            <span class="kt">byte</span><span class="p">[]</span> <span class="n">from</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[</span><span class="m">100</span><span class="p">];</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">byte</span> <span class="n">index</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">index</span> <span class="p">&lt;</span> <span class="n">from</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">index</span><span class="p">++)</span> <span class="k">{</span>
                <span class="n">from</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="p">=</span> <span class="n">index</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="n">CopyDelegate</span> <span class="n">copy</span> <span class="p">=</span> <span class="n">CreateCopy</span><span class="p">();</span>
            <span class="n">copy</span><span class="p">(</span><span class="n">to</span><span class="p">,</span> <span class="n">from</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">BitConverter</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">to</span><span class="p">));</span>
        <span class="k">}</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8041/addtag/" class="addtag" id="addtag_8041">タグ</a>:
	
    
    <a href="/web/20090512170312/http://ja.doukaku.org/tag/IL/">IL</a>
    
	&nbsp;

	
      [<a href="/web/20090512170312/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8041/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8041/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8041"
  >-</span><span
  class="button yellow"
  id="rating_z_8041"
  >0</span><span 
  class="button green"
  id="rating_p_8041"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20090512170312/http://ja.doukaku.org/comment/8041/">
    2
    replies
  </a>

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8041/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8042">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8042/">#8042</a>(<script language="JavaScript">print_time(new Date("2008/11/15 08:22 GMT"));</script><noscript>2008/11/15 08:22 GMT</noscript>)
	
	
	
	[<a href="/web/20090512170312/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>投稿してから気付いたので、ちゃんと元のアセンブラと同等のILが作れるのに気付いたので修正。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Reflection</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Reflection.Emit</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">doukaku216</span> <span class="k">{</span>
    <span class="k">class</span> <span class="nc">Program</span> <span class="k">{</span>
        <span class="k">public</span> <span class="k">delegate</span> <span class="k">void</span> <span class="n">CopyDelegate</span><span class="p">(</span><span class="kt">byte</span><span class="p">[]</span> <span class="n">to</span><span class="p">,</span> <span class="kt">byte</span><span class="p">[]</span> <span class="n">from</span><span class="p">);</span>
        <span class="k">public</span> <span class="k">static</span> <span class="n">CopyDelegate</span> <span class="nf">CreateCopy</span><span class="p">()</span> <span class="k">{</span>
            <span class="n">DynamicMethod</span> <span class="n">method</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DynamicMethod</span><span class="p">(</span><span class="s">&quot;Copy&quot;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">new</span> <span class="n">Type</span><span class="p">[]</span> <span class="k">{</span> <span class="k">typeof</span><span class="p">(</span><span class="kt">byte</span><span class="p">[]),</span> <span class="k">typeof</span><span class="p">(</span><span class="kt">byte</span><span class="p">[])</span> <span class="k">}</span><span class="p">);</span>
            <span class="n">ILGenerator</span> <span class="n">ilgen</span> <span class="p">=</span> <span class="n">method</span><span class="p">.</span><span class="n">GetILGenerator</span><span class="p">();</span>

            <span class="n">LocalBuilder</span> <span class="n">countLocal</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DeclareLocal</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
            <span class="n">LocalBuilder</span> <span class="n">indexLocal</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DeclareLocal</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldarg_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldlen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Stloc_0</span><span class="p">);</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldc_I4_0</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Stloc_1</span><span class="p">);</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldloc_0</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldc_I4_8</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Rem</span><span class="p">);</span>

            <span class="n">Label</span> <span class="n">case0Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case1Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case2Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case3Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case4Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case5Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case6Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">Label</span> <span class="n">case7Label</span> <span class="p">=</span> <span class="n">ilgen</span><span class="p">.</span><span class="n">DefineLabel</span><span class="p">();</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Switch</span><span class="p">,</span> <span class="k">new</span> <span class="n">Label</span><span class="p">[]</span> <span class="k">{</span> <span class="n">case0Label</span><span class="p">,</span> <span class="n">case1Label</span><span class="p">,</span> <span class="n">case2Label</span><span class="p">,</span> <span class="n">case3Label</span><span class="p">,</span> <span class="n">case4Label</span><span class="p">,</span> <span class="n">case5Label</span><span class="p">,</span> <span class="n">case6Label</span><span class="p">,</span> <span class="n">case7Label</span> <span class="k">}</span><span class="p">);</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case0Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case7Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case6Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case5Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case4Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case3Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case2Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">MarkLabel</span><span class="p">(</span><span class="n">case1Label</span><span class="p">);</span>
            <span class="n">CreateCopyIL</span><span class="p">(</span><span class="n">ilgen</span><span class="p">);</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldloc_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldloc_0</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Blt_S</span><span class="p">,</span> <span class="n">case0Label</span><span class="p">);</span>

            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ret</span><span class="p">);</span>
            <span class="k">return</span> <span class="n">method</span><span class="p">.</span><span class="n">CreateDelegate</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="n">CopyDelegate</span><span class="p">))</span> <span class="k">as</span> <span class="n">CopyDelegate</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">CreateCopyIL</span><span class="p">(</span><span class="n">ILGenerator</span> <span class="n">ilgen</span><span class="p">)</span> <span class="k">{</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldarg_0</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldloc_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldarg_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldloc_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Dup</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldc_I4_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Add</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Stloc_1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Ldelem_U1</span><span class="p">);</span>
            <span class="n">ilgen</span><span class="p">.</span><span class="n">Emit</span><span class="p">(</span><span class="n">OpCodes</span><span class="p">.</span><span class="n">Stelem_I1</span><span class="p">);</span>
        <span class="k">}</span>


        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span> <span class="k">{</span>
            <span class="kt">byte</span><span class="p">[]</span> <span class="n">to</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[</span><span class="m">100</span><span class="p">];</span>
            <span class="kt">byte</span><span class="p">[]</span> <span class="n">from</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[</span><span class="m">100</span><span class="p">];</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">byte</span> <span class="n">index</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">index</span> <span class="p">&lt;</span> <span class="n">from</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">index</span><span class="p">++)</span> <span class="k">{</span>
                <span class="n">from</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="p">=</span> <span class="n">index</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="n">CopyDelegate</span> <span class="n">copy</span> <span class="p">=</span> <span class="n">CreateCopy</span><span class="p">();</span>
            <span class="n">copy</span><span class="p">(</span><span class="n">to</span><span class="p">,</span> <span class="n">from</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">BitConverter</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">to</span><span class="p">));</span>
        <span class="k">}</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8042/addtag/" class="addtag" id="addtag_8042">タグ</a>:
	
    
    <a href="/web/20090512170312/http://ja.doukaku.org/tag/IL/">IL</a>
    
	&nbsp;

	
      [<a href="/web/20090512170312/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8042/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8042/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8042"
  >-</span><span
  class="button yellow"
  id="rating_z_8042"
  >0</span><span 
  class="button green"
  id="rating_p_8042"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512170312/http://ja.doukaku.org/comment/8041/"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512170312/http://ja.doukaku.org/comment/8042/root/"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8042/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8043">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8043/">#8043</a>(<script language="JavaScript">print_time(new Date("2008/11/15 12:04 GMT"));</script><noscript>2008/11/15 12:04 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  C#のSwitch もfall-throughですけど・
（例文のように書けないという意味ですよね）
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8043/addtag/" class="addtag" id="addtag_8043">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8043"
  >-</span><span
  class="button yellow"
  id="rating_z_8043"
  >0</span><span 
  class="button green"
  id="rating_p_8043"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512170312/http://ja.doukaku.org/comment/8041/"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512170312/http://ja.doukaku.org/comment/8043/root/"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090512170312/http://ja.doukaku.org/comment/8043/">
    1
    reply
  </a>

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8043/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8046">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8046/">#8046</a>(<script language="JavaScript">print_time(new Date("2008/11/16 08:02 GMT"));</script><noscript>2008/11/16 08:02 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>すいません、多少言葉が少なかったです。
以下のようなコードはC#でも書けます。</p>
<dl class="docutils">
<dt>switch (n) {</dt>
<dd><p class="first">case 0:
case 1:</p>
<div class="system-message">
<p class="system-message-title">System Message: ERROR/3 (<tt class="docutils">&lt;string&gt;</tt>, line 7)</p>
Unexpected indentation.</div>
<blockquote>
～何かの処理;
break;</blockquote>
<div class="system-message">
<p class="system-message-title">System Message: WARNING/2 (<tt class="docutils">&lt;string&gt;</tt>, line 9)</p>
Block quote ends without a blank line; unexpected unindent.</div>
<dl class="last docutils">
<dt>case 2:</dt>
<dd>～</dd>
</dl>
</dd>
</dl>
<div class="system-message">
<p class="system-message-title">System Message: WARNING/2 (<tt class="docutils">&lt;string&gt;</tt>, line 11)</p>
Definition list ends without a blank line; unexpected unindent.</div>
<p>}</p>
<p>しかし、case 0 とcase 1の間に何か処理がある場合には
breakかreturnかgotoを書け、とエラーになります。
つまり、参考ページの通り『暗黙的な落下 (フォール スルー) をサポートしていません。』とのことです。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20090512170312/http://msdn.microsoft.com/ja-jp/library/06tc147t(VS.80).aspx">switch (C#)</a>
	</p>  
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8046/addtag/" class="addtag" id="addtag_8046">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8046"
  >-</span><span
  class="button yellow"
  id="rating_z_8046"
  >0</span><span 
  class="button green"
  id="rating_p_8046"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512170312/http://ja.doukaku.org/comment/8043/"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512170312/http://ja.doukaku.org/comment/8046/root/"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  <a href="/web/20090512170312/http://ja.doukaku.org/comment/8046/">
    1
    reply
  </a>

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8046/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8047">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8047/">#8047</a>(<script language="JavaScript">print_time(new Date("2008/11/16 08:05 GMT"));</script><noscript>2008/11/16 08:05 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>なんだか、コードをコメントに書いたらエラーがでちゃいました。
書いてあったのを復元しておきます。

switch (n) {
    case 0:
    case 1:
        ～何かの処理;
        break;
    case 2:
        ～
}
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8047/addtag/" class="addtag" id="addtag_8047">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8047"
  >-</span><span
  class="button yellow"
  id="rating_z_8047"
  >0</span><span 
  class="button green"
  id="rating_p_8047"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512170312/http://ja.doukaku.org/comment/8046/"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512170312/http://ja.doukaku.org/comment/8047/root/"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8047/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8049">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8049/">#8049</a>(<script language="JavaScript">print_time(new Date("2008/11/17 09:50 GMT"));</script><noscript>2008/11/17 09:50 GMT</noscript>)
	
	
	
	[<a href="/web/20090512170312/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>固定コードではいまいちなので、ループを完全に展開するようにしました。クラスローダのコンストラクタでコピーする個数を渡します。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample</span> <span class="k">extends</span> <span class="n">ClassLoader</span> <span class="o">{</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">PROLOGUE</span> <span class="o">=</span> <span class="o">{-</span><span class="mi">54</span><span class="o">,</span> <span class="o">-</span><span class="mi">2</span><span class="o">,</span> <span class="o">-</span><span class="mi">70</span><span class="o">,</span> <span class="o">-</span><span class="mi">66</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">49</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> 
            <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">105</span><span class="o">,</span> <span class="mi">110</span><span class="o">,</span> <span class="mi">105</span><span class="o">,</span> <span class="mi">116</span><span class="o">,</span> <span class="mi">62</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">40</span><span class="o">,</span> <span class="mi">41</span><span class="o">,</span> <span class="mi">86</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">67</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">99</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> 
            <span class="mi">112</span><span class="o">,</span> <span class="mi">121</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">40</span><span class="o">,</span> <span class="mi">91</span><span class="o">,</span> <span class="mi">66</span><span class="o">,</span> <span class="mi">91</span><span class="o">,</span> <span class="mi">66</span><span class="o">,</span> <span class="mi">41</span><span class="o">,</span> <span class="mi">86</span><span class="o">,</span> <span class="mi">12</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">67</span><span class="o">,</span> <span class="mi">111</span><span class="o">,</span> <span class="mi">112</span><span class="o">,</span> <span class="mi">121</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">16</span><span class="o">,</span> <span class="mi">106</span><span class="o">,</span> 
            <span class="mi">97</span><span class="o">,</span> <span class="mi">118</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> <span class="mi">47</span><span class="o">,</span> <span class="mi">108</span><span class="o">,</span> <span class="mi">97</span><span class="o">,</span> <span class="mi">110</span><span class="o">,</span> <span class="mi">103</span><span class="o">,</span> <span class="mi">47</span><span class="o">,</span> <span class="mi">79</span><span class="o">,</span> <span class="mi">98</span><span class="o">,</span> <span class="mi">106</span><span class="o">,</span> <span class="mi">101</span><span class="o">,</span> <span class="mi">99</span><span class="o">,</span> <span class="mi">116</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">33</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> 
            <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">17</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">42</span><span class="o">,</span> <span class="o">-</span><span class="mi">73</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">79</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> 
            <span class="mi">7</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">6</span><span class="o">};</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">FUNC_DATA</span> <span class="o">=</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">3</span><span class="o">};</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">ENTRY</span> <span class="o">=</span> <span class="o">{</span><span class="mi">3</span><span class="o">,</span>  <span class="mi">61</span><span class="o">};</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">BODY</span> <span class="o">=</span> <span class="o">{</span><span class="mi">42</span><span class="o">,</span> <span class="mi">28</span><span class="o">,</span> <span class="mi">43</span><span class="o">,</span> <span class="mi">28</span><span class="o">,</span> <span class="o">-</span><span class="mi">124</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">51</span><span class="o">,</span> <span class="mi">84</span><span class="o">};</span>
    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">EPILOGUE</span> <span class="o">=</span> <span class="o">{-</span><span class="mi">79</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">};</span>
    <span class="kt">int</span> <span class="n">bytes</span><span class="o">;</span>

    <span class="k">public</span> <span class="n">Sample</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">bytes</span> <span class="o">=</span> <span class="n">num</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="k">public</span> <span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">findClass</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="k">throws</span> <span class="n">ClassNotFoundException</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">ByteArrayOutputStream</span> <span class="n">bs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ByteArrayOutputStream</span><span class="o">();</span>
            <span class="n">DataOutputStream</span> <span class="n">os</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DataOutputStream</span><span class="o">(</span><span class="n">bs</span><span class="o">);</span>
            <span class="n">os</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">PROLOGUE</span><span class="o">);</span>
            <span class="n">os</span><span class="o">.</span><span class="na">writeInt</span><span class="o">(</span><span class="mi">9</span> <span class="o">*</span> <span class="n">bytes</span> <span class="o">+</span> <span class="mi">15</span><span class="o">);</span>
            <span class="n">os</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">FUNC_DATA</span><span class="o">);</span>
            <span class="n">os</span><span class="o">.</span><span class="na">writeInt</span><span class="o">(</span><span class="mi">9</span> <span class="o">*</span> <span class="n">bytes</span> <span class="o">+</span> <span class="mi">3</span><span class="o">);</span>
            <span class="n">os</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">ENTRY</span><span class="o">);</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">bytes</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
                <span class="n">os</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">BODY</span><span class="o">);</span>
            <span class="n">os</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">EPILOGUE</span><span class="o">);</span>
            <span class="kt">byte</span><span class="o">[]</span> <span class="n">b</span> <span class="o">=</span> <span class="n">bs</span><span class="o">.</span><span class="na">toByteArray</span><span class="o">();</span>
            <span class="k">return</span> <span class="n">defineClass</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">b</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">b</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="n">ClassNotFoundException</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="k">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">to</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">100</span><span class="o">];</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">from</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">100</span><span class="o">];</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">from</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
            <span class="n">from</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="o">(</span><span class="kt">byte</span><span class="o">)</span> <span class="n">i</span><span class="o">;</span>
        <span class="n">Method</span><span class="o">[]</span> <span class="n">ms</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sample</span><span class="o">(</span><span class="n">from</span><span class="o">.</span><span class="na">length</span><span class="o">).</span><span class="na">loadClass</span><span class="o">(</span><span class="s">&quot;Copy&quot;</span><span class="o">).</span><span class="na">getMethods</span><span class="o">();</span>
        <span class="n">ms</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">invoke</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="n">to</span><span class="o">,</span> <span class="n">from</span><span class="o">);</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">to</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8049/addtag/" class="addtag" id="addtag_8049">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20090512170312/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8049/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8049/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8049"
  >-</span><span
  class="button yellow"
  id="rating_z_8049"
  >0</span><span 
  class="button green"
  id="rating_p_8049"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20090512170312/http://ja.doukaku.org/comment/8038/"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20090512170312/http://ja.doukaku.org/comment/8049/root/"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8049/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8330">
  <p class="banner"><a href="/web/20090512170312/http://ja.doukaku.org/user/759/" target="_top">egtra</a><a href="/web/20090512170312/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8330/">#8330</a>(<script language="JavaScript">print_time(new Date("2009/01/14 04:13 GMT"));</script><noscript>2009/01/14 04:13 GMT</noscript>)
	
	
	
	[<a href="/web/20090512170312/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
<p>C++ですが、ただのインラインアセンブラではつまらないので、Xbyakを使いました。C++コードでアセンブリを表現し、実行時に機械語を作るというものです。
</p>
<p>ここでは、nバイト専用のコピールーチンを作るようにしてみました。
</p>



	</div>
	
	<p class="link">
	  参考: <a href="/web/20090512170312/http://homepage1.nifty.com/herumi/soft/xbyak.html">Xbyak</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;cstdio&gt;</span>
<span class="cp">#include &quot;xbyak/xbyak.h&quot;</span>

<span class="k">struct</span> <span class="n">MakeDuff</span> <span class="o">:</span> <span class="n">Xbyak</span><span class="o">::</span><span class="n">CodeGenerator</span>
<span class="p">{</span>
    <span class="n">MakeDuff</span><span class="p">(</span><span class="kt">unsigned</span> <span class="n">n</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">push</span><span class="p">(</span><span class="n">edi</span><span class="p">);</span>
        <span class="n">push</span><span class="p">(</span><span class="n">esi</span><span class="p">);</span>
        <span class="n">mov</span><span class="p">(</span><span class="n">edi</span><span class="p">,</span> <span class="n">ptr</span><span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mi">12</span><span class="o">+</span><span class="mi">0</span><span class="p">]);</span>
        <span class="n">mov</span><span class="p">(</span><span class="n">esi</span><span class="p">,</span> <span class="n">ptr</span><span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mi">12</span><span class="o">+</span><span class="mi">4</span><span class="p">]);</span>
        <span class="n">mov</span><span class="p">(</span><span class="n">eax</span><span class="p">,</span> <span class="n">edi</span><span class="p">);</span>
        <span class="n">mov</span><span class="p">(</span><span class="n">ecx</span><span class="p">,</span> <span class="p">(</span><span class="n">n</span> <span class="o">&gt;&gt;</span> <span class="mi">3</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
        <span class="k">switch</span> <span class="p">(</span><span class="n">n</span> <span class="o">&amp;</span> <span class="mi">7</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">case</span> <span class="mi">7</span><span class="o">:</span> <span class="n">jmp</span><span class="p">(</span><span class="s">&quot;L7&quot;</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">6</span><span class="o">:</span> <span class="n">jmp</span><span class="p">(</span><span class="s">&quot;L6&quot;</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">5</span><span class="o">:</span> <span class="n">jmp</span><span class="p">(</span><span class="s">&quot;L5&quot;</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">4</span><span class="o">:</span> <span class="n">jmp</span><span class="p">(</span><span class="s">&quot;L4&quot;</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">3</span><span class="o">:</span> <span class="n">jmp</span><span class="p">(</span><span class="s">&quot;L3&quot;</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">2</span><span class="o">:</span> <span class="n">jmp</span><span class="p">(</span><span class="s">&quot;L2&quot;</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">1</span><span class="o">:</span> <span class="n">jmp</span><span class="p">(</span><span class="s">&quot;L1&quot;</span><span class="p">);</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">0</span><span class="o">:</span> <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="n">L</span><span class="p">(</span><span class="s">&quot;L0&quot;</span><span class="p">);</span>
        <span class="n">copyOneByte</span><span class="p">();</span>
    <span class="n">L</span><span class="p">(</span><span class="s">&quot;L7&quot;</span><span class="p">);</span>
        <span class="n">copyOneByte</span><span class="p">();</span>
    <span class="n">L</span><span class="p">(</span><span class="s">&quot;L6&quot;</span><span class="p">);</span>
        <span class="n">copyOneByte</span><span class="p">();</span>
    <span class="n">L</span><span class="p">(</span><span class="s">&quot;L5&quot;</span><span class="p">);</span>
        <span class="n">copyOneByte</span><span class="p">();</span>
    <span class="n">L</span><span class="p">(</span><span class="s">&quot;L4&quot;</span><span class="p">);</span>
        <span class="n">copyOneByte</span><span class="p">();</span>
    <span class="n">L</span><span class="p">(</span><span class="s">&quot;L3&quot;</span><span class="p">);</span>
        <span class="n">copyOneByte</span><span class="p">();</span>
    <span class="n">L</span><span class="p">(</span><span class="s">&quot;L2&quot;</span><span class="p">);</span>
        <span class="n">copyOneByte</span><span class="p">();</span>
    <span class="n">L</span><span class="p">(</span><span class="s">&quot;L1&quot;</span><span class="p">);</span>
        <span class="n">copyOneByte</span><span class="p">();</span>
        <span class="n">dec</span><span class="p">(</span><span class="n">ecx</span><span class="p">);</span>
        <span class="n">jnz</span><span class="p">(</span><span class="s">&quot;L0&quot;</span><span class="p">);</span>
        <span class="n">pop</span><span class="p">(</span><span class="n">esi</span><span class="p">);</span>
        <span class="n">pop</span><span class="p">(</span><span class="n">edi</span><span class="p">);</span>
        <span class="n">ret</span><span class="p">();</span>
    <span class="p">}</span>
<span class="k">private</span><span class="o">:</span>
    <span class="kt">void</span> <span class="n">copyOneByte</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">mov</span><span class="p">(</span><span class="n">al</span><span class="p">,</span> <span class="n">ptr</span><span class="p">[</span><span class="n">esi</span><span class="p">]);</span>
        <span class="n">mov</span><span class="p">(</span><span class="n">ptr</span><span class="p">[</span><span class="n">edi</span><span class="p">],</span> <span class="n">al</span><span class="p">);</span>
        <span class="n">inc</span><span class="p">(</span><span class="n">esi</span><span class="p">);</span>
        <span class="n">inc</span><span class="p">(</span><span class="n">edi</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="k">typedef</span> <span class="kt">void</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="n">duff_memcpy_t</span><span class="p">)(</span><span class="kt">void</span><span class="o">*</span> <span class="n">dst</span><span class="p">,</span> <span class="kt">void</span> <span class="k">const</span><span class="o">*</span> <span class="n">src</span><span class="p">);</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">src</span><span class="p">[]</span> <span class="o">=</span> <span class="s">&quot;hello, world&quot;</span><span class="p">;</span>
    <span class="n">MakeDuff</span> <span class="n">m</span><span class="p">(</span><span class="k">sizeof</span> <span class="n">src</span><span class="p">);</span>
    <span class="n">duff_memcpy_t</span> <span class="n">duff</span> <span class="o">=</span> <span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="n">duff_memcpy_t</span><span class="o">&gt;</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">getCode</span><span class="p">());</span>
    <span class="kt">char</span> <span class="n">dst</span><span class="p">[</span><span class="mi">32</span><span class="p">];</span>
    <span class="n">duff</span><span class="p">(</span><span class="n">dst</span><span class="p">,</span> <span class="n">src</span><span class="p">);</span>
    <span class="n">std</span><span class="o">::</span><span class="n">puts</span><span class="p">(</span><span class="n">dst</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20090512170312/http://ja.doukaku.org/comment/8330/addtag/" class="addtag" id="addtag_8330">タグ</a>:
	
    
    <a href="/web/20090512170312/http://ja.doukaku.org/tag/Xbyak/">Xbyak</a>
    
	&nbsp;

	
      [<a href="/web/20090512170312/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8330/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20090512170312/http://ja.doukaku.org/comment/8330/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8330"
  >-</span><span
  class="button yellow"
  id="rating_z_8330"
  >0</span><span 
  class="button green"
  id="rating_p_8330"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20090512170312/http://ja.doukaku.org/216/reply_to/8330/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20090512170312if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20090512170312/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20090512170312/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20090512170312/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20090512170312/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20090512170312/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20090512170312/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20090512170312/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20090512170312/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090512170312/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20090512170312/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20090512170312im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20090512170312/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20090512170312/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20090512170312/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20090512170312/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20090512170312/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20090512170312/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20090512170312/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20090512170312/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20090512170312im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20090512170312/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20090512170312/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20090512170312/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20090512170312js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 17:03:12 May 12, 2009 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:53:42 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
