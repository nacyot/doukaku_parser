
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"> 
  <head>

<script type="text/javascript" src="/static/js/analytics.js" ></script>
<link type="text/css" rel="stylesheet" href="/static/css/banner-styles.css"/>




    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
    <title>
複素数
どう書く？org </title>

    <link rel="stylesheet" type="text/css"
	href="/web/20100628135508cs_/http://ja.doukaku.org/static/style/reset-fonts-grids.css" />
    <link rel="stylesheet" type="text/css"
	href="/web/20100628135508cs_/http://ja.doukaku.org/static/style/style.css?20071211?20071207" />
	
    <link rel="stylesheet" type="text/css"
	href="/web/20100628135508cs_/http://ja.doukaku.org/static/style/pygments.css" />


	
<meta name="robots" content="noindex,nofollow">

    <!--<script src="/web/20100628135508/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->


<!--<script src="/web/20100628135508/http://ja.doukaku.org/static/js/ieerbug/ieerbug.js" type="text/javascript"></script>-->
<script src="/web/20100628135508js_/http://ja.doukaku.org/static/js/jquery-1.1.3.1.js" type="text/javascript"></script>
<script src="/web/20100628135508js_/http://ja.doukaku.org/static/js/rating.js" type="text/javascript"></script>
<script src="/web/20100628135508js_/http://ja.doukaku.org/static/js/addtag.js?20071129" type="text/javascript"></script>

<script type="text/javascript">
is_key_navigation_enable = true;
</script>
<script src="/web/20100628135508js_/http://ja.doukaku.org/static/js/utils.js?~~~" type="text/javascript"></script>

</head>


<body id="doukaku_org">
<!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script> if (window.archive_analytics) { window.archive_analytics.values['server_name']="wwwb-app17.us.archive.org";}; </script>

<script type="text/javascript" src="/static/js/disclaim-element.js" ></script>
<script type="text/javascript" src="/static/js/graph-calc.js" ></script>
<script type="text/javascript" src="/static/jflot/jquery.min.js" ></script>
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1388534399999;
var wbPrefix = "/web/";
var wbCurrentUrl = "http:\/\/ja.doukaku.org\/247\/flatten\/";

var curYear = -1;
var curMonth = -1;
var yearCount = 18;
var firstYear = 1996;
var imgWidth = 450;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "28";
var displayMonth = "Jun";
var displayYear = "2010";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>
<div id="wm-ipp" lang="en" class="__wb_banner_div" style="display:none; position:relative;padding:0 5px;min-height:70px;min-width:800px">


<div id="wm-ipp-inside" class="__wb_banner_div" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(/static/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:'Lucida Grande','Arial',sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="/web/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0"/></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="/web/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://ja.doukaku.org/247/flatten/" style="width:400px;font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20100628135508" /><input type="submit" value="Go" style="font-size:11px;font-family:'Lucida Grande','Arial',sans-serif;margin-left:5px;width: inherit !important" /><span id="wm_tb_options" style="display:block;"></span></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:'Helvetica','Lucida Grande','Arial',sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20090528034839/http://ja.doukaku.org/247/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="28 May 2009"><strong>MAY</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 13:55:08 Jun 28, 2010">JUN</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       Jul
                       
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="/web/20090528034839/http://ja.doukaku.org/247/flatten/" title="3:48:39 May 28, 2009" style="background-color:transparent;border:none;"><img src="/static/images/toolbar/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 13:55:08 Jun 28, 2010">28</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
                       <img src="/static/images/toolbar/wm_tb_nxt_off.png" alt="Next capture" width="14" height="16" border="0"/>
                       
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="/web/20090528034839/http://ja.doukaku.org/247/flatten/" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="28 May 2009"><strong>2009</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 13:55:08 Jun 28, 2010">2010</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2011
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="/web/20100628135508*/http://ja.doukaku.org/247/flatten/" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>2 captures</strong></a>
           <div class="__wb_banner_div" style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">28 May 09 - 28 Jun 10</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:450px;height:27px;" href="" id="wm-graph-anchor">
       <div class="__wb_banner_div" id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:450px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;"
				onmouseover="showTrackers('inline');" 
				onmouseout="showTrackers('none');"
				onmousemove="trackMouseMove(event,this)"
				alt="sparklines"
				width="450"
				height="27"
				border="0"
				src="/web/jsp/graph.jsp?graphdata=450_27_1996:-1:000000000000_1997:-1:000000000000_1998:-1:000000000000_1999:-1:000000000000_2000:-1:000000000000_2001:-1:000000000000_2002:-1:000000000000_2003:-1:000000000000_2004:-1:000000000000_2005:-1:000000000000_2006:-1:000000000000_2007:-1:000000000000_2008:-1:000000000000_2009:-1:000010000000_2010:5:000001000000_2011:-1:000000000000_2012:-1:000000000000_2013:-1:000000000000"></img>
			<img id="wbMouseTrackYearImg" 
				style="display:none; position:absolute; z-index:9010;"
				width="25" 
				height="27"
				border="0"
				src="/static/images/toolbar/transp-yellow-pixel.png"></img>
			<img id="wbMouseTrackMonthImg"
				style="display:none; position:absolute; z-index:9011; " 
				width="2"
				height="27" 
				border="0"
				src="/static/images/toolbar/transp-red-pixel.png"></img>
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById('wm-ipp').style.display='none';" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.web.archive.org/" style="display:block;padding-right:18px;background:url(/static/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:'Lucida Grande','Arial',sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->


<div id="page_head" class="compact">
  <h1 class="compact">
    <a href="/web/20100628135508/http://ja.doukaku.org/">どう書く？org</a><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/beta.png" alt="beta">
  </h1>
</div>

<div id="page_body" class="compact">
<div id="content" class="compact">




<h2 class="compact">
<img src='/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png' alt=お題(出題済み)>
<a href="/web/20100628135508/http://ja.doukaku.org/247/">複素数</a>
</h2>

    





<div class="comment" id="comment8845">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/766/" target="_top">syat</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8845/">#8845</a>(<script language="JavaScript">print_time(new Date("2009/04/28 10:30 GMT"));</script><noscript>2009/04/28 10:30 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #bfff9f;">4/6=0.67</span></span>
  </p>
  <div class="comment_content" >
	<div class="comment_body">
	  以下の計算をしてください。<br/><br/>1.&nbsp;加算&nbsp;&nbsp;(&nbsp;3&nbsp;+&nbsp;i&nbsp;)&nbsp;+&nbsp;(&nbsp;4&nbsp;-&nbsp;i&nbsp;)<br/>2.&nbsp;減算&nbsp;&nbsp;(&nbsp;5&nbsp;-&nbsp;9i&nbsp;)&nbsp;-&nbsp;(&nbsp;2&nbsp;+&nbsp;6i&nbsp;)<br/>3.&nbsp;乗算&nbsp;&nbsp;(&nbsp;5&nbsp;+&nbsp;3i&nbsp;)&nbsp;&nbsp;*&nbsp;(&nbsp;5&nbsp;+&nbsp;8i&nbsp;)<br/>4.&nbsp;除算&nbsp;&nbsp;(&nbsp;9&nbsp;-&nbsp;7i&nbsp;)&nbsp;&nbsp;/&nbsp;&nbsp;(&nbsp;9&nbsp;-&nbsp;3i&nbsp;)<br/>5.&nbsp;絶対値&nbsp;&nbsp;|&nbsp;2&nbsp;+&nbsp;3i&nbsp;|<br/><br/>複素数計算を行う関数やクラスを定義して答えを求めること。<br/>ライブラリがある場合はそれを利用してかまいません。
	</div>
	
	<p class="link">
	  参考: <a href="/web/20100628135508/http://ja.wikipedia.org/wiki/%E8%A4%87%E7%B4%A0%E6%95%B0">Wikipedia：複素数</a>
	</p>  
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8845/addtag/" class="addtag" id="addtag_8845">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #bfff9f;"
  >4/6=0.67</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8845"
  >-</span><span
  class="button yellow"
  id="rating_z_8845"
  >0</span><span 
  class="button green"
  id="rating_p_8845"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8845/">
  返信
  </a>]
  </div>
</div>
</div>




  



<div class="indent">
<a href="/web/20100628135508/http://ja.doukaku.org/247/post_comment/">
投稿する
</a>
</div>


<h2>投稿されたコメント - フラット表示</h2>
<a href="/web/20100628135508/http://ja.doukaku.org/247/nested/">ネスト表示</a>
<a href="/web/20100628135508/http://ja.doukaku.org/247/">非表示</a> 


  
  <br/>

  
  




<div class="comment" id="comment8849">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8849/">#8849</a>(<script language="JavaScript">print_time(new Date("2009/04/28 14:19 GMT"));</script><noscript>2009/04/28 14:19 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/commonlisp/">
	  Common Lisp
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre>&gt; (+ #C(3 1) #C(4 -1))
7
&gt; (- #C(5 -9) #C(2 6))
#C(3 -15)
&gt; (* #C(5 3) #C(5 8))
#C(1 55)
&gt; (/ #C(9 -7) #C(9 -3))
#C(17/15 -2/5)
&gt; (abs #C(2 3))
3.6055512
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8849/addtag/" class="addtag" id="addtag_8849">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/commonlisp/">
		Common Lisp
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8849/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8849/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8849"
  >-</span><span
  class="button yellow"
  id="rating_z_8849"
  >0</span><span 
  class="button green"
  id="rating_p_8849"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100628135508/http://ja.doukaku.org/comment/8849/">
    1
    reply
  </a>

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8849/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8850">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8850/">#8850</a>(<script language="JavaScript">print_time(new Date("2009/04/28 15:45 GMT"));</script><noscript>2009/04/28 15:45 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/scheme/">
	  Scheme
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Common LispやSchemeだと問題になりませんね、これ。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="nv">Welcome</span> <span class="nv">to</span> <span class="nv">MzScheme</span> <span class="nv">v4</span><span class="o">.</span><span class="mi">0</span> <span class="err">[</span><span class="nv">cgc</span><span class="err">]</span><span class="o">,</span> <span class="nv">Copyright</span> <span class="p">(</span><span class="nf">c</span><span class="p">)</span> <span class="mi">2004-2008</span> <span class="nv">PLT</span> <span class="nv">Scheme</span> <span class="nv">Inc</span><span class="o">.</span>
<span class="nv">&gt;</span> <span class="p">(</span><span class="nb">+ </span><span class="mi">3</span><span class="nv">+i</span> <span class="mi">4</span><span class="nv">-i</span><span class="p">)</span>
<span class="mi">7</span>
<span class="nv">&gt;</span> <span class="p">(</span><span class="nb">- </span><span class="mi">5-9</span><span class="nv">i</span> <span class="mi">2</span><span class="nv">+6i</span><span class="p">)</span>
<span class="mi">3-15</span><span class="nv">i</span>
<span class="nv">&gt;</span> <span class="p">(</span><span class="nb">* </span><span class="mi">5</span><span class="nv">+3i</span> <span class="mi">5</span><span class="nv">+8i</span><span class="p">)</span>
<span class="mi">1</span><span class="nv">+55i</span>
<span class="nv">&gt;</span> <span class="p">(</span><span class="nb">/ </span><span class="mi">9-7</span><span class="nv">i</span> <span class="mi">9-3</span><span class="nv">i</span><span class="p">)</span>
<span class="mi">17</span><span class="nv">/15-2/5i</span>
<span class="nv">&gt;</span> <span class="p">(</span><span class="nb">magnitude </span><span class="mi">2</span><span class="nv">+3i</span><span class="p">)</span>
<span class="mf">3.6055512754639896</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8850/addtag/" class="addtag" id="addtag_8850">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/scheme/">
		Scheme
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8850/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8850/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8850"
  >-</span><span
  class="button yellow"
  id="rating_z_8850"
  >0</span><span 
  class="button green"
  id="rating_p_8850"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8849/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8850/root/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8850/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8851">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/819/" target="_top">sna</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_silver.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8851/">#8851</a>(<script language="JavaScript">print_time(new Date("2009/04/28 17:29 GMT"));</script><noscript>2009/04/28 17:29 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  クラス定義・演算子定義で。<br/><br/>実行結果:<br/>7.0<br/>3.0&nbsp;-&nbsp;15.0i<br/>1.0&nbsp;+&nbsp;55.0i<br/>1.1333333333333333&nbsp;-&nbsp;0.4i<br/>3.605551275463989<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72</pre></td><td class="code"><div class="highlight"><pre>object Complex {
  
  implicit def complex2richComplex(c: Complex) = new RichComplex(c)
  class RichComplex(val self: Complex) extends Proxy {
    def abs = self match {
      case Complex(re, im) =&gt; Math.sqrt(re*re + im*im)
    }
  }
  
  implicit def int2Complex   (n: Int   ): Complex = Complex(n, 0)
  implicit def double2Complex(n: Double): Complex = Complex(n, 0)
  
  val i = Complex(0, 1)
  
}

case class Complex(real: Double, imag: Double) {
  
  // +(a + bi) = (a + bi)
  def unary_+ = this
  
  // -(a + bi) = (-a - bi)
  def unary_- = Complex(-real, -imag)
  
  // (a + bi) + (c + di) = (a + c) + (b + d)i
  def + (that: Complex) = Complex(this.real + that.real, this.imag + that.imag)
  
  // (a + bi) - (c + di) = (a - c) + (b - d)i
  def - (that: Complex) = Complex(this.real - that.real, this.imag - that.imag)
  
  // (a + bi) * (c + di) = (ac - bd) + (bc + ad)i
  def * (that: Complex) = {
    val Complex(a, b) = this
    val Complex(c, d) = that
    Complex(a*c - b*d, b*c + a*d)
  }
  
  // (a + bi) / (c + di) = (ac + bd) / (c^2 + d^2) + (bc - ad) / (c^2 + d^2)
  def / (that: Complex) = {
    val Complex(a, b) = this
    val Complex(c, d) = that
    val deno = c*c + d*d
    Complex((a*c + b*d) / deno, (b*c - a*d) / deno)
  }
  
  override def toString = this match {
    case Complex(re,  0) =&gt; re.toString
    case Complex( 0,  1) =&gt; &quot;i&quot;
    case Complex( 0, -1) =&gt; &quot;-i&quot;
    case Complex( 0, im) =&gt; im.toString + &quot;i&quot;
    case Complex(re,  1) =&gt; re.toString + &quot; + i&quot;
    case Complex(re, -1) =&gt; re.toString + &quot; - i&quot;
    case Complex(re, im) if im &gt;= 0 =&gt; re.toString + &quot; + &quot; + im.toString + &quot;i&quot;
    case Complex(re, im)            =&gt; re.toString + &quot; - &quot; + im.abs.toString + &quot;i&quot;
  }
  
}

object Doukaku247 {
  import Complex._
  
  def main(args: Array[String]) {
    
    println( (3 + i  ) + (4 - i  ) )
    println( (5 - 9*i) - (2 + 6*i) )
    println( (5 + 3*i) * (5 + 8*i) )
    println( (9 - 7*i) / (9 - 3*i) )
    println( (2 + 3*i).abs         )
    
  }
  
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8851/addtag/" class="addtag" id="addtag_8851">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8851/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8851/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8851"
  >-</span><span
  class="button yellow"
  id="rating_z_8851"
  >0</span><span 
  class="button green"
  id="rating_p_8851"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100628135508/http://ja.doukaku.org/comment/8851/">
    1
    reply
  </a>

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8851/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8852">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/232/" target="_top">kkobayashi</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8852/">#8852</a>(<script language="JavaScript">print_time(new Date("2009/04/28 18:45 GMT"));</script><noscript>2009/04/28 18:45 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/r/">
	  R
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Rでは組み込みです。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre>&gt; ( 3 + 1i ) + ( 4 - 1i )
[1] 7+0i
&gt; ( 5 - 9i ) - ( 2 + 6i )
[1] 3-15i
&gt; ( 5 + 3i ) * ( 5 + 8i )
[1] 1+55i
&gt; ( 9 - 7i )  /  ( 9 - 3i )
[1] 1.133333-0.4i
&gt; abs(2 + 3i)
[1] 3.605551
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8852/addtag/" class="addtag" id="addtag_8852">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/r/">
		R
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8852/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8852/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8852"
  >-</span><span
  class="button yellow"
  id="rating_z_8852"
  >0</span><span 
  class="button green"
  id="rating_p_8852"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8852/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8853">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8853/">#8853</a>(<script language="JavaScript">print_time(new Date("2009/04/28 20:59 GMT"));</script><noscript>2009/04/28 20:59 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/python/">
	  Python
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre><span class="o">&gt;&gt;&gt;</span> <span class="p">(</span><span class="mi">3</span> <span class="o">+</span> <span class="mi">1</span><span class="n">j</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="mi">4</span> <span class="o">-</span> <span class="mi">1</span><span class="n">j</span><span class="p">)</span>
<span class="p">(</span><span class="mi">7</span><span class="o">+</span><span class="mi">0</span><span class="n">j</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">(</span><span class="mi">5</span> <span class="o">-</span> <span class="mi">9</span><span class="n">j</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="mi">2</span> <span class="o">-</span> <span class="mi">6</span><span class="n">j</span><span class="p">)</span>
<span class="p">(</span><span class="mi">3</span><span class="o">-</span><span class="mi">3</span><span class="n">j</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">(</span><span class="mi">5</span> <span class="o">+</span> <span class="mi">3</span><span class="n">j</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="mi">5</span> <span class="o">+</span> <span class="mi">8</span><span class="n">j</span><span class="p">)</span>
<span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">55</span><span class="n">j</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">(</span><span class="mi">9</span> <span class="o">-</span> <span class="mi">7</span><span class="n">j</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="mi">9</span> <span class="o">-</span> <span class="mi">3</span><span class="n">j</span><span class="p">)</span>
<span class="p">(</span><span class="mf">1.1333333333333333</span><span class="o">-</span><span class="mf">0.40000000000000002</span><span class="n">j</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">abs</span><span class="p">(</span><span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span><span class="n">j</span><span class="p">)</span>
<span class="mf">3.6055512754639896</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8853/addtag/" class="addtag" id="addtag_8853">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/python/">
		Python
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8853/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8853/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8853"
  >-</span><span
  class="button yellow"
  id="rating_z_8853"
  >0</span><span 
  class="button green"
  id="rating_p_8853"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8853/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8854">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/828/" target="_top">ポケット</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8854/">#8854</a>(<script language="JavaScript">print_time(new Date("2009/04/29 00:04 GMT"));</script><noscript>2009/04/29 00:04 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>Math::Complexをつかってやってみました。
もう少しきれいにかけると思いますが、
とりあえずわかりやすいように上で沢山の変数を宣言してみました。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51</pre></td><td class="code"><div class="highlight"><pre><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
<span class="k">use</span> <span class="nn">Math::</span><span class="n">Complex</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">$kasan_a</span> <span class="o">=</span> <span class="mi">3</span> <span class="o">+</span> <span class="n">i</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$kasan_b</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">-</span> <span class="n">i</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">$gensan_a</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">-</span> <span class="mi">9</span><span class="o">*</span><span class="n">i</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$gensan_b</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">6</span><span class="o">*</span><span class="n">i</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">$jyousan_a</span> <span class="o">=</span>  <span class="mi">5</span> <span class="o">+</span> <span class="mi">3</span><span class="o">*</span><span class="n">i</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$jyousan_b</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">+</span> <span class="mi">8</span><span class="o">*</span><span class="n">i</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">$jyosan_a</span> <span class="o">=</span> <span class="mi">9</span> <span class="o">-</span> <span class="mi">7</span><span class="o">*</span><span class="n">i</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$jyosan_b</span> <span class="o">=</span> <span class="mi">9</span> <span class="o">-</span> <span class="mi">3</span><span class="o">*</span><span class="n">i</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">$zettai</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span><span class="o">*</span><span class="n">i</span><span class="p">;</span>

<span class="k">sub </span><span class="nf">Complex_add</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$a</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="k">my</span> <span class="nv">$b</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="k">print</span> <span class="s">&quot;$a + $b =&quot;</span><span class="p">,</span><span class="nv">$a</span><span class="o">+</span><span class="nv">$b</span><span class="p">,</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">Complex_minus</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$a</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="k">my</span> <span class="nv">$b</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="k">print</span> <span class="s">&quot;$a - $b =&quot;</span><span class="p">,</span><span class="nv">$a</span><span class="o">-</span><span class="nv">$b</span><span class="p">,</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">Complex_times</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$a</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="k">my</span> <span class="nv">$b</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="k">print</span> <span class="s">&quot;$a * $b =&quot;</span><span class="p">,</span><span class="nv">$a</span><span class="o">*</span><span class="nv">$b</span><span class="p">,</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">Complex_divide</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$a</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="k">my</span> <span class="nv">$b</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
    <span class="k">print</span> <span class="s">&quot;$a / $b =&quot;</span><span class="p">,</span><span class="nv">$a</span><span class="o">/</span><span class="nv">$b</span><span class="p">,</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">sub </span><span class="nf">Complex_abs</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$a</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="k">print</span> <span class="s">&quot;| $a | =&quot;</span><span class="p">,</span><span class="nb">abs</span><span class="p">(</span><span class="nv">$a</span><span class="p">),</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="p">}</span>
<span class="n">Complex_add</span><span class="p">(</span><span class="nv">$kasan_a</span><span class="p">,</span><span class="nv">$kasan_b</span><span class="p">);</span>
<span class="n">Complex_minus</span><span class="p">(</span><span class="nv">$gensan_a</span><span class="p">,</span><span class="nv">$gensan_b</span><span class="p">);</span>
<span class="n">Complex_times</span><span class="p">(</span><span class="nv">$jyousan_a</span><span class="p">,</span><span class="nv">$jyousan_b</span><span class="p">);</span>
<span class="n">Complex_divide</span><span class="p">(</span><span class="nv">$jyosan_a</span><span class="p">,</span><span class="nv">$jyosan_b</span><span class="p">);</span>
<span class="n">Complex_abs</span><span class="p">(</span><span class="nv">$zettai</span><span class="p">);</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8854/addtag/" class="addtag" id="addtag_8854">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8854/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8854/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8854"
  >-</span><span
  class="button yellow"
  id="rating_z_8854"
  >0</span><span 
  class="button green"
  id="rating_p_8854"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8854/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8855">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/570/" target="_top">horiuchi</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8855/">#8855</a>(<script language="JavaScript">print_time(new Date("2009/04/29 02:20 GMT"));</script><noscript>2009/04/29 02:20 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/java/">
	  Java
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Jakarta Commons Math を使ってみました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="nn">org.apache.commons.math.complex.Complex</span><span class="o">;</span>
<span class="k">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">apache</span><span class="o">.</span><span class="na">commons</span><span class="o">.</span><span class="na">math</span><span class="o">.</span><span class="na">complex</span><span class="o">.</span><span class="na">ComplexFormat</span><span class="o">.*;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">Sample247</span> <span class="o">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="n">$</span><span class="o">(</span><span class="kt">double</span> <span class="n">real</span><span class="o">,</span> <span class="kt">double</span> <span class="n">imaginary</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">Complex</span><span class="o">(</span><span class="n">real</span><span class="o">,</span> <span class="n">imaginary</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">formatComplex</span><span class="o">(</span>
                <span class="n">$</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">).</span><span class="na">add</span><span class="o">(</span><span class="n">$</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">))</span>
        <span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">formatComplex</span><span class="o">(</span>
                <span class="n">$</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="o">-</span><span class="mi">9</span><span class="o">).</span><span class="na">subtract</span><span class="o">(</span><span class="n">$</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">6</span><span class="o">))</span>
        <span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">formatComplex</span><span class="o">(</span>
                <span class="n">$</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">3</span><span class="o">).</span><span class="na">multiply</span><span class="o">(</span><span class="n">$</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">8</span><span class="o">))</span>
        <span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">formatComplex</span><span class="o">(</span>
                <span class="n">$</span><span class="o">(</span><span class="mi">9</span><span class="o">,</span> <span class="o">-</span><span class="mi">7</span><span class="o">).</span><span class="na">divide</span><span class="o">(</span><span class="n">$</span><span class="o">(</span><span class="mi">9</span><span class="o">,</span> <span class="o">-</span><span class="mi">3</span><span class="o">))</span>
        <span class="o">));</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">$</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">).</span><span class="na">abs</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8855/addtag/" class="addtag" id="addtag_8855">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/java/">
		Java
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8855/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8855/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8855"
  >-</span><span
  class="button yellow"
  id="rating_z_8855"
  >0</span><span 
  class="button green"
  id="rating_p_8855"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8855/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8856">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8856/">#8856</a>(<script language="JavaScript">print_time(new Date("2009/04/29 03:57 GMT"));</script><noscript>2009/04/29 03:57 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/fortran/">
	  FORTRAN
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>深くは考えず、FORTRAN でやってみました☆

 (  7.0000000    ,  0.0000000    )
 (  3.0000000    , -15.000000    )
 (  1.0000000    ,  55.000000    )
 (  1.1333333    ,-0.40000001    )
   3.6055512</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre>print *, ( 3, 1) + ( 4,-1)
print *, ( 5,-9) - ( 2, 6)
print *, ( 5, 3) * ( 5, 8)
print *, ( 9,-7) / ( 9,-3)
print *, abs(( 2, 3))
end
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8856/addtag/" class="addtag" id="addtag_8856">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/fortran/">
		FORTRAN
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8856/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8856/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8856"
  >-</span><span
  class="button yellow"
  id="rating_z_8856"
  >0</span><span 
  class="button green"
  id="rating_p_8856"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8856/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8857">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/852/" target="_top">emasaka</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8857/">#8857</a>(<script language="JavaScript">print_time(new Date("2009/04/29 05:20 GMT"));</script><noscript>2009/04/29 05:20 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/bash/">
	  Bash
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>calc（apcalc）で。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20100628135508/http://www.isthe.com/chongo/tech/comp/calc/">Calc - C-style arbitrary precision calculator</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre><span class="nv">$ </span>calc <span class="s1">&#39;( 3 + 1i ) + ( 4 - 1i )&#39;</span>
    7
<span class="nv">$ </span>calc <span class="s1">&#39;( 5 - 9i ) - ( 2 + 6i )&#39;</span>
    3-15i
<span class="nv">$ </span>calc <span class="s1">&#39;( 5 + 3i )  * ( 5 + 8i )&#39;</span>
    1+55i
<span class="nv">$ </span>calc <span class="s1">&#39;( 9 - 7i )  /  ( 9 - 3i )&#39;</span>
    ~1.13333333333333333333-0.4i
<span class="nv">$ </span>calc <span class="s1">&#39;abs( 2 + 3i )&#39;</span>
    3.60555127546398929312
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8857/addtag/" class="addtag" id="addtag_8857">タグ</a>:
	
    
    <a href="/web/20100628135508/http://ja.doukaku.org/tag/calc/">calc</a>
    
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/bash/">
		Bash
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8857/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8857/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8857"
  >-</span><span
  class="button yellow"
  id="rating_z_8857"
  >0</span><span 
  class="button green"
  id="rating_p_8857"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8857/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8858">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8858/">#8858</a>(<script language="JavaScript">print_time(new Date("2009/04/29 12:56 GMT"));</script><noscript>2009/04/29 12:56 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/cpp/">
	  C++
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>実行結果：
(3,1)+(4,-1)=(7,0)
(5,-9)-(2,6)=(3,-15)
(5,3)*(5,8)=(1,55)
(9,-7)/(9,-3)=(1.13333,-0.4)
<a href="/web/20100628135508/http://ja.doukaku.org/247/flatten/#id1" name="id2"><span class="problematic" id="id2">|</span></a>(2,3)|=3.60555</p>
<div class="system-message" id="id1">
<p class="system-message-title">System Message: <a name="id1">WARNING/2</a> (<tt class="docutils">&lt;string&gt;</tt>, line 1); <em><a href="/web/20100628135508/http://ja.doukaku.org/247/flatten/#id2">backlink</a></em></p>
Inline substitution_reference start-string without end-string.</div>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre><span class="cp">#include &lt;complex&gt;</span>
<span class="cp">#include &lt;iostream&gt;</span>

<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
    <span class="n">complex</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">dc1</span><span class="p">(</span><span class="mf">3.0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
    <span class="n">complex</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">dc2</span><span class="p">(</span><span class="mf">4.0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
    <span class="n">complex</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">dc3</span><span class="p">(</span><span class="mf">5.0</span><span class="p">,</span><span class="o">-</span><span class="mi">9</span><span class="p">);</span>
    <span class="n">complex</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">dc4</span><span class="p">(</span><span class="mf">2.0</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
    <span class="n">complex</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">dc5</span><span class="p">(</span><span class="mf">5.0</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
    <span class="n">complex</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">dc6</span><span class="p">(</span><span class="mf">5.0</span><span class="p">,</span> <span class="mi">8</span><span class="p">);</span>
    <span class="n">complex</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">dc7</span><span class="p">(</span><span class="mf">9.0</span><span class="p">,</span><span class="o">-</span><span class="mi">7</span><span class="p">);</span>
    <span class="n">complex</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">dc8</span><span class="p">(</span><span class="mf">9.0</span><span class="p">,</span><span class="o">-</span><span class="mi">3</span><span class="p">);</span>
    <span class="n">complex</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">dc9</span><span class="p">(</span><span class="mf">2.0</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">dc1</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;+&#39;</span> <span class="o">&lt;&lt;</span> <span class="n">dc2</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;=&#39;</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">dc1</span> <span class="o">+</span> <span class="n">dc2</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">dc3</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;-&#39;</span> <span class="o">&lt;&lt;</span> <span class="n">dc4</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;=&#39;</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">dc3</span> <span class="o">-</span> <span class="n">dc4</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">dc5</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;*&#39;</span> <span class="o">&lt;&lt;</span> <span class="n">dc6</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;=&#39;</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">dc5</span> <span class="o">*</span> <span class="n">dc6</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">dc7</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;/&#39;</span> <span class="o">&lt;&lt;</span> <span class="n">dc8</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;=&#39;</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">dc7</span> <span class="o">/</span> <span class="n">dc8</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;|&#39;</span> <span class="o">&lt;&lt;</span> <span class="n">dc9</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;|=&quot;</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">abs</span><span class="p">(</span><span class="n">dc9</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8858/addtag/" class="addtag" id="addtag_8858">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/cpp/">
		C++
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8858/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8858/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8858"
  >-</span><span
  class="button yellow"
  id="rating_z_8858"
  >0</span><span 
  class="button green"
  id="rating_p_8858"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100628135508/http://ja.doukaku.org/comment/8858/">
    1
    reply
  </a>

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8858/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8859">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8859/">#8859</a>(<script language="JavaScript">print_time(new Date("2009/04/29 07:58 GMT"));</script><noscript>2009/04/29 07:58 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>実行結果をもう一度
(3,1)+(4,-1)=(7,0)
(5,-9)-(2,6)=(3,-15)
(5,3)*(5,8)=(1,55)
(9,-7)/(9,-3)=(1.13333,-0.4)
|(2,3)|=3.60555
</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8859/addtag/" class="addtag" id="addtag_8859">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8859"
  >-</span><span
  class="button yellow"
  id="rating_z_8859"
  >0</span><span 
  class="button green"
  id="rating_p_8859"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8858/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8859/root/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8859/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8860">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/606/" target="_top">pooq</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8860/">#8860</a>(<script language="JavaScript">print_time(new Date("2009/04/29 08:14 GMT"));</script><noscript>2009/04/29 08:14 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/j/">
	  J
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>J言語では複素数 a + bi を ajb で表現します。
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre>   3j1 + 4j_1
7
   5j_9 - 2j6
3j_15
   5j3 * 5j8
1j55
   9j_7 % 9j_3
1.13333j_0.4
   | 2j3
3.60555
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8860/addtag/" class="addtag" id="addtag_8860">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/j/">
		J
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8860/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8860/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8860"
  >-</span><span
  class="button yellow"
  id="rating_z_8860"
  >0</span><span 
  class="button green"
  id="rating_p_8860"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8860/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8861">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/1013/" target="_top">selpo</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8861/">#8861</a>(<script language="JavaScript">print_time(new Date("2009/04/29 13:42 GMT"));</script><noscript>2009/04/29 13:42 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/csharp/">
	  C#
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>頑張ってみました。
正直、めんどかったです。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205</pre></td><td class="code"><div class="highlight"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">P</span>
<span class="k">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="k">{</span>
        <span class="n">Complex</span> <span class="n">a</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
        <span class="n">Complex</span> <span class="n">b</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="m">4</span><span class="p">,</span> <span class="p">-</span><span class="m">1</span><span class="p">);</span>
        <span class="n">Complex</span> <span class="n">c</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="m">5</span><span class="p">,</span> <span class="p">-</span><span class="m">9</span><span class="p">);</span>
        <span class="n">Complex</span> <span class="n">d</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="m">6</span><span class="p">);</span>
        <span class="n">Complex</span> <span class="n">e</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="m">5</span><span class="p">,</span> <span class="m">3</span><span class="p">);</span>
        <span class="n">Complex</span> <span class="n">f</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="m">5</span><span class="p">,</span> <span class="m">8</span><span class="p">);</span>
        <span class="n">Complex</span> <span class="n">g</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="m">9</span><span class="p">,</span> <span class="p">-</span><span class="m">7</span><span class="p">);</span>
        <span class="n">Complex</span> <span class="n">h</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="m">9</span><span class="p">,</span> <span class="p">-</span><span class="m">3</span><span class="p">);</span>
        <span class="n">Complex</span> <span class="n">i</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="m">3</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;({0}) + ({1}) = {2}&quot;</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="p">+</span> <span class="n">b</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;({0}) - ({1}) = {2}&quot;</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="n">c</span> <span class="p">-</span> <span class="n">d</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;({0}) * ({1}) = {2}&quot;</span><span class="p">,</span> <span class="n">e</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="n">e</span> <span class="p">*</span> <span class="n">f</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;({0}) / ({1}) = {2}&quot;</span><span class="p">,</span> <span class="n">g</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">g</span> <span class="p">/</span> <span class="n">h</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;|{0}| = {1}&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">i</span><span class="p">.</span><span class="n">Abs</span><span class="p">);</span>
    <span class="k">}</span>
<span class="k">}</span>
<span class="k">class</span> <span class="nc">Complex</span>
<span class="k">{</span>
    <span class="k">protected</span> <span class="kt">double</span> <span class="n">re</span><span class="p">;</span>
    <span class="k">protected</span> <span class="kt">double</span> <span class="n">im</span><span class="p">;</span>
    <span class="k">protected</span> <span class="kt">double</span> <span class="n">abs</span><span class="p">;</span>
    <span class="k">protected</span> <span class="kt">double</span> <span class="n">arg</span><span class="p">;</span>
    <span class="k">protected</span> <span class="k">static</span> <span class="n">Complex</span> <span class="n">IUnit</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Re</span>
    <span class="k">{</span>
        <span class="k">set</span>
        <span class="k">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">re</span> <span class="p">=</span> <span class="n">value</span><span class="p">;</span>
            <span class="k">this</span><span class="p">.</span><span class="n">abs</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Sqrt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">re</span> <span class="p">*</span> <span class="k">this</span><span class="p">.</span><span class="n">re</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">im</span> <span class="p">*</span> <span class="k">this</span><span class="p">.</span><span class="n">im</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">abs</span> <span class="p">==</span> <span class="m">0.0</span><span class="p">)</span>
                <span class="k">this</span><span class="p">.</span><span class="n">arg</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="k">else</span>
                <span class="k">this</span><span class="p">.</span><span class="n">arg</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Atan2</span><span class="p">(</span><span class="n">im</span><span class="p">,</span> <span class="n">re</span><span class="p">)</span> <span class="p">*</span> <span class="m">180</span> <span class="p">/</span> <span class="n">Math</span><span class="p">.</span><span class="n">PI</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">get</span> <span class="k">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="n">re</span><span class="p">;</span> <span class="k">}</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Im</span>
    <span class="k">{</span>
        <span class="k">set</span>
        <span class="k">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">im</span> <span class="p">=</span> <span class="n">value</span><span class="p">;</span>
            <span class="k">this</span><span class="p">.</span><span class="n">abs</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Sqrt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">re</span> <span class="p">*</span> <span class="k">this</span><span class="p">.</span><span class="n">re</span> <span class="p">+</span> <span class="k">this</span><span class="p">.</span><span class="n">im</span> <span class="p">*</span> <span class="k">this</span><span class="p">.</span><span class="n">im</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">abs</span> <span class="p">==</span> <span class="m">0.0</span><span class="p">)</span>
                <span class="k">this</span><span class="p">.</span><span class="n">arg</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="k">else</span>
                <span class="k">this</span><span class="p">.</span><span class="n">arg</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Atan2</span><span class="p">(</span><span class="n">im</span><span class="p">,</span> <span class="n">re</span><span class="p">)</span> <span class="p">*</span> <span class="m">180</span> <span class="p">/</span> <span class="n">Math</span><span class="p">.</span><span class="n">PI</span><span class="p">;</span>
        <span class="k">}</span>
        <span class="k">get</span> <span class="k">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="n">im</span><span class="p">;</span> <span class="k">}</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Abs</span>
    <span class="k">{</span>
        <span class="k">set</span>
        <span class="k">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">abs</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Abs</span><span class="p">(</span><span class="n">value</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="n">im</span> <span class="p">=</span> <span class="n">abs</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">Sin</span><span class="p">(</span><span class="n">arg</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">PI</span> <span class="p">/</span> <span class="m">180</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="n">re</span> <span class="p">=</span> <span class="n">abs</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">Cos</span><span class="p">(</span><span class="n">arg</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">PI</span> <span class="p">/</span> <span class="m">180</span><span class="p">);</span>
        <span class="k">}</span>
        <span class="k">get</span> <span class="k">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="n">abs</span><span class="p">;</span> <span class="k">}</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="kt">double</span> <span class="n">Arg</span>
    <span class="k">{</span>
        <span class="k">set</span>
        <span class="k">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">arg</span> <span class="p">=</span> <span class="n">value</span><span class="p">;</span>
            <span class="k">this</span><span class="p">.</span><span class="n">im</span> <span class="p">=</span> <span class="n">abs</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">Sin</span><span class="p">(</span><span class="n">arg</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">PI</span> <span class="p">/</span> <span class="m">180</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="n">re</span> <span class="p">=</span> <span class="n">abs</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">Cos</span><span class="p">(</span><span class="n">arg</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">PI</span> <span class="p">/</span> <span class="m">180</span><span class="p">);</span>
        <span class="k">}</span>
        <span class="k">get</span> <span class="k">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="n">arg</span><span class="p">;</span> <span class="k">}</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="n">I</span>
    <span class="k">{</span>
        <span class="k">get</span> <span class="k">{</span> <span class="k">return</span> <span class="n">IUnit</span><span class="p">;</span> <span class="k">}</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="nf">Complex</span><span class="p">()</span> <span class="p">:</span> <span class="k">this</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span> <span class="k">{</span> <span class="k">}</span>
    <span class="k">public</span> <span class="nf">Complex</span><span class="p">(</span><span class="kt">double</span> <span class="n">a</span><span class="p">,</span> <span class="kt">double</span> <span class="n">b</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="n">re</span> <span class="p">=</span> <span class="n">a</span><span class="p">;</span>
        <span class="n">Im</span> <span class="p">=</span> <span class="n">b</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="nf">MyToString</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="kt">string</span> <span class="n">str</span> <span class="p">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span>
        <span class="kt">double</span> <span class="n">x</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Pow</span><span class="p">(</span><span class="m">10.0</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
        <span class="kt">double</span> <span class="n">r</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Floor</span><span class="p">(</span><span class="n">re</span> <span class="p">*</span> <span class="n">x</span><span class="p">)</span> <span class="p">/</span> <span class="n">x</span><span class="p">;</span>
        <span class="kt">double</span> <span class="n">i</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="n">Floor</span><span class="p">(</span><span class="n">im</span> <span class="p">*</span> <span class="n">x</span><span class="p">)</span> <span class="p">/</span> <span class="n">x</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">r</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="n">str</span> <span class="p">+=</span> <span class="n">r</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
            <span class="k">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="n">str</span> <span class="p">+=</span> <span class="s">&quot; + i&quot;</span><span class="p">;</span>
                <span class="k">else</span> <span class="n">str</span> <span class="p">+=</span> <span class="s">&quot; + &quot;</span> <span class="p">+</span> <span class="n">i</span> <span class="p">+</span> <span class="s">&quot;i&quot;</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">)</span>
            <span class="k">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span> <span class="n">str</span> <span class="p">+=</span> <span class="s">&quot; - i&quot;</span><span class="p">;</span>
                <span class="k">else</span> <span class="n">str</span> <span class="p">+=</span> <span class="s">&quot; - &quot;</span> <span class="p">+</span> <span class="p">(-</span><span class="n">i</span><span class="p">)</span> <span class="p">+</span> <span class="s">&quot;i&quot;</span><span class="p">;</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">else</span>
        <span class="k">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
            <span class="k">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="n">str</span> <span class="p">+=</span> <span class="s">&quot;i&quot;</span><span class="p">;</span>
                <span class="k">else</span> <span class="n">str</span> <span class="p">+=</span> <span class="n">i</span> <span class="p">+</span> <span class="s">&quot;i&quot;</span><span class="p">;</span>
            <span class="k">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">)</span>
            <span class="k">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span> <span class="n">str</span> <span class="p">+=</span> <span class="s">&quot;-i&quot;</span><span class="p">;</span>
                <span class="k">else</span> <span class="n">str</span> <span class="p">+=</span> <span class="s">&quot;-&quot;</span> <span class="p">+</span> <span class="p">(-</span><span class="n">i</span><span class="p">)</span> <span class="p">+</span> <span class="s">&quot;i&quot;</span><span class="p">;</span>
            <span class="k">}</span>
        <span class="k">}</span>
        <span class="k">return</span> <span class="n">str</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="nf">FromArgAbs</span><span class="p">(</span><span class="kt">double</span> <span class="n">arg</span><span class="p">,</span> <span class="kt">double</span> <span class="n">abs</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="n">abs</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">Cos</span><span class="p">(</span><span class="n">arg</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">PI</span> <span class="p">/</span> <span class="m">180</span><span class="p">),</span> <span class="n">abs</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">Sin</span><span class="p">(</span><span class="n">arg</span> <span class="p">*</span> <span class="n">Math</span><span class="p">.</span><span class="n">PI</span> <span class="p">/</span> <span class="m">180</span><span class="p">));</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="nf">Sqrt</span><span class="p">(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="n">Complex</span><span class="p">.</span><span class="n">FromArgAbs</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">arg</span> <span class="p">/</span> <span class="m">2</span><span class="p">,</span> <span class="n">Math</span><span class="p">.</span><span class="n">Sqrt</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">abs</span><span class="p">));</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="nf">PowRatio</span><span class="p">(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">num</span><span class="p">,</span> <span class="kt">int</span> <span class="n">den</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="n">Complex</span> <span class="n">y</span> <span class="p">=</span> <span class="n">x</span> <span class="p">^</span> <span class="n">num</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">Complex</span><span class="p">.</span><span class="n">FromArgAbs</span><span class="p">(</span><span class="n">y</span><span class="p">.</span><span class="n">arg</span> <span class="p">/</span> <span class="n">den</span><span class="p">,</span> <span class="n">Math</span><span class="p">.</span><span class="n">Pow</span><span class="p">(</span><span class="n">y</span><span class="p">.</span><span class="n">abs</span><span class="p">,</span> <span class="m">1.0</span> <span class="p">/</span> <span class="n">den</span><span class="p">));</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="k">operator</span> <span class="p">-(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="p">(-</span><span class="m">1</span><span class="p">)</span> <span class="p">*</span> <span class="n">x</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="k">operator</span> <span class="p">+(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="n">x</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="k">operator</span> <span class="p">~(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">re</span><span class="p">,</span> <span class="p">-</span><span class="n">x</span><span class="p">.</span><span class="n">im</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="k">operator</span> <span class="p">^(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">n</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
        <span class="k">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="k">return</span> <span class="n">x</span><span class="p">;</span>
            <span class="n">Complex</span> <span class="n">z</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
            <span class="k">return</span> <span class="p">(</span><span class="n">z</span> <span class="p">^</span> <span class="p">(</span><span class="n">n</span> <span class="p">&gt;&gt;</span> <span class="m">1</span><span class="p">))</span> <span class="p">*</span> <span class="p">(</span><span class="n">z</span> <span class="p">^</span> <span class="p">((</span><span class="n">n</span> <span class="p">&amp;</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="p">(</span><span class="n">n</span> <span class="p">&gt;&gt;</span> <span class="m">1</span><span class="p">)));</span>
        <span class="k">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
            <span class="k">return</span> <span class="m">1</span><span class="p">;</span>
        <span class="k">else</span>
            <span class="k">return</span> <span class="p">(</span><span class="m">1</span> <span class="p">/</span> <span class="n">x</span><span class="p">)</span> <span class="p">^</span> <span class="p">(-</span><span class="n">n</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="k">operator</span> <span class="p">+(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">,</span> <span class="n">Complex</span> <span class="n">y</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">re</span> <span class="p">+</span> <span class="n">y</span><span class="p">.</span><span class="n">re</span><span class="p">,</span> <span class="n">x</span><span class="p">.</span><span class="n">im</span> <span class="p">+</span> <span class="n">y</span><span class="p">.</span><span class="n">im</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="k">operator</span> <span class="p">-(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">,</span> <span class="n">Complex</span> <span class="n">y</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">re</span> <span class="p">-</span> <span class="n">y</span><span class="p">.</span><span class="n">re</span><span class="p">,</span> <span class="n">x</span><span class="p">.</span><span class="n">im</span> <span class="p">-</span> <span class="n">y</span><span class="p">.</span><span class="n">im</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="k">operator</span> <span class="p">*(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">,</span> <span class="n">Complex</span> <span class="n">y</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="n">Complex</span><span class="p">.</span><span class="n">FromArgAbs</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">arg</span> <span class="p">+</span> <span class="n">y</span><span class="p">.</span><span class="n">arg</span><span class="p">,</span> <span class="n">x</span><span class="p">.</span><span class="n">abs</span> <span class="p">*</span> <span class="n">y</span><span class="p">.</span><span class="n">abs</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">Complex</span> <span class="k">operator</span> <span class="p">/(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">,</span> <span class="n">Complex</span> <span class="n">y</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="n">Complex</span><span class="p">.</span><span class="n">FromArgAbs</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">arg</span> <span class="p">-</span> <span class="n">y</span><span class="p">.</span><span class="n">arg</span><span class="p">,</span> <span class="n">x</span><span class="p">.</span><span class="n">abs</span> <span class="p">/</span> <span class="n">y</span><span class="p">.</span><span class="n">abs</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">bool</span> <span class="k">operator</span> <span class="p">==(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">,</span> <span class="n">Complex</span> <span class="n">y</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">re</span> <span class="p">==</span> <span class="n">y</span><span class="p">.</span><span class="n">re</span> <span class="p">&amp;&amp;</span> <span class="n">x</span><span class="p">.</span><span class="n">im</span> <span class="p">==</span> <span class="n">y</span><span class="p">.</span><span class="n">im</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="kt">bool</span> <span class="k">operator</span> <span class="p">!=(</span><span class="n">Complex</span> <span class="n">x</span><span class="p">,</span> <span class="n">Complex</span> <span class="n">y</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="p">!(</span><span class="n">x</span> <span class="p">==</span> <span class="n">y</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">implicit</span> <span class="k">operator</span> <span class="nf">Complex</span><span class="p">(</span><span class="kt">double</span> <span class="n">x</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">explicit</span> <span class="k">operator</span> <span class="nf">Complex</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">Complex</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">override</span> <span class="kt">bool</span> <span class="nf">Equals</span><span class="p">(</span><span class="kt">object</span> <span class="n">o</span><span class="p">)</span>
    <span class="k">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">o</span> <span class="k">is</span> <span class="n">Complex</span><span class="p">)</span>
            <span class="k">return</span> <span class="k">this</span> <span class="p">==</span> <span class="p">(</span><span class="n">Complex</span><span class="p">)</span><span class="n">o</span><span class="p">;</span>
        <span class="k">else</span>
            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">override</span> <span class="kt">int</span> <span class="nf">GetHashCode</span><span class="p">()</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">re</span> <span class="p">+</span> <span class="n">im</span><span class="p">).</span><span class="n">GetHashCode</span><span class="p">()</span> <span class="p">^</span> <span class="p">(</span><span class="n">re</span> <span class="p">-</span> <span class="n">im</span><span class="p">).</span><span class="n">GetHashCode</span><span class="p">();</span>
    <span class="k">}</span>
    <span class="k">public</span> <span class="k">override</span> <span class="kt">string</span> <span class="nf">ToString</span><span class="p">()</span>
    <span class="k">{</span>
        <span class="k">return</span> <span class="n">MyToString</span><span class="p">(</span><span class="m">4</span><span class="p">);</span>
    <span class="k">}</span>
<span class="k">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8861/addtag/" class="addtag" id="addtag_8861">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/csharp/">
		C#
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8861/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8861/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8861"
  >-</span><span
  class="button yellow"
  id="rating_z_8861"
  >0</span><span 
  class="button green"
  id="rating_p_8861"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8861/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8862">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/398/" target="_top">mono</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8862/">#8862</a>(<script language="JavaScript">print_time(new Date("2009/04/29 14:03 GMT"));</script><noscript>2009/04/29 14:03 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/haskell/">
	  Haskell
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Data.Complexを使いました。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10</pre></td><td class="code"><div class="highlight"><pre><span class="kr">import</span> <span class="n">Data</span><span class="o">.</span><span class="n">Complex</span>

<span class="nv">main</span> <span class="o">=</span> <span class="nv">putStrLn</span> <span class="o">$</span> <span class="nv">unlines</span> <span class="o">$</span> <span class="nv">map</span> <span class="nv">show</span>
        <span class="p">[</span>
           <span class="p">(</span><span class="mi">3</span> <span class="o">:+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="mi">4</span> <span class="o">:+</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
          <span class="p">,(</span><span class="mi">5</span> <span class="o">:+</span> <span class="p">(</span><span class="o">-</span><span class="mi">9</span><span class="p">))</span> <span class="o">-</span> <span class="p">(</span><span class="mi">2</span> <span class="o">:+</span> <span class="mi">6</span><span class="p">)</span>
          <span class="p">,(</span><span class="mi">5</span> <span class="o">:+</span> <span class="mi">3</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="mi">5</span> <span class="o">:+</span> <span class="mi">8</span><span class="p">)</span>
          <span class="p">,(</span><span class="mi">9</span> <span class="o">:+</span> <span class="p">(</span><span class="o">-</span><span class="mi">7</span><span class="p">))</span> <span class="o">/</span> <span class="p">(</span><span class="mi">4</span> <span class="o">:+</span> <span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">))</span>
          <span class="p">,</span><span class="nv">abs</span> <span class="p">(</span><span class="mi">2</span> <span class="o">:+</span> <span class="mi">3</span><span class="p">)</span>
        <span class="p">]</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8862/addtag/" class="addtag" id="addtag_8862">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/haskell/">
		Haskell
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8862/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8862/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8862"
  >-</span><span
  class="button yellow"
  id="rating_z_8862"
  >0</span><span 
  class="button green"
  id="rating_p_8862"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8862/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8863">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/759/" target="_top">egtra</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8863/">#8863</a>(<script language="JavaScript">print_time(new Date("2009/04/29 10:54 GMT"));</script><noscript>2009/04/29 10:54 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/c/">
	  C
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Cでも、C99から複素数演算が導入されました。こんな風になります。</p>
<pre class="literal-block">
$ gcc -std=c99 t.c -lm &amp;&amp; ./a.out
(3 + 1i) + (4 - 1i) = (7 + 0i)
(5 - 9i) - (2 + 6i) = (3 - 15i)
(5 + 3i) * (5 + 8i) = (1 + 55i)
(9 - 7i) / (9 - 3i) = (1.13333 - 0.4i)
|2 + 3i| = 3.60555
</pre>
<p>ここでは、FreeBSD 7.1付属gcc 4.2.1を使いました。</p>
<p>記法がアレなのは仕方ありませんが、printf/scanf系書式での対応がないのは残念です。というより面倒です。</p>

	</div>
	
	<p class="link">
	  参考: <a href="/web/20100628135508/http://seclan.dll.jp/c99d/c99d06.htm">プログラミング言語Cの新機能 - 6. 複素数型</a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53</pre></td><td class="code"><div class="highlight"><pre><span class="err">$</span> <span class="n">cat</span> <span class="n">t</span><span class="p">.</span><span class="n">c</span>
<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;complex.h&gt;</span>
<span class="cp">#include &lt;math.h&gt;</span>

<span class="kt">void</span> <span class="n">print_complex</span><span class="p">(</span><span class="kt">double</span> <span class="n">complex</span> <span class="n">c</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">double</span> <span class="n">i</span> <span class="o">=</span> <span class="n">cimag</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%g %c %gi&quot;</span><span class="p">,</span>
        <span class="n">creal</span><span class="p">(</span><span class="n">c</span><span class="p">),</span>
        <span class="n">i</span> <span class="o">&gt;=</span> <span class="mf">0.</span> <span class="o">?</span> <span class="sc">&#39;+&#39;</span>
                <span class="o">:</span> <span class="sc">&#39;-&#39;</span><span class="p">,</span>
        <span class="n">fabs</span><span class="p">(</span><span class="n">i</span><span class="p">));</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">print_expression</span><span class="p">(</span><span class="kt">double</span> <span class="n">complex</span> <span class="n">lhs</span><span class="p">,</span> <span class="kt">char</span> <span class="n">ope</span><span class="p">,</span> <span class="kt">double</span> <span class="n">complex</span> <span class="n">rhs</span><span class="p">,</span> <span class="kt">double</span> <span class="n">complex</span> <span class="n">result</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;(&#39;</span><span class="p">);</span>
    <span class="n">print_complex</span><span class="p">(</span><span class="n">lhs</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;) %c (&quot;</span><span class="p">,</span> <span class="n">ope</span><span class="p">);</span>
    <span class="n">print_complex</span><span class="p">(</span><span class="n">rhs</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;) = (&quot;</span><span class="p">);</span>
    <span class="n">print_complex</span><span class="p">(</span><span class="n">result</span><span class="p">);</span>
    <span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;)&#39;</span><span class="p">);</span>
    <span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;\n&#39;</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">al</span> <span class="o">=</span> <span class="mi">3</span> <span class="o">+</span> <span class="n">I</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">ar</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">-</span> <span class="n">I</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">sl</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">-</span> <span class="mi">9</span> <span class="o">*</span> <span class="n">I</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">sr</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">6</span> <span class="o">*</span> <span class="n">I</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">pl</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">+</span> <span class="mi">3</span> <span class="o">*</span> <span class="n">I</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">pr</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">+</span> <span class="mi">8</span> <span class="o">*</span> <span class="n">I</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">dl</span> <span class="o">=</span> <span class="mi">9</span> <span class="o">-</span> <span class="mi">7</span> <span class="o">*</span> <span class="n">I</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">dr</span> <span class="o">=</span> <span class="mi">9</span> <span class="o">-</span> <span class="mi">3</span> <span class="o">*</span> <span class="n">I</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">bs</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span> <span class="o">*</span> <span class="n">I</span><span class="p">;</span>

    <span class="kt">double</span> <span class="n">complex</span> <span class="n">a</span> <span class="o">=</span> <span class="n">al</span> <span class="o">+</span> <span class="n">ar</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">s</span> <span class="o">=</span> <span class="n">sl</span> <span class="o">-</span> <span class="n">sr</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">p</span> <span class="o">=</span> <span class="n">pl</span> <span class="o">*</span> <span class="n">pr</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">complex</span> <span class="n">d</span> <span class="o">=</span> <span class="n">dl</span> <span class="o">/</span> <span class="n">dr</span><span class="p">;</span>
    <span class="kt">double</span> <span class="n">b</span> <span class="o">=</span> <span class="n">cabs</span><span class="p">(</span><span class="n">bs</span><span class="p">);</span>

    <span class="n">print_expression</span><span class="p">(</span><span class="n">al</span><span class="p">,</span> <span class="sc">&#39;+&#39;</span><span class="p">,</span> <span class="n">ar</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span>
    <span class="n">print_expression</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="sc">&#39;-&#39;</span><span class="p">,</span> <span class="n">sr</span><span class="p">,</span> <span class="n">s</span><span class="p">);</span>
    <span class="n">print_expression</span><span class="p">(</span><span class="n">pl</span><span class="p">,</span> <span class="sc">&#39;*&#39;</span><span class="p">,</span> <span class="n">pr</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span>
    <span class="n">print_expression</span><span class="p">(</span><span class="n">dl</span><span class="p">,</span> <span class="sc">&#39;/&#39;</span><span class="p">,</span> <span class="n">dr</span><span class="p">,</span> <span class="n">d</span><span class="p">);</span>
    <span class="n">putchar</span><span class="p">(</span><span class="sc">&#39;|&#39;</span><span class="p">);</span>
    <span class="n">print_complex</span><span class="p">(</span><span class="n">bs</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;| = %g</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">b</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8863/addtag/" class="addtag" id="addtag_8863">タグ</a>:
	
    
    <a href="/web/20100628135508/http://ja.doukaku.org/tag/C99/">C99</a>
    
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/c/">
		C
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8863/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8863/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8863"
  >-</span><span
  class="button yellow"
  id="rating_z_8863"
  >0</span><span 
  class="button green"
  id="rating_p_8863"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8863/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8864">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/759/" target="_top">egtra</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8864/">#8864</a>(<script language="JavaScript">print_time(new Date("2009/04/29 11:08 GMT"));</script><noscript>2009/04/29 11:08 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>まさかのExcelです。Excel VBAではありません。いつのバージョンからなのか知りませんが、ワークシート関数として複素数関係のものが揃っています。以下のコードを適当なところに貼り付けてみてください。</p>
<p>Excelでの複素数の扱い方はいたって単純、&quot;1+3i&quot;のような文字列です（虚部のない実数を演算に混ぜることは可能です）。そのままでは、書式指定でも単に文字列として扱われるので、面倒です。</p>
<p>以下余談。Word/Excelでは、今まで自分が欲しいと思った機能が搭載されていなかった試しがありません。さすが最重量級だけのことはあります。というかあんな機能満載では大半の機能は見つけられないし、見つけても使いこなせませんって。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5</pre></td><td class="code"><div class="highlight"><pre>=IMSUM(&quot;3+i&quot;, &quot;4-i&quot;)
=IMSUB(&quot;5-9i&quot;, &quot;2+6i&quot;)
=IMPRODUCT(&quot;5+3i&quot;, &quot;5+8i&quot;)
=IMDIV(&quot;9-7i&quot;, &quot;9-3i&quot;)
=IMABS(&quot;2+3i&quot;)
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8864/addtag/" class="addtag" id="addtag_8864">タグ</a>:
	
    
    <a href="/web/20100628135508/http://ja.doukaku.org/tag/Excel/">Excel</a>
    
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8864/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8864/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8864"
  >-</span><span
  class="button yellow"
  id="rating_z_8864"
  >0</span><span 
  class="button green"
  id="rating_p_8864"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8864/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8865">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8865/">#8865</a>(<script language="JavaScript">print_time(new Date("2009/04/29 19:05 GMT"));</script><noscript>2009/04/29 19:05 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/smalltalk/">
	  Smalltalk
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Squeak Smalltalk では複素数は組み込みです。リテラルはなく、整数にメッセージ i を送信することで対応する純虚数値を得るしくみになっています。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6</pre></td><td class="code"><div class="highlight"><pre>( 3 + 1i ) + ( 4 - 1i )   &quot;=&gt; 7 + 0 i &quot;
( 5 - 9i ) - ( 2 + 6i )   &quot;=&gt; 3 - 15 i &quot;
( 5 + 3i ) * ( 5 + 8i )   &quot;=&gt; 1 + 55 i &quot;
( 9 - 7i ) / ( 9 - 3i )   &quot;=&gt; (17/15) - (2/5) i &quot;
( 9.0 - 7.0i ) / ( 9.0 - 3.0i )   &quot;=&gt; 1.133333333333333 - 0.4 i &quot;
( 2 + 3i ) abs            &quot;=&gt; 3.60555127546399 &quot;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8865/addtag/" class="addtag" id="addtag_8865">タグ</a>:
	
    
    <a href="/web/20100628135508/http://ja.doukaku.org/tag/Squeak_Smalltalk/">Squeak_Smalltalk</a>
    
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/smalltalk/">
		Smalltalk
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8865/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8865/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8865"
  >-</span><span
  class="button yellow"
  id="rating_z_8865"
  >0</span><span 
  class="button green"
  id="rating_p_8865"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100628135508/http://ja.doukaku.org/comment/8865/">
    1
    reply
  </a>

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8865/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8866">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/785/" target="_top">Dubhead</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8866/">#8866</a>(<script language="JavaScript">print_time(new Date("2009/04/29 23:47 GMT"));</script><noscript>2009/04/29 23:47 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/d/">
	  D
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>D言語で。複素数は組込みなので楽ちん。2.029で動作確認しました。

実行結果:
7+0i
3+-15i
1+55i
1.13333+-0.4i
3.60555
</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="k">import</span> <span class="n">std</span>.<span class="n">stdio</span>;
<span class="k">import</span> <span class="n">std</span>.<span class="n">math</span>;        <span class="c">// for abs</span>

<span class="kt">void</span> <span class="n">main</span>()
{
    <span class="n">writefln</span>(<span class="s">&quot;%s&quot;</span>, (<span class="mi">3</span> + <span class="mi">1</span><span class="n">i</span>) + (<span class="mi">4</span> - <span class="mi">1</span><span class="n">i</span>));
    <span class="n">writefln</span>(<span class="s">&quot;%s&quot;</span>, (<span class="mi">5</span> - <span class="mi">9</span><span class="n">i</span>) - (<span class="mi">2</span> + <span class="mi">6</span><span class="n">i</span>));
    <span class="n">writefln</span>(<span class="s">&quot;%s&quot;</span>, (<span class="mi">5</span> + <span class="mi">3</span><span class="n">i</span>) * (<span class="mi">5</span> + <span class="mi">8</span><span class="n">i</span>));
    <span class="n">writefln</span>(<span class="s">&quot;%s&quot;</span>, (<span class="mi">9</span> - <span class="mi">7</span><span class="n">i</span>) / (<span class="mi">9</span> - <span class="mi">3</span><span class="n">i</span>));
    <span class="n">writefln</span>(<span class="s">&quot;%s&quot;</span>, <span class="n">abs</span>(<span class="mi">2</span> + <span class="mi">3</span><span class="n">i</span>));
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8866/addtag/" class="addtag" id="addtag_8866">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/d/">
		D
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8866/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8866/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8866"
  >-</span><span
  class="button yellow"
  id="rating_z_8866"
  >0</span><span 
  class="button green"
  id="rating_p_8866"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8866/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8867">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/1036/" target="_top">spoon</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8867/">#8867</a>(<script language="JavaScript">print_time(new Date("2009/04/30 02:50 GMT"));</script><noscript>2009/04/30 02:50 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/ocaml/">
	  OCaml
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="k">#</span> <span class="kr">open</span> <span class="n">Complex</span><span class="k">;;</span>
<span class="k">#</span> <span class="n">add</span> <span class="k">{</span> <span class="n">re</span> <span class="k">=</span> <span class="mi">3</span><span class="k">.</span><span class="mi">0</span><span class="k">;</span> <span class="n">im</span> <span class="k">=</span> <span class="mi">1</span><span class="k">.</span><span class="mi">0</span> <span class="k">}</span> <span class="k">{</span> <span class="n">re</span> <span class="k">=</span> <span class="mi">4</span><span class="k">.</span><span class="mi">0</span><span class="k">;</span> <span class="n">im</span> <span class="k">=</span> <span class="k">-</span><span class="mi">1</span><span class="k">.</span><span class="mi">0</span> <span class="k">};;</span>
<span class="k">-</span> <span class="k">:</span> <span class="n">Complex</span><span class="k">.</span><span class="n">t</span> <span class="k">=</span> <span class="k">{</span><span class="n">re</span> <span class="k">=</span> <span class="mi">7</span><span class="k">.;</span> <span class="n">im</span> <span class="k">=</span> <span class="mi">0</span><span class="k">.}</span>
<span class="k">#</span> <span class="n">sub</span> <span class="k">{</span> <span class="n">re</span> <span class="k">=</span> <span class="mi">5</span><span class="k">.</span><span class="mi">0</span><span class="k">;</span> <span class="n">im</span> <span class="k">=</span> <span class="k">-</span><span class="mi">9</span><span class="k">.</span><span class="mi">0</span> <span class="k">}</span> <span class="k">{</span> <span class="n">re</span> <span class="k">=</span> <span class="mi">2</span><span class="k">.</span><span class="mi">0</span><span class="k">;</span> <span class="n">im</span> <span class="k">=</span> <span class="mi">6</span><span class="k">.</span><span class="mi">0</span> <span class="k">};;</span>
<span class="k">-</span> <span class="k">:</span> <span class="n">Complex</span><span class="k">.</span><span class="n">t</span> <span class="k">=</span> <span class="k">{</span><span class="n">re</span> <span class="k">=</span> <span class="mi">3</span><span class="k">.;</span> <span class="n">im</span> <span class="k">=</span> <span class="k">-</span><span class="mi">15</span><span class="k">.}</span>
<span class="k">#</span> <span class="n">mul</span> <span class="k">{</span> <span class="n">re</span> <span class="k">=</span> <span class="mi">5</span><span class="k">.</span><span class="mi">0</span><span class="k">;</span> <span class="n">im</span> <span class="k">=</span> <span class="mi">3</span><span class="k">.</span><span class="mi">0</span> <span class="k">}</span> <span class="k">{</span> <span class="n">re</span> <span class="k">=</span> <span class="mi">5</span><span class="k">.</span><span class="mi">0</span><span class="k">;</span> <span class="n">im</span> <span class="k">=</span> <span class="mi">8</span><span class="k">.</span><span class="mi">0</span> <span class="k">};;</span>
<span class="k">-</span> <span class="k">:</span> <span class="n">Complex</span><span class="k">.</span><span class="n">t</span> <span class="k">=</span> <span class="k">{</span><span class="n">re</span> <span class="k">=</span> <span class="mi">1</span><span class="k">.;</span> <span class="n">im</span> <span class="k">=</span> <span class="mi">55</span><span class="k">.}</span>
<span class="k">#</span> <span class="n">div</span> <span class="k">{</span> <span class="n">re</span> <span class="k">=</span> <span class="mi">9</span><span class="k">.</span><span class="mi">0</span><span class="k">;</span> <span class="n">im</span> <span class="k">=</span> <span class="k">-</span><span class="mi">7</span><span class="k">.</span><span class="mi">0</span> <span class="k">}</span> <span class="k">{</span> <span class="n">re</span> <span class="k">=</span> <span class="mi">9</span><span class="k">.</span><span class="mi">0</span><span class="k">;</span> <span class="n">im</span> <span class="k">=</span> <span class="k">-</span><span class="mi">3</span><span class="k">.</span><span class="mi">0</span> <span class="k">};;</span>
<span class="k">-</span> <span class="k">:</span> <span class="n">Complex</span><span class="k">.</span><span class="n">t</span> <span class="k">=</span> <span class="k">{</span><span class="n">re</span> <span class="k">=</span> <span class="mi">1</span><span class="k">.</span><span class="mi">1333333333333333</span><span class="k">;</span> <span class="n">im</span> <span class="k">=</span> <span class="k">-</span><span class="mi">0</span><span class="k">.</span><span class="mi">4</span><span class="k">}</span>
<span class="k">#</span> <span class="n">norm</span> <span class="k">{</span> <span class="n">re</span> <span class="k">=</span> <span class="mi">2</span><span class="k">.</span><span class="mi">0</span><span class="k">;</span> <span class="n">im</span> <span class="k">=</span> <span class="mi">3</span><span class="k">.</span><span class="mi">0</span> <span class="k">};;</span>
<span class="k">-</span> <span class="k">:</span> <span class="n">float</span> <span class="k">=</span> <span class="mi">3</span><span class="k">.</span><span class="mi">60555127546398957</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8867/addtag/" class="addtag" id="addtag_8867">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/ocaml/">
		OCaml
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8867/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8867/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8867"
  >-</span><span
  class="button yellow"
  id="rating_z_8867"
  >0</span><span 
  class="button green"
  id="rating_p_8867"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8867/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8868">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8868/">#8868</a>(<script language="JavaScript">print_time(new Date("2009/04/30 04:31 GMT"));</script><noscript>2009/04/30 04:31 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="o">&gt;&gt;</span> <span class="nb">require</span> <span class="s1">&#39;complex&#39;</span>
<span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="no">Complex</span><span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="no">Complex</span><span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
<span class="mi">7</span><span class="o">.</span><span class="mi">0</span><span class="o">+</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="n">i</span>
<span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="no">Complex</span><span class="p">(</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">9</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span> <span class="o">-</span> <span class="no">Complex</span><span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
<span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="mi">15</span><span class="o">.</span><span class="mi">0</span><span class="n">i</span>
<span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="no">Complex</span><span class="p">(</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span> <span class="o">*</span> <span class="no">Complex</span><span class="p">(</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">8</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
<span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">+</span><span class="mi">55</span><span class="o">.</span><span class="mi">0</span><span class="n">i</span>
<span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="no">Complex</span><span class="p">(</span><span class="mi">9</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">7</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span> <span class="o">/</span> <span class="no">Complex</span><span class="p">(</span><span class="mi">9</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
<span class="mi">1</span><span class="o">.</span><span class="mi">13333333333333</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">i</span>
<span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="no">Complex</span><span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="n">abs</span>
<span class="mi">3</span><span class="o">.</span><span class="mi">60555127546399</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8868/addtag/" class="addtag" id="addtag_8868">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8868/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8868/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8868"
  >-</span><span
  class="button yellow"
  id="rating_z_8868"
  >0</span><span 
  class="button green"
  id="rating_p_8868"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8868/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8869">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/88/" target="_top">sumim</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8869/">#8869</a>(<script language="JavaScript">print_time(new Date("2009/04/30 10:18 GMT"));</script><noscript>2009/04/30 10:18 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>×整数にメッセージ i を　→　○実数にメッセージ i を</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8869/addtag/" class="addtag" id="addtag_8869">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8869"
  >-</span><span
  class="button yellow"
  id="rating_z_8869"
  >0</span><span 
  class="button green"
  id="rating_p_8869"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8865/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8869/root/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8869/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8870">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8870/">#8870</a>(<script language="JavaScript">print_time(new Date("2009/04/30 16:19 GMT"));</script><noscript>2009/04/30 16:19 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>F#(fsi)での実行例
dll の読み込みは、オプションでもできます。</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>1
2
3
4
5
6
7</pre></td><td class="code"><div class="highlight"><pre>&gt; #r &quot;FSharp.PowerPack.dll&quot;;;
&gt; open Math.Complex;;
&gt; (complex 3. 1.) + (complex 4. -1.);;
&gt; (complex 5. -9.) - (complex 2. 6.);;
&gt; (complex 5. 3.) * (complex 5. 8.);;
&gt; (complex 9. -7.) / (complex 9. -3.);;
&gt; magnitude (complex 2. 3.) ;;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8870/addtag/" class="addtag" id="addtag_8870">タグ</a>:
	
    
    <a href="/web/20100628135508/http://ja.doukaku.org/tag/F%23/">F#</a>
    
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8870/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8870/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8870"
  >-</span><span
  class="button yellow"
  id="rating_z_8870"
  >0</span><span 
  class="button green"
  id="rating_p_8870"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100628135508/http://ja.doukaku.org/comment/8870/">
    1
    reply
  </a>

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8870/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8871">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/1036/" target="_top">spoon</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8871/">#8871</a>(<script language="JavaScript">print_time(new Date("2009/04/30 19:04 GMT"));</script><noscript>2009/04/30 19:04 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/ruby/">
	  Ruby
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11</pre></td><td class="code"><div class="highlight"><pre><span class="o">&gt;&gt;</span> <span class="nb">require</span> <span class="s1">&#39;complex&#39;</span>
<span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span> <span class="o">+</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">im</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span> <span class="o">-</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">im</span><span class="p">)</span>
<span class="mi">7</span><span class="o">.</span><span class="mi">0</span><span class="o">+</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="n">i</span>
<span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="p">(</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="o">-</span> <span class="mi">9</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">im</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span> <span class="o">+</span> <span class="mi">6</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">im</span><span class="p">)</span>
<span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="mi">15</span><span class="o">.</span><span class="mi">0</span><span class="n">i</span>
<span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="p">(</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="o">+</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">im</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="o">+</span> <span class="mi">8</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">im</span><span class="p">)</span>
<span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">+</span><span class="mi">55</span><span class="o">.</span><span class="mi">0</span><span class="n">i</span>
<span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="p">(</span><span class="mi">9</span><span class="o">.</span><span class="mi">0</span> <span class="o">-</span> <span class="mi">7</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">im</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="mi">9</span><span class="o">.</span><span class="mi">0</span> <span class="o">-</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">im</span><span class="p">)</span>
<span class="mi">1</span><span class="o">.</span><span class="mi">13333333333333</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">i</span>
<span class="o">&gt;&gt;</span> <span class="nb">puts</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span> <span class="o">+</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">im</span><span class="p">)</span><span class="o">.</span><span class="n">abs</span>
<span class="mi">3</span><span class="o">.</span><span class="mi">60555127546399</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8871/addtag/" class="addtag" id="addtag_8871">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/ruby/">
		Ruby
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8871/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8871/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8871"
  >-</span><span
  class="button yellow"
  id="rating_z_8871"
  >0</span><span 
  class="button green"
  id="rating_p_8871"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8871/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8872">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/4/" target="_top">匿名</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8872/">#8872</a>(<script language="JavaScript">print_time(new Date("2009/05/01 10:02 GMT"));</script><noscript>2009/05/01 10:02 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>結果を整形する場合には、
&gt; printfn "%O" ((complex 3. 1.) + (complex 4. -1.));;
とかして下さい。</pre>
	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8872/addtag/" class="addtag" id="addtag_8872">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8872"
  >-</span><span
  class="button yellow"
  id="rating_z_8872"
  >0</span><span 
  class="button green"
  id="rating_p_8872"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8870/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8872/root/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8872/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8881">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/1039/" target="_top">vivisuke</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8881/">#8881</a>(<script language="JavaScript">print_time(new Date("2009/05/03 12:59 GMT"));</script><noscript>2009/05/03 12:59 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/other/">
	  Other
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #efffef;">1/1=1.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>言語は ViViScript
実行結果：
(7, 0)
(3, -15)
(1, 55)
(1.13333, -0.4)
3.60555

</pre>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></td><td class="code"><div class="highlight"><pre>class complex
{
    function complex(r, i)
    {
        this.r = double(r);        //    実数部
        this.i = double(i);        //    虚数部
    }
    function format() { return &quot;(&quot; + this.r + &quot;, &quot; + this.i + &quot;)&quot;; }
}
function complex_add(lhs, rhs)
{
    return new complex(lhs.r + rhs.r, lhs.i + rhs.i);
}
function complex_sub(lhs, rhs)
{
    return new complex(lhs.r - rhs.r, lhs.i - rhs.i);
}
function complex_mul(lhs, rhs)
{
    return new complex(lhs.r * rhs.r - lhs.i * rhs.i, lhs.r * rhs.i + lhs.i * rhs.r);
}
function complex_div(lhs, rhs)
{
    $t = (rhs.r * rhs.r + rhs.i * rhs.i);
    return new complex((lhs.r * rhs.r + lhs.i * rhs.i) / $t, (lhs.i * rhs.r - lhs.r * rhs.i) / $t);
}
function complex_abs(c)
{
    return Math.sqrt(c.r * c.r + c.i * c.i);
}

cout &lt;&lt; complex_add(new complex(3, 1), new complex(4, -1)).format() &lt;&lt; &quot;\n&quot;;
cout &lt;&lt; complex_sub(new complex(5, -9), new complex(2, 6)).format() &lt;&lt; &quot;\n&quot;;
cout &lt;&lt; complex_mul(new complex(5, 3), new complex(5, 8)).format() &lt;&lt; &quot;\n&quot;;
cout &lt;&lt; complex_div(new complex(9, -7), new complex(9, -3)).format() &lt;&lt; &quot;\n&quot;;
cout &lt;&lt; complex_abs(new complex(2, 3)) &lt;&lt; &quot;\n&quot;;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8881/addtag/" class="addtag" id="addtag_8881">タグ</a>:
	
    
    <a href="/web/20100628135508/http://ja.doukaku.org/tag/ViViScript/">ViViScript</a>
    
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/other/">
		Other
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8881/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8881/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #efffef;"
  >1/1=1.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8881"
  >-</span><span
  class="button yellow"
  id="rating_z_8881"
  >0</span><span 
  class="button green"
  id="rating_p_8881"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8881/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8916">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8916/">#8916</a>(<script language="JavaScript">print_time(new Date("2009/05/08 05:46 GMT"));</script><noscript>2009/05/08 05:46 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/xslt/">
	  XSLT
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #cfffaf;">3/5=0.60</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>絶対値を求めるのに必要な平方根を求める関数が標準では用意されないので頑張って作ってみたりなど、本質でない部分に労力が...
使えるならEXSLTを使うといいかも。</p>
<p>下記のようなxmlにxsltを適応すると計算できます。:</p>
<pre class="literal-block">
&lt;complex-list&gt;
  &lt;add&gt;
    &lt;complex real=&quot;3&quot; imag=&quot;1&quot; /&gt;
    &lt;complex real=&quot;4&quot; imag=&quot;-1&quot; /&gt;
  &lt;/add&gt;
  &lt;sub&gt;
    &lt;complex real=&quot;5&quot; imag=&quot;-9&quot; /&gt;
    &lt;complex real=&quot;2&quot; imag=&quot;6&quot; /&gt;
  &lt;/sub&gt;
  &lt;mul&gt;
    &lt;complex real=&quot;5&quot; imag=&quot;3&quot; /&gt;
    &lt;complex real=&quot;5&quot; imag=&quot;8&quot; /&gt;
  &lt;/mul&gt;
  &lt;div&gt;
    &lt;complex real=&quot;9&quot; imag=&quot;-7&quot; /&gt;
    &lt;complex real=&quot;9&quot; imag=&quot;-3&quot; /&gt;
  &lt;/div&gt;
  &lt;abs&gt;
    &lt;complex real=&quot;2&quot; imag=&quot;3&quot; /&gt;
  &lt;/abs&gt;
&lt;/complex-list&gt;
</pre>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245</pre></td><td class="code"><div class="highlight"><pre>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;xsl:stylesheet version=&quot;2.0&quot;
  xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
  xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;
  xmlns:fn=&quot;http://www.w3.org/2005/xpath-functions&quot;
  xmlns:my=&quot;uri:ja.doukaku.org:my-functions&quot;
  exclude-result-prefixes=&quot;my&quot;
  &gt;

  &lt;xsl:output method=&quot;text&quot; /&gt;

  &lt;xsl:template match=&quot;/complex-list&quot; &gt;
    &lt;xsl:for-each select=&quot;complex|add|sub|mul|div|abs&quot;&gt;
      &lt;xsl:variable name=&quot;complex&quot; as=&quot;xs:decimal*&quot;&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-node(.)&quot; /&gt;
      &lt;/xsl:variable&gt;
      &lt;xsl:value-of select=&quot;my:complex-to-string($complex[1], $complex[2])&quot; /&gt;
      &lt;xsl:text&gt;&amp;#xA;&lt;/xsl:text&gt;
    &lt;/xsl:for-each&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:function name=&quot;my:complex-to-string&quot; as=&quot;xs:string&quot;&gt;
    &lt;xsl:param name=&quot;real&quot; as=&quot;xs:decimal&quot; /&gt;
    &lt;xsl:param name=&quot;imag&quot; as=&quot;xs:decimal&quot; /&gt;

    &lt;xsl:variable name=&quot;realstr&quot; as=&quot;xs:string&quot; select=&quot;xs:string($real)&quot; /&gt;
    &lt;xsl:variable name=&quot;imagsign&quot; as=&quot;xs:string&quot;&gt;
      &lt;xsl:choose&gt;
        &lt;xsl:when test=&quot;$imag gt 0&quot;&gt;
          &lt;xsl:value-of select=&quot;&#39;+&#39;&quot; /&gt;
        &lt;/xsl:when&gt;
        &lt;xsl:when test=&quot;$imag lt 0&quot;&gt;
          &lt;xsl:value-of select=&quot;&#39;-&#39;&quot; /&gt;
        &lt;/xsl:when&gt;
        &lt;xsl:otherwise&gt;
          &lt;xsl:value-of select=&quot;&#39;&#39;&quot; /&gt;
        &lt;/xsl:otherwise&gt;
      &lt;/xsl:choose&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name=&quot;imagstr&quot; as=&quot;xs:string&quot;&gt;
      &lt;xsl:choose&gt;
        &lt;xsl:when test=&quot;fn:abs($imag)=1.0&quot;&gt;
          &lt;xsl:value-of select=&quot;&#39;&#39;&quot; /&gt;
        &lt;/xsl:when&gt;
        &lt;xsl:otherwise&gt;
          &lt;xsl:value-of select=&quot;fn:abs($imag)&quot; /&gt;
        &lt;/xsl:otherwise&gt;
      &lt;/xsl:choose&gt;
    &lt;/xsl:variable&gt;

    &lt;xsl:choose&gt;
      &lt;xsl:when test=&quot;$imag=0&quot;&gt;
        &lt;xsl:value-of select=&quot;$realstr&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:otherwise&gt;
        &lt;xsl:value-of select=&quot;fn:string-join(($realstr, $imagsign, fn:concat($imagstr, &#39;i&#39;)), &#39; &#39;)&quot; /&gt;
      &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
  &lt;/xsl:function&gt;

  &lt;xsl:function name=&quot;my:evaluate-node&quot; as=&quot;xs:decimal*&quot;&gt;
    &lt;xsl:param name=&quot;node&quot; as=&quot;node()&quot; /&gt;

    &lt;xsl:variable name=&quot;node-name&quot; as=&quot;xs:string&quot; select=&quot;fn:name($node)&quot; /&gt;
    &lt;xsl:variable name=&quot;complex&quot; as=&quot;xs:decimal*&quot;&gt;
      &lt;xsl:for-each select=&quot;$node/*&quot;&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-node(.)&quot; /&gt;
      &lt;/xsl:for-each&gt;
    &lt;/xsl:variable&gt;

    &lt;xsl:choose&gt;
      &lt;xsl:when test=&quot;$node-name = &#39;complex&#39;&quot;&gt;
        &lt;xsl:sequence select=&quot;$node/@real&quot; /&gt;
        &lt;xsl:choose&gt;
          &lt;xsl:when test=&quot;fn:exists($node/@imag)&quot;&gt;
            &lt;xsl:sequence select=&quot;$node/@imag&quot; /&gt;
          &lt;/xsl:when&gt;
          &lt;xsl:otherwise&gt;
            &lt;xsl:sequence select=&quot;0&quot; /&gt;
          &lt;/xsl:otherwise&gt;
        &lt;/xsl:choose&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:when test=&quot;$node-name = &#39;add&#39;&quot;&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-add($complex)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:when test=&quot;$node-name = &#39;sub&#39;&quot;&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-sub($complex)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:when test=&quot;$node-name = &#39;mul&#39;&quot;&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-mul($complex)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:when test=&quot;$node-name = &#39;div&#39;&quot;&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-div($complex)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:when test=&quot;$node-name = &#39;abs&#39;&quot;&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-abs($complex)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:otherwise&gt;
        &lt;xsl:message terminate=&quot;yes&quot;&gt;
          &lt;xsl:text&gt;*** unknown element name &lt;/xsl:text&gt;
          &lt;xsl:value-of select=&quot;$node-name&quot; /&gt;
          &lt;xsl:text&gt; ***&lt;/xsl:text&gt;
        &lt;/xsl:message&gt;
      &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
  &lt;/xsl:function&gt;

  &lt;xsl:function name=&quot;my:evaluate-add&quot; as=&quot;xs:decimal*&quot;&gt;
    &lt;xsl:param name=&quot;values&quot; as=&quot;xs:decimal*&quot; /&gt;

    &lt;xsl:choose&gt;
      &lt;xsl:when test=&quot;fn:empty($values)&quot;&gt;
        &lt;xsl:sequence select=&quot;(0,0)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:when test=&quot;fn:count($values)=2&quot;&gt;
        &lt;xsl:sequence select=&quot;$values&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:otherwise&gt;
        &lt;xsl:variable name=&quot;intermediate&quot; as=&quot;xs:decimal*&quot;&gt;
          &lt;xsl:sequence select=&quot;$values[1] + $values[3]&quot; /&gt;
          &lt;xsl:sequence select=&quot;$values[2] + $values[4]&quot; /&gt;
          &lt;xsl:sequence select=&quot;$values[fn:count(.) gt 4]&quot; /&gt;
        &lt;/xsl:variable&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-add($intermediate)&quot; /&gt;
      &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
  &lt;/xsl:function&gt;

  &lt;xsl:function name=&quot;my:evaluate-sub&quot; as=&quot;xs:decimal*&quot;&gt;
    &lt;xsl:param name=&quot;values&quot; as=&quot;xs:decimal*&quot; /&gt;

    &lt;xsl:choose&gt;
      &lt;xsl:when test=&quot;fn:empty($values)&quot;&gt;
        &lt;xsl:sequence select=&quot;(0,0)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:when test=&quot;fn:count($values)=2&quot;&gt;
        &lt;xsl:sequence select=&quot;$values&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:otherwise&gt;
        &lt;xsl:variable name=&quot;intermediate&quot; as=&quot;xs:decimal*&quot;&gt;
          &lt;xsl:sequence select=&quot;$values[1] - $values[3]&quot; /&gt;
          &lt;xsl:sequence select=&quot;$values[2] - $values[4]&quot; /&gt;
          &lt;xsl:sequence select=&quot;$values[fn:count(.) gt 4]&quot; /&gt;
        &lt;/xsl:variable&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-sub($intermediate)&quot; /&gt;
      &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
  &lt;/xsl:function&gt;

  &lt;xsl:function name=&quot;my:evaluate-mul&quot; as=&quot;xs:decimal*&quot;&gt;
    &lt;xsl:param name=&quot;values&quot; as=&quot;xs:decimal*&quot; /&gt;

    &lt;xsl:choose&gt;
      &lt;xsl:when test=&quot;fn:empty($values)&quot;&gt;
        &lt;xsl:sequence select=&quot;(0,0)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:when test=&quot;fn:count($values)=2&quot;&gt;
        &lt;xsl:sequence select=&quot;$values&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:otherwise&gt;
        &lt;xsl:variable name=&quot;intermediate&quot; as=&quot;xs:decimal*&quot;&gt;
          &lt;xsl:sequence select=&quot;$values[1] * $values[3] - $values[2] * $values[4]&quot; /&gt;
          &lt;xsl:sequence select=&quot;$values[1] * $values[4] + $values[2] * $values[3]&quot; /&gt;
          &lt;xsl:sequence select=&quot;$values[fn:count(.) gt 4]&quot; /&gt;
        &lt;/xsl:variable&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-mul($intermediate)&quot; /&gt;
      &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
  &lt;/xsl:function&gt;

  &lt;xsl:function name=&quot;my:evaluate-div&quot; as=&quot;xs:decimal*&quot;&gt;
    &lt;xsl:param name=&quot;values&quot; as=&quot;xs:decimal*&quot; /&gt;

    &lt;xsl:choose&gt;
      &lt;xsl:when test=&quot;fn:empty($values)&quot;&gt;
        &lt;xsl:sequence select=&quot;(0,0)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:when test=&quot;fn:count($values)=2&quot;&gt;
        &lt;xsl:sequence select=&quot;$values&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:otherwise&gt;
        &lt;xsl:variable name=&quot;intermediate&quot; as=&quot;xs:decimal*&quot;&gt;
          &lt;xsl:variable name=&quot;d&quot; as=&quot;xs:decimal&quot;
            select=&quot;$values[3] * $values[3] + $values[4] * $values[4]&quot; /&gt;
          &lt;xsl:sequence select=&quot;($values[1] * $values[3] + $values[2] * $values[4]) div $d&quot; /&gt;
          &lt;xsl:sequence select=&quot;($values[1] * $values[4] - $values[2] * $values[3]) div $d&quot; /&gt;
          &lt;xsl:sequence select=&quot;$values[fn:count(.) gt 4]&quot; /&gt;
        &lt;/xsl:variable&gt;
        &lt;xsl:sequence select=&quot;my:evaluate-div($intermediate)&quot; /&gt;
      &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
  &lt;/xsl:function&gt;

  &lt;xsl:function name=&quot;my:evaluate-abs&quot; as=&quot;xs:decimal*&quot;&gt;
    &lt;xsl:param name=&quot;values&quot; as=&quot;xs:decimal*&quot; /&gt;

    &lt;xsl:sequence select=&quot;my:sqrt($values[1] * $values[1] + $values[2] * $values[2])&quot; /&gt;
    &lt;xsl:sequence select=&quot;0&quot; /&gt;
  &lt;/xsl:function&gt;

  &lt;xsl:function name=&quot;my:sqrt&quot; as=&quot;xs:decimal&quot;&gt;
    &lt;xsl:param name=&quot;n&quot; as=&quot;xs:decimal&quot; /&gt;
    &lt;xsl:variable name=&quot;base&quot; as=&quot;xs:integer*&quot;&gt;
      &lt;xsl:variable name=&quot;nstr&quot; as=&quot;xs:string&quot; select=&quot;xs:string($n)&quot; /&gt;
      &lt;xsl:for-each select=&quot;0 to
        ($n idiv fn:string-length(if (fn:contains($nstr, &#39;.&#39;))
                                  then (fn:substring-before($nstr, &#39;.&#39;))
                                  else ($nstr)))&quot; &gt;
        &lt;xsl:if test=&quot;. * . ge $n&quot;&gt;
          &lt;xsl:sequence select=&quot;.&quot; /&gt;
        &lt;/xsl:if&gt;
      &lt;/xsl:for-each&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:value-of select=&quot;my:sqrt-search($n, $base[1], 10)&quot; /&gt;
  &lt;/xsl:function&gt;

  &lt;xsl:function name=&quot;my:sqrt-search-base&quot; as=&quot;xs:integer&quot; &gt;
    &lt;xsl:param name=&quot;n&quot; as=&quot;xs:decimal&quot; /&gt;
    &lt;xsl:param name=&quot;m&quot; as=&quot;xs:integer&quot; /&gt;

    &lt;xsl:choose&gt;
      &lt;xsl:when test=&quot;$m * $m lt $n&quot;&gt;
        &lt;xsl:value-of select=&quot;my:sqrt-search-base($n, $m + 1)&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:otherwise&gt;
        &lt;xsl:value-of select=&quot;$m&quot; /&gt;
      &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
  &lt;/xsl:function&gt;

  &lt;xsl:function name=&quot;my:sqrt-search&quot;&gt;
    &lt;xsl:param name=&quot;n&quot; as=&quot;xs:decimal&quot; /&gt;
    &lt;xsl:param name=&quot;m&quot; as=&quot;xs:decimal&quot; /&gt;
    &lt;xsl:param name=&quot;prec&quot; as=&quot;xs:integer&quot; /&gt;

    &lt;xsl:choose&gt;
      &lt;xsl:when test=&quot;$prec = 0&quot;&gt;
        &lt;xsl:value-of select=&quot;$m&quot; /&gt;
      &lt;/xsl:when&gt;
      &lt;xsl:otherwise&gt;
        &lt;xsl:value-of select=&quot;my:sqrt-search($n, (($m + ($n div $m)) div 2), $prec - 1)&quot; /&gt;
      &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
  &lt;/xsl:function&gt;
&lt;/xsl:stylesheet&gt;
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8916/addtag/" class="addtag" id="addtag_8916">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/xslt/">
		XSLT
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8916/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8916/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #cfffaf;"
  >3/5=0.60</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8916"
  >-</span><span
  class="button yellow"
  id="rating_z_8916"
  >0</span><span 
  class="button green"
  id="rating_p_8916"
  >+</span></span></span>
  

<p>

  

  <a href="/web/20100628135508/http://ja.doukaku.org/comment/8916/">
    1
    reply
  </a>

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8916/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8929">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/760/" target="_top">turugina</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8929/">#8929</a>(<script language="JavaScript">print_time(new Date("2009/05/10 10:16 GMT"));</script><noscript>2009/05/10 10:16 GMT</noscript>)
	
	
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>122,143,164,187行目の fn:count(.) gt 4 は fn:position() gt 4 の間違いでした。</p>
<p>何という恥ずかしいミス...</p>
<p>つーわけで、自分で-1</p>

	</div>
	
	
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8929/addtag/" class="addtag" id="addtag_8929">タグ</a>:
	
	タグなし
	&nbsp;

	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8929"
  >-</span><span
  class="button yellow"
  id="rating_z_8929"
  >0</span><span 
  class="button green"
  id="rating_p_8929"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8916/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8929/root/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8929/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment8930">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/1026/" target="_top">airhead</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8930/">#8930</a>(<script language="JavaScript">print_time(new Date("2009/05/13 13:55 GMT"));</script><noscript>2009/05/13 13:55 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/javascript/">
	  JavaScript
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  使うときに楽だろうと思い、引数の型に幅を持たせてみました。<br/><br/>例）<br/>var&nbsp;c0&nbsp;=&nbsp;new&nbsp;Complex(0,&nbsp;1);<br/>var&nbsp;c1&nbsp;=&nbsp;new&nbsp;Complex([1,&nbsp;1]);<br/>var&nbsp;c2&nbsp;=&nbsp;new&nbsp;Complex({r:3,&nbsp;i:-4});<br/>var&nbsp;c3&nbsp;=&nbsp;new&nbsp;Complex("5-8i");<br/><br/>alert((new&nbsp;Complex("3+2i")).mul("5-i").mul("-6+2i").div("5-i").div("-6+2i"));<br/>
	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160</pre></td><td class="code"><div class="highlight"><pre><span class="k">var</span> <span class="nx">Complex</span> <span class="o">=</span> <span class="k">function</span> <span class="p">(</span><span class="nx">arg0</span><span class="o">,</span> <span class="nx">arg1</span><span class="p">){</span>
    <span class="nx">arg0</span> <span class="o">=</span> <span class="nx">arg0</span> <span class="o">||</span> <span class="mi">0</span><span class="o">;</span>
    <span class="nx">arg1</span> <span class="o">=</span> <span class="nx">arg1</span> <span class="o">||</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">arg0</span> <span class="o">==</span> <span class="s2">&quot;number&quot;</span> <span class="o">&amp;&amp;</span> <span class="k">typeof</span> <span class="nx">arg1</span> <span class="o">==</span> <span class="s2">&quot;number&quot;</span><span class="p">){</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">r</span> <span class="o">=</span> <span class="nx">arg0</span><span class="o">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">i</span> <span class="o">=</span> <span class="nx">arg1</span><span class="o">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="k">var</span> <span class="nx">tmp</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">arg0</span><span class="p">)</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">r</span> <span class="o">=</span> <span class="nx">tmp</span><span class="p">.</span><span class="nx">r</span><span class="o">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">i</span> <span class="o">=</span> <span class="nx">tmp</span><span class="p">.</span><span class="nx">i</span><span class="o">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="c">// 加減乗除メソッドは破壊的</span>
<span class="nx">Complex</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="p">{</span>
    <span class="nx">toString</span><span class="o">:</span> <span class="k">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="k">this</span><span class="p">);}</span><span class="o">,</span>
    <span class="nx">valueOf</span><span class="o">:</span>  <span class="k">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="k">this</span><span class="p">);}</span><span class="o">,</span>
    <span class="nx">abs</span><span class="o">:</span> <span class="k">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">);}</span><span class="o">,</span>
    <span class="nx">add</span><span class="o">:</span> <span class="k">function</span><span class="p">(</span><span class="nx">cn</span><span class="p">){</span>
        <span class="k">var</span> <span class="nx">tmp</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">cn</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">r</span> <span class="o">=</span> <span class="nx">tmp</span><span class="p">.</span><span class="nx">r</span><span class="o">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">i</span> <span class="o">=</span> <span class="nx">tmp</span><span class="p">.</span><span class="nx">i</span><span class="o">;</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="p">}</span><span class="o">,</span>
    <span class="nx">sub</span><span class="o">:</span> <span class="k">function</span><span class="p">(</span><span class="nx">cn</span><span class="p">){</span>
        <span class="k">var</span> <span class="nx">tmp</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">sub</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">cn</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">r</span> <span class="o">=</span> <span class="nx">tmp</span><span class="p">.</span><span class="nx">r</span><span class="o">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">i</span> <span class="o">=</span> <span class="nx">tmp</span><span class="p">.</span><span class="nx">i</span><span class="o">;</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="p">}</span><span class="o">,</span>
    <span class="nx">mul</span><span class="o">:</span> <span class="k">function</span><span class="p">(</span><span class="nx">cn</span><span class="p">){</span>
        <span class="k">var</span> <span class="nx">tmp</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">mul</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">cn</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">r</span> <span class="o">=</span> <span class="nx">tmp</span><span class="p">.</span><span class="nx">r</span><span class="o">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">i</span> <span class="o">=</span> <span class="nx">tmp</span><span class="p">.</span><span class="nx">i</span><span class="o">;</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="p">}</span><span class="o">,</span>
    <span class="nx">div</span><span class="o">:</span> <span class="k">function</span><span class="p">(</span><span class="nx">cn</span><span class="p">){</span>
        <span class="k">var</span> <span class="nx">tmp</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">div</span><span class="p">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">cn</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">r</span> <span class="o">=</span> <span class="nx">tmp</span><span class="p">.</span><span class="nx">r</span><span class="o">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">i</span> <span class="o">=</span> <span class="nx">tmp</span><span class="p">.</span><span class="nx">i</span><span class="o">;</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="c">// 以下はインスタンスのメソッドではない</span>
<span class="c">// 引数をインスタンスもどき（メソッドなしでプロパティr, iのみのオブジェクト）に変換する関数</span>
<span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nx">arg</span><span class="p">){</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">arg</span> <span class="o">==</span> <span class="s2">&quot;object&quot;</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">{</span><span class="nx">r</span><span class="o">:</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">arg</span><span class="p">.</span><span class="nx">r</span> <span class="o">||</span> <span class="nx">arg</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="mi">0</span><span class="p">)</span><span class="o">,</span> <span class="nx">i</span><span class="o">:</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">arg</span><span class="p">.</span><span class="nx">i</span> <span class="o">||</span> <span class="nx">arg</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">||</span> <span class="mi">0</span><span class="p">)};</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">arg</span> <span class="o">==</span> <span class="s2">&quot;string&quot;</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">var</span> <span class="nx">srcNum</span> <span class="o">=</span> <span class="s2">&quot;([+\\-]?(?:[0-9]+\\.?[0-9]*|0?\\.[0-9]+)(?:e[+\\-]?[0-9]+)?)&quot;</span><span class="o">;</span>
        <span class="k">var</span> <span class="nx">reCNum</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(?:&quot;</span> <span class="o">+</span> <span class="nx">srcNum</span> <span class="o">+</span> <span class="s2">&quot;(?!i))?(?:&quot;</span> <span class="o">+</span> <span class="nx">srcNum</span> <span class="o">+</span> <span class="s2">&quot;i)?$&quot;</span><span class="o">,</span> <span class="s2">&quot;i&quot;</span><span class="p">);</span>
        <span class="nx">reCNum</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">arg</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s/g</span><span class="o">,</span> <span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(^|\+|-)i/i</span><span class="o">,</span> <span class="s2">&quot;$11i&quot;</span><span class="p">));</span>
        <span class="k">return</span> <span class="p">{</span><span class="nx">r</span><span class="o">:</span> <span class="nb">Number</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">.</span><span class="nx">$1</span><span class="p">)</span><span class="o">,</span> <span class="nx">i</span><span class="o">:</span> <span class="nb">Number</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">.</span><span class="nx">$2</span><span class="p">)};</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="p">{</span><span class="nx">r</span><span class="o">:</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">arg</span><span class="p">)</span><span class="o">,</span> <span class="nx">i</span><span class="o">:</span> <span class="mi">0</span><span class="p">};</span>
<span class="p">};</span>

<span class="c">// インスタンス相当を引数に取る関数</span>
<span class="nx">Complex</span><span class="p">.</span><span class="nx">toString</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nx">cn</span><span class="p">){</span>
    <span class="nx">cn</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">cn</span><span class="p">);</span>
    <span class="k">return</span> <span class="nx">cn</span><span class="p">.</span><span class="nx">r</span><span class="p">.</span><span class="nx">toString</span><span class="p">()</span> <span class="o">+</span> <span class="p">(</span><span class="nx">cn</span><span class="p">.</span><span class="nx">i</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">?</span> <span class="s2">&quot;+&quot;</span> <span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="nx">cn</span><span class="p">.</span><span class="nx">i</span><span class="p">.</span><span class="nx">toString</span><span class="p">()</span> <span class="o">+</span> <span class="s2">&quot;i&quot;</span><span class="o">;</span>
<span class="p">};</span>
<span class="nx">Complex</span><span class="p">.</span><span class="nx">abs</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nx">cn</span><span class="p">){</span>
    <span class="nx">cn</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">cn</span><span class="p">);</span>
    <span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">cn</span><span class="p">.</span><span class="nx">r</span> <span class="o">*</span> <span class="nx">cn</span><span class="p">.</span><span class="nx">r</span> <span class="o">+</span> <span class="nx">cn</span><span class="p">.</span><span class="nx">i</span> <span class="o">*</span> <span class="nx">cn</span><span class="p">.</span><span class="nx">i</span><span class="p">);</span>
<span class="p">};</span>
<span class="c">// 加減乗除関数は新しいインスタンスを返す</span>
<span class="nx">Complex</span><span class="p">.</span><span class="nx">add</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nx">cn0</span><span class="o">,</span> <span class="nx">cn1</span><span class="p">){</span>
    <span class="nx">cn0</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">cn0</span><span class="p">);</span>
    <span class="nx">cn1</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">cn1</span><span class="p">);</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="nx">cn0</span><span class="p">.</span><span class="nx">r</span> <span class="o">+</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">r</span><span class="o">,</span> <span class="nx">cn0</span><span class="p">.</span><span class="nx">i</span> <span class="o">+</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">i</span><span class="p">);</span>
<span class="p">};</span>
<span class="nx">Complex</span><span class="p">.</span><span class="nx">sub</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nx">cn0</span><span class="o">,</span> <span class="nx">cn1</span><span class="p">){</span>
    <span class="nx">cn0</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">cn0</span><span class="p">);</span>
    <span class="nx">cn1</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">cn1</span><span class="p">);</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="nx">cn0</span><span class="p">.</span><span class="nx">r</span> <span class="o">-</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">r</span><span class="o">,</span> <span class="nx">cn0</span><span class="p">.</span><span class="nx">i</span> <span class="o">-</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">i</span><span class="p">);</span>
<span class="p">};</span>
<span class="nx">Complex</span><span class="p">.</span><span class="nx">mul</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nx">cn0</span><span class="o">,</span> <span class="nx">cn1</span><span class="p">){</span>
    <span class="nx">cn0</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">cn0</span><span class="p">);</span>
    <span class="nx">cn1</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">cn1</span><span class="p">);</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="nx">cn0</span><span class="p">.</span><span class="nx">r</span> <span class="o">*</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">r</span> <span class="o">-</span> <span class="nx">cn0</span><span class="p">.</span><span class="nx">i</span> <span class="o">*</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">i</span><span class="o">,</span>
                       <span class="nx">cn0</span><span class="p">.</span><span class="nx">i</span> <span class="o">*</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">r</span> <span class="o">+</span> <span class="nx">cn0</span><span class="p">.</span><span class="nx">r</span> <span class="o">*</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">i</span><span class="p">);</span>
<span class="p">};</span>
<span class="nx">Complex</span><span class="p">.</span><span class="nx">div</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="nx">cn0</span><span class="o">,</span> <span class="nx">cn1</span><span class="p">){</span>
    <span class="nx">cn0</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">cn0</span><span class="p">);</span>
    <span class="nx">cn1</span> <span class="o">=</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">conv</span><span class="p">(</span><span class="nx">cn1</span><span class="p">);</span>
    <span class="k">var</span> <span class="nx">absSq</span> <span class="o">=</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">r</span> <span class="o">*</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">r</span> <span class="o">+</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">i</span> <span class="o">*</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">i</span><span class="o">;</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nx">Complex</span><span class="p">((</span><span class="nx">cn0</span><span class="p">.</span><span class="nx">r</span> <span class="o">*</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">r</span> <span class="o">+</span> <span class="nx">cn0</span><span class="p">.</span><span class="nx">i</span> <span class="o">*</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">i</span><span class="p">)</span> <span class="o">/</span> <span class="nx">absSq</span><span class="o">,</span>
                       <span class="p">(</span><span class="nx">cn0</span><span class="p">.</span><span class="nx">i</span> <span class="o">*</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">r</span> <span class="o">-</span> <span class="nx">cn0</span><span class="p">.</span><span class="nx">r</span> <span class="o">*</span> <span class="nx">cn1</span><span class="p">.</span><span class="nx">i</span><span class="p">)</span> <span class="o">/</span> <span class="nx">absSq</span><span class="p">);</span>
<span class="p">};</span>
<span class="c">// 定義部はここまで</span>

<span class="c">/* お題の計算。結果は以下</span>
<span class="c">7+0i</span>
<span class="c">3-15i</span>
<span class="c">1+55i</span>
<span class="c">1.1333333333333333-0.4i</span>
<span class="c">3.605551275463989</span>
<span class="c">*/</span>
<span class="nx">alert</span><span class="p">(</span>
             <span class="nx">Complex</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">,</span>  <span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="mi">4</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">))</span>
    <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">sub</span><span class="p">(</span><span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="mi">5</span><span class="o">,</span> <span class="o">-</span><span class="mi">9</span><span class="p">)</span><span class="o">,</span> <span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">6</span><span class="p">))</span>
    <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">mul</span><span class="p">(</span><span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">3</span><span class="p">)</span><span class="o">,</span>  <span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">8</span><span class="p">))</span>
    <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">div</span><span class="p">(</span><span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="mi">9</span><span class="o">,</span> <span class="o">-</span><span class="mi">7</span><span class="p">)</span><span class="o">,</span> <span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="mi">9</span><span class="o">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">))</span>
    <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="p">))</span>
<span class="p">);</span>

<span class="c">// インスタンスを作る。引数は数値2つ、</span>
<span class="c">// もしくは数値要素を2つ持つ（連想）配列か、複素数と解釈できる文字列</span>
<span class="k">var</span> <span class="nx">c0</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="p">);</span>
<span class="k">var</span> <span class="nx">c1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Complex</span><span class="p">([</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="p">]);</span>
<span class="k">var</span> <span class="nx">c2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Complex</span><span class="p">({</span><span class="nx">r</span><span class="o">:</span><span class="mi">3</span><span class="o">,</span> <span class="nx">i</span><span class="o">:-</span><span class="mi">4</span><span class="p">});</span>
<span class="k">var</span> <span class="nx">c3</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="s2">&quot;5-8i&quot;</span><span class="p">);</span>

<span class="c">// 絶対値を出してみる。上3行と下3行の結果は同じ。</span>
<span class="nx">alert</span><span class="p">(</span>
             <span class="s2">&quot;|&quot;</span> <span class="o">+</span> <span class="nx">c0</span> <span class="o">+</span> <span class="s2">&quot;| = &quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">c0</span><span class="p">)</span>
    <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="s2">&quot;|&quot;</span> <span class="o">+</span> <span class="nx">c1</span> <span class="o">+</span> <span class="s2">&quot;| = &quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">c1</span><span class="p">)</span>
    <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="s2">&quot;|&quot;</span> <span class="o">+</span> <span class="nx">c2</span> <span class="o">+</span> <span class="s2">&quot;| = &quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">c2</span><span class="p">)</span>
    <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="s2">&quot;|&quot;</span> <span class="o">+</span> <span class="nx">c0</span> <span class="o">+</span> <span class="s2">&quot;| = &quot;</span> <span class="o">+</span> <span class="nx">c0</span><span class="p">.</span><span class="nx">abs</span><span class="p">()</span>
    <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="s2">&quot;|&quot;</span> <span class="o">+</span> <span class="nx">c1</span> <span class="o">+</span> <span class="s2">&quot;| = &quot;</span> <span class="o">+</span> <span class="nx">c1</span><span class="p">.</span><span class="nx">abs</span><span class="p">()</span>
    <span class="o">+</span> <span class="s2">&quot;\n&quot;</span> <span class="o">+</span> <span class="s2">&quot;|&quot;</span> <span class="o">+</span> <span class="nx">c2</span> <span class="o">+</span> <span class="s2">&quot;| = &quot;</span> <span class="o">+</span> <span class="nx">c2</span><span class="p">.</span><span class="nx">abs</span><span class="p">()</span>
<span class="p">);</span>

<span class="c">// 計算1。引数なら文字列のままでも可。</span>
<span class="c">// 下3行の計算は破壊的（c0の値が計算結果に変わる）</span>
<span class="nx">alert</span><span class="p">(</span>
        <span class="s2">&quot;(&quot;</span> <span class="o">+</span> <span class="nx">c0</span> <span class="o">+</span> <span class="s2">&quot;) + (&quot;</span> <span class="o">+</span> <span class="nx">c1</span>   <span class="o">+</span> <span class="s2">&quot;) = &quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">c0</span><span class="o">,</span> <span class="nx">c1</span><span class="p">)</span>
    <span class="o">+</span> <span class="s2">&quot;\n(&quot;</span> <span class="o">+</span> <span class="nx">c0</span> <span class="o">+</span> <span class="s2">&quot;) - (&quot;</span> <span class="o">+</span> <span class="nx">c2</span>   <span class="o">+</span> <span class="s2">&quot;) = &quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">sub</span><span class="p">(</span><span class="nx">c0</span><span class="o">,</span> <span class="nx">c2</span><span class="p">)</span>
    <span class="o">+</span> <span class="s2">&quot;\n(&quot;</span> <span class="o">+</span> <span class="nx">c0</span> <span class="o">+</span> <span class="s2">&quot;) / (&quot;</span> <span class="o">+</span> <span class="s2">&quot;-i&quot;</span> <span class="o">+</span> <span class="s2">&quot;) = &quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">div</span><span class="p">(</span><span class="nx">c0</span><span class="o">,</span> <span class="s2">&quot;-i&quot;</span><span class="p">)</span>
    <span class="o">+</span> <span class="s2">&quot;\n(&quot;</span> <span class="o">+</span> <span class="nx">c0</span> <span class="o">+</span> <span class="s2">&quot;) + (&quot;</span> <span class="o">+</span> <span class="nx">c1</span>   <span class="o">+</span> <span class="s2">&quot;) = &quot;</span> <span class="o">+</span> <span class="nx">c0</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">c1</span><span class="p">)</span>
    <span class="o">+</span> <span class="s2">&quot;\n(&quot;</span> <span class="o">+</span> <span class="nx">c0</span> <span class="o">+</span> <span class="s2">&quot;) - (&quot;</span> <span class="o">+</span> <span class="nx">c2</span>   <span class="o">+</span> <span class="s2">&quot;) = &quot;</span> <span class="o">+</span> <span class="nx">c0</span><span class="p">.</span><span class="nx">sub</span><span class="p">(</span><span class="nx">c2</span><span class="p">)</span>
    <span class="o">+</span> <span class="s2">&quot;\n(&quot;</span> <span class="o">+</span> <span class="nx">c0</span> <span class="o">+</span> <span class="s2">&quot;) / (&quot;</span> <span class="o">+</span> <span class="s2">&quot;-i&quot;</span> <span class="o">+</span> <span class="s2">&quot;) = &quot;</span> <span class="o">+</span> <span class="nx">c0</span><span class="p">.</span><span class="nx">div</span><span class="p">(</span><span class="s2">&quot;-i&quot;</span><span class="p">)</span>
<span class="p">);</span>

<span class="c">// 計算2。iの2乗。加減乗除の組み合わせ2つ。複素数を0で割ると0/0</span>
<span class="nx">alert</span><span class="p">(</span>
      <span class="s2">&quot;i * i = &quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">mul</span><span class="p">(</span><span class="s2">&quot;i&quot;</span><span class="o">,</span> <span class="s2">&quot;i&quot;</span><span class="p">)</span>

    <span class="o">+</span> <span class="s2">&quot;\n(3+2i) * (5-i) * (-6+2i) / (5-i) / (-6+2i) = &quot;</span>
    <span class="o">+</span> <span class="p">(</span><span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="s2">&quot;3+2i&quot;</span><span class="p">)).</span><span class="nx">mul</span><span class="p">(</span><span class="s2">&quot;5-i&quot;</span><span class="p">).</span><span class="nx">mul</span><span class="p">(</span><span class="s2">&quot;-6+2i&quot;</span><span class="p">).</span><span class="nx">div</span><span class="p">(</span><span class="s2">&quot;5-i&quot;</span><span class="p">).</span><span class="nx">div</span><span class="p">(</span><span class="s2">&quot;-6+2i&quot;</span><span class="p">)</span>

    <span class="o">+</span> <span class="s2">&quot;\n( (3+2i) + (4-i) ) * 2i * -.5i - (4-i) = &quot;</span>
    <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&quot;3+2i&quot;</span><span class="o">,</span> <span class="s2">&quot;4-i&quot;</span><span class="p">).</span><span class="nx">mul</span><span class="p">(</span><span class="s2">&quot;2i&quot;</span><span class="p">).</span><span class="nx">mul</span><span class="p">(</span><span class="s2">&quot;-.5i&quot;</span><span class="p">).</span><span class="nx">sub</span><span class="p">(</span><span class="s2">&quot;4-i&quot;</span><span class="p">)</span>

    <span class="o">+</span> <span class="s2">&quot;\n(1+2i) / 0 = &quot;</span> <span class="o">+</span> <span class="nx">Complex</span><span class="p">.</span><span class="nx">div</span><span class="p">(</span><span class="s2">&quot;1+2i&quot;</span><span class="o">,</span> <span class="s2">&quot;0&quot;</span><span class="p">)</span>
<span class="p">);</span>

<span class="c">// 引数いろいろ。falsyな値や空配列は0+0iに</span>
<span class="k">var</span> <span class="nx">testcases</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s2">&quot;-3-8i&quot;</span><span class="o">,</span> <span class="s2">&quot;5&quot;</span><span class="o">,</span> <span class="p">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">4</span><span class="p">]</span><span class="o">,</span> <span class="p">[</span><span class="mi">2</span><span class="o">,</span> <span class="o">-</span><span class="mi">8</span><span class="p">]</span><span class="o">,</span>
    <span class="s2">&quot;-2+i&quot;</span><span class="o">,</span> <span class="s2">&quot;-2-i&quot;</span><span class="o">,</span> <span class="p">{</span><span class="nx">r</span><span class="o">:-</span><span class="mf">2.5</span><span class="o">,</span> <span class="nx">i</span><span class="o">:</span><span class="mi">3</span><span class="nx">e</span><span class="o">-</span><span class="mi">2</span><span class="p">}</span><span class="o">,</span> <span class="s2">&quot;-2E8 + I&quot;</span><span class="o">,</span>
    <span class="s2">&quot;0&quot;</span><span class="o">,</span> <span class="s2">&quot;i&quot;</span><span class="o">,</span> <span class="kc">Infinity</span><span class="o">,</span> <span class="kc">NaN</span><span class="o">,</span> <span class="s2">&quot;&quot;</span><span class="o">,</span> <span class="p">{}</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">undefined</span>
<span class="p">];</span>
<span class="k">for</span> <span class="p">(</span><span class="k">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="nx">rslt</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">testcases</span><span class="p">.</span><span class="nx">length</span><span class="o">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
    <span class="nx">rslt</span> <span class="o">+=</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">testcases</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="o">+</span> <span class="s2">&quot;: &quot;</span> <span class="o">+</span> <span class="nx">testcases</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span>
        <span class="o">+</span> <span class="s2">&quot;\n\t\t&quot;</span> <span class="o">+</span> <span class="p">(</span><span class="k">new</span> <span class="nx">Complex</span><span class="p">(</span><span class="nx">testcases</span><span class="p">[</span><span class="nx">i</span><span class="p">]))</span> <span class="o">+</span> <span class="s2">&quot;\n&quot;</span><span class="o">;</span>
<span class="p">}</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">rslt</span><span class="p">);</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/8930/addtag/" class="addtag" id="addtag_8930">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/javascript/">
		JavaScript
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8930/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/8930/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_8930"
  >-</span><span
  class="button yellow"
  id="rating_z_8930"
  >0</span><span 
  class="button green"
  id="rating_p_8930"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/8930/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9070">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/732/" target="_top">bleis-tift</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/9070/">#9070</a>(<script language="JavaScript">print_time(new Date("2009/06/08 09:51 GMT"));</script><noscript>2009/06/08 09:51 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/sql/">
	  SQL
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>SQL Server 2008 で確認しました。</p>
<p>入力が微妙ですが、問題ID, 種類(左辺：1、演算子：2、右辺：3), 実部, 虚部, 演算子(加算：1、減算：2、乗算：3、除算：4、絶対値：5)を与えます。</p>
<p>すると、Resultsとして問題IDの答えの実部と虚部が取得できます。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71</pre></td><td class="code"><div class="highlight"><pre><span class="k">WITH</span>
  <span class="k">Input</span><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">kind</span><span class="p">,</span> <span class="n">real_part</span><span class="p">,</span> <span class="n">img_part</span><span class="p">,</span> <span class="n">op</span><span class="p">)</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="c1">-- (3 + i) + (4 - i)</span>
    <span class="k">SELECT</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">CAST</span><span class="p">(</span><span class="k">NULL</span> <span class="k">AS</span> <span class="nb">int</span><span class="p">)</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="k">SELECT</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="mi">1</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="k">SELECT</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="k">NULL</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="c1">-- (5 - 9i) - (2 + 6i)</span>
    <span class="k">SELECT</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="o">-</span><span class="mi">9</span><span class="p">,</span> <span class="k">NULL</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="k">SELECT</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="mi">2</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="k">SELECT</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="k">NULL</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="c1">-- (5 + 3i) * (5 + 8i)</span>
    <span class="k">SELECT</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="k">NULL</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="k">SELECT</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="mi">3</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="k">SELECT</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="k">NULL</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="c1">-- (9 - 7i) / (9 - 3i)</span>
    <span class="k">SELECT</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="o">-</span><span class="mi">7</span><span class="p">,</span> <span class="k">NULL</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="k">SELECT</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="mi">4</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="k">SELECT</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="k">NULL</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="c1">-- |2 + 3i|</span>
    <span class="k">SELECT</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="k">NULL</span>
    <span class="k">UNION</span> <span class="k">ALL</span>
    <span class="k">SELECT</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="k">NULL</span><span class="p">,</span> <span class="mi">5</span>
  <span class="p">)</span>
<span class="p">,</span> <span class="nb">Interval</span><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">l_real</span><span class="p">,</span> <span class="n">l_img</span><span class="p">,</span> <span class="n">op</span><span class="p">,</span> <span class="n">r_real</span><span class="p">,</span> <span class="n">r_img</span><span class="p">)</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">id</span>
      <span class="p">,</span> <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="n">kind</span> <span class="k">WHEN</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">real_part</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span>
      <span class="p">,</span> <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="n">kind</span> <span class="k">WHEN</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">img_part</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span>
      <span class="p">,</span> <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="n">kind</span> <span class="k">WHEN</span> <span class="mi">2</span> <span class="k">THEN</span> <span class="n">op</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span>
      <span class="p">,</span> <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="n">kind</span> <span class="k">WHEN</span> <span class="mi">3</span> <span class="k">THEN</span> <span class="n">real_part</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span>
      <span class="p">,</span> <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="n">kind</span> <span class="k">WHEN</span> <span class="mi">3</span> <span class="k">THEN</span> <span class="n">img_part</span> <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">END</span><span class="p">)</span>
    <span class="k">FROM</span>
        <span class="k">Input</span>
    <span class="k">GROUP</span> <span class="k">BY</span>
        <span class="n">id</span>
  <span class="p">)</span>
<span class="p">,</span> <span class="n">Results</span><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">real_part</span><span class="p">,</span> <span class="n">img_part</span><span class="p">)</span> <span class="k">AS</span> <span class="p">(</span>
    <span class="k">SELECT</span>
        <span class="n">id</span>
      <span class="p">,</span> <span class="k">CASE</span> <span class="n">op</span>
        <span class="k">WHEN</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">l_real</span> <span class="o">+</span> <span class="n">r_real</span>
        <span class="k">WHEN</span> <span class="mi">2</span> <span class="k">THEN</span> <span class="n">l_real</span> <span class="o">-</span> <span class="n">r_real</span>
        <span class="k">WHEN</span> <span class="mi">3</span> <span class="k">THEN</span> <span class="p">(</span><span class="n">l_real</span> <span class="o">*</span> <span class="n">r_real</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="n">l_img</span> <span class="o">*</span> <span class="n">r_img</span><span class="p">)</span>
        <span class="k">WHEN</span> <span class="mi">4</span> <span class="k">THEN</span> <span class="p">((</span><span class="n">l_real</span> <span class="o">*</span> <span class="n">r_real</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">l_img</span> <span class="o">*</span> <span class="n">r_img</span><span class="p">))</span> <span class="o">/</span>
                    <span class="p">(</span><span class="n">SQUARE</span><span class="p">(</span><span class="n">r_real</span><span class="p">)</span> <span class="o">+</span> <span class="n">SQUARE</span><span class="p">(</span><span class="n">r_img</span><span class="p">))</span>
        <span class="k">WHEN</span> <span class="mi">5</span> <span class="k">THEN</span> <span class="n">SQRT</span><span class="p">(</span><span class="n">SQUARE</span><span class="p">(</span><span class="n">l_real</span><span class="p">)</span> <span class="o">+</span> <span class="n">SQUARE</span><span class="p">(</span><span class="n">l_img</span><span class="p">))</span>
        <span class="k">END</span>
      <span class="p">,</span> <span class="k">CASE</span> <span class="n">op</span>
        <span class="k">WHEN</span> <span class="mi">1</span> <span class="k">THEN</span> <span class="n">l_img</span> <span class="o">+</span> <span class="n">r_img</span>
        <span class="k">WHEN</span> <span class="mi">2</span> <span class="k">THEN</span> <span class="n">l_img</span> <span class="o">-</span> <span class="n">r_img</span>
        <span class="k">WHEN</span> <span class="mi">3</span> <span class="k">THEN</span> <span class="p">(</span><span class="n">l_img</span> <span class="o">*</span> <span class="n">r_real</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">l_real</span> <span class="o">*</span> <span class="n">r_img</span><span class="p">)</span>
        <span class="k">WHEN</span> <span class="mi">4</span> <span class="k">THEN</span> <span class="p">((</span><span class="n">l_img</span> <span class="o">*</span> <span class="n">r_real</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="n">l_real</span> <span class="o">*</span> <span class="n">r_img</span><span class="p">))</span> <span class="o">/</span>
                    <span class="p">(</span><span class="n">SQUARE</span><span class="p">(</span><span class="n">r_real</span><span class="p">)</span> <span class="o">+</span> <span class="n">SQUARE</span><span class="p">(</span><span class="n">r_img</span><span class="p">))</span>
        <span class="k">WHEN</span> <span class="mi">5</span> <span class="k">THEN</span> <span class="mi">0</span>
        <span class="k">END</span>
    <span class="k">FROM</span>
        <span class="nb">Interval</span>
  <span class="p">)</span>
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">Results</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/9070/addtag/" class="addtag" id="addtag_9070">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/sql/">
		SQL
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/9070/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/9070/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9070"
  >-</span><span
  class="button yellow"
  id="rating_z_9070"
  >0</span><span 
  class="button green"
  id="rating_p_9070"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/9070/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9114">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/763/" target="_top">Songmu</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/9114/">#9114</a>(<script language="JavaScript">print_time(new Date("2009/06/11 00:10 GMT"));</script><noscript>2009/06/11 00:10 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/perl/">
	  Perl
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>演算子オーバーロードを使ってスクラッチで実装。
Perlの真骨頂。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107</pre></td><td class="code"><div class="highlight"><pre><span class="c1">#!/usr/bin/perl</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
<span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>

<span class="nb">package</span> <span class="n">ComplexNumber</span><span class="p">;</span>
<span class="k">use</span> <span class="n">overload</span>
    <span class="s">&#39;&quot;&quot;&#39;</span> <span class="o">=&gt;</span> <span class="o">\&amp;</span><span class="n">toString</span><span class="p">,</span>
    <span class="s">&#39;+&#39;</span>  <span class="o">=&gt;</span> <span class="o">\&amp;</span><span class="n">add</span><span class="p">,</span>
    <span class="s">&#39;-&#39;</span>  <span class="o">=&gt;</span> <span class="o">\&amp;</span><span class="n">sub</span><span class="p">,</span>
    <span class="s">&#39;*&#39;</span>  <span class="o">=&gt;</span> <span class="o">\&amp;</span><span class="n">mul</span><span class="p">,</span>
    <span class="s">&#39;/&#39;</span>  <span class="o">=&gt;</span> <span class="o">\&amp;</span><span class="n">div</span><span class="p">,</span>
    <span class="s">&#39;0+&#39;</span> <span class="o">=&gt;</span> <span class="o">\&amp;</span><span class="n">val</span><span class="p">,</span>
<span class="p">;</span>
<span class="k">sub </span><span class="nf">new</span><span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$class</span><span class="p">,</span> <span class="nv">$real</span><span class="p">,</span> <span class="nv">$imagin</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="k">return</span> <span class="k">unless</span> <span class="nb">defined</span><span class="p">(</span><span class="nv">$real</span><span class="p">);</span>
    
    <span class="k">if</span><span class="p">(</span><span class="nv">$real</span> <span class="o">=~</span><span class="sr"> /^[-+]?\d+(\.\d+)?$/</span> <span class="ow">and</span> 
       <span class="p">(</span><span class="o">!</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$imagin</span><span class="p">)</span> <span class="ow">or</span> <span class="nv">$imagin</span> <span class="o">=~</span><span class="sr"> /^[-+]?\d*(\d\.\d+)?i?$/</span><span class="p">))</span>
    <span class="p">{</span><span class="c1">#$real, $imagin両方に数値が渡ってきた時。$imaginが未定義/末尾にiは許容</span>
        <span class="nv">$real</span>   <span class="o">=~</span> <span class="sr">s/\+//</span><span class="p">;</span>
        <span class="nv">$imagin</span> <span class="o">=~</span> <span class="sr">s/[i+]//g</span> <span class="k">if</span> <span class="nv">$imagin</span><span class="p">;</span>
        <span class="nv">$imagin</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">unless</span> <span class="nv">$imagin</span><span class="p">;</span>
        <span class="k">return</span> <span class="nb">bless</span> <span class="p">{</span><span class="n">a</span><span class="o">=&gt;</span><span class="nv">$real</span><span class="p">,</span> <span class="n">b</span><span class="o">=&gt;</span><span class="nv">$imagin</span><span class="p">},</span> <span class="nv">$class</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="k">if</span> <span class="nv">$imagin</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="nv">$real</span> <span class="o">=~</span><span class="sr"> /^[-+]?\d+(\.\d+)?i$/</span><span class="p">){</span><span class="c1">#第1引数 に 文字列&#39;5i&#39;とかが渡された時</span>
        <span class="nv">$real</span> <span class="o">=~</span> <span class="sr">s/[i+]//g</span><span class="p">;</span>
        <span class="k">return</span> <span class="nb">bless</span> <span class="p">{</span><span class="n">a</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="n">b</span><span class="o">=&gt;</span><span class="nv">$real</span><span class="p">},</span> <span class="nv">$class</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nv">$real</span> <span class="o">=~</span> <span class="sr">s/\s//g</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="k">my</span> <span class="p">(</span><span class="nv">$real2</span><span class="p">,</span> <span class="nv">$imagin2</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$real</span> <span class="o">=~</span><span class="sr"> /^([-+]?\d+(?:\.\d+)?)([-+]\d+(?:\.\d+)?)i$/</span><span class="p">){</span>
    <span class="c1">#第1引数 に 文字列(ex. &#39;5+4.8i&#39;)が渡された時</span>
        <span class="nv">$real2</span> <span class="o">=~</span> <span class="sr">s/\+//</span><span class="p">;</span>
        <span class="nv">$imagin2</span> <span class="o">=~</span> <span class="sr">s/\+//</span><span class="p">;</span>
        <span class="k">return</span> <span class="nb">bless</span> <span class="p">{</span><span class="n">a</span><span class="o">=&gt;</span><span class="nv">$real2</span><span class="p">,</span> <span class="n">b</span><span class="o">=&gt;</span><span class="nv">$imagin2</span><span class="p">},</span> <span class="nv">$class</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">sub </span><span class="nf">toString</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span> <span class="k">if</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">return</span> <span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">})</span> <span class="o">!=</span> <span class="mi">1</span> <span class="p">?</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span> <span class="p">:</span> <span class="s">&#39;-&#39;</span><span class="p">)</span> <span class="o">.</span> <span class="s">&#39;i&#39;</span>
        <span class="k">if</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span> <span class="o">.</span> 
           <span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">?</span> <span class="s">&#39;+&#39;</span> <span class="p">:</span> <span class="s">&#39;&#39;</span><span class="p">)</span> <span class="o">.</span> 
           <span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">})</span> <span class="o">!=</span> <span class="mi">1</span> <span class="p">?</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span> <span class="p">:</span> <span class="s">&#39;-&#39;</span><span class="p">)</span> <span class="o">.</span><span class="s">&#39;i&#39;</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">sub </span><span class="nf">add</span><span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$self</span><span class="p">,</span> <span class="nv">$src</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$src</span> <span class="o">=</span> <span class="n">ComplexNumber</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$src</span><span class="p">)</span> <span class="k">unless</span> <span class="nb">eval</span><span class="p">{</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="n">isa</span><span class="p">(</span><span class="s">&#39;ComplexNumber&#39;</span><span class="p">)};</span>
    <span class="k">return</span> <span class="nv">$src</span> <span class="p">?</span>
        <span class="n">ComplexNumber</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">+</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">},</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span><span class="o">+</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">})</span> <span class="p">:</span> <span class="p">();</span>
<span class="p">}</span>
<span class="k">sub </span><span class="nf">sub</span><span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$dest</span><span class="p">,</span> <span class="nv">$src</span><span class="p">,</span> <span class="nv">$rev</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$src</span> <span class="o">=</span> <span class="n">ComplexNumber</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$src</span><span class="p">)</span> <span class="k">unless</span> <span class="nb">eval</span><span class="p">{</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="n">isa</span><span class="p">(</span><span class="s">&#39;ComplexNumber&#39;</span><span class="p">)};</span>
    <span class="k">return</span> <span class="k">unless</span> <span class="nv">$src</span><span class="p">;</span>
    <span class="p">(</span><span class="nv">$dest</span><span class="p">,</span> <span class="nv">$src</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$src</span><span class="p">,</span> <span class="nv">$dest</span><span class="p">)</span> <span class="k">if</span> <span class="nv">$rev</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">ComplexNumber</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$dest</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">-</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">},</span> <span class="nv">$dest</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span><span class="o">-</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">});</span>
<span class="p">}</span>
<span class="k">sub </span><span class="nf">mul</span><span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$dest</span><span class="p">,</span> <span class="nv">$src</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$src</span> <span class="o">=</span> <span class="n">ComplexNumber</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$src</span><span class="p">)</span> <span class="k">unless</span> <span class="nb">eval</span><span class="p">{</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="n">isa</span><span class="p">(</span><span class="s">&#39;ComplexNumber&#39;</span><span class="p">)};</span>
    <span class="k">return</span> <span class="nv">$src</span> <span class="p">?</span>
        <span class="n">ComplexNumber</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span>
            <span class="nv">$dest</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">*</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span> <span class="o">-</span> <span class="nv">$dest</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span><span class="o">*</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">},</span>
            <span class="nv">$dest</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">*</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span> <span class="o">+</span> <span class="nv">$dest</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span><span class="o">*</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span>
        <span class="p">)</span> <span class="p">:</span> <span class="p">();</span>
<span class="p">}</span>
<span class="k">sub </span><span class="nf">div</span><span class="p">{</span>
    <span class="k">my</span> <span class="p">(</span><span class="nv">$dest</span><span class="p">,</span> <span class="nv">$src</span><span class="p">,</span> <span class="nv">$rev</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
    <span class="nv">$src</span> <span class="o">=</span> <span class="n">ComplexNumber</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$src</span><span class="p">)</span> <span class="k">unless</span> <span class="nb">eval</span><span class="p">{</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="n">isa</span><span class="p">(</span><span class="s">&#39;ComplexNumber&#39;</span><span class="p">)};</span>
    <span class="k">return</span> <span class="k">unless</span> <span class="nv">$src</span><span class="p">;</span>
    <span class="p">(</span><span class="nv">$dest</span><span class="p">,</span> <span class="nv">$src</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$src</span><span class="p">,</span> <span class="nv">$dest</span><span class="p">)</span> <span class="k">if</span> <span class="nv">$rev</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">ComplexNumber</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span>
        <span class="p">(</span><span class="nv">$dest</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">*</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">+</span><span class="nv">$dest</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span><span class="o">*</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">})</span><span class="o">/</span><span class="p">(</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span><span class="o">**</span><span class="mi">2</span><span class="p">),</span>
        <span class="p">(</span><span class="nv">$dest</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span><span class="o">*</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">-</span><span class="nv">$dest</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">*</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">})</span><span class="o">/</span><span class="p">(</span><span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="nv">$src</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span><span class="o">**</span><span class="mi">2</span><span class="p">),</span>
    <span class="p">);</span>
<span class="p">}</span>
<span class="k">sub </span><span class="nf">abs</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">return</span> <span class="nb">sqrt</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">}</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;b&#39;</span><span class="p">}</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
<span class="p">}</span>
<span class="k">sub </span><span class="nf">val</span><span class="p">{</span>
    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
    <span class="k">return</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">};</span>
<span class="p">}</span>

<span class="nb">package</span> <span class="n">main</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">$comp1</span> <span class="o">=</span> <span class="n">ComplexNumber</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">6</span><span class="o">.</span><span class="mi">3</span><span class="p">);</span>
<span class="k">my</span> <span class="nv">$comp2</span> <span class="o">=</span> <span class="n">ComplexNumber</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="s">&#39;4 - 8.5i&#39;</span><span class="p">);</span>

<span class="k">print</span> <span class="nv">$comp1</span> <span class="o">+</span> <span class="nv">$comp2</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="nv">$comp1</span> <span class="o">-</span> <span class="nv">$comp2</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="nv">$comp1</span> <span class="o">*</span> <span class="nv">$comp2</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="nv">$comp1</span> <span class="o">/</span> <span class="nv">$comp2</span> <span class="o">.</span><span class="s">&quot;\n\n&quot;</span><span class="p">;</span>

<span class="k">print</span> <span class="nv">$comp1</span> <span class="o">+</span> <span class="mi">8</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="nv">$comp1</span> <span class="o">-</span> <span class="mi">8</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="mi">8</span> <span class="o">-</span> <span class="nv">$comp1</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="nv">$comp1</span> <span class="o">*</span> <span class="mi">8</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="nv">$comp1</span> <span class="o">/</span> <span class="mi">8</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
<span class="k">print</span> <span class="mi">8</span> <span class="o">/</span> <span class="nv">$comp1</span> <span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>

<span class="k">print</span> <span class="nv">$comp1</span><span class="o">-&gt;</span><span class="nb">abs</span><span class="p">;</span>
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/9114/addtag/" class="addtag" id="addtag_9114">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/perl/">
		Perl
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/9114/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/9114/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9114"
  >-</span><span
  class="button yellow"
  id="rating_z_9114"
  >0</span><span 
  class="button green"
  id="rating_p_9114"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/9114/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9160">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/1064/" target="_top">yamamoto</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#medal" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/star_gold.png" border=0/></a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/9160/">#9160</a>(<script language="JavaScript">print_time(new Date("2009/06/14 02:36 GMT"));</script><noscript>2009/06/14 02:36 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/scala/">
	  Scala
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>#8851をパラメタ付に改造してみました。
Complex[Int],Complex[Double]</p>
<p>もう、ぐだぐだ。</p>
<p>制限事項
整数と実数の混合ができない orz</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141</pre></td><td class="code"><div class="highlight"><pre>// 複素数(お題:http://ja.doukaku.org/247/)
// http://ja.doukaku.org/comment/----/
// snaさん作を改変( : http://ja.doukaku.org/comment/8851/)
// 参考 : http://en.literateprograms.org/Complex_numbers_(Scala)

trait Arithmetic[T&lt;:AnyVal]{
  def unary_+ : T
  def unary_- : T
  def + (that:T):T
  def - (that:T):T
  def * (that:T):T
  def / (that:T):T
  def abs : T
  //
  def lt0 : Boolean  // &gt;   0
  def gt0 : Boolean  // &lt;   0
  def eq0 : Boolean  // ==  0
  //
  def eqp1 : Boolean // ==  1
  def eqm1 : Boolean // == -1
  //
}

case class Complex[ T&lt;%Arithmetic[T] ](real:T, imag:T) {
  // +(a + bi) = (a + bi)
  def unary_+ = this
  
  // -(a + bi) = (-a - bi)
  def unary_- = Complex[T](-real, -imag)
  
  // (a + bi) + (c + di) = (a + c) + (b + d)i
  def + (that: Complex[T]) = Complex(this.real + that.real, this.imag + that.imag)
  
  // (a + bi) - (c + di) = (a - c) + (b - d)i
  def - (that: Complex[T]) = Complex(this.real - that.real, this.imag - that.imag)
  
  // (a + bi) * (c + di) = (ac - bd) + (bc + ad)i
  def * (that: Complex[T]) = {
    val Complex(a, b) = this
    val Complex(c, d) = that
    Complex(a*c - b*d, b*c + a*d)
  }
  
  // (a + bi) / (c + di) = (ac + bd) / (c^2 + d^2) + (bc - ad) / (c^2 + d^2)
  def / (that: Complex[T]) = {
    val Complex(a, b) = this
    val Complex(c, d) = that
    val deno = c*c + d*d
    Complex((a*c + b*d) / deno, (b*c - a*d) / deno)
  }
  
  // Conjugate
  def conjugate() : Complex[T] = Complex(real,-imag)
  
  override def toString = this match {
    case Complex(re, im) if im.eq0            =&gt; re.toString
    case Complex(re, im) if re.eq0 &amp;&amp; im.eqp1 =&gt; &quot;i&quot;
    case Complex(re, im) if re.eq0 &amp;&amp; im.eqm1 =&gt; &quot;-i&quot;
    case Complex(re, im) if re.eq0            =&gt; im.toString + &quot;i&quot;
    case Complex(re, im) if           im.eqp1 =&gt; re.toString + &quot; + i&quot;
    case Complex(re, im) if           im.eqm1 =&gt; re.toString + &quot; - i&quot;
    case Complex(re, im) if           im.gt0  =&gt; re.toString + &quot; + &quot; + im.toString + &quot;i&quot;
    case Complex(re, im) if           im.lt0  =&gt; re.toString + &quot; - &quot; + im.abs.toString + &quot;i&quot;
  }

}

object test{
  implicit def int2Arithmeic(n:Int) : Arithmetic[Int] = 
                    new Arithmetic[Int]{
                         def unary_+ : Int  = n.unary_+
                         def unary_- : Int  = n.unary_-
                         def + (that:Int):Int = n+that
                         def - (that:Int):Int = n-that
                         def * (that:Int):Int = n*that
                         def / (that:Int):Int = n/that
                         def abs = Math.abs(n)
                         //
                         def lt0 = n&lt;0
                         def gt0 = n&gt;0
                         def eq0 = n==0
                         //
                         def eqp1 = n==1 
                         def eqm1 = n== -1  }
  
  implicit def double2Arithmeic(n:Double) : Arithmetic[Double] = 
                    new Arithmetic[Double]{
                         def unary_+ : Double  = n.unary_+
                         def unary_- : Double  = n.unary_-
                         def + (that:Double):Double = n+that
                         def - (that:Double):Double = n-that
                         def * (that:Double):Double = n*that
                         def / (that:Double):Double = n/that
                         def abs = Math.abs(n)
                         //
                         def lt0 = n&lt;0
                         def gt0 = n&gt;0
                         def eq0 = n==0
                         //
                         def eqp1 = n==1 
                         def eqm1 = n== -1  }
  
  implicit def int2Complex   (n:Int   ):Complex[Int   ] = Complex(n,0)
  implicit def double2Complex(n:Double):Complex[Double] = Complex(n,0)
  implicit def icomp2dcomp   (z:Complex[Int]):Complex[Double] = Complex(z.real,z.imag)
  
  implicit def dcomp2richer  (z:Complex[Double]) = new Proxy{
       val self=z
       def abs = self match {
         case Complex(re, im) =&gt; Math.sqrt(re*re + im*im)
       }
    }
  
  implicit def icomp2richer  (z:Complex[int]) = new Proxy{
       val self=z
       def abs = self match {
         case Complex(re, im) =&gt; Math.sqrt(re*re + im*im)
       }
    }
  
  
  def main( args:Array[String] ) : Unit = {
    {
      val i = Complex(0,1)
      println( (3 + i  ) + (4 - i  ) )
      println( (5 - 9*i) - (2 + 6*i) )
      println( (5 + 3*i) * (5 + 8*i) )
      println( (9 - 7*i) / (9 - 3*i) )
      println( (2 + 3*i).abs         )
    }
    
    {
      val i = Complex(0.,1.)
      println( (3. + i  ) + (4. - i  ) )
      println( (5. - 9.*i) - (2. + 6.*i) )
      println( (5. + 3.*i) * (5. + 8.*i) )
      println( (9. - 7.*i) / (9. - 3.*i) )
      println( (2. + 3.*i).abs         )
    }
  }
}
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/9160/addtag/" class="addtag" id="addtag_9160">タグ</a>:
	
    
    <a href="/web/20100628135508/http://ja.doukaku.org/tag/%E7%A7%BB%E6%A4%8D/">移植</a>
    
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/scala/">
		Scala
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/9160/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/9160/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9160"
  >-</span><span
  class="button yellow"
  id="rating_z_9160"
  >0</span><span 
  class="button green"
  id="rating_p_9160"
  >+</span></span></span>
  

<p>

  
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/8851/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoparent.png" alt="parent"></a>
    <a href="/web/20100628135508/http://ja.doukaku.org/comment/9160/root/"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/gotoroot.png" alt="thread root"></a>
  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/9160/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment9455">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/959/" target="_top">uehaj</a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/9455/">#9455</a>(<script language="JavaScript">print_time(new Date("2009/08/07 21:34 GMT"));</script><noscript>2009/08/07 21:34 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/groovy/">
	  Groovy
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>Groovyで。結果は以下の通り。
.iあたりが気に入っている。</p>
<p>7.0+0.0i
3.0-15.0i
1.0+55.0i
1.1333333333333333-0.4i
3.605551275463989</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</pre></td><td class="code"><div class="highlight"><pre>class Complex {
  double re
  double im

  Complex(re, im) { this.re = re; this.im = im }
  Complex plus(c) { new Complex(re+c.re, im+c.im) }
  Complex minus(c) { new Complex(re-c.re, im-c.im)  }
  Complex multiply(c) { new Complex(re*c.re - im*c.im, re*c.im + im*c.re) }
  Complex div(c) {
    def denom = (c.re ** 2) + (c.im ** 2)
    new Complex((re*c.re+im*c.im)/denom, (im*c.re-re*c.im)/denom)
  }
  double abs(){ Math.sqrt(re ** 2 + im ** 2) }
  static final i = new Complex(0, 1)
  String toString() { re+(im&gt;=0?&#39;+&#39;:&#39;&#39;)+im+&#39;i&#39; }
}

[&#39;plus&#39;,&#39;minus&#39;,&#39;multiply&#39;,&#39;div&#39;].each {
  Number.metaClass.&quot;$it&quot; = { Complex c -&gt; new Complex(delegate, 0).&quot;$it&quot;(c) }
}
Number.metaClass.getI = {new Complex(0, delegate)}


def i = Complex.i

println ((3 + i) + (4 - i))
println ((5 - 9.i) - (2 + 6.i))
println ((5 + 3.i) * (5 + 8.i))
println ((9 - 7.i) / (9 - 3.i))
println ((2 - 3.i).abs())
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/9455/addtag/" class="addtag" id="addtag_9455">タグ</a>:
	
    
    <a href="/web/20100628135508/http://ja.doukaku.org/tag/complex/">complex</a>
    
    <a href="/web/20100628135508/http://ja.doukaku.org/tag/dsl/">dsl</a>
    
    <a href="/web/20100628135508/http://ja.doukaku.org/tag/groovy/">groovy</a>
    
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/groovy/">
		Groovy
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/9455/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/9455/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_9455"
  >-</span><span
  class="button yellow"
  id="rating_z_9455"
  >0</span><span 
  class="button green"
  id="rating_p_9455"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/9455/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment10482">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/1024/" target="_top">rennos</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/10482/">#10482</a>(<script language="JavaScript">print_time(new Date("2010/05/01 06:00 GMT"));</script><noscript>2010/05/01 06:00 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/hsp/">
	  HSP
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <p>モジュールによる疑似クラス機能を使ってみました。
一時オブジェクトの構築ができないのと、演算子オーバーロードができないのはちょっと辛いです……。</p>

	</div>
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105</pre></td><td class="code"><div class="highlight"><pre>#module MCComplex mr, mi

#defcfunc pow_own@MCComplex double src
    return src * src
    
//*******************************************
//        構築
//*******************************************
#define global complex_new(%1, %2 = 0, %3 = 0) newmod %1, MCComplex@, %2, %3
#modinit double re_, double im_
    complex_set thismod, re_, im_
    return
    
#modfunc complex_set double re_, double im_
    mr = re_
    mi = im_
    return
    
//*******************************************
//        取得系
//*******************************************
#modcfunc complex_re
    return mr
    
#modcfunc complex_im
    return mi
    
#modcfunc complex_abs
    return sqrt( pow_own(mr) + pow_own(mi) )
    
#modcfunc complex_arg
    return atan( mi, mr )
    
//*******************************************
//        演算系
//*******************************************
#modfunc complex_add var rhs
    mr += complex_re(rhs)
    mi += complex_im(rhs)
    return
    
#modfunc complex_sub var rhs
    mr -= complex_re(rhs)
    mi -= complex_im(rhs)
    return
    
#modfunc complex_mul var rhs,  local rhsRe, local rhsIm, local re_, local im_
    rhsRe = complex_re(rhs)
    rhsIm = complex_im(rhs)
    re_ = (mr * rhsRe) - (mi * rhsIm)
    im_ = (mr * rhsIm) + (mi * rhsRe)
    complex_set thismod, re_, im_
    return
    
#modfunc complex_div var rhs,  local rhsRe, local rhsIm, local re_, local im_, local denominator
    rhsRe = complex_re(rhs)
    rhsIm = complex_im(rhs)
    denominator = pow_own(rhsRe) + pow_own(rhsIm)
    re_ = double( mr * rhsRe + mi * rhsIm) / denominator
    im_ = double(-mr * rhsIm + mi * rhsRe) / denominator
    complex_set thismod, re_, im_
    return
    
#modcfunc complex_toDbgStr
    return strf( &quot;(%.3f + %.3fi)&quot;, mr, mi )
    
#global

#if 1

    complex_new lhs
    complex_new rhs
    
//    1. 加算  ( 3 + i ) + ( 4 - i )
    complex_set lhs, 3,  1
    complex_set rhs, 4, -1
    complex_add lhs, rhs    // lhs += rhs
    mes &quot;(3 +  i) + (4 -  i) = &quot; + complex_toDbgStr( lhs )
    
//    2. 減算  ( 5 - 9i ) - ( 2 + 6i )
    complex_set lhs, 5, -9
    complex_set rhs, 2,  6
    complex_sub lhs, rhs
    mes &quot;(5 - 9i) - (2 + 6i) = &quot; + complex_toDbgStr( lhs )
    
//    3. 乗算  ( 5 + 3i ) * ( 5 + 8i )
    complex_set lhs, 5, 3
    complex_set rhs, 5, 8
    complex_mul lhs, rhs
    mes &quot;(5 + 3i) * (5 + 8i) = &quot; + complex_toDbgStr( lhs )
    
//    4. 除算 ( 9 - 7i )  /  ( 9 - 3i )
    complex_set lhs, 9, -7
    complex_set rhs, 9, -3
    complex_div lhs, rhs
    mes &quot;(9 - 7i) / (9 - 3i) = &quot; + complex_toDbgStr( lhs )
    
//    5. 絶対値  | 2 + 3i |
    complex_set lhs, 2, 3
    r = complex_abs( lhs )
    mes &quot;|2 + 3i| = &quot; + r
    
    stop
    
#endif
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/10482/addtag/" class="addtag" id="addtag_10482">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/hsp/">
		HSP
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/10482/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/10482/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_10482"
  >-</span><span
  class="button yellow"
  id="rating_z_10482"
  >0</span><span 
  class="button green"
  id="rating_p_10482"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/10482/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>

  
  




<div class="comment" id="comment10506">
  <p class="banner"><a href="/web/20100628135508/http://ja.doukaku.org/user/1163/" target="_top">tfviv</a><a href="/web/20100628135508/http://ja.doukaku.org/qa/#anomark" target="_top"><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/anomark.png" border=0/></a>

	
	&nbsp;
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/10506/">#10506</a>(<script language="JavaScript">print_time(new Date("2010/05/15 11:36 GMT"));</script><noscript>2010/05/15 11:36 GMT</noscript>)
	
	
	
	[<a href="/web/20100628135508/http://ja.doukaku.org/lang/erlang/">
	  Erlang
	</a>]
	
	
	
	&nbsp;

<span class="rating">評価<span style="background-color: #ffffff;">0/0=0.00</span></span>
  </p>
  <div class="comment_content">
	<div class="comment_body">
	  <pre class='compact'>エラー処理とか入ってません。

erlc complex.erl &amp;&amp; erl -noshell -s complex main -s init stop 

でテスト。

数値誤差が激しそうです。</pre>
	</div>
	
	<p class="link">
	  参考: <a href="/web/20100628135508/http://www.trapexit.org/Complex_Numbers"></a>
	</p>  
	
	
	
    <div class="compact">
      <table><tr><td class="linenos"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32</pre></td><td class="code"><div class="highlight"><pre>-module(complex). 
-export([main/0]).
-record(complex_number, {real=0, imaginary=0}).
main() -&gt;
    io:format(&quot;(3+i) + (4-i) = ~p~n&quot;, [dump(add(complex(3,1), complex(4,-1)))]),
    io:format(&quot;(5-9i) - (2+6i) = ~p~n&quot;, [dump(sub(complex(5,-9), complex(2,6)))]),
    io:format(&quot;(5+3i) * (5+8i) = ~p~n&quot;, [dump(multi(complex(5,3), complex(5,8)))]),
    io:format(&quot;(9-7i) / (9-3i) = ~p~n&quot;, [dump(divide(complex(9,-7), complex(9,-3)))]),
    io:format(&quot;|2 + 3i| = ~p~n&quot;, [cabs(complex(2,3))]).

complex(R, I) -&gt; #complex_number{real=R, imaginary=I}.

add(X, Y) -&gt; complex(real(X) + real(Y), imaginary(X) + imaginary(Y)).
sub(X, Y) -&gt; add(X, Y#complex_number{real=-real(Y), imaginary=-imaginary(Y)}).
complex_conjugate(X) -&gt; complex(real(X), -imaginary(X)).
multi(X, Y) -&gt;
    complex(real(X) * real(Y) - imaginary(X)*imaginary(Y),
        imaginary(X) * real(Y) + real(X) * imaginary(Y)).

divide(X, Y) -&gt;
    Div = real(double(Y)),
    Z = multi(X, complex_conjugate(Y)),
    complex(real(Z)/Div, imaginary(Z)/Div).

double(X) -&gt; multi(X, complex_conjugate(X)).

cabs(X) -&gt; math:sqrt(real(double(X))).

real(X) -&gt; X#complex_number.real.
imaginary(X) -&gt; X#complex_number.imaginary.

dump(X) -&gt; {real(X), imaginary(X)}.
</pre></div>
</td></tr></table>
    </div>
	

  
  <div align = "right" class="banner">
	
	<a href="/web/20100628135508/http://ja.doukaku.org/comment/10506/addtag/" class="addtag" id="addtag_10506">タグ</a>:
	
	タグなし
	&nbsp;

	
      [<a href="/web/20100628135508/http://ja.doukaku.org/lang/erlang/">
		Erlang
      </a>]
	  
      [<a href="/web/20100628135508/http://ja.doukaku.org/comment/10506/download/">
		ダウンロード
      </a>]
	  [<a href="/web/20100628135508/http://ja.doukaku.org/comment/10506/download_html/">
		HTML
      </a>]<p>
	

  
  <span class="rating">
  評価<span style="background-color: #ffffff;"
  >0/0=0.00</span
  ><span class="buttons"><span 
  class="button red"
  id="rating_n_10506"
  >-</span><span
  class="button yellow"
  id="rating_z_10506"
  >0</span><span 
  class="button green"
  id="rating_p_10506"
  >+</span></span></span>
  

<p>

  

  

  [<a href="/web/20100628135508/http://ja.doukaku.org/247/reply_to/10506/">
  返信
  </a>]
  </div>
</div>
</div>

  
  <br/>







</div>

<div id="side_menu" class="compact">

<iframe src="/web/20100628135508if_/http://ja.doukaku.org/login_info/" frameborder=0 width=100% id="login_info">
iframe required
</iframe>

<h4 class="semi_compact">一覧</h4>

<ul>
<!--<li><a href="/web/20100628135508/http://ja.doukaku.org/user/">ユーザ</a>-->
<li><a href="/web/20100628135508/http://ja.doukaku.org/lang/">言語</a>
<li><a href="/web/20100628135508/http://ja.doukaku.org/challenge/">お題</a>
<li><a href="/web/20100628135508/http://ja.doukaku.org/topic/">トピック</a>
<li><a href="/web/20100628135508/http://ja.doukaku.org/comment/">投稿</a>
<li><a href="/web/20100628135508/http://ja.doukaku.org/good_comments/">評価の高い投稿</a>
<li><a href="/web/20100628135508/http://ja.doukaku.org/tag/">タグ</a>
</ul>

<h4 class="compact">フィード</h4>
<ul>
<li><a href="/web/20100628135508/http://ja.doukaku.org/feeds/challenges/">最新のお題</a><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100628135508/http://ja.doukaku.org/feeds/topics/">最新のトピック</a><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/feed_icon.png">
<li><a href="/web/20100628135508/http://ja.doukaku.org/feeds/comments/">新着投稿</a><img src="/web/20100628135508im_/http://ja.doukaku.org/static/image/feed_icon.png">
</ul>







<h4 class="compact">その他</h4>
<ul>
<li><a href="/web/20100628135508/http://ja.doukaku.org/qa/">Q&A</a>
<li><a href="/web/20100628135508/http://ja.doukaku.org/feedback/">フィードバック</a>
<!--<li><a href="/web/20100628135508/http://ja.doukaku.org/terms">用語集</a>-->
</ul>


<h4 class="compact">リンク</h4>
<ul>
<li><a href="/web/20100628135508/http://www.lingr.com/room/doukaku_ja">チャットルーム(Lingr)</a>
<li><a href="/web/20100628135508/http://labs.cybozu.co.jp/">サイボウズ・ラボ</a>
<li><a href="/web/20100628135508/http://www.djangoproject.com/">Django</a>
</ul>

<h4 id="pathtraq" class="compact"><a href="/web/20100628135508/http://pathtraq.com/analytics?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&m=popular">Pathtraq</a></h4>
<div class="indent">
<span id="pathtraq_sentinel">loading...</span>
</div>


</div>
</div>


<div id="page_foot" class="bordered">

<a rel="license" href="/web/20100628135508/http://creativecommons.org/licenses/by/2.1/jp/">
<img alt="Creative Commons License" style="border-width:0" src="/web/20100628135508im_/http://i.creativecommons.org/l/by/2.1/jp/88x31.png" /></a>
このサイトの内容は、
<a rel="license" href="/web/20100628135508/http://creativecommons.org/licenses/by/2.1/jp/">クリエイティブ・コモンズ・ライセンス</a>の下でライセンスされています。
<a href="/web/20100628135508/http://ja.doukaku.org/qa/#licence">[詳細]</a>

</div>

</body>




<script type="text/javascript">
$(document).ready(function(){$("#doukaku_org").after("<script src='/web/20100628135508/http://api.pathtraq.com/pages?url=http%3A%2F%2Fja.doukaku.org%2Fcomment%2F*%2F%20desc%3A%E3%81%A9%E3%81%86%E6%9B%B8%E3%81%8Forg&api=json&callback=addPathtraq'><" + "/script>")});
</script>

<script src="/web/20100628135508js_/http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-2136157-1";
urchinTracker();
</script>




</html>





<!--
     FILE ARCHIVED ON 13:55:08 Jun 28, 2010 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:44:23 Nov 16, 2013.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
