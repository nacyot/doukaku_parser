---
:id: '161'
:title: 情報オリンピック2007年度国内本選問題4
:comments:
- :id: '5780'
  :parent_id: '161'
  :url: http://ja.doukaku.org/comment/5780
  :user_name: yukoba
  :user_url: /web/20081122005916/http://ja.doukaku.org/user/689/
  :language: 
  :time: 2008/02/19 03:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  <p>中高生向けの情報オリンピック国内本選2007年度問題4です。</p>\n<dl class=\"docutils\">\n<dt>問題文（下記PDFの8ページ目）</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122005916/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/2008-ho.pdf\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/2008-ho.pdf</a></dd>\n<dt>コンテスト概要</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122005916/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/index.html\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/index.html</a></dd>\n<dt>サンプルデータ（出題時に公開）</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122005916/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/joi2008.zip\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/joi2008.zip</a></dd>\n<dt>採点データ（出題時に非公開）</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122005916/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/data.zip\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/data.zip</a></dd>\n</dl>\n<p>「問題ごとに、プログラムの実行時間（や使用メモリ量）に制限が設定されています。」にご注意ください。本問では、制限時間1秒、メモリ制限64MBとなっています。</p>\n<p>出題時はサンプルデータのみが公開され、採点は、採点データによる、自動採点にて行われます。</p>\n<p>実際のコンテストでは、予選通過者48名が対象となっていて、100点満点中38点以上とった、16名が本選通過です。</p>\n\r\n\t"
  :code: ''
  :tags:
  - 情報オリンピック
  :references:
    :url: 
    :title: 
- :id: '5810'
  :parent_id: '161'
  :url: http://ja.doukaku.org/comment/5810
  :user_name: hyon
  :user_url: /web/20081122005916/http://ja.doukaku.org/user/724/
  :language: C
  :time: 2008/02/20 13:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ブログのほうでリクエストがありましたので書き込ませていただきます。\r\n公式ジャッジデータで時間内に正答することは一応確認しています。\r\n少しでも参考になれば幸いです。\r\n</pre>\n\t"
  :code: "#include&lt;iostream&gt;\n#include&lt;vector&gt;\n\nusing namespace std;
    \n\n#define DEBUG(c) cerr&lt;&lt;\"&gt; \"&lt;&lt;#c&lt;&lt;\" = \"&lt;&lt;c&lt;&lt;endl;
    \n\n#define R 150\n#define S 10\n\nvector&lt;vector&lt;pair&lt;int,int&gt; &gt;
    &gt; st;\n\nint w(int r,int s,int rr,int i)\n{\n    return (st[r][s].second+st[rr][i].second)*(abs(st[r][s].first-st[rr][i].first));\n}\n\nint
    min(int a,int b)\n{\n    if(std::min(a,b)==-1)\n        return std::max(a,b);\n
    \   \n    return std::min(a,b);\n}\n\nint main()\n{\n    \n    int n,m; cin&gt;&gt;n&gt;&gt;m;\n
    \   \n    st.resize(n);\n    for(int i=0;i&lt;n;i++)\n    {\n        int k; cin&gt;&gt;k;\n
    \       for(int j=0;j&lt;k;j++)\n        {\n            int x,d; cin&gt;&gt;x&gt;&gt;d;\n
    \           st[i].push_back(make_pair(x,d));\n        }\n    }\n    \n    int
    dp[R][S],dp2[R][S];\n    memset(dp,-1,sizeof(int)*R*S);\n    \n    for(int step=0;step&lt;=m;step++)\n
    \   {\n        memcpy(dp2,dp,sizeof(int)*R*S);\n        for(int r=0;r&lt;n;r++)\n
    \       {\n            for(int s=0;s&lt;st[r].size();s++)\n            {\n                if(r==0)\n
    \                   dp[r][s]=0;\n                else\n                {\n                    for(int
    i=0;i&lt;st[r-1].size();i++)\n                        if(dp[r-1][i]!=-1)\n                            dp[r][s]=min(dp[r][s],dp[r-1][i]+w(r,s,r-1,i));\n
    \               }\n                \n                if(step==0 || r==0)\n                    continue;\n
    \               \n                if(r==1)\n                    dp[r][s]=0;\n
    \               else\n                {\n                    for(int i=0;i&lt;st[r-2].size();i++)\n
    \                       if(dp2[r-2][i]!=-1)\n                            dp[r][s]=min(dp[r][s],dp2[r-2][i]+w(r,s,r-2,i));\n
    \               }\n            }\n        }\n    }\n    \n    //もうゴール、してもいいよね…\n
    \   int res=-1;\n    for(int i=0;i&lt;S;i++)\n        res=min(res,min(dp[n-1][i],dp2[n-2][i]));\n
    \   \n    cout&lt;&lt;res&lt;&lt;endl;\n    \n    return 0;\n}\n"
  :tags: []
  :references:
    :url: /web/20081122005916/http://d.hatena.ne.jp/hyon/20080217/1203269032
    :title: JOI2007-2008 Honsen
- :id: '6316'
  :parent_id: '161'
  :url: http://ja.doukaku.org/comment/6316
  :user_name: ocean
  :user_url: /web/20081122005916/http://ja.doukaku.org/user/177/
  :language: C
  :time: 2008/05/22 02:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    #include &lt;iostream&gt;
    #include &lt;sstream&gt;
    #include &lt;vector&gt;
    #include &lt;algorithm&gt;
    #include &lt;limits&gt;
    #include &lt;cassert&gt;

    #define REP(i, b, e) for (size_t i = b; i &lt; e; ++i)
    #define REPE(i, b, e) for (size_t i = b; i &lt;= e; ++i)

    void fill(std::vector&lt;long&gt;&amp; v, long value)
    {
        std::fill(v.begin(), v.end(), value);
    }

    int main()
    {
        const size_t max_x = 1000;

        std::string s;

        std::getline(std::cin, s);

        size_t n, m;

        std::istringstream(s) &gt;&gt; n &gt;&gt; m;

        assert(2 &lt;= n &amp;&amp; n &lt;= 150);

        assert(m &lt;= (n + 1) / 2);

        std::vector&lt;std::vector&lt;long&gt; &gt; slip(n + 3, std::vector&lt;long&gt;(max_x, -1)); // -1 means there is no stone

        fill(slip[0], 0); // start shore (0 is dummy value)

        fill(slip[n + 1], 0); // goal shore (0 is dummy value)

        fill(slip[n + 2], 0); // goal shore (0 is dummy value)

        REPE(y, 1, n)
        {
            std::getline(std::cin, s);

            std::istringstream sin(s);

            size_t k;

            sin &gt;&gt; k;

            assert(k &lt;= 10);

            for (; k; --k)
            {
                size_t x;

                long d;

                sin &gt;&gt; x &gt;&gt; d;

                assert(1 &lt;= x &amp;&amp; x &lt;= max_x);

                assert(1 &lt;= d &amp;&amp; d &lt;= 1000);

                --x; // now starts with 0 not 1

                slip[y][x] = d;
            }
        }

        std::vector&lt;std::vector&lt;std::vector&lt;long&gt; &gt; &gt; dp(n + 3,
            std::vector&lt;std::vector&lt;long&gt; &gt;(max_x,
                std::vector&lt;long&gt;(m + 1, std::numeric_limits&lt;long&gt;::max())));

        dp.front().swap(
            std::vector&lt;std::vector&lt;long&gt; &gt;(max_x,
                std::vector&lt;long&gt;(m + 1, 0)));

        REPE(y1, 0, n) REP(x1, 0, max_x) if (slip[y1][x1] &gt;= 0) // source
        {
            REPE(y2, y1 + 1, y1 + 2) REP(x2, 0, max_x) if (slip[y2][x2] &gt;= 0) // destinition
            {
                const size_t now_jumped = y2 - y1 - 1;

                assert(now_jumped == 0 || now_jumped == 1);

                for (size_t old_jumped = 0; old_jumped + now_jumped &lt;= m; ++old_jumped)
                {
                    if (dp[y1][x1][old_jumped] != std::numeric_limits&lt;long&gt;::max())
                    {
                        long&amp; src = dp[y1][x1][old_jumped];

                        long&amp; dst = dp[y2][x2][old_jumped + now_jumped];

                        dst = std::min(dst, src + (slip[y1][x1] + slip[y2][x2]) * long(x2 &gt; x1 ? x2 - x1 : x1 - x2));
                    }
                }
            }
        }

        long result = std::numeric_limits&lt;long&gt;::max();

        REPE(y, n + 1, n + 2) REP(x, 0, max_x) REPE(jumped, 0, m) // goal shore
        {
            result = std::min(result, dp[y][x][jumped]);
        }

        std::cout &lt;&lt; result &lt;&lt; std::endl;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6317'
  :parent_id: '161'
  :url: http://ja.doukaku.org/comment/6317
  :user_name: ocean
  :user_url: /web/20081122005916/http://ja.doukaku.org/user/177/
  :language: diff
  :time: 2008/05/22 02:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>g++でコンパイルが通らなかったので、修正。（理由は不明）</p>\n\n\t"
  :code: "--- 4.cpp.old    Thu May 22 16:17:00 2008\n+++ 4.cpp.new    Thu May 22 16:16:47
    2008\n@@ -72,9 +72,7 @@\n         std::vector&lt;std::vector&lt;long&gt; &gt;(max_x,\n
    \            std::vector&lt;long&gt;(m + 1, std::numeric_limits&lt;long&gt;::max())));\n
    \n-    dp.front().swap(\n-        std::vector&lt;std::vector&lt;long&gt; &gt;(max_x,\n-
    \           std::vector&lt;long&gt;(m + 1, 0)));\n+    dp[0] = std::vector&lt;std::vector&lt;long&gt;
    &gt;(max_x, std::vector&lt;long&gt;(m + 1, 0));\n \n     REPE(y1, 0, n) REP(x1,
    0, max_x) if (slip[y1][x1] &gt;= 0) // source\n     {\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6319'
  :parent_id: '161'
  :url: http://ja.doukaku.org/comment/6319
  :user_name: 匿名
  :user_url: /web/20081122005916/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/05/22 22:11 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">cppリファレンスによるとswap は\r\nvoid swap( vector &amp;from
    );となっているので\r\n一時変数の参照型がまずいのではないでしょうか？\r\n\r\ngfilt にかけても↓のような感じに出てくるので\r\nたぶんそこを直せば何とかなるのでは？\r\n\r\ngfilt
    -Wall 6316.cpp\r\nBD Software STL Message Decryptor v3.10 for gcc 2/3/4\r\n6316.cpp:
    In function `int main()':\r\n6316.cpp:76: error: No match for\r\n   `vector&lt;vector&lt;long
    int&gt; &gt;::swap(vector&lt;vector&lt;long int&gt;&gt;)'\r\nstl_vector.h:688:
    candidates are: void vector&lt;\r\n        vector&lt;long int&gt; &gt;::swap(vector&lt;vector&lt;long
    int&gt; &gt; &amp;)\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: /web/20081122005916/http://www.cppll.jp/cppreference/
    :title: C/C++ リファレンス
- :id: '6322'
  :parent_id: '161'
  :url: http://ja.doukaku.org/comment/6322
  :user_name: ocean
  :user_url: /web/20081122005916/http://ja.doukaku.org/user/177/
  :language: diff
  :time: 2008/05/23 06:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>情報ありがとうございます。こっちならうまくいきました。</p>\n\n\t"
  :code: "--- 4.cpp.new    Fri May 23 15:31:57 2008\n+++ 4.cpp.new2    Fri May 23
    15:32:13 2008\n@@ -72,7 +72,8 @@\n         std::vector&lt;std::vector&lt;long&gt;
    &gt;(max_x,\n             std::vector&lt;long&gt;(m + 1, std::numeric_limits&lt;long&gt;::max())));\n
    \n-    dp[0] = std::vector&lt;std::vector&lt;long&gt; &gt;(max_x, std::vector&lt;long&gt;(m
    + 1, 0));\n+    std::vector&lt;std::vector&lt;long&gt; &gt;(max_x,\n+        std::vector&lt;long&gt;(m
    + 1, 0)).swap(dp.front());\n \n     REPE(y1, 0, n) REP(x1, 0, max_x) if (slip[y1][x1]
    &gt;= 0) // source\n     {\n"
  :tags: []
  :references:
    :url: /web/20081122005916/http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1690.html#Improved%20swap%20Interface
    :title: 今のところswapに一時変数は渡せない
- :id: '6323'
  :parent_id: '161'
  :url: http://ja.doukaku.org/comment/6323
  :user_name: ocean
  :user_url: /web/20081122005916/http://ja.doukaku.org/user/177/
  :language: diff
  :time: 2008/05/23 06:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>いっそ、こっちの方が読みやすいかも</p>\n\n\t"
  :code: "--- 4.cpp.new    Fri May 23 15:31:57 2008\n+++ 4.cpp    Fri May 23 15:41:55
    2008\n@@ -9,9 +9,9 @@\n #define REP(i, b, e) for (size_t i = b; i &lt; e; ++i)\n
    #define REPE(i, b, e) for (size_t i = b; i &lt;= e; ++i)\n \n-void fill(std::vector&lt;long&gt;&amp;
    v, long value)\n+void zero_fill(std::vector&lt;long&gt;&amp; v)\n {\n-    std::fill(v.begin(),
    v.end(), value);\n+    std::fill(v.begin(), v.end(), 0);\n }\n \n int main()\n@@
    -32,11 +32,11 @@\n \n     std::vector&lt;std::vector&lt;long&gt; &gt; slip(n +
    3, std::vector&lt;long&gt;(max_x, -1)); // -1 means there is no stone\n \n-    fill(slip[0],
    0); // start shore (0 is dummy value)\n+    zero_fill(slip[0]); // start shore
    (0 is dummy value)\n \n-    fill(slip[n + 1], 0); // goal shore (0 is dummy value)\n+
    \   zero_fill(slip[n + 1]); // goal shore (0 is dummy value)\n \n-    fill(slip[n
    + 2], 0); // goal shore (0 is dummy value)\n+    zero_fill(slip[n + 2]); // goal
    shore (0 is dummy value)\n \n     REPE(y, 1, n)\n     {\n@@ -72,7 +72,7 @@\n         std::vector&lt;std::vector&lt;long&gt;
    &gt;(max_x,\n             std::vector&lt;long&gt;(m + 1, std::numeric_limits&lt;long&gt;::max())));\n
    \n-    dp[0] = std::vector&lt;std::vector&lt;long&gt; &gt;(max_x, std::vector&lt;long&gt;(m
    + 1, 0));\n+    std::for_each(dp.front().begin(), dp.front().end(), zero_fill);\n
    \n     REPE(y1, 0, n) REP(x1, 0, max_x) if (slip[y1][x1] &gt;= 0) // source\n
    \    {\n"
  :tags: []
  :references:
    :url: 
    :title: 
