---
:id: '103'
:title: あみだくじ
:comments:
- :id: '4476'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4476
  :user_name: greentea
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/573/
  :language: 
  :time: 2007/11/29 08:14 GMT
  :vote_count: '6'
  :vote_score: '4'
  :body: "\r\n\t  <pre class=\"compact\">次のような書式で与えられた「あみだくじ」があります。\r\n(あみだくじはコード中に埋め込んでも、標準入力や\r\n外部ファイルから読み込んでも、書きやすい方法でかまいません)\r\n\r\nA
    B C D E\r\n| | |-| |\r\n|-| | |-|\r\n| |-| |-|\r\n|-| |-| |\r\n|-| | | |\r\n\r\nこのあみだくじをたどって\r\nA
    B C D E\r\n| | |-| |\r\n|-| | |-|\r\n| |-| |-|\r\n|-| |-| |\r\n|-| | | |\r\nB
    D C A E\r\nのように結果を表示させるプログラムを作ってください。</pre>\r\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4689'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4689
  :user_name: 梅紫蘇
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/596/
  :language: C
  :time: 2007/12/09 04:40 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>なんの捻りもなく。</p>\n\n\t"
  :code: |
    static const char* AMIDA[] = {
        "A B C D E",
        "| | |-| |",
        "|-| | |-|",
        "| |-| |-|",
        "|-| |-| |",
        "|-| | | |",
        NULL,
    };

    int main(int argc, _TCHAR* argv[])
    {
        char szAns[100];
        strcpy(szAns, AMIDA[0]);
        printf("%s\n", AMIDA[0]);

        for (int n = 1; AMIDA[n] != NULL; n++)
        {
            printf("%s\n", AMIDA[n]);

            for (int p = 0; AMIDA[n][p] != '\0'; p++)
            {
                if ((AMIDA[n][p] == '-') &amp;&amp; (p &gt; 0))
                {
                    char c = szAns[p - 1];
                    szAns[p - 1] = szAns[p + 1];
                    szAns[p + 1] = c;
                }
            }
        }

        printf("%s\n", szAns);
        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4690'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4690
  :user_name: ocean
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/177/
  :language: Python
  :time: 2007/12/09 05:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>普通に。</p>\n\n\t"
  :code: |
    import sys

    def main():
        if not len(sys.argv) == 2:
            sys.stderr.write("usage: input_file_name\n")
            return
        a = None
        for line in (line.rstrip() for line in open(sys.argv[1])):
            print line
            if a is None: # first line
                a = list(line)
            else: # after second line
                for i in xrange(1, len(a), 2):
                    if line[i] == '-':
                        a[i - 1], a[i + 1] = a[i + 1], a[i - 1]
        print "".join(a)

    if __name__ == '__main__':
        main()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4691'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4691
  :user_name: horiuchi
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/570/
  :language: Java
  :time: 2007/12/09 05:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>素直に置換してみました。</p>\n\n\t"
  :code: |
    import java.util.ArrayList;
    import java.util.Arrays;
    import java.util.List;

    public class Answer103 {
        public static List&lt;String&gt; solveAmida(String[] input) {
            List&lt;String&gt; symbols = Arrays.asList(input[0].split("\\s+"));
            List&lt;String&gt; result = new ArrayList&lt;String&gt;(symbols);
            for (String line: input) {
                String[] separators = line.split("\\|");
                for (int index = 0; index &lt; separators.length; index++) {
                    if (separators[index].startsWith("-")) {
                        result.add(index - 1, result.remove(index));
                    }
                }
            }
            return result;
        }

        public static void main(String[] args) {
            String[] amida = new String[] {
                            "A B C D E",
                            "| | |-| |",
                            "|-| | |-|",
                            "| |-| |-|",
                            "|-| |-| |",
                            "|-| | | |",
                    };
            for (String line: amida) {
                System.out.println(line);
            }
            List&lt;String&gt; result = solveAmida(amida);
            for (String str: result) {
                System.out.print(str);
                System.out.print(" ");
            }
            System.out.println();
        }
    }
  :tags:
  - Java1.5
  :references:
    :url: 
    :title: 
- :id: '4692'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4692
  :user_name: sumim
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/12/09 06:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Squeak Smalltalk で。\n\t"
  :code: |
    | amida result |
    amida := 'A B C D E
    | | |-| |
    |-| | |-|
    | |-| |-|
    |-| |-| |
    |-| | | |'.

    result := nil.
    amida linesDo: [:line |
        result ifNil: [result := line subStrings] ifNotNil: [
            (2 to: line size by: 2) do: [:idx |
                (line at: idx) = $- ifTrue: [result swap: idx // 2 with: idx // 2 + 1]]]].
    ^result   "=&gt; #('B' 'D' 'C' 'A' 'E') "
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '4693'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4693
  :user_name: omoikani
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/374/
  :language: StandardML
  :time: 2007/12/09 06:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>とりあえず。</p>\n\n\t"
  :code: |
    val s = [
    "A B C D E",
    "| | |-| |",
    "|-| | |-|",
    "| |-| |-|",
    "|-| |-| |",
    "|-| | | |"
    ]

    fun amida [] = []
      | amida (a as (x::xs)) =
      let
        fun loop [] y = y
          | loop (s::ss) y =
          let
            fun f ((i, _), v) =
              substring (v, 0, i - 1) ^
              (implode o rev o explode o substring) (v, i - 1, 3) ^
              String.extract (v, i + 2, NONE)
          in
            loop ss (foldl f y (global_find "-" s))
          end
      in
        a @ [loop xs x]
      end

    val _ = app println (amida s)
  :tags:
  - SML#
  :references:
    :url: 
    :title: 
- :id: '4695'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4695
  :user_name: れい
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/601/
  :language: VB
  :time: 2007/12/09 07:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">適当。</pre>\n\t"
  :code: |
    Module Module1

        Sub Main()
            Dim input As String = _
                "A B C D E" &amp; ControlChars.CrLf &amp; _
                "| | |-| |" &amp; ControlChars.CrLf &amp; _
                "|-| | |-|" &amp; ControlChars.CrLf &amp; _
                "| |-| |-|" &amp; ControlChars.CrLf &amp; _
                "|-| |-| |" &amp; ControlChars.CrLf &amp; _
                "|-| | | |"

            Console.WriteLine(input)
            Console.WriteLine(GhostLeg(input))
            Console.ReadKey()
        End Sub

        Public Function GhostLeg(ByVal input As String) As String
            Dim inputlines As String() = input.Split(New String() {ControlChars.CrLf}, StringSplitOptions.RemoveEmptyEntries)
            Dim lines As String() = inputlines(0).Split(Nothing)
            For i As Integer = 1 To inputlines.Length - 1
                Dim bars As String() = inputlines(i).Split(New Char() {"|"c})
                For j As Integer = 1 To bars.Length - 2
                    If bars(j) &lt;&gt; " " Then Dim s As String = lines(j) : lines(j) = lines(j - 1) : lines(j - 1) = s
                Next
            Next
            Return String.Join(" "c, lines)
        End Function


    End Module
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4696'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4696
  :user_name: あにす
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2007/12/09 08:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>テキストの2行目から文字でループを回し、次の文字が\"-\"の時に、1行目の文字を入れ替えてます。\nループが終わったら1行目を最終行に足して、入れ替えた1行目を復元して出力してます。</p>\n\n\t"
  :code: |
    //http://ja.doukaku.org/103/ 投稿用
    using System;
    using System.Collections.Generic;
    class Program {
        static void Main(string[] args) {
            Amida(@"A B C D E
    | | |-| |
    |-| | |-|
    | |-| |-|
    |-| |-| |
    |-| | | |");
            Console.ReadLine();
        }

        static void Amida(string amidaText) {
            string[] amidaTemp = amidaText.Split(new char[]{'\n'});
            List&lt;char[]&gt; amidaRows = new List&lt;char[]&gt;();
            amidaRows.Add(amidaTemp[0].ToCharArray());
            for(int i = 1; i &lt; amidaTemp.Length; i++) {
                amidaRows.Add(amidaTemp[i].ToCharArray());
                for(int j = 0; j &lt; amidaTemp[i].Length; j = j + 2) {
                    if(j &gt; 0 &amp;&amp; amidaTemp[i][j - 1] == '-') {
                        char tmp;
                        tmp = amidaRows[0][j];
                        amidaRows[0][j] = amidaRows[0][j - 2];
                        amidaRows[0][j - 2] = tmp;
                    }
                }
            }
            amidaRows.Add(amidaRows[0]);
            amidaRows.RemoveAt(0);
            amidaRows.Insert(0, amidaTemp[0].ToCharArray());

            foreach(char[] line in amidaRows) {
                Console.WriteLine(line);
            }
        }
    }
  :tags:
  - C#2.0
  :references:
    :url: /web/20081204124228/http://blogs.dion.ne.jp/anis7742/#6555712
    :title: 貧脚レーサーのサボり日記
- :id: '4697'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4697
  :user_name: nido
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/589/
  :language: Ruby
  :time: 2007/12/09 08:13 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <p>最初の行の状態を１行読む毎に書き換えてます。</p>\r\n\n\t"
  :code: "def amida(prob)\r\n  prob.split(\"\\n\").inject do |r,l|\r\n    l.split(//).each_with_index
    do |e,i|\r\n      next unless e=='-'\r\n      r[i-1..i+1]=r[i-1..i+1].reverse\r\n
    \   end\r\n    r\r\n  end\r\nend\r\n\r\n\r\nprob=&lt;&lt;-EOD\r\nA B C D E\r\n|
    | |-| |\r\n|-| | |-|\r\n| |-| |-|\r\n|-| |-| |\r\n|-| | | |\r\nEOD\r\n\r\nputs
    prob\r\nputs amida(prob)\r\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4698'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4698
  :user_name: nido
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/589/
  :language: 
  :time: 2007/12/09 08:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ありゃ、ログインしてなかった・・。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4699'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4699
  :user_name: あにす
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2007/12/09 08:49 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>　殆ど書き直しです。エレガントに書けたと思います。</p>\n\n\t"
  :code: |
    //http://ja.doukaku.org/103/ 投稿用
    using System;
    using System.Collections.Generic;
    class Program {
        static void Main(string[] args) {
            Amida(@"A B C D E
    | | |-| |
    |-| | |-|
    | |-| |-|
    |-| |-| |
    |-| | | |");
            Console.ReadLine();
        }

        static void Amida(string amidaText) {
            List&lt;string&gt; temp = new List&lt;string&gt;(amidaText.Split(new char[] { '\n' }));
            List&lt;char&gt; lastLine = new List&lt;char&gt;(temp[0].ToCharArray());
            foreach(string line in temp) {
                Console.WriteLine(line);
                for(int i = 1; i &lt; line.Length; i = i + 2) {
                    if(line[i] == '-'){
                        lastLine.Reverse(i - 1, 3);
                    }
                }
            }
            Console.WriteLine(lastLine.ToArray());
        }
    }
  :tags:
  - C#2.0
  :references:
    :url: /web/20081204124228/http://blogs.dion.ne.jp/anis7742/#6555839
    :title: 貧脚レーサーのサボり日記
- :id: '4700'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4700
  :user_name: ihag
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/560/
  :language: Ruby
  :time: 2007/12/09 08:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>普通にArrayの中身をswapしながら各行を読んでいます．</p>\n<p>Ruby版なかったから作り始めたのだけど，できたら，もうあったorz</p>\n\n\t"
  :code: |
    #!/usr/bin/ruby
    amida = &lt;&lt;_EOD_
    A B C D E
    | | |-| |
    |-| | |-|
    | |-| |-|
    |-| |-| |
    |-| | | |
    _EOD_

    elem = nil
    amida.split("\n").each do |line|
      elem.nil? and elem = line.split and next
      line.split('').grep(/-| /).each_with_index do |op, i|
        elem[i], elem[i+1] = elem[i+1], elem[i] if op == '-'
      end
    end
    puts amida, elem.join(' ')

    __END__
    % ./amida.rb
    A B C D E
    | | |-| |
    |-| | |-|
    | |-| |-|
    |-| |-| |
    |-| | | |
    B D C A E
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4701'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4701
  :user_name: minke
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/28/
  :language: Haskell
  :time: 2007/12/09 09:17 GMT
  :vote_count: '8'
  :vote_score: '8'
  :body: "\n\t  <div class=\"section\">\n<p>どうでしょう</p>\n</div>\n\t"
  :code: |
    s = ["A B C D E",
         "| | |-| |",
         "|-| | |-|",
         "| |-| |-|",
         "|-| |-| |",
         "|-| | | |"]

    repl (x:' ':xs) ('|':y:ys) =
        let z:zs = repl xs ys in
        case y of
          '-' -&gt; z:' ':x:zs
          _ -&gt; x:' ':z:zs
    repl xs _ = xs

    main = putStrLn $ (unlines s) ++ foldl1 repl s
  :tags:
  - エレガント
  :references:
    :url: 
    :title: 
- :id: '4703'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4703
  :user_name: 99yen
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/591/
  :language: 
  :time: 2007/12/09 10:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    あみだ="A B C D E
    | | |-| |
    |-| | |-|
    | |-| |-|
    |-| |-| |
    |-| | | |"

    Amida=あみだ
    AmidaFooter=Amida[0]を" "で区切る

    Amidaの0を配列削除
    Iで0から(Amidaの要素数)-1まで繰り返す
        AmidaLine = Amida[I]
        // 処理しやすいように整形
        AmidaLineの1から1バイト削除
        AmidaLineから1バイト右端削除
        AmidaLine = AmidaLineを"|"で区切る
        Jで0から(AmidaLineの要素数)-1まで繰り返す
            もし(AmidaLine[J]="-")ならば
                AmidaFooter = AmidaFooterのJを(J+1)に配列入替え

    あみだ&amp;改行&amp;(AmidaFooterを" "で配列結合)を表示

    ●配列入替え(ArrayのAをBに)
        tmpAとは文字列=Array[A]
        tmpBとは文字列=Array[B]
        Array[A]=tmpB
        Array[B]=tmpA
        Arrayで戻る
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4705'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4705
  :user_name: matyr
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/343/
  :language: JavaScript
  :time: 2007/12/09 13:26 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  例によって replace をイテレータ代わりに。\n\t"
  :code: |
    function doukaku103(amida){
      var a = amida.replace(/\|/g, '').split('\n'), o = a.shift().split(' ');
      var x = /-/g, f = function(t, i){ t = o[i], o[i] = o[i+1], o[i+1] = t };
      for(var j = 0, l; l = a[j++];) l.replace(x, f);
      return amida +'\n'+ o.join(' ');
    }

    (typeof confirm != 'undefined' ? confirm : typeof print != 'undefined' ? print :
     function($){ typeof WSH == 'object' &amp;&amp; WSH.echo($) })(doukaku103('\
    A B C D E\n\
    | | |-| |\n\
    |-| | |-|\n\
    | |-| |-|\n\
    |-| |-| |\n\
    |-| | | |'));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4706'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4706
  :user_name: odz
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/212/
  :language: Perl
  :time: 2007/12/09 14:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ひねりなし</p>\n\n\t"
  :code: |
    use strict;
    use warnings;

    sub swap {
        @_[0, 1] = @_[1, 0];
    }

    sub amida {
        my $str = shift;
        my @lines = split /\n/, $str;
        my @header = split //, shift @lines;

        print join '', @header, "\n";

        for (@lines) {
            print $_, "\n";
            while (/-/g) {
                swap($header[pos() - 2], $header[pos]);
            }
        }

        print join '', @header, "\n";
    }

    my $data = do { local $/; &lt;DATA&gt; };
    amida($data);

    __DATA__
    A B C D E
    | | |-| |
    |-| | |-|
    | |-| |-|
    |-| |-| |
    |-| | | |
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4707'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4707
  :user_name: naoto
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/572/
  :language: Scheme
  :time: 2007/12/09 14:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">9:user&gt; (print-result amidakuji)\r\nA B
    C D E\r\n| | |-| |\r\n|-| | |-|\r\n| |-| |-|\r\n|-| |-| |\r\n|-| | | |\r\nB D
    C A E\r\n=&gt; #&lt;undef&gt;\r\n10:user&gt; </pre>\n\t"
  :code: |
    (define amidakuji
      (string-append
       "A B C D E\n"
       "| | |-| |\n"
       "|-| | |-|\n"
       "| |-| |-|\n"
       "|-| |-| |\n"
       "|-| | | |\n"
       ))

    (define (first-state line)
      (map string-&gt;symbol (string-split line #\space)))

    (define (update-state line prev-state)
      (let1 amida (cdr (string-split line #\|))
        (fold-right (lambda (s a k)
                      (if (string=? a "-")
                        (cons* (car k) s (cdr k))
                        (cons s k)))
                    '() prev-state amida)))

    (define (solve amida)
      (call-with-input-string amida
        (lambda (in)
          (port-fold
           (cut update-state &lt;&gt; &lt;&gt;)
           (first-state (read-line in))
           (cut read-line in)))))

    (define (print-result amida)
      (display amida)
      (print (string-join (map symbol-&gt;string (solve amida)) " ")))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '4711'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4711
  :user_name: あにす
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2007/12/10 02:03 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>　Playerオブジェクトにあみだくじを引かせてみました。この方が\"このあみだくじをたどって\"という題意に近いと思います。</p>\n\n\t"
  :code: "//http://ja.doukaku.org/103/ 投稿用\nusing System;\nusing System.Collections.Generic;\nclass
    Program2 {\n    static void Main(string[] args) {\n        string amidaStr = @\"A
    B C D E\n| | |-| |\n|-| | |-|\n| |-| |-|\n|-| |-| |\n|-| | | |\";\n\n        List&lt;char[]&gt;
    amida = new List&lt;char[]&gt;();\n\n        //あみだをPlayerが解釈できる形式に変換\n        foreach(string
    line in amidaStr.Split(new char[] { '\\n' })) {\n            amida.Add(line.ToCharArray());\n
    \       }\n        amida.Add(new char[amida[0].Length]);//Playlerが回答を記入する欄\n\n
    \       //Player生成\n        for(int i = 0; i &lt; amida[0].Length; i = i + 2)
    {\n            new Player(i, amida);\n        }\n\n        //出力\n        foreach(char[]
    line in amida) {\n            Console.WriteLine(line);\n        }\n        Console.ReadLine();\n
    \   }\n}\n\nclass Player {\n    public Player(int start,List&lt;char[]&gt; amida)
    {\n        Play(start, 1, amida, amida[0][start]);     \n    }\n\n    private
    void Play(int x,int y, List&lt;char[]&gt; amida, char name){\n        if(amida[y][x]
    == '|') { //あみだが終わっていなければ\n            if(x &gt;= 2 &amp;&amp; amida[y][x - 1]
    == '-') {\n                Play(x - 2, y + 1, amida, name); //左に移動して進む\n            }
    else if(x &lt;= amida[0].Length - 3 &amp;&amp; amida[y][x + 1] == '-') {\n                Play(x
    + 2, y + 1, amida, name); //右に移動して進む\n            } else {\n                Play(x,
    y + 1, amida, name); //移動せずに下に進む\n            }\n        } else {\n            amida[y][x]
    = name; //終わったら結果を記入\n        }\n    }\n}\n"
  :tags:
  - C#2.0
  :references:
    :url: /web/20081204124228/http://blogs.dion.ne.jp/anis7742/#6558930
    :title: 貧脚レーサーのサボり日記
- :id: '4713'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4713
  :user_name: mc
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/405/
  :language: Common
  :time: 2007/12/10 05:39 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <div class=\"section\">\n<p>全体のあみだくじの文字列をamidaに渡すと、結果の文字列を返します。\r</p>\n<p>(princ
    \r</p>\n<p>  (amida \r</p>\n<p>\"A B C D E\r</p>\n<p>| | |-| |\r</p>\n<p>|-| |
    |-|\r</p>\n<p>| |-| |-|\r</p>\n<p>|-| |-| |\r</p>\n<p>|-| | | |\"))\r</p>\n<p>;=&gt;\r</p>\n<p>A
    B C D E\r</p>\n<p>| | |-| |\r</p>\n<p>|-| | |-|\r</p>\n<p>| |-| |-|\r</p>\n<p>|-|
    |-| |\r</p>\n<p>|-| | | |\r</p>\n<p>B D C A E\r</p>\n<p>||&lt;</p>\n</div>\n\t"
  :code: |
    (require :cl-ppcre)

    (defun amida (amida)
      (with-input-from-string (str amida)
        (let ((items (ppcre:split "\\s*" (read-line str nil nil))))
          (do ((line (read-line str nil :eof) (read-line str nil :eof)))
              ((eq :eof line) (format nil "~A~%~{~A~^ ~}" amida items))
            (exch line items)))))

    (defun exch (pat items)
      (do ((pos (ppcre:all-matches "-" pat) (cddr pos)))
          ((endp pos) items)
        (let ((p (truncate (car pos) 2)))
          (rotatef (nth p items) (nth (1+ p) items)))))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4714'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4714
  :user_name: mc
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/405/
  :language: diff
  :time: 2007/12/10 06:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>すいません、間違った方を投稿しまいました。\"\\s*\"じゃなくて、\"\\s+\"でした。</p>\n\n\t"
  :code: |
    5c5
    &lt;     (let ((items (ppcre:split "\\s*" (read-line str nil nil))))
    ---
    &gt;     (let ((items (ppcre:split "\\s+" (read-line str nil nil))))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4737'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4737
  :user_name: naranja
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/448/
  :language: D
  :time: 2007/12/11 00:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>普通に。</p>\n\n\t"
  :code: |
    import std.stdio;
    import std.string;

    void main(){
        string[] amida = ["A B C D E",
                          "| | |-| |",
                          "|-| | |-|",
                          "| |-| |-|",
                          "|-| |-| |",
                          "|-| | | |"];

        auto pos = cast(char[])amida[0].dup;
        foreach(s; amida[1..$]){
            foreach(i, c; s[0..($ - 1)]){
                if(c == '-'){
                    auto tmp = pos[i - 1];
                    pos[i - 1] = pos[i + 1];
                    pos[i + 1] = tmp;
                }
            }
        }
        amida ~= cast(string)pos;
        writefln(amida.join("\n"));
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4739'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4739
  :user_name: yuin
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/82/
  :language: Scala
  :time: 2007/12/11 02:34 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    def amida(as:String) = {
      val h::t = as.trim.split("\n").toList
      val r = h.toArray
      t.foreach(_.toList.zipWithIndex.filter(_._1=='-').foreach{case (_,i) =&gt;
        var tmp = r(i-1)
        r(i-1) = r(i+1)
        r(i+1) = tmp
      })
      h::t:::List(r.mkString("")) mkString "\n"
    }

    val a = """
    A B C D E
    | | |-| |
    |-| | |-|
    | |-| |-|
    |-| |-| |
    |-| | | |
    """

    println(amida(a))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4763'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4763
  :user_name: yohei
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/415/
  :language: Prolog
  :time: 2007/12/11 18:06 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: "switch(['|'], [A], [A]).\r\nswitch(['|','-','|'|S], [A,' ',B|L], [B,' ',C|L1])
    :-\r\n    switch(['|'|S], [A|L], [C|L1]).\r\nswitch(['|',' ','|'|S], [A,' ',B|L],
    [A,' ',C|L1]) :-\r\n    switch(['|'|S], [B|L], [C|L1]).\r\n\r\namida_sub(Hs, [])
    :- atom_chars(H, Hs), writeln(H).\r\namida_sub(Hs, [X|L]) :- writeln(X), atom_chars(X,
    Xs),\r\n    switch(Xs, Hs, H1), amida_sub(H1, L).\r\n\r\namida(A) :- concat_atom([H|L],
    '\\n', A), writeln(H),\r\n    atom_chars(H, Hs), amida_sub(Hs, L).\r\n\r\n:- amida('A
    B C D E\r\n| | |-| |\r\n|-| | |-|\r\n| |-| |-|\r\n|-| |-| |\r\n|-| | | |').\r\n"
  :tags:
  - SWI-Prolog
  :references:
    :url: 
    :title: 
- :id: '4764'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4764
  :user_name: yohei
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/415/
  :language: 
  :time: 2007/12/11 18:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>タグ書き間違えました，SWI-Prologです．</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4917'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4917
  :user_name: ocaml-nagoya
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/514/
  :language: OCaml
  :time: 2007/12/21 14:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ものすごく適当に…。\n横棒をタプルのリストとして受け取って、名前を入れ替えます。</p>\n\n\t"
  :code: |
    let rec amida names = function
        [] -&gt; names
      | ((h1,h2)::tl) -&gt;
        let t1,t2 = names.(h1),names.(h2) in
          names.(h1) &lt;- t2;
          names.(h2) &lt;- t1;
          amida names tl;;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4919'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4919
  :user_name: lieutar
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/618/
  :language: Perl
  :time: 2007/12/21 14:46 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">短かさと, 正規表現の小手先にこだわりました. \r\n標準入力とかから, アミダクジを与えて下さい.
    </pre>\n\t"
  :code: |
    $_=&lt;&gt;;print;while($b=$a=&lt;&gt;){print$a;chomp$a;$i=1;$a=~s/(-|\|)/$1eq'-'?' ':'(.)'
    /eg;$b=~s/(\|-\||\|)/$1eq'|'?'$'.$i++:'$'.++$i.' $'.($i++ -1)/eg;eval"s/$a/$b/"
    }print
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4952'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/4952
  :user_name: lieutar
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/618/
  :language: Other
  :time: 2007/12/24 14:42 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <p>おなじ方法のものを, bourne shell + sed で</p>\n\n\t"
  :code: |
    #! /bin/sh
    cat $1;t="mktemp tmp.XXXXXX";F=`$t`;R=`$t`;t=`$t`;head -n1 $1&gt;$F;cat $1|sed \
    -e1d &gt;$R;while ! test 0 = `cat $R | wc -l`;do X=;r=;i=1;p=0;L=`head -n1 $R|sed\
     -e 's/|-|/-/g'|sed -e 's/|/+/g'`\ `head -n1 $R |sed -e 's/-/ /g'`;for c in $L
    do case $c in -)r=$r" \\"`expr 1 + $i`" \\$i";p=2;;+)r=$r" \\"$i;p=1;;\|)
    X=$X'\(.\) ';;esac;i=`expr $i + $p`;done;s=s/`echo $X`/`echo $r`/;cat $F|sed \
    -e "$s"&gt;$t; cp $t $F;cat $R|sed -e '1d' &gt; $t;cp $t $R;done; cat $F;rm $R $F $t;
  :tags:
  - sh
  :references:
    :url: 
    :title: 
- :id: '5212'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/5212
  :user_name: ivoryworks
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/647/
  :language: PHP
  :time: 2008/01/07 03:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  ファイルの内容を結果付きで返却します。\r<br>"
  :code: |
    &lt;?php
    function Amida($file_path)
    {
        if (!file_exists($file_path)) {
            return NULL;
        }
        $lines = file($file_path);
        $org = array_shift($lines);
        $p = $org;
        foreach ($lines as $line) {
            for ($i = 1; $i &lt; strlen(trim($line)); $i+=2) {
                if ($line[$i] == '-') {
                    $sub = array($p[$i+1]=&gt;$p[$i-1], $p[$i-1]=&gt;$p[$i+1]);
                    $p = strtr($p, $sub);
                }
            }
        }
        return $org.implode('', $lines).$p;
    }
    ?&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5556'
  :parent_id: '103'
  :url: http://ja.doukaku.org/comment/5556
  :user_name: Otter
  :user_url: /web/20081204124228/http://ja.doukaku.org/user/497/
  :language: Haskell
  :time: 2008/01/29 09:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>初心者なりにがんばってみました。出来上がってからMinkeさんの回答を見てアゴが勢いよく机に落ちました…　まさしくエレガント。</p>\n<p>大変勉強になりました。</p>\n\n\t"
  :code: "module Main\n    where\n\nimport System (getArgs)\nimport Data.List (intersperse)\n\nswaps
    :: String -&gt; String -&gt; String\nswaps (px1:px2:pxs) (pl1:pl2:pls)\n    |
    pl1 == '-' = [px2, px1] ++ swaps pxs pls\n    | otherwise = [px1] ++ swaps (px2:pxs)
    (pl2:pls)\nswaps xs _ = xs\n\nfollowLines:: String -&gt; String -&gt; String\nfollowLines
    pls \n\n\n\n\n<!--\n     FILE ARCHIVED ON 12:42:28 Dec 4, 2008 AND RETRIEVED FROM
    THE\n     INTERNET ARCHIVE ON 13:28:55 Nov 16, 2013.\n     JAVASCRIPT APPENDED
    BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.\n\n     ALL OTHER CONTENT MAY
    ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.\n     SECTION 108(a)(3)).\n-->"
  :tags: []
  :references:
    :url: 
    :title: 
