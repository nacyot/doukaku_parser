---
:id: '21'
:title: アルファベットの繰り上がり
:comments:
- :id: '3377'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/3377
  :user_name: にしお
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/13 20:13 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  Excelの桁表示は\r\n1桁目はA、2桁目はB、以下C、D、 E…とすすみ、Zの次はAA AB AC…と続きます。AZの次はBAです。\r\n<p>\r\nこの表記法で1から100までを表示してください。出力結果は下記のサンプルの「...」の部分に適切な文字列を埋めたものになります。\r\n</p>\n<pre>\r\nA,
    B, C, ... CU, CV\r\n</pre>\r\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '780'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/780
  :user_name: anekos
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/170/
  :language: Ruby
  :time: 2007/07/13 20:38 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  \n\t"
  :code: |
    print "#{n = 'A'}"
    99.times { print ", #{n.succ!}" }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '781'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/781
  :user_name: rubikitch
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/105/
  :language: Common
  :time: 2007/07/13 21:58 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  微妙…\n\t"
  :code: |
    (defun alphabets (n)                    ;n &lt; 701
      (labels ((alph (m) (code-char (1- (+ (char-code #\A) m)))))
        (let ((a2 (floor (/ (1- n) 26)))
              (a1 (1+ (mod (1- n) 26))))
          (if (zerop a2)
              (format nil "~c" (alph a1))
              (format nil "~c~c" (alph a2) (alph a1))))))

    (loop for n from 1 to 100 do
         (format t "~a " (alphabets n)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '782'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/782
  :user_name: rubikitch
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/105/
  :language: Scheme
  :time: 2007/07/13 22:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  gauche\n\t"
  :code: "(use srfi-1)\n(define (alphabets n)\n  (define (alph m) (ucs-&gt;char (-
    (+ (char-&gt;ucs #\\A) m) 1)))\n  (let ((a2 (quotient (- n 1) 26))\n        (a1
    (+ 1 (remainder (- n 1) 26))))\n    (if (zero? a2)\n      (string (alph a1))\n
    \     (string (alph a2) (alph a1)))))\n    \n\n(map\n (lambda (x) (format #t \"~s
    \" (alphabets x)))\n (iota 100 1))\n"
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '783'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/783
  :user_name: rubikitch
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/105/
  :language: Ruby
  :time: 2007/07/13 22:23 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: |
    (1..100).inject("A"){|res,| puts res; res.succ}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '784'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/784
  :user_name: cats
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/172/
  :language: C
  :time: 2007/07/14 00:15 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: |
    using System;
    class Program
    {
      static void Main()
      {
        Console.Write("A");
        for (int i = 1; i &lt; 100; ++i)
          Console.Write(", {0}{1}",i&lt;26?"":((char)('A'+i/26-1))+"",(char)('A'+i%26));
        Console.WriteLine();
      }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '787'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/787
  :user_name: kkobayashi
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2007/07/14 01:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  2桁以内限定です\n\t"
  :code: |
    cat(paste(c(rep('', 26), rep(LETTERS, each=26, length=100-26)), rep(LETTERS, length=100), sep=''), sep=", ")
  :tags:
  - R
  :references:
    :url: 
    :title: 
- :id: '788'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/788
  :user_name: sumim
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/07/14 01:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Squeak Smalltalk で。\n\t"
  :code: |
    | n m collection |
    n := 100.
    m := 0.
    collection := OrderedCollection new.
    World findATranscript: nil.
    [($A to: $Z) asDigitsToPower: (m := m + 1) do: [:arry |
       (collection add: '', arry; size) = n ifTrue: [
          ^collection asArray
             do: [:each | Transcript show: each]
             separatedBy: [Transcript show: ', ']]]
    ] repeat
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '789'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/789
  :user_name: tetsuro6502
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/213/
  :language: JavaScript
  :time: 2007/07/14 01:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "var a = [];\nvar A = 'A'.charCodeAt(0)\n\nfor (var i = 0; i &lt; 100; i++)
    {\n    var t = ((i / 26) &lt;&lt; 0);\n    var o = i % 26;\n    a.push((t ? String.fromCharCode(A
    + t - 1) : '') \n            + String.fromCharCode(A + o));\n}\nalert(a);\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '790'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/790
  :user_name: shiro
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/41/
  :language: Scheme
  :time: 2007/07/14 01:44 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  1から100まで数えつつそれをその都度文字列に直す方法と、文字列表現を直接インクリメントしてく方法があると思うけど、後者をやってみた。インクリメントは右から左への走査になるんで、reverseしてmap-accumしてreverse、っていうのがちょっとまどろっこしいかなあ。\r\n\n\t"
  :code: |
    (use gauche.sequence)

    (define (succ s)
      (receive (s c)
          (map-accum (lambda (d c)
                       (if (&gt; (+ d c) 25) (values 0 1) (values (+ d c) 0)))
                     1 (reverse (map (lambda (c) (- (char-&gt;integer c) 65)) s)))
        (map-to &lt;string&gt; (lambda (d) (integer-&gt;char (+ d 65)))
                (reverse (if (zero? c) s (append s '(0)))))))

    (let loop ((i 0) (s "A") (r '()))
      (if (= i 100)
        (print (string-join (reverse r) ", "))
        (loop (+ i 1) (succ s) (cons s r))))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '791'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/791
  :user_name: shiro
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/41/
  :language: 
  :time: 2007/07/14 01:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  あ、succの中のd2cはいらないな。消し忘れ。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '792'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/792
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/07/14 01:56 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">横幅を合わせるために改行。\r\n</pre>\n\t"
  :code: |
    print ', '.join(
      [((i/26) and chr(ord('A')+i/26) or '') + chr(ord('A')+i%26) for i in range(100)]
    )
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '793'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/793
  :user_name: sumim
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/07/14 02:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  別のアプローチで。\n\t"
  :code: |
    | excelColumnName |

    excelColumnName := [:n |
       | rest digits |
       rest := n - 1.
       digits := OrderedCollection new.
       [  digits addFirst: (($A to: $Z) at: rest \\ 26 - digits size sign + 1).
          (rest := rest // 26) &gt; 0
       ] whileTrue.
       digits as: String].

    World findATranscript: nil.
    Transcript cr.
    (1 to: 100)
       do: [:i | Transcript show: (excelColumnName value: i)]
       separatedBy: [Transcript show: ', ']
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '800'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/800
  :user_name: rubikitch
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/105/
  :language: Emacs
  :time: 2007/07/14 04:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    (require 'cl)
    (defun alphabets (n)                    ;n &lt; 701
      (labels ((alph (m) (1- (+ ?A m))))
        (let ((a2 (floor (/ (1- n) 26)))
              (a1 (1+ (mod (1- n) 26))))
          (if (zerop a2)
              (format "%c" (alph a1))
              (format "%c%c" (alph a2) (alph a1))))))

    (with-output-to-temp-buffer "*alphabets*"
      (loop for n from 1 to 100 do
            (princ (alphabets n))
            (princ " ")))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '801'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/801
  :user_name: rubikitch
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/105/
  :language: D
  :time: 2007/07/14 04:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    module doukaku;
    private import std.stdio;
    char[] alphabets(int n) {
        char alph(int m) { return 'A'+m-1; }
        int a2 = (n-1) / 26;
        int a1 = (n-1) % 26 + 1;
        if (!a2)
            return [alph(a1)];
        else
            return [alph(a2)] ~ alph(a1);
    }

    void main() {
        for (int i=1; i&lt;=100; i++)
            writef("%s ", alphabets(i));
        writefln("");
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '802'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/802
  :user_name: ？せんたくいた
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/241/
  :language: Bash
  :time: 2007/07/14 04:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  手元の自作 dec2hex.sh をほげふが。変態的では無い26進変換で。\r\n\n\t"
  :code: "#!/bin/bash\n\nfunction dec2alpha {\n\nn=\"$1\"\nm=''\nalpha='ZABCDEFGHIJKLMNOPQRSTUVWXY'\n\nwhile
    (($n)) ;do\n\tm=${alpha:$((n%26)):1}${m}\n\tn=$(((n-1)/26))\ndone\necho $m\n}\n\nfor
    n in $(seq 100) ;do\n\tdec2alpha $n\ndone\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '803'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/803
  :user_name: rubikitch
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/105/
  :language: Perl
  :time: 2007/07/14 04:49 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    sub alphabets($) {
        sub alph($) { chr(ord('A')+$_[0]-1); }
        my $n = $_[0];
        my $a2 = int(($n-1) / 26);
        my $a1 = ($n-1) % 26 + 1;
        if (!$a2) {
            alph($a1);
        } else {
            alph($a2) . alph($a1);
        }
    }

    for ($i=1; $i&lt;=100; $i++) {
        printf("%s ", alphabets($i));
    }
    print("\n");
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '804'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/804
  :user_name: katsu
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/117/
  :language: Scheme
  :time: 2007/07/14 04:51 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">gaucheでstream版です。\r\n私が未熟なため、streamをflattenするのに苦労しました。</pre>\n\t"
  :code: |
    (use util.stream)

    (define (stream-appendx x)
      (cond ((stream-null? x) (stream-delay ()))
            ((stream? (stream-car x)) (stream-append (stream-car x) (stream-delay (stream-appendx (stream-cdr x)))))
            (else x)))

    (define (stream-iota-n . rest)
      (stream-appendx
        (stream-map
          (if (null? (cdr rest))
            list
            (lambda (x)
              (stream-map
                (lambda (y) (cons x y))
                (apply stream-iota-n (cdr rest)))))
          (stream-iota (car rest)))))

    (define (i-&gt;alpha c)
      (apply string (map (lambda (x) (integer-&gt;char (+ 65 x))) c)))

    (print (stream-&gt;list (stream-take (stream-map i-&gt;alpha (stream-iota-n 26 26)) 100)))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '805'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/805
  :user_name: ocean
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/177/
  :language: Python
  :time: 2007/07/14 05:00 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  普通に再帰で。\n\t"
  :code: |
    def excel(n):
        if n == 0:
            return ""
        else:
            n -= 1
            count = ord('Z') - ord('A') + 1
            return excel(n / count) + chr(n % count + ord('A'))

    print ", ".join(excel(n) for n in xrange(1, 101))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '806'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/806
  :user_name: rubikitch
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/105/
  :language: Lua
  :time: 2007/07/14 05:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  久々のLuaだ\n\t"
  :code: "function alphabets(n) \n    function alph(m)\n      return string.char(string.byte('A')+m-1)\n
    \   end\n    a2 = math.floor((n-1) / 26);\n    a1 = math.mod((n-1), 26) + 1;\n
    \   if (a2 == 0)  then\n      return alph(a1);\n    else\n      return (alph(a2)
    .. alph(a1));\n    end\nend\n\noutput = \"\"\nfor i = 1, 100, 1 do\n  output =
    output .. alphabets(i) .. \" \"\nend\nprint(output);\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '807'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/807
  :user_name: tosik
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/216/
  :language: JavaScript
  :time: 2007/07/14 05:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">芸は無いけど。\r\n100超えた場合（というよりZZを超えた場合）に対応しようと思ったけど、お題を読み直してやめました。</pre>\n\t"
  :code: |
    function excel()
    {
        var a = "A".charCodeAt(0);
        var n = "Z".charCodeAt(0) - a + 1;
        var tmp = [];
        for(var i=0; i&lt;100; i++)
        {
            tmp[i] = (i&lt;n ? "" : String.fromCharCode(i/n+a-1))
                 + String.fromCharCode(i%n+a);
        }
        return tmp.join(",");
    }

    alert(excel());
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '808'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/808
  :user_name: rubikitch
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/105/
  :language: C
  :time: 2007/07/14 05:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    #include &lt;stdio.h&gt;

    char alph(int m) { return 'A'+m-1; }
    char* alphabets(int n) {
        static char ret[3];
        int a2 = (n-1) / 26;
        int a1 = (n-1) % 26 + 1;
        if (!a2) {
            ret[0] = alph(a1);
            ret[1] = 0;
        } else {
            ret[0] = alph(a2);
            ret[1] = alph(a1);
            ret[2] = 0;
        }
        return ret;
    }

    int main() {
        int i;
        for (i=1; i&lt;=100; i++)
            printf("%s ", alphabets(i));
        printf("\n");
        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '809'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/809
  :user_name: 沢渡 みかげ
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/101/
  :language: Erlang
  :time: 2007/07/14 05:18 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">erl -noshell -s alphainc alphainc -s init stop\r\nのように実行します．</pre>\n\t"
  :code: |
    -module(alphainc).
    -export([alphainc/0]).

    alphainc() -&gt;
        conv(1),
        lists:map(fun(N) -&gt; io:format(", "), conv(N) end, lists:seq(2, 100)),
        io:format("~n").

    conv(N) -&gt;
        Next = N div 26,
        if
            Next &gt; 0 -&gt; conv(Next);
            true -&gt; ok
        end,
        io:format("~c", [$A + (N rem 26) - 1]).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '810'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/810
  :user_name: rubikitch
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/105/
  :language: Bash
  :time: 2007/07/14 05:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  シェルスクリプトは苦手…\n\t"
  :code: |
    ALPHABETS=ABCDEFGHIJKLMNOPQRSTUVWXYZ

    alph() {
        expr substr $ALPHABETS $1 1;
    }

    alphabets() {
        n=$1
        a2=`expr $(expr $n - 1) / 26`
        a1=`expr $(expr $(expr $n - 1) % 26) + 1`
        if [ "$a2" = "0" ]; then
            echo `alph $a1`
        else
            echo `alph $a2``alph $a1`
        fi
    }

    for i in `seq 1 100`;do
        echo -n "`alphabets $i` "
    done
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '811'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/811
  :user_name: rubikitch
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/105/
  :language: 
  :time: 2007/07/14 05:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  げ、先越された＞＜\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '817'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/817
  :user_name: ytakenaka
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/35/
  :language: Common
  :time: 2007/07/14 05:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "(defun alphabets (number)\n  (multiple-value-bind (n1 n0) (floor (1- number)
    26)\n    (concatenate 'string\n\t\t (unless (zerop n1)(princ-to-string (code-char
    (+ 64 n1))))\n\t\t (princ-to-string (code-char (+ 65 n0))))))\n\n(loop for i from
    1 to 100 do\n\t      (format t \"~A, \" (alphabets i)))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '825'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/825
  :user_name: anekos
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/170/
  :language: Haskell
  :time: 2007/07/14 07:08 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  いまいち。\n\t"
  :code: |
    as = map return ('Z' : ['A'..'Y'])
    anum 0 = ""
    anum n = anum (div (n - 1) 26) ++ (as !! (mod n 26))
    anums = map anum [1..]

    main = putStrLn $ foldl1 (\x y -&gt; x ++ ", " ++ y) $ take 100 anums
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '826'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/826
  :user_name: shiro
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/41/
  :language: 
  :time: 2007/07/14 07:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">streamのstreamになってるんですね。これはややこしい。\r\nでもその必要はあるのかなあ?\r\n\r\n結果がちょっと違うようです。最初の26個は一桁じゃないとならない。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '828'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/828
  :user_name: lufia
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/242/
  :language: awk
  :time: 2007/07/14 07:40 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">alphaの頭にZを置くのが肝ですね。あとはふつう。</pre>\n\t"
  :code: "BEGIN {\n\tN = split(\"ZABCDEFGHIJKLMNOPQRSTUVWXY\", alpha, \"\")\n\tfor(i
    = 1; i &lt;= 100; i++)\n\t\tprint excel(i)\n}\nfunction excel(i,\t\ts) {\n\tfor(;
    i; i = int((i-1) / N))\n\t\ts = alpha[i%N + 1] s\n\treturn s\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '829'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/829
  :user_name: takatoh
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/189/
  :language: Haskell
  :time: 2007/07/14 08:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  繰り上がりの処理ではまりました。\n\t"
  :code: |
    module Main ( main ) where

    import Data.Char ( ord, chr )
    import Data.List ( mapAccumR, intersperse )


    succS :: [Char] -&gt; Int -&gt; [Char]
    succS s n = map intToAlpha $ g $ mapAccumR f n $ map alphaToInt s
      where
        alphaToInt c = (ord c ) - 64
        intToAlpha i = chr (i + 64)
        f acc x = let (d,m) = (acc+x) `divMod` 26
                  in if m == 0  then (d-1,26)  else (d,m)
        g (0,b) = b
        g (a,b) = a:b


    main :: IO ()
    main = putStr $ concat $ intersperse "," $ take 100 $ iterate (flip succS 1) "A"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '830'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/830
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: Java
  :time: 2007/07/14 08:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  単純な26進数にならないところが難しいですね。とりあえず2桁限定で作ってみました。一般的にはどうすればできるのでしょうか。\n\t"
  :code: |
    public class Sample {
        public static void main(String[] args) {
            int i = 1;
            System.out.print(a26(i++));
            for (; i &lt;= 100; i++) {
                System.out.print(", " + a26(i));
            }
        }

        public static String a26(int i) {
            StringBuffer a = new StringBuffer();
            i--;
            a.append((char)((int)'A' + (i % 26)));
            if (i / 26 &gt; 0) {
                a.append((char)((int)'A' + (i / 26) - 1));
            }
            a.reverse();
            return a.toString();
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '831'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/831
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: Java
  :time: 2007/07/14 09:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  最初に何桁あるか求めてから変換する方針で一般化してみました。\n\t"
  :code: |
    public class Sample {
        public static void main(String[] args) {
            int i = 1;
            System.out.print(a26(i++));
            for (; i &lt;= 100; i++) {
                System.out.print(", " + a26(i));
            }
        }

        public static String a26(int num) {
            num--;
            int n = 1;
            int n2 = 26;
            while (num &gt;= n2) {
                num -= n2;
                n2 *= 26;
                n++;
            }
            StringBuffer a = new StringBuffer();
            for (int i = 0; i &lt; n; i++) {
                n2 /= 26;
                a.append((char)((int)'A' + (num / n2)));
                num %= n2;
            }
            return a.toString();
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '832'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/832
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: Java
  :time: 2007/07/14 09:12 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  0を与えた場合は空文字列になるのが正しいのではないか？だとすればもっと一般化可能になります。\n\t"
  :code: |2
        public static String a26(int num) {
            int n = 0;
            int n2 = 1;
            while (num &gt;= n2) {
                num -= n2;
                n2 *= 26;
                n++;
            }
            StringBuffer a = new StringBuffer();
            for (int i = 0; i &lt; n; i++) {
                n2 /= 26;
                a.append((char)((int)'A' + (num / n2)));
                num %= n2;
            }
            return a.toString();
        }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '833'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/833
  :user_name: yuin
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/82/
  :language: Scala
  :time: 2007/07/14 09:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">oceanさんと一緒でした。</pre>\n\t"
  :code: |
    def excelNumber(i:Int):String = i match {
      case 0 =&gt; ""
      case _ =&gt; val n = i-1
                excelNumber(n/26)+(n%26+65).asInstanceOf[char]
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '835'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/835
  :user_name: bighands
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/243/
  :language: C
  :time: 2007/07/14 09:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    int main(){
        char *str[100];
        int i;
        for(i=0;i&lt;100;i++){
            str[i]=malloc(sizeof(char)*2);
        }
        for(i=0;i&lt;100;i++){
            *(str[i]+1)=(char)('A'+(i%26));
            *(str[i])=((i/26)==0)?' ':(char)('A'+(i/26)-1);
            printf(str[i]);
            if(i!=99)printf(",");
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '837'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/837
  :user_name: takkanm
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/224/
  :language: Haskell
  :time: 2007/07/14 11:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">'ZZ'以上表示できないからいまいち</pre>\n\t"
  :code: |
    module Main (main) where
    alphaList = let alphas = ['A'..'Z']
                in  (concatMap (\x-&gt;[x,' ']) alphas) ++ (concatMap (\x -&gt;concatMap (\y -&gt; [x,y,' ']) alphas) alphas)
    strList n = drop 1 $ concatMap (\x -&gt; ',':x) $ take n  $ words alphaList
    main = putStrLn $ strList 100
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '838'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/838
  :user_name: iwk
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/49/
  :language: OCaml
  :time: 2007/07/14 12:11 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  \n\t"
  :code: |
    open System;;
    open Char;;
    open String;;
    open List


    let transAlph n =
        let zero = (code 'A')-1 in
        let rec base26 = function
            | 0 -&gt; []
            | m when m%26 = 0 -&gt; (base26 (m/26))
            | m -&gt; (m%26)::(base26 ((m-m%26)/26)) in
        String.concat "" (map (fun x -&gt; of_char (chr (zero+x))) (base26 n));;

    printf "%s\n" (String.concat "," (map transAlph (init 100 (fun x-&gt;x+1))));;
  :tags:
  - F#
  :references:
    :url: 
    :title: 
- :id: '839'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/839
  :user_name: iwk
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/49/
  :language: 
  :time: 2007/07/14 12:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  ヤバイ。完璧間違えてます。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '841'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/841
  :user_name: rucker
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/130/
  :language: PHP
  :time: 2007/07/14 12:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  AAA以降も対応?\n\t"
  :code: "&lt;?php\nfunction alphabetica($n)\n{\t$r='';\n\tfor(;$n&gt;0;$n=(int)($n/26))\n\t\t$r=chr(ord('A')
    + --$n % 26).$r;\n\treturn $r;\n}\n\nfor($i=1;$i&lt;=100;++$i)\n\techo alphabetica($i),\"
    \";\necho \"\\n\";\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '842'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/842
  :user_name: katsu
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/117/
  :language: Scheme
  :time: 2007/07/14 12:34 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">あい、仰るとおり、必要ないです。\r\nもう、途中から意地になってやってました。orz\r\nやりなおしました。</pre>\n\t"
  :code: |
    (define (stream-iota* . rest)
      (define (countup s l v)
        (if (null? v)
          ()
          (let1 vn (countup (cdr s) (cdr l) (cdr v))
            (cond ((null? vn) (list (+ 1 (car v))))
                  ((= (car l) (car vn)) (cons* (+ 1 (car v)) 0 (cdr vn)))
                  (else (cons (car v) vn))))))
      (let* ((start (map car rest))
             (lim (map cadr rest)))
        (let loop ((v start))
            (stream-cons v (stream-delay (loop (countup start lim v)))))))

    (define i-&gt;char (compose integer-&gt;char (pa$ + 65)))

    (print (stream-&gt;list
             (stream-take
               (stream-map
                 (compose (apply$ string)
                          (map$ i-&gt;char)
                          (remove$ negative?))
                 (stream-iota* '(-1 26) '(0 26))) 100)))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '843'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/843
  :user_name: iwk
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/49/
  :language: OCaml
  :time: 2007/07/14 12:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  修正版\n\t"
  :code: |
    open System;;
    open Char;;
    open String;;
    open List


    let transAlph n =
        let base = 26 in
        let zero = (code 'A')-1 in
        let rec transBase results = function
            | m when m &lt;= base -&gt; m::results
            | m when m%base = 0 -&gt; transBase results (m/base)
            | m -&gt; transBase ((m%base)::results) ((m-m%base)/base) in
        String.concat "" (map (fun x -&gt; of_char (chr (zero+x))) (transBase [] n));;

    printf "%s\n" (String.concat "," (map transAlph (init 100 (fun x-&gt;x+1))));;
  :tags:
  - F#
  :references:
    :url: 
    :title: 
- :id: '846'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/846
  :user_name: anekos
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/170/
  :language: Ruby
  :time: 2007/07/14 14:05 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  1行\n\t"
  :code: |
    puts (1...100).inject(s="A"){|r,| "#{r}, #{s.succ!}" }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '848'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/848
  :user_name: minke
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/28/
  :language: C
  :time: 2007/07/14 14:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  26進数ではなく、27進数にしたらどうでしょう？\r\n\n\t"
  :code: |
    #include &lt;cstdio&gt;
    #include &lt;deque&gt;
    using std::deque;

    void p(int n) {
      deque&lt;int&gt; q;
      while (n) {
        int a = n%27;
        int b = n/27;
        if (b &amp;&amp; !a) { return; }
        q.push_front(a);
        n = b;
      }
      printf(", ");
      for (size_t i = 0; i &lt; q.size(); ++i) {
        putchar('A'-1 + q[i]);
      }
    }

    int main() {
      putchar('A');
      for (int i = 2; i &lt;= 103; ++i) { p(i); }
      putchar('\n');
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '849'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/849
  :user_name: fkmn
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/190/
  :language: Perl
  :time: 2007/07/14 15:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  初投稿\n\t"
  :code: |
    sub succ {
        my $d = shift;
        $d ? succ( int( --$d / 26 ) ) . chr( ord('A') + $d % 26 ) : '';
    }

    print join ', ', map { succ $_ } 1 .. 100;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '850'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/850
  :user_name: fkmn
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/190/
  :language: 
  :time: 2007/07/14 15:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  よくよく考えたら関数名が変だ。\r\nsuccじゃあないよな・・・orz\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '855'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/855
  :user_name: nkmrtks
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/155/
  :language: Common
  :time: 2007/07/14 16:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  とりあえずやる気無し版:p\n\t"
  :code: |
    (dotimes (n 100)
      (let ((lst '(A B C D E F G H I J K L M N O P Q R S T U V W X Y Z)))
        (princ (format nil "~A~S "
                       (if (&gt;= n 26)
                           (nth (mod (truncate (/ (- n 26) 26)) 26) lst)
                         " ")
                       (nth (mod n 26) lst)))))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '882'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/882
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/07/15 00:45 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">おっと、お題をちゃんと理解してなかった。とりあえず上位桁を一減らす。</pre>\n\t"
  :code: |
    print ', '.join(
      [(i/26 and chr(ord('@')+i/26) or '') + chr(ord('A')+i%26) for i in range(100)]
    )
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '887'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/887
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: Perl
  :time: 2007/07/15 01:53 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    $c=A;print$_?', ':'',$c++for 0..99
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '898'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/898
  :user_name: すがまさお
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/248/
  :language: Ruby
  :time: 2007/07/15 07:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">succを見つけるのに時間が掛かってしまった。\r\n初投稿なので生暖かい目でみてやってください。</pre>\n\t"
  :code: |
    s='A';
    NUM=100
    NUM.times{ |n|
      print s
      print ", " if n != NUM-1
      s.succ!
    }
  :tags:
  - Ruby
  :references:
    :url: 
    :title: 
- :id: '915'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/915
  :user_name: sshi
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/249/
  :language: Haskell
  :time: 2007/07/15 10:53 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">題意を読みまちがってなければ、3桁以上もいけるバージョン。数値は使わずに文字列処理の再帰で。\r\n</pre>\n\t"
  :code: |
    module Main(main) where
    import List(intersperse)
    alpha_index = base ++ [ e ++ s |e&lt;-alpha_index,s &lt;- base]
        where base = [[c]|c&lt;-['A'..'Z']]
    main = (putStrLn . concat . intersperse ", ") (take 100 alpha_index)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '925'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/925
  :user_name: susu
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/218/
  :language: Python
  :time: 2007/07/15 12:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  alphabets(550)をよろしく。\n\t"
  :code: "def alphabets(n1):\n\tn1 = int(n1)\n\tif n1&lt;=0:\treturn 0\n\t\n\timport
    string\n\tabc = list(string.ascii_uppercase)\n\ta = [n1-1]\n\twhile a[0] &gt;=
    26:\n\t\tb = divmod(a[0],26)\n\t\ta[0] = b[1]\n\t\ta.insert(0,b[0]-1)\n\ta_out
    = [ abc[i] for i in a ]\n\treturn ''.join( [str(x) for x in a_out] )\n\nfor i
    in range(1,101):\n\tprint alphabets(i),\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '930'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/930
  :user_name: smeghead
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/31/
  :language: Common
  :time: 2007/07/15 13:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">27進数みなすようにして、AAA以降にも対応しましたが、冗長で汚いコードになってしまいました。\r\n(print-alpha
    100)\r\n</pre>\n\t"
  :code: "(defun 27-to-alpha (str) \n  (let ((*read-base* 27))\n    (format nil \"~{~a~}\"\n
    \           (loop for i from 0 to (1- (length str)) \n                  collect
    (string \n                            (code-char \n                              (+
    64 (read-from-string (string (aref str i))))))))))\n(defun print-alpha (num)\n
    \ (mapcar #'(lambda (str)\n              (format t \"~a, \" (27-to-alpha str)))\n
    \         (let ((offset 0))\n            (labels ((next-offset (n offset)\n                                  (if
    (null (search \"0\" (format nil \"~27r\" (+ n offset))))\n                                    offset\n
    \                                   (next-offset n (1+ offset)))))\n              (loop
    for i from 1 to num \n                    do (setf offset (next-offset i offset))\n
    \                   collect (format nil \"~27r\" (+ i offset))))))\n  nil)\n"
  :tags:
  - clisp
  :references:
    :url: 
    :title: 
- :id: '933'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/933
  :user_name: odz
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/212/
  :language: Haskell
  :time: 2007/07/15 15:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  単純な基数変換ではないことに気づいて日和る\n\t"
  :code: |
    import Char

    next :: String -&gt; String
    next [] = "A"
    next ('Z':cs) = 'A' : next cs
    next (c:cs) = chr(ord(c) + 1) : cs

    main :: IO ()
    main = mapM_ (putStrLn . reverse) $ take 100 $ iterate next "A"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '963'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/963
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: Perl
  :time: 2007/07/16 04:12 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  Excel桁表示 的 数記法 の一般解です。\r\n\r\n基数は A～Z の 26進数 にだけでなく、どんな基数に対しても機能します。(例えば、A～E
    の 5進数 でも使えます。)\r\n\r\nまた、変換の対象となる数に上限はありません。(2桁になる数だけでなく、3桁でも4桁でもいけます。)\r\n\r\nPerl
    で書いたので、若干読みにくいかも知れません。\n\t"
  :code: |
    # 各基数に対する文字表記 ('A' から始まる文字に変換します)
    sub toNumeral {return chr (ord ('A') + $_[0]) ;}

    # 自然数 (第1引数) を Excel 桁的な表記へ変換する一般解。
    # 与える数の上限はありません。
    # また、基数 (第2引数) を変えれば、何進数にでもできます。
    sub toExcelNumeral
      {
      local ($number) = $_[0] ;
      local ($radix) = $_[1] ;

      if ($number &lt;= $radix)
        # 1桁になる数の場合はそのまま出力
        {return &amp;toNumeral ($number - 1) ;}
      else
        # 2桁以上になる場合は、上位の桁については再帰し、
        # 最下位1桁については文字化して、両者を結合する。
        {return &amp;toExcelNumeral (int (($number - 1) / $radix), $radix)
              . &amp;toNumeral (($number - 1) % $radix) ;}
      }

    # 基数。今回は A～Z の 26進数。
    local ($radix) = 26 ;

    for ($i=1; $i&lt;=100; ++$i)
      {print &amp;toExcelNumeral ($i, $radix) . "\n" ;}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1017'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1017
  :user_name: こう。
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2007/07/17 00:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  シンプルに\n\t"
  :code: "#include &lt;stdio.h&gt;\n\nvoid put_a2z(){\n\tint i,div;\n\tfor(i=0;i&lt;100;i++){\n\t\tif(i)
    putchar(',');\n\t\tif(div=i/26) putchar('A'+div-1);\n\t\tputchar('A'+i%26);\n\t}\n\tputchar('\\n');\n}\n\nint
    main(){\n\tput_a2z();\n\treturn 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1018'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1018
  :user_name: nobsun
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2007/07/17 02:22 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">コマンドライン引数で表示個数を指定</pre>\n\t"
  :code: "module Main (main) where\nimport Data.List (intersperse)\nimport System.Environment
    (getArgs)\n\nmain :: IO ()\nmain  = getArgs &gt;&gt;= putStrLn . concat . intersperse
    \", \" . cols . read . head\ncols :: Int -&gt; [String]\ncols = flip take $ concat
    $ tail \n     $ iterate (\\ ss -&gt; [ c:cs | c &lt;- alphabet, cs &lt;- ss ])
    [\"\"]\nalphabet :: [Char]\nalphabet = ['A'..'Z']\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1021'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1021
  :user_name: raynstard
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/127/
  :language: Perl
  :time: 2007/07/17 04:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">この投稿で思い出した。ワンライナー\r\n100固定(笑</pre>\n\t"
  :code: |
    print $_ . "\n" foreach 'A' .. 'CV';
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1022'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1022
  :user_name: raynstard
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/127/
  :language: 
  :time: 2007/07/17 05:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  あれ？ログイン失敗してるorz\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1024'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1024
  :user_name: にしお
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/17 06:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  修正しておきました。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1030'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1030
  :user_name: JDO
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/257/
  :language: Java
  :time: 2007/07/17 11:49 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">Java です。 1～100 の整数を変換して文字にするわけではありませんが、A～CV
    の文字列を生成います。\r\n\r\nアプローチとしては、一桁一桁を カウンター に見立てて、Counter なるオブジェクト としてし、桁あふれが起きた場合に、新しい桁の
    Counter オブジェクトを生成するというものです。\r\n\r\nハードウェア的な考え方ですね。\r\n</pre>\n\t"
  :code: |
    class Counter
      {
      static final String [] NUMERALS
        = {"A","B","C","D","E","F","G","H","I","J",
           "K","L","M","N","O","P","Q","R","S","T",
           "U","V","W","X","Y","Z"} ;

      private int status ;
      private Counter next ;

      public Counter ()
        {
        this.status = 0 ;
        this.next = null ;
        }


      public String getCurrentValue ()
        {
        if (this.next == null)
          {return Counter.NUMERALS [this.status] ;}

        else
          {return this.next.getCurrentValue () + Counter.NUMERALS [this.status] ;}
        }


      public void successor ()
        {
        this.status = (this.status + 1) % Counter.NUMERALS.length ;

        if (this.status==0)
           {
           if (this.next == null)
             {this.next = new Counter () ;}
           else
             {this.next .successor () ;}
           }
        }



      public static void main (String [] args)
        {
        Counter c = new Counter () ;
        for (int i=0; i&lt;100; ++i)
          {
          System.out .println (c .getCurrentValue ()) ;
          c .successor () ;
          }
        }
      }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1034'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1034
  :user_name: ko1
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/159/
  :language: Ruby
  :time: 2007/07/17 14:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  'A' をどうするか悩んだ。\n\t"
  :code: |
    puts([s = 'A', (2..100).map{s = s.succ}].join(", "))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1035'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1035
  :user_name: eban
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/97/
  :language: Ruby
  :time: 2007/07/17 14:17 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\n\t  なるほど\n\t"
  :code: |
    puts [*"A".."CV"]*","
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1037'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1037
  :user_name: kacchi
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/145/
  :language: Scheme
  :time: 2007/07/17 15:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">AAA以降にも対応してみました。</pre>\n\t"
  :code: |
    (define (number-&gt;excel n)
      (define (refs n)
        (let ((quo (quotient (- n 1) 26))
              (rem (remainder (- n 1) 26)))
          (if (&lt; quo 27) (list quo rem)
              (append (refs quo) (list rem)))))

      (let ((alpha (lambda (i) (integer-&gt;char (+ 65 i))))
            (ls (refs n)))
        (with-output-to-string
            (lambda ()
              (display
               (if (zero? (car ls)) ""
                   (alpha (- (car ls) 1))))
              (for-each (lambda (x) (display (alpha x))) (cdr ls)))))
      )

    (let loop ((n 1) (m 100))
      (cond ((&lt;= n m)
             (display (number-&gt;excel n))
             (and (not (= n m)) (display ", "))
             (loop (+ n 1) m))
            (else (display #\newline))))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '1039'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1039
  :user_name: kacchi
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/145/
  :language: Emacs
  :time: 2007/07/17 15:06 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  Scheme版と同じく、Emacs LispでもAAA以降に対応してみました。\n\t"
  :code: "(require 'cl)\n\n(defun number-&gt;excel (n)\n  (labels ((refs (n)\n\t     (let
    ((quo (/ (- n 1) 26))\n\t\t   (rem (% (- n 1) 26)))\n\t       (if (&lt; quo 27)
    (list quo rem)\n\t\t   (append (refs quo) (list rem)))))\n\t   (alpha (i) (string
    (+ 65 i))))\n    (let ((ls (refs n)) (result \"\"))\n      (setq result\n\t    (if
    (zerop (car ls))\n\t\t\"\"\n\t      (alpha (- (car ls) 1))))\n      (dolist (x
    (cdr ls) result)\n\t(setq result (concat result (alpha x)))))))\n\n(defun insert-nums
    (m)\n  (let ((n 1) (m m))\n    (while (&lt;= n m)\n      (insert (excel-number
    n))\n      (and (/= n m) (insert \", \"))\n      (setq n (+ n 1)))))\n\n(insert-nums
    100)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1041'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1041
  :user_name: kacchi
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/145/
  :language: 
  :time: 2007/07/17 15:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  あら、違ってた。21行目 excel-number を number-&gt;excel に変更。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1043'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1043
  :user_name: JDO
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/257/
  :language: Prolog
  :time: 2007/07/17 17:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Prolog です。\r\n\r\nいくつか前のスレッドですが、\"Counter\"
    という Java での実装をしました。\r\n\r\nその時に気がついたこととして、ひとつの桁に注目してみると、\r\nA, B, C, A, B, … の繰り返しであることに注目してみました。\r\n\r\n1桁目は、numeral1
    というホーン節で実装していますが、単純に \r\nA, B, C, … の繰り返しだけで十分です。\r\n\r\n2桁目は、numeral2 というホーン節で実装していますが、1桁目の
    \r\n繰り上がりの回数に対して、A, B, C, … 繰り返します。\r\n\r\nついでに 3桁目も作りました。\r\n\r\n   ?- main.
    \r\n\r\nで実行です。\r\n\r\nできれば、リスト形式にして、任意桁を扱えるようにしたかったのですが、\r\nProlog 初心者なので、無理でした。\r\n\r\nどなたか、Prolog
    に詳しい方、ご指摘ありましたら、お寄せください。</pre>\n\t"
  :code: "★ ある文字の次の文字が何かを登録\n\nsuccNumeral('A', 'B').\nsuccNumeral('B', 'C').\nsuccNumeral('C',
    'D').\nsuccNumeral('D', 'E').\nsuccNumeral('E', 'F').\nsuccNumeral('F', 'G').\nsuccNumeral('G',
    'H').\nsuccNumeral('H', 'I').\nsuccNumeral('I', 'J').\nsuccNumeral('J', 'K').\nsuccNumeral('K',
    'L').\nsuccNumeral('L', 'M').\nsuccNumeral('M', 'N').\nsuccNumeral('N', 'O').\nsuccNumeral('O',
    'P').\nsuccNumeral('P', 'Q').\nsuccNumeral('Q', 'R').\nsuccNumeral('R', 'S').\nsuccNumeral('S',
    'T').\nsuccNumeral('T', 'U').\nsuccNumeral('U', 'V').\nsuccNumeral('V', 'W').\nsuccNumeral('W',
    'X').\nsuccNumeral('X', 'Y').\nsuccNumeral('Y', 'Z').\nsuccNumeral('Z', 'A').\n\n★
    整数から文字に変換...\n\nnumberToNumeral(0, '').\nnumberToNumeral(1, 'A').\nnumberToNumeral(X_,
    Numeral_) :- succ(X, X_), numberToNumeral(X, Numeral), succNumeral(Numeral, Numeral_).\n\n★
    桁上がりする数、例えば 27 (=26+1), 53(=26+26+1), などでは 1 になる。\n\ncarryOver(X_, 1) :- succ(X,
    X_), numberToNumeral(X, S), succNumeral(S, 'A'), !.\ncarryOver(X, 0).\n\n★ 桁上がりの回数の総和をとる。
    1～26 なら 0、27～52 なら 1, … というように。\n\nsumCarryOver(0,0).\nsumCarryOver(X_, CO_) :-
    carryOver(X_, Delta), succ(X, X_), sumCarryOver(X, CO), plus(Delta, CO, CO_).\n\n★
    各桁の \"カウンター\" 実装部\n\nnumeral1(X, Numeral) :- numberToNumeral(X, Numeral).\nnumeral2(X,
    Numeral) :- sumCarryOver(X, CO1), numberToNumeral(CO1, Numeral).\nnumeral3(X,
    Numeral) :- sumCarryOver(X, CO1), sumCarryOver(CO1, CO2), numberToNumeral(CO2,
    Numeral).\n\n★ 3桁分つなげてひとつの文字列に...\n\nexcelNumeral3(X,S) :- numeral1(X,N1), numeral2(X,N2),
    numeral3(X,N3), string_concat(N3,N2,N32), string_concat(N32,N1,S).\n\n\n\n☆ 実行用のユーティリティ
    数列 [1,2,3,…] を ['A','B','C',…] に一気に変換\n\ntoExcelNumerals([],[]).\ntoExcelNumerals([X|XS],[S|SS])
    :- excelNumeral3(X,S), toExcelNumerals(XS,SS).\n\n☆ 数列を生成 [From, From+1, From+2,
    …, To-1, To]\n\nseriesFromTo(To,To,[To]).\nseriesFromTo(From,To,[From|Rest]) :-
    succ(From,From_), seriesFromTo(From_,To,Rest).\n\n☆ リストを印刷\n\nprintStringList([]).\nprintStringList([X|XS])
    :- print(X), print(' '), printStringList(XS).\n\n☆ 1～100 でお試し... \n\nmain :- seriesFromTo(1,100,Series),
    toExcelNumerals(Series, ExcelNumerals), printStringList(ExcelNumerals).\n\n?-
    main.\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1044'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1044
  :user_name: JDO
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/257/
  :language: JavaScript
  :time: 2007/07/17 17:59 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  Prolog は分かりにくいので、主要な部分だけ、JavaScript に 意訳 しました。\r\n\r\n本来、非決定性計算機 の
    Prolog を 決定性計算 の JavaScript に翻訳はできないのですが、\r\nやろうとしている内容の翻訳にはなっています。\r\n\r\n一述語づつ、逐語訳しました。\r\n\n\t"
  :code: |
    function succNumeral (S)
      {
      if (S=="A") return "B" ;
      if (S=="B") return "C" ;
      if (S=="C") return "D" ;
      if (S=="D") return "E" ;
      if (S=="E") return "F" ;
      if (S=="F") return "G" ;
      if (S=="G") return "H" ;
      if (S=="H") return "I" ;
      if (S=="I") return "J" ;
      if (S=="J") return "K" ;
      if (S=="K") return "L" ;
      if (S=="L") return "M" ;
      if (S=="M") return "N" ;
      if (S=="N") return "O" ;
      if (S=="O") return "P" ;
      if (S=="P") return "Q" ;
      if (S=="Q") return "R" ;
      if (S=="R") return "S" ;
      if (S=="S") return "T" ;
      if (S=="T") return "U" ;
      if (S=="U") return "V" ;
      if (S=="V") return "W" ;
      if (S=="W") return "X" ;
      if (S=="X") return "Y" ;
      if (S=="Y") return "Z" ;
      if (S=="Z") return "A" ;
      }


    function numberToNumeral(X_)
      {
      if (X_==0) return "" ;
      if (X_==1) return "A" ;

      var X = X_ - 1 ;
      var Numeral = numberToNumeral(X) ;
      var Numeral_ = succNumeral(Numeral) ;
      return Numeral_ ;
      }


    function carryOver (x)
      {
      var Numeral  = numberToNumeral (x-1) ;
      var Numeral_ = succNumeral (numeral) ;
      if (Numeral_ == "A") return 1 ;

      return  0 ;
      }

    function sumCarryOver (X_)
      {
      if (X_==0) return 0 ;

      var Delta = carryOver (X_) ;
      var X = X_ - 1 ;
      var CO = sumCarryOver (X) ;
      var CO_ = Delta + CO ;
      return CO_ ;
      }

    function numeral1 (X)
      {
      var Numeral = numberToNumeral (X) ;
      return Numeral ;
      }

    function numeral2 (X)
      {
      var CO1 = sumCarryOver (X) ;
      var Numeral = numberToNumeral (CO1) ;
      }

    function numeral3 (X)
      {
      var CO1 = sumCarryOver (X) ;
      var CO2 = sumCarryOver (CO1) ;
      var Numeral = numberToNumeral (CO2) ;
      return Numeral ;
      }

    function excelNumeral3 (X)
      {
      var N1 = numeral1 (X) ;
      var N2 = numeral2 (X) ;
      var N3 = numeral3 (X) ;
      var N32 = N3 + N2 ;
      var S = N32 + N1 ;
      return S ;
      }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1045'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1045
  :user_name: JDO
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/257/
  :language: JavaScript
  :time: 2007/07/17 18:07 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  JavaScriptの方、目視で、バグ発見。修正します。\r\n\n\t"
  :code: |
    function carryOver (X_)
      {
      var X = X_ - 1 ;
      var Numeral  = numberToNumeral (X) ;
      var Numeral_ = succNumeral (Numeral) ;
      if (Numeral_ == "A") return 1 ;

      return  0 ;
      }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1046'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1046
  :user_name: JDO
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/257/
  :language: JavaScript
  :time: 2007/07/17 18:19 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  JavaScript、さらにバグ発見。 numeral2 に return 文ついてない。。。\r\n\r\n\r\nついでなので、実際に走る、お試しコードもつけます。Internet
    Explore で確認しました。\r\n\n\t"
  :code: |
    修正版:

    function numeral2 (X)
      {
      var CO1 = sumCarryOver (X) ;
      var Numeral = numberToNumeral (CO1) ;
      return Numeral ;
      }

    お試しコード

    var buffer = '' ;
    for (i=1;i&lt;100;++i)
      {buffer += excelNumeral3(i) + ' ' ;}
    alert (buffer) ;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1047'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1047
  :user_name: JDO
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/257/
  :language: 
  :time: 2007/07/17 19:18 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  このサイトの目的は、たぶん、\r\n結果を出すコードを書くだけというよりは、\r\nいろいろな考え方を競うというものでしょうから、逆に、ひとつの問題を多角的にいろんなアプローチするのがいいと思いますょ。\r\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1049'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1049
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/07/18 01:33 GMT
  :vote_count: '6'
  :vote_score: '6'
  :body: "\n\t  変形26進法ですね\r\n\n\t"
  :code: |
    nums = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

    def convert(n):
      digit = nums[n % len(nums)]
      n = n/len(nums)
      if n:
        return convert(n - 1) + digit
      return digit

    for i in range(0, 1000):
      print convert(i)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1051'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1051
  :user_name: nori
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/59/
  :language: 
  :time: 2007/07/18 05:14 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  ログインし忘れた orz\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1052'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1052
  :user_name: kacchi
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/145/
  :language: Emacs
  :time: 2007/07/18 05:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">#1049のPythonのコードをEmacsLispで書いてみました。こういうの書けるようになりたいなぁ。</pre>\n\t"
  :code: |
    (defun convert (n)
      (let* ((nums "ABCDEFGHIJKLMNOPQRSTUVWXYZ")
             (digit (string (aref nums (% (- n 1) (length nums)))))
             (n (/ (- n 1) (length nums))))
        (if (not (zerop n))
            (concat (convert n) digit)
          digit)))

    (defun insert-nums (m)
      (let ((n 1) (m m))
        (while (&lt;= n m)
          (insert (convert n))
          (and (/= n m) (insert ", "))
          (setq n (+ n 1)))))

    (insert-nums 1000)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1053'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1053
  :user_name: kacchi
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/145/
  :language: Scheme
  :time: 2007/07/18 05:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  同じく#1049のPythonのコードをSchemeで。\n\t"
  :code: "(define (convert n)\n  (let* ((nums \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n\t
    (digit (string (string-ref nums (remainder (- n 1) (string-length nums)))))\n\t
    (n (quotient (- n 1) (string-length nums))))\n    (if (not (zero? n))\n\t(string-append
    (convert n) digit)\n        digit)))\n\n(let loop ((n 1) (m 1000))\n  (cond ((&lt;=
    n m)\n         (display (convert n))\n         (and (not (= n m)) (display \",
    \"))\n         (loop (+ n 1) m))\n        (else (display #\\newline))))\n"
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '1057'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1057
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: PHP
  :time: 2007/07/18 07:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ほんまやね。</pre>\n\t"
  :code: |
    for ($i = "A"; $i &lt;= "Z"; $i++) {echo "&lt;br&gt;".$i; if($i=="CV"){break;} }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1059'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1059
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: Other
  :time: 2007/07/18 08:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ちゃんとカンマつきで一行で表示されるように修正。</pre>\n\t"
  :code: |
    $s = array();
    for ($i = "A"; $i &lt;= "Z"; $i++) {$s[] = $i; if($i=="CV"){break;} }
    print implode(",", $s);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1060'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1060
  :user_name: rucker
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/130/
  :language: 
  :time: 2007/07/18 08:21 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  $i &lt;= \"Z\" って条件は無意味じゃないかな\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1063'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1063
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/07/18 11:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  それが\r\nfor ($i = \"A\"; $i &lt;= \"CV\"; $i++) {～}\r\nってすると\r\nA,B,Cまでしか表示されないのです。\r\nいい方法ないかなあ\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1068'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1068
  :user_name: sybian
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/217/
  :language: JavaScript
  :time: 2007/07/18 13:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  あんまり美しくない。2桁にまでしか対応してないし。\n\t"
  :code: |
    var toAlpha=function(num){
        return (0 &lt;= num  &amp;&amp; num &lt;= 26) ? String.fromCharCode(65 + num) : "";
    }
    for(var i=0,result=[]; i&lt;100; i++){
        var dgt2=Math.floor(i/ 26)-1;
        var dgt1=i % 26;
        var letter = toAlpha(dgt2) + toAlpha(dgt1);
        result.push(letter);
    }
    alert(result.join(","));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1072'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1072
  :user_name: sybian
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/217/
  :language: JavaScript
  :time: 2007/07/18 13:58 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  ネイティブオブジェクト拡張＋無限桁対応にしてみた。\n\t"
  :code: |
    Number.prototype.toAlpha=function(){
        var up=Math.floor(this/26)-1;
        if(up &lt; 0){
            return String.fromCharCode(65 + this);
        }else{
            return up.toAlpha()+(this-26-(26*up)).toAlpha();
        }
    }

    for(var i=0,result=[]; i&lt;600; i++){
        result.push(i.toAlpha());
    }
    alert(result.join(","));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1074'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1074
  :user_name: rucker
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/130/
  :language: PHP
  :time: 2007/07/18 14:41 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">数値の大小比較と文字列の大小比較はちょっと違いますからね。\r\nいっそ\r\nfor
    ($i = \"A\";; $i++) {$s[] = $i; if($i==\"CV\"){break;} }\r\nでいいと思うし、\r\nできるだけシンプルにってことなら私ならこう↓書くかな…</pre>\n\t"
  :code: |
    &lt;?php
    for ($i = "A"; $i != "CV"; $i++) echo $i,", "; echo $i,"\n";
    ?&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1094'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1094
  :user_name: nochi
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/269/
  :language: PHP
  :time: 2007/07/19 09:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    &lt;?php
    $ar = array();
    for($j=0, $c='A'; $j&lt;100; $j++, $c++) {
      $ar []= $c;
    }
    echo join(',', $ar);
    ?&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1316'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1316
  :user_name: katsu
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/117/
  :language: Prolog
  :time: 2007/07/22 01:16 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  関数型言語的実装です。\n\t"
  :code: |
    r27(N,X):-r27(N,[],X).
    r27(N,R,[N|R]):-N&lt;26,!.
    r27(N,R,X):-Ndiv is N // 26 - 1, Nmod is N mod 26, !,r27(Ndiv,[Nmod|R],X).

    codes_alpha(L,S):-maplist(plus(65),L,S0),string_to_list(S,S0).

    :-numlist(0,99,L),maplist(r27,L,L1),maplist(codes_alpha,L1,L2),writeln(L2).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1317'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1317
  :user_name: katsu
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/117/
  :language: Prolog
  :time: 2007/07/22 01:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  同、バックトラック版。9行目がprologらしい？\n\t"
  :code: |
    r27(N,X):-r27(N,[],X).
    r27(N,R,[N|R]):-N&lt;26,!.
    r27(N,R,X):-Ndiv is N // 26 - 1, Nmod is N mod 26, !,r27(Ndiv,[Nmod|R],X).

    genalpha(X):-between(0,99,N),r27(N,L),codes_alpha(L,X).

    codes_alpha(L,S):-maplist(plus(65),L,S0),string_to_list(S,S0).

    :-findall(X,genalpha(X),Xs),writeln(Xs).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1353'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1353
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/07/23 00:13 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  おお、なるほど～。こう書くことができるんですね。勉強になりました。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1378'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1378
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2007/07/24 05:42 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  Number.toString(進数)を使って無理やり。\n\t"
  :code: |
    Number.prototype.toAlpha = function Number_toAlpha(n) {
      return this.toString(26).replace(/./g, function(c) {
        var code = c.charCodeAt(0);
        return String.fromCharCode(code + (code &lt; 58? 49 : 10));
      });
    }
    var array = []
    for(var i=0; i&lt;100; i++) {
      array.push(' ' + i.toAlpha());
    }
    alert(array.join(' '));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1381'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1381
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2007/07/24 06:06 GMT
  :vote_count: '2'
  :vote_score: '-2'
  :body: "\n\t  a==1か... orz\r\n\r\n無理やり修正した。26が特にひどい。\r\n\n\t"
  :code: |
    Number.prototype.toAlpha = function Number_toAlpha() {
      if(this == 26) return 'z';
      return this.toString(26).replace(/./g, function(c) {
        var code = c.charCodeAt(0);
        return c == '0' ? 'z' :
               c == 'z' ? 'a' :
               String.fromCharCode(code + (code &lt; 58 ? 48 : 9));
      });
    }
    var array = []
    for(var i=1; i&lt;=100; i++) {
      array.push(i.toAlpha());
    }
    alert(array.join(' '));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1383'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1383
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2007/07/24 06:11 GMT
  :vote_count: '2'
  :vote_score: '-2'
  :body: "\n\t  まだ間違ってた...orz\n\t"
  :code: |
    Number.prototype.toAlpha = function Number_toAlpha() {
      var n = this
      if(n % 26 == 0) n = this - 26;
      return n.toString(26).replace(/./g, function(c) {
        var code = c.charCodeAt(0);
        return c == '0' ? 'z' :
               String.fromCharCode(code + (code &lt; 58 ? 48 : 9));
      });
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1403'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1403
  :user_name: にしお
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/24 09:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  修正しておきました\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1406'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1406
  :user_name: にしお
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/1/
  :language: Python
  :time: 2007/07/24 10:02 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  Pythonで書いてみました。\n\t"
  :code: |
    def to_numeral(i):
        return chr(ord("A") + i)

    def to_excel_numeral(number, radix):
        n = number - 1
        if number &lt;= radix:
            return to_numeral(n)
        else:
            upper = to_excel_numeral(n / radix, radix)
            tail = to_numeral(n % radix)
            return upper + tail

    RADIX = 26
    for i in range(1, 101):
        print to_excel_numeral(i, RADIX)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1640'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1640
  :user_name: morchin
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/78/
  :language: Python
  :time: 2007/08/01 04:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">各桁の値(インデックス)を保持する方針で実装してみました。\r\n記号を渡せるように一般化して、ついでに、16進数で1から100まで表示してみました。\r\n</pre>\n\t"
  :code: "def counter(symbols, init_idx=-1):\n\tnums = {}  # nums stand for index
    for each digit.\n\twhile True:  # get next value\n\t\t# 1 count up\n\t\tdigit
    = 0\n\t\twhile True:\n\t\t\tif nums.get(digit, 0) == len(symbols) - 1:\n\t\t\t\tdigit
    += 1\n\t\t\t\tfor i in range(digit):\n\t\t\t\t\tnums[i] = 0\n\t\t\telse:\n\t\t\t\tnums[digit]
    = nums.get(digit, init_idx) + 1\n\t\t\t\tbreak\n\t\t# get count value\n\t\tn =
    []\n\t\tfor k in sorted(nums):\n\t\t\tn.append(symbols[nums[k]])\n\t\tyield ''.join(n[::-1])\n\nif
    __name__ == '__main__':\n\tfrom itertools import takewhile\n\tc = counter('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\tprint
    ', '.join(takewhile(lambda a: a!='CW', c))\n\n\tc = counter('0123456789ABCDEF',
    0)\n\tprint ', '.join(takewhile(lambda a: a!='101', c))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1715'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1715
  :user_name: tomatsu
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/323/
  :language: Pnuts
  :time: 2007/08/02 12:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    function alphabets(){
       a=int('A')
       z=int('Z')
       for (i: a .. z){
         yield string(char(i))
       }
       for (i: a .. z){
         for (j: a .. z){
            yield string(char(i))+string((char(j)))
         }
       }
    }

    println(join(",",list(alphabets()[0..99])))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1747'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1747
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2007/08/02 19:08 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  \"CV\"まで出れば良いんだろという割り切りで\n\t"
  :code: "function A2CV(){\n\tfor(tmp=[],j=0;;j++)\n\t\tfor(i=0;i&lt;26;i++)\n\t\t\tif(tmp.push([\"\",\"A\",\"B\",\"C\"][j]+String.fromCharCode(\"A\".charCodeAt(0)+i))==100)return
    tmp;\n}\nalert(A2CV());\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1886'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1886
  :user_name: hirose31
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/334/
  :language: PostScript
  :time: 2007/08/05 17:55 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\">とりあえずー</pre>\n\t"
  :code: "%!\n/inch {72 mul} bind def\n/sheetheight 11.64 inch def\n/sheetwidth   8.27
    inch def\n/Helvetica 12 selectfont\n\n/dx [ 100 ] def\n\n/alpha [ ( ) (A) (B)
    (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U) (V)
    (W) (X) (Y) (Z) ] def\n\n/AA { % n\n    1 sub\n    dup\n    26 div cvi\n    alpha
    exch get show\n    26 mod 1 add\n    alpha exch get show\n} def\n\n1 1 100 {\n
    \   % move to draw point\n    dup 1 sub 50 mod 1 add 12 mul sheetheight exch sub\n
    \   dx 0 get\n    exch moveto\n    dup 50 eq { dx 0 200 put } if\n\n    % draw
    label\n    dup \n    3 string cvs show\n    (:) show\n\n    % draw AA style number\n
    \   AA\n} for\n\nshowpage\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1902'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/1902
  :user_name: naoya_t
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/348/
  :language: awk
  :time: 2007/08/06 03:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">トリッキーな事は特にせず\r\n\r\n% awk -f excel.awk\r\nA,
    B, .... , CV\r\n% awk -f excel.awk -v till=10000\r\nA, B, .... , ZZ, AAA, AAB,
    ... , NTP</pre>\n\t"
  :code: "BEGIN {\n\tif (till &lt; 1) till = 100;\n\tfor (i=1; i&lt;=till; i++)\n\t\tprintf(\"%s%s\",
    excel(i), (i &lt; till)? \", \" : \"\\n\");\n\texit;\n}\n\nfunction excel(x,  s,t)\n{\n\ts
    = \"\";\n\tdo {\n\t\ts = substr(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", 1+((x - 1) % 26),
    1) s;\n\t\tx = int((x - 1) / 26);\n\t} while (x &gt; 0);\n\treturn s;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2054'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/2054
  :user_name: jz5
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/344/
  :language: VB
  :time: 2007/08/10 03:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">IIfなんて普段使いませんが。</pre>\n\t"
  :code: |
    For i As Integer = 1 - 1 To 100 - 1
        Console.Write(CStr(IIf(i \ 26 &gt; 0, Chr(64 + i \ 26), "")) &amp; Chr(65 + i Mod 26) &amp; CStr(IIf(i &lt;&gt; 99, ", ", "")))
    Next
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2117'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/2117
  :user_name: カノエ
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/376/
  :language: SQL
  :time: 2007/08/13 14:25 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">動作確認はMySQLのみ。\r\n\r\nPostgreSQLでもsubstr()は同じように動作するはず。\r\nただし、文字列の連結はconcat()ではなく、||。</pre>\n\t"
  :code: |
    drop table if exists num_chars;
    create table num_chars(id int not null);
    insert into num_chars
      values (0), (1), (2), (3), (4), (5), (6), (7), (8), (9);

    drop table if exists nums;
    create table nums as (
      select n1.id + (n2.id * 10) + (n3.id * 100) as id
      from num_chars n1, num_chars n2, num_chars n3);

    select
      concat(
        substr(chars.c, floor((n.id-1) / length(chars.c)), 1)
      , substr(chars.c, ((n.id-1) % length(chars.c))+1, 1)
      ) as c
    from (select 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' as c) as chars
      , (select * from nums) as n
    where n.id &gt;= 1
      and n.id &lt;= 100
    ;
  :tags:
  - MySQL
  :references:
    :url: 
    :title: 
- :id: '2127'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/2127
  :user_name: matyr
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/343/
  :language: JavaScript
  :time: 2007/08/13 23:03 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  Ruby風のsuccを実装してみた。\n\t"
  :code: "String.prototype.succ = function(){\n\tif(!this) return this;\n\tvar last
    = this.slice(-1), rest = this.slice(0, -1);\n\tvar crr = { 9:\"0\", z:\"a\", Z:\"A\",
    \"９\":\"０\", \"ｚ\":\"ａ\", \"Ｚ\":\"Ａ\", \"ω\":\"α\", \"Ω\":\"Α\",\n\t\t\"Я\":\"А\",
    \"я\":\"а\", \"ⓩ\":\"ⓐ\", \"⒵\":\"⒜\", \"⑳\":\"①\", \"ﾝ\":\"ｱ\" };\n\treturn crr[last]
    ? (rest ? arguments.callee.call(rest) : crr[last]) + crr[last]\n\t\t: rest + String.fromCharCode(last.charCodeAt(0)
    + 1);\n};\nfor(var r = [\"A\"], i = 0; i &lt; 99; i++) r.push(r[r.length - 1].succ());\n(this.WSH
    ? function($){ WSH.echo($) } : alert)(r.join(\", \"));\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2234'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/2234
  :user_name: miyamuko
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/382/
  :language: xtal
  :time: 2007/08/16 13:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">前の桁で生成した値の頭にA..Zを付加するという戦略です。\r\n\r\n無限桁に対応。A-Zの26進数以外もいけます。\r\n\r\nただ、メモリの消費量が激しいです。</pre>\n\t"
  :code: |
    ExcelNumber: class {
        + _chars: "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

        + generate: method fiber {
            before: [""];
            while (true) {
                before = generate_and_yield(before);
            }
        }

        - generate_and_yield: method(before) {
            r: [];
            _chars.split("") {|c|
                before {|b|
                    n: c ~ b;
                    r.push_back(n);
                    yield n;
                }
            }
            return r;
        }
    }

    excelnum: ExcelNumber();
    excelnum.generate.take(100).to_a.p;

    excelnum.chars = "abc";
    excelnum.generate.take(100).to_a.p;
  :tags:
  - xtal0.9.7
  :references:
    :url: 
    :title: 
- :id: '2263'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/2263
  :user_name: lkr
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/393/
  :language: Ruby
  :time: 2007/08/17 07:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">わかりやすく</pre>\n\t"
  :code: |
    s='A'

    items=[]
    (1..100).each{
            items &lt;&lt; s.clone
            s.succ!
    }

    puts items.join(', ')
  :tags:
  - ruby
  :references:
    :url: 
    :title: 
- :id: '2680'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/2680
  :user_name: yohei
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/415/
  :language: C
  :time: 2007/08/30 08:22 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">今更ですが、Cでも再帰使ったのがなかったので</pre>\n\t"
  :code: "#include &lt;stdio.h&gt;\n\nvoid excel(int n) {\n\tif (--n &gt;= 0) {\n\t\texcel(n
    / 26);\n\t\tputchar('A' + n % 26);\n\t}\n}\n\nint main() {\n\tint i;\n\tfor (i
    = 1; i &lt; 100; i++) {\n\t\texcel(i); printf(\", \");\n\t}\n\texcel(i);\n\treturn
    0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2870'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/2870
  :user_name: minekoa
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/337/
  :language: Smalltalk
  :time: 2007/09/03 11:36 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  ruby の succ が羨ましくなったので ByteString に #succsessor を追加する方向で実装しました。\n\t"
  :code: "ByteString &gt;&gt; successor\n    | num26r buf sucr |\n    num26r := self
    inject: 0 into: [:sum :each |\n            sum * 26 + (each asUppercase asInteger)
    - ($A asInteger -1)].\n\n    buf := num26r +1.\n    sucr _ OrderedCollection new.\n
    \   [buf = 0] whileFalse: [\n        sucr addFirst: (buf -1 \\\\ 26) + ($A asInteger).\n
    \       buf := (buf -1 // 26)].\n    \n    ^ sucr asByteArray asString\n\n\n\n\"以下を
    Workspace 上で Do it!\"\nWorld findATranscript: nil.\n(1 to: 100) inject: 'A' into:
    [:res :dmy |\n        Transcript show: res; show: ' '.\n        res successor]\n"
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '2927'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/2927
  :user_name: 130R
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/409/
  :language: PowerShell
  :time: 2007/09/06 10:53 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">他の基数も対応\r\n$table = [char[]]\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\nprint-excel-header
    1000 $table\r\n\r\n$table = [char[]]\"いろはにほへと\"\r\nprint-excel-header 100 $table\r\n</pre>\n\t"
  :code: "function print-excel-header($count, $table)\n{\n\t$radix = $table.length\n\tforeach
    ($i in 0..($count -1)) {\n\t\t$s = \"\"\n\t\t$p = $i\n\t\tdo {\n\t\t\t$q = $p
    % $radix\n\t\t\t$p = [math]::truncate($p / $radix) - 1\n\t\t\t$s = $table[$q]
    + $s\n\t\t} while ($p -ne -1)\n\t\t$s\n\t}\n}\n\n\n$table = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nprint-excel-header
    100 $table\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2944'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/2944
  :user_name: ？せんたくいた
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/241/
  :language: sed
  :time: 2007/09/08 14:36 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">codegolfに慣れている人はもっと格好良く書けるんだろうな、と思いつつ\r\nsed
    で succ 実装したよ記念。\r\nsedは入力無いと動き始めないので、適当に改行でも叩いて下さい。\r\n$ echo |./succ.sed 辺りでも可。\r\n\r\n行の中身を捨てて「A」入れる\r\n:loop\r\nCV(=100)が終端なら抜ける。\r\n終端を複製\r\n終端にsucc\r\nloopに戻る\r\n</pre>\n\t"
  :code: |
    #!/bin/sed -f

    s/^.*$/A/

    :loop
    /CV$/q
    s/[A-Z]*$/&amp;,&amp;/

    :succ

    :carry
    s/Z\(_*\)$/_\1/
    t carry
    s/Y\(_*\)$/Z\1/
    s/X\(_*\)$/Y\1/
    s/W\(_*\)$/X\1/
    s/V\(_*\)$/W\1/
    s/U\(_*\)$/V\1/
    s/T\(_*\)$/U\1/
    s/S\(_*\)$/T\1/
    s/R\(_*\)$/S\1/
    s/Q\(_*\)$/R\1/
    s/P\(_*\)$/Q\1/
    s/O\(_*\)$/P\1/
    s/N\(_*\)$/O\1/
    s/M\(_*\)$/N\1/
    s/L\(_*\)$/M\1/
    s/K\(_*\)$/L\1/
    s/J\(_*\)$/K\1/
    s/I\(_*\)$/J\1/
    s/H\(_*\)$/I\1/
    s/G\(_*\)$/H\1/
    s/F\(_*\)$/G\1/
    s/E\(_*\)$/F\1/
    s/D\(_*\)$/E\1/
    s/C\(_*\)$/D\1/
    s/B\(_*\)$/C\1/
    s/A\(_*\)$/B\1/

    s/,_/,A_/
    y/_/A/

    b loop
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3595'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/3595
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: R
  :time: 2007/10/30 09:31 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">&gt; cat(paste(c(\"\", LETTERS[-26])[0:99%/%26+1],
    LETTERS[0:99%%26+1], sep=\"\"))\r\nA B C D E F G H I J K L M N O P Q R S T U V
    W X Y Z AA AB AC AD AE AF AG AH AI AJ AK AL AM AN AO AP AQ AR AS AT AU AV AW AX
    AY AZ BA BB BC BD BE BF BG BH BI BJ BK BL BM BN BO BP BQ BR BS BT BU BV BW BX
    BY BZ CA CB CC CD CE CF CG CH CI CJ CK CL CM CN CO CP CQ CR CS CT CU CV\r\n</pre>\n\t"
  :code: |
    cat(paste(c("", LETTERS[-26])[0:99%/%26+1], LETTERS[0:99%%26+1], sep=""))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3766'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/3766
  :user_name: fujidig
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/507/
  :language: 
  :time: 2007/11/08 14:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |2
        #i = 1;
        while( #i &lt;= 100 ) {
            call excelalpha #i;
            if ( #i != 1 ) {
                insert ", ";
            }
            insert $$return;
            #i = #i + 1;
        }
        endmacro;

    excelalpha:
        $$result = "";
        while ( ##1 != 0 ) {
            ##1 = ##1 - 1;
            $$result = char( ##1 % 26 + 'A' ) + $$result;
            ##1 = ##1 / 26;
        }
        return $$result;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3906'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/3906
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/11/12 09:29 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: |
    iを1から100まで繰り返す
    　　a="";(i&lt;&gt;0)の間;a=a&amp;CHR(65+((i-1)%26));i=INT((i-1)/26)
    　　表示(配列結合(配列逆順(文字列分解(a)),""))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3916'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/3916
  :user_name: dankogai
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/26/
  :language: Perl
  :time: 2007/11/12 16:48 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  \n<p>これまたOne-Linerで。\n</p>\n<p>＃2-36進法をカヴァーする<code>strtol()</code>はあるのにその逆はないんだよなあ。\n</p>\n<p>Dan
    the One-Liner Monger\n</p>\n\n\n\n\t"
  :code: |
    perl -le 'print do{$s="";do{$s.=("A".."Z")[$_%26]}while($_=int($_/26));$s}for 0..(shift)-1' 100
  :tags:
  - oneliner
  :references:
    :url: 
    :title: 
- :id: '3918'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/3918
  :user_name: dankogai
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/26/
  :language: Perl
  :time: 2007/11/12 17:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">すみません。修正前バグ付きのバージョンをコピペしちゃったみたいです(Aの処理)。正解はこちら。\r\nDan
    the Man to Err</pre>\n\t"
  :code: |
    % perl -le \
    'print do{$z=$s="";do{$s=("A".."Z")[$_%26-($z++?1:0)].$s}while($_=int($_/26));$s}for 0..(shift)-1' \
    100 | grep A
    A
    AA
    AB
    AC
    AD
    AE
    AF
    AG
    AH
    AI
    AJ
    AK
    AL
    AM
    AN
    AO
    AP
    AQ
    AR
    AS
    AT
    AU
    AV
    AW
    AX
    AY
    AZ
    BA
    CA
  :tags:
  - oneliner
  :references:
    :url: 
    :title: 
- :id: '3936'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/3936
  :user_name: nantan
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/535/
  :language: Ruby
  :time: 2007/11/13 09:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">単純に考えてみました。</pre>\n\t"
  :code: |
    n = ['','A','B','C','D','E','F','G','H','I','J','K','L', \
        'M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
    limit = 100;
    res = [];
    (0..26).each{|i|
        (1..26).each{|j|
            res.push(n[i] + n[j])
            limit -= 1
            break if limit &lt; 1
        }
        break if limit &lt; 1
    }
    puts res.join(', ')
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4253'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/4253
  :user_name: Psychs
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/554/
  :language: Objective
  :time: 2007/11/19 11:45 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  \n\t"
  :code: |
    #import &lt;Foundation/Foundation.h&gt;

    NSString* toCol(int n)
    {
      NSMutableString* s = [NSMutableString stringWithFormat:@"%C", 'A' + n%26];
      n /= 26;
      while (n &gt; 0) {
        if (n &lt;= 26) {
          [s insertString:[NSString stringWithFormat:@"%C", 'A' + n-1] atIndex:0];
          break;
        }
        n -= 1;
        [s insertString:[NSString stringWithFormat:@"%C", 'A' + n%26] atIndex:0];
        n /= 26;
      }
      return s;
    }

    int main()
    {
      NSAutoreleasePool *pool = [NSAutoreleasePool new];
      int i;
      for (i=0; i&lt;100; i++) {
        NSLog(@"%3d: %@", i+1, toCol(i));
      }
      [pool release];
      return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5039'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/5039
  :user_name: pooq
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2007/12/28 14:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    ;(,', '&amp;;)/100{.(,.abc),(,/,"0/~abc=.&lt;"0(65+i.26){a.)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5142'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/5142
  :user_name: saws
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/642/
  :language: Ruby
  :time: 2008/01/03 11:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>26進数への変換と, 26進数のアルファベットへの変換を行なっているだけです.</p>\n\n\t"
  :code: |
    N = 3000
    class Integer
      def dec2n(n)
        ary = Array.new
        i = self
        while 1
          ary.unshift(i.modulo(n))
          i = i.div(n)
          break if i == 0
        end
        ary
      end
      def hexacos2alph
        (self + 65).chr
      end
    end
    p N.dec2n(26).map{|x| x.hexacos2alph}.join('')
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5224'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/5224
  :user_name: szktty
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/648/
  :language: Other
  :time: 2008/01/08 07:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Mac OS X (PowerPC 32bit) アセンブリで。あまりスマートではありませんが。</p>\n\n\t"
  :code: ";; ------------------------------------------------\n;; alphanext.s for
    Mac OS X (PowerPC 32bit)\n;; % as -o alphanext.o alphanext.s\n;; % gcc alphanext.o
    -o alphanext\n;; ------------------------------------------------\n\n        .machine
    ppc\n        .globl  _main\n        \n        ;; スタックにレジスタを退避するマクロ\n        .macro
    \ PUSH\n                stwu    r3, -4(r1)\n                stwu    r4, -4(r1)\n
    \               stwu    r5, -4(r1)\n                stwu    r6, -4(r1)\n                stwu
    \   r7, -4(r1)\n                stwu    r8, -4(r1)\n                stwu    r9,
    -4(r1)\n                stwu    r10, -4(r1)\n                mflr    r15\n                stwu
    \   r15, -4(r1)\n        .endmacro\n\n        ;; スタックからレジスタを復帰するマクロ\n        .macro
    \ POP\n                lwz     r15, 0(r1)\n                mtlr    r15\n                lwzu
    \   r10, 4(r1)\n                lwzu    r9, 4(r1)\n                lwzu    r8,
    4(r1)\n                lwzu    r7, 4(r1)\n                lwzu    r6, 4(r1)\n
    \               lwzu    r5, 4(r1)\n                lwzu    r4, 4(r1)\n                lwzu
    \   r3, 4(r1)\n                addi    r1, r1, 4\n        .endmacro\n\n        ;;
    スタック退避つきサブルーチン呼び出し\n        .macro  CALL\n                PUSH\n                bl
    \     $0\n                POP\n        .endmacro\n\n;; r7: 表示する最大値\n;; r8: 現在表示中の数値\n;;
    r9: アルファベット\n_main:\n        li      r7, 100\n        li      r8, 0\n        li
    \     r10, 26\n        \n_write_alpha:\n        lis     r4, hi16(temp)\n        addi
    \   r4, r4, lo16(temp)\n        li      r5, 1\n        mr      r11, r4\n\n        divw
    \   r9, r8, r10     ; i / 26\n        cmpli   cr7, r9, 0\n        beq     cr7,
    _write_alpha_rest\n        addi    r9, r9, 64      ; ASCII\n        stb     r9,
    0(r11)\n        subi    r9, r9, 64\n        addi    r11, r11, 1\n        addi
    \   r5, r5, 1\n\n_write_alpha_rest:\n        mullw   r9, r9, r10\n        sub
    \    r9, r8, r9\n        addi    r9, r9, 65      ; ASCII\n        stb     r9,
    0(r11)\n\n        ;; 出力\n        PUSH\n        li      r3, 1\n        li      r0,
    4           ; sys_write()\n        sc\n        POP\n        \n        ;; 繰り返し\n
    \       addi    r8, r8, 1\n        cmpl    cr7, r7, r8\n        ble     cr7, _write_end\n\n
    \       ;; 区切り文字\n        li      r3, 1\n        lis     r4, hi16(sep)\n        addi
    \   r4, r4, lo16(sep)\n        li      r5, 2\n        li      r0, 4           ;
    sys_write()\n        PUSH\n        sc\n        POP\n        \n        b       _write_alpha\n\n_write_end:\n
    \       li      r3, 1\n        lis     r4, hi16(lf)\n        addi    r4, r4, lo16(lf)\n
    \       li      r5, 1\n        li      r0, 4           ; sys_write()\n        sc\n\n
    \       ;; sys_exit()\n        li      r3, 0\n        li      r0, 1\n        sc\n\n\n
    \       .data\n        .align  2\n\ntemp:\n        .asciz  \"  \"\n        .align
    \ 2\n\nsep:\n        .asciz  \", \"\n        .align  2\n\nlf:\n        .asciz
    \ \"\\n\"\n        .align  2\n"
  :tags:
  - Assembly
  - MacOSX
  - PowerPC
  :references:
    :url: 
    :title: 
- :id: '5404'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/5404
  :user_name: pooq
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/606/
  :language: Batchfile
  :time: 2008/01/20 07:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">cmd.exeで。\r\n&gt;abc\r\nA,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV\r\n</pre>\n\t"
  :code: |
    @echo off
    setlocal enabledelayedexpansion
    set abc=A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
    set k=
    set l=
    set n=0
    set m=100
    for %%i in (%abc%) do (
      for %%j in (%abc%) do (
        set l=!l!,!k!%%j
        set /a n=n+1
        if "!n!" == "%m%" goto end
      )
      set k=%%i
    )
    :end
    echo %l:~1%
  :tags:
  - cmd
  :references:
    :url: 
    :title: 
- :id: '5962'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/5962
  :user_name: まさぽん
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/711/
  :language: Arc
  :time: 2008/03/06 06:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Arc にも iota みたいなのが欲しい。\r\n\r\n実行例:\r\narc&gt;
    (make-alnum-list 100)\r\n(A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
    AA AB AC AD AE AF AG AH AI AJ AK AL AM AN AO AP AQ AR AS AT AU AV AW AX AY AZ
    BA BB BC BD BE BF BG BH BI BJ BK BL BM BN BO BP BQ BR BS BT BU BV BW BX BY BZ
    CA CB CC CD CE CF CG CH CI CJ CK CL CM CN CO CP CQ CR CS CT CU CV)</pre>\n\t"
  :code: |
    (def dec-to-ib26-list (x)
      ((rfn lp (x ret)
         (if (is 0 x) ret
             (&lt; (/ x 26) 1) (cons x ret)
             (is (type (/ x 26)) 'int) (lp (- (/ x 26) 1) (cons 26 ret))
             (lp (trunc (/ x 26)) (cons (mod x 26) ret))))
       x nil))

    (def to-alnum (x)
      (apply string (map [coerce (+ _ 64) 'char] (dec-to-ib26-list x))))

    (def iota (x . z)
      (with (limit x
             start (if (car z) (car z) 0)
             step  (if (cadr z) (cadr z) 1))
        (rev (let x nil (repeat limit (do (push start x) (++ start step))) x))))

    (def make-alnum-list (n)
      (map [coerce (to-alnum _) 'sym] (iota n 1 1)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5965'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/5965
  :user_name: g000001
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/405/
  :language: 
  :time: 2008/03/06 08:30 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  似たような機能にはrangeがあるようです。\r<br>私も以前に自作したiotaを投稿してから気づいた\r<br>のですが…^^;\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5968'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/5968
  :user_name: まさぽん
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/711/
  :language: 
  :time: 2008/03/06 14:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">あ〜ホントだ！ありがとうございます。\r\nただ step の指定はできないみたいですね。\r\n今回のお題では関係ありませんが...。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: /web/20100324092312/http://practical-scheme.net/wiliki/arcxref?range
    :title: Arc Cross Reference:range
- :id: '6178'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/6178
  :user_name: komamitsu
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/786/
  :language: OCaml
  :time: 2008/04/16 15:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>OCaml練習中。コンパイルエラーで苦戦…</p>\n\n\t"
  :code: |
    open Char

    let int2alp i =
      let code_base = code 'A' in
      escaped (chr (i + code_base))

    let rec alp_of_int i buf =
      let max = 26 in
      let alp = (int2alp (i mod max)) ^ buf in
      match i / max with
      | 0 -&gt; alp
      | _ -&gt; alp_of_int ((i / max) - 1) alp

    let rec loop n =
      if n &gt;= 100 then ()
      else (print_string (", " ^ (alp_of_int n "")); loop (n + 1))
    ;;

    print_string "A";
    loop 1 (* 1..99 *)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6539'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/6539
  :user_name: genzou
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/793/
  :language: Groovy
  :time: 2008/06/19 10:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    def alpha( num ){
       def alphas = "A".."Z"
       def result = ""

       def mod = num % alphas.size()
       def next = (int)((num-mod)/alphas.size())
       if( next &lt;= 0 ){
           result = alphas[num-1].toString()
       } else {
           result = alpha(next) + alphas[mod-1]
       }

       result
    }

    1..100.each{
        println alpha(it)
    }
  :tags:
  - groovy
  :references:
    :url: 
    :title: 
- :id: '6634'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/6634
  :user_name: turugina
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/760/
  :language: XSLT
  :time: 2008/07/01 04:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">indexが1始まりだと混乱する...</pre>\n\t"
  :code: |
    &lt;xsl:stylesheet version="2.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:fn="http://www.w3.org/2005/xpath-functions"
      xmlns:my="uri:ja.doukaku.org:my-functions"
      exclude-result-prefixes="my"
      &gt;

      &lt;xsl:output method="text" /&gt;

      &lt;xsl:variable name="convert_table" as="xs:string+"&gt;
        &lt;xsl:for-each select="1 to 26"&gt;
          &lt;xsl:sequence
            select="fn:codepoints-to-string(
            (fn:string-to-codepoints('A')[1] + . - 1)
            )" /&gt;
        &lt;/xsl:for-each&gt;
      &lt;/xsl:variable&gt;
      &lt;xsl:variable name="table_size" as="xs:integer"
        select="fn:count($convert_table)" /&gt;

      &lt;xsl:template match="/" &gt;
        &lt;xsl:variable name="seq" as="xs:string*"&gt;
          &lt;xsl:for-each select="1 to 100"&gt;
            &lt;xsl:sequence select="my:alphabeticalize(.)" /&gt;
          &lt;/xsl:for-each&gt;
        &lt;/xsl:variable&gt;

        &lt;xsl:value-of select="fn:string-join($seq, ', ')" /&gt;
        &lt;xsl:text&gt;&amp;#xA;&lt;/xsl:text&gt;
      &lt;/xsl:template&gt;

      &lt;xsl:function name="my:alphabeticalize" as="xs:string"&gt;
        &lt;xsl:param name="n" as="xs:integer" /&gt;

        &lt;xsl:variable name="i" as="xs:integer" select="$n - 1" /&gt;

        &lt;xsl:variable name="n_" as="xs:string"
          select="$convert_table[($i mod $table_size) + 1]" /&gt;

        &lt;xsl:choose&gt;
          &lt;xsl:when test="$i idiv $table_size = 0"&gt;
            &lt;xsl:value-of select="$n_" /&gt;
          &lt;/xsl:when&gt;
          &lt;xsl:otherwise&gt;
            &lt;xsl:value-of
              select="fn:concat(
              my:alphabeticalize($i idiv $table_size),
              $n_)" /&gt;
          &lt;/xsl:otherwise&gt;
        &lt;/xsl:choose&gt;
      &lt;/xsl:function&gt;
    &lt;/xsl:stylesheet&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6727'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/6727
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/07/13 12:34 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">'A' の次が 'BA' になってしまいます。\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6730'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/6730
  :user_name: 匿名
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/07/13 23:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">すみません、間違えました。「'A' の次が 'BA' 」ではなくて「 'Z' の次が
    'BA' 」でした。\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8159'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/8159
  :user_name: taninsw
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/973/
  :language: Haskell
  :time: 2008/12/14 05:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>最初は26進数を考えたのですがアルファベットとのマッピングがうまくいかずあきらめました。</p>\n<p>結局、次の文字列を順番に作っていく関数を作ってiterateで回しました。</p>\n\n\t"
  :code: "import List\nimport Char\n\nnextStr ('Z':[]) = \"AA\"\nnextStr ('Z':xs)
    = 'A':nextStr xs \nnextStr (x:xs)   = nextChr x:xs\n\nnextChr :: Char-&gt;Char\nnextChr
    = chr.(+1).ord \n\nmain = (print.concat.intersperse \",\".map reverse.take 100.iterate
    nextStr) \"A\"\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8520'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/8520
  :user_name: fumokmm
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/856/
  :language: Groovy
  :time: 2009/02/17 22:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>indexから割り出す方法は\n<a class=\"reference\" href=\"/web/20100324092312/http://ja.doukaku.org/comment/6539/\">http://ja.doukaku.org/comment/6539/</a>\nにてgenzouさんが既に投稿しておられるようなので、\n先にリストを作りこんでから出力する方法で実装してみました。</p>\n\n\t"
  :code: |
    println alphaList('A'..'Z', 100)*.join()*.trim().join(', ')

    /** アルファベットのリストを返却 */
    def alphaList(values, num) {
        // 必要な桁を求める
        int digit = {
            int d = 1; int size = values.size()
            while (size &lt; num) { size *= (values.size() + 1); d++ };
            return d
        }()
        // 桁毎の値のリスト
        def digitList = (digit == 1 ? [] : [([' '] + values)] * (digit - 1)) + [values]
        // 組み合わせのリストの先頭からnum個分
        return digitList.reverse().combinations()*.reverse()
            .findAll{ it.join().trim().count(' ') == 0 }[0..&lt;num]
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8562'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/8562
  :user_name: 依田.抑兎e±24
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/1020/
  :language: FORTRAN
  :time: 2009/02/26 13:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">今回はFortran90でやってみました。\r\n最下位桁の処理にとまどっています。\r\n主プログラムに埋め込んである処理を\r\n副プログラムにすると，もっと\r\nFortran90らしさを堪能できるかと\r\n思います。</pre>\n\t"
  :code: |
    PROGRAM ExcelNumbering

        IMPLICIT NONE
        INTEGER, PARAMETER :: MinNum =   1
        INTEGER, PARAMETER :: MaxNum = 100
        INTEGER, PARAMETER :: MaxLen =   7
        INTEGER, PARAMETER :: Radix  =  26
        INTEGER, PARAMETER :: Base   =  64
        INTEGER :: i, j, m, n
        CHARACTER(LEN = MaxLen) :: s = ''

        DO i = MinNum, MaxNum
            n = i
            j = MaxLen

            m = MOD(n, Radix)
            IF (m == 0) THEN
                n = n / Radix
                s(j:j) = CHAR(Base + Radix)
            ELSE
                n = n - m
                s(j:j) = CHAR(Base + m)
            END IF

            DO
                IF (n &lt; Radix) EXIT
                n = n / Radix
                j = j - 1
                s(j:j) = CHAR(Base + n)
            END DO

            WRITE(*, '(A)') s
        END DO

    END PROGRAM ExcelNumbering
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9291'
  :parent_id: '21'
  :url: http://ja.doukaku.org/comment/9291
  :user_name: ところてん
  :user_url: /web/20100324092312/http://ja.doukaku.org/user/166/
  :language: PHP
  :time: 2009/07/05 22:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">PHP勉強中\r\n力任せのコードになってしまって美しくないなぁ。\r\n四桁まで対応。</pre>\n\t"
  :code: "&lt;?php\nprint &lt;&lt;&lt; END_DOC\n&lt;HTML&gt;\n&lt;HEAD&gt;&lt;title&gt;doukaku21&lt;/title&gt;\n&lt;/HEAD&gt;&lt;BODY&gt;\nEND_DOC;\n\nfunction
    doukaku21($max_n)\n{    \n    $alphabet_num = ord(\"Z\") - ord(\"A\") + 1;\n\n
    \   $counter = array(-1,-1,-1,-1);\n    for($i = 0; $i &lt; $max_n; $i++){\n        $counter[0]++;\n
    \       for($j = 0; $j &lt; count($counter); $j++){\n            if($counter[$j]
    == $alphabet_num){\n                $counter[$j] = 0;\n                $counter[$j+1]++;\n
    \           }\n        }\n        \n        for($j = count($counter) - 1; $j &gt;=0
    ; $j--){\n            if($counter[$j] != -1){\n                print chr(ord(\"A\")
    + $counter[$j]);\n            }\n        }\n        print \"&lt;BR&gt;\";\n    }\n}\n\ndoukaku21(1000);\n\nprint
    &lt;&lt;&lt; END_DOC\n&lt;/BODY&gt;\n&lt;/HTML&gt;\nEND_DOC;\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
