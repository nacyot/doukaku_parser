---
:id: '77'
:title: 変形Fizz-Buzz問題
:comments:
- :id: '3758'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3758
  :user_name: raynstard
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/127/
  :language: 
  :time: 2007/11/08 11:36 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\r\n\t  <pre class=\"compact\">どもraynstardです。\r\nどちらにしようか迷いましたが発想の元ネタがUIさんの投稿からなので\r\nこちらに投稿してみます。\r\n--------------\r\n以下の仕様を満たす文字列を\r\n20行出力するプログラムを作成してください。\r\n\r\n1.
    1行の出力は「&lt;行番号&gt; '：' &lt;メッセージ&gt;」であること。\r\n2. 行番号が 3の倍数であるとき、メッセージは「Fizz」であること\r\n3.
    行番号が 5の倍数であるとき、メッセージは「Buzz」であること\r\n4. 行番号が 3の倍数かつ5の倍数であるとき、メッセージは「FizzBuzz」であること\r\n5.
    上記に記した条件以外のメッセージについては「hoge」であること\r\n6. 条件分岐する場合、if文のみが使用でき、\r\n   かつ、論理式が成立した場合の処理のみが記述できます。\r\n#アセンブリなどifがなければif以外でもかまわないです。(意味が同じならば)\r\n\r\nというわけでこの問題はFizz-Buzz問題をelseなしならどう書く？という問題です。\r\n\r\n出力例：\r\n
    1:hoge\r\n 2:hoge\r\n 3:Fizz\r\n 4:hoge\r\n 5:Buzz\r\n 6:Fizz\r\n 7:hoge\r\n 8:hoge\r\n
    9:Fizz\r\n10:Buzz\r\n11:hoge\r\n12:Fizz\r\n13:hoge\r\n14:hoge\r\n15:FizzBuzz\r\n16:hoge\r\n17:hoge\r\n18:Fizz\r\n19:hoge\r\n20:Buzz\r\n</pre>\r\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3792'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3792
  :user_name: ところてん
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/166/
  :language: Python
  :time: 2007/11/10 10:24 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">elseを使わないってのはこういうことなんでしょうか？\r\nelseと同等のコードがcontinueで書けてしまってますが。\r\n\r\n三項演算子を使おうかと思ったけど、三項演算子もelesだよなぁと思った。</pre>\n\t"
  :code: "def FizzBuzz(num):\r\n    for x in xrange(1,num+1):\r\n        if x % 15
    == 0:\r\n            print \"%2d:FizzBuzz\" % x\r\n            continue\r\n        if
    x % 5 == 0:\r\n            print \"%2d:Buzz\" % x\r\n            continue\r\n
    \       if x % 3 == 0:\r\n            print \"%2d:Fizz\" % x\r\n            continue\r\n
    \       print \"%2d:hoge\" % x\r\n        \r\nFizzBuzz(20)\r\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3793'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3793
  :user_name: ところてん
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/166/
  :language: Python
  :time: 2007/11/10 10:27 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">FizzBuzzを表示する行数が可変では無いので、\r\nこの答えでもお題を満たすような気がしてきた。</pre>\n\t"
  :code: "print ''' 1:hoge\r\n 2:hoge\r\n 3:Fizz\r\n 4:hoge\r\n 5:Buzz\r\n 6:Fizz\r\n
    7:hoge\r\n 8:hoge\r\n 9:Fizz\r\n10:Buzz\r\n11:hoge\r\n12:Fizz\r\n13:hoge\r\n14:hoge\r\n15:FizzBuzz\r\n16:hoge\r\n17:hoge\r\n18:Fizz\r\n19:hoge\r\n20:Buzz'''\r\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3794'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3794
  :user_name: fujidig
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/507/
  :language: 
  :time: 2007/11/10 10:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |2
        #i = 1;
        #a[0] =  1; $b[0] = "hoge";
        #a[1] =  3; $b[1] = "Fizz";
        #a[2] =  5; $b[2] = "Buzz";
        #a[3] = 15; $b[3] = "FizzBuzz";
        while( #i &lt;= 20 ) {
            call KetaSoroe #i, 2;
            insert $$return + ":";
            #j = 3;
            while( #j &gt;= 0 ) {
                if( #i % #a[#j] == 0 ) {
                    insert $b[#j];
                    break;
                }
                #j = #j - 1;
            }
            insert "\n";
            #i = #i + 1;
        }
        endmacro;

    KetaSoroe:
        ##i = ##2 - strlen( str( ##1 ) );
        $$result = "";
        if ( ##i &gt;= 0 ) {
            while( ##i &gt; 0 ) {
                $$result = $$result + " ";
                ##i = ##i - 1;
            }
        }
        $$result = $$result + str( ##1 );
        return $$result;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3795'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3795
  :user_name: あにす
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/504/
  :language: VB
  :time: 2007/11/10 10:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  こんなんでいいのかな…。\n\t"
  :code: |
    Module Module1

        Sub Main()
            For i As Integer = 1 To 20
                If i &lt;= 9 Then
                    Console.Write(" ")
                End If
                Console.Write(i &amp; ":")
                If i Mod 3 = 0 Then
                    Console.Write("Fizz")
                End If
                If i Mod 5 = 0 Then
                    Console.Write("Buzz")
                End If
                If i Mod 3 &lt;&gt; 0 AndAlso i Mod 5 &lt;&gt; 0 Then
                    Console.Write("hoge")
                End If
                Console.Write(vbCrLf)
            Next
        End Sub

    End Module
  :tags:
  - VB.NET2005
  - VB2005
  :references:
    :url: 
    :title: 
- :id: '3796'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3796
  :user_name: koguro
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/438/
  :language: Scheme
  :time: 2007/11/10 10:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  以前WiLiKi (http://practical-scheme.net/wiliki/wiliki.cgi?Scheme%3aFizzBuzz)に書いたものの焼き直しですが、hygienic
    macroで解いてみました。\r\n\r\nただ、素直に解いた方が短いです。\n\t"
  :code: |
    (define-syntax show-msg
      (syntax-rules ()
        ((_ current v next)
         (define-syntax current
           (syntax-rules ()
             ((_) #t)
             ((_ elem . rest)
              (begin
                (print #`",|elem|:,v")
                (next . rest))))))))

    (define-syntax define-fizzbuzz
      (syntax-rules (Fizz Buzz FizzBuzz)
        ((_ v) #t)
        ((_ current Fizz next rest ...)
         (begin
           (show-msg current "Fizz" next)
           (define-fizzbuzz next rest ...)))
        ((_ current Buzz next rest ...)
         (begin
           (show-msg current "Buzz" next)
           (define-fizzbuzz next rest ...)))
        ((_ current FizzBuzz next rest ...)
         (begin
           (show-msg current "FizzBuzz" next)
           (define-fizzbuzz next rest ...)))
        ((_ current next rest ...)
         (begin
           (show-msg current "hoge" next)
           (define-fizzbuzz next rest ...)))))

    (define-fizzbuzz a1 a2 a3 Fizz a4 a5 Buzz a6 Fizz a7 a8 a9 Fizz a10 Buzz a11 a12 Fizz a13 a14 a15 FizzBuzz a1)

    (a1 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20)
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '3797'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3797
  :user_name: uho
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/498/
  :language: C
  :time: 2007/11/10 11:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">どうでしょうか？</pre>\n\t"
  :code: |2
            static void Main(string[] args)
            {
                string str = string.Empty;

                for (int i = 1; i &lt;= 20; ++i)
                {
                    Console.Write("{0,2}:", i );

                    str = "hoge";

                    if (i % 15 == 0)
                    {
                        str = "FizzBuzz";
                    }
                    if (i % 5 == 0 &amp;&amp; str == "hoge")
                    {
                        str = "Buzz";
                    }
                    if (i % 3 == 0 &amp;&amp; str == "hoge")
                    {
                        str = "Fizz";
                    }

                    Console.WriteLine(str);
                }
            }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3798'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3798
  :user_name: uho
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/498/
  :language: C
  :time: 2007/11/10 11:15 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">出力が分かれてたので修正。</pre>\n\t"
  :code: |
    static void Main(string[] args)
    {
        string str = string.Empty;

        for (int i = 1; i &lt;= 20; ++i)
        {
            str = "hoge";

            if (i % 15 == 0)
            {
                str = "FizzBuzz";
            }
            if (i % 5 == 0 &amp;&amp; str == "hoge")
            {
                str = "Buzz";
            }
            if (i % 3 == 0 &amp;&amp; str == "hoge")
            {
                str = "Fizz";
            }

            Console.WriteLine("{0,2}:{1}", i, str);
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3800'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3800
  :user_name: kozima
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/164/
  :language: Common
  :time: 2007/11/10 11:26 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\">format で分岐とか……</pre>\n\t"
  :code: |
    (loop for x from 1 to 20
      do (format t "~2D:~[Fizz~[Buzz~]~:;~[Buzz~:;hoge~]~]~%"
                 x (mod x 3) (mod x 5)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3801'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3801
  :user_name: kozima
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/164/
  :language: Common
  :time: 2007/11/10 11:42 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">#3800 がなんとなくインチキっぽい気がしたので別の方針で。\r\nFermat の小定理を使ってます。</pre>\n\t"
  :code: |
    (loop for x from 1 to 20
      do (format t "~2D:~A~%" x
                 (aref #("FizzBuzz" "Buzz" "Fizz" "hoge")
                       (+ (mod (expt x 2) 3)
                          (* 2 (mod (expt x 4) 5))))))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3802'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3802
  :user_name: naranja
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/448/
  :language: D
  :time: 2007/11/10 11:48 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">微妙に奇妙。</pre>\n\t"
  :code: |
    import std.stdio;

    void main(){
        for(int i = 1; i &lt;= 20; i++){
            writef("%2d:", i);
            (i % 3) == 0 &amp;&amp; (writef("Fizz"), i % 5) ||
            (i % 5) == 0 &amp;&amp; (writef("Buzz"), true) ||
            writef("hoge");
            writefln();
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3803'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3803
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: Perl
  :time: 2007/11/10 11:52 GMT
  :vote_count: '6'
  :vote_score: '6'
  :body: "\n\t  <pre class=\"compact\">elseや!などの否定は使いませんでした、というかifすら使ってないんですがいいんでしょうか？\r\n\r\n
    いまいちお題が飲み込めない。。。orz\r\n</pre>\n\t"
  :code: |
    map{print("$_：".'Hoge'x($_%3&amp;&amp;$_%5&gt;0).'Fizz'x($_%3==0).'Buzz'x($_%5==0)."\n")}1..20;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3804'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3804
  :user_name: ココサブ
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/24/
  :language: C
  :time: 2007/11/10 11:55 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">オーソドックスに</pre>\n\t"
  :code: |
    #include &lt;stdio.h&gt;

    int main()
    {
        int i;

        for (i = 1; i &lt;= 20; i++) {
            printf("%2d:", i);
            if (i%3 == 0)
                printf("Fizz");
            if (i%5 == 0)
                printf("Buzz");
            if (i%3 != 0 &amp;&amp; i%5 != 0)
                printf("hoge");
            puts("");
        }

        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3805'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3805
  :user_name: ところてん
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/166/
  :language: C
  :time: 2007/11/10 12:08 GMT
  :vote_count: '6'
  :vote_score: '4'
  :body: "\n\t  <pre class=\"compact\">上のやつを、ifなしに変形してみる。</pre>\n\t"
  :code: "#include &lt;stdio.h&gt;\n\nint main()\n{    \n    int i;\n    for(i = 1;
    i &lt;= 20; i++){\n        printf(\"%2d:\", i);\n        (i%3) || printf(\"Fizz\");\n
    \       (i%5) || printf(\"Buzz\");\n        (i%3) &amp;&amp; (i%5) &amp;&amp;
    printf(\"hoge\");\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3806'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3806
  :user_name: minke
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/28/
  :language: Ruby
  :time: 2007/11/10 12:13 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    def fizzbuzz(n)
      (1..20).each do |i|
        printf("%2d:", i)
        print "Fizz" if i % 3 == 0
        print "Buzz" if i % 5 == 0
        print "hoge" if (i % 3) * (i % 5) != 0
        puts
      end
    end

    fizzbuzz(20)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3807'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3807
  :user_name: minke
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/28/
  :language: OCaml
  :time: 2007/11/10 12:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">お題の意図がいまいち掴めてません。</pre>\n\t"
  :code: |
    let fizzbuzz n =
      let rec fb n i =
        Printf.printf "%2d:%s\n" i
          (match i with
               _ when i mod 15 == 0 -&gt; "FizzBuzz"
             | _ when i mod 3 == 0 -&gt; "Fizz"
             | _ when i mod 5 == 0 -&gt; "Buzz"
             | _ -&gt; "hoge");
        if i &lt; n then fb n (i+1)
      in fb n 1

    let _ = fizzbuzz 20
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3808'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3808
  :user_name: shiro
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/41/
  :language: Haskell
  :time: 2007/11/10 12:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">無限リストを使って、明示的条件判断無しでやってみました。\r\n\r\nshowItのところは\r\n\r\n
    zipWith4 (printf \"%2d: %s%s%s\") [1..] fizz buzz hoge\r\n\r\nだと型が推測できんと怒られた。そういうもの?</pre>\n\t"
  :code: |
    import Data.List
    import Text.Printf

    fizzbuzz = zipWith4 showIt [1..] fizz buzz hoge
      where showIt :: Int-&gt;[Char]-&gt;[Char]-&gt;[Char]-&gt;[Char]
            showIt = printf "%2d: %s%s%s"
            fizz = ["","","Fizz"]++fizz
            buzz = ["","","","","Buzz"]++buzz
            hoge = ["hoge","hoge","","hoge","","","hoge","hoge",
                    "","","hoge","","hoge","hoge",""]++hoge

    main = putStr $ unlines $ take 20 $ fizzbuzz
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3809'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3809
  :user_name: omoikani
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/374/
  :language: 
  :time: 2007/11/10 13:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">&gt; 6. 条件分岐する場合、if文のみが使用でき、\r\n&gt;    かつ、論理式が成立した場合の処理のみが記述できます。\r\nということなので、match
    withでの分岐はお題を満たさないのでは？</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3810'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3810
  :user_name: yuin
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/82/
  :language: Scala
  :time: 2007/11/10 13:14 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    val p = print _
    (1 to 20).foreach{i=&gt;
      p(i);p(":")
      if(i%3 == 0) p("Fizz")
      if(i%5 == 0) p("Buzz")
      if(i%3!=0 &amp;&amp; i%5!=0) p("hoge")
      p("\n")
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3811'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3811
  :user_name: SiroKuro
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/540/
  :language: C
  :time: 2007/11/10 14:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  こんな感じでＯＫでしょうか。\r\nC#2.0 の ?? 演算子使いましたけど、これは else には該当……するのかなしないのかな。\n\t"
  :code: |
    using System;
    static class FizzBuzz {
        public static void Main(String[] args) {
            string[] msg = new string[15];
            for(int i = 2; i &lt;= msg.Length; i += 3) msg[i] += "Fizz";
            for(int i = 4; i &lt;= msg.Length; i += 5) msg[i] += "Buzz";
            for(int i = 0; i &lt; 20; i++) Console.WriteLine("{0,2}:{1}", i + 1, msg[i%msg.Length] ?? "hoge");
        }
    }
  :tags:
  - C#2.0
  :references:
    :url: 
    :title: 
- :id: '3813'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3813
  :user_name: にしお
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/1/
  :language: Python
  :time: 2007/11/10 14:34 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <p>if文を使わない方法。</p>\n<p>あらかじめ3つとばし、5つとばし、15個飛ばしで必要な文字列を書き込んでおきます。後から書いた15飛ばしので上書きされるのでelseが消えるという話。</p>\n\n\t"
  :code: "def fizzbuzz(n):\n    r = range(n + 1)\n    map = {}\n    for i in r[::3]:\n
    \       map[i] = \"Fizz\"\n    for i in r[::5]:\n        map[i] = \"Buzz\"\n    for
    i in r[::15]:\n        map[i] = \"FizzBuzz\"\n    for i in r[1:]:\n        print
    \"%d:%s\" %(i, map.get(i, \"hoge\"))\n\n        \nfizzbuzz(20)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3814'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3814
  :user_name: kkobayashi
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2007/11/10 14:37 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">素直に書いてみました。\r\nRならifすら必要ありませんね。</pre>\n\t"
  :code: |
    FizzBuzz &lt;- function(n=20){
        v &lt;- rep("hoge", n)
        v[!1:n%%3]  = "Fizz"
        v[!1:n%%5]  = "Buzz"
        v[!1:n%%15] = "FizzBuzz"
        cat(paste(1:n, v, sep=":"), sep="\n")
    }
  :tags: []
  :references:
    :url: /web/20090607072941/http://www.okada.jp.org/RWiki/?%BD%E9%B5%E9%A3%D1%A1%F5%A3%C1%20%A5%A2%A1%BC%A5%AB%A5%A4%A5%D6(7)#x4e95cdc
    :title: Fizz-Buzz問題 - RjpWiki
- :id: '3815'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3815
  :user_name: にしお
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/11/10 14:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">あ、\"%2d\"にしないと前に空白がつきませんね。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3816'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3816
  :user_name: SiroKuro
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/540/
  :language: 
  :time: 2007/11/10 14:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">すいません &lt;= じゃなくて &lt; ですね orz</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3817'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3817
  :user_name: kentarok
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/541/
  :language: Scheme
  :time: 2007/11/10 15:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>Scheme(Gauche)で。題意に満すのかどうかわかりませんが……。</p>\n</div>\n\t"
  :code: |
    (use srfi-1)

    (map (lambda (n)
           (format #t "~a:~a\n" n (or (and (= (modulo n 15) 0) "FizzBuzz")
                                      (and (= (modulo n 3)  0) "Fizz")
                                      (and (= (modulo n 5)  0) "Buzz")
                                      "hoge")))
         (iota 20 1))
  :tags:
  - Scheme
  :references:
    :url: 
    :title: 
- :id: '3818'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3818
  :user_name: kentarok
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/541/
  :language: 
  :time: 2007/11/10 15:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">あ、mapになってた……。for-eachで。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3819'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3819
  :user_name: ocaml-nagoya
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/514/
  :language: Scheme
  :time: 2007/11/10 15:35 GMT
  :vote_count: '5'
  :vote_score: '5'
  :body: "\n\t  <pre class=\"compact\">循環リストで。</pre>\n\t"
  :code: |
    use srfi-1)
    (define (fizzbuzz n)
      (for-each (lambda (a b) (print a ":" b))
                (iota n 1)
                (circular-list 'hoge 'hoge 'Fizz 'hoge 'Buzz 'Fizz 'hoge 'hoge 'Fizz 'Buzz 'hoge 'Fizz 'hoge 'hoge 'FizzBuzz)))

    (fizzbuzz 20)
  :tags:
  - Gauche
  :references:
    :url: 
    :title: 
- :id: '3820'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3820
  :user_name: sumim
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/11/10 15:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Squeak Smalltalk で。\n\t"
  :code: |
    | fizzs buzzs |
    fizzs := #('' '' Fizz).
    buzzs := #('' '' '' '' Buzz).
    World findATranscript: nil.
    1 to: 20 do: [:idx |
        | message |
        message := (fizzs atWrap: idx), (buzzs atWrap: idx).
        message ifEmpty: [message := #hoge].
        Transcript cr; show: idx; show: #:, message]
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '3821'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3821
  :user_name: xsd
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/154/
  :language: OCaml
  :time: 2007/11/10 17:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  ifもelseもmod演算子も無しで書いてみました。\n\t"
  :code: |
    let mes = [| "hoge"; "Fizz"; "Buzz"; "FizzBuzz" |]

    let f acc i =
      let c = acc land 3 in
      let _ = Printf.printf "%02d:%s\n" i mes.(c) in
      (acc lsr 2) lor (c lsl 28)

    let _ = Array.fold_left f 810092048 (Array.init 20 (fun i-&gt;i+1))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3823'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3823
  :user_name: minke
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/28/
  :language: 
  :time: 2007/11/10 22:27 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">条件分岐の定義が微妙に曖昧かなぁと。\r\n他の投稿でも if 使ってないけど条件分岐ととれる記述(&amp;&amp;
    とか)出ていたので、\r\nじゃあ match はあり？なし？という感じで出してみました。\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3825'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3825
  :user_name: shiro
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/41/
  :language: Haskell
  :time: 2007/11/10 23:50 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">ああ、[1..]の型が曖昧なのがprintfの型情報からだけでは解決できないってことなのかな。\r\nこうしたら通った。\r\n</pre>\n\t"
  :code: |
    import Data.List
    import Text.Printf

    fizzbuzz = zipWith4 (printf "%2d: %s%s%s") ([1..]::[Int]) fizz buzz hoge
      where fizz = ["","","Fizz"]++fizz
            buzz = ["","","","","Buzz"]++buzz
            hoge = ["hoge","hoge","","hoge","","","hoge","hoge",
                    "","","hoge","","hoge","hoge",""]++hoge

    main = putStr $ unlines $ take 20 $ fizzbuzz
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3826'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3826
  :user_name: shiro
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/41/
  :language: Scheme
  :time: 2007/11/10 23:58 GMT
  :vote_count: '5'
  :vote_score: '5'
  :body: "\n\t  <pre class=\"compact\">言語組込みの条件分岐を使わず、ラムダ算法による真偽値表現を使ってみました。\r\n</pre>\n\t"
  :code: |
    (use srfi-1)
    (use srfi-42)

    (define (fizzbuzz n)
      (define (t x y) x)
      (define (f x y) y)
      (do-ec (:parallel (: i n)
                        (:list mod3 (circular-list f f t))
                        (:list mod5 (circular-list f f f f t)))
             (format #t "~2d: ~a\n" (+ i 1)
                     (mod3 (mod5 "FizzBuzz" "Fizz") (mod5 "Buzz" "hoge")))))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '3827'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3827
  :user_name: あにす
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/504/
  :language: 
  :time: 2007/11/11 00:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  トリッキー萌え。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3831'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3831
  :user_name: nantan
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/535/
  :language: Java
  :time: 2007/11/11 01:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">思いついたままに作ってみました。\r\n意図されている仕様に即していますでしょうか。。</pre>\n\t"
  :code: "package nt.doukaku;\r\n\r\npublic class FizzBuzz {\r\n    public static
    void main(String[] args) {\r\n        for (int i = 1; i &lt;= 20; i++) {\r\n            System.out.print(i);\r\n
    \           System.out.print(\":\");\r\n            if (i % 15 == 0) {\r\n                System.out.println(\"FizzBuzz\");\r\n
    \               continue;\r\n            }\r\n            if (i % 3 == 0) {\r\n
    \               System.out.println(\"Fizz\");\r\n                continue;\r\n
    \           }\r\n            if (i % 5 == 0) {\r\n                System.out.println(\"Buzz\");\r\n
    \               continue;\r\n            }\r\n            System.out.println(\"hoge\");\r\n
    \       }\r\n    }\r\n}\r\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3833'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3833
  :user_name: susu
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/218/
  :language: Python
  :time: 2007/11/11 01:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">DRYではありませんが。</pre>\n\t"
  :code: "def fizzbuzz(n=20):\n  d = len( str(n))\n  \n  for i in range(1,n+1):\n
    \   F,B = i%3==0,i%5==0\n    \n    if F==B:\n      if not F:  print \"%*d:hoge\"%(d,i)\n
    \     if F:     print \"%*d:FizzBuzz\"%(d,i)\n    if F&lt;&gt;B:\n      if F:
    \    print \"%*d:Fizz\"%(d,i)\n      if not F:  print \"%*d:Buzz\"%(d,i)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3835'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3835
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/11/11 02:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">なでしこで素直に10行で。ワンライナーでもできるかもしれません。</pre>\n\t"
  :code: |
    CNAKOモード="EXE"
    Iで1から20まで繰り返す
    　　文字列右寄せ(I,2)&amp;":"を継続表示
    　　もし(I%3=0&amp;&amp;I%5=0)なら
    　　　　"FizzBuzz"を表示。続ける
    　　もし(I%3=0)なら
    　　　　"Fizz"を表示。続ける
    　　もし(I%5=0)なら
    　　　　"Buzz"を表示。続ける
    　　"hoge"を表示
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3837'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3837
  :user_name: omoikani
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/374/
  :language: 
  :time: 2007/11/11 06:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">後になって考えると match with での分岐もありかな？と思いました。\r\n題意としては
    else 無しでという方向みたいですし。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3838'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3838
  :user_name: naquamura
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/547/
  :language: awk
  :time: 2007/11/11 07:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ifは全部試行するので条件6もみたしているはず。</pre>\n\t"
  :code: "BEGIN{\r\n        for (x=1;x&lt;=20;x++) str[x]=x \":hoge\";\r\n        for
    (x=1;x&lt;=20;x++) {\r\n         if (x%3==0) str[x]=x \":Fizz\";\r\n         if
    (x%5==0) str[x]=x \":Buzz\";\r\n         if (x%15==0) str[x]=x \":FizzBuzz\";\r\n
    \       }\r\n  for (x=1;x&lt;=20;x++) { print str[x] }\r\n}\r\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3841'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3841
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: C
  :time: 2007/11/11 10:29 GMT
  :vote_count: '5'
  :vote_score: '5'
  :body: "\n\t  <pre class=\"compact\">１時間ほど考えましたが、これ以上思いつきませんでした☆</pre>\n\t"
  :code: |
    #include&lt;stdio.h&gt;
    int main(void){
      char *a[]={"hoge","Fizz","Buzz","FizzBuzz"};
      int i;
      for(i=1;i&lt;=20;i++)
        printf("%2i:%s\n",i,a[!(i%3)+!(i%5)*2]);
      return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3842'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3842
  :user_name: cappuccino
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/549/
  :language: C
  :time: 2007/11/11 10:30 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    using System;

    class FizzBuzz
    {
        static void Main(string[] args)
        {
            string[] fizzbuzz = { "hoge", "Fizz", "Buzz", "FizzBuzz" };

            for (int i = 1; i &lt;= 20; i++)
            {
                int index = 0;

                if (i % 3 == 0) index += 1;
                if (i % 5 == 0) index += 2;

                Console.WriteLine("{0,2} : {1}", i, fizzbuzz[index]);
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3846'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3846
  :user_name: yohei
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/415/
  :language: C
  :time: 2007/11/11 11:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">無限にyield。</pre>\n\t"
  :code: "using System;\nusing System.Collections.Generic;\n\nclass Program {\n    static
    IEnumerable&lt;string&gt; FizzBuzz() {\n        while (true) {\n            yield
    return \"hoge\";\n            yield return \"hoge\";\n            yield return
    \"Fizz\";\n            yield return \"hoge\";\n            yield return \"Buzz\";\n
    \           yield return \"Fizz\";\n            yield return \"hoge\";\n            yield
    return \"hoge\";\n            yield return \"Fizz\";\n            yield return
    \"Buzz\";\n            yield return \"hoge\";\n            yield return \"Fizz\";\n
    \           yield return \"hoge\";\n            yield return \"hoge\";\n            yield
    return \"FizzBuzz\";\n        }\n    } \n    static void Main(string[] args) {\n
    \       int i = 0;\n        foreach (string s in FizzBuzz()) {\n            if
    (++i &gt; 20) break;\n            Console.WriteLine(\"{0, 2}:{1}\", i, s);\n        }\n
    \   }\n}\n"
  :tags:
  - C#2.0
  :references:
    :url: 
    :title: 
- :id: '3847'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3847
  :user_name: tell
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/228/
  :language: Ruby
  :time: 2007/11/11 12:33 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\">こんな感じ？\r\n\r\nプレビューのハイライトが間違っている気がする…\r\n\r\n“else”は論理の否定を取ってしまうと普通に書けてしまうので，\r\n条件分岐の条件を数以外で行うことと，\r\n“return”で飛んでみるという変形をしました．\r\n\r\n\"\"はStringと+について単位元なので，\r\n9行目を変えれば“7の倍数の時は…”\r\nとか別の変形に応用できそうですね．\r\n</pre>\n\t"
  :code: |
    class String
      def hoge
        return "hoge" if self.empty?
        self
      end
    end

    1.upto(99) {|i| ## とりあえず99まで
      puts("%2d:%s"%[i,((["Fizz"]+[""]*2)[i%3]+(["Buzz"]+[""]*4)[i%5]).hoge])
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3848'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3848
  :user_name: tsuwabuki
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/479/
  :language: Haskell
  :time: 2007/11/11 12:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">elseを書かないifを作ってしまいました。</pre>\n\t"
  :code: "module Main (main) where\r\n\r\nmain = mapM_ putStrLn [show x ++ \":\" ++
    fizzBuzz x | x &lt;- [1..10]]\r\n\r\nfizzBuzz x = nif (isFizzBuzz x) \"FizzBuzz\"
    $ nif (isFizz x) \"Fizz\" $ nif (isBuzz x) \"Buzz\" \"hoge\"\r\n\r\nisFizzBuzz
    x = (ntrue : replicate 14 nfalse) !! (x `mod` 15)\r\nisFizz x = (ntrue : replicate
    2 nfalse) !! (x `mod` 3)\r\nisBuzz x = (ntrue : replicate 4 nfalse) !! (x `mod`
    5)\r\n\r\nntrue x y = x\r\nnfalse x y = y\r\nnif x f g = x f g\r\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3849'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3849
  :user_name: tell
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/228/
  :language: 
  :time: 2007/11/11 12:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ありゃ，良く見たら“20行出力”ですか．\r\n2桁分全部出力させてしまったよorz</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3850'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3850
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: Other
  :time: 2007/11/11 12:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">出題意図が今一不明ですが，else を使うなというだけなら，以下のように書けるが，ifすら使う必要がないというkkobayashiさんの意見はごもっとも。\r\nelse
    を使わないというのは，なんの制約にもならないと思うのだが。。。</pre>\n\t"
  :code: |
    for (i in 1:20) {
        str &lt;- "hoge"
        if (i %% 3 == 0) str &lt;- "Fizz"
        if (i %% 5 == 0) str &lt;- "Buzz"
        if (i %% 15 == 0) str &lt;- "FizzBuzz"
        cat(i, ":", str, "\n")
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3851'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3851
  :user_name: tsuwabuki
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/479/
  :language: 
  :time: 2007/11/11 12:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">20行出力なので\r\nmain = mapM_ putStrLn [show x ++
    \":\" ++ fizzBuzz x | x &lt;- [1..20]]\r\nですね・・</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3852'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3852
  :user_name: tell
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/228/
  :language: Ruby
  :time: 2007/11/11 13:04 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ああ，なるほど，もしかしたら，\r\n出題者の意図としてはこっちのコードの方が合っているかもしれないな．\r\n他の方のコードをいくつか見て思った．\r\n</pre>\n\t"
  :code: |
    1.upto(20){|i|puts("%2d:%s"%[i,(["FizzBuzz"]+["hoge"]*2+["Fizz","hoge","Buzz","Fizz"]+["hoge"]*2+["Fizz","Buzz","hoge","Fizz"]+["hoge"]*2)[i%15]])}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3854'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3854
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: R
  :time: 2007/11/11 13:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">馬鹿馬鹿しい解を一つ</pre>\n\t"
  :code: |
    FizzBuzz &lt;- function(n) {
        v &lt;- rep(c("hoge", "hoge", "Fizz", "hoge", "Buzz", "Fizz", "hoge", "hoge", "Fizz", "Buzz", "hoge", "Fizz", "hoge", "hoge", "FizzBuzz"), n%/%15+1)[1:n]
        print(v)
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3855'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3855
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: R
  :time: 2007/11/11 13:08 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">出題意図が今一不明ですが，else を使うなというだけなら，以下のように書けるが，ifすら使う必要がないというkkobayashiさんの意見はごもっとも。\r\nelse
    を使わないというのは，なんの制約にもならないと思うのだが。。。</pre>\n\t"
  :code: |
    for (i in 1:20) {
        str &lt;- "hoge"
        if (i %% 3 == 0) str &lt;- "Fizz"
        if (i %% 5 == 0) str &lt;- "Buzz"
        if (i %% 15 == 0) str &lt;- "FizzBuzz"
        cat(i, ":", str, "\n")
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3856'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3856
  :user_name: matyr
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/343/
  :language: JavaScript
  :time: 2007/11/11 13:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t   if文がキレイに並ぶように。\n\t"
  :code: |
    (function doukaku77(p){
      for(var r = [], i = 0, s; s = ':', i++ &lt; 20; r[i - 1] = i + s){
        if(i % 3 &lt; 1) s += 'Fizz';
        if(i % 5 &lt; 1) s += 'Buzz';
        if(s === ':') s += 'hoge';
      }
      p(r.join('\n'));
    })(
      typeof alert != 'undefined' ? alert :
      typeof print != 'undefined' ? print :
      function($){ typeof WSH == 'object' &amp;&amp; WSH.echo($) }
    );
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3857'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3857
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: R
  :time: 2007/11/11 13:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">if も else も要らない</pre>\n\t"
  :code: |
    FizzBuzz &lt;- function(n) {
        for (i in 1:n) cat(i,":",c("hoge", "Fizz", "Buzz", "FizzBuzz")[(!(i%%3))+(!(i%%5))*2+1],"\n")
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3858'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3858
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: R
  :time: 2007/11/11 13:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    junk&lt;- sapply(1:20, function(i) cat(i, ":", c("FizzBuzz", "hoge", "hoge", "Fizz", "hoge", "Buzz", "Fizz", "hoge", "hoge", "Fizz", "Buzz", "hoge", "Fizz", "hoge", "hoge")[i%%15+1], "\n"))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3859'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3859
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/11/11 14:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">1から20とは書かれていないので\r\n41から60とかでもよさそうですね☆</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3860'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3860
  :user_name: matyr
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/343/
  :language: 
  :time: 2007/11/11 15:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  ドリトルで。\n\t"
  :code: |
    表示欄＝リスト！作る　-40 200 位置　80 400 大きさ。
    「｜回　字｜字＝『』。
    　（回％５＜１）！なら「字＝『Buzz』」実行。
    　（回％３＜１）！なら「字＝『Fizz』＋字」実行。
    　（字＝＝『』）！なら「字＝『hoge』」実行。
    　表示欄！（『』！（回）『:』（字）連結）書く」！20回 繰り返す。
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3861'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3861
  :user_name: odz
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/212/
  :language: Python
  :time: 2007/11/11 16:04 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">周期3のリストと周期5のリストを合成。</pre>\n\t"
  :code: |
    from itertools import izip, cycle

    def messages():
        for x, y in izip(cycle('  Fizz'.split(' ')), cycle('    Buzz'.split(' '))):
            yield x + y or 'hoge'

    def fizzbuzz():
        for i, s in izip(range(1, 1 + 20), messages()):
            print '%2d:%s' % (i, s)

    if __name__ == '__main__':
        fizzbuzz()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3862'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3862
  :user_name: odz
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/212/
  :language: Python
  :time: 2007/11/11 16:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">素直なのはこうかな。\r\ncontinue が散らばるのは良くなさそう。</pre>\n\t"
  :code: "def message(n):\r\n    s = ''\r\n    if n % 3 == 0:\r\n        s += 'Fizz'\r\n
    \   if n % 5 == 0:\r\n        s += 'Buzz'\r\n    if len(s) == 0:\r\n        s
    = 'hoge'\r\n    return s\r\n\r\ndef fizzbuzz():\r\n    for i in range(1, 1 + 20):\r\n
    \       print '%2d:%s' % (i, message(i))\r\n\r\nif __name__ == '__main__':\r\n
    \   fizzbuzz()\r\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3863'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3863
  :user_name: odz
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/212/
  :language: 
  :time: 2007/11/11 16:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">あ、Python に設定するの忘れている</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3864'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3864
  :user_name: odz
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/212/
  :language: Python
  :time: 2007/11/11 16:09 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">出力は4パターンしかないんだから、適当に整数変換できれば良い。</pre>\n\t"
  :code: |
    _MESSAGES = 'hoge Fizz Buzz FizzBuzz'.split()
    def message(n):
        i = int(n % 3 == 0) + int(n % 5 == 0) * 2
        return _MESSAGES[i]

    def fizzbuzz():
        for i in range(1, 1 + 20):
            print '%2d:%s' % (i, message(i))

    if __name__ == '__main__':
        fizzbuzz()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3865'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3865
  :user_name: odz
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/212/
  :language: C
  :time: 2007/11/11 16:11 GMT
  :vote_count: '5'
  :vote_score: '5'
  :body: "\n\t  <pre class=\"compact\">C++ なら else どころか条件分岐もループも消せる。</pre>\n\t"
  :code: |
    #include &lt;cstdio&gt;

    template&lt;bool mod3, bool mod5&gt;
    const char* message()
    {
        return "hoge";
    }

    template&lt;&gt;
    const char* message&lt;true, false&gt;()
    {
        return "Fizz";
    }

    template&lt;&gt;
    const char* message&lt;false, true&gt;()
    {
        return "Buzz";
    }

    template&lt;&gt;
    const char* message&lt;true, true&gt;()
    {
        return "FizzBuzz";
    }

    template&lt;int n&gt;
    void fizzbuzz()
    {
        fizzbuzz&lt;n - 1&gt;();
        printf("%2d:%s\n", n, message&lt;n % 3 == 0, n % 5 == 0&gt;());
    }

    template&lt;&gt;
    void fizzbuzz&lt;0&gt;()
    {
    }

    int main()
    {
        fizzbuzz&lt;20&gt;();
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3868'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3868
  :user_name: nobsun
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2007/11/11 16:45 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">Control.Monad.whenを使う</pre>\n\t"
  :code: "import Control.Monad\nimport Text.Printf\n\nfizzs = tail  $ cycle $ take
    \ 3 $ \"Fizz\": repeat \"\"\nbuzzs = tail  $ cycle $ take  5 $ \"Buzz\": repeat
    \"\"\n\nmain = mapM_ (uncurry printing) \n     $ take 20 \n     $ zip [1::Int
    ..] \n     $ zipWith (++) fizzs buzzs\n\nprinting n s = printf \"%2d: \" n &gt;&gt;
    when (s == \"\") (putStr \"hoge\") &gt;&gt; putStrLn s\n"
  :tags:
  - Control.Monad
  :references:
    :url: 
    :title: 
- :id: '3873'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3873
  :user_name: nobsun
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/98/
  :language: 
  :time: 2007/11/11 17:29 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">1 と書いただけでは、Num クラスのどのインスタンスか分らないんです\r\nghciのプロンプトで型を確かめて見るとわかります\r\n\r\nPrelude&gt;
    :type 1\r\n1 :: (Num t) =&gt; t\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3885'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3885
  :user_name: mamamoto
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/437/
  :language: Ruby
  :time: 2007/11/12 01:15 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">すでに同じネタ出てるか確認してないのですが。\r\n周期の全部書けばいいじゃん、みんな大げさだなあ、ということで。</pre>\n\t"
  :code: |
    a = ['hoge', 'hoge', 'Fizz', 'hoge', 'Buzz',
         'Fizz', 'hoge', 'hoge', 'Fizz', 'Buzz',
         'hoge', 'Fizz', 'hoge', 'hoge', 'FizzBuzz']

    100.times{|i|
      printf("%2d:%s\n", i+1, a[i%a.size])
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3899'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3899
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2007/11/12 08:53 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">if無し</pre>\n\t"
  :code: "var ret = [];\r\nvar x   = {'hoge':1,'Fizz':3,'Buzz':5,'FizzBuzz':15};\r\nfor(var
    i in x) for(var j=1;j&lt;=100 / x[i];j++) ret[ x[i] * j ] = '&lt;' + x[i] * j
    + '&gt; :' + i;\r\nsay(ret.join(\"\\n\"));\r\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3913'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3913
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: Ruby
  :time: 2007/11/12 15:41 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    def fizzbuzz(n)
      a=[["FizzBuzz","Fizz"],["Buzz","hoge"],[3,5]]
      (1..n).each {|i|
        printf("%2d:%s\n",i,
               a[-1].inject(a) {|r,j|r=r[i**(j-1)%j]}
               )
      }
    end

    if __FILE__ == $0
      fizzbuzz(20)
    end
  :tags:
  - Ruby1.8.6
  :references:
    :url: 
    :title: 
- :id: '3914'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3914
  :user_name: dankogai
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/26/
  :language: Perl
  :time: 2007/11/12 16:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n<p><a href=\"/web/20090607072941/http://tokyo2007.yapcasia.org/speakers/marty_pauley_1.html\">POO</a>で。\n</p>\n<p>継承の無駄遣い。\n</p>\n<p>Dan
    the POO Monger\n</p>\n\n\n\n\t"
  :code: |
    use strict;
    use warnings;

    package hoge;

    sub fizzbuzz {
        my ( $self, $num, $hoge ) = @_;
        $hoge || __PACKAGE__;
    }

    package Fizz;
    use base 'hoge';

    sub fizzbuzz {
        my ( $self, $num, $hoge ) = @_;
        $self-&gt;SUPER::fizzbuzz( $num, ( $num % 3 ? "" : __PACKAGE__ ) . $hoge );
    }

    package Buzz;
    use base 'Fizz';

    sub fizzbuzz {
        my ( $self, $num ) = @_;
        $self-&gt;SUPER::fizzbuzz( $num, ( $num % 5 ? "" : __PACKAGE__ ) );
    }

    package Fizz::Buzz;
    use base 'Buzz';

    sub fizzbuzz {
        my ( $self, $num ) = @_;
        "$num:" . $self-&gt;SUPER::fizzbuzz($num) . "\n";
    }
    sub new { bless {} =&gt; shift }

    package main;
    my $fizzbuzz = Fizz::Buzz-&gt;new;
    print $fizzbuzz-&gt;fizzbuzz($_) for ( 1 .. ( shift || 100 ) );
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3917'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3917
  :user_name: ihag
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/560/
  :language: Ruby
  :time: 2007/11/12 16:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">安直に書いてみました</pre>\n\t"
  :code: |
    (1 .. 20).each do |i|
      out = ''
      out &lt;&lt; 'Fizz' if (i % 3) == 0
      out &lt;&lt; 'Buzz' if (i % 5) == 0
      out = 'hoge'  if out.empty?
      puts "%2d:%s" % [i, out]
    end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3922'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3922
  :user_name: mamamoto
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/437/
  :language: 
  :time: 2007/11/13 03:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ランタイムからコンパイルタイムになったことを\r\nループが消えたと言うのはちょっと疑問を覚えます。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3926'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3926
  :user_name: ihag
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/560/
  :language: Ruby
  :time: 2007/11/13 05:22 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">条件分岐無し，剰余演算子無し，ループ無し．\r\nループ無しという割には，イテレータ付きgsubを\r\n使っているあたりが反則っぽいけど．</pre>\n\t"
  :code: |
    i = 0
    print ('o' * 20).gsub(/./) {
      i += 1
      "%2d:%s\n" % [i, '-' * i + ',' + '=' * i]
    }.gsub(/:(---)+,/, ':Fizz,').
      gsub(/,(=====)+$/, 'Buzz').
      gsub(/[-=,]/, '').
      gsub(/:$/, ':hoge')
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3930'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3930
  :user_name: にしお
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/11/13 07:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">これせっかくですから別トピックにしませんか？</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3933'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3933
  :user_name: にしお
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/1/
  :language: Python
  :time: 2007/11/13 08:17 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  あえて穴を捜すなら、行番号を1ずつ増やせとはどこにも書いていないのでこれも仕様通りだと主張できるかもｗ\n\t"
  :code: |
    print "1:hoge\n" * 20
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3934'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3934
  :user_name: nantan
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/535/
  :language: COBOL
  :time: 2007/11/13 08:25 GMT
  :vote_count: '2'
  :vote_score: '-2'
  :body: "\n\t  <pre class=\"compact\">勉強を兼ねてCOBOLで書いてみました。\r\nループのスキップ方法が分からなくてIF-ELSEネストになっています。</pre>\n\t"
  :code: |2
           IDENTIFICATION DIVISION.
           PROGRAM-ID. FIZZ-BUZZ.
           ENVIRONMENT DIVISION.
           DATA DIVISION.
           WORKING-STORAGE SECTION.
           01 I PIC 9(2) VALUE 0.
           01 DIV PIC 9(2) VALUE 0.
           01 REM PIC 9(2) VALUE 0.
           01 EDIT PIC Z9.
           PROCEDURE DIVISION.
           PERFORM VARYING I FROM 1 BY 1 UNTIL I &gt; 20
             DIVIDE I BY 15 GIVING DIV REMAINDER REM
             IF REM = 0 THEN
               MOVE I TO EDIT
               DISPLAY EDIT ":FizzBuzz"
             ELSE
               DIVIDE I BY 3 GIVING DIV REMAINDER REM
               IF REM = 0 THEN
                 MOVE I TO EDIT
                 DISPLAY EDIT ":Fizz"
               ELSE
                 DIVIDE I BY 5 GIVING DIV REMAINDER REM
                 IF REM = 0 THEN
                   MOVE I TO EDIT
                  DISPLAY EDIT ":Buzz"
                ELSE
                  MOVE I TO EDIT
                  DISPLAY EDIT ":hoge"
                END-IF
              END-IF
            END-IF
          END-PERFORM
          STOP RUN.
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3943'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3943
  :user_name: Psychs
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/554/
  :language: Objective
  :time: 2007/11/13 11:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">完全に C ですが。</pre>\n\t"
  :code: |
    #include &lt;stdio.h&gt;

    int main(int argc, char** argv)
    {
      int i;
      for (i=1; i&lt;=20; i++) {
        printf("%d:", i);
        if (i%15 == 0) { puts("FizzBuzz"); continue; }
        if (i%3 == 0) { puts("Fizz"); continue; }
        if (i%5 == 0) { puts("Buzz"); continue; }
        puts("hoge");
      }
      return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3946'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3946
  :user_name: raynstard
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/127/
  :language: C
  :time: 2007/11/13 12:36 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">ども、raynstardです。\r\n普段RSSベースでしか読んでいないので、思ったよりも落ち着いてるなぁと思ったら\r\n実はすでに出尽くして後だったんですね(笑\r\n\r\nelse無しとした意図は、上から下までなるべく全部通るコードという感じでした。\r\n&amp;&amp;
    や || でつなげて反対の事かけば\r\nelseと変わらないのは思いつかなかったです^^；；\r\n\r\nまぁ、閑話休題、たまにはこういう好き放題遊べるお題も\r\n楽しいかなと思ってみたりするテスト\r\nだから、直書きとかももちろんOKです！\r\nむしろもっとはじけていただいてもいっこうに(笑\r\n\r\nちなみに、これは直接出力するパターンですな\r\nできれば!=
    を外したかったのですが思いつかなかったですorz\r\n</pre>\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    int main(int argc, char *argv[])
    {
      int N=0;
      for(N=1; N&lt;=20; N++)
      {
        printf("%2d:%-s\r", N, "hoge");
        if( (N%3) == 0 ) printf("%2d:%-s", N, "Fizz");
        if( (N%5) == 0 )
        {
          if( (N%3) != 0 ) printf("%2d:", N);
          printf("%-s","Buzz");
        }
        printf("\n");
      }
      return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3958'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3958
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: C
  :time: 2007/11/13 14:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    int main(int, char* [])
    {
        static const char* const ss[] = { "Hoge", "Fizz", "Buzz", "FizzBuzz" };

        for(int i = 1; i &lt;= 20; ++i)
        {
            std::cout &lt;&lt; std::setw(2) &lt;&lt; i &lt;&lt; ':' &lt;&lt; ss[(i%5==0?2:0)+(i%3==0?1:0)] &lt;&lt; std::endl;
        }

        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3959'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3959
  :user_name: kozima
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/164/
  :language: diff
  :time: 2007/11/13 14:06 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">これでいかがでしょうか(#3801 で使った手です)</pre>\n\t"
  :code: |
    @@ -8,7 +8,7 @@
         if( (N%3) == 0 ) printf("%2d:%-s", N, "Fizz");
         if( (N%5) == 0 )
         {
    -      if( (N%3) != 0 ) printf("%2d:", N);
    +      if( (N*N%3) == 1 ) printf("%2d:", N);
           printf("%-s","Buzz");
         }
         printf("\n");
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3971'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3971
  :user_name: odz
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/212/
  :language: 
  :time: 2007/11/13 16:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">んー、どちらにしろ、いわゆるループ構造はできていないと思ったのですが。\r\n別にこだわるような話でもないので、見かけ上ループがない、という程度でもいいですけど。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3982'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3982
  :user_name: mamamoto
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/437/
  :language: 
  :time: 2007/11/14 00:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">むしろ見た目に、普通に再帰してるなあ、っていうのが最初に抱いた感想だったんですが。\r\n別にこだわる話じゃない、というのは賛成です。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3985'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3985
  :user_name: aileron
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/467/
  :language: Python
  :time: 2007/11/14 04:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">list内包で遊んでたらワンライナになった。</pre>\n\t"
  :code: |
    for m in ['%2d:%s' %(i,('hoge','Fizz','Buzz','FizzBuzz')[ int(i%3==0)+int(i%5==0)*2 ]) for i in range(1,21)]:print m
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3987'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3987
  :user_name: nobsun
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/98/
  :language: 
  :time: 2007/11/14 04:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>もう一度、書きおこすのがいいかしらん？それとも管理者さんに別トピックに変更してもらえばいいのかしらん？</p>\n</div>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3992'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3992
  :user_name: にしお
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/11/14 05:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">intはいらない。\r\n\r\n&gt;&gt;&gt; (0==0)*2\r\n2\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3993'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3993
  :user_name: にしお
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/11/14 05:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ためしに移動してみました。</p>\n<p>元のお題：変形Fizz-Buzz問題 どう書く？org</p>\n<p><a class=\"reference\"
    href=\"/web/20090607072941/http://ja.doukaku.org/77/\">http://ja.doukaku.org/77/</a></p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3998'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/3998
  :user_name: nantan
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/535/
  :language: Bash
  :time: 2007/11/14 07:58 GMT
  :vote_count: '3'
  :vote_score: '-3'
  :body: "\n\t  <pre class=\"compact\">練習を兼ねてBashで書いてみました。</pre>\n\t"
  :code: |
    #!/bin/bash
    CNT=0
    while [ $CNT -lt 20 ]; do
            if [ $(($CNT % 15)) = 0 ]
            then printf "%2s:FizzBuzz\n" $(($CNT+1))
            else
                    if [ $(($CNT % 3)) = 0 ]
                    then printf "%2s:Fizz\n" $(($CNT+1))
                    else
                            if [ $(($CNT % 5)) = 0 ]
                            then printf "%2s:Buzz\n" $(($CNT+1))
                            else
                            printf "%2s:hoge\n" $(($CNT+1))
                            fi
                    fi
            fi
            let CNT+=1
    done
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4004'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4004
  :user_name: takatoh
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/189/
  :language: Ruby
  :time: 2007/11/14 10:12 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  出遅れたけど，こんなのどうか。\n\t"
  :code: |
    fizzbuzz = { true  =&gt; { true =&gt; "FizzBuzz", false =&gt; "Fizz" },
                 false =&gt; { true =&gt; "Buzz",     false =&gt; "hoge" } }

    1.upto(20) do |x|
      printf("%2d:%s\n", x, fizzbuzz[x%3==0][x%5==0])
    end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4010'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4010
  :user_name: raynstard
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/127/
  :language: 
  :time: 2007/11/14 11:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">すでに気づいているかもしれませんが、\r\nお題をよくよんでくだされ\r\nこっちはelseつかっちゃだめです(笑</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4011'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4011
  :user_name: raynstard
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/127/
  :language: 
  :time: 2007/11/14 11:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">すみません、書き方が悪かったですね。\r\n!= を無くしたいと言ったのは if そのものを無くしたかったのです。\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4013'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4013
  :user_name: raynstard
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/127/
  :language: 
  :time: 2007/11/14 11:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ELSEは無しでよろしくです。\r\n僕もCOBOLはわかりませんがループをスキップするというのと\r\nELSEを使うのは別の話だと思うので。\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4018'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4018
  :user_name: RC3
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/565/
  :language: HSP
  :time: 2007/11/14 12:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">安直。\r\n#defcfuncの使い方にはまった。\r\n（#module/#globalにはさむ）</pre>\n\t"
  :code: |
    #module
    #defcfunc message int n
        msg = ""
        if n \ 3 == 0 : msg += "Fizz"
        if n \ 5 == 0 : msg += "Buzz"
        if strlen(msg) == 0 : msg += "hoge"
        return str(n) + ":" + msg
    #global

    repeat 20
        mes message(1 + cnt)
    loop
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4063'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4063
  :user_name: nantan
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/535/
  :language: Bash
  :time: 2007/11/15 12:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>書き直してみました。</p>\n\n\t"
  :code: |
    #!/bin/bash
    CNT=1
    while [ $CNT -le 20 ]; do
      if [ $(($CNT % 15)) = 0 ]; then
        printf "%2s:FizzBuzz\n" $CNT
      elif [ $(($CNT % 3)) = 0 ]; then
        printf "%2s:Fizz\n" $CNT
      elif [ $(($CNT % 5)) = 0 ]; then
        printf "%2s:Buzz\n" $CNT
      else
        printf "%2s:hoge\n" $CNT
      fi
      let CNT+=1
    done
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4064'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4064
  :user_name: nantan
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/535/
  :language: 
  :time: 2007/11/15 12:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>あー、、、else使ってしまってます。。出直してきます。すみません。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4065'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4065
  :user_name: nantan
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/535/
  :language: Bash
  :time: 2007/11/15 13:03 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  <p>書き直しました。これでお題を満たしていますでしょうか。。</p>\n\n\t"
  :code: |
    #!/bin/bash
    CNT=0
    while [ $CNT -lt 20 ]; do
      let CNT+=1
      if [ $(($CNT % 15)) = 0 ]; then
        printf "%2s:FizzBuzz\n" $CNT
        continue
      elif [ $(($CNT % 3)) = 0 ]; then
        printf "%2s:Fizz\n" $CNT
        continue
      elif [ $(($CNT % 5)) = 0 ]; then
        printf "%2s:Buzz\n" $CNT
        continue
      fi
      printf "%2s:hoge\n" $CNT
    done
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4066'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4066
  :user_name: eban
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/97/
  :language: Bash
  :time: 2007/11/15 13:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>なんか全然Bashじゃないという気も</p>\n\n\t"
  :code: |
    seq -f%2g: 20|sed '3~3s/$/Fizz/;5~5s/$/Buzz/;s/:$/:hoge/'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4067'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4067
  :user_name: eban
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/97/
  :language: 
  :time: 2007/11/15 13:10 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>ああ、そうそう。sedの~はGNU sed限定機能です。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4068'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4068
  :user_name: nantan
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/535/
  :language: COBOL
  :time: 2007/11/15 13:41 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>お題の一部が飛んでしまっていました。すみません。書き直してみました。</p>\n\n\t"
  :code: |2
           IDENTIFICATION DIVISION.
           PROGRAM-ID. FIZZ-BUZZ.
           ENVIRONMENT DIVISION.
           DATA DIVISION.
           WORKING-STORAGE SECTION.
           01 I PIC 9(2) VALUE 0.
           01 DIV PIC 9(2) VALUE 0.
           01 REM PIC 9(2) VALUE 0.
           01 EDIT PIC Z9.
           01 SKIP PIC 9 VALUE 0.
           PROCEDURE DIVISION.
           PERFORM VARYING I FROM 1 BY 1 UNTIL I &gt; 20
             DIVIDE I BY 15 GIVING DIV REMAINDER REM
             IF REM = 0 THEN
               MOVE I TO EDIT
               DISPLAY EDIT ":FizzBuzz"
               MOVE 1 TO SKIP
             END-IF
             DIVIDE I BY 3 GIVING DIV REMAINDER REM
             IF REM = 0 AND SKIP = 0 THEN
               MOVE I TO EDIT
               DISPLAY EDIT ":Fizz"
               MOVE 1 TO SKIP
             END-IF
             DIVIDE I BY 5 GIVING DIV REMAINDER REM
             IF REM = 0 AND SKIP = 0 THEN
               MOVE I TO EDIT
               DISPLAY EDIT ":Buzz"
               MOVE 1 TO SKIP
             END-IF
             IF SKIP = 0 THEN
               MOVE I TO EDIT
               DISPLAY EDIT ":hoge"
             END-IF
             MOVE 0 TO SKIP
           END-PERFORM
           STOP RUN.
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4088'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4088
  :user_name: raynstard
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/127/
  :language: 
  :time: 2007/11/15 23:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">elsif は else ifの略なので普通だとNGですね\r\nでもまぁ、continueを使っていて\r\nロジック的にelseが意味の無いものとなっているので\r\nグレーゾーンというところでしょうか(笑\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4091'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4091
  :user_name: raynstard
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/127/
  :language: 
  :time: 2007/11/16 00:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">いつの間にかなかなかの投稿数になってきていますね(笑\r\n「elseなし」した利点を後付けで考えてみました。\r\n#
    以下、なった　==  なるのかも で\r\n\r\n1. 言語の文法を単純な形に絞ることで他言語への移植がしやすくなった\r\n2. 1.の結果、投稿されたコードのロジックを純粋に比較しやすくなった\r\n3.
    つまり、コードの表現で勝負できるかも？\r\n\r\nお題を投稿した時点での想定は5パターンくらいでしたけど\r\n今、8パターンくらいですかね？\r\nいろんな発想があるものですb</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4092'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4092
  :user_name: nantan
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/535/
  :language: 
  :time: 2007/11/16 00:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>そうですね。。勝手にelseはNGで、else ifはOKって脳内変換してしまっていました。度々すみません。おっしゃる通りelifをifに置き換えれば期待するコードになります。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4107'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4107
  :user_name: tell
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/228/
  :language: 
  :time: 2007/11/16 11:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>流石に“15個全部作れば～”ってのは，減点対象なのかな？</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4115'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4115
  :user_name: にしお
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/11/16 14:49 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>減点かどうかはさておき思いっきり既出ですね。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4274'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4274
  :user_name: cho45
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/579/
  :language: Ruby
  :time: 2007/11/20 12:02 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <div class=\"section\">\n<p>完璧に出遅れで題意に従っているかあやしいのですが書いてみました。オブジェクト指向
    (笑) という感じです。\r</p>\n<p>\r</p>\n<p>言語組みこみの if/else を使わないという解釈です。\r</p>\n<p>\r</p>\n<p>else
    にみえるのは、メソッドの名前なので hoge でも fuga でもよく、名前はこのさいどうでもいいと思ったので else のままにしてあります。\r</p>\n<p>\r</p>\n<p>cycle
    を使っているので ruby1.9 です。</p>\n</div>\n\t"
  :code: |
    class True
        def then
            yield
            self
        end

        def else
            self
        end
    end

    class False
        def then
            self
        end

        def else
            yield
        end
    end

    t = True.new
    f = False.new
    (1..20).zip([f, f, t].cycle, [f, f, f, f, t].cycle).each do |i, i3, i5|
        t = ""
        i3.then {
            i5.then {
                t = "FizzBuzz"
            }.else {
                t =  "Fizz"
            }
        }.else {
            i5.then {
                t = "Buzz"
            }.else {
                t = "hoge"
            }
        }
        puts "%2d:%s" % [i, t]
    end
  :tags:
  - ruby1.9
  :references:
    :url: 
    :title: 
- :id: '4285'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4285
  :user_name: cho45
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/579/
  :language: Ruby
  :time: 2007/11/21 06:25 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>せっかく Ruby なので、もうすこし踏みこんで 1.8 系でも動くようにしました。</p>\n<p>TrueClass/FalseClass
    は true/false のクラスで、それを拡張しています。.result を付けくわえたのは if 文 (のようにみえるもの) が値を持つようにみせかけたかったからです。</p>\n\n\t"
  :code: |
    #!ruby -Ku
    require "pp"

    class TrueClass
        def then
            @ret = yield
            self
        end

        def else
            self
        end

        def result
            @ret
        end
    end

    class FalseClass
        def then
            self
        end

        def else
            @ret = yield
            self
        end

        def result
            @ret
        end
    end

    (1..20).each do |i|
        puts "%2d:%s" % [i,
            (i % 3 == 0).then {
                (i % 5 == 0).then {
                    "FizzBuzz"
                }.else {
                    "Fizz"
                }.result
            }.else {
                (i % 5 == 0).then {
                    "Buzz"
                }.else {
                    "hoge"
                }.result
            }.result
        ]
    end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4399'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4399
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: C
  :time: 2007/11/25 14:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>C#3.0</p>\n</div>\n\t"
  :code: |2
            public void Test()
            {
                Func&lt;Func&lt;string, string&gt;, Func&lt;string, string&gt;&gt; f = ( fn =&gt; fn );

                int i = 1;
                var f_hoge = f( x =&gt; {
                    if ( string.IsNullOrEmpty( x ) ) return "hoge";
                    return x;
                } );
                var f_5 = f( x =&gt; {
                    if ( i%5 == 0 ) return f_hoge( x + "Buzz" );
                    return f_hoge( x );
                } );
                Func&lt;string&gt; f_3 = ( () =&gt; {
                    if ( i%3 == 0 ) return f_5( "Fizz" );
                    return f_5( "" );
                } );
                for ( ; i &lt;= 20 ; i++ )
                    Console.WriteLine( "{0,2}:{1}", i, f_3() );
            }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4981'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/4981
  :user_name: tomoe
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/634/
  :language: PHP
  :time: 2007/12/26 14:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>整数→真偽値→文字列とキャスト。</p>\n\n\t"
  :code: |
    $arr = array('_' =&gt; 'FizzBuzz', '_1' =&gt; 'Fizz', '1_' =&gt; 'Buzz', '1_1' =&gt; 'hoge');
    for ($i = 1; $i &lt;= 20; $i++) {
        echo($i . ':');
        echo($arr[(bool)($i%3) . '_' . (bool)($i%5)]);
        echo("\n");
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5115'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/5115
  :user_name: pooq
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/606/
  :language: Batchfile
  :time: 2008/01/02 08:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    @echo off
    setlocal enabledelayedexpansion
    set /a n=%1+19
    for /l %%i in (%1,1,%n%) do (
      set /a a=%%i%%3
      set /a b=%%i%%5
      set d=
      if !a!==0 set d=Fizz
      if !b!==0 set d=!d!Buzz
      if "!d!"=="" set d=hoge
      echo %%i:!d!
    )
  :tags:
  - cmd
  :references:
    :url: 
    :title: 
- :id: '5161'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/5161
  :user_name: szktty
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/648/
  :language: Other
  :time: 2008/01/04 08:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Mac OS X (PowerPC 32bit) アセンブリで。else if, elseの文法自体ないんで普通に。</p>\n\n\t"
  :code: "        ;; Mac OS X (PowerPC 32bit)\n        ;; % as -o fizzbuzz.o fizzbuzz.s
    &amp;&amp; gcc fizzbuzz.o -o fizzbuzz\n        .machine ppc\n        .globl _main\n\n_main:\n
    \       li      r6, 1           ; 行番号\n\n_print_line:\n        li      r9, 0           ;
    Fizz出力フラグ\n\n        ;; 行番号の出力\n        li      r4, hi16(line)\n        addi    r4,
    r4, lo16(line)\n        li      r5, hi16(line_len)\n        addi    r5, r5, lo16(line_len)\n\n
    \       ;; 行番号の xx を書き換える\n        cmpli   cr7, r6, 10\n        blt     cr7, _replace_one_digit\n\n
    \       ;; 二桁の行番号\n        ;; 一桁目を求める\n        li      r8, 10          ; 10で割った商を求める\n
    \       divwu   r7, r6, r8\n        addi    r7, r7, 48      ; 数字のASCIIコードを求める\n
    \       stb     r7, 0(r4)       ; 文字列の先頭を書き換える\n        addi    r4, r4, 1       ;
    文字列のポインタを進める\n        \n        ;; 二桁目を求める\n        li      r8, 10          ;
    10で割った余りを求める\n        divwu   r7, r6, r8      ; 割って（=商）\n        mullw   r7, r7,
    r8      ; かけて（商*除数）\n        subf    r7, r7, r6      ; 引く（被除数-商*除数）\n        addi
    \   r7, r7, 48      ; 数字のASCIIコードを求める\n        stb     r7, 0(r4)       ; 文字列の先頭を書き換える\n
    \       subi    r4, r4, 1       ; 文字列のポインタを戻しておく  \n        b       _print_line_num\n\n_replace_one_digit:\n
    \       li      r7, 32          ; ASCIIコード: ' '\n        stb     r7, 0(r4)\n        addi
    \   r4, r4, 1\n        addi    r7, r6, 48      ; 数字のASCIIコードを求める\n        stb
    \    r7, 0(r4)\n        subi    r4, r4, 1       ; 文字列のポインタを戻しておく\n\n_print_line_num:\n
    \       bl      _print_str\n\n_print_msg:\n        ;; 3の倍数\n        li      r8,
    3\n        divwu   r7, r6, r8\n        mullw   r7, r7, r8\n        subf    r7,
    r7, r6\n        cmpli   cr7, r7, 0\n        bne     cr7, _print_msg2\n\n        ;;
    Fizz を出力\n        li      r9, 1           ; Fizz出力済みフラグ\n        li      r4, hi16(fizz)\n
    \       addi    r4, r4, lo16(fizz)\n        li      r5, hi16(fizz_len)\n        addi
    \   r5, r5, lo16(fizz_len)\n        bl      _print_str\n        \n_print_msg2:\n
    \       ;; 5の倍数\n        li      r8, 5\n        divwu   r7, r6, r8\n        mullw
    \  r7, r7, r8\n        subf    r7, r7, r6\n        cmpli   cr7, r7, 0\n        bne
    \    cr7, _print_hoge\n        \n        ;; Buzz を出力\n        li      r4, hi16(buzz)\n
    \       addi    r4, r4, lo16(buzz)\n        li      r5, hi16(buzz_len)\n        addi
    \   r5, r5, lo16(buzz_len)\n        bl      _print_str\n        b       _print_term\n\n_print_hoge:\n
    \       ;; Fizz を出力済みなら飛ばす\n        cmpli   cr7, r9, 0\n        bne     cr7, _print_term\n
    \       \n        ;; hoge を出力\n        li      r4, hi16(hoge)\n        addi    r4,
    r4, lo16(hoge)\n        li      r5, hi16(hoge_len)\n        addi    r5, r5, lo16(hoge_len)\n
    \       bl      _print_str\n\n_print_term:\n        ;; 改行の出力\n        li      r4,
    hi16(lf)\n        addi    r4, r4, lo16(lf)\n        li      r5, hi16(lf_len)\n
    \       addi    r5, r5, lo16(lf_len)\n        bl      _print_str\n        \n        ;;
    20行分繰り返す\n        addi    r6, r6, 1\n        cmpli   cr7, r6, 20\n        ble
    \    cr7, _print_line\n        b       _exit\n\n;; 文字列を出力する\n;; r4 に文字列のアドレスを、r5
    に文字列の長さをセットしておく\n_print_str:\n        ;; スタックに退避\n        stwu    r6, -4(r1)\n\n
    \       ;; sys_write()\n        li      r3, 1           ; 標準出力\n        li      r0,
    4           ; sys_write\n        sc                      ; 呼び出し\n\n        ;;
    スタックから復帰\n        lwz     r6, 0(r1)\n        addi    r1, r1, 4\n\n        ;; サブルーチンから戻る\n
    \       blr\n\n_exit:\n        li      r3, 0\n        li      r0, 1           ;
    sys_exit\n        sc\n\n\n        .data\n        .align 2\n\nline:\n        ;;
    xx の箇所は出力時に書き換える\n        .asciz  \"xx: \"\n        line_len = 4\n\nfizz:\n        .asciz
    \ \"Fizz\"\n        fizz_len = . - fizz - 1\n        \nbuzz:\n        .asciz  \"Buzz\"\n
    \       buzz_len = . - buzz - 1\n\nhoge:\n        .asciz  \"hoge\"\n        hoge_len
    = . - hoge - 1\n\nlf:\n        .asciz  \"\\n\"\n        lf_len = 1\n"
  :tags:
  - Assembly
  - MacOSX
  - PowerPC
  :references:
    :url: /web/20090607072941/http://www.nk.rim.or.jp/~jun/ppcasm/ppcasm00.html
    :title: 玄箱でアセンブリ
- :id: '5164'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/5164
  :user_name: szktty
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/648/
  :language: 
  :time: 2008/01/04 08:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>fizz_len, buzz_len, hoge_len は演算する必要ありませんでした。全部4でOK。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5439'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/5439
  :user_name: queck
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/681/
  :language: Other
  :time: 2008/01/24 03:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    USING: kernel math math.parser io sequences ;

    20 [
      1 + dup dup number&gt;string write ":" write
      3 mod 0 =
      swap 5 mod 0 =
      2dup swap
      [ "Fizz" write ] [ ] if
      [ "Buzz" write ] [ ] if
      or not [ "hoge" write ] [ ] if
      nl
    ] each
  :tags:
  - Factor
  :references:
    :url: 
    :title: 
- :id: '5470'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/5470
  :user_name: pooq
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/01/26 15:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    f=:3 :0
    ;"1((":y);':';'fizz';'buzz';'hoge')#~1,1,(,0&amp;=@+/)"1-.*|:3 5|y
    )
    fizzbuzz=:f"0&amp;(+&amp;(i.20))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5701'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/5701
  :user_name: saws
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/642/
  :language: Ruby
  :time: 2008/02/08 09:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">見掛け上は条件分岐を使わず, かつ, FizzとBuzzがコード中に一回ずつしか出現しないようにしてみました.
    </pre>\n\t"
  :code: |
    1.upto(20){|i|
      puts({0 =&gt; "#{i}: hoge", i%5 =&gt; "#{i}: ", i%3 =&gt; "#{i}: Fizz"}.
             merge({i%5 =&gt; 'Buzz'}){|k,a,b| "#{a}#{b}"}[0])
    }
  :tags:
  - 1.8.6
  - ruby
  :references:
    :url: 
    :title: 
- :id: '5934'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/5934
  :user_name: howking
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/744/
  :language: Erlang
  :time: 2008/03/04 16:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>これだったらできてる気がする。</p>\n\n\t"
  :code: |
    -module(fizzbuzz).
    -export([start/0]).

    start()-&gt;
        lists:foreach(fun(X)-&gt;io:format("~b:~s~n",[X,zz(X)])end,lists:seq(1,20)).

    zz(N) when N rem 3 =:= 0 andalso N rem 5 =:= 0 -&gt;
        "FizzBuzz";
    zz(N) when N rem 3 =:= 0 -&gt;
        "Fizz";
    zz(N) when N rem 5 =:= 0 -&gt;
        "Buzz";
    zz(_)-&gt;
        "hoge".
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5995'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/5995
  :user_name: egtra
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/759/
  :language: Other
  :time: 2008/03/10 13:42 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ActiveBasic、どう書く？org初のはずです。バージョン4.24を使いましたが、特にバージョン依存の機能は使っていないはずです。</pre>\n\t"
  :code: |
    #prompt 'N88風コンソール窓を使う指定

    Dim s As String
    Dim i As Long
    For i = 1 To 20
        s = ""
        If i Mod 3 = 0 Then
            s = "Fizz"
        End If

        If i Mod 5 = 0 Then
            s = s + "Buzz"
        End If

        If s = "" Then
            s = "hoge"
        End If

        Print Str$(i) +  ":" + s
    Next
  :tags:
  - ActiveBasic
  :references:
    :url: 
    :title: 
- :id: '6025'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/6025
  :user_name: horiuchi
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/570/
  :language: Other
  :time: 2008/03/21 01:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Forth でFizzBuzzしてみました。数字の後にスペースが入ってしまってしまうのは仕様です。\r\nNot
    Equal使っているので微妙ですが、全部スタックなのでご容赦願います。\r\n\r\npForthでの実行結果:\r\n&gt; 20 FizzBuzz\r\n1
    :hoge\r\n2 :hoge\r\n3 :Fizz\r\n4 :hoge\r\n5 :Buzz\r\n6 :Fizz\r\n7 :hoge\r\n8 :hoge\r\n9
    :Fizz\r\n10 :Buzz\r\n11 :hoge\r\n12 :Fizz\r\n13 :hoge\r\n14 :hoge\r\n15 :FizzBuzz\r\n16
    :hoge\r\n17 :hoge\r\n18 :Fizz\r\n19 :hoge\r\n20 :Buzz\r\n</pre>\n\t"
  :code: ": FizzBuzz ( n -- )\n1 + 1 DO\n  I DUP . .\" :\" \n  DUP 3 mod 0 = IF .\"
    Fizz\" THEN\n  DUP 5 mod 0 = IF .\" Buzz\" THEN\n  DUP 3 mod 0 &lt;&gt; IF DUP
    5 mod 0 &lt;&gt; IF .\" hoge\" THEN THEN\n  CR\nLOOP ;\n"
  :tags:
  - Forth
  :references:
    :url: 
    :title: 
- :id: '6026'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/6026
  :user_name: horiuchi
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/570/
  :language: Other
  :time: 2008/03/21 01:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>前のコードでは、スタックにゴミが残ってたりIF文が重なってたりと、微妙だったので修正版を。\n出力結果は同じです。</p>\n\n\t"
  :code: ": FizzBuzz ( n -- )\n1 + 1 DO\n  I DUP . .\" :\" \n  DUP 3 MOD 0 = IF .\"
    Fizz\" THEN\n  DUP 5 MOD 0 = IF .\" Buzz\" THEN\n  DUP 3 MOD 0 &lt;&gt; SWAP 5
    MOD 0 &lt;&gt; AND IF .\" hoge\" THEN\n  CR\nLOOP ;\n"
  :tags:
  - Forth
  :references:
    :url: 
    :title: 
- :id: '6160'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/6160
  :user_name: cappuccino
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/549/
  :language: C
  :time: 2008/04/09 02:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Mainメソッドが一行になるように書いてみました。</p>\n\n\t"
  :code: |
    using System;
    using System.Linq;

    class Program
    {
        static void Main(string[] args)
        {
            Enumerable.Range(1, 20).Select(n =&gt; new FizzBuzz(n)).ToList().ForEach(Console.WriteLine);
        }
    }

    class FizzBuzz
    {
        string s = "";

        public FizzBuzz(int n)
        {
            if ((n % 3) == 0) s += "Fizz";
            if ((n % 5) == 0) s += "Buzz";
            if (s.Equals("")) s += "hoge";
            s = string.Format("{0,2}", n) + ":" + s;
        }

        public override string ToString()
        {
            return s;
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6170'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/6170
  :user_name: cappuccino
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/549/
  :language: C
  :time: 2008/04/12 01:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>LINQを使ってFizzBuzz</p>\n\n\t"
  :code: |
    using System;
    using System.Linq;

    class Program
    {
        static void Main()
        {
            var FizzBuzz = from n in Enumerable.Range(1, 20)
                           select n % 15 == 0 ? new { Number = n, Message = "FizzBuzz" } :
                                  n % 3 == 0 ? new { Number = n, Message = "Fizz" } :
                                  n % 5 == 0 ? new { Number = n, Message = "Buzz" } : new { Number = n, Message = "hoge" };

            foreach (var item in FizzBuzz)
            {
                Console.WriteLine("{0, 2} : {1}", item.Number, item.Message);
            }
        }
    }
  :tags:
  - LINQ
  :references:
    :url: 
    :title: 
- :id: '6174'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/6174
  :user_name: Nemo
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/685/
  :language: PostScript
  :time: 2008/04/12 17:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">PostScript で。\r\n文字列処理はやっかいなので、素直に条件を満たしたら上書きで。\r\n</pre>\n\t"
  :code: |
    %!PS
    1 1 20 {
        (hoge)
        1 index 3 mod 0 eq { pop (Fizz) } if
        1 index 5 mod 0 eq { pop (Buzz) } if
        1 index 15 mod 0 eq { pop (FizzBuzz) } if
        exch 10 string cvs print (:) print
        =
    } for
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6233'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/6233
  :user_name: syat
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/766/
  :language: SQL
  :time: 2008/04/29 14:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  if もループも使っていません！\r<br>いや、ループはあるなら使いたかったけど、ストアドよく知らないし。\r<br>"
  :code: |
    --出力テーブル
    drop table OUTPUT;
    create table OUTPUT (
      LINE integer,
      MSG varchar(10)
    );
    --以下を２０回実行してください
    --&gt;&gt;&gt;ここから
    insert into OUTPUT select coalesce(max(LINE),0)+1, 'hoge' from OUTPUT;
    --&lt;&lt;&lt;ここまで
    --今回のキモ
    update OUTPUT set MSG = 'Fizz' where (LINE % 3) = 0;
    update OUTPUT set MSG = 'Buzz' where (LINE % 5) = 0;
    update OUTPUT set MSG = 'FizzBuzz' where (LINE % 15) = 0;
    --出力
    select LINE || '：' || MSG from OUTPUT order by LINE;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6531'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/6531
  :user_name: 匿名
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/4/
  :language: Groovy
  :time: 2008/06/17 16:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  if分の分岐を\r\n　(ansに何かあれば|  ansが空なら) \r\nで分けました。\n\t"
  :code: "1.upto(99) { \n    ans =\"\"\n    printf (\"%2d :\",it)\n    if (it%3 ==
    0) {ans =\"Fizz\"}\n    if (it%5 == 0) {ans += \"Buzz\"}\n    if (ans != \"\")
    {println ans} \n    if (ans == \"\") {println \"hoge\"}\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6576'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/6576
  :user_name: turugina
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/760/
  :language: XSLT
  :time: 2008/06/24 11:45 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">if すら使わずに。\r\n# XSLTプロセッサによっては曖昧なマッチでエラーになるかも..</pre>\n\t"
  :code: |
    &lt;xsl:stylesheet version="2.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:fn="http://www.w3.org/2005/xpath-functions"
      &gt;

      &lt;xsl:output method="text" /&gt;

      &lt;xsl:template match="/" &gt;
        &lt;xsl:for-each select="1 to 20"&gt;
          &lt;xsl:value-of select="." /&gt;
          &lt;xsl:text&gt; : &lt;/xsl:text&gt;
          &lt;xsl:variable name="elm" as="element()"&gt;
            &lt;xsl:element name="n"&gt;
              &lt;xsl:value-of select="." /&gt;
            &lt;/xsl:element&gt;
          &lt;/xsl:variable&gt;
          &lt;xsl:apply-templates select="$elm" /&gt;
          &lt;xsl:text&gt;&amp;#xA;&lt;/xsl:text&gt;
        &lt;/xsl:for-each&gt;
      &lt;/xsl:template&gt;

      &lt;xsl:template match="n"&gt;
        &lt;xsl:text&gt;hoge&lt;/xsl:text&gt;
      &lt;/xsl:template&gt;
      &lt;xsl:template match="n[(. mod 3)=0]"&gt;
        &lt;xsl:text&gt;Fizz&lt;/xsl:text&gt;
      &lt;/xsl:template&gt;
      &lt;xsl:template match="n[(. mod 5)=0]"&gt;
        &lt;xsl:text&gt;Buzz&lt;/xsl:text&gt;
      &lt;/xsl:template&gt;
      &lt;xsl:template match="n[(. mod 3)=0 and (. mod 5)=0]"&gt;
        &lt;xsl:text&gt;FizzBuzz&lt;/xsl:text&gt;
      &lt;/xsl:template&gt;

    &lt;/xsl:stylesheet&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8175'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/8175
  :user_name: taninsw
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/973/
  :language: Haskell
  :time: 2008/12/14 11:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>分岐はないのですが、裏でパターンマッチは発生してます。(そもそも、それがなければHaskellではプログラムが書けないと思います。)</p>\n<p>無限リストfizz,buzz,hogeをぶんまわしまくってます。</p>\n\n\t"
  :code: |
    fizz = cycle $ replicate 2 "" ++ ["Fizz"]
    buzz = cycle $ replicate 4 "" ++ ["Buzz"]
    fizzbuzz = zipWith (++) fizz buzz
    hoge = repeat "hoge"
    hogefizzbuzz = zipWith(\h f-&gt; drop (length f) h ++ f) hoge fizzbuzz

    numbering n = reverse.(':':).take 2 $ reverse (show n) ++ repeat ' '
    main = putStr.unlines $ zipWith (\n h-&gt; numbering n ++ h) [1..20] hogefizzbuzz
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9012'
  :parent_id: '77'
  :url: http://ja.doukaku.org/comment/9012
  :user_name: pooq
  :user_url: /web/20090607072941/http://ja.doukaku.org/user/606/
  :language: Lua
  :time: 2009/05/26 10:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    t = {"hoge", "Fizz", "Buzz", "FizzBuzz"}
    for i = 1, 20 do
      print(("%2d:%s"):format(i, t[2 - i * i % 3 + 2 * 0 ^ (i % 5)]))
    end
  :tags: []
  :references:
    :url: 
    :title: 
