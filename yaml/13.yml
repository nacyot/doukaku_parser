---
:id: '13'
:title: Hello, world!その２
:comments:
- :id: '3369'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3369
  :user_name: にしお
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/06 09:03 GMT
  :vote_count: '3'
  :vote_score: '-1'
  :body: "\r\n\t  「Hello, world!」と表示するプログラムを作ってください。\r\nただし、コード中に同じアルファベットが２回出現してはいけません。\r\n<p>\r\nアルファベットとは、小文字のa-zと大文字のA-Zを指すものとします。また、大文字と小文字は区別するものとします。つまり、記号や空白文字は何度出現しても構いませんし、小文字のgと大文字のGの両方を使うのは構いません。\r\n</p>\n<p>\r\n単純な「print
    \"Hello, world!\"」はrとoとlが２回以上使われているので題意を満たしません。\r\n</p>\n<p>\r\nこの問題は<a href=\"/web/20100706191607/http://ja.doukaku.org/2/\">Hello,
    world!</a>の上級編です。\r\n\t</p>"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3708'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3708
  :user_name: fujidig
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/507/
  :language: HSP
  :time: 2007/11/05 09:42 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\r\n\t  HSP では文字列以外の大文字小文字の区別がないので、区別しないでやってみました。”いかれ具合”は高いと思います。小さなウィンドウが
    34 個出ますので、実行するときは気をつけてください。\r\n\t"
  :code: |
    _0(   0 ) =  31,  13,  11,  73,  38,  44,  48,   8,  78,  16,  11,  69
    _0(  12 ) = 111,  51,  37,   9, 138,  35,  10,  22, 112,  28,  32,  11
    _0(  24 ) = 108,  33,  10,  46, 110,  74,  30,  10, 161,  10,   9,  74
    _0(  36 ) = 193,   9,   9,  72, 228,  32,  27,   9, 249,  37,  12,  39
    _0(  48 ) = 225,  76,  31,  10, 221,  36,  10,  44, 273,  77,  15,  11
    _0(  60 ) = 280,  84,   7,  14, 335,  44,   9,  40, 359,  33,  12,  51
    _0(  72 ) = 338,  80,  53,   9, 383,  47,  14,  45, 412,  36,  31,   8
    _0(  84 ) = 438,  39,   9,  43, 412,  78,  29,   7, 405,  41,  12,  40
    _0(  96 ) = 461,  34,   9,  53, 464,  44,  29,  10, 503,  10,   8,  73
    _0( 108 ) = 564,  10,  10,  78, 540,  40,  28,   9, 532,  45,  11,  39
    _0( 120 ) = 536,  76,  32,  10, 592,  13,  12,  52, 591,  75,  14,  12

    _1 = 0
    do
        bgscr _1 + 1, _0( _1 + 2 ), _0( _1 + 3 ), 0, _0( _1 + 0 ), _0( _1 + 1 )
        _1 += 4
    until _1 &gt; 128
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '233'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/233
  :user_name: shyouhei
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/70/
  :language: Brainf
  :time: 2007/07/06 09:19 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\n\t  brainf*ck\n\t"
  :code: |2
     ++++++++++[&gt;+++++++&gt;++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;++.&gt;+.+++++++..+++.&gt;++.&lt;&lt;+++++++++++++++.&gt;.+++.------.--------.&gt;+.&gt;.
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '242'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/242
  :user_name: takesako
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/65/
  :language: Perl
  :time: 2007/07/06 10:14 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  print packだとpの文字が2回出現してしまうので使えない...\n\t"
  :code: |
    die pack "C*", qw(72 101 108 108 111 44 32 119 111 114 108 100 33 10);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '245'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/245
  :user_name: takesako
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/65/
  :language: Perl
  :time: 2007/07/06 10:38 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  unpack version\n\t"
  :code: |
    die unpack "\165","/2&amp;5L;&amp;\\\Ul('=o&lt;FQD(0T*"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '247'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/247
  :user_name: takesako
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/65/
  :language: Perl
  :time: 2007/07/06 10:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  素直にPerlで、同じ数字も出てこない\n\t"
  :code: |
    print "Hel\154o, w\LOR\x6cd!";
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '253'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/253
  :user_name: こう。
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2007/07/06 11:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  数字はいいんですよね？\r\n\n\t"
  :code: "main(){\n\tputs(\"He\\154\\154\\157,World!\");\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '262'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/262
  :user_name: ytakenaka
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/35/
  :language: Common
  :time: 2007/07/06 13:31 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">Common Lispでは大文字と小文字は文字列以外では区別されない。その性質を使って作った。</pre>\n\t"
  :code: "(DOlist (j '(72 101 108 108 111 32 119 111 114 108 100 33))\n\t   (PRINC
    (Code-char J)))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '270'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/270
  :user_name: noeta
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/60/
  :language: PHP
  :time: 2007/07/06 15:03 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">一応動いた感</pre>\n\t"
  :code: |
    &lt;?
    $_1[] = '72';
    $_1[] = '101';
    $_1[] = '108';
    $_1[] = '108';
    $_1[] = '111';
    $_1[] = '44';
    $_1[] = '32';
    $_1[] = '119';
    $_1[] = '111';
    $_1[] = '114';
    $_1[] = '108';
    $_1[] = '100';
    $_1[] = '33';
    for($_2 = 0; $_2 &lt; 13; $_2++) {
      echO CHR($_1[$_2]);
    }
    ?&gt;
  :tags:
  - PHP
  :references:
    :url: 
    :title: 
- :id: '279'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/279
  :user_name: id:nekoruri
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/111/
  :language: Perl
  :time: 2007/07/06 16:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  インスパイアされてPerl版です。\n\t"
  :code: |
    die map { chr }  (
            72,
            101,
            108,
            108,
            111,
            44,
            32,
            119,
            111,
            114,
            108,
            100,
            33,
    );
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '281'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/281
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/07/06 16:37 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  Cがかぶってるように見えます。\r\n\r\nかといって、解決案もないんですが。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '282'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/282
  :user_name: hi_saito
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/149/
  :language: awk
  :time: 2007/07/06 17:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  awk でも 8 進数が扱えます。\n\t"
  :code: |
    BEGIN{print "\110\145\154\154\157\054\040\167\157\162\154\144\041"}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '283'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/283
  :user_name: kazuho
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/66/
  :language: Perl
  :time: 2007/07/06 23:45 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  24字。Perl だとこれが限界?\n\t"
  :code: |
    print+H,lc"eLLo, wORLd!"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '284'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/284
  :user_name: kazuho
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/66/
  :language: Perl
  :time: 2007/07/07 00:10 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  がーん。題意が違った orz\n\t"
  :code: |
    $_="He00o, w360d!";y/0-7/l-s/;print
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '291'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/291
  :user_name: takano32
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/148/
  :language: Ruby
  :time: 2007/07/07 03:37 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  8進数を使ったものです．\n\t"
  :code: |
    ruby -e 'puts "\110\145\154\154\157\54\40\167\157\162\154\144\41"'
  :tags:
  - Ruby
  :references:
    :url: 
    :title: 
- :id: '292'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/292
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: Other
  :time: 2007/07/07 03:49 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  HQ9+\n\t"
  :code: |
    H
  :tags:
  - HQ9+
  :references:
    :url: 
    :title: 
- :id: '298'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/298
  :user_name: daisuke
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/157/
  :language: Ruby
  :time: 2007/07/07 08:33 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  結構悩んだ。\n\t"
  :code: |
    "Helo,Wrd!".gsub(/(.{2})(.)(.)(.{2})(.)(.{2})/) {$1+$2+$2+$3+$4+$3+$5+$2+$6}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '301'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/301
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: Perl
  :time: 2007/07/07 08:49 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  文字の重複いっさいなしで\n\t"
  :code: |
    print+q[)./*%h&gt;-7ld!]^aKCFJHIBE
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '317'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/317
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/07/07 13:00 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  Javaだとclassだけで文字の重複があるので実現不可能だと思います（残念）\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '329'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/329
  :user_name: mjy
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/94/
  :language: Bash
  :time: 2007/07/08 00:34 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  \n\t"
  :code: |
    : e
    s${_}t r l o $_
    $4ch$3 H$4$2$2$3, W$3$1$2d!
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '331'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/331
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/07/08 01:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  あ、unicodeエスケープ使えばいいのか。でもuが重なるから１回しか使えない。publicにuが入っているし。やはり無理か……\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '348'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/348
  :user_name: ytakenaka
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/35/
  :language: 
  :time: 2007/07/08 11:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  あ、^^; ほんとだ。解決策は思い浮かばないんだよなぁ。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '351'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/351
  :user_name: kozima
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/164/
  :language: Common
  :time: 2007/07/08 13:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  被ってる文字にラベルを付けてみました\n\t"
  :code: |
    (maP () 'princ
         '(#\H #\e #1=#\l #1# #2=#\o #\  #\W #2# #\r #1# #\d #\!))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '352'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/352
  :user_name: kozima
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/164/
  :language: Common
  :time: 2007/07/08 13:56 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  CLISP 限定ですが。\n\t"
  :code: |
    (DOSEQ (j '(72 101 108 108 111 32 119 111 114 108 100 33))
           (PRINC (int-char J)))
  :tags:
  - CLISP
  :references:
    :url: 
    :title: 
- :id: '361'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/361
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/07/08 22:04 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">Pythonがなかったので一応。</pre>\n\t"
  :code: |
    print "Hel\154o, W\157\162\154d!"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '373'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/373
  :user_name: id:amachang
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/62/
  :language: JavaScript
  :time: 2007/07/09 03:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  我ながらいけてない＞＜ JavaScript でこれは難しかった。\n\t"
  :code: |
    _='\\u00';$='rtcf';eval(_+61+_+'6'+$[2]+_+65+$[0]+$[1]+'("'+_+48+_+65+_+'6'+$[2]+_+'6'+$[2]+_+'6'+$[3]+', '+_+77+_+6+$[3]+$[0]+_+'6'+$[2]+_+64+'!")');
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '376'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/376
  :user_name: kazuho
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/66/
  :language: JavaScript
  :time: 2007/07/09 04:16 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  おなじく JavaScript\n\t"
  :code: |
    _=['e','a','\x72','o','C'];
    [][_[0]+'v'+_[1]+'l'](String['f'+_[2]+_[3]+'m'+_[4]+'h'+_[1]+_[2]+_[4]+_[3]+'d'+_[0]](97,108,101,114,116,40,34,72,101,108,108,111,44,32,87,111,114,108,100,33,34,41))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '378'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/378
  :user_name: kazuho
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/66/
  :language: JavaScript
  :time: 2007/07/09 04:32 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  eval 使わない版\n\t"
  :code: |
    $=this;
    _=['a','e','r','\x74','\u0069','o','C'];
    $[_[0]+'l'+_[1]+_[2]+_[3]]($['S'+_[3]+_[2]+_[4]+'ng']['f'+_[2]+_[5]+'m'+_[6]+'h'+_[0]+_[2]+_[6]+_[5]+'d'+_[1]](72,101,108,108,111,44,32,87,111,114,108,100,33))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '382'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/382
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: PHP
  :time: 2007/07/09 08:54 GMT
  :vote_count: '3'
  :vote_score: '-3'
  :body: "\n\t  \n\t"
  :code: |
    &lt;?php
    for($i=1,$sa=array(72,29,7,0,3,-67,-12,87,-8,3,-6,-8,-67,0);$i&lt;count($sa);$sa[0] += $sa[$i++]){
     echo chr($sa[0]);
    }
    ?&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '401'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/401
  :user_name: ytakenaka
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/35/
  :language: 
  :time: 2007/07/09 17:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  フォロー。ありがとうございます。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '410'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/410
  :user_name: kacchi
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/145/
  :language: Emacs
  :time: 2007/07/09 21:06 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    (string 72 101 108 108 111 44 32 119 111 114 108 100 33)
  :tags:
  - EmacsLisp
  :references:
    :url: 
    :title: 
- :id: '423'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/423
  :user_name: eban
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/97/
  :language: Ruby
  :time: 2007/07/10 03:37 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  $&amp;と$'をつかうことでで記号だけで参照\n\t"
  :code: |
    "lo"=~/./;puts"He#{$&amp;*2+$'}, w#$'r#$&amp;d!"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '497'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/497
  :user_name: TGBT
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/167/
  :language: C
  :time: 2007/07/10 15:21 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  何故こうしないのかが不思議です。\n\t"
  :code: |
    main(){
        puts("\110\145\154\154\157\54\127\157\162\154\144\41");
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '502'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/502
  :user_name: beatak
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/196/
  :language: JavaScript
  :time: 2007/07/10 16:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  目指せ最短。『表示する』の意味に少し迷った。\n\t"
  :code: |
    alert(['\110\145\154\154\157\54\40\167\157\162\154\144\41']);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '506'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/506
  :user_name: こう。
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/134/
  :language: 
  :time: 2007/07/10 17:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  何故と聞かれれば文字減らすためとしか。\r\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '514'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/514
  :user_name: sukesam
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/204/
  :language: JavaScript
  :time: 2007/07/11 01:24 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  こうしたほうがさらに短くなるのではないでしょうか\n\t"
  :code: |
    alert('H\145\154\154o, w\157\162\154d!');
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '523'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/523
  :user_name: kaorun
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/61/
  :language: 
  :time: 2007/07/11 03:10 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  C#では正攻法ではできない気がする。\r\nDebug.Printでusing System.Diagnosticsは見逃してもらう方向で考えたけど、\\nnnの8進数リテラルが限定的にしか使えないので無理っぽい。\r\n.NETは基本的にメソッド名とかが明示的で長くて省略形も無いのでこういう課題は苦しいっす。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '575'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/575
  :user_name: rhodium
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/144/
  :language: C
  :time: 2007/07/11 13:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  c++だとこんな感じでしょうか\n\t"
  :code: |
    main(){
        cout &lt;&lt; "He\154\154\157, W\157rld!";
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '586'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/586
  :user_name: kolshica
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/226/
  :language: JavaScript
  :time: 2007/07/11 15:58 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  data スキームを使っているので、 IE では動きません。\r\ne がちょっと不恰好かも。\r\nところで皆さんは、文字列をどのようにして
    8進数に変換しているのでしょうか？\n\t"
  :code: |
    eval
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '606'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/606
  :user_name: sumim
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/07/12 03:26 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\">Squeak Smalltalk ではこれが精一杯。ｗ</pre>\n\t"
  :code: |
    '', 2645608968347327576478451524936

    "=&gt; 'Hello, world!' "
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '610'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/610
  :user_name: noeta
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/60/
  :language: PHP
  :time: 2007/07/12 05:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">よく考えたらpackがあったなぁ</pre>\n\t"
  :code: |
    &lt;?
    die(pack('C*', 72,101,108,108,111,32,119,111,114,108,100,33));
    ?&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '641'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/641
  :user_name: cats
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/172/
  :language: C
  :time: 2007/07/12 11:03 GMT
  :vote_count: '4'
  :vote_score: '-2'
  :body: "\n\t  中味が「class a{static void Main(){System.Console.WriteLine(\"Hello, world!\");}}」のファイルaを用意して置く。\r\n\r\nううむ、無理やりすぎる。\n\t"
  :code: |
    csC a|A
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '674'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/674
  :user_name: tetsuro6502
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/213/
  :language: Erlang
  :time: 2007/07/12 16:03 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: |
    io:put_chars([72,101,108,108,111,44,32,119,111,114,108,100,33,10]).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '718'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/718
  :user_name: tnk
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/30/
  :language: 
  :time: 2007/07/13 04:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">aが7回\r\ncが3回\r\nhが3回\r\niが2回\r\noが3回\r\npが2回\r\nrが4回\r\nsが5回つかわれているので失格\r\n\r\n＃↑を表示するプログラムを作れ，ってお題はどうだろう。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '721'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/721
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/07/13 05:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">じゃ、早速\r\nでも、絶対こういうのはperlとかの方が得意に決まってる。\r\n\r\n(define
    h (make-hash-table 'eqv?))\r\n\r\n(let loop ((c (read-char)))\r\n  (unless (eof-object?
    c)\r\n    (when (char-set-contains? #[a-zA-Z] c) (hash-table-update! h c (pa$
    + 1) 0))\r\n    (loop (read-char))))\r\n\r\n(define f #f)\r\n\r\n(hash-table-for-each
    h\r\n  (lambda (key val)\r\n    (when (&gt; val 1)\r\n      (set! f #t)\r\n      (print
    #`\",|key|が,|val|回\"))))\r\n\r\n(print\r\n  (if f\r\n    \"使われているので失格\"\r\n    \"重複した文字は有りません!\"))\r\n</pre>\n\t"
  :code: ''
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '794'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/794
  :user_name: shiro
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/41/
  :language: 
  :time: 2007/07/14 02:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  rもかぶってますね。pRincにすればOKかな。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '795'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/795
  :user_name: shiro
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/41/
  :language: 
  :time: 2007/07/14 02:42 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  これは…文字列連結によって数値が文字列にcoerceされるんですね。2645... を16進で見てみると右から左へ H e l l
    o ... と詰まっているみたいですが、それはそういうものなんですか?\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '814'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/814
  :user_name: katsu
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/117/
  :language: 
  :time: 2007/07/14 05:42 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  おっと、この余分な投稿で、HelloWorld!その2をschemeで解いたことになっちゃってますね。すみません、削除してもらえますか？あるいは、言語をschemeからOthersにしてもらうか。&gt;&gt;管理者様\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '836'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/836
  :user_name: iwk
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/49/
  :language: OCaml
  :time: 2007/07/14 11:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    printf "\072\101\108\108\111\044\032\119\111\114\108\100\033\010";;
  :tags:
  - F#
  :references:
    :url: 
    :title: 
- :id: '840'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/840
  :user_name: sumim
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/88/
  :language: 
  :time: 2007/07/14 12:23 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">以下のようなことで参考になりますかどうか…。\r\n\r\n'abcd' size        \"=&gt;
    4 \"\r\n'abcd' byteAt: 1   \"=&gt; 97 \"\r\n'abcd' asByteArray   \"=&gt; a ByteArray(97
    98 99 100) \"\r\n\r\n1684234849 size    \"=&gt; 4 \"\r\n1684234849 at: 1   \"=&gt;
    97 \"\r\n1684234849 as: ByteArray   \"=&gt; a ByteArray(97 98 99 100) \"\r\n\r\n'',
    'abcd'       \"=&gt; 'abcd' \"\r\n'', 1684234849   \"=&gt; 'abcd' \"\r\n'', #(97
    98 99 100) asByteArray   \"=&gt; 'abcd' \"</pre>\n\t"
  :code: ''
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '854'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/854
  :user_name: kkobayashi
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2007/07/14 16:21 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  JAPH的なコードが増えれば面白いですね\r\n（自分のは全く面白くないコードですが）\n\t"
  :code: |
    cat("Hel\154o, w\157r\154d!")
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '862'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/862
  :user_name: yuin
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/82/
  :language: Scala
  :time: 2007/07/14 18:08 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">いちおう。</pre>\n\t"
  :code: |
    println("He\154\154\157,World!");
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '883'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/883
  :user_name: shiro
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/41/
  :language: 
  :time: 2007/07/15 00:58 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  VMで動いてるんですよね? 実CPUのエンディアンに関わらず、整数はlittle endianの可変長オクテット列って扱いと理解すれば良いでしょうか。可変長にするならlittle
    endianは妥当な選択だと思います。\r\n\r\nそれにしても、意外なところでバイナリアンっぽくて(rawな表現を見せていて)新鮮でした。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '884'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/884
  :user_name: shiro
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/41/
  :language: Scheme
  :time: 2007/07/15 01:19 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">同じ発想をGaucheで。\r\n\r\n他の手はないかどうか色々考えてみたのだけれど、\r\n-
    文字列内エスケープは \\x とか \\u などアルファベットが入ってしまうので1回づつしか使えない\r\n- バイナリ操作やI/Oを行う手続きやモジュールは既にそれだけで重複文字を含んでいる\r\n\r\nなどなど、意外に難しい。しかもデフォルトでcase
    sensitiveだからCommon Lispみたいに\r\ncaseを変える回避法も使えないし。\r\n</pre>\n\t"
  :code: |
    (print #\H #\e #1=#\l #1# #2=#\o #\, #\  #\W #2# #\u0072 #1# #\d #\!)
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '893'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/893
  :user_name: sumim
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/88/
  :language: 
  :time: 2007/07/15 03:50 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">整数でも無限倍精度整数でなくては駄目みたいです。\r\n\r\n'', ('abc'
    as: LargePositiveInteger)   \"=&gt; 'abc' \"\r\n'', 16r636261   \"=&gt; Error:
    Instances of SmallInteger are not indexable \"\r\n'', 16r64636261   \"=&gt; 'abcd'
    \"</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '928'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/928
  :user_name: hirataka
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/233/
  :language: 
  :time: 2007/07/15 13:29 GMT
  :vote_count: '16'
  :vote_score: '16'
  :body: "\n\t  いまごろなでしこで、\n\t"
  :code: |
    甲は「l」
    乙は「o」
    「He{甲}{甲}{乙}, w{乙}r{甲}d!」を表示。
  :tags:
  - すばらしい洞察
  - その発想はなかった
  :references:
    :url: 
    :title: 
- :id: '988'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/988
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/07/16 09:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  日本語プログラミング言語で解決とは、意表をつかれました。Mind言語でもできますかね？その他ヨーロッパ系の言語とかあったりして。。。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1019'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/1019
  :user_name: nobsun
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2007/07/17 02:51 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">くるしい。</pre>\n\t"
  :code: |
    ghc -e "\"H\101l\108o, W\111r\108d\!\""
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1070'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/1070
  :user_name: katsu
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/117/
  :language: Prolog
  :time: 2007/07/18 13:42 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  Prolog勢力拡大のため。あれなんで\\\\ってかかなきゃいけないんだっけ？\n\t"
  :code: |
    writeln('\110\\145\\154\\154\\157\\54\\127\\157\\162\\154\\144\\41').
  :tags:
  - SWI-prolog
  :references:
    :url: 
    :title: 
- :id: '1073'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/1073
  :user_name: JDO
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/257/
  :language: Prolog
  :time: 2007/07/18 14:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">SWI-Prolog です。\r\n\r\n文字リテラルの表現の仕方って、Prolog
    言語の仕様ではないはず... なので、この処理系の場合の解ですね。\r\n</pre>\n\t"
  :code: |
    ?- print('He\154\\154\\157, W\157rld!').
  :tags:
  - SWI-Prolog
  :references:
    :url: 
    :title: 
- :id: '1361'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/1361
  :user_name: morchin
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/78/
  :language: Python
  :time: 2007/07/23 05:05 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\n\t  <pre class=\"compact\">表示したあと入力待ち状態になりますが、確かに表示しているので題意は満たしていると思います。\r\n</pre>\n\t"
  :code: |
    _ = chr
    _ = _(72) + _(101) + _(108)*2 + _(111) + _(44) + _(32) + _(119) + _(111) + _(114) + _(108) + _(100) + _(33)
    input(_)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1391'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/1391
  :user_name: にしお
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/24 08:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  消すのはもったいないのでコメントに移動してみました。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1412'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/1412
  :user_name: katsu
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/117/
  :language: 
  :time: 2007/07/24 11:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ありがとうございます。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1872'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/1872
  :user_name: jz5
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/344/
  :language: VB
  :time: 2007/08/05 12:19 GMT
  :vote_count: '3'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">Visual Studioのイミディエイトウィンドウ上でOKなら。\r\n\r\nSub
    Main\r\n   ...\r\nEnd Sub\r\nのような構文が基本なので厳しい。</pre>\n\t"
  :code: |
    ? StrConv("Ｈｅｌｌｏ，　Ｗｏｒｌｄ！", 8)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1881'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/1881
  :user_name: naoya_t
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/348/
  :language: awk
  :time: 2007/08/05 15:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    BEGIN { print "He\154\154o, w\157\162\154d!" }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2053'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2053
  :user_name: omoikani
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/374/
  :language: Other
  :time: 2007/08/09 23:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    print ("Hel\108\111, wo\114\108d!")
  :tags:
  - StandardML
  :references:
    :url: 
    :title: 
- :id: '2062'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2062
  :user_name: minekoa
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/337/
  :language: Smalltalk
  :time: 2007/08/10 18:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  VisualWolks です。sumin さんのSqueak のコードのような面白い方法も、ちゃんとWindowかTranscript
    に表示する良い方法も、思いつきませんでした。バイト配列を文字列に変換するコードをPrint　it すると 一応 Hello,World! と表示される言うつまらない解でご容赦です。\n\t"
  :code: |
    #[72 101 108 108 111 44 32 119 111 114 108 100 33] asString

    "=&gt; 'Hello, world!'"
  :tags:
  - VisualWorks
  :references:
    :url: 
    :title: 
- :id: '2080'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2080
  :user_name: naoya_t
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/348/
  :language: TeX
  :time: 2007/08/12 15:45 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">十二年ぶりにTeXbookを見ました。\r\nl が３つ出てくるのが厄介です。</pre>\n\t"
  :code: |
    H^^65^^6c^^,o, w^^6frl^^64!\end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2085'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2085
  :user_name: omoikani
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/374/
  :language: StandardML
  :time: 2007/08/12 21:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    print ("Hel\108\111, wo\114\108d!")
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2092'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2092
  :user_name: カノエ
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/376/
  :language: SQL
  :time: 2007/08/13 02:58 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  PostgreSQLだと、chr()で可能(なはず)。\n\t"
  :code: |
    selEct Char(72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33, 10) '';
  :tags:
  - MySQL
  :references:
    :url: 
    :title: 
- :id: '2177'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2177
  :user_name: miyamuko
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/382/
  :language: xtal
  :time: 2007/08/14 16:54 GMT
  :vote_count: '11'
  :vote_score: '11'
  :body: "\n\t  <pre class=\"compact\">xtal 0.9.7 から識別子に日本語が使えるようになったのでそれで。\r\nなでしこのが参考になりました。</pre>\n\t"
  :code: |
    へ: "He";
    ろ: "l";
    お: "o";
    わ: "w";
    る: "r";
    ど: "d!";
    (へ ~ ろ ~ ろ ~ お ~ ", " ~ わ ~ お ~ る ~ ろ ~ ど).p;
  :tags:
  - xtal0.9.7
  :references:
    :url: 
    :title: 
- :id: '2190'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2190
  :user_name: にしお
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/08/15 02:21 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">こんなに脱力感のあるコードは初めてです(笑)</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2273'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2273
  :user_name: 管理者
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/411/
  :language: 
  :time: 2007/08/17 11:02 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">Postscriptのバイナリトークンエンコードを使う例を発見したのでリンクしておきます。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: /web/20100706191607/http://d.hatena.ne.jp/yshl/20070713#1184329478
    :title: 同じアルファベットを二度使わないで Hello, world を出力する PostScript プログラム
- :id: '2939'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2939
  :user_name: 130R
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/409/
  :language: PowerShell
  :time: 2007/09/07 09:38 GMT
  :vote_count: '3'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">配列スライスして文字列展開しています。\r\nPS C:\\&gt; \"$(`\"Helo,
    wrd!`\"[0,1,2,2,3,4,5,6,3,7,2,8,9,10])\"\r\nHello, world!</pre>\n\t"
  :code: |
    "$(`"Helo, wrd!`"[0,1,2,2,3,4,5,6,3,7,2,8,9,10])"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2949'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2949
  :user_name: 130R
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/409/
  :language: PowerShell
  :time: 2007/09/10 02:38 GMT
  :vote_count: '2'
  :vote_score: '-2'
  :body: "\n\t  <pre class=\"compact\">やっちゃった。$ofsの値が悪さしてました\r\n$ofsは配列を文字列にするときに個々の値の間に挟まれる文字列で、デフォルトはスペースになっています。\r\nPS
    C:\\&gt; $ofs=\" \"\r\nPS C:\\&gt; [string](1,2,3)\r\n1 2 3\r\nPS C:\\&gt; $ofs=\"\"\r\nPS
    C:\\&gt; [string](1,2,3)\r\n123\r\n\r\nなので初めのコードだと\r\nH e l l o ,   w o r l d
    !\r\nと出てしまっていました。\r\nちゃんと新しいシェル出して動作確認しないと駄目ですね。</pre>\n\t"
  :code: |
    "$($ofs=`"`")$(`"Helo, wrd!`"[0,1,2,2,3,4,5,6,3,7,2,8,9,10])"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2951'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/2951
  :user_name: 130R
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/409/
  :language: 
  :time: 2007/09/10 04:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ああ、これもだめでした。oかぶってる。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3127'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3127
  :user_name: touchez_du_bois
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/432/
  :language: Groovy
  :time: 2007/09/20 10:28 GMT
  :vote_count: '2'
  :vote_score: '-2'
  :body: "\n\t  <pre class=\"compact\">1.1-beta-2で動作確認しました。\r\n8進表記にしてみました。\r\n</pre>\n\t"
  :code: |
    println "\110\145\154\154\157\54\40\167\157\162\154\144\41"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3128'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3128
  :user_name: nobsun
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/98/
  :language: 
  :time: 2007/09/20 13:06 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">nが2つあるように見えますが。。。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3142'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3142
  :user_name: touchez_du_bois
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/432/
  :language: Groovy
  :time: 2007/09/21 02:20 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">題意を満たしていなかった(nが2回出ていた)ので、再提出させてください...orz\r\n</pre>\n\t"
  :code: |
    print "\110\145\154\154\157\54\40\167\157\162\154\144\41\12"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3301'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3301
  :user_name: naranja
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/448/
  :language: Batchfile
  :time: 2007/10/09 12:21 GMT
  :vote_count: '7'
  :vote_score: '7'
  :body: "\n\t  <pre class=\"compact\">反則です。Hello, world!.bat という名前で保存して実行してください。</pre>\n\t"
  :code: |
    echo %~n0
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3304'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3304
  :user_name: susu
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/218/
  :language: Python
  :time: 2007/10/10 12:21 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    _,__ = "He,d!Wor", "l"
    _[:2]+__+__+_[-2]  +_[2]+  _[-3:]+__+_[3]  +_[4]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3308'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3308
  :user_name: susu
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/218/
  :language: Python
  :time: 2007/10/11 06:52 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\">前のは対話モードでしか効果がなかったので改良版。\r\nちょっと感動した。</pre>\n\t"
  :code: |
    _,__="HELD!", "WOR "
    exit("%s" %(_[:3]+_[-3]+__[-3]+ __[3]+ __[:3]+_[-3:]) )
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3457'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3457
  :user_name: naranja
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/448/
  :language: Ruby
  :time: 2007/10/18 09:47 GMT
  :vote_count: '9'
  :vote_score: '9'
  :body: "\n\t  <pre class=\"compact\">これならどうだ</pre>\n\t"
  :code: |
    puts &lt;&lt;_
    ##   #       # #                          #    # ##
    ##   #       # #                          #    # ##
    ##   #  ###  # # ####     # # # #### #### #    # ##
    ###### #   # # # #  #     # # # #  # #  # # #### ##
    ##   # ####  # # #  #     # # # #  # #    # #  # ##
    ##   # #     # # #  # ##  # # # #  # #    # #  #
    ##   #  ###  # # ####  #  ####  #### #    # #### ##
    _
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3636'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3636
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: Groovy
  :time: 2007/10/31 15:13 GMT
  :vote_count: '9'
  :vote_score: '-9'
  :body: "\n\t  <pre class=\"compact\">Eclipse Europe + ProjectZero pluginで動作しました。かな変数OK\r\neclipse上での動作が楽になるのでclass化しています。</pre>\n\t"
  :code: |
    class HelloWorld {
      static void main(args) {
        String あ="l"
        String い="o"
        print "He${あ}${あ}${い}, w${い}rld!"
      }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3637'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3637
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: Groovy
  :time: 2007/10/31 15:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Rubyにインスパイヤされてつくりました。\r\nPython同様　三重引用符使用可能。</pre>\n\t"
  :code: |2
       print """
        ##   #       # #                          #    # ##
        ##   #       # #                          #    # ##
        ##   #  ###  # # ####     # # # #### #### #    # ##
        ###### #   # # # #  #     # # # #  # #  # # #### ##
        ##   # ####  # # #  #     # # # #  # #    # #  # ##
        ##   # #     # # #  # ##  # # # #  # #    # #  #
        ##   #  ###  # # ####  #  ####  #### #    # #### ##
        """
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3640'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3640
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: Groovy
  :time: 2007/10/31 21:00 GMT
  :vote_count: '7'
  :vote_score: '-7'
  :body: "\n\t  <pre class=\"compact\">すみません　\"l\" が2回出ていました。</pre>\n\t"
  :code: |
    class HelloWorld {
      static void main(args) {
        String あ="l"
        String い="o"
        print "He${あ}${あ}${い}, w${い}r${あ}d!"
      }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3708'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3708
  :user_name: fujidig
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/507/
  :language: HSP
  :time: 2007/11/05 09:42 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  HSP では文字列以外の大文字小文字の区別がないので、区別しないでやってみました。”いかれ具合”は高いと思います。小さなウィンドウが
    34 個出ますので、実行するときは気をつけてください。\n\t"
  :code: |
    _0(   0 ) =  31,  13,  11,  73,  38,  44,  48,   8,  78,  16,  11,  69
    _0(  12 ) = 111,  51,  37,   9, 138,  35,  10,  22, 112,  28,  32,  11
    _0(  24 ) = 108,  33,  10,  46, 110,  74,  30,  10, 161,  10,   9,  74
    _0(  36 ) = 193,   9,   9,  72, 228,  32,  27,   9, 249,  37,  12,  39
    _0(  48 ) = 225,  76,  31,  10, 221,  36,  10,  44, 273,  77,  15,  11
    _0(  60 ) = 280,  84,   7,  14, 335,  44,   9,  40, 359,  33,  12,  51
    _0(  72 ) = 338,  80,  53,   9, 383,  47,  14,  45, 412,  36,  31,   8
    _0(  84 ) = 438,  39,   9,  43, 412,  78,  29,   7, 405,  41,  12,  40
    _0(  96 ) = 461,  34,   9,  53, 464,  44,  29,  10, 503,  10,   8,  73
    _0( 108 ) = 564,  10,  10,  78, 540,  40,  28,   9, 532,  45,  11,  39
    _0( 120 ) = 536,  76,  32,  10, 592,  13,  12,  52, 591,  75,  14,  12

    _1 = 0
    do
        bgscr _1 + 1, _0( _1 + 2 ), _0( _1 + 3 ), 0, _0( _1 + 0 ), _0( _1 + 1 )
        _1 += 4
    until _1 &gt; 128
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3755'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/3755
  :user_name: fujidig
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/507/
  :language: 
  :time: 2007/11/08 08:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    $1 = "l";
    $2 = "o";
    insert "H\x65"+$1+$1+$2+", w"+$2+"\X72"+$1+"d!";
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4036'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/4036
  :user_name: yappy
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/533/
  :language: 
  :time: 2007/11/14 19:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  この言語を使っている時点で条件を満たすとは・・・！\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4061'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/4061
  :user_name: aileron
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/467/
  :language: Perl
  :time: 2007/11/15 10:20 GMT
  :vote_count: '4'
  :vote_score: '-2'
  :body: "\n\t  <pre class=\"compact\">$_変数でがんばってみた。</pre>\n\t"
  :code: |
    sub
    {
        print $_[0] . $_[1] . $_[2] . $_[2] . $_[3]
            . $_[4]
            . $_[5] . $_[3] . $_[6] . $_[2] . $_[7] . $_[8] ;

    }-&gt;('H', 'e', 'l', 'o', ',' ,'w' ,'r' ,'d','!');
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4082'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/4082
  :user_name: matyr
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/343/
  :language: 
  :time: 2007/11/15 17:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    配列！1 2 3 3 4 5 6 7 4 8 3 9 10 作る「｜列　欄｜欄！((欄！読む)＋(列！(自分)見る))書く」
    　(配列！『H』『e』『l』『o』『,』『 』『w』『r』『d』『!』作る)(フィールド！作る　160 40 大きさ)選ぶ。
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4251'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/4251
  :user_name: Psychs
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/554/
  :language: Objective
  :time: 2007/11/19 11:30 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    main()
    {
      puts("Hel\154o w\154r\154d!");
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4750'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/4750
  :user_name: pooq
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2007/12/11 08:27 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  \n\t"
  :code: |
    (("."0'0122345637289'){'Helo, wrd!')(1!:2)3
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4823'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/4823
  :user_name: pooq
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/606/
  :language: Batchfile
  :time: 2007/12/15 05:53 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">command.comで。</pre>\n\t"
  :code: |
    @if "%1"=="" %0 e l o
    @%1ch%3 H%1%2%2%3, w%3r%2d!
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5725'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/5725
  :user_name: silverwire
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/646/
  :language: Bash
  :time: 2008/02/10 16:12 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">シェルスクリプトでも #3301と同じことができないか考えてみました。\r\n\r\n'Hello,
    world!.sh'という名前でファイルを保存し、実行してください。なお、 Solaris\r\nのBourne Shellのようにパターン照合演算子を実装していないシェルでは動作しません。\r\n\r\n
    \ e.g.\r\n    $ echo '__=${0##*/}; echo ${__%%.*}' &gt; 'Hello, world!.sh'\r\n\r\n
    \   $ chmod 700 'Hello, world!.sh'\r\n\r\n    $ ./'Hello, world!.sh'\r\n    Hello,
    world!\r\n\r\n    $ sh 'Hello, world!.sh'\r\n    Hello, world!\r\n\r\n    $ sh
    ./'Hello, world!.sh'\r\n    Hello, world!\r\n\r\n    $ sh `pwd`/'Hello, world!.sh'\r\n
    \   Hello, world!\r\n\r\nあくまで、アルファベット以外の ASCIIは重複が許されるという前提での話なのですが、\r\n以下のような処理を行っています。\r\n\r\n
    1. $0を参照して実行されたスクリプト自身のファイル名を取得。\r\n 2. パターン照合演算子##でファイル名の先頭からパターンに最長一致した部分を削除。\r\n
    \   (ファイル名以外のパス文字列を削除。)\r\n 3. パターン照合演算子%%でファイル名の末尾からパターンに最長一致した部分を削除。\r\n    (ファイル名から拡張子の部分を削除。)\r\n\r\nちなみに、
    $__という変数名を使用した理由は、$_には直前に実行したコマンド文字列が\r\n格納されているためです。</pre>\n\t"
  :code: |
    __=${0##*/}; echo ${__%%.*}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5726'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/5726
  :user_name: Nemo
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/685/
  :language: PostScript
  :time: 2008/02/10 17:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  PostScript です。#2273 のリンク先とは別の手で。ターミナルでなく紙等への出力も可能です。\r\nコメント部分は動作に関係ないので文字重複は無視してやって下さいませ。\r\n3行目の
    cvx exec (あるいは cvx def) さえアルファベット以外の文字で定義してしまえばあとはやり放題ということで。\n\t"
  :code: "%!PS\n% /! (cvx exec) cvx def\n/! (\\143\\166\\170 \\145\\170\\145\\143)
    cvx def  \n% (/Times-Roman findfont) !\n(/\\124\\151\\155\\145\\163-\\122\\157\\155\\141\\156
    \\146\\151\\156\\144\\146\\157\\156\\164) !\n% (32 scalefont) !\n(32 \\163\\143\\141\\154\\145\\146\\157\\156\\164)
    !\n%  (setfont) !\n(\\163\\145\\164\\146\\157\\156\\164) !\n% (100 100 moveto)
    !\n(100 100 \\155\\157\\166\\145\\164\\157) !\n% ((Hello, world!) show) !\n((\\110\\145\\154\\154\\157,
    \\167\\157\\162\\154\\144!) \\163\\150\\157\\167)  !\n% (showpage) !\n(\\163\\150\\157\\167\\160\\141\\147\\145)
    \ !\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5910'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/5910
  :user_name: xor
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/707/
  :language: PHP
  :time: 2008/03/01 15:19 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <p>冒頭の「&lt;?」は「&lt;?php」にした途端に死ぬ(条件を満たさなくなる)ので勘弁してください。</p>\n\n\t"
  :code: |
    &lt;?
    $_ = 'y';
    while(++$a&lt;3752103){
    $_++;
    }
    ECHO $_.', ';
    $_ = 'z';
    for(;++$b&lt;10786547;){
    $_++;
    }
    PRINT $_."!\n";
    ?&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6058'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/6058
  :user_name: sawat
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/322/
  :language: 
  :time: 2008/03/24 06:35 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  classやpublicは必須ではないけど、System.out.print に t が 3つもあるのでやっぱり無理。\r<br>以下が限界かorz\r<br><br>enum ハローワールド2 { ほげ;\r<br>  {\r<br>    char[] はろー = {72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33, 32};\r<br>    System.out.print(はろー);\r<br>  }\r<br>}\r<br><br>// tが3つ, e, n, m, rが2つ\r<br>// 実行方法(bashの場合)\r<br>&gt; java ハローワールド2　2&gt; /dev/null\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6131'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/6131
  :user_name: pooq
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/606/
  :language: Lua
  :time: 2008/04/02 13:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    print "Hel\108o, w\111\114\108d!"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6141'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/6141
  :user_name: syat
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/766/
  :language: BASIC
  :time: 2008/04/04 19:32 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  N88互換BASICで確認。\r<br>BASICは、\r<br>＜よい＞\r<br>・大文字小文字は区別されないので、同じアルファベットを２回まで使える。\r<br>・PRINT の省略形で ? を使える。\r<br>＜わるい＞\r<br>・文字列中のエスケープシーケンスを解釈しない。\r<br>・配列を扱う便利機能が皆無。\r<br>・文字列を配列解釈できない。\r<br>・read &amp; data だと、aが3回出てくるのでダメ。\r<br>・関数定義(def fnX) は、定義した時点で f が２回だし、関数名冒頭は fn 固定のため使えない。\r<br>・変数は全般的に、設定と参照の１回ずつしか使えない。\r<br>　例えば、インクリメントがないので n = N + 1 とすることになるが、\r<br>　するとその変数は参照できない。\r<br><br>これはマゾプレイｗ\r<br>答えは平凡なものになったけど、結構長いこと試行錯誤しました。\r<br>乱数とかpokeの使用を考えたくらい（笑）\r<br>全角半角変換する KACNV$ 関数があるけれど、#1872　で既出なので回避。\n\t"
  :code: |
    10 cls
    20 z$="072 101 108 108 111 044 032 119 111 114 108 100 033"
    30 for q = 1 tO 13
    40 ? ChR$(vaL(mid$(Z$,Q*4-3,3)));
    50 nexT
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6165'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/6165
  :user_name: syat
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/766/
  :language: C
  :time: 2008/04/10 13:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  １．VisualStudio（2005以降？）を起動。\r<br>２．「新しいプロジェクト」でコンソールアプリを選択。\r<br>３．以下の“コード”を入力。（■はタブキー）\r<br>４．F5キーを押す。\n\t"
  :code: |
    cw■■"He{0}{0}{1} W{1}r{0}d!",'l','o'
  :tags:
  - VisualStudio
  - コードスニペット
  :references:
    :url: 
    :title: 
- :id: '6459'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/6459
  :user_name: susu
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/218/
  :language: OCaml
  :time: 2008/06/10 02:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  　stringの近似値を使っています。実際の文字列と=で比較してもtrueになりません。\r<br>また、文字列を変換したデータを直接使っていないので、偶数コードの文字は\r<br>0と4の倍数の位置で、+1したコードの文字に変わってしまいます。\r<br>がんばって避けました。\r<br>　あとraiseでもprintでもexternalでも文字が重複するのでインタプリタ用です。\n\t"
  :code: "\"Hel\\108\" ^ Obj.magic [|999298615; 842414391; 16777232|];; \n\nObj.magic
    [|850371631; 909096495; 372225967;\n  1001361455; 959428527; 841987631; 16777263|]
    ^ \"\";;\n\n(*変換用コード\n  let getaddr (s:string) =\n    let s = (Obj.repr s) in\n
    \   Array.init (Obj.size s)\n      (fun i -&gt; (Obj.obj (Obj.field s i):int));;\n*)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6572'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/6572
  :user_name: susu
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/218/
  :language: 
  :time: 2008/06/24 08:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  型が違っただけみたいです。\r<br>修正版を投稿しました。http://ja.doukaku.org/comment/6571/\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6762'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/6762
  :user_name: しょーた
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/305/
  :language: PowerShell
  :time: 2008/07/17 21:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>$ofsのoを大文字にすれば逃げられるのでは？</p>\n\n\t"
  :code: |
    "$($Ofs=`"`")$(`"Helo, wrd!`"[0,1,2,2,3,4,5,6,3,7,2,8,9,10])"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7187'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/7187
  :user_name: pooq
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/606/
  :language: Prolog
  :time: 2008/08/18 05:58 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    writef([72,101,108,108,111,44,32,119,111,114,108,100,33]).
  :tags:
  - SWI-Prolog
  :references:
    :url: 
    :title: 
- :id: '8564'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/8564
  :user_name: doda
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/705/
  :language: Other
  :time: 2009/02/27 04:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>whitespaceで。</p>\n<p>whitespaceを使っている時点で文字制限をクリアしてしまうので、“同じ数値リテラルを2度使わない”という制限も入れてみました。</p>\n\n\t"
  :code: "                \n    \n                        \n    \n                        \n
    \n  \n     \n      \n                              \n \n     \n                    \n
    \   \n              \n    \n                              \n    \n      \n                        \n
    \   \n      \n                     \n    \n                 \n    \n               \n
    \   \n  \n\n\n.\n"
  :tags:
  - whitespace
  :references:
    :url: 
    :title: 
- :id: '8617'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/8617
  :user_name: doda
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/705/
  :language: Other
  :time: 2009/03/10 06:26 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>Befungeで。</p>\n<p>Befungeらしく書いたつもりです。</p>\n\n\t"
  :code: |
    |  |0:&lt; |0   &lt;
    1     " "
    &gt;9+"!dlroW ,"^
    &gt;v e# "H"&lt;
    ,: "  ^ &lt;
    ^_@&gt;     ^
  :tags:
  - Befunge
  :references:
    :url: /web/20100706191607/http://www015.upp.so-net.ne.jp/ina/lab/befunge93_document.html
    :title: Befunge-93 Documentation
- :id: '9249'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/9249
  :user_name: nk.
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/1075/
  :language: Perl
  :time: 2009/06/26 17:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>x演算子さまさま。</p>\n\n\t"
  :code: |
    $,="%c"x23;
    eval sprintf($,, 112, 114, 105, 110, 116, 34, 72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33, 92, 110, 34, 59);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9695'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/9695
  :user_name: pooq
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/606/
  :language: Arc
  :time: 2009/11/15 04:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    (map writeb '(72 101 108 108 111 44 32 119 111 114 108 100 33))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '10387'
  :parent_id: '13'
  :url: http://ja.doukaku.org/comment/10387
  :user_name: 匿名
  :user_url: /web/20100706191607/http://ja.doukaku.org/user/4/
  :language: dc
  :time: 2010/04/10 05:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">5735816763073854953388147237921P\r\nHello,
    world!</pre>\n\t"
  :code: |
    5735816763073854953388147237921P
  :tags: []
  :references:
    :url: 
    :title: 
