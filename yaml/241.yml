---
:id: '241'
:title: ダブルクリックの取得
:comments:
- :id: '8584'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8584
  :user_name: ところてん
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/166/
  :language: 
  :time: 2009/03/06 02:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  <pre class=\"compact\">マウスのダブルクリックを取得してください。\r\nダブルクリックを取得したら、ダブルクリックをした時のマウス座標を表示してください。</pre>\r\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8649'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8649
  :user_name: 匿名
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2009/03/12 13:42 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">JavaScript with jQuery on HTML\r\n</pre>\n\t"
  :code: |
    $(document).dblclick(function(ev){
        alert("x:"+ ev.clientX + "px, y:"+ ev.clientY + "px");
    });
  :tags:
  - jQuery
  :references:
    :url: 
    :title: 
- :id: '8650'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8650
  :user_name: 匿名
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2009/03/12 21:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    import Tkinter

    w = Tkinter.Tk()
    w.title('Double click me')
    w.bind('&lt;Double-Button-1&gt;',
           lambda ev: w.title("X=%d Y=%d" % (ev.x, ev.y)))
    Tkinter.mainloop()
  :tags:
  - Tkinter
  :references:
    :url: 
    :title: 
- :id: '8651'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8651
  :user_name: tnk
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/30/
  :language: Java
  :time: 2009/03/12 21:49 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>なんのひねりもないコードですが。Javaだと，ちょいと冗長になりますね。</p>\n\n\t"
  :code: |
    import java.awt.Point;
    import java.awt.event.MouseAdapter;
    import java.awt.event.MouseEvent;

    import javax.swing.JFrame;
    import javax.swing.JLabel;
    import javax.swing.JPanel;

    public class Q241 extends JFrame {
        public static void main(String[] args) {
            new Q241().setVisible(true);
        }
        public Q241() {
            super("Q241: Double Click.");
            setExtendedState(JFrame.MAXIMIZED_BOTH);

            final JLabel label = new JLabel("");
            JPanel panel = new JPanel();
            panel.add(label);
            panel.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e) {
                    if (e.getClickCount() == 2) {
                        Point p = e.getPoint();
                        label.setText("x = " + p.x + ", y = " + p.y);
                    }
                }
            });
            getContentPane().add(panel);
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8652'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8652
  :user_name: sumim
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2009/03/12 22:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Squeak Smalltalk で。</p>\n\n\t"
  :code: |
    | area |
    area := PasteUpMorph new.
    area assureUniClass.
    area class compile: 'doubleClick: evt
        Transcript cr; show: evt position'.
    area class compile: '    mouseDown: evt
        evt hand
            waitForClicksOrDrag: self
            event: evt
            selectors: #(click: doubleClick: nil nil)
            threshold: 10'.
    area extent: 640@480.
    area openInWorld.
    World findATranscript: nil.
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '8653'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8653
  :user_name: 匿名
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/4/
  :language: OCaml
  :time: 2009/03/12 22:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    open System.Windows.Forms

    let form = new Form()
    let label = new Label()
    let _ =
      form.Text &lt;- "Double Click";
      form.Controls.Add(label);
      form.MouseDoubleClick.Add
        (fun ev -&gt;
           label.Text &lt;- sprintf "%d, %d" ev.X ev.Y);
      form.ShowDialog()
  :tags:
  - F#
  :references:
    :url: 
    :title: 
- :id: '8654'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8654
  :user_name: Dubhead
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/785/
  :language: Other
  :time: 2009/03/12 23:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Fan 1.0.38で。\r\n座標はウィンドウ内の相対座標で、トリプルクリック以上でも動いてしまいます。\r\n\n\t"
  :code: |
    #!/usr/bin/env fan

    using fwt

    class Doukaku241
    {
      Void main() {
        Window {
          title = "ダブルクリックしてください"
          onMouseDown.add |Event e| {
            if (e.count == 2)
              echo("座標 ${e.pos} でダブルクリックされました")
          }
        }.open
      }
    }
  :tags:
  - Fan
  :references:
    :url: /web/20090806015924/http://www.fandev.org/
    :title: Fan Programming Language
- :id: '8657'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8657
  :user_name: あにす
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2009/03/13 10:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    using System;
    using System.Windows.Forms;

    class Class1 {
        static void Main() {
            Form form = new Form();
            form.MouseDoubleClick += (sender, e) =&gt; Console.WriteLine(e.Location);
            form.ShowDialog();
        }
    }
  :tags:
  - C#3.0
  :references:
    :url: 
    :title: 
- :id: '8658'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8658
  :user_name: emasaka
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/852/
  :language: Other
  :time: 2009/03/13 09:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ターミナルでの解がないようですので、とりあえずzsh+cursesで。</p>\n\n\t"
  :code: |
    #!/bin/zsh
    zmodload zsh/curses
    trap 'zcurses end' EXIT
    zcurses init
    zcurses addwin win $(stty size) 0 0
    while :; do
        zcurses input win s k m
        [ "$k" = MOUSE ] || continue
        set -- $m
        [ "$5" = DOUBLE_CLICKED1 ] || continue
        echo -e "x=$2, y=$3\r"
    done
  :tags:
  - curses
  - zsh
  :references:
    :url: 
    :title: 
- :id: '8663'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8663
  :user_name: genzou
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/793/
  :language: Groovy
  :time: 2009/03/15 23:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>以下の投稿を参考にさせていただきました。\nありがとうございます。\n<a class=\"reference\" href=\"/web/20090806015924/http://ja.doukaku.org/comment/8651/\">http://ja.doukaku.org/comment/8651/</a></p>\n\n\t"
  :code: |
    import groovy.swing.SwingBuilder
    import java.awt.*
    import javax.swing.*
    import static javax.swing.JOptionPane.*

    frame = new SwingBuilder().frame(preferredSize:new Dimension(500,500), defaultCloseOperation: JFrame.DISPOSE_ON_CLOSE, mouseClicked:{ e -&gt;
        if (e.clickCount &gt; 1 )
            showMessageDialog( frame, "x = " + e.point.x + ", y = " + e.point.y)
    })

    frame.pack()
    frame.show()
  :tags:
  - groovy
  :references:
    :url: 
    :title: 
- :id: '8674'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8674
  :user_name: selpo
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/1013/
  :language: C
  :time: 2009/03/16 07:20 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: |
    using System.Windows.Forms;
    static class Program
    {
        static void Main()
        {
            Application.EnableVisualStyles();
            Form form = new Form();
            form.MouseDoubleClick += (o, e) =&gt;
            {
                MessageBox.Show(e.Location.ToString());
            };
            Application.Run(form);
        }
    }
  :tags:
  - C#3.0
  :references:
    :url: 
    :title: 
- :id: '8689'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8689
  :user_name: turugina
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/760/
  :language: Perl
  :time: 2009/03/17 22:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Perl/Tk です</p>\n\n\t"
  :code: |
    use strict;
    use warnings;
    use Tk;

    Tk::MainWindow-&gt;new(
      -title =&gt; q/Double Click Me!/,
      -width =&gt; 200,
      -height =&gt; 200
    )-&gt;bind(
      q/&lt;Double-Button-1&gt;/,
      [sub {
        my ($w, $ev_x, $ev_y) = @_;
        $w-&gt;messageBox(
          -title =&gt; q/Coord/,
          -message =&gt; qq/(@{[$w-&gt;rootx+$ev_x, $w-&gt;rooty+$ev_y]})/
        );
      },
      map Ev($_), qw/x y/]
    );

    MainLoop;
  :tags:
  - Tk
  :references:
    :url: 
    :title: 
- :id: '8692'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8692
  :user_name: kkobayashi
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2009/03/18 11:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>R tcltkで。</p>\n\n\t"
  :code: |
    library(tcltk)
    tkbind(tktoplevel(), "&lt;Double-Button-1&gt;", function(x, y){
      print(sprintf("double clicked (%s, %s)", x, y))})
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8704'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8704
  :user_name: Kpan
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/1031/
  :language: HSP
  :time: 2009/03/21 22:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    #include "user32.as"

    #define WM_LBUTTONDBLCLK $00000203
    #define GCL_STYLE (-26)
    #define CS_DBLCLKS $00000008

        oncmd gosub *lbuttondblclk, WM_LBUTTONDBLCLK

        GetClassLong hwnd, GCL_STYLE
        SetClassLong hwnd, GCL_STYLE, stat | CS_DBLCLKS

        stop

    *lbuttondblclk
        mes ""+mousex+" x "+mousey

        return
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8773'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8773
  :user_name: selpo
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/1013/
  :language: C
  :time: 2009/04/04 10:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>初のCです。やはりWindows関係は、C#の方が簡単ですね。</p>\n\n\t"
  :code: |
    #include &lt;windows.h&gt;
    #include &lt;tchar.h&gt;
    #define WINDOW_WIDTH (400)
    #define WINDOW_HEIGHT (300)
    HWND Create(HINSTANCE hInst);
    LRESULT CALLBACK WndProc(HWND hWnd, UINT msg, WPARAM wp, LPARAM lp);
    int WINAPI WinMain(HINSTANCE hInst, HINSTANCE hPrev, LPSTR pCmd, int showCmd)
    {
        HWND hWnd = Create(hInst);
        if (hWnd == NULL) return 1;
        ShowWindow(hWnd, SW_SHOW);
        UpdateWindow(hWnd);
        MSG msg;
        while (GetMessage(&amp;msg, NULL, 0, 0))
        {
            TranslateMessage(&amp;msg);
            DispatchMessage(&amp;msg);
        }
        return 0;
    }
    HWND Create(HINSTANCE hInst)
    {
        WNDCLASSEX wc;
        wc.cbSize = sizeof(wc);
        wc.style = CS_HREDRAW | CS_VREDRAW | CS_DBLCLKS;
        wc.lpfnWndProc = WndProc;
        wc.cbClsExtra = 0;
        wc.cbWndExtra = 0;
        wc.hInstance = hInst;
        wc.hIcon = (HICON)LoadImage(NULL, MAKEINTRESOURCE(IDI_APPLICATION),
            IMAGE_ICON,    0, 0, LR_DEFAULTSIZE | LR_SHARED);
        wc.hIconSm = wc.hIcon;
        wc.hCursor = (HCURSOR)LoadImage(NULL, MAKEINTRESOURCE(IDC_ARROW),
            IMAGE_CURSOR, 0, 0, LR_DEFAULTSIZE | LR_SHARED);
        wc.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
        wc.lpszMenuName = NULL;
        wc.lpszClassName = _T("Doukaku");
        if (!RegisterClassEx(&amp;wc)) return NULL;
        int x, y;
        x = (GetSystemMetrics(SM_CXSCREEN) - WINDOW_WIDTH) / 2;
        y = (GetSystemMetrics(SM_CYSCREEN) - WINDOW_HEIGHT) / 2;
        return CreateWindow(wc.lpszClassName, _T("Double Click"),
            WS_OVERLAPPEDWINDOW, x,    y, WINDOW_WIDTH, WINDOW_HEIGHT,
            NULL, NULL, hInst, NULL);
    }
    LRESULT CALLBACK WndProc(HWND hWnd, UINT msg, WPARAM wp, LPARAM lp)
    {
        TCHAR str[20];
        switch(msg)
        {
            case WM_LBUTTONDBLCLK:
            case WM_RBUTTONDBLCLK:
            case WM_MBUTTONDBLCLK:
                _stprintf(str, _T("X : %d, Y : %d"), LOWORD(lp), HIWORD(lp));
                MessageBox(hWnd, str, _T("座標情報"), MB_OK);
                return 0;
            case WM_DESTROY:
                PostQuitMessage(0);
                return 0;
        }
        return DefWindowProc(hWnd, msg, wp, lp);
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8776'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8776
  :user_name: 匿名
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/4/
  :language: VB
  :time: 2009/04/05 01:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    Public Class Form1
        Private Sub Form1_MouseDoubleClick(ByVal sender As Object, _
                ByVal e As System.Windows.Forms.MouseEventArgs) Handles Me.MouseDoubleClick
            MessageBox.Show("X座標 : " &amp; e.X &amp; vbCrLf &amp; "Y座標 : " &amp; e.Y)
        End Sub
    End Class
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8799'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8799
  :user_name: lunlumo
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/813/
  :language: Scala
  :time: 2009/04/11 10:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>　scala.swingを使って書いてみました。</p>\n\n\t"
  :code: |
    import    java.awt.{Dimension, Graphics, Point}
    import    scala.swing.{BorderPanel, MainFrame, Panel, SimpleGUIApplication}
    import    scala.swing.event.{MouseClicked, WindowClosed}

    object HandleDoubleClick extends SimpleGUIApplication {
        val    panel:Panel = new BorderPanel {
                var    points:List[Point] = List()
                preferredSize = (300, 200)
                listenTo(Mouse.clicks)
                reactions += {
                    case MouseClicked(_, p, _, 2, _) =&gt; {
                        points = p::points
                        repaint
                    }
                }
                override def paintComponent(g:Graphics):Unit = {
                    super.paintComponent(g)
                    g.clearRect(0, 0, size.width, size.height)
                    for (val p &lt;- points.reverse) {
                        g.drawString("(%d,%d)".format(p.x, p.y), p.x, p.y)
                    }
                }
            }
        def top = new MainFrame {
                title = "handle double click"
                location = new Point(100, 100)
                contents = panel
            }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8839'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8839
  :user_name: 99yen
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/591/
  :language: 
  :time: 2009/04/25 21:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    表示ラベルとはラベル
    そのテキストは空
    母艦について
        ダブルクリックした時は
            表示ラベル="{母艦のマウスX},{母艦のマウスY}"
        マウス押した時は
            待機
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8880'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8880
  :user_name: egtra
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/759/
  :language: C
  :time: 2009/05/03 11:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  WTL (Windows Template Library)でやりました。\n\t"
  :code: |
    #define WINVER 0x0400
    #define _WIN32_WINDOWS 0
    #define _WIN32_WINNT 0
    #define _WIN32_IE 0x0300 // IE3以上を指定しないとWTLがコンパイルエラーを起こす。

    #define WIN32_LEAN_AND_MEAN
    #define _ATL_NO_AUTOMATIC_NAMESPACE
    #define _WTL_NO_AUTOMATIC_NAMESPACE

    #include &lt;sstream&gt;

    #include &lt;tchar.h&gt; // _tWinMain

    #include &lt;windows.h&gt;
    #include &lt;atlbase.h&gt; // ATL共通ヘッダ
    #include &lt;atlwin.h&gt; // CWindowImplほか
    #include &lt;atlcrack.h&gt; // MSG_*
    #include &lt;atlapp.h&gt; // &lt;atlmisc.h&gt;
    #include &lt;atlmisc.h&gt; // CPoint

    class MainWindow : public ATL::CWindowImpl&lt;MainWindow, ATL::CWindow, ATL::CFrameWinTraits&gt;
    {
    public:
        // ウィンドウクラス名を登録
        DECLARE_WND_CLASS(TEXT("Double click Test"));

        // メッセージマップ
        BEGIN_MSG_MAP(MainWindow)
            MSG_WM_LBUTTONDBLCLK(OnDoubleClick)
            MSG_WM_RBUTTONDBLCLK(OnDoubleClick)
            MSG_WM_MBUTTONDBLCLK(OnDoubleClick)
            MSG_WM_DESTROY(OnDestroy)
        END_MSG_MAP()
    private
        void OnDoubleClick(UINT flags, WTL::CPoint pt)
        {
            std::basic_ostringstream&lt;TCHAR&gt; os;
            os &lt;&lt; TEXT("X: ") &lt;&lt; pt.x &lt;&lt; TEXT(", Y:") &lt;&lt; pt.y;
            MessageBox(os.str().c_str(), TEXT("Double clicked!"), MB_OK);
        }

        void OnDestroy()
        {
            PostQuitMessage(0);
        }
    };

    int WINAPI _tWinMain(HINSTANCE, HINSTANCE, LPTSTR, int cmdShow)
    {
        // 独自ウィンドウを作成
        MainWindow wnd;
        wnd.Create(NULL, ATL::CWindow::rcDefault, TEXT("Double click Test"));
        wnd.ShowWindow(cmdShow);
        wnd.UpdateWindow();

        WTL::CMessageLoop msgLoop;
        return msgLoop.Run();
    }
  :tags:
  - WTL
  :references:
    :url: /web/20090806015924/http://home.att.ne.jp/banana/akatsuki/doc/atlwtl2/
    :title: The So-Software Studio - ATL/WTL
- :id: '8944'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8944
  :user_name: egtra
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/759/
  :language: C
  :time: 2009/05/18 08:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  まだWPF版がなかったので作りました。XAML併用にしようとしましたが、コマンドラインでのビルドが面倒なので、C#コードのみで作ることに。すると、この程度ではWindowsフォーム版とたいして変わり映えのないものになりましたとさ。\n\t"
  :code: |
    using System;
    using System.Windows;

    class Progam
    {
        [STAThread]
        public static int Main()
        {
            var w = new Window();
            w.MouseDoubleClick += (sender, e) =&gt;
            {
                MessageBox.Show(w, "Double clicked at " + e.GetPosition(w));
            };
            return new Application().Run(w);
        }
    }
  :tags:
  - WPF
  :references:
    :url: 
    :title: 
- :id: '8963'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/8963
  :user_name: Otter
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/497/
  :language: Haskell
  :time: 2009/05/20 03:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>以前作っておいた基本のウィンドウズアプリを加工しました。Win32です。</p>\n\n\t"
  :code: "{-# OPTIONS_GHC -fglasgow-exts #-}\n\nmodule Main\n    where\n\nimport Control.Exception\nimport
    Control.Monad\nimport Data.Int\nimport Data.IORef\nimport Data.Maybe\nimport Foreign.C.String\nimport
    Graphics.Win32\nimport Graphics.Win32.Message\nimport Graphics.Win32.Window\nimport
    System.Win32.DLL (getModuleHandle)\n\n\nforeign import stdcall \"PostQuitMessage\"
    postQuitMessage :: Int32 -&gt; IO ()\n\ntype AppState = String\n\nasDefault =
    \"Doubleclick in this window\"\n\nmain = do\n    appState &lt;- newIORef asDefault\n
    \   let clsName     =  mkClassName \"My Window Class\"\n    hinst         &lt;-
    getModuleHandle Nothing\n    whiteBrush    &lt;- getStockBrush wHITE_BRUSH\n    curArrow
    \   &lt;- loadCursor Nothing iDC_ARROW\n    mAtom         &lt;- registerClass
    (\n        cS_DBLCLKS, \n        hinst,        -- HINSTANCE\n        Nothing,
    \   -- Maybe HICON\n        Just curArrow,    -- Maybe HCURSOR\n        Just whiteBrush,--
    Maybe HBRUSH\n        Nothing,    -- Maybe LPCTSTR\n        clsName)\n\n    when
    (isJust mAtom) $ do\n        hwnd &lt;- createWindow \n            clsName\n            \"test
    window\" \n            (wS_THICKFRAME + wS_CAPTION + wS_SYSMENU) \n            Nothing
    \        -- Maybe Pos :: x\n            Nothing         -- Maybe Pos :: y\n            Nothing
    \        -- Maybe Pos :: dx\n            Nothing         -- Maybe Pos :: dy\n
    \           Nothing         -- Maybe HWND\n            Nothing         -- Maybe
    HMENU\n            hinst             -- HINSTANCE\n            (wndProc appState)
    \    -- WindowClosure\n\n        showWindow hwnd sW_SHOWNORMAL\n        updateWindow
    hwnd\n        allocaMessage pump\n        unregisterClass clsName hinst\n\npump
    lpmsg = do\n    fContinue &lt;- getMessage lpmsg Nothing\n    when fContinue $
    do\n        translateMessage lpmsg\n        dispatchMessage lpmsg\n        pump
    lpmsg\n\nrender :: (IORef AppState) -&gt; HWND -&gt; HDC -&gt; IO ()\nrender st
    hwnd hdc = do\n    str &lt;- readIORef st\n    setBkMode hdc tRANSPARENT\n    setTextColor
    hdc $ rgb 0 0 0\n    textOut hdc 5 5 str\n\n\nwithPaint :: HWND -&gt; (HWND -&gt;
    HDC -&gt; IO a) -&gt; IO a\nwithPaint hwnd fn = allocaPAINTSTRUCT $ \\ lpps -&gt;
    do\n    hdc &lt;- beginPaint hwnd lpps\n    finally (fn hwnd hdc) $ endPaint hwnd
    lpps\n\nupdateStr :: (IORef AppState) -&gt; LPARAM -&gt; IO ()\nupdateStr st lp
    =\n    writeIORef st $ \"Double Click At (\" ++ (show $ lOWORD $ fromIntegral
    lp) ++ \", \" ++ (show $ hIWORD $ fromIntegral lp) ++ \")\"\n\nwndProc :: (IORef
    AppState) -&gt; HWND -&gt; WindowMessage -&gt; WPARAM -&gt; LPARAM -&gt; IO LRESULT\nwndProc
    st hwnd wm wp lp\n    | wm == wM_KEYDOWN     = doFinish\n    | wm == wM_LBUTTONDBLCLK
    = updateStr st lp &gt;&gt; invalidateRect (Just hwnd) Nothing True &gt;&gt; return
    0\n    | wm == wM_DESTROY     = postQuitMessage 0 &gt;&gt; return 0\n    | wm
    == wM_PAINT       = onPaint &gt;&gt; return 0\n    | otherwise            = defWindowProc
    (Just hwnd) wm wp lp\n    where\n        doFinish     = sendMessage hwnd wM_CLOSE
    1 0 &gt;&gt; return 0\n        onPaint        = withPaint hwnd $ render st\n"
  :tags:
  - Win32
  :references:
    :url: 
    :title: 
- :id: '9033'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/9033
  :user_name: seri
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/641/
  :language: Ruby
  :time: 2009/06/02 03:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Ruby/Tkです。\r\n</pre>\n\t"
  :code: |
    require 'tk'

    TkFrame.new {
      width 400
      height 300
      bind('Double-1', proc { |x, y| Tk.messageBox(:title =&gt; '座標', :message =&gt; "(#{x}, #{y})") }, "%x %y")
      pack
    }

    Tk.mainloop
  :tags:
  - Ruby/Tk
  :references:
    :url: 
    :title: 
- :id: '9247'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/9247
  :user_name: egtra
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/759/
  :language: XAML
  :time: 2009/06/26 12:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  XAMLでは、x:Code要素を用いて、直接C#やVB.NETのコードの埋め込みが可能です。というより、残念ながら、XAMLだけで座標の取得する方法が考えつかなかったので、コード埋め込みを使ったというほうが正確です。\n\t"
  :code: |
    &lt;Window x:Class="WpfApplication1.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="ダブルクリックの検出"
        Width="300"
        Height="300"
        MouseDoubleClick="Window_MouseDoubleClick"
        &gt;
        &lt;x:Code&gt;
            &lt;![CDATA[
            private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
            {
                MessageBox.Show(this, "ダブルクリックされました: " + e.GetPosition(this).ToString());
            }
            ]]&gt;
        &lt;/x:Code&gt;
    &lt;/Window&gt;
  :tags:
  - C#
  :references:
    :url: 
    :title: 
- :id: '9434'
  :parent_id: '241'
  :url: http://ja.doukaku.org/comment/9434
  :user_name: horiuchi
  :user_url: /web/20090806015924/http://ja.doukaku.org/user/570/
  :language: ActionScript
  :time: 2009/07/31 00:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>ダブルクリックをすると、中央付近に座標が表示されます。</p>\n</div>\n\t"
  :code: "package \n{\n    import flash.display.Sprite;\n    import flash.events.Event;\n
    \   import flash.events.MouseEvent;\n    import flash.text.TextField;\n\n    [SWF(width
    = 465, height = 465, backgroundColor = 0xEEEEEE, frameRate = 30)]\n\n    public
    class DoubleClickEvent extends Sprite\n    {\n        private var display:TextField
    = new TextField();\n        public function DoubleClickEvent():void \n        {\n
    \           display.width = 80;\n            display.height = 20;\n            display.x
    = (stage.stageWidth - display.width) / 2;\n            display.y = (stage.stageHeight
    - display.height) / 2;\n            display.mouseEnabled = false;\n            addChild(display);\n
    \           \n            stage.addEventListener(MouseEvent.DOUBLE_CLICK, function(event:MouseEvent):void
    {\n                var x:int = event.stageX;\n                var y:int = event.stageY;\n
    \               display.text = \"(\" + x + \",\" + y + \")\";\n            });\n
    \           stage.doubleClickEnabled = true;\n        }\n    }\n}\n"
  :tags: []
  :references:
    :url: /web/20090806015924/http://wonderfl.net/code/3c681e51ee5525dcf7f3b2ee01d7436ec468ad0f
    :title: DoubleClickEvent - wonderfl
