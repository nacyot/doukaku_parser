---
:id: '14'
:title: 倍数になる13進数
:comments:
- :id: '3370'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/3370
  :user_name: にしお
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/06 09:07 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\r\n\t  ここにある正の整数xがあります。xは2桁以上です。この数字の並びが13進法表記であるとみなすと、10進法表記であると見なした場合の倍数になります。この条件を満たす最も小さいxを求めるプログラムを書いてください。\r\n<p>\r\n例えばxが567の時、これを13進法表記と見なすと5
    * 13 * 13 + 6 * 13 + 7 で 930 になります。930は567の倍数ではないので、567は条件を満たしません。 条件を満たす数を見つけ出すプログラムを書いてください。「条件を満たす数を出力するプログラム」ではありません。(print
    567などは禁止ということ。)\r\n\t</p>"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3602'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/3602
  :user_name: ぴょん
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/490/
  :language: Perl
  :time: 2007/10/30 12:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  <pre class=\"compact\">これでいける筈。</pre>\r\n\t"
  :code: |
    use strict;

    for(my $i = 10; $i &lt;= 10000; $i++) {
        for(my $c = 0, $_ = $i; /(\d)(\d*)/;) {
            $c = 13 * $c + $1;
            ($_ = $2) || ($c % $i) || printf("%d (%d)\n", $i, $c);
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '234'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/234
  :user_name: shyouhei
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/70/
  :language: Ruby
  :time: 2007/07/06 09:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  stack overflowに注意\n\t"
  :code: |
    f = lambda do |i|
       j = i.to_s(10).to_i(13)
       if j % i == 0
         i
       else
         f.call i+1
       end
    end

    puts f.call(10) # 2-digit constraint
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '235'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/235
  :user_name: shn
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/115/
  :language: Python
  :time: 2007/07/06 09:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  短く書くとこんなかんじかなぁ　ブルートフォースな感じです\n\t"
  :code: |
    for x in (x for x in xrange(1, 32767) if (int(str(x), 13) % x)==0):
        print x
  :tags:
  - bruteforce
  - generator
  :references:
    :url: 
    :title: 
- :id: '236'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/236
  :user_name: shn
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/115/
  :language: 
  :time: 2007/07/06 09:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  ああ2桁以上なんですね。\r\n問題をよく読まない回答が多いなぁ＜俺\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '237'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/237
  :user_name: id:nekoruri
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/111/
  :language: Perl
  :time: 2007/07/06 09:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  素直に1桁ずつ進数変換して割り算\n\t"
  :code: |
    #!/usr/local/bin/perl

    use strict;
    use warnings;

    my $max = 10000;

    for ( my $orig = 10; $orig &lt;= $max; $orig++ ) {

            print ".";

            my $num13 = 0;
            my $length = 0;

            my $orig_tmp = $orig;
            while( $orig_tmp ) {
                    $num13 += ( 13 ** $length ) *  ( $orig_tmp % 10 );
                    $orig_tmp = int ( $orig_tmp / 10 );
                    $length++;
            }

            if( $num13 % $orig == 0 ) {
                    print "\nFound: $orig =&gt; $num13\n";
                    exit 0;
            }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '239'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/239
  :user_name: sumim
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/07/06 09:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    | x |
    x := 10.
    [('13r', x printString) asNumber isDivisibleBy: x] whileFalse: [x := x + 1].
    ^x
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '240'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/240
  :user_name: shn
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/115/
  :language: 
  :time: 2007/07/06 10:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  しかも列挙じゃなくて、最小を一個出せばいいのね\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '241'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/241
  :user_name: id:nekoruri
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/111/
  :language: Perl
  :time: 2007/07/06 10:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  進数変換にreduceを使ってみた版\n\t"
  :code: |
    #!/usr/local/bin/perl

    use strict;
    use warnings;

    use List::Util qw( reduce );

    my $max = 10000;

    for ( my $orig = 10; $orig &lt;= $max; $orig++ ) {

            print ".";

            my $num13 = reduce { 13 * $a + $b } split //, $orig;

            if( $num13 % $orig == 0 ) {
                    print "\nFound: $orig =&gt; $num13\n";
                    exit 0;
            }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '243'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/243
  :user_name: id:nekoruri
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/111/
  :language: Perl
  :time: 2007/07/06 10:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">端折ってみた版\r\n\r\n$a/$bでwarningが出るのはどうしたらよいんだろう……。</pre>\n\t"
  :code: |
    #!/usr/local/bin/perl

    use strict;
    use warnings;

    use List::Util qw( reduce );

    my $max = 10000;

    for my $orig ( 10 .. $max ) {
            my $num13 = reduce { 13 * $a + $b } split //, $orig;
            print "Found: $orig =&gt; $num13\n" and exit 0
                    if( $num13 % $orig == 0 );
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '251'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/251
  :user_name: shn
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/115/
  :language: Python
  :time: 2007/07/06 11:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  仕事もしないで、高速版を作ってみました。\r\n最小の数じゃなくて、全（のはず）組み合わせを列挙します。\n\t"
  :code: "# -*- coding: utf-8 -*-\n\"\"\"\nここにある正の整数xがあります。iは2桁以上です。この数字の並びが13進法表記であるとみなすと、10進法表記であると見なした場合の倍数になります。この条件を満たす最も小さいxを求めるプログラムを書いてください。
    \n\"\"\"\n\ndef match(rest, nums, modulus):\n    \"\"\"与えられた係数でマッチする数を出力\"\"\"\n
    \   if len(modulus)==1:\n        # 一の位\n        # 一の位の係数で割り切れたらOK\n        div,
    mod = divmod(rest, modulus[0])\n        if mod==0 and 0&lt;=div&lt;10:\n            r
    = nums+[div]\n            return [''.join(str(x) for x in r)]\n        return
    []\n    else:\n        result = []\n\n        # 可能性がなかったらやめる\n        if not sum(modulus)&lt;rest&lt;sum(x
    * 9L for x in modulus):\n            return result        \n        \n        cur,
    next = modulus[0], modulus[1:]\n        for x in xrange(0, 10):\n            r
    = rest - x * cur\n            if r&lt;0:\n                break\n            result.extend(match(r,
    nums+[x], next))\n        return result\n        \n\ndef thriteen():\n    \"\"\"お題な数を出力する\"\"\"\n
    \   # n倍で回す\n    for n in xrange(2, 100):\n        left_modulus = [] # 左辺の係数\n
    \       \n        # 係数が-になるまで列挙\n        for u in xrange(10):\n            m =
    n * (10L ** u) - (13L ** u)\n            if m&lt;0:\n                break\n            left_modulus.append(m)\n\n
    \       # 右辺の係数\n        right_modulus = -m\n        \n        left_modulus.reverse()\n
    \       # 一番高い位は1～9だろう\n        for x in xrange(1, 10):\n            for answer
    in match(x * right_modulus, [], left_modulus):\n                yield str(x)+answer\n
    \       \nif __name__=='__main__':\n    for x in thriteen():\n        print x,
    divmod(long(x, 13), long(x))\n"
  :tags:
  - generator
  :references:
    :url: 
    :title: 
- :id: '255'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/255
  :user_name: mimizu
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/103/
  :language: Java
  :time: 2007/07/06 11:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "public class Radix {\n\t\n\tpublic static void main(String[] args) {\n\t\tfor
    (int i = 10;; i++) {\n\t\t\tint j = Integer.parseInt(Integer.toString(i), 13);\n\t\t\tif
    (j % i == 0) {\n\t\t\t\tSystem.out.println(i);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\t\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '257'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/257
  :user_name: こう。
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2007/07/06 12:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  シンプルに手計算してみた。\n\t"
  :code: "#include &lt;stdio.h&gt;\n\n//13進で換算\nint calc_13(int num){\n\tint ret=0;\n\tint
    i;\n\tint dig=100000;\t//多分これより小さい桁だからここまでも大丈夫。\n\t\n\t//上位桁から順番に計算\n\tdo{\n\t\tret*=13;\n\t\tret+=num/dig;\n\t\tnum%=dig;\n\t\tdig/=10;\n\t}while(dig);\n\treturn
    ret;\n}\n\nint main(){\n\tint i;\n\t\n\tfor(i=1;i&lt;100000;i++){\n\t\tif(calc_13(i)==i*2){\n\t\t\tprintf(\"13n:%d
    10n:%d\\n\",i,i*2);\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '260'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/260
  :user_name: kacchi
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/145/
  :language: Scheme
  :time: 2007/07/06 12:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    #!/usr/bin/env gosh

    (define *max* 100000000)

    (define (func n b)
      (let ((quo (quotient n 10)))
        (if (zero? quo) (modulo n 10)
            (+ (* (func quo b) b) (func (modulo n 10) b)))))

    (define (foo x)
      (cond ((zero? (modulo (func x 13) x)) x)
            ((&gt; x *max*) 'over)
            (else (foo (+ x 1)))))

    (print (foo 10))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '263'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/263
  :user_name: minke
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/28/
  :language: Haskell
  :time: 2007/07/06 13:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    main :: IO ()
    main = print $ head $ filter p13 [10..]

    p13 :: Int -&gt; Bool
    p13 x = (0 ==) $ (`mod` x) $ foldl (+) 0 $ f x 1
        where
          f :: Int -&gt; Int -&gt; [Int]
          f 0 _ = []
          f x n = ((x `mod` 10) * n) : f (x `div` 10) (n * 13)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '266'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/266
  :user_name: ytakenaka
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/35/
  :language: Common
  :time: 2007/07/06 14:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">関数名に困ったけど、答えを出すのはanswerを使ってください。\r\n(find-num
    最大値 N進数) で11進数以上のもので問題と同じ事が出来ます。</pre>\n\t"
  :code: "(defun figure-number (number)\n  (let ((result nil) (seed number))\n    (loop
    while (&lt; 0 seed) do\n\t (multiple-value-bind (f r)(floor seed 10)\n\t   (push
    r result)\n\t   (setf seed f)))\n    (reverse result)))\n\n(defun 10-&gt;n (number
    n)\n  (let ((fig-list (figure-number number)) (result 0) (i 0))\n    (loop for
    ite in fig-list do\n\t (incf result (* ite (expt n i)))\n\t (incf i)\n\t finally
    (return result))))\n\t \n(defun 10-&gt;n-p (number n)\n  (if (equal number (gcd
    number (10-&gt;n number n)))\n      T\n      nil))\n\n(defun find-num (max n)\n
    \ (let ((result nil))\n    (loop for i from 1 to max do\n\t (and (10-&gt;n-p i
    n)\n\t      (push i result))\n\t finally (return (reverse result)))))\n\n(defun
    answer (max)\n  (find-num max 13))\n\n; CL-USER&gt; (answer 2000)\n; (1 2 3 4
    5 6 7 8 9 1557 1560 1614)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '267'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/267
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: C
  :time: 2007/07/06 14:42 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    #include&lt;stdio.h&gt;
    #include&lt;stdlib.h&gt;
    int main(void){
      int i=9;
      char s[9];
      while(sprintf(s,"%d",++i),i+i!=strtol(s,0,13));
      puts(s);
      return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '268'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/268
  :user_name: es
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/147/
  :language: Scheme
  :time: 2007/07/06 14:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    (define (multinum)
      (define (obase-13 n)
        (string-&gt;number (number-&gt;string n) 13))
      (let loop ((n 10))
        (if (zero? (remainder (obase-13 n) n))
            n
            (loop (+ n 1)))))

    (print (multinum))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '269'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/269
  :user_name: es
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/147/
  :language: 
  :time: 2007/07/06 15:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">間違って大文字ではじまる\"G\"aucheタグをつくってしまいました。\r\nすいません。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '273'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/273
  :user_name: tsekine
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/124/
  :language: Bash
  :time: 2007/07/06 15:37 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  Bash もなかなかやりおるのぉ。\r\n\n\t"
  :code: |
    print_magic_13 () {
      for ((trid=10; dec=13#${trid}, dec % trid != 0; trid++));
      do :
      done

      echo $dec "($trid in tri-decimal)"
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '274'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/274
  :user_name: nobsun
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2007/07/06 15:49 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">難読版？</pre>\n\t"
  :code: |
    module Main (main) where
    main :: IO ()
    main = print $ head $ filter p [10..]
      where
        p = (0 ==) . s (mod . (r . show)) id
        r = foldl ((+) . (13*)) 0 . map (read . (:[]))
        s f g x = f x (g x)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '277'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/277
  :user_name: ytakenaka
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/35/
  :language: Common
  :time: 2007/07/06 16:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">高階関数を使ったものに変えてみた。変更箇所のみ</pre>\n\t"
  :code: "(defun 10-&gt; (n)\n  (lambda(number)\n    (let ((fig-list (figure-number
    number)) (result 0) (i 0))\n      (loop for ite in fig-list do\n\t   (incf result
    (* ite (expt n i)))\n\t   (incf i)\n\t finally (return result)))))\n\t \n(defun
    10-&gt;n-p (n)\n  (lambda(number)\n    (if (equal number (gcd number (funcall
    (10-&gt; n) number)))\n\tT\n\tnil)))\n\n(defun find-num (n)\n  (lambda(max)\n
    \   (let ((result nil))\n      (loop for i from 1 to max do\n\t   (and (funcall
    (10-&gt;n-p n) i)\n\t\t(push i result))\n\t   finally (return (reverse result))))))\n\n(defun
    answer (max)\n  (funcall (find-num 13) max))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '280'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/280
  :user_name: kacchi
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/145/
  :language: Emacs
  :time: 2007/07/06 16:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Emacs Lisp です。C-x C-e とか M-: とか M-x ielm とかで式を評価。</pre>\n\t"
  :code: |
    (let ((n 10))
      (while (not (zerop (mod (string-to-number (number-to-string n) 13) n)))
        (setq n (+ n 1)))
      n)
  :tags:
  - EmacsLisp
  :references:
    :url: 
    :title: 
- :id: '287'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/287
  :user_name: Mistfeal
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/153/
  :language: PHP
  :time: 2007/07/07 02:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  while(0)だと何故か回らなかったので、trueを入れて強引に。\n\t"
  :code: "&lt;?php\n$x = 10;\ndo {\n\t$y = $x * 2;\n\t$z = base_convert($x,13,10);\n\tif
    ( \"$y\" == \"$z\" ) {\n\t\techo \"\\n答えは、$x です。\\n\";\n\t\tbreak;\n\t}\n\t$x++;\n}
    while(true);\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '288'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/288
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: Java
  :time: 2007/07/07 02:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  同案多数か？\n\t"
  :code: |
    public class Sample {
        public static void main(String[] args) {
            for (int x = 10; ; x++) {
                int triX = Integer.parseInt(Integer.toString(x), 13);
                if (triX == 2 * x) {
                    System.out.println(x);
                    break;
                }
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '289'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/289
  :user_name: xsd
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/154/
  :language: OCaml
  :time: 2007/07/07 02:51 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  あんまりスマートではないですが、OCamlも。\n\t"
  :code: |
    let rec f acc m = function 0-&gt;acc | x-&gt;f (acc+m*(x mod 10)) (m*13) (x/10)
    let rec g n = if (f 0 1 n) mod n = 0 then n else g (n+1)

    let _ = Printf.printf "%d\n" (g 10)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '290'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/290
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/07/07 02:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  5行目間違ってますね。問題はちゃんと読みましょうという感じです。すみません。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '296'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/296
  :user_name: daisuke
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/157/
  :language: Ruby
  :time: 2007/07/07 07:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  何も考えずに書いてしまった...\n\t"
  :code: |
    def n_adic(str, n)
      str = str.to_s
      res, i = 0, 0
      (str.reverse.split '').each do |c|
        res += c.to_i * (n ** i)
        i += 1
      end
      res
    end

    def check(number, target)
      i = 1
      while(number * i &lt;= target)
        return true if(number * i ==  target)
        i += 1
      end
    end

    i = 10
    while true
      n10 = n_adic(i, 10)
      n13 = n_adic(i, 13)
      if(check(n10, n13))
        p "n=10:#{n10} n=13:#{n13}"
        break
      end
      i += 1
    end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '300'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/300
  :user_name: ether
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/96/
  :language: Haskell
  :time: 2007/07/07 08:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Haskell のリスト内包表記だと殆ど問題文そのままに書けますね。\n\t"
  :code: |
    asBaseN :: Int -&gt; Int -&gt; Int
    asBaseN base 0 = 0
    asBaseN base n = (n `mod` 10) + (base * asBaseN base (n `div` 10))

    main :: IO ()
    main = print $ head [x | x &lt;- [10..], (asBaseN 13 x) `mod` x == 0]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '306'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/306
  :user_name: rucker
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/130/
  :language: PHP
  :time: 2007/07/07 09:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  計算の回数を減らすために上の桁から決めていく方法を考えてみた。\n\t"
  :code: "&lt;?php\n// 2倍から8倍まで探す。それ以上はオーバーフローする\nfor($n=2;$n&lt;9;++$n)\n{\techo
    \"x$n: \";\n\t// 式を展開してみると解るが、一番上の桁は1になるらしい。\n\t// その桁を探す\n\tfor($c=10;intval((string)$c,13)&lt;=$n*$c;$c*=10)\n\t\t;\n\t$a=$c*2-1;\n\tif(intval((string)$a,13)-$n*$a&gt;0)\n\t{\t//
    探しても無駄な場合\n\t\techo \"no ans.\\n\";\n\t\tcontinue;\n\t}\n\tfor($a=$c;;)\n\t{\tif(($c/=10)&lt;1)\n\t\t{\techo
    \"no ans.\\n\";\n\t\t\tbreak;\n\t\t}\n\t\tfor($i=0;$i&lt;9;++$i)\n\t\t{\t$a+=$c;\n\t\t\t$d=intval((string)$a,13)-$n*$a;\n\t\t\techo
    \"\\t$a $d\\n\";\n\t\t\tif(!$d)\n\t\t\t{\techo \"$a\\n\";\n\t\t\t\tbreak 2;\n\t\t\t}\n\t\t\tif($d&lt;0)\n\t\t\t{\t$a-=$c;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '307'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/307
  :user_name: ether
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/96/
  :language: Scala
  :time: 2007/07/07 10:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  まだ言語一覧にないけど Scala で。\n\t"
  :code: |
    import java.lang.Integer._
    import scala.Iterator._
    import scala.Console._

    object Question14 {
      def main(args: Array[String]) = {
        val numbers = for (n &lt;- from(10) if parseInt(n.toString, 13) % n == 0) yield n
        println(numbers.next)
      }
    }
  :tags:
  - Scala
  :references:
    :url: 
    :title: 
- :id: '309'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/309
  :user_name: rucker
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/130/
  :language: PHP
  :time: 2007/07/07 10:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ごめんなさい。「一番上の桁1らしい」は嘘でした。\r\n2以上も探すバージョン。</pre>\n\t"
  :code: "&lt;?php\n// 2倍から7倍まで探す。それ以上はオーバーフローする\nfor($n=2;$n&lt;8;++$n)\n{\techo
    \"x$n: \";\n\t// 一番上の桁を探す\n\tfor($c0=10;intval((string)$c0,13)&lt;=$n*$c0;$c0*=10)\n\t\t;\n\tfor($c1=$c0;;$c1+=$c0)\n\t{\t$c=$c0;\n\t\t$a=$c1+$c0-1;\n\t\tif(intval((string)$a,13)-$n*$a&gt;0)\n\t\t{\t//
    探しても無駄\n\t\t\techo \"no ans.\\n\";\n\t\t\tbreak;\n\t\t}\n\t\tfor($a=$c1;;)\n\t\t{\tif(($c/=10)&lt;1)\n\t\t\t{\techo
    \"no ans.\\n\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor($i=0;$i&lt;9;++$i)\n\t\t\t{\t$a+=$c;\n\t\t\t\t$d=intval((string)$a,13)-$n*$a;\n\t\t\t\techo
    \"\\t$a $d\\n\";\n\t\t\t\tif(!$d)\n\t\t\t\t{\t// 発見\n\t\t\t\t\techo \"$a\\n\";\n\t\t\t\t\tbreak
    2;\n\t\t\t\t}\n\t\t\t\tif($d&lt;0)\n\t\t\t\t{\t// 通り過ぎた\n\t\t\t\t\t$a-=$c;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '314'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/314
  :user_name: niha
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/160/
  :language: Ruby
  :time: 2007/07/07 12:46 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  適当に。\n\t"
  :code: |
    $&gt;&lt;&lt;("10".."10000").find{|x|"#{x}".to_i(13)%x&lt;1}
  :tags:
  - golf
  :references:
    :url: 
    :title: 
- :id: '318'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/318
  :user_name: nkmrtks
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/155/
  :language: Common
  :time: 2007/07/07 15:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">関数名は気にしちゃ負けです:D\r\n\r\nansで答えの10進数とその倍数（13進数の10進数表記）を返します。\r\nbarの引数に適当に基数、基数、n倍数、昇順で何番目を渡すと、うまくいけば何かが帰るかもしれません（適当。</pre>\n\t"
  :code: |
    (defun bar (a b n pos)
      (labels
          ((basea-&gt;b (a b)
             (lambda (x)
               (labels ((ex (x f acc)
                          (if (zerop x)
                              acc
                            (ex (truncate (/ x b)) (* f a) (+ acc (* (mod x b) f))))))
                 (ex x 1 0)))))
        (labels
            ((happy (a b n x pos)
               (labels
                   ((b-&gt;a (x)
                      (funcall (basea-&gt;b b a) x)))
                 (if (= (/ (b-&gt;a x) x) n)
                     (if (zerop pos)
                         (values x (b-&gt;a x))
                       (happy a b n (1+ x) (1- pos)))
                   (happy a b n (1+ x) pos)))))
          (happy a b n 1 (1- pos)))))

    (defun ans ()
      (bar 10 13 2 1))

    &gt; (ans)
    1557 ;
    3114
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '320'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/320
  :user_name: iwk
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/49/
  :language: OCaml
  :time: 2007/07/07 17:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">F#なのはConsole.WriteLineあたりだけ</pre>\n\t"
  :code: |
    open System;;

    let solv () =
        let rec trans = function
            | 0 -&gt; 0
            | n -&gt; (n mod 10) + (trans (n / 10)) * base
        and base = 13
        and solving m =
                 if (trans m) mod m = 0
                 then m
                 else solving (m+1)
        in solving 10;;

    Console.WriteLine( solv() );;
  :tags:
  - F#
  :references:
    :url: 
    :title: 
- :id: '333'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/333
  :user_name: katsu
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/117/
  :language: Scheme
  :time: 2007/07/08 02:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  string-&gt;numberって基数を変えられたんですねぇ。便利だ。\r\n参考にして、ストリームを使った意欲作(笑)にしてみました。\r\n4つ目から出力されません。\n\t"
  :code: |
    (use util.stream)
    (define (p n) (zero? (remainder (string-&gt;number (number-&gt;string n) 13) n)))
    (stream-for-each print (stream-filter p (stream-iota -1 10)))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '341'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/341
  :user_name: katsu
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/117/
  :language: Prolog
  :time: 2007/07/08 08:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">SWI-prologでも。prologは10年ぶりです。\r\nでも、res/1で、答えをwritelnした後、トラックバックを指示できないって、こういう仕様でしたっけ？\r\n
    % pl -qs mul.pl\r\n1557\r\n %</pre>\n\t"
  :code: |
    tr10to13(N, N) :- N &lt; 10.
    tr10to13(N, R) :- N &gt;= 10, tr10to13(N // 10, Rs), R is Rs * 13 + (N mod 10).
    mul10x13(N) :- tr10to13(N, N13), 0 =:= N13 mod N.
    res(N) :- mul10x13(N), writeln(N).
    res(N) :- N1 is N + 1, res(N1).
    :-res(10), halt.
  :tags:
  - SWI-prolog
  :references:
    :url: 
    :title: 
- :id: '343'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/343
  :user_name: katsu
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/117/
  :language: Prolog
  :time: 2007/07/08 08:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  失礼。failを忘れていました。\r\nトラックバックにて延々と答えを探し続けます。\n\t"
  :code: |
    tr10to13(N, N) :- N &lt; 10.
    tr10to13(N, R) :- N &gt;= 10, tr10to13(N // 10, Rs), R is Rs * 13 + (N mod 10).
    mul10x13(N) :- tr10to13(N, N13), 0 =:= N13 mod N.
    res(N) :- mul10x13(N), writeln(N), fail.
    res(N) :- N1 is N + 1, res(N1).
    :-res(10), halt.
  :tags:
  - SWI-prolog
  :references:
    :url: 
    :title: 
- :id: '344'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/344
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/07/08 08:21 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  普通に。\n\t"
  :code: |
    import itertools

    for x in itertools.count(10):
        if int(str(x), 13) % x == 0:
            print x
            break
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '345'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/345
  :user_name: katsu
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/117/
  :language: 
  :time: 2007/07/08 08:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">トラックバック→バックトラックです。\r\nお恥ずかしいです。（顔から火が出そう）</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '346'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/346
  :user_name: ultraist
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/17/
  :language: Perl
  :time: 2007/07/08 09:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  10000まで総当り。\r\n(問題文の『i』ってなに)\n\t"
  :code: |
    use strict;

    foreach my $x (10 .. 10000) {
        my $n13 = 0;
        $n13 = $n13 * 13 + $_ foreach (split(//, $x));
        print "$x ($n13)\n" and exit if ($n13 % $x == 0);
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '353'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/353
  :user_name: kozima
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/164/
  :language: Common
  :time: 2007/07/08 14:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    (do ((x 10 (1+ x)))
        ((= (mod (parse-integer (format nil "~D" x) :radix 13) x) 0)
         (print x)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '360'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/360
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/07/08 19:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">あってるハズだが、検証不能...\r\nつか、最初に2倍から20倍の範囲で探すとか,
    指数関数だから１個でいいだろうとか、\r\n根拠レスなアドホック入っているのがイカポン. X-(\r\n\r\nんん～、ソース読んでも何やってるかさっぱり分からん.
    メモをコピペしとこう.\r\n\r\n(n-1) d0 + (10n - 13) d1 + (100n - 169) d2  + (1000n - 2197)
    d3  ... = 0\r\n\r\n             (n-1) d0         d0      2 d0\r\n+       (10n
    - 13) d1       7 d1     17 d1\r\n+     (100n - 169) d2      31 d2    131 d2\r\n+
    \  (1000n - 2197) d3    -197 d3    803 d3\r\n+  (10000n -28561) d4   -8561 d4
    \  1439 d4\r\n+(100000n -371293) d5 -171293 d5 -71293 d5\r\n</pre>\n\t"
  :code: |
    #! /usr/bin/env python

    import string;

    for n in range(2, 20):
        p = 0;
        a = [];
        a9s = [];
        while(True):
            ap = 10**p*n - 13**p;
            a.append(ap);
            if (ap &lt; 0): break;
            if (len(a9s)==0):
                a9s.append(ap*9);
            else:
                a9s.append(ap*9+a9s[-1]);
            p+=1;
        if (ap + a9s[-1] &gt; 0):
            #print a
            #print a9s
            bp=1;
            while(bp*ap + a9s[-1] &gt; 0):
                rest = -bp*ap;
                b=[];
                b.append(bp);
                fr = range(1,len(a)-1);
                fr.reverse();
                for f1 in fr:
                    bm = int((rest-a9s[f1-1])/a[f1])+1;
                    if (bm &gt; 9): break;
                    b.append(bm);
                    rest -= a[f1]*bm;
                if (bm &gt; 9 or rest &gt; 9):
                    bp += 1;
                    continue ;
                b.append(rest);
                ans=string.join(map(lambda(x): "%d"%(x), b), "");
                print "x%d: "%(n)+ans;
                bp += 1;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '362'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/362
  :user_name: ところてん
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/166/
  :language: Python
  :time: 2007/07/08 23:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  int(x,13) ってやり方があったのか、と他の方のコードを見て後悔。\n\t"
  :code: |
    # -*- coding: utf-8 -*-

    for x in range(10,100000):
        y = 0
        for c in str(x):
            y = y * 13 + int(c)
        if y % x == 0:
            print x
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '371'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/371
  :user_name: id:amachang
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/62/
  :language: JavaScript
  :time: 2007/07/09 02:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  普通ですみません＞＜\n\t"
  :code: |
    for(var i=13;i%i.toString(13);i++);alert(i);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '372'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/372
  :user_name: shuyo
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/84/
  :language: Other
  :time: 2007/07/09 02:49 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  皆さんやってると思いますが Excel で。\r\n\n\t"
  :code: |
    - セルに値を記入
        A1  "10進数"
        B1  1000
        C1  100
        D1  10
        E1  1
        F1  "13進数"
        G1  "余り"
        A2  10
    - セルに数式を記入
        B2  =MOD(ROUNDDOWN($A2/B$1,0),10)
        C2～E2  B2 をコピー
        F2  =B2*2197+C2*169+D2*13+E2
        G2  =MOD(F2,A2)
    - A2～G2 を選択し、フィルハンドル(選択領域の右下の小さい■)をドラッグし、10000行分くらい下にコピー
    - オートフィルタ(Alt を押しながら D-F-F)を有効にして、G列 で「０」にフィルタ。
  :tags:
  - Excel
  :references:
    :url: 
    :title: 
- :id: '375'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/375
  :user_name: shuyo
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/84/
  :language: 
  :time: 2007/07/09 04:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  この解が有限個なのか無限個なのかが気になる……\r\nとりあえず４桁の次は８桁に３つあるなあ。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '377'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/377
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: PHP
  :time: 2007/07/09 04:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: "for($i=10;$i&lt;10000;$i++){\n\t$x=base_convert($i,13,10);\n\tif($x==$i*2){\n\t\techo
    $i.'&lt;br&gt;';\n\t\techo $x.'&lt;br&gt;';\n\t\tbreak;\n\t}\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '380'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/380
  :user_name: anekos
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/170/
  :language: Haskell
  :time: 2007/07/09 05:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    b13i :: Integer -&gt; Integer
    b13i 0 = 0
    b13i x = let (d, m) = divMod x 10
             in m + 13 * b13i d

    equal x = x * 2 == b13i x

    main = do putStrLn $ show $ find equal [10..]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '381'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/381
  :user_name: yuin
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/82/
  :language: Scheme
  :time: 2007/07/09 07:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: "(define (_ x) \n  (if (zero? (modulo (string-&gt;number (number-&gt;string
    x) 13) x))\n    (print x)\n    (_ (+ x 1))))\n(_ 10)\n"
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '383'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/383
  :user_name: shuyo
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/84/
  :language: Ruby
  :time: 2007/07/09 08:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  お題から少し外れるが、条件を満たす数を探し続けるプログラム。汚かったり最適化の余地が残っているのはご勘弁。\r\n\r\nこれを２時間走らせて４６桁まで探索済み。見つかっている一番大きい値は
    60065682893774087238167921857827939124689630 (44桁)。\r\nやっぱり無限にありそうだなあ。\r\n\n\t"
  :code: |
    def search(m, rem, result)
      rem2 = rem[1..rem.length-1]
      sum = rem2.inject{|a,b|a+b}
      min = (-sum*9 - m)/rem[0]
      max = (sum*9 - m)/rem[0]
      min = 0 if min &lt; 0
      max = 9 if max &gt; 9
      return if min &gt; max
      min.upto(max) do |x|
        if rem2.length == 1
          if (m+x*rem[0]) % rem2[0] == 0
            y = - (m+x*rem[0]) / rem2[0]
            puts (result+[x, y]).join('') if y&gt;=0 &amp;&amp; y&lt;=9
          end
        else
          search m+x*rem[0], rem2, result+[x]
        end
      end
    end

    d=3 # keta - 1
    while
      min_n = 13**d / 10**d
      max_n = (9*(13**(d+1)-1)/12) / (10**(d+1)-1)
      min_n, max_n = max_n, min_n if min_n &gt; max_n
      puts "keta: #{d+1}"
      1.upto(9) do |ad| # highest digit
        x13 = 13**d*ad
        x10 = 10**d*ad
        min_n.upto(max_n) do |n|
          m = x13 - x10*n
          #puts [m, n].join(',')
          rem = []
          0.upto(d-1){|i| rem.unshift 13**i - 10**i * n }
          search m, rem, [ad]
        end
      end
      d+=1
    end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '384'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/384
  :user_name: にしお
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/09 09:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">xの誤植でした。修正しました。\r\n\r\nご指摘ありがとうございます。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '386'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/386
  :user_name: anekos
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/170/
  :language: 
  :time: 2007/07/09 10:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \"import Data.List\" を忘れていました…\r\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '414'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/414
  :user_name: cats
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/172/
  :language: C
  :time: 2007/07/10 00:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  N進数の変換ってなかったっけ\n\t"
  :code: |
    using System;
    class Program
    {
      static void Main()
      {
        for (int i = 0; ; ++i)
        {
          if (Convert(i, 13) % i == 0)
          {
            Console.WriteLine(i);
            return;
          }
        }
      }
      private static int Convert(int i, int b)
      {
        if (i &lt; 0) return -Convert(-i, b);
        int res = 0, j = 1;
        while (i &gt; 0)
        {
          res += j * (i % 10);
          i /= 10;
          j *= b;
        }
        return res;
      }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '440'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/440
  :user_name: にしお
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/10 06:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  消しておきました。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '441'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/441
  :user_name: にしお
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/10 06:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">題意は triX % x == 0 なのですけど、\r\n実は最小の答えは(皆さんの想像通り)xの2倍なので\r\n出てくる答えは同じなんですよね～</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '449'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/449
  :user_name: shn
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/115/
  :language: 
  :time: 2007/07/10 08:34 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  よくみたらダメダメじゃないかこのコード\r\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '453'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/453
  :user_name: shuyo
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/84/
  :language: Ruby
  :time: 2007/07/10 09:03 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  先のコードはバグがあって、解の見落としが発生することがわかりました。すんません。\r\nということで修正＆最適化したものを投稿。３０桁くらいまでならほぼ瞬殺で出力します。\n\t"
  :code: |
    def search(m, rem, result)
      rem2 = rem[1..rem.length-1]
      ai = -rem[0]
      min = rem2.inject(m+ai-1){|sum,a|sum+(a&gt;0?0:a*9)}/ai
      max = rem2.inject(m){|sum,a|sum+(a&gt;0?a*9:0)}/ai
      #puts "#{m}, #{rem.inspect}, #{min}, #{max}"
      min = 0 if min &lt; 0
      max = 9 if max &gt; 9
      return if min &gt; max
      min.upto(max) do |x|
        if rem2.length == 1
          if (m-x*ai) % rem2[0] == 0
            y = (x*ai-m) / rem2[0]
            puts "#{result}#{x}#{y}" if y&gt;=0 &amp;&amp; y&lt;=9
          end
        else
          search m-x*ai, rem2, "#{result}#{x}"
        end
      end
    end

    d=3 # keta - 1
    while true
      puts "keta: #{d+1} =========================================================="
      max_n = 13**d / 10**d
      1.upto(9) do |ad| # highest digit
        x13 = ad*13**d
        x10 = ad*10**d
        min_n = (x13 + 9*(13**d-1)/12) / (x10 + (10**d-1))
        puts [min_n, max_n].join(', ') if min_n &gt; max_n
        min_n.upto(max_n) do |n|
          m = x13 - x10*n
          rem = []
          0.upto(d-1){|i| rem.unshift 13**i - 10**i * n }
          search m, rem, "#{ad}"
        end
      end
      d+=1
    end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '495'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/495
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2007/07/10 14:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  それだと、i.toString(13)が\"1a\"のとき( i = 23)に、i%i.toString(13)がNaNになって、ループを抜けてしまうのではないでしょうか。\n\t"
  :code: |
    for(i=13;n=i.toString(13),i%n||isNaN(n);i++);alert(n)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '513'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/513
  :user_name: 沢渡 みかげ
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/101/
  :language: Mathematica
  :time: 2007/07/11 01:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">FromDigits, IntegerDigits で任意の進数で変換ができました．</pre>\n\t"
  :code: |
    n = 10;
    While[FromDigits[IntegerDigits[n], 13] != n*2, n++];

    Print[n];
    Print[FromDigits[IntegerDigits[n], 13]];
  :tags:
  - Mathematica
  :references:
    :url: 
    :title: 
- :id: '518'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/518
  :user_name: id:amachang
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/62/
  :language: 
  :time: 2007/07/11 02:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  おっしゃる通りですね。\r\nうっかりしてました＞＜\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '537'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/537
  :user_name: rubikitch
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/105/
  :language: Common
  :time: 2007/07/11 07:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    (require :iter)
    (in-package :iter)
    (defun radix-13 ()
      (iter (for i from 10)
            (finding i such-that
                     (let* ((str (format nil "~a" i))
                            (radix-13 (parse-integer str :radix 13)))
                       (zerop (mod radix-13 i))))))
    (radix-13)                              ; =&gt; 1557

    (parse-integer "1557" :radix 13)        ; =&gt; 3114
    (mod 3114 1557)                         ; =&gt; 0
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '558'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/558
  :user_name: tetsuro6502
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/213/
  :language: JavaScript
  :time: 2007/07/11 10:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "print((function f(n) {\n\treturn parseInt(n, 13) % n ? f(++n) : n;\n})(10))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '576'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/576
  :user_name: 沢渡 みかげ
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/101/
  :language: Erlang
  :time: 2007/07/11 13:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">以下のように起動します．\r\nerl -noshell -s bai13 bai13
    -s init stop\r\n</pre>\n\t"
  :code: |
    -module(bai13).
    -export([bai13/0]).

    bai13() -&gt;
        bai13(10).

    bai13(N) -&gt;
        N2 = conv13_10(N),
        if
            N2 == N * 2 -&gt;
                io:format("~p ~p~n", [N, N2]),
                ok;
            true -&gt;
                bai13(N+1)
        end.

    conv13_10(N) -&gt;
        conv13_10(integer_to_list(N), 0).

    conv13_10([Digit|RestDigit], Number) -&gt;
        conv13_10(RestDigit, Number * 13 + list_to_integer([Digit]));
    conv13_10([], Number) -&gt;
        Number.
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '590'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/590
  :user_name: takatoh
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/189/
  :language: Haskell
  :time: 2007/07/11 17:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    module Main (main) where


    fromDecimal :: (Integral a) =&gt; a -&gt; a -&gt; a
    fromDecimal n x = f 0 x 1
      where
        f r 0 _ = r
        f r y z = let (d,m) = y `divMod` 10
                  in  f (r + m * z) d (z * n)


    main :: IO ()
    main = putStr $ show $ head $ filter (\x -&gt; fromDecimal 13 x `mod` x == 0) [10..]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '619'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/619
  :user_name: ocean
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/177/
  :language: C
  :time: 2007/07/12 08:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  C++のカバレッジ稼ぎ。C++なのは出力部分だけだけど（汗）\n\t"
  :code: |
    #include &lt;iostream&gt;

    int radix13(unsigned int n)
    {
        if (n == 0)
        {
            return 0;
        }
        else
        {
            return radix13(n / 10) * 13 + (n % 10);
        }
    }

    int main()
    {
        for (unsigned int i = 10; ; ++i)
        {
            if (radix13(i) % i == 0)
            {
                std::cout &lt;&lt; i &lt;&lt; std::endl;

                break;
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '620'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/620
  :user_name: ocean
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/177/
  :language: 
  :time: 2007/07/12 08:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  しまった、radix13の返値の型はunsigned intに置き換えてください。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '624'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/624
  :user_name: tell
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/228/
  :language: Ruby
  :time: 2007/07/12 09:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">誰かと被ってると思われ．\r\n\r\nRubyって次期バージョンからcontinuation無くなるんだっけ？\r\n使って書いてみようかと思ったけど…\r\n\r\n最小値を一発で求めることができるような式って，立てられるかな…\r\n</pre>\n\t"
  :code: |
    def search_cmn_13
      n = 10
      loop {
        n13 = n.to_s.to_i(13)
        return n if n13 % n == 0
        n += 1
      }
    end
    puts search_cmn_13
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '625'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/625
  :user_name: tell
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/228/
  :language: 
  :time: 2007/07/12 09:42 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  なるほど．上手い\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '626'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/626
  :user_name: rhodium
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/144/
  :language: C
  :time: 2007/07/12 09:49 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  strtolって便利そうですね。\n\t"
  :code: "#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n\tint
    itmp;\n\tint imax = 10000;\n\tfor(int idec=10;idec&lt;imax;idec++)\n\t{\n\t\tchar
    str[5];\n\t\tsprintf(str,\"%d\",idec);\n\t\tint i13 = strtol(str, NULL, 13);\n\t\tif
    (i13%idec==0)\n\t\t{\n\t\t\tcout &lt;&lt; idec &lt;&lt; endl;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '628'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/628
  :user_name: rhodium
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/144/
  :language: C
  :time: 2007/07/12 09:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  ついでにC版を、、、と思ったら、#267に既にある上にそちらの方がよりシンプルですね。\r\nでもせっかくなので投稿します。\n\t"
  :code: "#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main()\n{\n\tint
    i13, idec, itmp;\n\tint imax = 10000;\n\tfor(idec=10;idec&lt;imax;idec++)\n\t{\n\t\tchar
    str[5];\n\t\titoa(idec, str,10);\n\t\ti13 = strtol(str, NULL, 13);\n\t\tif (i13%idec==0)\n\t\t{\n\t\t\tprintf
    (\"%d\", idec);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '678'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/678
  :user_name: odz
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/212/
  :language: Python
  :time: 2007/07/12 16:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    from itertools import count

    class NotFound(Exception): pass

    def first(predicate, iterable):
        for i in iterable:
            if predicate(i): return i
        raise NotFound

    def search():
        pred = lambda i: int(str(i), 13) % i == 0
        return first(pred, count(20))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '723'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/723
  :user_name: talo
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/237/
  :language: Java
  :time: 2007/07/13 05:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">無駄に再帰。</pre>\n\t"
  :code: |
    public class Thirteen {
        public static void main(String[] args) throws Exception {
            if (args.length != 1) {
                throw new Exception("引数がないよ.");
            }
            int i = Integer.parseInt(args[0]);
            int t = Integer.parseInt(String.valueOf(i), 13);
            if (t % i == 0) {
                System.out.println(t);
                return;
            } else {
                main(new String[]{String.valueOf(i + 1)});
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '786'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/786
  :user_name: kkobayashi
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2007/07/14 01:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Rのas.integerには基数変換の機能がないのかな・・・\n\t"
  :code: |
    for(i in 10:10000){
        if((as.integer(unlist(strsplit(as.character(i), ""))) %*% rep(13, nchar(i))^c((nchar(i)-1):0)) %% i == 0)
        break
    }
    print(i)
  :tags:
  - R
  :references:
    :url: 
    :title: 
- :id: '868'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/868
  :user_name: rubikitch
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/105/
  :language: D
  :time: 2007/07/14 19:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    module doukaku;
    private import std.stdio;
    private import std.string;
    private import std.regexp;
    int radix13 () {
        for (long i=10; 1; i++) {
            char[] radix13 = toString(i, 13u);
            if (std.regexp.find(radix13, r"^\d+$") != -1) {
                long radix13_int = atoi(radix13);
                if (i % radix13_int == 0) return i;
            }
        }
    }

    void main() {
        writefln(radix13());        // 3114
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '877'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/877
  :user_name: rubikitch
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/105/
  :language: Lua
  :time: 2007/07/14 21:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    function radix13()
      i = 10
      while true do
        str = tostring(i)
        r13 = tonumber(str, 13)
        if math.mod(r13, i) == 0 then
          return i
        end
        i = i+1
      end
    end

    print(radix13())                -- 1557
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '938'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/938
  :user_name: 時間蠅
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/250/
  :language: Matlab
  :time: 2007/07/15 16:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  シンプルにループで\n\t"
  :code: |
    finalNumber = 10000;
    base = 13;
    for n=10:finalNumber
      if rem(base2dec(num2str(n), base), n) == 0
        disp(n);
        break;
      end
    end
  :tags:
  - Matlab
  :references:
    :url: 
    :title: 
- :id: '940'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/940
  :user_name: yuin
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/82/
  :language: Scala
  :time: 2007/07/15 16:26 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">そういやこれやってなかったなあ</pre>\n\t"
  :code: |
    def _find13x(n:Int):Int = Integer.parseInt(n.toString, 13)%n match {
      case 0  =&gt; n
      case _  =&gt; _find13x(n+1)
    }
    def find13x = _find13x(10)

    println(find13x)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1007'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/1007
  :user_name: smeghead
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/31/
  :language: Common
  :time: 2007/07/16 13:17 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">rubikitchさんのを見てみたらparse-integerで基数指定する方が素直でした。\r\n(print
    (answer))</pre>\n\t"
  :code: |
    (defun read-as-base (n base)
      (let ((*read-base* base))
        (read-from-string (prin1-to-string n))))

    (defun answer ()
      (loop for i from 10
            do (if (zerop (mod (read-as-base i 13) i))
                 (return i))))
  :tags:
  - clisp
  :references:
    :url: 
    :title: 
- :id: '1054'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/1054
  :user_name: nori
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/59/
  :language: Python
  :time: 2007/07/18 06:04 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  一般にp進法とq進法の見た目が同じときにn倍になる関係を持つ数を出力するプログラムです。\n\t"
  :code: |
    #!/usr/bin/python
    """
    &gt;&gt;&gt; digits(10, 10)
    [1, 0]
    &gt;&gt;&gt; digits(2, 7)
    [1, 1, 1]
    &gt;&gt;&gt; value(10, [1, 0])
    10
    &gt;&gt;&gt; value(2, [1, 1, 1])
    7
    &gt;&gt;&gt; f(2, 3, 2)
    [[1, 0, 1], 5, 10]
    """
    def digits(p, x):
      d = x % p
      x = x / p
      if x:
        ds = digits(p, x)
        ds.append(d)
        return ds
      return [d,]

    def value(q, ds):
      value = 0
      qq = 1
      ds.reverse()
      for d in ds:
        value += d * qq
        qq *= q
      return value

    def f(p, q, n):
      assert(p &lt; q)
      assert(n &gt; 1 and isinstance(n, int))
      x = 1
      while x * n &lt;&gt; value(q, digits(p, x)):
        x = x + 1
      return [digits(p, x), x, value(q, digits(p, x))]

    print f(10, 13, 2)

    import doctest
    doctest.testmod()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1413'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/1413
  :user_name: にしお
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/24 11:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">C:\\&gt;php -r \"if(0){print 1;}else{print
    2;}\"\r\n2\r\n\r\n0はfalse扱いみたいですね。Pythonと同じ。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1414'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/1414
  :user_name: にしお
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/1/
  :language: Python
  :time: 2007/07/24 11:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">なるほど、無限リストを使うのなら\r\nこういう書き方もアリですね。</pre>\n\t"
  :code: |
    &gt;&gt;&gt; from itertools import count, ifilter
    &gt;&gt;&gt; (x for x in count(10) if int(str(x), 13) % x == 0).next()
    1557
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1451'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/1451
  :user_name: muhmoo
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/307/
  :language: ActionScript
  :time: 2007/07/25 14:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    var numObj = new Number();
    for (var i = 10; i&lt;10000; i++) {
      numObj = i;
      // numObjをStringに変換してnum10に格納
      var num10 = numObj.toString(i);
      // num10を13進数に変換してnum13に格納
      var num13 = parseInt(num10, 13);
      if (num13%num10 == 0) {
        trace("10進数："+num10);
        trace("13進数："+num13);
        break;
      }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1708'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/1708
  :user_name: tomatsu
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/323/
  :language: Pnuts
  :time: 2007/08/02 12:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    function search(){
      for (i : 10..1000000){
         n13 = int(string(i), 13)
         if (n13%i == 0) return i
      }
    }
    println(search())
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1820'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/1820
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: SQL
  :time: 2007/08/04 15:39 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">匿名ですみません。\r\nLL魂でその気になったくせにSQLです。\r\n</pre>\n\t"
  :code: |
    DROP TABLE  if exists D;
    CREATE TABLE D (n int NOT NULL);
    INSERT INTO D VALUE (0);
    INSERT INTO D VALUE (1);
    INSERT INTO D VALUE (2);
    INSERT INTO D VALUE (3);
    INSERT INTO D VALUE (4);
    INSERT INTO D VALUE (5);
    INSERT INTO D VALUE (6);
    INSERT INTO D VALUE (7);
    INSERT INTO D VALUE (8);
    INSERT INTO D VALUE (9);

    DROP TABLE if exists N;
    CREATE TABLE N as
      SELECT
        a.n as n1
      , b.n as n10
      , c.n as n100
      , d.n as n1000
      , e.n as n10000
      FROM
        D a
      , D b
      , D c
      , D d
      , D e
    ;

    SELECT *
    FROM
      (SELECT
        (n1 + (n10 * 10)
          + (n100 * 100)
          + (n1000 * 1000)
          + (n10000 * 10000)
        ) as x10
      , (n1 + (n10 * 13)
          + (n100 * 13 * 13)
          + (n1000 * 13 * 13 * 13)
          + (n10000 * 13 * 13 * 13)
        ) as x13
      FROM N
      ) as n
    WHERE
      x10 &gt;= 10
      AND
      x13 % x10 = 0
    ORDER BY x10
    LIMIT 1
    ;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1883'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/1883
  :user_name: naoya_t
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/348/
  :language: awk
  :time: 2007/08/05 16:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "BEGIN {\n\tfor (x=10; !check(x); x++) ;\n\tprint x; exit;\n}\nfunction check(x,
    \ n,k,i)\n{\n\tn = 0;\n\tk = length(x);\n\tfor (i=1; i&lt;=k; i++) n = n * 13
    + substr(x,i,1)\n\treturn (n == x * 2)? 1 : 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1894'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/1894
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: C
  :time: 2007/08/06 02:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">可読性は考慮していません☆</pre>\n\t"
  :code: |
    #include&lt;stdio.h&gt;
    int main(void){
      int i=9,j,k,l;
      do
        for(j=++i,k=i*2,l=1;j&gt;0;k-=j%10*l,j/=10,l*=13);
      while(k);
      printf("%d\n",i);
      return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2047'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/2047
  :user_name: iwk
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/49/
  :language: C
  :time: 2007/08/09 14:35 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  初期位置を意図的に1111にしています。500回しか計算できないようなので。\n\t"
  :code: "#include&lt;iostream&gt;\n\nconst int BASE = 13;\nconst int DEC = 10;\n\ntemplate
    &lt;int n&gt;\nstruct TransTri\n{\n    enum { value = BASE * TransTri&lt;n/DEC&gt;::value
    + n%DEC };\n};\ntemplate &lt;&gt;\nstruct TransTri&lt;0&gt;\n{\n    enum { value
    = 0 };\n};\n\ntemplate &lt;int n, bool res&gt;\nstruct __solv\n{\n\tenum { value
    = __solv&lt;n+1, TransTri&lt;n&gt;::value%n == 0&gt;::value };\n};\ntemplate &lt;int
    n&gt;\nstruct __solv&lt;n,true&gt;\n{\n\tenum { value = n - 1 };\n};\n\ntemplate
    &lt;int n&gt;\nstruct Solv\n{\n\tenum { result = __solv&lt;n,false&gt;::value
    };\n};\n\nint main()\n{\n\tstd::cout &lt;&lt; Solv&lt;1111&gt;::result &lt;&lt;
    std::endl;\n\treturn 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2160'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/2160
  :user_name: miyamuko
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/382/
  :language: xtal
  :time: 2007/08/14 12:51 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">無駄に無限リストにしてみました。\r\n遅くて３個目が見つからない。。。</pre>\n\t"
  :code: |
    // xtal 0.9.7.1 の inject はバグっているので自作。
    Iterator::reduce: method(init, fn){
        result: init;
        this {
            result = fn(result, it);
        }
        return result;
    }


    Int::to_i13: method {
        return this.to_s.split("").reduce(0, |r,e| r * 13 + e.to_i);
    }

    resolver: fiber {
        for (i: 10; true; i++) {
            if (i.to_i13 % i == 0) {
                yield i;
            }
        }
    }

    resolver.take(1).to_a[0].p;
  :tags:
  - xtal0.9.7
  :references:
    :url: 
    :title: 
- :id: '2193'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/2193
  :user_name: shg
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/383/
  :language: Matlab
  :time: 2007/08/15 04:43 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  ループを使う方法は既に出ているので、ループを使わない方法で書いてみた。順番にチェックするのではなく全部計算するので、調べる範囲の上限を与えなければいけないしメモリも食う。条件を満たす最小の数を返せというこの問題に対しては効率のいい方法とは言えない。例えばmからnまでの整数で条件を満たすものを全て見つけろ、というような問題だとするとループより速いかも?
    最後2行のコメントを外すと13進数とみなす場合と10進数とみなす場合との比をグラフに表示する。この比が整数となる数字列が条件を満たすことになる。最後から3行目のminを外すと範囲内の全部の答を出力する。\n\t"
  :code: |
    function n = finddoubleinb13(rmax)
    % Returns a sequence of digits that is twice bigger in base 13 than in base 10.
    % The numbers from 10 to rmax in base 10 will be checked (ja.doukaku.org Q14).
    n10 = (10:rmax)';
    n13 = base2dec(num2str(n10),13);
    idx = find(~mod(n13(:),n10(:)));
    n = min(n10(idx));
    % plot(n10,n13(:)./n10(:))
    % grid on
  :tags:
  - MATLAB7.4
  :references:
    :url: 
    :title: 
- :id: '2845'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/2845
  :user_name: 130R
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/409/
  :language: PowerShell
  :time: 2007/09/03 06:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">とりあえず総当たりで</pre>\n\t"
  :code: "function to-dec($num, $r)\n{\n\t$ret = 0\n\t$p = 1\n\t$s = [string]$num\n\tfor
    ($i = $s.length -1; $i -ge 0; $i--) {\n\t\t$ret += [int][string]($s[$i]) * $p\n\t\t$p
    = $p * $r\n\t}\n\t$ret\n}\n\nfor ($i = 10; ; $i++) {\n\t$r = to-dec $i 13\n\tif
    (($r % $i) -eq 0) {\n\t\t$i; break\n\t}\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2860'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/2860
  :user_name: jz5
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/344/
  :language: VB
  :time: 2007/09/03 08:58 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">普通に。</pre>\n\t"
  :code: |
    Dim num As Integer = 10
    Do
        Dim tmp As Integer = num
        Dim val As Integer = 0
        For i As Integer = 0 To num.ToString.Length - 1
            val += (tmp Mod 10) * 13 ^ i
            tmp \= 10
        Next
        If val Mod num = 0 Then
            Console.WriteLine(num)
            Exit Do
        End If
        num += 1
    Loop
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3247'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/3247
  :user_name: omoikani
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/374/
  :language: StandardML
  :time: 2007/10/04 11:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Ocamlの二番煎じ。</pre>\n\t"
  :code: |
    fun thirteen x =
    let
      fun loop (0, x, t) = t
        | loop (q, x, t) =
        loop (q div 10, x * 13, t + x * (q mod 10))
    in
      loop (x, 1, 0)
    end

    fun comp x =
      if (thirteen x) mod x = 0 then x else comp (x + 1);

    println (Int.toString (comp 10))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3598'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/3598
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: R
  :time: 2007/10/30 10:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">&gt; junk &lt;- sapply(10:10000, foo)\r\n[1]
    1557\r\n[1] 1560\r\n[1] 1614\r\n</pre>\n\t"
  :code: |
    foo &lt;- function(x) {
        d &lt;- as.integer(unlist(strsplit(as.character(x), "")))
        j &lt;- sum(d*13^((length(d)-1):0))/x
        if (j == floor(j))  print(x)
    }
    junk &lt;- sapply(10:10000, foo)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3602'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/3602
  :user_name: ぴょん
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/490/
  :language: Perl
  :time: 2007/10/30 12:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">これでいける筈。</pre>\n\t"
  :code: |
    use strict;

    for(my $i = 10; $i &lt;= 10000; $i++) {
        for(my $c = 0, $_ = $i; /(\d)(\d*)/;) {
            $c = 13 * $c + $1;
            ($_ = $2) || ($c % $i) || printf("%d (%d)\n", $i, $c);
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3759'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/3759
  :user_name: fujidig
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/507/
  :language: 
  :time: 2007/11/08 11:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |2
        #i = 10;
        while( true ) {
            call convert #i;
            if ( ##return == ( #i * 2 ) ) {
                break;
            }
            #i = #i + 1;
        }
        message str( #i );
        endmacro;

    convert:
        $$val = str( ##1 );
        ##result = 0;
        ##i = 0;
        while( ##i &lt; strlen( $$val ) ) {
            ##result = ##result * 13 + val( midstr( $$val, ##i, 1 ) );
            ##i = ##i + 1;
        }
        return ##result;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3760'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/3760
  :user_name: fujidig
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/507/
  :language: HSP
  :time: 2007/11/08 12:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    #module
    #defcfunc convert int x
        val = str( x )
        result = 0
        repeat strlen( val )
            result *= 13
            result += peek( val, cnt ) - '0'
        loop
        return result
    #global

        repeat , 10
            if ( convert( cnt ) == ( cnt * 2 ) ) {
                dialog str( cnt )
                break
            }
        loop
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4485'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/4485
  :user_name: kenaxt
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/456/
  :language: Ruby
  :time: 2007/11/29 15:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">短くしてみました。</pre>\n\t"
  :code: |
    def search_baisu(n = 13, _xbai = 2, _i = 0)
      while (_i += 1).to_s.to_i(n) != _xbai * _i
      end
      _i
    end

    p search_baisu  # --&gt; 1557
  :tags:
  - Ruby1.8.6
  :references:
    :url: 
    :title: 
- :id: '4600'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/4600
  :user_name: eeweiga
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/537/
  :language: Perl
  :time: 2007/12/04 12:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n<p>ワンライナー童貞を捨てた記念に投稿します。\n</p>\n<p>13進数に変換する部分は<a href=\"/web/20091213020027/http://ja.doukaku.org/comment/241/\">id:nekoruriさんの投稿</a>を参考にしました。\n</p>\n\n\n\n\t"
  :code: |
    perl -M'List::Util qw/reduce first/' -le 'print first {$_} grep {!(sub{reduce{13*$a+$b}split //}-&gt;($_)%$_)} 10..10000'
  :tags:
  - oneliner
  :references:
    :url: 
    :title: 
- :id: '4619'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/4619
  :user_name: eeweiga
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/537/
  :language: Perl
  :time: 2007/12/05 09:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n<p>いろいろと無駄が多かったのでちょこっと直しました。\n</p>\n<p>あと余計なスペースを詰めて余計に読みにくくしてみました。\n</p>\n\n\n\n\t"
  :code: |
    perl -M'List::Util qw/reduce first/' -le 'print first{!((reduce{13*$a+$b}split//)%$_)}10..10000'
  :tags:
  - oneliner
  :references:
    :url: 
    :title: 
- :id: '5042'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/5042
  :user_name: pooq
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2007/12/28 19:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">   g 10000\r\n1557 1560 1614\r\n</pre>\n\t"
  :code: |
    f=:3 :'0=(10&amp;#.|13&amp;#.)10(#.^:_1)y'
    g=:3 :'10+I.f"0]10+i.y'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5138'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/5138
  :user_name: saws
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/642/
  :language: Ruby
  :time: 2008/01/03 09:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  if, while文の両方を後置してみたけど正常に動作した. \r\n初期値を入れるのが冗長っぽいけど削るアイデアが沸かなかった.
    \n\t"
  :code: |
    d = 9
    raise "#{d}: Found!" if "#{d += 1}".split(//).inject(0){|i,j| i.to_i*13 + j.to_i}.modulo(d) == 0 while 1
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5727'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/5727
  :user_name: Nemo
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/685/
  :language: PostScript
  :time: 2008/02/10 18:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>PostScript で。カバレッジ稼ぎ。\n一旦文字列に変換して処理させています。14行の exit を外すとループが終わるまで探索します。</p>\n\n\t"
  :code: "%!PS\n\n/TestVal { % &lt;integer&gt; TestVal &lt;bool&gt; \n    dup\n    10
    string cvs\n    (13#          ) % for 10 digits\n    dup 3 4 -1 roll putinterval\n
    \   cvi\n    exch mod 0 eq\n} bind def\n\n% -------------- Main ----------------\n10
    1 99999999 {\n    dup TestVal {(ans = ) print = exit} { pop } ifelse\n} for\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5736'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/5736
  :user_name: queck
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/681/
  :language: Other
  :time: 2008/02/11 12:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Factor です。ちなみに一行にするとこうなります。</p>\n<p>: f dup number&gt;string 13
    base&gt; over mod 0 = [ ] [ 1 + f ] if ; 10 f .</p>\n\n\t"
  :code: |
    USING: kernel math math.parser strings prettyprint ;

    : base13 ( n -- n13 )
      number&gt;string 13 base&gt; ;

    : it? ( n13 n10 -- t/f )
      mod 0 = ;

    : f ( n -- n )
      dup base13 over it?
      [ ] [ 1 + f ] if ;

    10 f .
  :tags:
  - Factor
  :references:
    :url: 
    :title: 
- :id: '5932'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/5932
  :user_name: zubenalt
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/747/
  :language: Other
  :time: 2008/03/04 12:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Adaで適当に\n\t"
  :code: |
    with Ada.Text_Io;
    procedure Twice is
    begin
       for I in 10..10000 loop
          declare
             Str:String:=Integer'Image(I);
             Num:Natural:=Natural'Value("13#"&amp;Str(Str'First+1..Str'Last)&amp;"#");
          begin
             if Num=I*2 then
                Ada.Text_Io.Put_Line(Integer'Image(I)&amp;" =&gt; "&amp;Integer'Image(Num));
             end if;
          end;
       end loop;
    end Twice;
  :tags:
  - Ada
  :references:
    :url: 
    :title: 
- :id: '6168'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/6168
  :user_name: pooq
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/606/
  :language: Io
  :time: 2008/04/11 22:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    i := 10
    while(i asString fromBase(13) % i != 0, i = i + 1)
    i println
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6706'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/6706
  :user_name: nemo_kaz
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/837/
  :language: Groovy
  :time: 2008/07/08 02:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  徒然なるままにつくってみました。\r\nま、小さいコードですよね。\n\t"
  :code: "10.upto(9999) { \nnagasa = it.toString().toList().size\nyouso =  it.toString().toList()\njyusanshin
    = 0\nfor (x in 1 .. nagasa) {\n    jyusanshin = jyusanshin + (youso[-x].toInteger())*(13.power(x-1))\n}\nif
    (jyusanshin%it==0) { \n    println \"Found: \"+it +\"(\"+jyusanshin+\")\"\n    System.exit(0)\n
    \   }\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6720'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/6720
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/07/11 15:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">なんで nagasa を先に代入するのかな。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7281'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/7281
  :user_name: kgbu
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/847/
  :language: Erlang
  :time: 2008/08/20 19:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">erl_evalと　Erlang特有のN進法表記(N#M, 基数Nは36以下)を\r\n使ってみたらどうだろうと思って書いてみました。\r\n基数に上限があるので汎用性に欠けると思います。\r\n\r\nプログラムを
    bai13.erl というファイル名で保存して、\r\n$ erl -noshell -s bai13 getfirst -s init stop\r\nのようにして起動します。</pre>\n\t"
  :code: |
    -module(bai13).
    -export([getfirst/0]).

    getfirst() -&gt;
        loop(10).

    loop(N) -&gt;
        case (eval("13#" ++ integer_to_list(N) ++ ".") rem N) of
            0 -&gt; io:format("~p~n",[N]);
            true -&gt; loop(N + 1)
        end.

    eval(Expr)-&gt;
        {ok, Tokens, _}=erl_scan:string(Expr),
        {ok,[Expression]} = erl_parse:parse_exprs(Tokens),
        {value, Ret,_} = erl_eval:expr(
            Expression ,erl_eval:bindings(erl_eval:new_bindings())
            ),
      Ret.
  :tags: []
  :references:
    :url: /web/20091213020027/http://d.hatena.ne.jp/kgbu/20080820/1219252148
    :title: Erlangのevalってこうやるのか
- :id: '7582'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/7582
  :user_name: lunlumo
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/813/
  :language: Pascal
  :time: 2008/09/06 09:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n</div>\n\t"
  :code: |
    program Multiple13;

    var
        base10    :Integer;

    function ToBaseN(base,number:Integer):Integer;
    begin
        if number = 0 then
            ToBaseN := 0
        else
            ToBaseN := ToBaseN(base,number div 10) * base + number mod 10
    end;

    begin
        base10 := 10;
        while ToBaseN(13,base10) mod base10 &lt;&gt; 0 do
            base10 := base10 + 1;
        WriteLn(base10)
    end.
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7693'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/7693
  :user_name: szktty
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/648/
  :language: Other
  :time: 2008/09/21 07:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>LLVMアセンブリ (32bit) で。&lt;a href=\"http://ja.doukaku.org/comment/257/\"&gt;#257&lt;/a&gt;の移植です。</p>\n</div>\n\t"
  :code: |
    declare i32 @printf(i8*, ...)

    @msg = internal constant [15 x i8] c"13n:%d 10n:%d¥0A¥00"

    define i32 @main() {
        %msgp = getelementptr [15 x i8]* @msg, i32 0, i32 0
        %i = alloca i32
        store i32 10, i32* %i
        br label %loop_head

    loop_head:
        %ival = load i32* %i
        %cont = icmp slt i32 %ival, 10000
        br i1 %cont, label %loop_body, label %return

    loop_body:
        %val13 = call i32 @to13(i32 %ival)
        %target = mul i32 %ival, 2
        %res = icmp eq i32 %val13, %target
        br i1 %res, label %return, label %loop_next

    loop_next:
        %ival_next = add i32 %ival, 1
        store i32 %ival_next, i32* %i
        br label %loop_head

    return:
        %reti = load i32* %i
        %reti2 = mul i32 %reti, 2
        call i32 (i8*, ...)* @printf(i8* %msgp, i32 %reti, i32 %reti2)
        ret i32 0
    }

    define i32 @to13(i32 %default) {
        %n = alloca i32
        store i32 %default, i32* %n
        %retval = alloca i32
        store i32 0, i32* %retval
        %dig = alloca i32
        store i32 10000, i32* %dig
        br label %calc

    calc:
        %t1 = load i32* %retval
        %t2 = mul i32 %t1, 13
        %nval = load i32* %n
        %digval = load i32* %dig
        %t3 = sdiv i32 %nval, %digval
        %t4 = add i32 %t2, %t3
        store i32 %t4, i32* %retval
        %t5 = srem i32 %nval, %digval
        store i32 %t5, i32* %n
        %t6 = sdiv i32 %digval, 10
        store i32 %t6, i32* %dig
        %cont = icmp sgt i32 %t6, 0
        br i1 %cont, label %calc, label %return

    return:
        %r = load i32* %retval
        ret i32 %r
    }
  :tags:
  - Assembly
  - LLVM
  :references:
    :url: 
    :title: 
- :id: '7871'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/7871
  :user_name: 99yen
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/591/
  :language: 
  :time: 2008/10/27 08:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    iで10から10000まで繰り返す
        a=0;b=iを文字列分解
        jで(iの文字数-1)から0まで繰り返す
            a=a+b[回数-1]*13^j
        もし(a = i*2)ならば
            iを表示して抜ける
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8187'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/8187
  :user_name: taninsw
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/973/
  :language: Haskell
  :time: 2008/12/15 23:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>シンプルに</p>\n\n\t"
  :code: |
    import Char
    f n = (mod (foldl1 (\a b-&gt;a * 13+b)$map digitToInt $show n) n) == 0
    main = print $ head $ filter f [10..]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8188'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/8188
  :user_name: taninsw
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/973/
  :language: Haskell
  :time: 2008/12/16 06:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>意味もなく短くしてみました</p>\n\n\t"
  :code: |
    import Char
    main=(print. head.filter(\n-&gt;(mod(foldl1((+).(* 13))$map digitToInt$show n)n)==0)) [10..]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8297'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/8297
  :user_name: 割と普通
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/581/
  :language: C
  :time: 2009/01/07 23:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>for文でごり押しの方が速度的には速いのが残念ですが･･･。\r</p>\n<p>\r</p>\n<p>せっかくなのでLINQ記法。\r</p>\n<p>\r</p>\n<p>Haskellみたいに無限数列が定義できればもっとすっきりするのですが。</p>\n</div>\n\t"
  :code: |2
        class Program
        {
            static void Main(string[] args)
            {
                for (int i = 10; ; i++)
                {
                    if (Create13BaseNum(i) % i == 0)
                    {
                        Console.WriteLine(i);
                        break;
                    }
                }
                Console.ReadLine();
            }

            public static int Create13BaseNum(int num)
            {
                IEnumerable&lt;char&gt; numCharAry = num.ToString().ToCharArray().Reverse();
                return (int)numCharAry.Select((n, i) =&gt; Math.Pow(13, i) * (n - 48)).Sum();
            }
        }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8392'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/8392
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2009/01/24 10:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  nを13以外にすると別の進数にも対応します.\n\t"
  :code: |
    i = 10
    n = 13
    while True :
        j = reduce(lambda x, y : n * int(x) + int(y), str(i), 0)
        if j % i == 0 :
            break
        i += 1

    print str(j) + "[" + str(n) + "] = " + str(i) + "[10]"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8565'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/8565
  :user_name: doda
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/705/
  :language: Other
  :time: 2009/02/27 04:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>whitespaceで。</p>\n<p>該当する数が見つかるまで10から順番にチェックしているだけです。</p>\n\n\t"
  :code: "             \n\n       \n       \n        \n  \n \n      \n \n                 \n
    \            \n\n \n     \n\n          \n    \n                  \n    \n  \n\n\n\n
    \  \n \n              \n          \n            \n \n              \n          \n
    \     \n                \n      \n \n                 \n                    \n
    \     \n\n    \n.\n"
  :tags:
  - whitespace
  :references:
    :url: 
    :title: 
- :id: '9290'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/9290
  :user_name: ところてん
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/166/
  :language: PHP
  :time: 2009/07/05 21:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>PHP勉強中</p>\n\n\t"
  :code: "&lt;?php\nprint &lt;&lt;&lt; END_DOC\n&lt;HTML&gt;\n&lt;HEAD&gt;&lt;title&gt;doukaku14&lt;/title&gt;\n&lt;/HEAD&gt;&lt;BODY&gt;\nEND_DOC;\n\nfunction
    doukaku14($max_n)\n{\n    for($i = 10; $i &lt;= $max_n; $i++){\n        $Num13
    = intval(strval($i), 13);\n        \n        if(($Num13 % $i) == 0){\n            print
    \"$i\";\n            return;\n        }\n    }\n    print \"not found\";\n}\n\ndoukaku14(10000);\n\nprint
    &lt;&lt;&lt; END_DOC\n&lt;/BODY&gt;\n&lt;/HTML&gt;\nEND_DOC;\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9384'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/9384
  :user_name: rennos
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/1024/
  :language: HSP
  :time: 2009/07/17 14:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "#ifndef powf\n #include \"hspmath.as\"\n #define global pow powf\n#endif\n\n#module\n\n#define
    ctype cwhich_int(%1,%2,%3) \\\n    ( ((%2) * ((%1) != 0)) || ((%3) * ((%1) ==
    0)) )\n\n//------------------------------------------------\n// 数字列を10進数値に変換する\n//------------------------------------------------\n#defcfunc
    ChangeRadix_toDigit str _sInput, int fromRadix,  \\\n    local sInput, local result\n
    \   \n    if ( fromRadix &lt;= 0 ) { return 0 }\n    \n    sInput = getpath(_sInput,
    16)\n    len    = strlen(sInput)\n    result = 0\n    \n    repeat len\n        c
    \      = peek(sInput, len - (cnt + 1))\n        n       = cwhich_int(c &gt;= 'a',
    c - 'a' + 10, c - '0')\n        result += n * int(powf(fromRadix, cnt))\n    loop\n
    \   \n    return result\n    \n#global\n\n*main\n    // 総当たりで解く\n    repeat ,
    10\n        snum = str(cnt)\n        \n        numOf13rdx = int( ChangeRadix_toDigit(snum,
    13) )\n        numOf10rdx = cnt\n        \n        if ( numOf13rdx \\ numOf10rdx
    == 0 ) {\n            x = cnt\n            break\n        }\n    loop\n    \n
    \   dialog \"A. x = \"+ x\n    end\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9591'
  :parent_id: '14'
  :url: http://ja.doukaku.org/comment/9591
  :user_name: 匿名
  :user_url: /web/20091213020027/http://ja.doukaku.org/user/4/
  :language: FORTRAN
  :time: 2009/09/20 10:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    program main
         implicit none
         integer:: ix; ix = 11
         do while((.not.isDividable(ix)))
             ix = ix + 1
         end do
         print *, ix
         contains
         function asBase13(x)
             integer, intent(in)::x
             integer::asBase13
             integer::hun,dec,one
             hun = x/100;
             dec = (x - hun*100)/10;
             one = x - 10*dec
             asBase13 = 13*13*hun + 13*dec + one
         end function
         function isDividable(x)
             integer,intent(in):: x
             logical:: isDividable
             integer::b13,div
             b13 = asBase13(x)
             div = b13/x
             isDividable = (b13 .eq. div * x)
         end function
    end program
  :tags:
  - Fortran95
  :references:
    :url: 
    :title: 
