---
:id: '119'
:title: 年間カレンダー
:comments:
- :id: '4884'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/4884
  :user_name: '186'
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/352/
  :language: 
  :time: 2007/12/19 09:12 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\r\n\t  <pre class=\"compact\">nを入力としてn年の年間カレンダーを返すプログラムを作ってください\r\n少なくとも日曜日と土曜日が判別出来るようにしてください\r\n出力は標準出力でもファイルでも構いません\r\nデザインは各自のお好みで\r\n\r\n出力例1:\r\n(y-calendar
    2008)=&gt;\r\n#=Saturday, @=Sunday\r\n2008/1 1 2 3 4 #5 @6 7 ...\r\n2008/2 1 #2
    @3 4 5 6 7 ...\r\n...\r\n2008/12 1 2 3 4 5 #6 @7 ...\r\n\r\n出力例2:\r\n(y-calendar
    2008)=&gt;\r\n        M T W T F S S M\r\n2008/ 1   1 2 3 4 5 6 7 ...\r\n2008/
    2         1 2 3 4 ...\r\n...\r\n2008/12 1 2 3 4 5 6 7 8 ...\r\n\r\n出力例3:\r\n(y-calendar
    2008)は2008.htmlを出力する\r\n2008.htmlの中身\r\n----\r\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD
    HTML 4.01//EN\"\r\n       \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;2008
    calendar&lt;/title&gt;\r\n&lt;style type=\"text/css\"&gt;\r\n* {font-family: monospace;}\r\nspan
    {margin: 0px 3px;}\r\nspan.sunday {color:red;font-weight:bold;}\r\nspan.saturday
    {color:blue;font-weight:bold;}\r\ndd ul li{display:inline;}\r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;h1&gt;2008
    calendar&lt;/h1&gt;\r\n&lt;dl&gt;\r\n&lt;dt&gt;2008/1&lt;/dt&gt;\r\n&lt;dd&gt;&lt;ul&gt;\r\n&lt;li&gt;&lt;span
    class=\"weekday\"&gt;1&lt;/span&gt;&lt;/li&gt;\r\n&lt;li&gt;&lt;span class=\"weekday\"&gt;2&lt;/span&gt;&lt;/li&gt;\r\n&lt;li&gt;&lt;span
    class=\"weekday\"&gt;3&lt;/span&gt;&lt;/li&gt;\r\n&lt;li&gt;&lt;span class=\"weekday\"&gt;4&lt;/span&gt;&lt;/li&gt;\r\n&lt;li&gt;&lt;span
    class=\"saturday\"&gt;5&lt;/span&gt;&lt;/li&gt;\r\n&lt;li&gt;&lt;span class=\"sunday\"&gt;6&lt;/span&gt;&lt;/li&gt;\r\n...\r\n&lt;/ul&gt;&lt;/dd&gt;\r\n...\r\n&lt;/dl&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n----</pre>\r\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5049'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5049
  :user_name: nobsun
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2007/12/29 23:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>裏技?系</p>\n\n\t"
  :code: |
    module Main (main) where
    import System.Cmd
    import System.Environment
    import System.Exit
    main :: IO ExitCode
    main = system . ("cal "++) . head =&lt;&lt; getArgs
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5050'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5050
  :user_name: あにす
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2007/12/29 23:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>これが一番簡単だと思います。</p>\n\n\t"
  :code: |
    //http://ja.doukaku.org/119/　投稿用
    using System;
    using System.Windows.Forms;
    namespace どう書く_org年間カレンダー {
        class Program {
            [STAThread]
            static void Main(string[] args) {
                Application.Run(new Form1());
            }

        }
        class Form1:Form {
            MonthCalendar calendar = new MonthCalendar();
            public Form1() {
                int year = int.Parse(Environment.GetCommandLineArgs()[1]);
                AutoSize = true;
                calendar.Parent = this;
                calendar.SetCalendarDimensions(4, 3);
                calendar.SelectionStart = new DateTime(year, 1, 1);
            }
        }
    }
  :tags:
  - System.Windows.Forms　C#2.0
  :references:
    :url: 
    :title: 
- :id: '5051'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5051
  :user_name: SiroKuro
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/540/
  :language: C
  :time: 2007/12/30 01:24 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">標準出力へ。\r\n\r\n========= 2008/ 1 =========\r\nSUN
    MON TUE WED THR FRI SAT\r\n          1   2   3   4   5\r\n  6   7   8   9  10
    \ 11  12\r\n 13  14  15  16  17  18  19\r\n 20  21  22  23  24  25  26\r\n 27
    \ 28  29  30  31\r\n\r\n========= 2008/ 2 =========\r\nSUN MON TUE WED THR FRI
    SAT\r\n                      1   2\r\n  3   4   5   6   7   8   9\r\n 10  11  12
    \ 13  14  15  16\r\n 17  18  19  20  21  22  23\r\n 24  25  26  27  28  29\r\n\r\n......</pre>\n\t"
  :code: |
    using System;
    static class Program {
        static void Main(string[] args) {
            int year = int.Parse(args[0]);
            for(int month = 1; month &lt;= 12; month++) {
                int lastday = DateTime.DaysInMonth(year, month);
                int week = (int) DateTime.Parse(string.Format("{0}/{1}/1", args[0], month)).DayOfWeek;
                Console.WriteLine("========= {0,4}/{1,2} =========", year, month);
                Console.WriteLine("SUN MON TUE WED THR FRI SAT");
                for(int i = 0; i &lt; week; i++) {
                    Console.Write("    ");
                }
                for(int day = 1; day &lt;= lastday; day++) {
                    Console.Write("{0,3} ", day);
                    week++;
                    if (week == 7) {
                        Console.WriteLine(); week = 0;
                    }
                }
                Console.WriteLine();
                Console.WriteLine();
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5052'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5052
  :user_name: claddvd
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/639/
  :language: Python
  :time: 2007/12/30 01:34 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>標準出力へ。</p>\n\n\t"
  :code: |
    import sys
    import calendar

    calendar.prcal(int(sys.argv[1]))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5053'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5053
  :user_name: seri
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/641/
  :language: Ruby
  :time: 2007/12/30 02:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ちょっと長いか？\r\n\r\n&lt; January_2007 &gt;\r\nSun
    Mon Tue Wed Thu Fri Sat \r\n      1   2   3   4   5   6 \r\n  7   8   9  10  11
    \ 12  13 \r\n 14  15  16  17  18  19  20 \r\n 21  22  23  24  25  26  27 \r\n
    28  29  30  31 \r\n\r\n・・・</pre>\n\t"
  :code: "require 'date'\ny = ARGV[0].to_i\n\nfor m in 1 .. 12\n  date = Date.new(y,
    m, 1)\n  puts \"&lt; #{ Date::MONTHNAMES[date.month]}_#{y} &gt;\"\n  Date::ABBR_DAYNAMES.each
    { |name|\n    print name + \" \"\n  }\n  puts\n\n  date.wday.times {\n    print
    \"    \"\n  }\n  date.upto((date &gt;&gt; 1) - 1) { |d|\n    print \" \" if d.day
    &lt; 10\n    print \" \" + d.day.to_s + \" \"\n    if d.wday == 6\n      puts\n
    \   end      \n  }\n  puts\n  puts\nend\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5054'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5054
  :user_name: ocean
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/177/
  :language: Python
  :time: 2007/12/30 03:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Python/Tkinterで組んでみました。組んだはいいが、結構重い・・・（レイアウトを工夫すればもっと速くできるかもしれませんが）</p>\n\n\t"
  :code: |
    # coding: shift_jis

    import Tkinter as Tk
    import calendar
    import sys

    def grid_configure(frame, col_count, row_count):
        for col in xrange(col_count):
            frame.grid_columnconfigure(col, weight=1)
        for row in xrange(row_count):
            frame.grid_rowconfigure(row, weight=1)

    class MonthPanel(Tk.Frame):
        def __init__(self, master, year, month):
            Tk.Frame.__init__(self, master)

            label = Tk.Label(self, text=u"%d月" % month)
            label.pack(side=Tk.TOP, fill=Tk.X)

            frame = Tk.Frame(self)
            frame.pack(side=Tk.TOP, fill=Tk.BOTH, expand=True)

            grid_configure(frame, 7, 7)

            def create_label(row, col):
                label = Tk.Label(frame, bg="white")
                label.grid(row=row, column=col, sticky="news", padx=1, pady=1)
                return label

            labels = [[create_label(row, col) for col in xrange(7)] for row in xrange(7)]

            def text(col, row, s, color="white"):
                labels[row][col].configure(text=s, bg=color)

            for col, s in enumerate(u"日月火水木金土"):
                if col == 0:
                    color = "#F7CACA"
                elif col == 6:
                    color = "#CEFFFF"
                else:
                    color = "#E7FFE7"
                text(col, 0, s, color)

            for row, a in enumerate(calendar.Calendar(6).monthdayscalendar(year, month)):
                for col, day in enumerate(a):
                    if day:
                        text(col, row + 1, day)

    def main():
        if len(sys.argv) != 2:
            sys.stderr.write("usage: year\n")
            return
        year = int(sys.argv[1])

        root = Tk.Tk()
        root.title(u"%d年 年間カレンダー" % year)

        grid_configure(root, 4, 3)

        for i in xrange(12):
            frame = MonthPanel(root, year, i + 1)
            frame.grid(row=i/4, column=i%4, sticky="news", padx=2, pady=2)

        root.mainloop()

    if __name__ == '__main__':
        main()
  :tags:
  - GUI
  - 参考になる
  :references:
    :url: 
    :title: 
- :id: '5055'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5055
  :user_name: 99yen
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/591/
  :language: 
  :time: 2007/12/30 03:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>とりあえず表示例1で書いてみました</p>\n\n\t"
  :code: "●yCalendar(year)\n    monthとは整数\n    dayとは整数\n    \"{year} calendar (#=Saturday,
    @=Sunday)\"を表示\n    12回\n        month=回数\n        \"{year}/{month}\"を継続表示\n        (daysOfMonth(year,month))回\n
    \           day=回数\n            もし(\"{year}/{month}/{day}\"の曜日=\"土\")ならば\n                \"
    #{day}\"を継続表示\n            違えば、もし(\"{year}/{month}/{day}\"の曜日=\"日\")ならば\n                \"
    @{day}\"を継続表示\n            違えば\n                \" {day}\"を継続表示\n        改行を継続表示\n
    \   \n●daysOfMonth(year,month)\n    nextYearとは整数\n    nextMonthとは整数\n    もし(month=12)ならば、nextMonth=1。nextYear=year+1\n
    \   違えば、nextMonth=month+1。nextYear=year\n    \"{year}/{month}/1\"と\"{nextYear}/{nextMonth}/1\"の日数差\n\nyCalendar(2008)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5056'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5056
  :user_name: 匿名
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/4/
  :language: C
  :time: 2007/12/30 04:07 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">            2008 /  1               2008 /
    \ 2               2008 /  3\r\n Su Mo Tu We Th Fr Sa    Su Mo Tu We Th Fr Sa    Su
    Mo Tu We Th Fr Sa\r\n        1  2  3  4  5                    1  2                       1\r\n
    \ 6  7  8  9 10 11 12     3  4  5  6  7  8  9     2  3  4  5  6  7  8\r\n 13 14
    15 16 17 18 19    10 11 12 13 14 15 16     9 10 11 12 13 14 15\r\n 20 21 22 23
    24 25 26    17 18 19 20 21 22 23    16 17 18 19 20 21 22\r\n 27 28 29 30 31          24
    25 26 27 28 29       23 24 25 26 27 28 29\r\n                                                 30
    31\r\n\r\n(中略)\r\n\r\n            2008 / 10               2008 / 11               2008
    / 12\r\n Su Mo Tu We Th Fr Sa    Su Mo Tu We Th Fr Sa    Su Mo Tu We Th Fr Sa\r\n
    \          1  2  3  4                       1        1  2  3  4  5  6\r\n  5  6
    \ 7  8  9 10 11     2  3  4  5  6  7  8     7  8  9 10 11 12 13\r\n 12 13 14 15
    16 17 18     9 10 11 12 13 14 15    14 15 16 17 18 19 20\r\n 19 20 21 22 23 24
    25    16 17 18 19 20 21 22    21 22 23 24 25 26 27\r\n 26 27 28 29 30 31       23
    24 25 26 27 28 29    28 29 30 31\r\n                         30\r\n\r\nと、こんな感じで表示します☆</pre>\n\t"
  :code: |
    #include&lt;stdio.h&gt;

    int f(int y, int m, int d){
      if(m &lt; 3)
        y--, m += 12;
      return y * 365 + y / 4 - y / 100 + y / 400 + (m + 1) * 306 / 10 + d - 428;
    }

    int main(void){
      int y , m , d , i , j;
      printf("n = ");
      scanf("%d", &amp;y);
      for(i = 0; i &lt; 12; i += 3){
        for(m = i + 1 ; m &lt; i + 4; m++)
          printf("%16d /%3d   ", y, m);
        printf("\n");
        for(j = 0; j &lt; 3; j++)
          printf(" Su Mo Tu We Th Fr Sa   ");
        printf("\n");
        for(j = 0; j &lt; 42; j += 7, printf("\n"))
          for(m = i + 1; m &lt; i + 4; m++, printf("   "))
            for(d = j - f(y, m, 1) % 7 + 1; d &lt; j - f(y, m, 1) % 7 + 8; d++)
              if(d &lt; 1 || d &gt; f(y, m + 1, 1) - f(y, m, 1))
                printf("   ");
              else
                printf("%3d", d);
        printf("\n");
      }
      return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5057'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5057
  :user_name: caitsith
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/602/
  :language: PHP
  :time: 2007/12/30 04:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  出力例３をテーブルに変えて。\r<br>テーブル用に空白を&amp;nbsp;で埋めています。\n\t"
  :code: |
    &lt;?php
    $year = 2008;
    $weekdays = array( "S", "M", "T", "W", "T", "F", "S" );

    for ( $month = 1; $month &lt;= 12; $month++ ) {
        $month_ts = mktime( 0, 0, 0, $month, 1, $year );
        $days = date( 't', $month_ts );
        $weekday = date( 'w', $month_ts );
        $week = 0;
        for ( $day = 1; $day &lt;= $days; $day++ ) {
            if ( $day == 1 &amp;&amp; $weekday &gt; 0 ) {
                for ( $i = 0; $i &lt; $weekday; $i++ ) {
                    $calendar[$month][$week][$i] = "&amp;nbsp;";
                }
            }
            $calendar[$month][$week][] = $day;
            $weekday++;
            if ( $day == $days &amp;&amp; $weekday &lt; 7 ) {
                for ( $j = $weekday; $j &lt; 7; $j++ ) {
                    $calendar[$month][$week][$j] = "&amp;nbsp;";
                }
            }
            if ( $weekday == 7 ) {
                $week++;
                $weekday = 0;
            }
        }
    }
    ?&gt;
    &lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
           "http://www.w3.org/TR/html4/strict.dtd"&gt;
    &lt;html&gt;
    &lt;head&gt;
    &lt;title&gt;&lt;?php echo($year); ?&gt; calendar&lt;/title&gt;
    &lt;style type="text/css"&gt;
    * {font-family: monospace;}
    td {text-align: right;}
    .sunday {color:red;font-weight:bold;}
    .saturday {color:blue;font-weight:bold;}
    &lt;/style&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;h1&gt;&lt;?php echo($year); ?&gt; calendar&lt;/h1&gt;
    &lt;dl&gt;
    &lt;?php foreach ( $calendar as $month =&gt; $weeks ) { ?&gt;
    &lt;dt&gt;&lt;?php echo($year); ?&gt;/&lt;?php echo($month); ?&gt;&lt;/dt&gt;
    &lt;dd&gt;
    &lt;table&gt;
    &lt;tr&gt;
    &lt;?php
      foreach ( $weekdays as $key =&gt; $val ) {
        $class = "weekday";
        $class = ( $key === 0 )? "sunday": $class;
        $class = ( $key == 6 )? "saturday": $class;
    ?&gt;
    &lt;th class="&lt;?php echo($class); ?&gt;"&gt;&lt;?php echo($val); ?&gt;&lt;/th&gt;
    &lt;?php } ?&gt;
    &lt;/tr&gt;
    &lt;?php foreach ( $weeks as $week ) { ?&gt;
    &lt;tr&gt;
    &lt;?php
      foreach ( $week as $weekday =&gt; $day ) {
        $class = "weekday";
        $class = ( $weekday === 0 )? "sunday": $class;
        $class = ( $weekday == 6 )? "saturday": $class;
    ?&gt;
    &lt;td class="&lt;?php echo($class); ?&gt;"&gt;&lt;?php echo($day); ?&gt;&lt;/td&gt;
    &lt;?php } ?&gt;
    &lt;/tr&gt;
    &lt;?php } ?&gt;
    &lt;/table&gt;
    &lt;/dd&gt;
    &lt;?php } ?&gt;
    &lt;/dl&gt;
    &lt;/body&gt;
    &lt;/html&gt;
  :tags:
  - php
  :references:
    :url: 
    :title: 
- :id: '5058'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5058
  :user_name: にしお
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/12/30 04:30 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <p>参考文献：\n<a class=\"reference\" href=\"/web/20090903220510/http://ja.wikipedia.org/wiki/%E3%83%84%E3%82%A7%E3%83%A9%E3%83%BC%E3%81%AE%E5%85%AC%E5%BC%8F\">ツェラーの公式
    - Wikipedia</a></p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5059'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5059
  :user_name: ocean
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/177/
  :language: Java
  :time: 2007/12/30 05:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Java/Swingで組んでみました。</p>\n\n\t"
  :code: |
    import java.awt.*;
    import java.text.*;
    import java.util.*;
    import javax.swing.*;

    class MeApp {
        public static void main(String[] args) {
            final int year;
            if (args.length == 0) {
                year = Calendar.getInstance().get(Calendar.YEAR);
            } else {
                year = Integer.valueOf(args[0]);
            }
            SwingUtilities.invokeLater(new Runnable(){
                public void run() {
                    final MeFrame frame = new MeFrame(year);
                    frame.setDefaultCloseOperation(MeFrame.EXIT_ON_CLOSE);
                    frame.pack();
                    frame.setVisible(true);
                }
            });
        }
    }

    class MeFrame extends JFrame {
        public MeFrame(int year) {
            super(String.format("%d年 年間カレンダー", year));
            getContentPane().setLayout(new GridLayout(3, 4, 5, 5));
            for (int i = 0; i &lt; 12; ++i) {
                getContentPane().add(new MeMonthPanel(year, i + 1));
            }
        }
    }

    class MeMonthPanel extends JPanel {
        public MeMonthPanel(int year, int month) {
            setLayout(new BorderLayout());
            add(new JLabel(String.format("%d月", month), JLabel.CENTER), BorderLayout.NORTH);
            add(new MeMonthCanvas(year, month), BorderLayout.CENTER);
        }
    }

    class MeMonthCanvas extends JComponent {
        private final String[][] _cells = new String[7][7];
        private final Color[][] _colors = new Color[7][7];
        public MeMonthCanvas(int year, int month) {
            final String[] weekdays = new DateFormatSymbols().getShortWeekdays();
            for (int col = 0; col &lt; 7; ++col) {
                _cells[0][col] = weekdays[col + 1];
                _colors[0][col] = new Color(231, 255, 231);
            }
            _colors[0][0] = new Color(247, 202, 202); // Sunday
            _colors[0][6] = new Color(206, 255, 255); // Saturday

            final Calendar cal = Calendar.getInstance();
            for (int row = 1; row &lt; 7; ++row) {
                for (int col = 0; col &lt; 7; ++col) {
                    cal.set(Calendar.YEAR, year);
                    cal.set(Calendar.MONTH, month - 1);     // starts from 0
                    cal.set(Calendar.DAY_OF_WEEK, col + 1); // starts from 1
                    cal.set(Calendar.WEEK_OF_MONTH, row);   // starts from 1
                    if (cal.get(Calendar.DAY_OF_WEEK) == col + 1 &amp;&amp; cal.get(Calendar.WEEK_OF_MONTH) == row) {
                        _cells[row][col] = String.valueOf(cal.get(Calendar.DATE));
                    } else {
                        _cells[row][col] = "";
                    }
                    _colors[row][col] = Color.WHITE;
                }
            }
        }
        public Dimension getPreferredSize() {
            return new Dimension(25 * 7, 25 * 7);
        }

        public void paintComponent(Graphics g) {
            super.paintComponent(g);
            final FontMetrics fm = g.getFontMetrics();
            final int w = getWidth() / 7;
            final int h = getHeight() / 7;
            for (int row = 0; row &lt; 7; ++row) {
                for (int col = 0; col &lt; 7; ++col) {
                    g.setColor(_colors[row][col]);
                    g.fill3DRect(w * col, h * row, w, h, true);
                    final String s = _cells[row][col];
                    g.setColor(Color.BLACK);
                    g.drawString(
                        s,
                        w * col + (w - fm.stringWidth(s)) / 2,
                        h * row + (h - fm.getHeight()) / 2 + fm.getAscent()
                    );
                }
            }
        }
    }
  :tags:
  - Swing
  :references:
    :url: 
    :title: 
- :id: '5060'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5060
  :user_name: yuin
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/82/
  :language: Scala
  :time: 2007/12/30 06:48 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\n\t  <pre class=\"compact\">せっかくJAVAのクラスを使っているので多言語対応で。\r\n\r\nJAPAN\r\n=================================\r\n2007/1\r\n
    \ 日  月  火  水  木  金  土\r\n       1   2   3   4   5   6\r\n   7   8   9  10  11
    \ 12  13\r\n  14  15  16  17  18  19  20\r\n  21  22  23  24  25  26  27\r\n  28
    \ 29  30  31\r\n\r\nUS\r\n=================================\r\n2007/1\r\n  Sun
    \ Mon  Tue  Wed  Thu  Fri  Sat\r\n         1    2    3    4    5    6\r\n    7
    \   8    9   10   11   12   13\r\n   14   15   16   17   18   19   20\r\n   21
    \  22   23   24   25   26   27\r\n   28   29   30   31\r\n\r\nCHINA\r\n=================================\r\n2007/1\r\n
    \ 星期日  星期一  星期二  星期三  星期四  星期五  星期六\r\n               1       2       3       4
    \      5       6\r\n       7       8       9      10      11      12      13\r\n
    \     14      15      16      17      18      19      20\r\n      21      22      23
    \     24      25      26      27\r\n      28      29      30      31\r\n\r\n\r\n</pre>\n\t"
  :code: "import java.text.{DateFormatSymbols, SimpleDateFormat}\nimport java.util.{Date,
    Locale}\n\nobject YearCalendar {\n  import java.util.Calendar._\n  def mkString(n:int,
    s:String) = List.make(n, s).mkString\n  def print(year:int):unit = print(year,
    Locale.getDefault)\n  def print(year:int, locale:Locale):unit = {\n    val ws
    \  = (new DateFormatSymbols(locale)).getShortWeekdays mkString \"  \"\n    val
    format = (new SimpleDateFormat(\"dd\", locale)).format _:Date =&gt; String\n    val
    wwidth = ws.split(\"  \")(1).getBytes.size\n    val cal = getInstance(locale)\n\n
    \   (0 to 11).foreach { month =&gt; \n      println(year+\"/\"+(month+1)+\"\\n\"+ws)\n
    \     var n = {cal.set(year,month,1); cal}.get(DAY_OF_WEEK)\n      Console.print(mkString((n-1)*(wwidth+2),
    \" \"))\n      do {\n        Console.print(mkString(wwidth, \" \")+format(cal.getTime).replaceFirst(\"^0\",
    \" \"))\n        if(n == 7){ println(\"\"); n = 0 }\n      }while({n = n +1;cal.add(DATE,
    1);cal.get(MONTH) == month})\n      \n      println(\"\\n\")\n    }\n  }\n}\n\nYearCalendar
    print 2007\nYearCalendar.print(2007, Locale.US)\nYearCalendar.print(2007, Locale.CHINA)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5061'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5061
  :user_name: ocean
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/177/
  :language: Java
  :time: 2007/12/30 08:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ついでにJTable版。</p>\n\n\t"
  :code: |
    import java.awt.*;
    import java.text.*;
    import java.util.*;
    import javax.swing.*;
    import javax.swing.table.*;

    class MeApp {
        public static void main(String[] args) {
            final int year;
            if (args.length == 0) {
                year = Calendar.getInstance().get(Calendar.YEAR);
            } else {
                year = Integer.valueOf(args[0]);
            }
            SwingUtilities.invokeLater(new Runnable(){
                public void run() {
                    final MeFrame frame = new MeFrame(year);
                    frame.setDefaultCloseOperation(MeFrame.EXIT_ON_CLOSE);
                    frame.pack();
                    frame.setVisible(true);
                }
            });
        }
    }

    class MeFrame extends JFrame {
        public MeFrame(int year) {
            super(String.valueOf(year));
            getContentPane().setLayout(new GridLayout(3, 4, 5, 5));
            for (int i = 0; i &lt; 12; ++i) {
                getContentPane().add(new MeMonthPanel(year, i + 1));
            }
        }
    }

    class MeMonthPanel extends JPanel {
        public MeMonthPanel(int year, int month) {
            setLayout(new BorderLayout());
            add(new JLabel(new DateFormatSymbols().getMonths()[month - 1], JLabel.CENTER), BorderLayout.NORTH);
            add(new JScrollPane(new JTable(new MeMonthTableModel(year, month))), BorderLayout.CENTER);
        }
        public Dimension getPreferredSize() {
            return new Dimension(220, 180); // ???
        }
    }

    class MeMonthTableModel extends AbstractTableModel {
        private final int _year, _month;
        private final String[] _weekdays = new DateFormatSymbols().getShortWeekdays();
        private final Calendar _cal = Calendar.getInstance();

        public MeMonthTableModel(int year, int month) {
            _year = year; _month = month;
        }
        public int getColumnCount() {
            return 7;
        }
        public String getColumnName(int col) {
            return _weekdays[col + 1];
        }
        public int getRowCount() {
            return 6;
        }
        public Object getValueAt(int row, int col) {
            _cal.set(Calendar.YEAR, _year);
            _cal.set(Calendar.MONTH, _month - 1);      // starts from 0
            _cal.set(Calendar.DAY_OF_WEEK, col + 1);   // starts from 1
            _cal.set(Calendar.WEEK_OF_MONTH, row + 1); // starts from 1
            if (_cal.get(Calendar.DAY_OF_WEEK) == col + 1 &amp;&amp; _cal.get(Calendar.WEEK_OF_MONTH) == row + 1) {
                return String.valueOf(_cal.get(Calendar.DATE));
            } else {
                return "";
            }
        }
    }
  :tags:
  - Swing
  :references:
    :url: 
    :title: 
- :id: '5062'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5062
  :user_name: SiroKuro
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/540/
  :language: diff
  :time: 2007/12/30 09:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  何となく修正\n\t"
  :code: |
    --- calendar.cs.old     Sun Dec 30 10:22:50 2007
    +++ calendar.cs Sun Dec 30 18:23:04 2007
    @@ -6,10 +6,8 @@
    -            Console.WriteLine("SUN MON TUE WED THR FRI SAT");
    -            for(int i = 0; i &lt; week; i++) {
    -                Console.Write("    ");
    -            }
    +            Console.WriteLine("SUN MON TUE WED THU FRI SAT");
    +            Console.Write    ("                           ".Substring(0, week * 4));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5063'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5063
  :user_name: horiuchi
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/570/
  :language: Java
  :time: 2007/12/30 10:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>#5080を参考に、Javaの標準出力版を書いてみました。</p>\n\n\t"
  :code: |
    import java.text.DateFormatSymbols;
    import java.util.Calendar;
    import java.util.Locale;

    public class Sample119 {
        private final int year_;
        private final Locale locale_;
        private DateFormatSymbols formatSymbols_;

        public Sample119(int year, Locale locale) {
            year_ = year;
            locale_ = locale;
            formatSymbols_ = new DateFormatSymbols(locale_);
        }

        public void printCalendar() {
            System.out.println(locale_.getDisplayCountry());
            for (int month = 0; month &lt; 12; month++) {
                printCalendar(month);
            }
            System.out.println();
        }
        private void printCalendar(int month) {
            System.out.format("&lt; %s/%d &gt;%n", formatSymbols_.getShortMonths()[month], year_);
            String[] weekdays = formatSymbols_.getShortWeekdays();
            for (int index = 1; index &lt; weekdays.length; index++) {
                System.out.format("%s ", weekdays[index]);
            }
            System.out.println();

            Calendar cal = Calendar.getInstance(locale_);
            cal.set(year_, month, 1);
            int dayLen = weekdays[1].getBytes().length;
            for (int index = 0, length = (cal.get(Calendar.DAY_OF_WEEK) - 1) * (dayLen + 1); index &lt; length; index++) {
                System.out.print(" ");
            }
            String format = String.format("%%%dd ", dayLen);
            for (; cal.get(Calendar.MONTH) == month; cal.add(Calendar.DATE, 1)) {
                System.out.format(format, cal.get(Calendar.DATE));
                if (Calendar.SATURDAY == cal.get(Calendar.DAY_OF_WEEK)) {
                    System.out.println();
                }
            }
            System.out.println();
        }

        public static void main(String[] args) {
            new Sample119(2008, Locale.JAPAN).printCalendar();
            new Sample119(2008, Locale.US).printCalendar();
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5064'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5064
  :user_name: horiuchi
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/570/
  :language: 
  :time: 2007/12/30 10:34 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  #5080ではなくて、#5060でした。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5065'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5065
  :user_name: g000001
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/405/
  :language: Common
  :time: 2007/12/31 00:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Date-Calcという同名のPerlのライブラリをCommon Lispで再現したものを\r\n使用してみました。\r\nライブラリ機能のおまけで英仏独等々に対応させてみましたが、\r\n日本語は対応していないという…。\r\n(y-calendar
    2008 7)  ;7はイタリア(数字で指定だと色んな意味で紛らわしいかも)\r\n;==&gt;\r\n;       Gennaio 2008        \r\n;Lun
    Mar Mer Gio Ven Sab Dom\r\n;      1   2   3   4   5   6\r\n;  7   8   9  10  11
    \ 12  13\r\n; 14  15  16  17  18  19  20\r\n; 21  22  23  24  25  26  27\r\n;
    28  29  30  31 \r\n; ~~~</pre>\n\t"
  :code: |
    (defpackage :doukaku-119 (:use :cl :date-calc))
    (in-package :doukaku-119)

    (defun y-calendar (y &amp;optional (lang 1))
      (do ((m 1 (1+ m)) (col 4))
          ((&gt; m 12))
        (format t "~&amp;~%~V:@&lt;~A ~D~&gt;~%~{~A~^ ~}~%"
                (* col 7) (get-month-name m lang) y
                (get-week-day-name-list lang (1- col)))
        (do ((d 1 (1+ d))) (nil)
          (let ((dow (day-of-week y m d))
                (day (day-of-year y m d)))
            (when (= 1 d)
              (format t "~V,0T" (* col (1- dow))))
            (if (zerop day)
                (return)
                (format t "~VD~:[ ~;~%~]" (1- col) d (= 7 dow)))))))

    (defun get-month-name (m &amp;optional (lang 1))
      (aref (gethash lang date-calc::month-to-text) m))

    (defun get-week-day-name-list (&amp;optional (lang 1) (shoten 3))
      (map 'list (if shoten (lambda (name) (subseq name 0 shoten)) #'identity)
           (subseq (gethash lang date-calc::day-of-week-to-text) 1)))
  :tags: []
  :references:
    :url: /web/20090903220510/http://www.cliki.net/Date-Calc
    :title: Date-Calc
- :id: '5066'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5066
  :user_name: sumim
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/12/31 00:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Squeak Smalltalk で。</p>\n\n\t"
  :code: "| nn |\nnn := 2008.\nWorld findATranscript: nil.\nTranscript cr; show: nn.\nnn
    asYear monthsDo: [:month |\n    Transcript cr; show: (month name first: 3).\n
    \   month datesDo: [:date |\n        | template |\n        template := date weekday
    caseOf: {\n            [#Saturday] -&gt; ['({1})'].\n            [#Sunday] -&gt;
    ['[{1}]']} otherwise: ['{1}'].\n        Transcript space; show: (template format:
    {date dayOfMonth})]]\n\n\"=&gt; \n2008\nJan 1 2 3 4 (5) [6] 7 8 9 1 ... \"\n"
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '5072'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5072
  :user_name: ocean
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/177/
  :language: diff
  :time: 2007/12/31 09:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>他言語化。（ウィンドウタイトルはそのままだけど、まあいいか）</p>\n\n\t"
  :code: |
    --- MeApp.java.old  Mon Dec 31 18:21:09 2007
    +++ MeApp.java  Mon Dec 31 18:21:22 2007
    @@ -35,7 +35,7 @@
     class MeMonthPanel extends JPanel {
         public MeMonthPanel(int year, int month) {
             setLayout(new BorderLayout());
    -        add(new JLabel(String.format("%dŒŽ", month), JLabel.CENTER), BorderLayout.NORTH);
    +        add(new JLabel(new DateFormatSymbols().getMonths()[month - 1], JLabel.CENTER), BorderLayout.NORTH);
             add(new MeMonthCanvas(year, month), BorderLayout.CENTER);
         }
     }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5073'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5073
  :user_name: ocean
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/177/
  :language: diff
  :time: 2007/12/31 09:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Tk.LabelFrameを使ってみた。</p>\n\n\t"
  :code: "--- 1.py    Mon Dec 31 18:42:39 2007\n+++ 2.py    Mon Dec 31 18:44:14 2007\n@@
    -10,20 +10,14 @@\n     for row in xrange(row_count):\n         frame.grid_rowconfigure(row,
    weight=1)\n \n-class MonthPanel(Tk.Frame):\n+class MonthPanel(Tk.LabelFrame):\n
    \    def __init__(self, master, year, month):\n-        Tk.Frame.__init__(self,
    master)\n+        Tk.LabelFrame.__init__(self, master, text=u\"%dŒŽ\" % month)\n
    \n-        label = Tk.Label(self, text=u\"%dŒŽ\" % month)\n-        label.pack(side=Tk.TOP,
    fill=Tk.X)\n-\n-        frame = Tk.Frame(self)\n-        frame.pack(side=Tk.TOP,
    fill=Tk.BOTH, expand=True)\n-\n-        grid_configure(frame, 7, 7)\n+        grid_configure(self,
    7, 7)\n \n         def create_label(row, col):\n-            label = Tk.Label(frame,
    bg=\"white\")\n+            label = Tk.Label(self, bg=\"white\")\n             label.grid(row=row,
    column=col, sticky=\"news\", padx=1, pady=1)\n             return label\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5084'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5084
  :user_name: あにす
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2008/01/01 09:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>見た目修正。</p>\n\n\t"
  :code: |
    //http://ja.doukaku.org/119/　投稿用
    using System;
    using System.Drawing;
    using System.Windows.Forms;
    namespace どう書く_org年間カレンダー {
        class Program {
            [STAThread]
            static void Main(string[] args) {
                Application.Run(new Form1());
            }
        }
        class Form1:Form {
            public Form1() {
                int year = int.Parse(Environment.GetCommandLineArgs()[1]);
                Text = year + " Calender";
                MonthCalendar calendar = new MonthCalendar();
                calendar.Parent = this;
                calendar.Dock = DockStyle.Fill;
                calendar.SelectionStart = new DateTime(year, 1, 1);
                calendar.SelectionEnd = new DateTime(year, 1, 1);
                Size = new Size(calendar.SingleMonthSize.Width * 4, calendar.SingleMonthSize.Height * 3);
            }
        }
    }
  :tags:
  - System.Windows.Forms　C#2.0
  :references:
    :url: 
    :title: 
- :id: '5102'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5102
  :user_name: dankogai
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/26/
  :language: JavaScript
  :time: 2008/01/01 17:24 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  \n<p><a href=\"/web/20090903220510/http://blog.livedoor.jp/dankogai/archives/50978399.html\">404
    Blog Not Found:javascript - カレンダーを作る</a>に実際に動くデモがありますので併せてご覧下さい。なるべく再利用しやすいよう書きました。\n</p>\n<p>Dan
    the JavaScripter\n</p>\n\n\n\n\t"
  :code: |
    function leap(year){
      return year % 4 ? 0 : year % 100 ? 1 : year % 400 ? 0 : 1;
    }

    function make_cal_array(year){
      var months = [31, 28 + leap(year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      var result = [];
      for (var m = 0; m &lt; 12; m++){
        result[m] = [];
        var dofw1 = (new Date(year, m, 1, 0, 0, 0)).getDay();
        for (var d = 1; d &lt;= months[m]; d++){
          result[m][d + dofw1 - 1] = d;
        }
      }
      return result;
    }

    var daynames = ['sun','mon','tue','wed','thr','fri','sat'];

    function make_cal_yearly(year){
      var cal = make_cal_array(year);
      var tbody = document.createElement('tbody');
      for (var m = 0; m &lt; 12; m++){
        var tr = document.createElement('tr');
        var th = document.createElement('th');
        th.innerHTML = m + 1;
        tr.appendChild(th);
        for (var d = 0, l = cal[m].length; d &lt; l; d++){
          var td = document.createElement('td');
          if (cal[m][d]){
            td.innerHTML = cal[m][d];
            td.className = daynames[d % 7];
          }
          tr.appendChild(td);
        }
        tbody.appendChild(tr);
      }
      var table = document.createElement('table');
      table.className = 'ycal';
      var caption = document.createElement('caption');
      caption.innerHTML = year;
      table.appendChild(caption);
      table.appendChild(tbody);
      return table;
    }

    function make_cal_monthly(year, m){
      var cal = make_cal_array(year);
      var table = document.createElement('table');
      // header
      var tr = document.createElement('tr');
      for (var d = 0; d &lt; 7; d++){
        var th = document.createElement('th');
        th.innerHTML = th.className = daynames[d];
        tr.appendChild(th);
      }
      var thead = document.createElement('thead');
      thead.appendChild(tr);
      table.appendChild(thead);
      // body;
      var tbody = document.createElement('tbody');
      for (var d = 0, l = cal[m].length; d &lt; l; d++){
        if (d % 7 == 0) tr = document.createElement('tr');
        var td = document.createElement('td');
        if (cal[m][d]){
          td.innerHTML = cal[m][d];
          td.className = daynames[d % 7];
        }
        tr.appendChild(td);
        if (d % 7 == 6) tbody.appendChild(tr);
      }
      tbody.appendChild(tr);
      table.className = 'mcal';
      var caption = document.createElement('caption');
      caption.innerHTML = year + '.' + (m+1);
      table.appendChild(caption);
      table.appendChild(tbody);
      return table;
    }

    function make_calendars(year, p){
      p.innerHTML = '';
      p.appendChild(make_cal_yearly(year));
      for (var m = 0; m &lt; 12; m++){
       var mcal = make_cal_monthly(year, m);
       p.appendChild(mcal);
       if (m % 3 == 2){
         var br = document.createElement('br');
         br.clear = 'all';
         p.appendChild(br);
       }
      };
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5112'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5112
  :user_name: pooq
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/01/02 04:45 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ひたすらコンパクトさ目指して、32進表記とか。\r\n   cal 2008\r\nuv12345
    6789abc defghij klmnopq \r\nrstuv12 3456789 abcdefg hijklmn \r\nopqrst1 2345678
    9abcdef ghijklm \r\nnopqrst uv12345 6789abc defghij \r\nklmnopq rstu123 456789a
    bcdefgh \r\nijklmno pqrstuv 1234567 89abcde \r\nfghijkl mnopqrs tu12345 6789abc
    \r\ndefghij klmnopq rstuv12 3456789 \r\nabcdefg hijklmn opqrstu v123456 \r\n789abcd
    efghijk lmnopqr stu1234 \r\n56789ab cdefghi jklmnop qrstuv1 \r\n2345678 9abcdef
    ghijklm nopqrst \r\nu123456 789abcd efghijk lmnopqr \r\nstuv123 456789a bcdefgh
    ijklmno \r\n</pre>\n\t"
  :code: |
    load 'dates'
    n32=:{&amp;' 123456789abcdefghijklmnopqrstuv'
    cal=:3 :'14 32$,,.&amp;'' ''_7[\n32"0[,2}."1 todate((todayno-weekday)y,1 1)+i.400'
  :tags:
  - おもしろおかしい
  :references:
    :url: 
    :title: 
- :id: '5114'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5114
  :user_name: vtwntmtn
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/380/
  :language: 
  :time: 2008/01/02 07:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>全部で365日をこえてしまってまっているようですが…</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5118'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5118
  :user_name: vtwntmtn
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/380/
  :language: Erlang
  :time: 2008/01/02 10:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">calコマンドっぽく表示します。\r\n\r\n&gt; erlc year_cal.erl\r\n&gt;
    erl -noshell -s year_cal main -s init stop\r\n\r\n1月_2008\r\n 日 月 火 水 木 金 土\r\n
    \       1  2  3  4  5\r\n  6  7  8  9 10 11 12\r\n 13 14 15 16 17 18 19\r\n 20
    21 22 23 24 25 26\r\n 27 28 29 30 31\r\n\r\n（中略）\r\n\r\n12月_2008\r\n 日 月 火 水 木
    金 土\r\n     1  2  3  4  5  6\r\n  7  8  9 10 11 12 13\r\n 14 15 16 17 18 19 20\r\n
    21 22 23 24 25 26 27\r\n 28 29 30 31\r\n</pre>\n\t"
  :code: |
    -module(year_cal).
    -export([main/0]).

    main() -&gt; year_cal(2008).

    year_cal(Year) -&gt; lists:foreach(fun manth/1, [{Year, X} || X &lt;- lists:seq(1, 12)]).

    manth({Year, Manth}) -&gt;
        io:format("~B月_~B~n", [Manth, Year]),
        io:format("日 月 火 水 木 金 土~n", []),
        First = calendar:day_of_the_week(Year, Manth, 1),
        if
            7 == First -&gt; true;
            true -&gt; io:format(lists:duplicate(((First rem 7) * 3) - 1, " "), [])
        end,
        manth(Year, Manth, 1).

    manth(Year, Manth, Day) -&gt;
        case calendar:valid_date(Year, Manth, Day) of
            false -&gt; io:nl();        % 一ヶ月の終わり
            true  -&gt;
                Dotw = calendar:day_of_the_week(Year, Manth, Day),
                if
                    7 == Dotw -&gt; io:format("~2B", [Day]);        % 日曜日
                    6 == Dotw -&gt; io:format("~3B~n", [Day]);        % 土曜日
                    true      -&gt; io:format("~3B", [Day])        % その他平日
                end,
                manth(Year, Manth, Day + 1)
        end.
  :tags:
  - ErlangOTP_R10B-10
  :references:
    :url: 
    :title: 
- :id: '5121'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5121
  :user_name: silverwire
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/646/
  :language: Batchfile
  :time: 2008/01/02 12:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  初めて投稿させていただきます。\r<br><br>出力形式はUnixの calコマンドを参考にしました。\r<br><br>バッチファイルですので、ファイル名を cal.batなどにして保存し、ダブルクリックして\r<br>ください。Windows 2000以降であれば動作すると思います。一瞬で終了しないようにする\r<br>には、69行目のendlocalの下に以下の行を追加してください。\r<br><br>  e.g. pause &gt;NUL\r<br><br>引数を指定しない場合はシステムの日時をもとに算出します。ただし、日本以外の地域の\r<br>日時表記を使用している環境では正常に動作しません。\r<br><br>  e.g. C:\\&gt;cal 1 2008\n\t"
  :code: "@echo off\n\n::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n::
    グローバル変数\n\n  setlocal\n\n  set Y4=%2\n  set MM=%1\n  set DOW=\n  set EOM=\n  set
    COUNT=\n  set ERROR=\n  set IS_LEAP_YEAR=0\n  set MARGIN=\n  set MONTH=\n  set
    SPACE=\n  set ARRAY_MONTH=\n\n::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n::
    メイン関数\n\n  if \"%3\" NEQ \"\" echo usage: cal [month] [year] &amp; goto :EOF\n
    \ if \"%2\" EQU \"\" (\n    if \"%1\" NEQ \"\" echo usage: cal [month] [year]
    &amp; goto :EOF\n    call :GetDate Y4 MM\n  )\n\n  ::  8進数として解釈されないようにする。\n  set
    /a Y4=%Y4%+0\n  set /a MM=%MM%+0\n\n  call :IsNumber %Y4% _ERROR\n  if %_ERROR%
    NEQ 0 echo usage: cal [month] [year] &amp; goto :EOF\n\n  call :IsNumber %MM%
    _ERROR\n  if %_ERROR% NEQ 0 echo usage: cal [month] [year] &amp; goto :EOF\n\n
    \ if %Y4% LSS    1 echo cal: illegal year value: use 1-9999 &amp; goto :EOF\n
    \ if %Y4% GTR 9999 echo cal: illegal year value: use 1-9999 &amp; goto :EOF\n\n
    \ if %MM% LSS  1 echo cal: illegal month value: use 1-12 &amp; goto :EOF\n  if
    %MM% GTR 12 echo cal: illegal month value: use 1-12 &amp; goto :EOF\n\n  call
    :GetMonthName ARRAY_MONTH\n\n  call :GetMargin %MM% MARGIN\n\n  call :GetSpace
    %MARGIN% SPACE\n\n  call :GetArrayValue ARRAY_MONTH_%MM% MONTH\n\n  call :PrintHeader
    %Y4% %MONTH% \"%SPACE%\"\n\n  call :GetDayOfWeek %Y4% %MM% DOW\n\n  :: 2 : セルの幅,
    1 : セルの余白\n  set /a MARGIN=%DOW%*(2+1)\n\n  call :GetSpace %MARGIN% SPACE\n\n
    \ call :GetEndOfMonth %MM% EOM\n\n  call :IsLeapYear %Y4% %MM% IS_LEAP_YEAR\n
    \ if %IS_LEAP_YEAR% NEQ 0 set /a EOM+=1\n\n  call :PrintCalendar %EOM% %DOW% \"%SPACE%\"\n\n
    \ endlocal\ngoto :EOF\n\n::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n::
    ユーザー定義関数\n\n:SetArrayValue\n  set %1_%COUNT%=%2\ngoto :EOF\n\n:GetArrayValue\n
    \ for /f \"delims== tokens=1,2\" %%a in ('set^|findstr /b \"%1=\"') do set %2=%%b\ngoto
    :EOF\n\n:Increment\n  set /a COUNT+=1\ngoto :EOF\n\n:GetDate\n  set _DATE=\n\n
    \ for /f \"tokens=1\" %%d in ('date /t') do set _DATE=%%d\n\n  set %1=%_DATE:~0,4%\n
    \ set %2=%_DATE:~5,2%\ngoto :EOF\n\n:IsNumber\n  set %2=0\n\n  echo %1|findstr
    /r \"[^0-9]\" &gt;NUL 2&gt;NUL\n  if %ERRORLEVEL% EQU 0 set %2=1\ngoto :EOF\n\n:PrintHeader\n
    \ set _SPACE=%3\n  set _SPACE=%_SPACE:\"=%\n\n  echo %_SPACE% %2 %1\n  echo Su
    Mo Tu We Th Fr Sa\ngoto :EOF\n\n:GetMonthName\n  set _PATH=_.txt\n\n  echo January
    \ &gt; %_PATH%\n  echo February &gt;&gt;%_PATH%\n  echo March    &gt;&gt;%_PATH%\n
    \ echo April    &gt;&gt;%_PATH%\n  echo May      &gt;&gt;%_PATH%\n  echo June
    \    &gt;&gt;%_PATH%\n  echo July     &gt;&gt;%_PATH%\n  echo Augst    &gt;&gt;%_PATH%\n
    \ echo September&gt;&gt;%_PATH%\n  echo October  &gt;&gt;%_PATH%\n  echo November
    &gt;&gt;%_PATH%\n  echo December &gt;&gt;%_PATH%\n\n  set COUNT=1\n  for /f \"delims=\"
    %%m in (%_PATH%) do (\n    call :SetArrayValue %1 %%m\n    call :Increment\n  )\n
    \ del /q %_PATH% &gt;NUL 2&gt;NUL\ngoto :EOF\n\n:GetMargin\n  set _PATH=_.bat\n\n
    \ echo set _MARGIN= 334455542333&gt;%_PATH%\n  echo set %2=%%_MARGIN:~%1,1%%&gt;&gt;%_PATH%\n\n
    \ call %_PATH%\n\n  del %_PATH% &gt;NUL 2&gt;NUL\ngoto :EOF\n\n:GetDayOfWeek\n
    \ set _Y4_PREV=%1\n  set _MM_PREV=%2\n  set _DOW=0\n\n  if %2 LEQ 2 (\n    set
    /a _Y4_PREV=%1-1\n    set /a _MM_PREV=%2+12\n  )\n\n  set /a _DOW=_Y4_PREV+_Y4_PREV/4-_Y4_PREV/100+_Y4_PREV/400+(13*_MM_PREV+8)/5+1\n
    \ set /a %3=_DOW%%7\ngoto :EOF\n\n:GetSpace\n  set _PATH=_.bat\n\n  echo set _SPACE=
    \                  &gt;%_PATH%\n  echo set %2=%%_SPACE:~0,%1%%&gt;&gt;%_PATH%\n\n
    \ call %_PATH%\n\n  del %_PATH% &gt;NUL 2&gt;NUL\ngoto :EOF\n\n:GetEndOfMonth\n
    \ set _PATH=_.bat\n\n  echo set _DIFF=0030101001010&gt;%_PATH%\n  echo set /a
    %2=31-%%_DIFF:~%1,1%%&gt;&gt;%_PATH%\n\n  call %_PATH%\n\n  del %_PATH% &gt;NUL
    2&gt;NUL\ngoto :EOF\n\n:PrintCalendar\n  set _DOW=0\n  set _SPACE=%3\n  set _LINE=%_SPACE:\"=%\n
    \ set _DD=1\n\n  :LOOP_BEGIN\n    if %_DD% GTR %1 goto LOOP_END\n\n    set /a
    _DOW=(%_DD%+%2)%%7\n\n    if %_DD% LSS 10 set _DD= %_DD%\n    set _LINE=%_LINE%%_DD%
    \n\n    if %_DOW% EQU 0 (\n      echo %_LINE%\n      set _LINE=\n    )\n\n    set
    /a _DD+=1\n    goto LOOP_BEGIN\n  :LOOP_END\n  if \"%_LINE%\" NEQ \"\" echo %_LINE%\ngoto
    :EOF\n\n:IsLeapYear\n  set _VALUE=0\n\n  if %2 NEQ 2 goto :EOF\n\n  set /a _VALUE=%1%%4\n
    \ if %_VALUE% NEQ 0 goto :EOF\n\n  set /a _VALUE=%1%%100\n  if %_VALUE% NEQ 0
    set %3=1 &amp;&amp; goto :EOF\n\n  set /a _VALUE=%1%%400\n  if %_VALUE% EQU 0
    set %3=1 &amp;&amp; goto :EOF\ngoto :EOF\n"
  :tags:
  - 力作
  :references:
    :url: 
    :title: 
- :id: '5128'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5128
  :user_name: silverwire
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/646/
  :language: 
  :time: 2008/01/02 17:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  一点訂正です。\r<br><br>47, 48, 50, 51行目で_ERRORという名前の変数を使用していますが、正しくは ERRORでし\r<br>た。(先頭のアンダースコアが不要。)\r<br><br>該当部分の処理を関数(擬似関数)内からメイン関数に移した際、変数名を変更するのを忘\r<br>れていました。とはいえ、setlocalとendlocalでスコープを細かく分けることはしていな\r<br>いので、投稿したものでも動作上問題はありません。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5132'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5132
  :user_name: dankogai
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/26/
  :language: Perl
  :time: 2008/01/02 22:55 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>カレンダーをどう見せるかで一番迷いましたが、こんな見せ方もあってもいいかなあ、と。</p>\n<p>ANSIカラーに対応した端末(まあ今時はたいていのがそうだけど)で実行してご確認ください。</p>\n<p>Dan
    the Perl Monger</p>\n\n\t"
  :code: |
    #!/usr/local/bin/perl
    use strict;
    use warnings;
    use POSIX qw/mktime/;

    sub leap {
        $_[0] % 4 ? 0 : $_[0] % 100 ? 1 : $_[0] % 400 ? 0 : 1;
    }

    my @dayname = qw/sun mon tue wed thu fri sat/;

    sub make_cal_array {
        my $year = shift;
        my @months =
          ( 31, 28 + leap($year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 );
        my $result;
        for my $m ( 0 .. 11 ) {
            my $dofw1 = ( localtime( mktime( 0, 0, 0, 1, $m, $year - 1900 ) ) )[6];
            for my $d ( 1 .. $months[$m] ) {
                $result-&gt;[$m][ $d + $dofw1 - 1 ] = $d;
            }
        }
        return $result;
    }

    sub color {
        [
            sub { "\e[7m\e[31m$_[0]\e[0m" },    # reverse red
            sub { "\e[30m$_[0]\e[0m" },         # black
            sub { "\e[35m$_[0]\e[0m" },         # purple
            sub { "\e[32m$_[0]\e[0m" },         # green
            sub { "\e[33m$_[0]\e[0m" },         # yellow
            sub { "\e[36m$_[0]\e[0m" },         # skyblue
            sub { "\e[7m\e[34m$_[0]\e[0m" },    # reverse blue
        ]-&gt;[ $_[1] % 7 ]-&gt;( $_[0] );
    }

    sub print_cal {
        my $year = shift;
        my $cal  = make_cal_array($year);
        print "$year\n";
        for my $m ( 0 .. 11 ) {
            printf "%2d: ", $m + 1;
            my $c = 0;
            for my $d ( @{ $cal-&gt;[$m] } ) {
                print color( $d ? $d &lt; 10 ? ' ' . $d : $d : '  ', $c++ );
            }
            print "\n";
        }
    }

    print_cal(shift || (localtime)[5]+1900);
  :tags:
  - ANSIカラー
  - 参考になる
  :references:
    :url: 
    :title: 
- :id: '5137'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5137
  :user_name: pooq
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/606/
  :language: 
  :time: 2008/01/03 07:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">前にも後ろにもはみ出しています。「年間」カレンダーとはよべないかも\r\nしれません。４クールカレンダーかな。\r\nもうすこしカレンダーらしくなるように考えてみます。\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5144'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5144
  :user_name: silverwire
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/646/
  :language: 
  :time: 2008/01/03 11:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">現状を維持しながら cal -y のような表示形式にするのは難しかったので、以下のワンラ\r\nイナーでもって「年間カレンダー」に対する回答とさせてください。\r\n\r\n
    \ e.g.\r\n    C:\\&gt;echo off &amp;&amp; (for /l %i in (1,1,12) do (echo. &amp;
    cal %i 2008)) &amp;&amp; echo on\r\n    \r\n        January 2008\r\n    Su Mo
    Tu We Th Fr Sa\r\n           1  2  3  4  5\r\n     6  7  8  9 10 11 12\r\n    13
    14 15 16 17 18 19\r\n    20 21 22 23 24 25 26\r\n    27 28 29 30 31\r\n    \r\n
    \   (中略)\r\n    \r\n        December 2008\r\n    Su Mo Tu We Th Fr Sa\r\n        1
    \ 2  3  4  5  6\r\n     7  8  9 10 11 12 13\r\n    14 15 16 17 18 19 20\r\n    21
    22 23 24 25 26 27\r\n    28 29 30 31</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5154'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5154
  :user_name: silverwire
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/646/
  :language: Other
  :time: 2008/01/03 19:11 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">InstallShield Scriptで書いてみました。\r\n\r\nInstallShield
    Scriptは Windowsアプリケーション用のインストーラーを作成するための\r\n言語です。\r\n\r\nインストーラーを実行すると、年を入力するダイアログが表示されます。西暦を入力して\r\n[次へ]ボタンを押すと、ダイアログに以下の形式でカレンダーが表示されます。\r\n\r\n
    \ e.g.\r\n    2008/ 1\r\n    日 月 火 水 木 金 土\r\n           1  2  3  4  5\r\n     6
    \ 7  8  9 10 11 12\r\n    13 14 15 16 17 18 19\r\n    20 21 22 23 24 25 26\r\n
    \   27 28 29 30 31\r\n    \r\n    (中略)\r\n    \r\n    2008/12\r\n    日 月 火 水 木
    金 土\r\n        1  2  3  4  5  6\r\n     7  8  9 10 11 12 13\r\n    14 15 16 17
    18 19 20\r\n    21 22 23 24 25 26 27\r\n    28 29 30 31\r\n\r\n# InstallShield
    Profesional 7.01でビルドし、動作することを確認。</pre>\n\t"
  :code: |
    #include "ifx.h"

    prototype CreateCalendar(BYREF LIST, NUMBER, NUMBER);
    prototype GetDayOfWeek(NUMBER, NUMBER, NUMBER);
    prototype GetEndOfMonth(NUMBER, NUMBER);
    prototype IsLeapYear(NUMBER);

    LIST   l;
    NUMBER m, y;
    STRING s;

    program
        AskText("年を入力してください。(1-9999)", "", s);
        if (StrToNum(y, s) &lt; ISERR_SUCCESS) then abort; endif;
        if (y &lt; 1 || y &gt; 9999) then abort; endif;

        l = ListCreate(STRINGLIST);
        if (l = LIST_NULL) then abort; endif;
        for m = 1 to 12
            CreateCalendar(l, y, m);
        endfor;
        SdShowInfoList("", "", l);
        ListDestroy(l);

        abort;
    endprogram

    function CreateCalendar(l, y, m)
        NUMBER d, i, w;
        STRING s, t;
    begin
        w = GetDayOfWeek(y, m, 1);
        d = GetEndOfMonth(y, m);

        NumToStr(s, y); t = s;
        NumToStr(s, m); if (StrLength(s) = 1) then s = " " + s; endif;
        ListAddString(l, t + "/" + s, AFTER); t = "";
        ListAddString(l, "日 月 火 水 木 金 土", AFTER);
        for i = 1 to w
            t = t + "   ";
        endfor;
        for i = 1 to d
            NumToStr(s, i);
            if (StrLength(s) = 1) then t = t + " " + s; else t = t + s; endif;
            if (GetDayOfWeek(y, m, i) = 6 || i = d) then
                ListAddString(l, t, AFTER); t = "";
            else
                t = t + " ";
            endif;
        endfor;
        ListAddString(l, "", AFTER);
    end;

    function GetDayOfWeek(y, m, d)
    begin
        if (m &lt;= 2) then y = y - 1; m = m + 12; endif;
        return (5 * y / 4 - y / 100 + y / 400 + (26 * m + 16) / 10 + d) % 7;
    end;

    function GetEndOfMonth(y, m)
    begin
        switch (m)
            case 1, 3, 5, 7, 8, 10, 12 : return 31;
            case 2                     : if (IsLeapYear(y)) then return 29; else return 28; endif;
            case 4, 6, 9, 11           : return 30;
        endswitch;
    end;

    function IsLeapYear(y)
    begin
        if (y % 400 = 0) then return 1; endif;
        if (y % 100 = 0) then return 0; endif;
        if (y %   4 = 0) then return 1; endif;
        return 0;
    end;
  :tags:
  - InstallShield
  - Script
  :references:
    :url: 
    :title: 
- :id: '5162'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5162
  :user_name: naranja
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/448/
  :language: D
  :time: 2008/01/04 08:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  出力例 1 と同じ形式。\n\t"
  :code: |
    import std.stdio;
    import std.date;

    void main(string[] args){
        auto year = args[1];
        auto newYearsDay = parse("Jan 01 " ~ year ~ " 00:00:00 GMT+0000");
        if(newYearsDay == d_time_nan){
            return;
        }
        auto wdayOffset = WeekDay(newYearsDay);
        int total;
        writefln("#=Saturday, @=Sunday");
        foreach(i, n; [31, 28 + !!inLeapYear(newYearsDay), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]){
            writef(year, "/", i + 1);
            for(int j = 1; j &lt;= n; j++, total++){
                writef(" ", ["@", "", "", "", "", "", "#"][(wdayOffset + total) % 7], j);
            }
            writefln();
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5177'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5177
  :user_name: silverwire
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/646/
  :language: Bash
  :time: 2008/01/04 17:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">「車輪の再発明」の誹りは免れませんが、Shell Scriptで書いてみました。\r\n\r\nBourne
    Shellでも動作するように書いたので、Unix系OSなら大半で動作すると思います。\r\n時間のある時に AIX, HP-UX, Linux, Solaris
    などで動作確認してみます。\r\n\r\n# 手元のCygwinで動作することを確認しました。\r\n\r\n以下のワンライナーを実行することで、「年間カレンダー」を表示することが可能です。\r\n\r\n
    \ e.g.\r\n    $ for i in `seq 1 12`; do ./cal.sh $i 2008; done</pre>\n\t"
  :code: |
    #!/bin/sh

    case "`echo -e`" in
      -e) echo_() { echo    "$@"; };;
       *) echo_() { echo -e "$@"; };;
    esac

    case "`echo_ '\r'`" in
      '\r') case "`(print X) 2&gt;/dev/null`" in
              X) echo_() { print "$@"; };;
              *) PATH=/usr/5bin:$PATH; export PATH;;
            esac
            ;;
    esac

    is_numeric() { return `echo_ $1 | grep -E '^[0-9]+$' &gt;/dev/null 2&gt;&amp;1`; }

    dow() {
      y=$1; m=$2
      [ $2 -le 2 ] &amp;&amp; { y=`expr $y - 1`; m=`expr $m + 12`; }
      expr \( 5 \* $y / 4 - $y / 100 + $y / 400 + \( 26 \* $m + 16 \) / 10 + $3 \) % 7
    }

    eom() {
      case $2 in
        1|3|5|7|8|10|12) echo_ 31;;
               4|6|9|11) echo_ 30;;
                      2) is_leap_year $1 &amp;&amp; echo_ 29 || echo_ 28;;
      esac
    }

    is_leap_year() {
      [ `expr $1 % 400` -eq 0 ] &amp;&amp; return 0
      [ `expr $1 % 100` -eq 0 ] &amp;&amp; return 1
      [ `expr $1 %   4` -eq 0 ] &amp;&amp; return 0
      return 1
    }

    main() {
      [ $# -ne 2 ] &amp;&amp; { echo_ "usage: $0 [month] [year]"; return 1; }

      is_numeric $1 || return 1; [ $1 -lt 1 -o $1 -gt   12 ] &amp;&amp; return 1
      is_numeric $2 || return 1; [ $2 -lt 1 -o $2 -gt 9999 ] &amp;&amp; return 1

      w=`dow $2 $1 1`
      d=`eom $2 $1`

      echo_ "$2/\c"; [ `echo_ "$1\c" | wc -m` -eq 1 ] &amp;&amp; echo_ ' \c'; echo_ "$1"
      echo_ 'Su Mo Tu We Th Fr Sa'
      for i in `seq 1 $w`; do echo_ '   \c'; done
      for i in `seq 1 $d`; do
        [ `echo_ "$i\c" | wc -m` -eq 1 ] &amp;&amp; echo_ ' \c'
        echo_ "$i\c"
        [ `dow $2 $1 $i` -eq 6 ] &amp;&amp; echo_ '' || echo_ ' \c'
      done
      echo_ '\n'

      return 0
    }

    main $*
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5189'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5189
  :user_name: silverwire
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/646/
  :language: 
  :time: 2008/01/05 09:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ANSIカラーに対応してみました。\r\n\r\n# ダム端末ではエスケープシーケンスがそのまま表示されるため、レイアウトが崩れます。\r\n\r\n
    \ e.g.\r\n    53,54c54,59\r\n    &lt;     echo_ \"$i\\c\"\r\n    &lt;     [ `dow
    $2 $1 $i` -eq 6 ] &amp;&amp; echo_ '' || echo_ ' \\c'\r\n    ---\r\n    &gt;     case
    \"`dow $2 $1 $i`\" in\r\n    &gt;       0) echo_ \"\\033[31m$i\\033[m \\c\";;\r\n
    \   &gt;       6) echo_ \"\\033[34m$i\\033[m\"   ;;\r\n    &gt;       *) echo_
    \"$i \\c\"              ;;\r\n    &gt;     esac</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5203'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5203
  :user_name: silverwire
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/646/
  :language: JavaScript
  :time: 2008/01/05 19:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">すでに JavaScript + HTMLによる解が提出されていますが、 SVGで出力してみたかったの\r\nで、
    ECMA Script + SVGで書いてみました。\r\n\r\ncalendar.svgなどの名前でファイルを保存し、ブラウザにドラッグアンドドロップすれば、\r\n以下の形式でカレンダーが表示されます。\r\n\r\n
    \ e.g.\r\n    2008/ 1\r\n    日 月 火 水 木 金 土\r\n           1  2  3  4  5\r\n     6
    \ 7  8  9 10 11 12\r\n    13 14 15 16 17 18 19\r\n    20 21 22 23 24 25 26\r\n
    \   27 28 29 30 31\r\n\r\nFirefox 2.0.0.8, Internet Explorer 6, Opera 9.23で動作を確認しました。まだ試して\r\nいませんが、Safari
    3でも動作すると思います。\r\n\r\n[注意]\r\n  * IEで表示する場合は、プラグインとしてAdobe SVG Viewerがインストールされている\r\n
    \   必要があります。\r\n  * IEで SVGファイルを実行するとスクロールバーが表示されないため、カレンダーを全\r\n    て見ることができませんでした。スクロールバーを表示するには、別途HTMLファイル\r\n
    \   を用意し、 embed要素の src属性に SVGファイルを指定してあげる必要があるのかも\r\n    しれません。\r\n  * Calendarオブジェクトに何もかも詰め込んでいるので、ソースが汚い点はお許しを。</pre>\n\t"
  :code: |
    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
    &lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"&gt;
    &lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" onload="new Calendar(2008).draw(10, 10)"&gt;
        &lt;script type="text/ecmascript"&gt;
        &lt;![CDATA[
            function $(i) { return document.getElementById(i); }

            function isNumber(v) { return typeof(v) == 'number' &amp;&amp; isFinite(v); }

            var Calendar = function (y /* 年 */) {
                if (!isNumber(y)) return;

                this.y = y;
                this.f = 14; // フォントサイズ

                this.isLeapYear = function (y) { return y % 4 ? true : y % 100 ? false : y % 400 ? true : false; };
                this.draw = function (l /* 左部余白 */, t /* 上部余白 */) {
                    var d = [ 31, (this.isLeapYear(this.y)) ? 28 : 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
                    var w = [ '日', '月', '火', '水', '木', '金', '土' ];
                    var i, m, o, s, x, y;

                    s = this.f / 2 /* 余白 */; y = t;
                    for (m = 0; m &lt; 12; m++) {
                        // 年, 月
                        x = l; y += this.f + s;
                        o = document.createElementNS('http://www.w3.org/2000/svg', 'text');
                        o.setAttribute('x', x);
                        o.setAttribute('y', y);
                        o.setAttribute('font-family', 'MS Gothic');
                        o.setAttribute('font-size', this.f + 'px');
                        o.setAttribute('text-rendering', 'optimizeLegibility');
                        o.appendChild(document.createTextNode(this.y + '/' + ((m + 1 &lt; 10) ? ' ' : '') + (m + 1)));
                        document.rootElement.appendChild(o);
                        // 曜日
                        x = l; y += this.f + s;
                        for (i = 0; i &lt; w.length; i++) {
                            o = document.createElementNS('http://www.w3.org/2000/svg', 'text');
                            o.setAttribute('x', x);
                            o.setAttribute('y', y);
                            o.setAttribute('font-family', 'MS Gothic');
                            o.setAttribute('font-size', this.f + 'px');
                            o.setAttribute('text-rendering', 'optimizeLegibility');
                            o.appendChild(document.createTextNode(w[i]));
                            document.rootElement.appendChild(o);
                            x += this.f + s;
                        }
                        // 日
                        x = l + (this.f + s) * (new Date(this.y, m, 1).getDay()); y += this.f + s;
                        for (i = 0; i &lt; d[m] ; i++) {
                            o = document.createElementNS('http://www.w3.org/2000/svg', 'text');
                            o.setAttribute('x', (i + 1 &lt; 10) ? x + s : x);
                            o.setAttribute('y', y);
                            o.setAttribute('font-family', 'MS Gothic');
                            o.setAttribute('font-size', this.f + 'px');
                            o.setAttribute('text-rendering', 'optimizeLegibility');
                            o.appendChild(document.createTextNode(i + 1));
                            document.rootElement.appendChild(o);
                            if (new Date(this.y, m, i + 1).getDay() == 6) {
                                x = l; y += this.f + s;
                            } else {
                                x += this.f + s;
                            }
                        }
                        y += this.f + s;
                    }
                    // ビューポート
                    document.rootElement.setAttribute('width', l + (this.f + s) * w.length);
                    document.rootElement.setAttribute('height', y);
                    // ビューボックス
                    document.rootElement.setAttribute('viewBox', '0 0 ' + (l + (this.f + s) * w.length) + ' ' + y);
                    document.rootElement.setAttribute('preserveAspectRatio', 'xMinYMin slice');
                };
            };
        ]]&gt;
        &lt;/script&gt;
    &lt;/svg&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5222'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5222
  :user_name: silverwire
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/646/
  :language: Bash
  :time: 2008/01/08 07:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">いくつかのUnix系OSでは正常に動作しなかったので、若干修正しました。\r\n\r\n以下のOSで動作を確認。\r\n\r\n
    \ AIX     (5.2, 5.3)\r\n  HP-UX   (11.00, 11.11, 11.23)\r\n  Linux   (2.2, 2.4,
    2.6)\r\n  Solaris (5.5, 5.6, 5.7, 5.9, 5.10)</pre>\n\t"
  :code: |
    #!/bin/sh

    case "`echo -e`" in
      -e) echo_() { echo    "$@"; };;
       *) echo_() { echo -e "$@"; };;
    esac

    case "`echo_ '\r'`" in
      '\r') case "`(print X) 2&gt;/dev/null`" in
              X) echo_() { print "$@"; };;
              *) PATH=/usr/5bin:$PATH; export PATH;;
            esac
            ;;
    esac

    (echo '' | grep -E '' &gt;/dev/null 2&gt;&amp;1) &amp;&amp; grep_() { grep "$@"; } || grep_() { /usr/xpg4/bin/grep "$@"; }

    seq_() { i=$1; while [ $i -le $2 ]; do echo_ "$i \c"; i=`expr $i + 1`; done; }

    is_numeric() { return `echo_ $1 | grep_ -E '^[0-9]+$' &gt;/dev/null 2&gt;&amp;1`; }

    dow() {
      y=$1; m=$2
      [ $2 -le 2 ] &amp;&amp; { y=`expr $y - 1`; m=`expr $m + 12`; }
      expr \( 5 \* $y / 4 - $y / 100 + $y / 400 + \( 26 \* $m + 16 \) / 10 + $3 \) % 7
    }

    eom() {
      case $2 in
        1|3|5|7|8|10|12) echo_ 31;;
               4|6|9|11) echo_ 30;;
                      2) is_leap_year $1 &amp;&amp; echo_ 29 || echo_ 28;;
      esac
    }

    is_leap_year() {
      [ `expr $1 % 400` -eq 0 ] &amp;&amp; return 0
      [ `expr $1 % 100` -eq 0 ] &amp;&amp; return 1
      [ `expr $1 %   4` -eq 0 ] &amp;&amp; return 0
      return 1
    }

    main() {
      [ $# -ne 2 ] &amp;&amp; { echo_ "usage: $0 [month] [year]"; return 1; }

      is_numeric $1 || return 1; [ $1 -lt 1 -o $1 -gt   12 ] &amp;&amp; return 1
      is_numeric $2 || return 1; [ $2 -lt 1 -o $2 -gt 9999 ] &amp;&amp; return 1

      w=`dow $2 $1 1`
      d=`eom $2 $1`

      echo_ "$2/\c"; [ `echo_ "$1\c" | wc -c` -eq 1 ] &amp;&amp; echo_ ' \c'; echo_ "$1"
      echo_ 'Su Mo Tu We Th Fr Sa'
      for i in `seq_ 1 $w`; do echo_ '   \c'; done
      for i in `seq_ 1 $d`; do
        [ `echo_ "$i\c" | wc -c` -eq 1 ] &amp;&amp; echo_ ' \c'
        case "`dow $2 $1 $i`" in
          0) echo_ "\033[31m$i\033[m \c";;
          6) echo_ "\033[34m$i\033[m"   ;;
          *) echo_ "$i \c"              ;;
        esac
      done
      echo_ '\n'

      return 0
    }

    main $*
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5223'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5223
  :user_name: silverwire
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/646/
  :language: 
  :time: 2008/01/08 07:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Safari 3.0.4 (Windows版)で試したところ文字化けが発生したので、フォント指定を以下\r\nのように変更して表示を確認。\r\n\r\n
    \ e.g.\r\n    29c29, 40c40, 53c53\r\n    &lt; o.setAttribute('font-family', 'monospace');\r\n
    \   ---\r\n    &gt; o.setAttribute('font-family', 'MS Gothic');</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5450'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5450
  :user_name: Nemo
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/685/
  :language: PostScript
  :time: 2008/01/24 17:07 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  PostScript 版です。A4一枚に出力します。\r\n年号を変更するときには先頭部の書き換えが必要です。\r\n\n\t"
  :code: "%!PS\n\n/Year 2008 def\n\n% Design Parameters \n/Columns 3 def\n/FontSize
    10 def\n20 600  /Y0 exch def    /X0 exch def    % Top Left Position\n200 150 /VMY
    exch def   /VMX exch def   % Size of 1 Month\n20 13   /VY exch def    /VX exch
    def    % Size of 1 Day\n\n% Color / Font Settings , Tables\n% [ Sunday Monday
    ....  Saturday ]\n/WColorR { [1 0 0 0 0 0 0] } def\n/WColorG { [0 0 0 0 0 0 0]
    } def\n/WColorB { [0 0 0 0 0 0 1] } def\n/WFont { [ /Times-Bold /Times-Roman /Times-Roman
    /Times-Roman /Times-Roman\n     /Times-Roman  /Times-Bold ] } def\n/MonthName
    {[(January) (February) (March) (April) (May) (June)\n (July) (Augusut) (September)
    (October) (November) (December)]} def\n/WeekdayName {[(Sun) (Mon) (Tue) (Wed)
    (Thu) (Fri) (Sat)]} def\n/MDays { [31 28 31 30 31 30 31 31 30 31 30 31] } def\n\n%
    -------------------------------------------------------------------------\n/MonthFont
    {/Times-Roman findfont FontSize 2 mul scalefont setfont 0 setgray} \\\ndef\n/SetFont
    { dup WFont exch get findfont FontSize scalefont setfont\n    dup WColorR exch
    get exch dup WColorG exch get exch\n    WColorB exch get setrgbcolor\n} def\n\n/POS
    { VY mul YM0 exch sub exch VX mul XM0 add exch moveto } def\n/POS2 { WOffset add
    dup 7 mod exch 7 idiv 2 add POS } def\n\n\n/LeapYear {dup 400 mod 0 eq exch dup
    100 mod 0 eq not\n    exch 4 mod 0 eq and or } def\n/MDay { dup MDays exch get
    exch 1 eq Year LeapYear and { 1 add } if } def\n/ZellerFomula {\n    dup 2 le
    { 12 add exch 1 sub exch } if\n    13 mul 8 add 5 idiv exch dup 5 mul 4 idiv exch
    dup 100 idiv exch\n    400 idiv exch sub add add 1 add 7 mod\n} def\n\n/DrawTitle
    {\n    X0 150 add Y0 50 add moveto\n    /Times-Italic findfont 100 scalefont setfont\n
    \   Year 4 string cvs show\n} def\n\n% -------------- Main Program -----------------\nDrawTitle\n0
    1 11 {\n    /Month exch def\n    MonthFont\n    /XM0 X0 Month Columns mod VMX
    mul add def\n    /YM0 Y0 Month Columns idiv VMY mul sub def\n    XM0 YM0 moveto\n
    \   Month 1 add 4 string cvs show\n    MonthName Month get 10 0 rmoveto show\n
    \   0 1 6 {\n    dup SetFont\n    dup 1 POS\n    WeekdayName exch get show\n    }
    for\n    /WOffset Year Month 1 add ZellerFomula def\n    0 1 Month MDay 1 sub
    {\n    dup POS2\n    dup WOffset add 7 mod SetFont\n    1 add 3 string cvs show\n
    \   } for\n    grestore\n\n} for\n\nshowpage\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5452'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5452
  :user_name: Nemo
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/685/
  :language: 
  :time: 2008/01/24 17:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">またも失敗。\r\n72行は不要です。\r\n\r\n月曜始まりにするには\r\n4行目に\r\n/StartMonday
    true def\r\nを追加\r\n33行目変更\r\n/POS2 { WOffset StartMonday { 6 add 7 mod } if\r\n
    \   add dup 7 mod exch 7 idiv 2 add POS } def\r\n63行目変更\r\n        dup StartMonday
    { 6 add 7 mod } if 1 POS \r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5582'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5582
  :user_name: sotarok
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/655/
  :language: C
  :time: 2008/01/30 20:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">C言語復習中です．　\r\n\r\n\r\n% ./a.out 2008\r\nCalendar
    2008 : #=Sun @=Sat\r\nJan | 01 02 03 04 @05 #06 07 08 09 10 11 @12 #13 14 15 16
    17 18 @19 #20 21 22 23 24 25 @26 #27 28 29 30 31 \r\nFeb | 01 @02 #03 04 05 06
    07 08 @09 #10 11 12 13 14 15 @16 #17 18 19 20 21 22 @23 #24 25 26 27 28 29 \r\nMar
    | @01 #02 03 04 05 06 07 @08 #09 10 11 12 13 14 @15 #16 17 18 19 20 21 @22 #23
    24 25 26 27 28 @29 #30 31 \r\nApr | 01 02 03 04 @05 #06 07 08 09 10 11 @12 #13
    14 15 16 17 18 @19 #20 21 22 23 24 25 @26 #27 28 29 30 \r\nMay | 01 02 @03 #04
    05 06 07 08 09 @10 #11 12 13 14 15 16 @17 #18 19 20 21 22 23 @24 #25 26 27 28
    29 30 @31 \r\nJun | #01 02 03 04 05 06 @07 #08 09 10 11 12 13 @14 #15 16 17 18
    19 20 @21 #22 23 24 25 26 27 @28 #29 30 \r\nJul | 01 02 03 04 @05 #06 07 08 09
    10 11 @12 #13 14 15 16 17 18 @19 #20 21 22 23 24 25 @26 #27 28 29 30 31 \r\nAug
    | 01 @02 #03 04 05 06 07 08 @09 #10 11 12 13 14 15 @16 #17 18 19 20 21 22 @23
    #24 25 26 27 28 29 @30 #31 \r\nSep | 01 02 03 04 05 @06 #07 08 09 10 11 12 @13
    #14 15 16 17 18 19 @20 #21 22 23 24 25 26 @27 #28 29 30 \r\nOct | 01 02 03 @04
    #05 06 07 08 09 10 @11 #12 13 14 15 16 17 @18 #19 20 21 22 23 24 @25 #26 27 28
    29 30 31 \r\nNov | @01 #02 03 04 05 06 07 @08 #09 10 11 12 13 14 @15 #16 17 18
    19 20 21 @22 #23 24 25 26 27 28 @29 #30 \r\nDec | 01 02 03 04 05 @06 #07 08 09
    10 11 12 @13 #14 15 16 17 18 19 @20 #21 22 23 24 25 26 @27 #28 29 30 31 </pre>\n\t"
  :code: "#include&lt;stdio.h&gt;\n#include&lt;time.h&gt;\n\nint main(int argc, char
    *argv[])\n{\n    int d = -1;\n    char date[6], date_m[6];\n    time_t date_tmp;\n
    \   struct tm *date_t;\n    int year = atoi(argv[1]);\n    \n    time(&amp;date_tmp);\n
    \   date_t = localtime(&amp;date_tmp);\n    \n    date_t-&gt;tm_year = year -
    1900;\n    date_t-&gt;tm_mon = 0;\n    date_t-&gt;tm_mday = 1;\n\n    printf(\"Calendar
    %d : #=Sun @=Sat\", year);\n\n    while (year == date_t-&gt;tm_year + 1900) {\n
    \       if (d &lt; date_t-&gt;tm_mon) {\n            printf(\"\\n\");\n            d
    = date_t-&gt;tm_mon;\n            strftime(date_m, 6, \"%b\", date_t);\n            printf(\"%s
    | \",  date_m);\n        }\n        \n        if (date_t-&gt;tm_wday == 0) {\n
    \           printf(\"#\");\n        } else if (date_t-&gt;tm_wday == 6) {\n            printf(\"@\");\n
    \       }\n        strftime(date, 6, \"%d\", date_t);\n        printf(\"%s \",
    \ date);\n        date_t-&gt;tm_mday += 1;\n        date_tmp = mktime(date_t);\n
    \       date_t = localtime(&amp;date_tmp);\n    }\n    putchar('\\n');\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5852'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/5852
  :user_name: カノエ
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/376/
  :language: SQL
  :time: 2008/02/26 15:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">365行(or 366行)をだらーっと出力しますが、年間のカレンダーには一応なっています。\r\n\r\n+------------------------+\r\n|
    date                   |\r\n+------------------------+\r\n| 2008/1/1 (Tuesday)
    \    | \r\n| 2008/1/2 (Wednesday)   | \r\n| 2008/1/3 (Thursday)    | \r\n(略)\r\n|
    2008/12/29 (Monday)    | \r\n| 2008/12/30 (Tuesday)   | \r\n| 2008/12/31 (Wednesday)
    | \r\n+------------------------+\r\n</pre>\n\t"
  :code: |
    -- いつものように数字を用意しておく
    DROP TABLE if exists num_chars;
    CREATE TABLE num_chars(id int not null);
    INSERT INTO num_chars VALUES (0), (1), (2), (3), (4), (5), (6), (7), (8), (9);
    DROP TABLE if exists nums;
    CREATE TABLE nums as (
      SELECT n1.id + (n2.id * 10) + (n3.id * 100) as id
        FROM num_chars n1, num_chars n2, num_chars n3);

    -- 2008年を指定
    SET @ycalendar = 2008;
    SELECT date_format(makedate(@ycalendar, id), '%Y/%c/%e (%W)') as date
      FROM nums
     WHERE nums.id between 1 and (365 + day(last_day(concat(@ycalendar, '-2-1'))) - 28);
  :tags:
  - MySQL
  :references:
    :url: 
    :title: 
- :id: '6588'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/6588
  :user_name: genzou
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/793/
  :language: Groovy
  :time: 2008/06/25 11:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Calendar.～\r\nの文字があまりに多すぎるため、\r\nstatic importで回避しています。\r\n\r\nこれって正しい使いかたですか？</pre>\n\t"
  :code: "import java.text.*\nimport static java.util.Calendar.*\n\nn = 2008\n\ndef
    firstDate = Calendar.getInstance()\ndef lastDate = Calendar.getInstance()\n\n(0..11).each{
    m -&gt;\n    firstDate.set(n, m, 1)\n    lastDate.set(n, m+1, 0)\n\n    println
    \"\"\"&lt; ${new SimpleDateFormat(\"yyyy/MM/dd\").format(firstDate.time)} &gt;\"\"\"\n
    \   [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"].each {\n        print it.padLeft(3)\n
    \   }\n    println()\n\n    (firstDate.get(DAY_OF_WEEK)-SUNDAY).times {\n        print
    \"\".padLeft(4)\n    }\n    \n    (firstDate.get(DATE)..lastDate.get(DATE)).each
    { d -&gt;\n        def eachday = Calendar.getInstance()\n        eachday.set(n,
    m, d)\n        print d.toString().padLeft(4)\n        if( eachday.get(DAY_OF_WEEK)
    == SATURDAY ){\n            println()\n        }\n    }\n    println()\n    println()\n}\n"
  :tags:
  - groovy
  :references:
    :url: 
    :title: 
- :id: '6603'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/6603
  :user_name: turugina
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/760/
  :language: XSLT
  :time: 2008/06/28 09:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">出力はシンプルなHTMLのtableで。\r\nしかし、曜日を取得する関数を自作しなきゃいかんとわ...</pre>\n\t"
  :code: |
    &lt;xsl:stylesheet version="2.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:fn="http://www.w3.org/2005/xpath-functions"
      xmlns:my="uri:ja.doukaku.org:my-functions"
      exclude-result-prefixes="xs fn my"
      &gt;

      &lt;xsl:param name="n" as="xs:integer" &gt;2008&lt;/xsl:param&gt;

      &lt;xsl:output method="html" /&gt;

      &lt;xsl:template match="/" &gt;
        &lt;html&gt;
          &lt;head&gt;
            &lt;title&gt;&lt;xsl:value-of select="$n" /&gt;年の年間カレンダー&lt;/title&gt;
          &lt;/head&gt;
          &lt;body&gt;
            &lt;h1&gt;&lt;xsl:value-of select="$n" /&gt;年の年間カレンダー&lt;/h1&gt;
            &lt;xsl:for-each select="1 to 12"&gt;
              &lt;hr /&gt;
              &lt;h2&gt;&lt;xsl:value-of select="." /&gt;月&lt;/h2&gt;
              &lt;xsl:call-template name="mcalender"&gt;
                &lt;xsl:with-param name="year" select="$n" /&gt;
                &lt;xsl:with-param name="month" select="." /&gt;
              &lt;/xsl:call-template&gt;
            &lt;/xsl:for-each&gt;
          &lt;/body&gt;
        &lt;/html&gt;
      &lt;/xsl:template&gt;

      &lt;xsl:template name="mcalender"&gt;
        &lt;xsl:param name="year" as="xs:integer" /&gt;
        &lt;xsl:param name="month" as="xs:integer" /&gt;

        &lt;!-- 今月1日 --&gt;
        &lt;xsl:variable name="first-date" as="xs:date"
          select="xs:date(
            fn:string-join(
              (my:pad($year,4),my:pad($month,2),'01'),
              '-'))" /&gt;
        &lt;!-- 次月1日 --&gt;
        &lt;xsl:variable name="next-first-date" as="xs:date"&gt;
          &lt;xsl:choose&gt;
            &lt;xsl:when test="$month=12"&gt;
              &lt;xsl:value-of
                select="xs:date(
                  fn:string-join(
                    (my:pad($year+1,4),'01','01'),
                    '-'))" /&gt;
            &lt;/xsl:when&gt;
            &lt;xsl:otherwise&gt;
              &lt;xsl:value-of
                select="xs:date(
                  fn:string-join(
                    (my:pad($year,4),my:pad($month+1,2),'01'),
                    '-'))" /&gt;
            &lt;/xsl:otherwise&gt;
          &lt;/xsl:choose&gt;
        &lt;/xsl:variable&gt;
        &lt;!-- 今月の日数を求める --&gt;
        &lt;xsl:variable name="days" as="xs:integer"
          select="fn:days-from-duration($next-first-date - $first-date)" /&gt;

        &lt;!-- 今月1日 の曜日を求める --&gt;
        &lt;xsl:variable name="start-day" as="xs:integer"
          select="my:get-day($first-date)" /&gt;

        &lt;!-- カレンダーの左上の開始日 --&gt;
        &lt;xsl:variable name="rstart" as="xs:integer"
          select="1 - $start-day" /&gt;
        &lt;!-- カレンダーの右下の終了日 --&gt;
        &lt;xsl:variable name="rend" as="xs:integer"&gt;
          &lt;xsl:choose&gt;
            &lt;xsl:when test="(($days - $rstart + 1) mod 7)=0"&gt;
              &lt;xsl:value-of select="$days - $rstart + 1" /&gt;
            &lt;/xsl:when&gt;
            &lt;xsl:otherwise&gt;
              &lt;xsl:value-of select="((($days - $rstart+1) idiv 7)+1)*7" /&gt;
            &lt;/xsl:otherwise&gt;
          &lt;/xsl:choose&gt;
        &lt;/xsl:variable&gt;

        &lt;table border="1"&gt;
          &lt;xsl:call-template name="calender-header" /&gt;
          &lt;xsl:for-each select="1 to $rend idiv 7"&gt;
            &lt;tr&gt;
              &lt;xsl:for-each select="$rstart+((.-1)*7) to $rstart+(.*7)-1"&gt;
                &lt;td&gt;
                  &lt;xsl:choose&gt;
                    &lt;xsl:when test="1 &amp;lt;= . and . &amp;lt;= $days"&gt;
                      &lt;xsl:value-of select="." /&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                      &lt;xsl:text&gt;&amp;#160;&lt;/xsl:text&gt;
                    &lt;/xsl:otherwise&gt;
                  &lt;/xsl:choose&gt;
                &lt;/td&gt;
              &lt;/xsl:for-each&gt;
            &lt;/tr&gt;
          &lt;/xsl:for-each&gt;
        &lt;/table&gt;
      &lt;/xsl:template&gt;

      &lt;xsl:template name="calender-header"&gt;
        &lt;tr&gt;
          &lt;xsl:for-each select="('日','月','火','水','木','金','土')"&gt;
            &lt;th&gt;&lt;xsl:value-of select="." /&gt;&lt;/th&gt;
          &lt;/xsl:for-each&gt;
        &lt;/tr&gt;
      &lt;/xsl:template&gt;

      &lt;!-- 曜日を取得する --&gt;
      &lt;xsl:function name="my:get-day" as="xs:integer"&gt;
        &lt;xsl:param name="date" as="xs:date" /&gt;
        &lt;xsl:variable name="epoch" as="xs:date"
          select="xs:date('1970-01-01')" /&gt;

        &lt;xsl:variable name="day" as="xs:integer"
          select="(fn:days-from-duration($date - $epoch) + 4) mod 7" /&gt;
        &lt;xsl:choose&gt;
          &lt;xsl:when test="$day &amp;lt; 0"&gt;
            &lt;xsl:value-of select="$day + 7" /&gt;
          &lt;/xsl:when&gt;
          &lt;xsl:otherwise&gt;
            &lt;xsl:value-of select="$day" /&gt;
          &lt;/xsl:otherwise&gt;
        &lt;/xsl:choose&gt;
      &lt;/xsl:function&gt;

      &lt;xsl:function name="my:pad" as="xs:string"&gt;
        &lt;xsl:param name="i" as="xs:integer" /&gt;
        &lt;xsl:param name="digit" as="xs:integer" /&gt;

        &lt;xsl:variable name="seq" as="xs:string*"&gt;
          &lt;xsl:for-each
            select="1 to $digit - fn:string-length(xs:string($i))"&gt;
            &lt;xsl:sequence select="'0'" /&gt;
          &lt;/xsl:for-each&gt;
          &lt;xsl:sequence select="xs:string($i)" /&gt;
        &lt;/xsl:variable&gt;

        &lt;xsl:value-of select="fn:string-join($seq, '')" /&gt;
      &lt;/xsl:function&gt;
    &lt;/xsl:stylesheet&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6742'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/6742
  :user_name: leque
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/840/
  :language: Scheme
  :time: 2008/07/16 00:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Gauche で書いてみました。\r\n出力部が意外と長くなってしまった。\r\n\r\n出力例:\r\n
    \   &lt;&lt; 2007/1 &gt;&gt;\r\n Sun  Mon  Tue  Wed  Thu  Fri  Sat\r\n        1
    \   2    3    4    5  [ 6]\r\n &lt; 7&gt;   8    9   10   11   12  [13]\r\n &lt;14&gt;
    \ 15   16   17   18   19  [20]\r\n &lt;21&gt;  22   23   24   25   26  [27]\r\n
    &lt;28&gt;  29   30   31  </pre>\n\t"
  :code: |
    (use srfi-1)
    (use srfi-19)
    (use gauche.collection)
    (use gauche.sequence)

    (define (show-calendar n)
      (define (leap-year? n)
        (or (zero? (modulo n 400))
            (and (zero? (modulo n 4))
                 (not (zero? (modulo n 100))))))
      (define week-days
        (circular-list 0 1 2 3 4 5 6))
      (define (make-calendar)
        (map (lambda (month days)
               (let ((m (date-week-day (make-date 0 0 0 0 1 month n 0))))
                 (append (make-list m #f) (take (drop week-days m) days))))
             (iota 12 1)
             `(31 ,(if (leap-year? n) 29 28) 31 30 31 30 31 31 30 31 30 31)))
      (for-each-with-index
       (lambda (i ws)
         (format #t "   &lt;&lt; ~A/~A &gt;&gt;~%" n (+ i 1))
         (format #t "Sun  Mon  Tue  Wed  Thu  Fri  Sat~%")
         (let loop ((ws ws) (d 1))
           (cond
            ((null? ws)
             (format #t "~%~%"))
            ((not (car ws))
             (format #t "     ")
             (loop (cdr ws) d))
            (else
             (format #t (case (car ws)
                          ((0) "&lt;~2@A&gt; ")
                          ((6) "[~2@A]~%")
                          (else " ~2@A  "))
                     d)
             (loop (cdr ws) (+ d 1))))))
       (make-calendar)))

    (define (main args)
      (show-calendar (string-&gt;number (cadr args))))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7595'
  :parent_id: '119'
  :url: http://ja.doukaku.org/comment/7595
  :user_name: silverwire
  :user_url: /web/20090903220510/http://ja.doukaku.org/user/646/
  :language: Lua
  :time: 2008/09/08 12:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"> Lua始めました。</pre>\n\t"
  :code: "-- 閏年かどうか判定\nL = \nfunction (y)\n    if y % 400 == 0 then return 1 end\n
    \   if y % 100 == 0 then return 0 end\n    if y %   4 == 0 then return 1 end\n
    \   return 0\nend\n\n-- 指定された日の曜日を取得\nW = \nfunction (y, m, d)\n    return tonumber(os.date('%w',
    os.time({ year = y, month = m, day = d })))\nend\n\n(function (v)\n    local d
    = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }\n    local w = { 'Su', 'Mo',
    'Tu', 'We', 'Th', 'Fr', 'Sa' }\n    local m, t, y\n\n    if #v ~= 2 then\n        io.stderr:write('usage:
    ' .. v[0] .. ' [month] [year]\\n')\n        return 1\n    end\n\n    m, y = tonumber(v[1]),
    tonumber(v[2])\n\n    if m == nil or y == nil then\n        io.stderr:write('usage:
    ' .. v[0] .. ' [month] [year]\\n')\n        return 1\n    end\n\n    if m &lt;
    1 or m &gt; 12 then\n        io.stderr:write('cal: illegal month value: use 1-12\\n')\n
    \       return 1\n    end\n    if y &lt; 1 or y &gt; 9999 then\n        io.stderr:write('cal:
    illegal year value: use 1-9999\\n')\n        return 1\n    end\n\n    -- 閏日を補正\n
    \   d[2] = d[2] + L(y)\n\n    t = string.format('%4d/%2d', y, m) .. '\\n'\n     ..
    table.concat(w, ' ') .. '\\n'\n     .. string.rep('   ', W(y, m, 1))\n    for
    i = 1, d[m] do\n        t = t .. string.format('%2d', i)\n        t = W(y, m,
    i) &lt; 6 and t .. ' ' or t .. '\\n'\n    end\n    print(t)\n\n    return 0\nend)(arg)\n"
  :tags: []
  :references:
    :url: 
    :title: 
