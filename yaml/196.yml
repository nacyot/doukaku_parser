---
:id: '196'
:title: LL Golf Hole 2 - 文字列に含まれる単語の最初の文字を大文字にする
:comments:
- :id: '6901'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6901
  :user_name: takano32
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/148/
  :language: Ruby
  :time: 2008/08/02 19:59 GMT
  :vote_count: '10'
  :vote_score: '2'
  :body: "\r\n\t  <p>文字列に含まれる単語について、それぞれの単語の最初の文字を大文字にしてください。</p>\r\n<p>たとえば、\"LL
    future\" と与えられたときは \"LL Future\" と出力する。\"LL day and night\" と与えられたときは \"LL Day
    And Night\" と出力する。</p>\r\n<p>与えられる文字列はリテラルで表記する、標準入力で与えられる、引数で与えられるなどは自由とします。</p>\r\n<p>余力のあるものはこのプログラムを短くしてみたり、短くしてみたり、短くしてください。</p>\r\n<p>※LL
    Future実行委員の高野光弘です。この出題は <a href=\"/web/20100605050833/http://ll.jus.or.jp/2008/\">LL
    Future</a>公式の出題であり、優れたものについては<a href=\"/web/20100605050833/http://ll.jus.or.jp/2008/program/doukaku\">LL
    Golf</a>のセッションでご紹介させていただくかもしれません。ご理解の上、ご投稿ください。また、<a href=\"/web/20100605050833/http://ll.jus.or.jp/2008/ticket\">LL
    Futureのチケットは現在も発売中</a>です。よろしければ、メインイベントの方にもぜひご参加ください。\r\n</p>\r\n\r\n\t"
  :code: "ruby -e \"p 'LL day and night'.scan(/(\\w)(\\w*)/).map{|a|a.shift.upcase
    + a.to_s}.join(' ')\"\r\n"
  :tags:
  - LLGolf
  - llfuture
  :references:
    :url: /web/20100605050833/http://ll.jus.or.jp/2008/program/doukaku
    :title: LL Golf
- :id: '6902'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6902
  :user_name: stog
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/860/
  :language: Python
  :time: 2008/08/02 21:09 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  \n\t"
  :code: |
    print ' '.join([i.capitalize() for i in 'LL day and night'.split()])
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6903'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6903
  :user_name: g000001
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/405/
  :language: Common
  :time: 2008/08/02 21:09 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  全然短くできないですね(^^;\r<br>最初の1文字だけ大文字というのなら標準でいくつか方法があるのですが…。\n\t"
  :code: |
    (format()"~{~A~^ ~}"(mapcar(lambda(x)(string-capitalize x :end 1))(ppcre:split"\\s+""LL day and night")))
    ;=&gt; "LL Day And Night"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6904'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6904
  :user_name: g000001
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/405/
  :language: Common
  :time: 2008/08/02 21:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  短いのは諦めるとしてちょっとひねった方法を思いついたので記念に投稿してみます。\n\t"
  :code: |
    (defun cap (stream string &amp;rest args)
      (princ (string-capitalize string :end 1) stream))

    (format nil "~{~/cap/~^ ~}" (ppcre:split"\\s+" "LL day and night"))
    ;=&gt; "LL Day And Night"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6905'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6905
  :user_name: g000001
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/405/
  :language: 
  :time: 2008/08/02 21:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  あ、この場合、string-upcaseで良かったですね…。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6906'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6906
  :user_name: anekos
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/170/
  :language: Ruby
  :time: 2008/08/02 21:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>文字列は標準入力で与えます。</p>\n<p>お題のコードは、\"hello,       i am a cat\"みたいな文が\"Hello,
    Am Cat\"になってしまうような。</p>\n\n\t"
  :code: |
    ruby -pe'$_.gsub!(/(\w)(\w*)/){$1.upcase+$2}'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6907'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6907
  :user_name: stog
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/860/
  :language: JavaScript
  :time: 2008/08/02 21:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    before = "LL day and night".split(' ');
    after = [];
    while(i = before.shift()) after.push(i.charAt(0).toUpperCase() + i.slice(1));
    alert(after.join(' '));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6908'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6908
  :user_name: 匿名
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/4/
  :language: Java
  :time: 2008/08/02 22:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  普通に正規表現で単語を切り出しています。単語の定義は、「Unicodeの文字カテゴリに属する文字の連続」としています（日本語の正書法の定義とは違います）。大文字は単純に \"Upper Case\" です（\"Title Case\" ではありません）。\r<br><br>サンプルコードの実行結果は以下です。\r<br><br>LL Day And Night.\r<br>日本語abc漢字\r<br>Αβγ\r<br>A=B+C\r<br>Één\n\t"
  :code: "import java.util.regex.*;\n\npublic class Upper {\n    private final static
    Pattern WORD = Pattern.compile(\"(\\\\p{L})(\\\\p{L}*)\");\n\n    public static
    String toUpper1st(String s) {\n        Matcher m = WORD.matcher(s);\n        StringBuffer
    sb = new StringBuffer();\n        while (m.find()) {\n            String rep =
    m.group(1).toUpperCase() + m.group(2);\n            m.appendReplacement(sb, rep);
    \       \n        }\n        m.appendTail(sb);\n        return sb.toString();\n
    \   }\n    \n    public static void main(String[] args) {\n        System.out.println(toUpper1st(\"LL
    day and night.\"));\n        System.out.println(toUpper1st(\"日本語abc漢字\"));\n        System.out.println(toUpper1st(\"αβγ\"));\n
    \       System.out.println(toUpper1st(\"a=b+c\"));\n        System.out.println(toUpper1st(\"één\"));\n
    \   }\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6909'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6909
  :user_name: takano32
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/148/
  :language: 
  :time: 2008/08/02 22:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>うおっ。お恥ずかしい限り・・・\nちょっと直しておきます。orz</p>\n<p>何はともあれ、短いコードありがとうございます！</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6910'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6910
  :user_name: kkobayashi
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2008/08/02 22:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Rは文字列操作が苦手です。</p>\n\n\t"
  :code: |
    capword &lt;- function(str){
      sapply(strsplit(str, " "), function(s)(paste(toupper(substring(s,1,1)), substring(s,2), sep="", collapse=" ")))
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6911'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6911
  :user_name: emasaka
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/852/
  :language: Other
  :time: 2008/08/02 22:19 GMT
  :vote_count: '2'
  :vote_score: '-2'
  :body: "\n\t  <p>改造。</p>\n\n\t"
  :code: |
    ruby -pe'gsub!(/\w+/){$&amp;.capitalize}'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6912'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6912
  :user_name: stog
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/860/
  :language: Other
  :time: 2008/08/02 22:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>RUBY_VERSION\n#=&gt; \"1.8.6\"</p>\n\n\t"
  :code: |
    "LL day and night".split.map{|i| i[0].chr.upcase + i[1..-1] }.join(' ')
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6913'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6913
  :user_name: eban
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/97/
  :language: Ruby
  :time: 2008/08/02 22:24 GMT
  :vote_count: '3'
  :vote_score: '-3'
  :body: "\n\t  <p>文字列は標準入力から</p>\n\n\t"
  :code: |
    ruby -pe'gsub(/\w+/){$&amp;.capitalize}'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6914'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6914
  :user_name: eban
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/97/
  :language: Ruby
  :time: 2008/08/02 22:25 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\n\t  <p>文字列は標準入力から</p>\r\n\n\t"
  :code: "ruby -pe'gsub(/\\b./){$&amp;.upcase}'\r\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6915'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6915
  :user_name: eban
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/97/
  :language: Perl
  :time: 2008/08/02 22:29 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\n\t  <p>しまった。言語を指定し忘れました。Rubyでお願いします。</p>\n<p>それだけじゃなんなのでこれのPerl版。文字列は標準入力から</p>\n\n\t"
  :code: |
    perl -pe's/\b./uc$&amp;/ge'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6916'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6916
  :user_name: stog
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/860/
  :language: Python
  :time: 2008/08/02 22:31 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>#6902 のやつは、\"Ll Day And Night\"になってしまう（\"LL\" -&gt; \"Ll\"）ので、もう一回。</p>\n\n\t"
  :code: |
    print ' '.join([i[0].upper() + i[1:] for i in 'LL day and night'.split()])
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6917'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6917
  :user_name: ranha
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/861/
  :language: Haskell
  :time: 2008/08/03 03:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>無難に書いた。</p>\n\n\t"
  :code: |
    import Data.Char
    main=getLine&gt;&gt;=print.unwords.map(\(a:b)-&gt;toUpper a:b).words
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6918'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6918
  :user_name: pooq
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/08/02 23:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">windows 用のコンソール版の場合です。\r\n空白を単語の区切りとしています。\r\n文字列は標準入力で与えます。\r\n\r\n&gt;echo
    \"LL day and night\" | jconsole ll2.ijs\r\n\"LL Day And Night\"\r\n</pre>\n\t"
  :code: |
    exit wd;(,' '&amp;;)/&lt;&amp;(toupper&amp;{.,}.);._1' ',1!:1[3
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6919'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6919
  :user_name: ranha
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/861/
  :language: Haskell
  :time: 2008/08/02 23:42 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>単純に縮めるだけならば次のようにー。</p>\n\n\t"
  :code: |
    import Data.Char
    main=interact$unwords.map(\(a:b)-&gt;toUpper a:b).words
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6920'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6920
  :user_name: みずしま
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/371/
  :language: Scala
  :time: 2008/08/03 00:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>ScalaのStringは基本的にJavaのと同じだけど、いくつかの便利なメソッドが追加されて(いるようにユーザからは見えて)います。capitalize()はそのようなメソッドの内の一つで、文字列の最初の文字を大文字にします。\r</p>\n<p>\r</p>\n<p>あと、文字列の配列を結合するときに、文字列の区切りを強制的に空白にしてしまうので、タブ区切りだった場合、それに関する情報を失っちゃうのはちょっとビミョーではあります。</p>\n</div>\n\t"
  :code: |
    print(args(0).split("\\s").map(_.capitalize).mkString(" "))
  :tags: []
  :references:
    :url: /web/20100605050833/http://www.scala-lang.org/docu/files/api/scala/runtime/RichString.html
    :title: class RichString in scala.runtime
- :id: '6921'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6921
  :user_name: sna
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/819/
  :language: Scala
  :time: 2008/08/03 00:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">入力は標準入力から。単語区切りはスペース。</pre>\n\t"
  :code: |
    print(readLine split" "map{_ capitalize}mkString" ")
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6922'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6922
  :user_name: みずしま
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/371/
  :language: 
  :time: 2008/08/03 00:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>追記です。標準入力から入力を受け取るとコードが長くなると、入力はコマンドライン引数から受け取るようになってます。あと、元のプログラムは、スクリプトを直接実行するモードで実行するためのものなので、scalac(クラスファイルへコンパイルするコンパイラ)ではなくscalaコマンドを使って、\r</p>\n<p>\r</p>\n<p>scala
    llfuture.scala\r</p>\n<p>\r</p>\n<p>みたいにします。\r</p>\n<p>\r</p>\n<p>scalacでコンパイルしたい場合、-Xscriptオプションを付けて、\r</p>\n<p>\r</p>\n<p>scalac
    -Xscript LLFuture llfuture.scala\r</p>\n<p>\r</p>\n<p>のようにするとうまく行きます。</p>\n</div>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6923'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6923
  :user_name: leque
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/840/
  :language: Scheme
  :time: 2008/08/03 01:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>文頭はすでに大文字になっていることを仮定しています。</p>\n<p>;; 最初 #/\\b\\w/ としてハマった。</p>\n\n\t"
  :code: |
    (use srfi-13)
    (define (main args)
      (print (regexp-replace-all #/\W\w/ (cadr args) (compose string-upcase (cut &lt;&gt; 0)))))
  :tags:
  - gauche
  :references:
    :url: /web/20100605050833/http://practical-scheme.net/gauche/man/gauche-refj_49.html
    :title: 'Gauche ユーザリファレンス: 6.11 正規表現 #regexp-replace-all'
- :id: '6924'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6924
  :user_name: 匿名
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/08/03 01:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>さらに追記というかtypoです。\r</p>\n<p>\r</p>\n<p>誤：標準入力から入力を受け取るとコードが長くなると、\r</p>\n<p>正：標準入力から入力を受け取るとコードが長くなるので、</p>\n</div>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6925'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6925
  :user_name: みずしま
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/371/
  :language: 
  :time: 2008/08/03 01:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>上の訂正は、ログインし忘れたので匿名になってますが、みずしまが書いたものです。ダメダメですね。</p>\n</div>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6926'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6926
  :user_name: syat
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/766/
  :language: JavaScript
  :time: 2008/08/03 06:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  フレームワーク無しだと、ここらで限界？\n\t"
  :code: |
    "LL day and night".replace(/(\w)(\w*)/g,function(a,b,c){return b.toUpperCase()+c;})
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6927'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6927
  :user_name: emasaka
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/852/
  :language: sed
  :time: 2008/08/03 01:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>GNU sedで確認しました。</p>\n\n\t"
  :code: |
    :a
    /\&lt;[a-z].*/{
    s//\n&amp;/
    h
    s/.*\n\(.\).*/\1/
    y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/
    H
    g
    s/\n.\(.*\)\n\(.\)$/\2\1/
    b a
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6928'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6928
  :user_name: U Okumura
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/862/
  :language: Groovy
  :time: 2008/08/03 01:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>リテラルを変換するだけなら{}の中だけで良かったのだけれど…\nStringにメソッドを追加する形にしてみました。</p>\n<p>このコードを実行するとStringにcapitalizeメソッドが追加され、</p>\n<pre
    class=\"doctest-block\">\n&gt;&gt;&gt; \"LL future\".capitalize()\n\"LL Future\"\n</pre>\n<pre
    class=\"doctest-block\">\n&gt;&gt;&gt; \"LL day and night\".capitalize()\n\"LL
    Day And Night\"\n</pre>\n<p>あるいは、</p>\n<pre class=\"doctest-block\">\n&gt;&gt;&gt;
    [\"LL future\", LL day and night].capitalize()\n[\"LL Future\", \"LL Day And Night\"]\n</pre>\n<p>のように動作します。タブとかも大丈夫のはず…</p>\n\n\t"
  :code: |
    String.metaClass.capitalize = {
        return delegate.replaceAll(
                /(¥s)(¥w)/,
                {all, s, w -&gt; s + w.toUpperCase()})
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6929'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6929
  :user_name: pooq
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/606/
  :language: Io
  :time: 2008/08/03 02:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">空白を単語の区切りとしています。\r\n文字列は標準入力で与えます。\r\n</pre>\n\t"
  :code: |
    File standardInput readLine split map(capitalize)join(" ")println
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6930'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6930
  :user_name: U Okumura
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/862/
  :language: Groovy
  :time: 2008/08/03 02:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>行頭が大文字じゃなくても大丈夫な様にしました。</p>\n<p>あとちょこっとだけ短くしてみました。メソッド名、ほんとはcapitalizeWordsとかにすべきなのかなぁ？</p>\n\n\t"
  :code: |
    String.metaClass.capitalize = {delegate.replaceAll(/(^|¥s)(¥w)/, {all, s, w -&gt; s + w.toUpperCase()})}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6931'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6931
  :user_name: syat
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/766/
  :language: C
  :time: 2008/08/03 02:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  VCEE2008でコンパイルできました。\r<br>LL Future\r<br>LL Day And Night\r<br>Hello, I Am A Cat\n\t"
  :code: |
    f(char *s){*s=toupper(*s);while(*++s)if(*(s-1)==' ')*s=toupper(*s);}

    main(){
        char *s1="LL future",*s2="LL day and night",*s3="hello, i am a cat";
        f(s1);f(s2);f(s3);
        printf("%s\n%s\n%s\n",s1,s2,s3);
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6932'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6932
  :user_name: kozima
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/164/
  :language: Common
  :time: 2008/08/03 03:56 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <p>これぐらいが限界かも。CLISP で動作確認しました。</p>\n<p>ただし char&lt; で大文字が小文字より小さいと判定されるかどうかは実装依存なので、言語仕様上は期待した動作をすることは保障されません。</p>\n\n\t"
  :code: |
    (defun cap(s)(map'string(lambda(a b)(if(char&lt; a b)a b))s(string-capitalize s)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6933'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6933
  :user_name: g000001
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/405/
  :language: 
  :time: 2008/08/03 09:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  なるほど！\r<br>空白で区切られた次の文字は大文字になるんですね…。\r<br>自分は、string-capitalizeの仕様を勘違いしてました(^^;\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6934'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6934
  :user_name: sumim
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2008/08/03 04:42 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Squeak Smalltalk で。</p>\n\n\t"
  :code: |
    | in prev |
    in := 'LL day and night'.
    prev := $-.
    ^in collect: [:char | prev := prev isLetter ifTrue: [char] ifFalse: [char asUppercase]]

    "=&gt; 'LL Day And Night' "
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '6935'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6935
  :user_name: kkobayashi
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2008/08/03 05:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>うーん、これで勘弁してください・・・</p>\n\n\t"
  :code: |
    gsub("\\b(.)", "\\U\\1", "LL day and night", perl=TRUE)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6936'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6936
  :user_name: lufia
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/242/
  :language: Other
  :time: 2008/08/03 10:58 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Infernoシェルです。\r\n1行に詰め込みすぎている気がします。\r\n\r\n短くするために、以下の特徴を使っています。\r\n1.
    コマンド引数は空白区切りの配列になる\r\n2. 配列をechoすると空白区切りになる\r\n3. sliceの文字数は、上限を超えてもかまわない\r\n\r\nこのため、空白の数は保持しません。\r\n\r\n%
    sh uc LL day and night\r\n% sh uc hello, i am a cat</pre>\n\t"
  :code: |
    load string

    apply {b=($b ${toupper ${slice 0 1 $1}}^${$slice 1 ${len $1} $1})} $*
    echo $b
  :tags:
  - Inferno
  - sh
  :references:
    :url: 
    :title: 
- :id: '6937'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6937
  :user_name: lufia
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/242/
  :language: Other
  :time: 2008/08/03 06:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  $sliceになってました。$は要らないです。\n\t"
  :code: |
    load string

    apply {b=($b ${toupper ${slice 0 1 $1}}^${slice 1 ${len $1} $1})} $*
    echo $b
  :tags:
  - Inferno
  - sh
  :references:
    :url: 
    :title: 
- :id: '6938'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6938
  :user_name: 匿名
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/4/
  :language: PostScript
  :time: 2008/08/03 06:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>PostScript 不真面目版。スペースが2個続くとエラーで止まります。</p>\n<p>余談ですが、s/与力/余力/ ですね。</p>\n\n\t"
  :code: |
    [(LL future)(LL day and night)]/l{( )search exch 0 2 copy get -33 and put{pop l}if}def{dup l =}forall
    % 出力
    LL Future
    LL Day And Night

    % バイナリーエンコードする場合はこちらをエンコードしたものの方が短い
    [(LL future)(LL day and night)]{dup{( )search exch 0 2 copy get -33 and put not{exit}if pop}loop =}forall
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6939'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6939
  :user_name: 匿名
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/4/
  :language: PostScript
  :time: 2008/08/03 06:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>PostScript でもう少し真面目に。上のも含めて標準出力に出力します。</p>\n\n\t"
  :code: |
    [(LL future)(LL day and night)(echo $home)(hello,  i am a cat.)]/l{( )search exch dup(a)ge 1 index({)lt and{0 2 copy get -33 and put[}if pop{pop l}if}def{dup l =}forall
    % 出力
    LL Future
    LL Day And Night
    Echo $home
    Hello,  I Am A Cat.

    % バイナリーエンコードする場合はこちらの方が短い
    [(LL future)(LL day and night)(echo $home)(hello,  i am a cat.)]{dup{( )search exch dup(a)ge 1 index({)lt and{0 2 copy get -33 and put[}if pop not{exit}if pop}loop =}forall
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6940'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6940
  :user_name: koguro
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/438/
  :language: Scheme
  :time: 2008/08/03 07:02 GMT
  :vote_count: '27'
  :vote_score: '23'
  :body: "\n\t  <p>標準入力で与えた文字列を変換して標準出力に返します。</p>\n<p>実行例:</p>\n<pre class=\"literal-block\">\n%
    gosh capitalize.scm\nLL day and night\nLL Day And Night\n</pre>\n<p>Lisp は Golf
    に向かないのですが、頑張って1文字にしてみました(遠くから見てください)。</p>\n\n\t"
  :code: "           (letrec\n             ((a(#0=\n              lambda(\n               c)(cond\n
    \               #1=((memv\n                 c'(#\\tab\n                  #\\return
    \n                   #\\newline\n                  #\\space))#2=\n                 (#3=write-char
    \n              c)b)(else  #2#a))))\n            (b(#0#(c)(    |cond|#1#\n          ((&lt;=
    97(#4=       char-&gt;ucs\n        c)122)(#3#            (ucs-&gt;char\n      (-(#4#c)32)
    \             ))a)(else\n    #2#a)))))(                   port-fold(\n#0#(|c|p)(p|c|)
    \                )|b|read-char))\n"
  :tags:
  - gauche
  - その発想はなかった
  :references:
    :url: 
    :title: 
- :id: '6941'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6941
  :user_name: takano32
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/148/
  :language: 
  :time: 2008/08/03 07:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ご指摘、ありがとうございまっす。\n修正させていただきました〜。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6943'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6943
  :user_name: turugina
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/760/
  :language: XSLT
  :time: 2008/08/03 08:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">XSLTもGolfには向きませんね。\r\n本当は改行も全部消したかったんですが、\r\n表示がエライことになるので止めました。\r\n入力は↓のコード自身です。</pre>\n\t"
  :code: |
    &lt;x:transform version="2.0"
    xmlns:x="http://www.w3.org/1999/XSL/Transform"
    xmlns:s="http://www.w3.org/2001/XMLSchema"
    xmlns:f="http://www.w3.org/2005/xpath-functions"&gt;
    &lt;x:variable name="ll2008" as="s:string"&gt;LL future&lt;/x:variable&gt;
    &lt;x:variable name="ll2005" as="s:string"&gt;LL day and night&lt;/x:variable&gt;
    &lt;x:output method="text"/&gt;
    &lt;x:template match="/"&gt;
    &lt;x:apply-templates select="/x:transform/x:variable"/&gt;
    &lt;/x:template&gt;
    &lt;x:template match="x:variable"&gt;
    &lt;x:variable name="tokens" as="s:string*"&gt;
    &lt;x:for-each select="f:tokenize(./text(),' ')"&gt;
    &lt;x:sequence select="f:concat(f:upper-case(f:substring(.,1,1)),f:substring(.,2,f:string-length(.)-1))"/&gt;
    &lt;/x:for-each&gt;
    &lt;/x:variable&gt;
    &lt;x:value-of select="f:concat(@name,'=')"/&gt;
    &lt;x:value-of select="string-join($tokens,' ')"/&gt;
    &lt;x:text&gt;&amp;#xA;&lt;/x:text&gt;
    &lt;/x:template&gt;
    &lt;/x:transform&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6945'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6945
  :user_name: matyr
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/343/
  :language: JavaScript
  :time: 2008/08/03 08:58 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  1.8↑\n\t"
  :code: |
    "lL day and night".replace(/\b./g,function($)$.toUpperCase())
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6946'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6946
  :user_name: matyr
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/343/
  :language: Groovy
  :time: 2008/08/03 09:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>stdin → stdout</p>\n\n\t"
  :code: |
    print"$System.in".replaceAll(/\b./){it.toUpperCase()}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6947'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6947
  :user_name: kgbu
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/847/
  :language: Erlang
  :time: 2008/08/03 09:19 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">インタープリタ(erl)のコマンドラインで実行する形式です。\r\n文字列は、string:tokens関数の第１引数として、\r\nダブルクォートでくくって指定しています。\r\n単語の区切りを１文字の空白と仮定しています。\r\nエスケープされた文字などについては考慮していません。\r\n特にgolfを意識したことは自分にはできませんでした。</pre>\n\t"
  :code: |
    string:join(lists:map(fun([H|T])-&gt;[string:to_upper(H)]++T end,string:tokens("LL day and night"," "))," ").
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6948'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6948
  :user_name: matyr
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/343/
  :language: Scheme
  :time: 2008/08/03 10:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">stdin → stdout\r\n;他の言語みたいに#/\\b./でうまくいかないのは何故？</pre>\n\t"
  :code: |
    (use srfi-13)(print(regexp-replace-all #/(\w)(\w*)/(read-line)(rec,quote #`",(string-upcase'1),'2")))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6950'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6950
  :user_name: matyr
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/343/
  :language: Smalltalk
  :time: 2008/08/03 10:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  GST で stdin → stdout。\n\t"
  :code: |
    P:=$ .stdin do:[:c|C:=c.'',{P}~'\w'or:[C:=c asUppercase].P:=C display]
  :tags:
  - GST
  :references:
    :url: 
    :title: 
- :id: '6951'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6951
  :user_name: syat
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/766/
  :language: C
  :time: 2008/08/03 10:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>参考ページに影響を受けてみた。入出力込みで84byte</p>\n\n\t"
  :code: |
    a;main(){char*s=gets(&amp;a);for(;*s;s++)if(&amp;a==s||*(s-1)==' ')*s=toupper(*s);puts(&amp;a);}
  :tags: []
  :references:
    :url: /web/20100605050833/http://googlejapan.blogspot.com/2007/12/google_17.html
    :title: Google のソフトウェアエンジニアとＴシャツ
- :id: '6952'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6952
  :user_name: matyr
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/343/
  :language: Lua
  :time: 2008/08/03 10:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  stdin → stdout\n\t"
  :code: |
    r=io.read():gsub('(%w)(%w+)',function(h,t)return h:upper()..t end)print(r)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6953'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6953
  :user_name: syat
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/766/
  :language: C
  :time: 2008/08/03 11:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ちまちま^^;  81byte</p>\n\n\t"
  :code: |
    a;main(){char*s=gets(&amp;a);for(;*s;s++)putchar(&amp;a==s||*(s-1)==' '?toupper(*s):*s);}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6954'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6954
  :user_name: eban
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/97/
  :language: Perl
  :time: 2008/08/03 16:47 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>そういえばUを使えばeは必要ないですね</p>\n\n\t"
  :code: |
    perl -pe's/\b./\U$&amp;/g'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6955'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6955
  :user_name: eban
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/97/
  :language: sed
  :time: 2008/08/03 16:49 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>GNU sed版</p>\n\n\t"
  :code: |
    sed 's/\b./\U&amp;/g'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6956'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6956
  :user_name: irori
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/865/
  :language: Other
  :time: 2008/08/03 17:15 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <p>Lazy Kで。666byte</p>\n<pre class=\"literal-block\">\n$ echo \"LL
    day and night\" |lazy hole2.lazy\nLL Day And Night\n</pre>\n\n\t"
  :code: |
    s(s`k(sii(s`k`s(s`ks(s`k`si(ss`si`kk)))(s`k`s`kk(s(s`ks(s`k`s`k(ss(s(ss`k(s(
    sii)i))(ss`ki))(s`ksk)(s`k`sik))(s`k`s`kk(s(s`ks(s`kk(sii)))`k(si`k`ki)))))(
    s`k`s(s(si`kk)`k(s`k`sik))(s`k`s`kk(s`k`si(s`kk(s`kk(s(s`ks(s`kk(sii)))`k(s(
    s`ks(s`k`si(s`kk(s`k(s(s`k(s(ss(ss`ss)(ss`ki))s(s`ksk)(s(sii)i(s(s`ksk)i))(s
    `k`sik))(s`kk(s(s(si`k(s`k`sik))(s`kk(s`k(sii(s(s`ks(s`k`s(si`k`kk)(s`k`s`k`
    s(s`ksk)(s(s`ks(s`kk(sii)))`k(si`kI)))))`k`k`ki))(s`k(si(s(s(sii)i)`k(si`kI)
    )(s(s`ksk)i))(s(si`k(s`k`sik))`k`k`ki)))))(s`k(ss(s(ss`ki)(ss(ss(ss`ss(ss`ki
    )))))(s`ksk)(s`k`sik))k))))(s(si`k(s`k`sik))k))(si`kk)))))(s`kk(si`k`ki)))))
    ))))))))(s`k`s(si`k(s(s`ksk)(s(sii)i)(s(s`ksk)i)))k))`k`ki
  :tags:
  - Lazy-K
  :references:
    :url: 
    :title: 
- :id: '6957'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6957
  :user_name: emasaka
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/852/
  :language: Bash
  :time: 2008/08/03 12:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>pure bashで。golfじゃないですね。</p>\n\n\t"
  :code: |
    l=(a b c d e f g h i j k l m n o p q r s t u v w x y z)
    u=(A B C D E F G H I J K L M N O P Q R S T U V W X Y Z)
    while read s;do
      set $s
      for w;do
        c=${w:0:1}
        for ((i=0;i&lt;26;i++));do
          if [ $c = ${l[$i]} ];then c=${u[$i]};break;fi
        done
        echo -n "$c${w:1} "
      done
      echo
    done
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6959'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6959
  :user_name: あにす
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2008/08/03 20:45 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  単語と単語の間には空白があるって前提でいいのでしょうか。\n\t"
  :code: |
    using System;

    class Program {
        static void Main(string[] args) {
            Console.WriteLine(ToUpper1st1(args[0]));
            Console.WriteLine(ToUpper1st2(args[0]));
            Console.ReadLine();
        }

        //こっちの方が短いけど、' 'が2文字続いたときにstr.Substring(1)が通らない
        static string ToUpper1st1(string value) {
            string r = "";
            foreach(string str in value.Split(new char[] { ' ' })) {
                r += str[0].ToString().ToUpper() + str.Substring(1) + " ";
            }
            return r;
        }

        //こっちはだいぢょぶ。でも、3項演算子って読みにくいですよね。
        static string ToUpper1st2(string value) {
            string r = "";
            for(int i = 0; i &lt; value.Length; i++) {
                r += (i != 0) &amp;&amp; (value[i - 1] != ' ') ? value.Substring(i, 1) : value.Substring(i, 1).ToUpper();
            }
            return r;
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6960'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6960
  :user_name: leque
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/840/
  :language: 
  :time: 2008/08/03 21:52 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>&gt;\n;他の言語みたいに#/\\b./でうまくいかないのは何故？</p>\n<p>マニュアルにもあるのですが、 Gauche
    の regexp-replace-all は「文字列でマッチした部分の後ろの部分に ついて再帰的に自分自身を適用」するからです。 ^ の場合のときのことは覚えていたんですが
    \\b でも問題になるんですねえ。</p>\n\n\t"
  :code: ''
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '6961'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6961
  :user_name: mattsan
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/833/
  :language: C
  :time: 2008/08/03 23:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>LLでないですし、ぜんぜん短くありませんし、多バイト文字のこと考えられてませんが、例示ということで。</p>\n<p>標準入力から入力し、標準出力へ出力します。</p>\n\n\t"
  :code: |
    #include &lt;cctype&gt;
    #include &lt;string&gt;
    #include &lt;iostream&gt;
    #include &lt;iterator&gt;
    #include &lt;algorithm&gt;

    std::string capitalize(const std::string&amp; s)
    {
        std::string result(s);
        if(result.size() &gt; 0)
        {
            result[0] = std::toupper(result[0]);
        }
        return result;
    }

    int main(int, char* [])
    {
        std::istream_iterator&lt;std::string&gt; srcBegin(std::cin);
        std::istream_iterator&lt;std::string&gt; srcEnd;
        std::ostream_iterator&lt;std::string&gt; dst(std::cout, " ");
        std::transform(srcBegin, srcEnd, dst, capitalize);

        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6962'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6962
  :user_name: だいら
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/468/
  :language: PHP
  :time: 2008/08/03 19:31 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  \n\t"
  :code: |
    &lt;?=ucwords(fgets(STDIN));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6963'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6963
  :user_name: sumim
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2008/08/03 22:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Squeak Smalltalk で、組み込みのエディタ（a ParagraphEditor）に委譲してみる～の巻。</p>\n<p>ゴルフに参加する（短くする）気ゼロで済みません汗。</p>\n\n\t"
  :code: |
    | in editor |
    in := 'this is a pen'.
    editor := ParagraphEditor newParagraph: in asParagraph.
    editor selectAll; makeCapitalized: nil.
    ^editor text asString   "=&gt; 'This Is A Pen' "
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '6964'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6964
  :user_name: だいら
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/468/
  :language: C
  :time: 2008/08/03 23:19 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>Cygwin gcc3.4.4で確認</p>\n\n\t"
  :code: |
    main(a,b){for(;(b=getchar())&gt;0;)a=putchar(b&gt;96&amp;a&lt;33?b-32:b);}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6966'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6966
  :user_name: nemo_kaz
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/837/
  :language: Groovy
  :time: 2008/08/04 00:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  http://ja.doukaku.org/comment/6946/ の引数版\r<br><br>$System.inの挙動がよく分からないのでargsにしました。\r<br>引数で渡す文字列は \"\"付きの\"LL day and night\" のこと。\r<br><br>実行結果\r<br>------------------\r<br>LL Day And Night\r<br><br><br>"
  :code: |
    printf args[0].replaceAll(/\b./){it.toUpperCase()}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6967'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6967
  :user_name: minke
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/28/
  :language: Python
  :time: 2008/08/04 01:39 GMT
  :vote_count: '2'
  :vote_score: '-2'
  :body: "\n\t  \n\t"
  :code: |
    print(lambda s:min(s,s.title()))(raw_input())
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6968'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6968
  :user_name: minke
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/28/
  :language: Python
  :time: 2008/08/04 07:04 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>まちがって別のコード貼ってしまいました…\nstr#title()便利だけど\"LL\"-&gt;\"Ll\"問題があります。</p>\n\n\t"
  :code: |
    s=raw_input();print''.join(map(min,zip(s,s.title())))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6969'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6969
  :user_name: pooq
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/606/
  :language: R
  :time: 2008/08/04 08:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">正規表現を使ったものには全然かないませんが。\r\n空白を単語の区切りとしています。\r\n文字列は標準入力で与えます。\r\n</pre>\n\t"
  :code: |
    a=strsplit(readLines("stdin"),"")[[1]]
    i=c(T,a==" ")
    a=c(a,"")
    a[i]=toupper(a[i])
    cat(a,"\n",sep="")
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6970'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6970
  :user_name: 匿名
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/4/
  :language: Erlang
  :time: 2008/08/04 08:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Erlang 版を縮めてみました。</p>\n\n\t"
  :code: |
    S=string,S:join([[S:to_upper(H)]++T||[H|T]&lt;-S:tokens("LL day and night"," ")]," ").
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6971'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6971
  :user_name: 匿名
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/4/
  :language: Erlang
  :time: 2008/08/04 03:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Erlang 版を 1 文字削り損ねてました。</p>\n\n\t"
  :code: |
    S=string,S:join([[S:to_upper(H)|T]||[H|T]&lt;-S:tokens("LL day and night"," ")]," ").
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6972'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6972
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/304/
  :language: Haskell
  :time: 2008/08/04 04:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">アルファベットか数字の一続きをワードとしました。</pre>\n\t"
  :code: |
    import Data.Char
    main=interact(\z-&gt;zipWith f(' ':z)z)
    f x|isAlphaNum x=id|True=toUpper
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6973'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6973
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/304/
  :language: 
  :time: 2008/08/04 04:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">#6972 を 18:09 頃に投稿したのですが\r\nタイムスタンプが 13:09
    になりました。\r\n５時間ずれてる？</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6974'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6974
  :user_name: kh
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/654/
  :language: D
  :time: 2008/08/04 04:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    private import std.string, std.regexp;

    string totitle(in string str) {
        return str.sub(r"\b[a-z]", (RegExp m){return m[0].toupper();}, "g");
    }

    unittest {
        assert("LL future".totitle() == "LL Future");
        assert("LL day and night".totitle() == "LL Day And Night");
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6975'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6975
  :user_name: pooq
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/08/04 06:28 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">空白が2個以上続く場合におかしくなるのを\r\n直していたら短くなった。</pre>\n\t"
  :code: |
    exit wd}:;&lt;&amp;(toupper&amp;{.,}.);.2,&amp;' '1!:1[3
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6976'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6976
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/304/
  :language: Ruby
  :time: 2008/08/04 06:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">#6972 の ruby版。</pre>\n\t"
  :code: |
    z=gets.split //
    puts(z.zip([' ']+z).map{|x,y|y=~/\w/?x:x.upcase}.join)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6977'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6977
  :user_name: pooq
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/606/
  :language: 
  :time: 2008/08/04 06:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">なんかおかしいですよね。いま(20：30)投稿したら(13：28)になってしまいました。\r\nRSSの方では、未来の時間が表示されるものがあるし。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6978'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6978
  :user_name: notogawa
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/867/
  :language: Haskell
  :time: 2008/08/04 07:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Data.Char無しで69打．\n\t"
  :code: |
    main=interact$unwords.map f.words
    f(a:b)=['@'..]!!mod(fromEnum a)32:b
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6979'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6979
  :user_name: syat
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/766/
  :language: C
  :time: 2008/08/04 08:11 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  だんだん凶悪に…55byte\n\t"
  :code: |
    b;main(a){b=getchar();main(putchar(b&gt;96&amp;a&lt;33?b-32:b));}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6981'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6981
  :user_name: にしお
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2008/08/04 09:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>えっと、24時に投稿したものが19時と表示されるということは5時間遅く出てますね。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6982'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6982
  :user_name: だいら
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/468/
  :language: 
  :time: 2008/08/04 19:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">処理が終わらないですね。\r\ngolf的にはタイムアウト扱いになるのでは？</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6987'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6987
  :user_name: あにす
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2008/08/05 07:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  がんばってみました。\n\t"
  :code: |
    using System;using System.Linq;class d{static void Main(string[]a){int c=0;a[0].ToCharArray().ToList&lt;char&gt;().ForEach(b=&gt;{if(c!=0&amp;&amp;a[0][c-1]!=' ')Console.Write(b);else Console.Write(b.ToString().ToUpper());c++;});}}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6988'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6988
  :user_name: あにす
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2008/08/05 07:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  でも、こっちの方が短かった。\n\t"
  :code: |
    using System;class P{static void Main(string[]a){for(int i=0;i&lt;a[0].Length;i++){if(i!=0&amp;&amp;a[0][i-1]!=' ')Console.Write(a[0][i]);else Console.Write(a[0][i].ToString().ToUpper());}}}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6989'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6989
  :user_name: syat
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/766/
  :language: C
  :time: 2008/08/05 09:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  スタックオーバーフローで止まるのはダメ？\r<br>（うちのパソコンだと5万回くらいで終了。ただしゴミが出まくる）\r<br><br>putcharとgetcharのつづりをこれ以上短くできないのが痛いです。\r<br>やけくそで外道版も書いてみました。\n\t"
  :code: |
    ●止まらない問題修正版(56byte)
    b;main(a){b=getchar();~b&amp;&amp;main(putchar(b-a&gt;64?b-32:b));}

    ●外道版(45byte)
    main(){system("perl -pe\"s/\\b./\\U$&amp;/g\"");}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6990'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6990
  :user_name: syat
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/766/
  :language: diff
  :time: 2008/08/05 09:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>お題の文字列すら変換できてなかった。失敗失敗。</p>\n\n\t"
  :code: |
    &lt;●止まらない問題修正版(56byte)
    &lt; b;main(a){b=getchar();~b&amp;&amp;main(putchar(b-a&gt;64?b-32:b));}
    ---
    &gt;●止まらない問題修正版(59byte)
    &gt; b;main(a){b=getchar();~b&amp;&amp;main(putchar(b&gt;96&amp;a&lt;33?b-32:b));}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6991'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6991
  :user_name: turugina
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/760/
  :language: C
  :time: 2008/08/05 10:07 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">外道版はUnix系なら後2byte短くなるんじゃないかと思ってみたり</pre>\n\t"
  :code: |
    /*●外道版(43byte)*/
    main(){system("perl -pe's/\\b./\\U$&amp;/g'");}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6993'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6993
  :user_name: minke
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/28/
  :language: Python
  :time: 2008/08/06 03:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>zipいらなかったですね。</p>\n\n\t"
  :code: |
    s=raw_input();print''.join(map(min,s,s.title()))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6995'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6995
  :user_name: leque
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/840/
  :language: Emacs
  :time: 2008/08/06 04:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>バッファに文字列を書いた状態で。</p>\n\n\t"
  :code: |
    (mark-whole-buffer)(upcase-initials-region)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6996'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6996
  :user_name: SiroKuro
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/540/
  :language: Other
  :time: 2008/08/06 05:13 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  全く短くする気の無い俺が来ましたよ。とりあえず構文解析です。\n\t"
  :code: |
    options {
        JDK_VERSION = "1.5";
        STATIC = false;
    }
    PARSER_BEGIN(LLGolfHole2)
    public class LLGolfHole2 {
        public static void main(String a[])throws Exception {
            new LLGolfHole2(System.in).parse();
        }
    }
    PARSER_END(LLGolfHole2)

    TOKEN : { &lt;SPACE:([" ","\r","\t","\n"])*&gt; | &lt;CHAR:~[]&gt; }

    void parse():{}{
        (word() | space())* &lt;EOF&gt;
    }
    void word():{ Token c; }{
        c = &lt;CHAR&gt; { System.out.print(c.image.toUpperCase()); }
        (LOOKAHEAD(1) c = &lt;CHAR&gt; { System.out.print(c.image); })*
    }
    void space():{ Token s; }{
        s = &lt;SPACE&gt; { System.out.print(s.image); }
    }
  :tags:
  - JavaCC
  :references:
    :url: 
    :title: 
- :id: '6999'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/6999
  :user_name: iakio
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/77/
  :language: SQL
  :time: 2008/08/06 09:49 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <p>PostgreSQL 8.3以降です</p>\n\n\t"
  :code: "SELECT array_to_string(ARRAY(\n  SELECT upper(substr(s, 1, 1)) || substr(s,
    2) \n    FROM (SELECT regexp_split_to_table('LL day and night', E'\\\\s')) r(s)),
    ' ');\n"
  :tags:
  - PostgreSQL
  :references:
    :url: 
    :title: 
- :id: '7034'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7034
  :user_name: tetuinu
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/839/
  :language: C
  :time: 2008/08/07 03:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    using System;

    namespace ConsoleApplication
    {
        class Class
        {
            [STAThread]
            static void Main(string[] args)
            {
                string aaa = "LL day and night";

                string[] st = aaa.Split(' ');
                for(int i = 0; i &lt; st.Length; i++)
                {
                    Console.Write(char.ToUpper(st[i][0]) + st[i].Substring(1));
                    Console.Write(" ");
                }
                Console.Write("\n");
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7087'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7087
  :user_name: 匿名
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/4/
  :language: Emacs
  :time: 2008/08/10 03:17 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>コマンドラインから</p>\n\n\t"
  :code: |
    emacs -Q --batch --eval '(print(upcase-initials"LL day and night"))'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7256'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7256
  :user_name: まさぽん
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/711/
  :language: Arc
  :time: 2008/08/20 02:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">戦略はいたってシンプルで、\r\n・文字列を単語毎に分ける\r\n・単語の頭を大文字にする\r\n・単語をつなげる\r\nというかんじです。</pre>\n\t"
  :code: |
    (def c(x)(prn:apply +(intersperse" "(map(fn(y)(=(y 0)(upcase:y 0))y)(tokens x)))))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7263'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7263
  :user_name: yugui
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/55/
  :language: Ruby
  :time: 2008/08/20 02:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>gorubyはKernel.#gsubがないのであまり短くならない。</p>\n\n\t"
  :code: |
    goruby -pe'$_.gsub!(/\b./){$&amp;.up}'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7270'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7270
  :user_name: silverwire
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/646/
  :language: Batchfile
  :time: 2008/08/20 08:14 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">うん、埒外なんだ。(わかっていたけどね... )\r\n\r\n  e.g.\r\n
    \   C:&gt;capitalize \"HL day after day\"\r\n    HL Day After Day</pre>\n\t"
  :code: |
    :: capitalize.bat
    @echo off
      setlocal enabledelayedexpansion
        set c=
        set t=
        set w=

        if "%~1" equ "" (echo %~n0 [STRING] &amp; exit /b 1)

        for %%w in (%~1) do (
          set w=%%w
          call :upper !w:~0,1! c
          set t=!t! !c!!w:~1!
        )
      endlocal &amp; echo %t:~1%
    goto :EOF

    :upper
      setlocal
        set t=%~1

        set t=%t:a=A%
        set t=%t:b=B%
        set t=%t:c=C%
        set t=%t:d=D%
        set t=%t:e=E%
        set t=%t:f=F%
        set t=%t:g=G%
        set t=%t:h=H%
        set t=%t:i=I%
        set t=%t:j=J%
        set t=%t:k=K%
        set t=%t:l=L%
        set t=%t:m=M%
        set t=%t:n=N%
        set t=%t:o=O%
        set t=%t:p=P%
        set t=%t:q=Q%
        set t=%t:r=R%
        set t=%t:s=S%
        set t=%t:t=T%
        set t=%t:u=U%
        set t=%t:v=V%
        set t=%t:w=W%
        set t=%t:x=X%
        set t=%t:y=Y%
        set t=%t:z=Z%

      endlocal &amp; set %2=%t%
    goto :EOF
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7271'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7271
  :user_name: shinh
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/587/
  :language: Ruby
  :time: 2008/08/20 13:45 GMT
  :vote_count: '8'
  :vote_score: '6'
  :body: "\n\t  <p>Ruby1.9用。Perlでも動くんではないかと思われます。</p>\n<p><a class=\"reference\" href=\"/web/20100605050833/http://d.hatena.ne.jp/ku-ma-me/20080626/p1\">http://d.hatena.ne.jp/ku-ma-me/20080626/p1</a></p>\n<p><a
    class=\"reference\" href=\"/web/20100605050833/http://d.hatena.ne.jp/shinichiro_h/20061107#1162835826\">http://d.hatena.ne.jp/shinichiro_h/20061107#1162835826</a></p>\n\n\t"
  :code: |
    $/=' ';%#;$/=~('(?{'.(',  =$  )'^'_@|_
    @||').'$&amp;`,'.('/-).+`&amp;/-'^'__@@_@@@_').'&lt;&gt;})');"#;(___=-&gt;(_,*__){$.=/./=~_
    $&gt;&lt;&lt;([*?`...$&amp;][$.]&amp;&amp;[*$&amp;...?{][$.]?[*?@..$&amp;][~(/@./=~[*$/..?@]*''+_)]+$':_)
    __[$.]&amp;&amp;___[*__]})[*[*$&lt;]]#"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7286'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7286
  :user_name: ozy4dm
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/889/
  :language: C
  :time: 2008/08/20 23:50 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  54B\n\t"
  :code: |
    n;main(o){n=getchar();~n&amp;&amp;main(putchar(o&lt;33?n&amp;95:n));}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7296'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7296
  :user_name: ksk
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/891/
  :language: Ruby
  :time: 2008/08/22 13:42 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>1.9でも1.8.6でも動かないと思いますが，\n1.8.7ならこんな感じでしょうか？</p>\n\n\t"
  :code: |
    #!ruby -p
    gsub /\b./,&amp;:upcase
  :tags:
  - Ruby
  :references:
    :url: 
    :title: 
- :id: '7297'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7297
  :user_name: ksk
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/891/
  :language: Other
  :time: 2008/08/22 13:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>先ほどshebang版も投稿しましたが，\n1.8.7ならこっちの方が短いですね．</p>\n\n\t"
  :code: |
    ruby -pe'gsub /\b./,&amp;:upcase'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7300'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7300
  :user_name: matyr
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/343/
  :language: Ruby
  :time: 2008/08/22 20:58 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  なるほど。\n\t"
  :code: |
    s$&lt;.re.gs /\b./,&amp;:up
  :tags:
  - goruby
  :references:
    :url: 
    :title: 
- :id: '7304'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7304
  :user_name: まさぽん
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/711/
  :language: Arc
  :time: 2008/08/23 09:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  もうちょっと頑張ってみました。\r<br>実行例:\r<br>arc&gt; (c \"LL day and night\")\r<br>LL Day And Night(\"LL\" \"Day\" \"And\" \"Night\")\r<br><br>表示の「(\"LL\" 〜」以降は prall(出力関数)の返り値なので気にしないでください。\n\t"
  :code: |
    (def c(x)(prall(map[do(=(_ 0)(upcase:_ 0))_](tokens x))"" " "))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7305'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7305
  :user_name: susu
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/218/
  :language: OCaml
  :time: 2008/08/23 06:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>標準ライブラリ内でがんばる。</p>\n\n\t"
  :code: "(fun s-&gt;String.iter(fun c-&gt;try let rec l p=s.[p]&lt;-Char.uppercase
    s.[p];\nl(String.index_from s p c+1)in l 0with _-&gt;())\" \\t\\n\\r\\012\\011\";s)\n\"LL
    day and night\";;\n\n(fun s-&gt;for i=0to 5do try let rec l p=s.[p]&lt;-Char.uppercase
    s.[p];\nl(String.index_from s p\" \\t\\n\\r\\012\\011\".[i]+1)in l 0with _-&gt;()done;s)\n\"LL
    future\";;\n\n#load \"str.cma\";;\nopen Str;;\nglobal_substitute(regexp\"[A-Za-z0-9][A-Za-z0-9]*\")
    \n(fun s-&gt;String.capitalize(matched_string s))\n\"LL day and night\";;\n\n#load
    \"str.cma\";;\n(fun s-&gt;String.concat\" \"(List.map String.capitalize\n(Str.split
    (Str.regexp\"[ \\t\\n\\r\\012\\011]\")s)))\n\"LL future\";;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7443'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7443
  :user_name: tell
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/228/
  :language: Ruby
  :time: 2008/08/28 00:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Rubyが既に8件ありますが，久し振りに投稿．\r\n\r\n単語間にタブが…とか細かいことは考えない．\r\n\r\n正規表現とか，Rubyの構文とかを見直せばもっと短くなるんじゃないか？\r\n</pre>\n\t"
  :code: |
    puts gets.gsub(/(^.| .)/){$1.upcase}

    # $ echo 'LL day and night'|ruby this_answer.rb
    #=&gt; LL Day And Night
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7449'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7449
  :user_name: keisuken
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/897/
  :language: Scala
  :time: 2008/08/28 03:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>とりあえずオーソドックスにやってみます。\nscala h2.scala \"LL day and night\" で実行</p>\n\n\t"
  :code: |
    for(t&lt;-"\\w+\\s*".r.findAllIn(args(0))) print(""+t(0).toUpperCase + t.substring(
    1))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7450'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7450
  :user_name: keisuken
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/897/
  :language: Scala
  :time: 2008/08/28 03:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>短くなってませんが、値の束縛を使って、もうちょっとスマートに書いてみました。\nscala h22.scala \"LL day
    and night\" で実行</p>\n\n\t"
  :code: |
    val r="(\\w)(\\w*\\s*)".r;for(r(a,b)&lt;-r.findAllIn(args(0)))print(a.toUpperCase+b)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7452'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7452
  :user_name: keisuken
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/897/
  :language: Scala
  :time: 2008/08/28 08:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>短い解答はもうあるのでRegexにこだわって。capitalizeあるのか。というわけでcapitalizeバージョン。</p>\n\n\t"
  :code: |
    for(a&lt;-"\\w+\\s*".r.findAllIn(args(0)))print(a.capitalize)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7485'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7485
  :user_name: uenoB
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/903/
  :language: Other
  :time: 2008/08/29 05:41 GMT
  :vote_count: '4'
  :vote_score: '2'
  :body: "\n\t  <div class=\"section\">\n<p>せっかくGrassをLLで紹介させて頂ける機会を頂いたので、ひとつくらいはお題を解いてサンプルコードを投下しておこうと思いますｗ\r</p>\n<p>文字列は標準入力から読み込んで、半角スペースのみ単語区切り文字として認識します。ASCIIコード前提。詳細はコード中のコメントをご覧下さい。\r</p>\n<p>ベタ書きでチューニングしていないので、もっと短くできるはず。たぶん。</p>\n</div>\n\t"
  :code: |
    １ｗｗＷＷｗｖ
    足し算ｗｗｗｗＷＷＷｗｗＷｗｗＷＷＷＷＷＷｗｗｗｗＷｗｗｖ
    かけ算ｗｗｗＷＷＷｗＷＷＷｗｖ
    定数とかＷＷｗｗｗ２Ｗｗｗｗｗ３ＷＷｗ４ＷＷｗｗ９ＷＷＷｗｗ
    １３ＷＷＷＷＷＷＷｗｗＷｗｗ２６ＷＷＷＷＷＷＷＷＷｗＷｗｗ
    １６９ＷＷＷＷＷＷＷＷｗｗｗ空白Ｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗ
    ｗＷｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗ１４ＷＷＷＷＷＷＷＷＷＷ
    ＷＷｗｗｗｗｗｗ１６ＷＷＷＷＷＷＷＷＷＷＷＷｗｗｗｗｗｗｗｗ
    ｗｗ３２ＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷｗＷｗｗ２２４ＷＷ
    ＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷｗｗｗｗＷｗｗｗｗ３３ＷＷＷ
    ＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷｗｗｗＡＷｗｗｗｗｗｗｗｗｗ
    ｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗＷｗｗｗｗｗｗｗｗｗｖ
    偽ｗｗｖ
    ３つ目取り出しｗｗｗｖ
    三つ組みｗｗｗｗＷｗｗｗｗＷｗｗｗｗＷｗｗｗｗｖ
    大文字かどうか判定するループの中身ｗｗｗＷＷＷＷＷＷＷＷ
    ＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷｗｗＷ
    ＷＷｗｗｗｗＷＷＷｗｗｗＷｗｗＷＷＷＷＷＷＷＷｗｗｗｗｗｗｗ
    ＷｗｗｗｗｗＷｗｗｗｖ
    ループの中身その２ｗＷｗｗｖ
    大文字かどうか判定するぜｗＷＷＷＷｗＷｗｗｗｗｗｗｗｗＷｗｗ
    ｗｗｗｗｗｗＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷ
    ｗｗｗｗｗＷｗｗＷｗｗｗｗｗｗｗｗｗｗｖ
    語の中にいるときｗｗＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷ
    ＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷｗＷＷＷｗｗｗｖ
    語の先頭にいるときｗＷＷＷＷＷＷＷＷＷＷＷＷｗｗｗｗｗｗｗｗ
    ｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗＷｗｗＷＷＷＷＷ
    ｗＷｗｗＷｗｗｗｗｗＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷ
    ＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷｗＷＷＷＷＷＷＷ
    Ｗｗｗｗｗｗｗｗｗｖ
    ＥＯＦってのはどんな文字を受け取っても真を返す関数だっぜｗｖ
    ｗｗｗＷＷＷＷｗｗｖ
    空白文字のときｗｗｗＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷ
    ＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷｗＷＷＷＷｗｗｗ
    ｗｗｗｗｖ
    空白文字じゃないときｗｗｗＷＷｗＷＷＷＷｗｖ
    空白文字かＥＯＦのときｗｗｗＷｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗ
    ｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗＷｗｗｗｗｗｗｗＷｗ
    ｗｗｗｗｗｗＷｗｗｗｗｗｗＷｗｗｗｗｗｗＷｗｗｗｗｗｗｖ
    メインループｗｗ一文字読み込んでＷＷＷＷＷＷＷＷＷＷＷＷ
    ＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷＷ
    ＷＷＷＷｗｗｗｗｗｗＷＷＷｗｗｗ空白文字かどうか判定ＷＷｗｗ
    ｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗＷｗｗｗｗｗｗＷｗｗ
    ｗｗｗｗｗｗＷｗｗｗｗＷｗｗｗｗｗｗｗＷｗｗｗｗｗｗｗｖ
    メインｗＷＷｗｗＷｗｗｗｗｗｗｗｗｗ
  :tags:
  - Grass
  :references:
    :url: 
    :title: 
- :id: '7496'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7496
  :user_name: ujihisa
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/906/
  :language: Haskell
  :time: 2008/08/30 01:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>よみやすいHaskell</p>\n\n\t"
  :code: |
    import Char
    f :: String -&gt; String
    f cs = zipWith g (' ':cs) cs
      where
        g :: Char -&gt; Char -&gt; Char
        g ' ' b = toUpper b
        g _ b = b

    main = print $ f "LL day and night"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7497'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7497
  :user_name: ujihisa
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/906/
  :language: Haskell
  :time: 2008/08/30 01:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>もっとよみやすいHaskell</p>\n\n\t"
  :code: "import Char\nf cs=zipWith g(' ':cs)cs where g ' ' b=toUpper b;g _ b=b    \nmain=print$f\"LL
    day and night\"\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7562'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7562
  :user_name: ckbx
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/893/
  :language: C
  :time: 2008/09/04 08:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>記号入りでも文字化けしないようにしてみた。135bytes.</p>\n\n\t"
  :code: |
    #include&lt;stdio.h&gt;
    main(int c,char**v){char*s=*++v;do*s-=((!(s-*v&amp;&amp;*(s-1)-32))*((*s-97|122-*s)&gt;0))&lt;&lt;5;while(*++s);puts(*v);return 0;}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7569'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7569
  :user_name: 匿名
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/4/
  :language: Other
  :time: 2008/09/05 06:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Lazy K で 630 byte。\r\n\r\nLazy K のソースに付属している
    Lazy K コンパイラを使って以下のソースを Lazy-K に\r\n変形し、適当に整形しました。\r\n\r\n(load \"./lazier.scm\")\r\n(load
    \"./prelude.scm\")\r\n(load \"./prelude-numbers.scm\")\r\n\r\n(lazy-def '(pred
    n)\r\n          '(lambda(f x)\r\n             (n (lambda(a b)(b (a f))) (k x)
    i)))\r\n(lazy-def '(sub32 x) '(32 pred x))\r\n\r\n(lazy-def '(islower x)\r\n          '(car
    (x cdr (97 (cons #f) (26 (cons #t) (list-of #f) )))))\r\n\r\n(lazy-def '(title
    f x)\r\n          '(cons (car x)\r\n                 (f\r\n                   (and
    (= 32 (car x)) (islower (car (cdr x)))\r\n                        (cons (sub32
    (car (cdr x))) (cdr(cdr x)))\r\n                        (cdr x)))))\r\n(print-as-unlambda
    (laze '(Y title)))\r\n</pre>\n\t"
  :code: |
    sii(s`k(s`k`s(s`ks(s`k`si(ss`si`kk)))(s`k`s`kk(s(s`ksk)`k(s(s(s(s(s`k(si`kk)
    (s(s(si`kk)`k(si`k`ki))`k(s(s`ksk)i(s(sii)i(s(s`ksk)i)(s`k`s(si`k`ki)k))(s(s
    i`kk)`k(sii(s`k(s`k`s(si`k`ki)k)(sii)))))))(s(s(s(s(si`k`ki)`kk)`k(si`k`ki))
    `k(s(sii)i(s(s`ksk)i)`s(s`ksk)(s(sii)`s(s`ksk)(s(s`ksk)i))(s`k`s(si`k`ki)k)(
    s(s`ksk)(s(s`ksk)i(s(s`ksk)(sii(s(s`ksk)i))))(s`k`s(si`kk)k)(sii(s`k(s`k`s(s
    i`k`ki)k)(sii))))))`kk))`k`ki)(s(s`ks(s`k`si(s`kk(s`k(s(s`ksk)i(s(sii)i(s(s`
    ksk)i)(s(s`ks(s`k`s`ks(s(s`ks(s`k`s`ks(s`k`s`kk(s(s`ksk)`k(s`k`s`k`si(s`k`s`
    kk(s`k`sik)))))))`k`kk)))`k`k`ki)))(s(si`k`ki)`kk)))))(s`kk(s(si`k`ki)`k`ki)
    )))(si`k`ki)))))(sii))
  :tags:
  - Lazy-K
  :references:
    :url: 
    :title: 
- :id: '7862'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/7862
  :user_name: 99yen
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/591/
  :language: 
  :time: 2008/10/26 04:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>愚直に</p>\n\n\t"
  :code: |
    S="LL day and night"
    f=1;t=""
    Sを文字列分解して反復
        もし(f=1)ならば
            t=t&amp;大文字変換(対象)
            f=0
        違えば
            もし(対象=" ")ならば
                f=1
            t=t&amp;対象
    tを表示
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8182'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/8182
  :user_name: taninsw
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/973/
  :language: Haskell
  :time: 2008/12/15 09:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ものすごくベタですが。</p>\n<p>他の手法も考えたのですが短かくなりませんでした(コード内コメントの箇所)</p>\n\n\t"
  :code: |
    import Char
    a=unwords$map(\(x:xs)-&gt;toUpper x:xs)$words"LL day and night"


    {-
    b[]=[]
    b(' ':x:xs)=' ':toUpper x:xs
    b(x:xs)=x:b xs
    a'=tail$b$' ':"lL day and night"
    -}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8439'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/8439
  :user_name: fumokmm
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/856/
  :language: Groovy
  :time: 2009/02/03 18:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">#6928, #6930を参考に。\r\n正規表現を使わない方法で書いてみました。</pre>\n\t"
  :code: |
    // Stringに#capitalizeを付加
    String.metaClass.capitalize = {
       delegate ? delegate.toList().with{
          head().toUpperCase() + tail().join()
       } : delegate
    }

    // 動作確認
    assert ''.capitalize() == ''
    assert 'abc'.capitalize() == 'Abc'
    assert ['LL','day','and','night']*.capitalize()
       == ['LL', 'Day', 'And', 'Night']
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '10402'
  :parent_id: '196'
  :url: http://ja.doukaku.org/comment/10402
  :user_name: gushwell
  :user_url: /web/20100605050833/http://ja.doukaku.org/user/1046/
  :language: C
  :time: 2010/04/16 21:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>他の方に比べると長いコードですが、正規表現使ってみました。</p>\n\n\t"
  :code: |
    using System;
    using System.Text;
    using System.Threading;
    using System.Globalization;

    namespace Sample {
        class Program {
            static void Main(string[] args) {
                Console.WriteLine(ToUpper1St("Microsoft   windows  vista."));
                Console.WriteLine(ToUpper1St("hello, i am a cat"));
                Console.WriteLine(ToUpper1St("日本語abc漢字"));
                Console.WriteLine(ToUpper1St("ａｂｃ"));
                Console.WriteLine(ToUpper1St("αβγ"));
                Console.WriteLine(ToUpper1St("a=b+c"));
            }

            static string ToUpper1St(string s) {
                var reg = new Regex(@"(\W*)(\w+)");
                return reg.Replace(s, m =&gt; m.Groups[1] + ToTitleCase(m.Groups[2].Value));
            }

            static string ToTitleCase(string s) {
                CultureInfo cultureInfo = Thread.CurrentThread.CurrentCulture;
                return cultureInfo.TextInfo.ToTitleCase(s);
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
