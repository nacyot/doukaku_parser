---
:id: '59'
:title: 音声合成でHello, world!
:comments:
- :id: '3415'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3415
  :user_name: にしお
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/09/12 10:53 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\r\n\t  与えられた文字列を音声合成して再生する関数を作ってください。\r\n<p>\r\n使用したライブラリはタグでつけてください。またOSに依存する場合もタグでつけてください。日本語文字列も発音できることが好ましいですが、必須ではありません。\r\n</p>\n<p>\r\n以下はサンプルです。\r\n</p>\n<pre>\r\n&gt;&gt;&gt;
    say(\"Hello, world!\")\r\n&gt;&gt;&gt; say(\"con nitch were\") # 「こんにちは」\r\n&gt;&gt;&gt;
    say(\"daw cat coo org, sole what program mar know tum yen know Colosseum death\")\r\n</pre>\r\n\r\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2986'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2986
  :user_name: 匿名
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/4/
  :language: Perl
  :time: 2007/09/12 11:52 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\">一番のりしてみる。</pre>\n\t"
  :code: |
    sub say { `say $_[0]`; }
  :tags:
  - MacOSX
  :references:
    :url: /web/20100617100122/http://macwiki.sourceforge.jp/wiki/index.php/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/say
    :title: http://macwiki.sourceforge.jp/wiki/index.php/コマンド/say
- :id: '2987'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2987
  :user_name: ether
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/96/
  :language: PowerShell
  :time: 2007/09/12 13:10 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  Windows では COM 経由で SAPI を使うといいようですね。\n\t"
  :code: |
    function say($msg) {
      $speaker = new-object -com Sapi.SpVoice
      $speaker.Speak($msg, 1)
    }
  :tags:
  - SAPI
  - Windows
  :references:
    :url: 
    :title: 
- :id: '2988'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2988
  :user_name: sumim
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/09/12 13:39 GMT
  :vote_count: '6'
  :vote_score: '6'
  :body: "\n\t  Squeak Smalltalk で。組み込みです。\n\t"
  :code: |
    Speaker default say: 'Hello, world!'
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '2989'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2989
  :user_name: jz5
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/344/
  :language: VB
  :time: 2007/09/12 14:38 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">Microsoft Agent を使ってます。\r\nAxAgent1がAgentコンポーネントオブジェクトです。\r\nVisual
    Studioでの操作は、Windowsアプリケーションを作り\r\nCOMコンポーネントの追加で Microsoft Agent Control 2.0を選択、\r\nそしてFormにコンポーネントを貼り付けというふうになります。\r\n\r\n'
    .NET Frameworkにも音声合成用の抽象クラスだけはあるのね。\r\n</pre>\n\t"
  :code: |
    Private Sub MainForm_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        AxAgent1.Connected = True
        AxAgent1.Characters.Load("A")
    End Sub

    Private Sub MainForm_FormClosed(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosedEventArgs) Handles Me.FormClosed
        AxAgent1.Characters.Unload("A")
        AxAgent1.Connected = False
    End Sub

    Sub Say(ByVal message As String)
        Dim chr As AgentObjects.IAgentCtlCharacter = AxAgent1.Characters("A")
        chr.Show()
        chr.Speak(message)
    End Sub
  :tags:
  - Microsoft_Agent
  - Windows
  :references:
    :url: /web/20100617100122/http://www6.plala.or.jp/MilkHouse/practical/contents312/contents31202.html
    :title: 'Microsoft Agent '
- :id: '2991'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2991
  :user_name: shiro
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/41/
  :language: 
  :time: 2007/09/12 20:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  &gt; 組み込みです\r<br><br>惚れました。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2992'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2992
  :user_name: nobsun
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2007/09/13 00:59 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">他力本願\r\neSpeak のコマンドを呼ぶ。\r\nespeakはおもしろいですね。\r\nちゃんとそれらしく、聞える</pre>\n\t"
  :code: |
    module Main (main) where

    import System.Environment
    import System.Cmd

    main =  system . mkcmd . unwords  =&lt;&lt; getArgs
    mkcmd s = "espeak '" ++ s ++ "'"

    {-
    字では表現できませんが、以下でちゃんとしゃべってくれます。
    *Main&gt; :main Hello, world!
    ExitSuccess
    *Main&gt; :main con nitch were
    ExitSuccess
    *Main&gt; :main daw cat coo org, sole what program mar know tum yen know Colosseum death
    ExitSuccess
    -}
  :tags:
  - eSpeak
  :references:
    :url: /web/20100617100122/http://espeak.sourceforge.net/
    :title: 'eSpeak: Speech Synthesizer'
- :id: '2993'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2993
  :user_name: kawauchi
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/14/
  :language: Ruby
  :time: 2007/09/13 02:11 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    require "rubygems"
    require "win32/sapi5" # http://rubyforge.org/projects/win32utils
    include Win32

    def say(msg)
      v = SpVoice.new
      v.Speak(msg)
    end

    if $0 == __FILE__
      if ARGV[0]
        say(ARGV[0])
      else
        say("Hello, world!")
        say("con nitch were") # 「こんにちは」
        say("daw cat coo org, sole what program mar know tum yen know Colosseum death")
      end
    end
  :tags:
  - win32-sapi
  - windows
  :references:
    :url: /web/20100617100122/http://ja.doukaku.org/comment/2987/
    :title: 'どう書く？org 2987 ether: Windows では COM 経由で S...(音声合成でHello, world!) - 投稿の詳細:'
- :id: '2994'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2994
  :user_name: sumim
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/09/13 03:53 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  ぜひ将来 Gauche にも。ｗ\r<br><br>他にも、ランダムに生成されるキャラ顔にセリフをしゃべらせる（発声のタイミングにあわせてそれっぽく口を動かします）…といったこともできます。\n\t"
  :code: |
    | speaker |
    speaker := Speaker manWithHead.
    (speaker findAVoice: GesturalVoice) head openInHand.
    speaker say: 'Hello, world!'
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: /web/20100617100122/http://squab.no-ip.com/collab/uploads/61/manwithhead.png
    :title: 実行画面
- :id: '2995'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2995
  :user_name: g000001
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/405/
  :language: Common
  :time: 2007/09/13 04:30 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">自分には難しかったので、シェルからfestivalを呼び出すことにしました。\r\n\r\nfestivalは内部スクリプティングにshcemeが採用されてるんですねー。\r\nubuntu/debianでは、パッケージがあったので導入は簡単でした。</pre>\n\t"
  :code: "(defpackage :doukaku-59 (:use :cl :asdf) (:export say))\n(in-package :doukaku-59)\n\n(defun
    say (str)\n  (let ((exec-str (concatenate 'string \"echo \" str \"|festival --tts\")))\n
    \   (let ((res (run-shell-command exec-str)))\n      (case res\n\t(0 (values str
    0))\n\t(otherwise (values nil res))))))\n"
  :tags:
  - asdf
  - festival
  - unix
  :references:
    :url: /web/20100617100122/http://www.cstr.ed.ac.uk/projects/festival/
    :title: ' The Festival Speech Synthesis System'
- :id: '2996'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2996
  :user_name: matyr
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/343/
  :language: JavaScript
  :time: 2007/09/13 04:44 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  ↓から落としてインストールすれば様々な言語が使える模様。(TTSが登録されて無いようなら \"regsvr32 VText.dll\" する。)\n\t"
  :code: |
    function doukaku59(text, option){ // テキスト [, {language:言語, gender:性別, speed:速度}]
      var i = 1, c, l, g, s;
      with(new ActiveXObject('TextToSpeech.TextToSpeech')){
        c = countEngines;
        if(l = option.language) for(; i &lt;= c &amp;&amp; !~modeName(i).indexOf(l); i++);
        if(g = option.gender)   for(; i &lt;= c &amp;&amp; !~modeName(i).indexOf(g); i++);
        if(s = option.speed)    if(95 &lt;= s &amp;&amp; s &lt;= 270) speed = s;
        try { select(i) } catch(e){ WSH.echo('No engines for the option.'); WSH.quit() }
        for(speak(text); isSpeaking; WSH.sleep(590));
      }
    }
    doukaku59('Hello, world!', {language:'English', gender:'Male', speed:160});
    doukaku59('こんにちは！', {language:'Japanese', gender:'Female'});
  :tags:
  - TextToSpeech
  - WSH
  :references:
    :url: /web/20100617100122/http://www.microsoft.com/msagent/downloads/user.aspx
    :title: Microsoft Agent Downloads
- :id: '2997'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2997
  :user_name: omoikani
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/374/
  :language: StandardML
  :time: 2007/09/13 05:44 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">eSpeakのライブラリをSML#のFFI機能を使って呼んでいます。\r\nライブラリの場所は/usr/libに決め打ち。さらに設定はすべて固定。</pre>\n\t"
  :code: |
    fun say text =
    let
      open DynamicLink

      val lib = dlopen "/usr/lib/libespeak.so"
      val init = dlsym (lib, "espeak_Initialize")
      val synth = dlsym (lib, "espeak_Synth")
      val sync = dlsym (lib, "espeak_Synchronize")

      val espeakSyncronize = sync : _import () -&gt; int
      fun espeakInitialize () =
        _ffiapply init (0 : int,
                        0 : int,
                        NULL : string ptr,
                        0 : int) : int

      fun espeakSynth () =
        _ffiapply synth (text : string,
                         size text + 1 : int,
                         0 : int,
                         1 : int,
                         0 : int,
                         0 : int,
                         NULL : word ptr,
                         NULL : char ptr) : int
    in
      espeakInitialize ();
      espeakSynth ();
      espeakSyncronize ()
    end;

    say "Hello, world!"
  :tags:
  - SML#
  - eSpeak
  :references:
    :url: /web/20100617100122/http://espeak.sourceforge.net/
    :title: 'eSpeak: Speech Synthesizer'
- :id: '2998'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/2998
  :user_name: naoya_t
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/348/
  :language: AppleScript
  :time: 2007/09/13 06:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">もう少しましな日本語を喋らせることもできますが、とりあえず投稿</pre>\n\t"
  :code: |
    say "Hello, world."
    say "con itch wha."
  :tags:
  - MacOSX
  :references:
    :url: 
    :title: 
- :id: '3001'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3001
  :user_name: sawat
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/322/
  :language: Java
  :time: 2007/09/13 09:16 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  FreeTTSというライブラリを使ってみました。\"Hello, world!\"だとちょっと変な感じになるので、\"Hello world!\"にしています。\n\t"
  :code: "import com.sun.speech.freetts.Voice;\nimport com.sun.speech.freetts.VoiceManager;\n\npublic
    class Speaker {\n    public static void main(String[] args) {\n\n        args
    = args.length == 0 ? new String[] { \"Hello world!\" } : args;\n        StringBuffer
    message = new StringBuffer();\n        for (int i = 0; i &lt; args.length; i++)
    {\n            message.append(args[i]);\n            message.append(' ');\n        }\n\n
    \       VoiceManager voiceManager = VoiceManager.getInstance();\n        Voice
    helloVoice = voiceManager.getVoice(\"kevin16\");\n        \n        System.out.printf(\"%s
    say \\\"%s\\\".%n\", helloVoice.getName(), message);\n        helloVoice.allocate();\n
    \       helloVoice.setVolume(100.0f);\n        helloVoice.speak(message.toString());\n
    \       helloVoice.deallocate();\n    }\n}\n"
  :tags:
  - FreeTTS
  :references:
    :url: /web/20100617100122/http://freetts.sourceforge.net/docs/index.php#download_and_install
    :title: 'FreeTTS 1.2 - A speech synthesizer written entirely in the Java(TM) programming
      language '
- :id: '3002'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3002
  :user_name: hirataka
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/233/
  :language: 
  :time: 2007/09/13 09:27 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\">MS Agentを使ってます。\r\n最低限Text-to-speech engines
    (日本語か英語版)とSAPI 4.0 が必要です。</pre>\n\t"
  :code: |
    say(「Hello, world」, "英語")
    say(「こんにちは」, "日本語")
    say(「どう書くorg、それはプログラマの為のコロシアムです。」, "日本語")

    ＊say(text, lang)
    　エージェントマーリン召喚
    　langへエージェント言語変更
    　textとエージェント言う
    　エージェント待つ
  :tags:
  - Microsoft_Agent
  - Windows
  :references:
    :url: /web/20100617100122/http://www.microsoft.com/msagent/downloads/user.aspx
    :title: Microsoft Agent download page for end-users
- :id: '3003'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3003
  :user_name: にしお
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/09/13 09:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">おおお、これはsayの定義の仕方を変えれば\r\n「\"日本語\"で「こんにちは」と言う」\r\nなんてこともできそうですね！</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3004'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3004
  :user_name: hirataka
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/233/
  :language: 
  :time: 2007/09/13 10:48 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\n\t  <pre class=\"compact\">できました。\r\nでも、標準命令の「言う」が使えなくなってしまいます。\r\n「いう」の方は使えるから問題ないと思いますが。\r\n\r\nちなみに、「言う、いう」はOKボタンだけのダイアログを出す命令です。</pre>\n\t"
  :code: |
    "英語"で「Hello, world!」と言う
    "日本語"で「こんにちは」と言う

    ＊言う(langで, textと)
    　エージェントマーリン召喚
    　langへエージェント言語変更
    　textとエージェント言う
    　エージェント待つ
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3005'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3005
  :user_name: koguro
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/438/
  :language: Scheme
  :time: 2007/09/13 13:21 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">c-wrapperのホームページに張ってあるサンプルコードそのままです。Objective-CとSchemeが融合した変なコードになっています。</pre>\n\t"
  :code: "(c-load \"Cocoa/Cocoa.h\" \n        :libs \"-framework Foundation -framework
    Cocoa\")\n\n[[NSAutoreleasePool :alloc] :init]\n\n(define say \n  (let1 s [[NSSpeechSynthesizer
    :alloc] :init]\n    (lambda (str)\n      [s :startSpeakingString (@ str)])))\n\n(say
    \"Hello, world\")\n"
  :tags:
  - MacOSX
  - c-wrapper
  - gauche
  :references:
    :url: /web/20100617100122/http://homepage.mac.com/naoki.koguro/prog/c-wrapper/index-j.html
    :title: c-wrapper
- :id: '3006'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3006
  :user_name: koguro
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/438/
  :language: Scheme
  :time: 2007/09/13 13:25 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\">しまった、最初の(use objc-wrapper)が抜けていた。正しくは以下の通りです。</pre>\n\t"
  :code: "(use objc-wrapper)\n\n(c-load \"Cocoa/Cocoa.h\"\n        :libs \"-framework
    Foundation -framework Cocoa\")\n\n[[NSAutoreleasePool :alloc] :init]\n\n(define
    say \n  (let1 s [[NSSpeechSynthesizer :alloc] :init]\n    (lambda (str)\n      [s
    :startSpeakingString (@ str)])))\n\n(say \"Hello, world\")\n"
  :tags:
  - MacOSX
  - c-wrapper
  - gauche
  :references:
    :url: 
    :title: 
- :id: '3008'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3008
  :user_name: 匿名
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/09/13 14:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">同等のコードをpythonで書いてみました。\r\n</pre>\n\t"
  :code: |
    from ctypes import cdll

    def init():
      es = cdll.LoadLibrary('libespeak.so.1')
      es.espeak_Initialize(0, 0, None, 0)
      es.espeak_Synchronize()
      return lambda s: es.espeak_Synth(s, len(s)+1, 0, 1, 0, 0, None, None)

    say = init()
    say('Hello, world!')
    say('con nitch were')
    say('daw cat coo org, sole what program mar know tum yen know Colosseum death')
  :tags:
  - ctypes
  - espeak
  - posix
  :references:
    :url: 
    :title: 
- :id: '3011'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3011
  :user_name: にしお
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/1/
  :language: Python
  :time: 2007/09/14 06:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">僕が用意していたのもこの方法でした。</pre>\n\t"
  :code: |
    import win32com.client
    say = win32com.client.Dispatch("SAPI.SpVoice").Speak
  :tags:
  - SAPI
  - Windows
  :references:
    :url: 
    :title: 
- :id: '3012'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3012
  :user_name: yohei
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/415/
  :language: C
  :time: 2007/09/14 06:37 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">.NET3.0を使いました。\r\nシステムの音声合成エンジンに日本語を話せるエージェントが設定してある事を前提。</pre>\n\t"
  :code: |
    using System;
    using System.Speech.Synthesis;
    class Program {
        static void say(string s) {
            SpeechSynthesizer syn = new SpeechSynthesizer();
            syn.Speak(s);
        }
        static void Main(string[] args) {
            say("Hello, world!");
            say("こんにちは");
        }
    }
  :tags:
  - .NET3.0
  :references:
    :url: 
    :title: 
- :id: '3014'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/3014
  :user_name: 匿名
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/4/
  :language: AppleScript
  :time: 2007/09/14 11:53 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">何のひねりもないのは…すごい反則してる気がしてきます。</pre>\n\t"
  :code: |
    say "Hello, world!"
    say "con nitch were" -- 「こんにちは」
    say "daw cat coo org, sole what program mar know tum yen know Colosseum death"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4024'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/4024
  :user_name: Psychs
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/554/
  :language: Objective
  :time: 2007/11/14 13:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">NSLog(@\"%@\", [NSSpeechSynthesizer availableVoices]);\r\nで使える声の一覧を確認できます。</pre>\n\t"
  :code: "#import &lt;Foundation/Foundation.h&gt;\n#import &lt;Appkit/Appkit.h&gt;\n\nint
    main(int argc, char** argv)\n{\n  NSAutoreleasePool* pool = [NSAutoreleasePool
    new];\n  \n  NSSpeechSynthesizer* s = [[[NSSpeechSynthesizer alloc] initWithVoice:@\"com.apple.speech.synthesis.voice.Alex\"]
    autorelease];\n  [s startSpeakingString:@\"Hello, world!\"];\n  while ([s isSpeaking])
    ;\n  [s startSpeakingString:@\"con nitch were\"];\n  while ([s isSpeaking]) ;\n
    \ [s startSpeakingString:@\"daw cat coo org, sole what program mar know tum yen
    know Colosseum death\"];\n  while ([s isSpeaking]) ;\n  \n  [pool release];\n
    \ return 0;\n}\n"
  :tags:
  - MacOSX
  :references:
    :url: 
    :title: 
- :id: '4298'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/4298
  :user_name: 割と普通
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/581/
  :language: C
  :time: 2007/11/21 18:12 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <p>既存ライブラリを用いて実現してみました。\nアルファベットでHelloWolrdだと読み上げなかったので仕方なく…</p>\n\n\t"
  :code: |
    class VoiceHelloWorld
    {
        [System.Runtime.InteropServices.DllImport("AquesTalkDa.dll")]
        private static extern int AquesTalkDa_PlaySync(string voice,int speed);
        static void Main(string[] args)
        {
            AquesTalkDa_PlaySync("はろーわーるど", 100);
        }
    }
  :tags: []
  :references:
    :url: /web/20100617100122/http://www.a-quest.com/aquestalk/index.html
    :title: Aquesライブラリ
- :id: '4330'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/4330
  :user_name: zigorou
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/64/
  :language: JavaScript
  :time: 2007/11/22 08:52 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <div class=\"section\">\n<p>個人的にはnipotanと言う発音は神がかってると思う。</p>\n</div>\n\t"
  :code: |
    function say(msg) {
      var sprk = new ActiveXObject("SAPI.SpVoice");
      sprk.Speak(msg);
    }

    say("Hello world");
    say("nipotan");
  :tags:
  - SAPI
  - WSH
  :references:
    :url: /web/20100617100122/http://moz-addon.g.hatena.ne.jp/ZIGOROu/20071121/1195666381
    :title: ' SAPI.SpVoiceで文字を喋らせる'
- :id: '5622'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/5622
  :user_name: g000001
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/405/
  :language: Arc
  :time: 2008/02/01 15:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  MacOSXのsayコマンドに文字列を渡しています。\r<br>(say \"Hello, world!\")\n\t"
  :code: "(def say (mesg)\n (system (+ \"say \" mesg \"&amp;\")) \n mesg)\n"
  :tags:
  - MacOSX
  :references:
    :url: 
    :title: 
- :id: '7077'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/7077
  :user_name: lunlumo
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/813/
  :language: Scala
  :time: 2008/08/09 12:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>　FreeTTSを使って実装してみました。</p>\n</div>\n\t"
  :code: "import java.beans.PropertyVetoException;\nimport java.util.Locale\nimport
    javax.speech.AudioException\nimport javax.speech.Central\nimport javax.speech.EngineException\nimport
    javax.speech.EngineStateError\nimport javax.speech.synthesis.Synthesizer\nimport
    javax.speech.synthesis.SynthesizerModeDesc\nimport javax.speech.synthesis.Voice\n\nclass
    HelloWorld {\n    private    var    s:Synthesizer = null\n    val    d:SynthesizerModeDesc
    = new SynthesizerModeDesc(null, \"general\", Locale.US, null, null)\n    var    v:Voice
    = null\n    s = Central.createSynthesizer(d)\n    if (s == null) {\n        Console.println(\"cannot
    create synthesizer.\")\n        System.exit(1)\n    }\n    v = new Voice(\"kevin16\",
    Voice.GENDER_DONT_CARE, Voice.AGE_DONT_CARE, null)\n    if (v == null) {\n        Console.println(\"cannot
    create voice.\")\n        System.exit(1)\n    }\n    s.allocate\n    s.resume\n
    \   s.getSynthesizerProperties().setVoice(v)\n    \n    def sayHello(m:String):Unit
    = {\n        s.speakPlainText(m,null)\n        s.waitEngineState(Synthesizer.QUEUE_EMPTY)\n
    \   }\n    \n    def deallocateSynthesizer:Unit = s.deallocate\n}\n\nobject HelloWorldMain
    {\n    def main(args:Array[String]):Unit = {\n        try {\n            val    h:HelloWorld
    = new HelloWorld\n            args.size match {\n                case    0 =&gt;
    h.sayHello(\"Hello World\")\n                case    _ =&gt; h.sayHello(args(0))\n
    \           }\n            h.deallocateSynthesizer\n        } catch {\n            case
    e:Exception =&gt; {\n                e.printStackTrace\n                System.exit(1)\n
    \           }\n        }\n    }\n}\n"
  :tags: []
  :references:
    :url: /web/20100617100122/http://journal.mycom.co.jp/column/jsr/020/index.html
    :title: 音声認識/合成のためのAPI - Java Speech APIとJSR 113
- :id: '7558'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/7558
  :user_name: pooq
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/606/
  :language: Other
  :time: 2008/09/03 03:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">uwscのマニュアルには「要SAPI 5.x」とあります。\r\nコントロールパネルに「音声認識」があれば使えるようです。\r\n</pre>\n\t"
  :code: |
    SPEAK("Hello, world!")
    SPEAK("こんにちは")
    SPEAK("どう書くorg、それはプログラマの為のコロシアムです。")
  :tags:
  - SAPI
  - Windows
  - uwsc
  :references:
    :url: 
    :title: 
- :id: '7694'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/7694
  :user_name: szktty
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/648/
  :language: Other
  :time: 2008/09/21 08:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>LLVMアセンブリ(32bit)で。Mac OS Xのsayコマンドにコマンドライン引数を渡してます。いいのかこんなんで…</p>\n\n\t"
  :code: |
    ; Usage: ./say message

    declare i32 @strlen(i8*)
    declare i32 @sprintf(i8*, i8*, ...)
    declare i32 @system(i8*)

    @cmd = internal constant [9 x i8] c"say \22%s\22\00"

    define i32 @main(i32 %argc, i8** %argv) {
        %cmdp = getelementptr [9 x i8]* @cmd, i32 0, i32 0
        %argv_addr = ptrtoint i8** %argv to i32
        %msg_addr = add i32 %argv_addr, 4
        %msgp = inttoptr i32 %msg_addr to i8**
        %msg = load i8** %msgp
        %slen = call i32 @strlen(i8* %msg)
        %len = add i32 %slen, 9
        %s = malloc i8, i32 %len
        call i32 (i8*, i8*, ...)* @sprintf(i8* %s, i8* %cmdp, i8* %msg)
        call i32 @system(i8* %s)
        ret i32 0
    }
  :tags:
  - Assembly
  - LLVM
  :references:
    :url: 
    :title: 
- :id: '9603'
  :parent_id: '59'
  :url: http://ja.doukaku.org/comment/9603
  :user_name: uehaj
  :user_url: /web/20100617100122/http://ja.doukaku.org/user/959/
  :language: Groovy
  :time: 2009/09/23 04:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n<p><a href=\"/web/20100617100122/http://ja.doukaku.org/comment/3001/\">sawatさんのJava版</a>の移植です。\n</p>\n\n\n\n\t"
  :code: |
    mport com.sun.speech.freetts.VoiceManager;

    args = args.size()==0 ? ["Hello world!"] : args
    message = args.join(' ')

    VoiceManager.instance.getVoice("kevin16").with {
      println "$name say \"$message\"."
      allocate()
      volume = 100.0f
      speak message
      deallocate()
    }
  :tags: []
  :references:
    :url: 
    :title: 
