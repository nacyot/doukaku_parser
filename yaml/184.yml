---
:id: '184'
:title: ミリ秒まで含んだ時刻文字列
:comments:
- :id: '6446'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6446
  :user_name: znz
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/341/
  :language: 
  :time: 2008/06/06 10:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  <p>YYYY年mm月dd日HH時MM分SS.xxx秒なら、「YYYYmmddHHMMSS.xxx」のようにミリ秒まで含んだ文字列を返すプログラムを書いてください。</p>\n\r\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6495'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6495
  :user_name: xsd
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/154/
  :language: C
  :time: 2008/06/14 17:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  WindowsAPIではGetLocalTime()関数を使うとミリ秒単位の時刻が取得できます。\r<br>ただし、クロックの分解能（精度）は15～16ミリ秒ほどのようです。\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    #include &lt;windows.h&gt;

    int main(int argc, char **argv)
    {
        SYSTEMTIME    st;
        GetLocalTime(&amp;st);
        printf("%04d%02d%02d%02d%02d%02d.%03d\n",
            st.wYear, st.wMonth,  st.wDay,
            st.wHour, st.wMinute, st.wSecond, st.wMilliseconds);
        return 0;
    }
  :tags:
  - Windows
  :references:
    :url: 
    :title: 
- :id: '6496'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6496
  :user_name: 匿名
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2008/06/14 17:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">var t = new Date();\r\nprint(DatetoString(t))</pre>\n\t"
  :code: "function DatetoString(t){\n    return (\"\"\n        + paddingLeft(t.getFullYear(),
    4, '0')\n        + paddingLeft(t.getMonth()+1, 2, '0')\n        + paddingLeft(t.getDate(),
    2, '0')\n        + paddingLeft(t.getHours(), 2, '0')\n        + paddingLeft(t.getMinutes(),
    2, '0')\n        + paddingLeft(t.getSeconds(), 2, '0')\n        + \".\"\n        +
    paddingLeft(t.getMilliseconds(), 3, '0')\n    );\n}\n\nif(!String.prototype.x){\n
    \   String.prototype.x = function(n){\n        var result=\"\", i;\n        for(i=0;i&lt;n;i++){\n
    \           result += this;\n        }\n        return result;\n    }\n}\nfunction
    paddingLeft(str, d, c){\n    var len  = str.toString().length;\n    var x = d
    &gt; len ? d - len : 0;\n    \n    return c.x(x) + str;\n}\n"
  :tags:
  - Rhino
  :references:
    :url: 
    :title: 
- :id: '6498'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6498
  :user_name: genzou
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/793/
  :language: Groovy
  :time: 2008/06/14 21:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>現在日時を表示してみました。</p>\n\n\t"
  :code: |
    import java.text.*

    def now = new Date()
    println new SimpleDateFormat("yyyyMMddhhmmss.SSS").format(now)
  :tags:
  - groovy
  :references:
    :url: 
    :title: 
- :id: '6499'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6499
  :user_name: nobsun
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2008/06/14 23:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ミリ秒未満は切り捨て\r\n実行例\r\n\r\n*Main&gt; :main\r\n20080615084301.575\r\n</pre>\n\t"
  :code: |
    module Main where

    import Data.Time
    import System.Locale

    ($$) = flip ($)
    main = getCurrentTimeZone &gt;&gt;= \ tz -&gt;
           getCurrentTime     &gt;&gt;= \ ct -&gt;
           utcToLocalTime tz ct $$ formatTime defaultTimeLocale "%Y%m%d%H%M%S.%q"
                                $$ take 18
                                $$ putStrLn
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6500'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6500
  :user_name: sumim
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2008/06/14 20:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Squeak Smalltalk で。</p>\n<p>#format: の引数のルールは次のようになっています。sep に
    0 を渡すとセパレータなしにできるようです。</p>\n<p>--</p>\n<p>#(item item item sep monthFmt yearFmt
    twoDigits)</p>\n<p>items: 1=day 2=month 3=year will appear in the order given,
    separated by sep which is eaither an ascii code or character.</p>\n<p>monthFmt:
    1=09 2=Sep 3=September</p>\n<p>yearFmt: 1=1996 2=96</p>\n<p>twoDigits: (missing
    or)1=9 2=09.</p>\n\n\t"
  :code: |
    | yyyymmdd hhmmss xxx |
    yyyymmdd := Date today printFormat: #(3 2 1 0 1 1 2).
    hhmmss := Time now print24 copyWithout: $:.
    xxx := Time millisecondClockValue printString last: 3.
    ^yyyymmdd, hhmmss, '.', xxx
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '6501'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6501
  :user_name: sumim
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/88/
  :language: 
  :time: 2008/06/14 21:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>× #format: の引数のルールは</p>\n<p>○ #printFormat: の引数のルールは</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6503'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6503
  :user_name: horiuchi
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/570/
  :language: Java
  :time: 2008/06/14 23:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>SimpleDateFormatは #6498 で使われていたので、\nString$format を使ってみました。</p>\n\n\t"
  :code: |
    import java.util.Date;

    public class Sample184 {
        public static String convert(Date date) {
            return String.format("%1$tY%1$tm%1$td%1$tH%1$tM%1$tS.%1$tL", date);
        }

        public static void main(String[] args) {
            System.out.println(convert(new Date()));
        }
    }
  :tags:
  - Java1.5
  :references:
    :url: 
    :title: 
- :id: '6506'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6506
  :user_name: fujidig
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/507/
  :language: Ruby
  :time: 2008/06/15 00:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    puts Time.now.instance_eval{'%s.%03d'%[strftime('%Y%m%d%H%M%S'),(usec/1000.0).round]}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6508'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6508
  :user_name: howking
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/744/
  :language: Erlang
  :time: 2008/06/15 05:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">すみません、寝むくてぐだぐだな感じで。</pre>\n\t"
  :code: "&gt; {{Y,M,D},{Ho,Mi,Se}}=calendar:now_to_local_time({Mg,S,Ms}=now()).\n&gt;
    element(2,regexp:gsub(lists:flatten(io_lib:format(\"~4w~2w~2w~2w~2w~2w.~w\",[Y,M,D,Ho,Mi,Se,Ms])),\"
    \",\"0\")). \n\"20080615141401.573000\"\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6509'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6509
  :user_name: 匿名
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/4/
  :language: C
  :time: 2008/06/15 11:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    #include &lt;sys/time.h&gt;
    #include &lt;stdio.h&gt;
    int
    main(void)
    {
        struct timeval t;
        time_t c;
        struct tm r;

        gettimeofday(&amp;t, NULL);
        c = t.tv_sec;
        localtime_r(&amp;c, &amp;r);
        printf("%04d%02d%02d%02d%02d%02d.%03d\n", r.tm_year + 1900, r.tm_mon + 1, r.tm_mday, r.tm_hour, r.tm_min, r.tm_sec, (int)(t.tv_usec / 1000));
        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6510'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6510
  :user_name: ocean
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/177/
  :language: Python
  :time: 2008/06/15 13:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    import datetime
    now = datetime.datetime.now()
    print now.strftime("%Y%m%d%H%M%S.") + "%03d" % (now.microsecond // 1000)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6512'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6512
  :user_name: Dubhead
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/785/
  :language: D
  :time: 2008/06/15 13:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">D 1.0 + Tangoです。\r\n文字列を「返す」プログラムという問題なので、現在日時から文字列を作る処理だけ別関数に切り出しています。</pre>\n\t"
  :code: |
    import tango.io.Console;
    import tango.text.convert.Layout;
    import tango.time.WallClock;

    char[]
    datetime_string()
    {
        auto layout = new Layout!(char);
        auto datetime = WallClock.toDate;    // 現在の日時 (ローカルタイム)
        auto d = datetime.date;
        auto t = datetime.time;
        return layout.convert("{:d4}{:d2}{:d2}{:d2}{:d2}{:d2}.{:d3}",
            d.year, d.month, d.day,
            t.hours, t.minutes, t.seconds, t.millis);
    }

    void
    main()
    {
        Cout(datetime_string).newline;
    }
  :tags: []
  :references:
    :url: /web/20081121124803/http://www.dsource.org/projects/tango/docs/current/tango.time.Time.html
    :title: tango.time.Time
- :id: '6513'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6513
  :user_name: shinonome
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/822/
  :language: C
  :time: 2008/06/15 14:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Boost使ってみました。\nちゃんと理解していないので、出力のあたりがちょっと汚らしい。</p>\n\n\t"
  :code: |
    #include &lt;cstdlib&gt;
    #include &lt;iostream&gt;
    #include &lt;boost/format.hpp&gt;
    #include &lt;boost/date_time/gregorian/gregorian.hpp&gt;
    #include &lt;boost/date_time/posix_time/posix_time.hpp&gt;

    using namespace std;
    using namespace boost;
    using namespace boost::gregorian;
    using namespace boost::posix_time;

    int main(void)
    {
            ptime now = microsec_clock::local_time();

            cout    &lt;&lt; format("%s%02d%02d%02d.%03d")
                    % to_iso_string(now.date()).c_str()
                    % now.time_of_day().hours()
                    % now.time_of_day().minutes()
                    % now.time_of_day().seconds()
                    % (now.time_of_day().fractional_seconds() / 1000)
                    &lt;&lt; endl;

            return EXIT_SUCCESS;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6514'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6514
  :user_name: あにす
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2008/06/15 14:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    using System;

    class Program {
        static void Main(string[] args) {
            Console.WriteLine(DateTime.Now.ToString("yyyyMMddHHmmss.fff"));
            Console.ReadLine();
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6515'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6515
  :user_name: shinonome
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/822/
  :language: C
  :time: 2008/06/15 15:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ついでにQtで書いてみました。</p>\n\n\t"
  :code: |
    #include &lt;QtCore&gt;

    #include &lt;cstdlib&gt;
    #include &lt;iostream&gt;

    using namespace std;

    int main(void)
    {
            QDateTime now = QDateTime::currentDateTime();

            cout &lt;&lt; now.toString("yyyyMMddhhmmss.zzz").toStdString() &lt;&lt; endl;

            return EXIT_SUCCESS;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6516'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6516
  :user_name: turugina
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/760/
  :language: Perl
  :time: 2008/06/16 05:27 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">CPANモジュールのTime::Formatを使って。</pre>\n\t"
  :code: |
    use Time::Format qw(%time);
    print "$time{'yyyymmddhhmmss.mmm'}\n";
  :tags: []
  :references:
    :url: /web/20081121124803/http://search.cpan.org/~roode/Time-Format-1.09/lib/Time/Format.pm
    :title: Time::Format
- :id: '6520'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6520
  :user_name: Nemo
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/685/
  :language: PostScript
  :time: 2008/06/16 09:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>PostScript では realtime オペレータで現在時刻を取り出せるのですが、なんと原点(0)がいつを指すかは未定義です。\nそのため、別途パラメータで補ってやる必要があります。</p>\n\n\t"
  :code: "%!PS\n\n/ZeroNum { % integer (string) ZeroNum (string')\n    dup dup length
    dup string\n    5 -1 roll exch cvs dup length\n    3 -1 roll sub neg exch putinterval\n}
    bind def\n\n/GetClock { %\n    % Input\n    %   Offset1(YYYYMMDD in int)\n    %
    \  Offset2(offset for realtime clock to 00:00:00.000 in millisec)\n    % Output\n
    \   %    (String)\n    (YYYYMMDD000000.000) dup 0 8 getinterval 4 -1 roll exch
    ZeroNum pop\n    exch\n    realtime 86400000 mod add 86400000 add 86400000 mod\n
    \   dup 1000 mod  2 index 15 3 getinterval ZeroNum pop 1000 idiv \n    dup 60
    mod 2 index 12 2 getinterval ZeroNum pop 60 idiv\n    dup 60 mod 2 index 10 2
    getinterval ZeroNum pop 60 idiv\n    1 index 8 2 getinterval ZeroNum pop\n} bind
    def\n\n% ========= Test Code ============\n20080616 32940000 GetClock ==\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6522'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6522
  :user_name: kkobayashi
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2008/06/16 16:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">&gt; options(digits.secs=3)\r\n&gt; Sys.time()\r\n[1]
    \"2008-06-17 01:55:32.562 東京 (標準時)\"</pre>\n\t"
  :code: |
    options(digits.secs=3)
    Sys.time()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6525'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6525
  :user_name: だいら
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/468/
  :language: PHP
  :time: 2008/06/16 18:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>シンプルにしようと思ったんだが、あんまりシンプルにならなかった。</p>\n\n\t"
  :code: |
    date_default_timezone_set('Asia/Tokyo');
    $time=split(' ',microtime
    ());
    print(date('YmdHis').'.'.substr($time[0],2,3));
  :tags:
  - gbsdfg
  - sdhds
  :references:
    :url: 
    :title: 
- :id: '6526'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6526
  :user_name: だいら
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/468/
  :language: 
  :time: 2008/06/16 18:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>変な改行が入ってしまった・・・。\nmicrotime と ()); の間の改行は不要です。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6528'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6528
  :user_name: hogee
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/826/
  :language: Perl
  :time: 2008/06/16 23:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>標準モジュール(Perl v5.8.7) Time::HiResを使って書いてみました。</p>\n\n\t"
  :code: |
    use Time::HiRes;
    my ($wtime,$msec) = split(/\./ , Time::HiRes::time);
    my @t = localtime($wtime);
    printf("%04d%02d%02d%02d%02d%02d.%03d",
           $t[5]+1900,$t[4]+1,$t[3],$t[2],$t[1],$t[0],($msec/100));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6529'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6529
  :user_name: baal
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/827/
  :language: Scheme
  :time: 2008/06/17 14:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Gauche (Scheme) で SRFI-19 を使って書いてみました。\n\t"
  :code: |
    (use srfi-19)
    (define get-date-string (lambda ()
        (let ((date (current-date)))
            (string-append
                (date-&gt;string date "~Y~m~d~H~M~S") "."
                (format #f "~3,'0d" (quotient (date-nanosecond date) (expt 10 6)))))))
  :tags:
  - Gauche
  - SRFI-19
  - Scheme
  :references:
    :url: 
    :title: 
- :id: '6541'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6541
  :user_name: ポケット
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/828/
  :language: Other
  :time: 2008/06/20 21:13 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>現在時刻を表示できる関数から\n年月日時分秒をリストにして取り出しました。</p>\n\n\t"
  :code: "(defun todaydate () \n(princ (cdr (cdr (cdr(reverse (multiple-value-list
    (get-decoded-time))))))))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6542'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6542
  :user_name: ポケット
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/828/
  :language: 
  :time: 2008/06/20 21:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>間違えましたCommonLispです</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6543'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6543
  :user_name: ポケット
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/828/
  :language: Common
  :time: 2008/06/21 03:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "(defun todaydate () \n(princ (cdr (cdr (cdr(reverse (multiple-value-list
    (get-decoded-time))))))))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6558'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6558
  :user_name: pooq
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/06/23 03:13 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">「6!:0」は現在の日付・時刻のリストを返す。\r\n\r\n   6!:0\r\n2008
    6 23 15 55 21.345\r\n\r\n   dateString ''\r\n20080623155521.345\r\n\r\nデータは揃っているので、printfを使えばできあがりと思ったら、\r\nフォーマットの指定が、c言語なんかとは、だいぶ違うようで結局、\r\nデータを加工することになってしまいました。\r\n</pre>\n\t"
  :code: |
    load 'printf'
    dateString=:3 :0
    a =. 6!:0 ''
    '%.4d%.2d%.2d%.2d%.2d%.2d.%.3d' printf a,1e3*1|{:a
    )
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6559'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6559
  :user_name: fujidig
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/507/
  :language: 
  :time: 2008/06/23 05:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  あ、.roundしちゃだめだった。xx秒999500でxx秒1000とかなるよね\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6568'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6568
  :user_name: fujidig
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/507/
  :language: HSP
  :time: 2008/06/24 01:34 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  HSP 3.2 では strf で複数引数に対応します。\r<br>3.0、3.1では面倒ですが一つ一つ strf 関数を使った結果を連結していきます。\n\t"
  :code: |
    ; 3.0, 3.1
    mes strf("%04d",gettime(0))+strf("%02d",gettime(1))+strf("%02d",gettime(3))+strf("%02d",gettime(4))+strf("%02d",gettime(5))+strf("%02d",gettime(6))+"."+strf("%03d",gettime(7))
    ; 3.2
    mes strf("%04d%02d%02d%02d%02d%02d.%03d", gettime(0), gettime(1), gettime(3), gettime(4), gettime(5), gettime(6), gettime(7))
  :tags:
  - HSP3.2
  :references:
    :url: 
    :title: 
- :id: '6599'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6599
  :user_name: 99yen
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/591/
  :language: 
  :time: 2008/06/27 13:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  WinAPIのGetLocalTimeを使っています。\n\t"
  :code: |
    ●GetLocalTime({参照渡}LPSYSTEMTIME) =DLL("kernel32.dll","VOID GetLocalTime(LPSYSTEMTIME)")
    ●詳細時刻取得
        SYSTEMTIMEとは文字列
        Iとは整数
        BUFとは配列
        SYSTEMTIMEに16を確保 //16bit*8[byte]
        GetLocalTime(SYSTEMTIME)
        Iで0から7まで繰り返す
            BUF[I]=SYSTEMTIMEの(I*2+1)を"WORD"でバイナリ取得
        BUFで戻る

    ●時刻整形(T)
        BUFとは文字列
        Iとは整数
        T[0]=T[0]を4でゼロ埋め //年
        T[7]=T[7]を3でゼロ埋め //ミリ秒
        Iで1から6まで繰り返す
            T[I]=T[I]を2でゼロ埋め
        T[0]&amp;T[1]&amp;T[3]&amp;T[4]&amp;T[5]&amp;T[6]&amp;"."&amp;T[7]で戻る
        #"{T[0]}年{T[1]}月{T[3]}日{T[4]}時{T[5]}分{T[6]}.{T[7]}秒"で戻る

    テストエディタとはエディタ
    その幅は200
    1の間
        テストエディタ=時刻整形(詳細時刻取得)
        0秒待つ
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6712'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6712
  :user_name: yyamasak
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/722/
  :language: Tcl
  :time: 2008/07/09 10:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Tcl8.5の場合は、\nclock millisecondsが使える。\nclock microsecondsも使える。</p>\n<p>Tcl8.4の場合は、\n最近のActiveTclにバックポートとして入っているnewclock拡張を使う。</p>\n\n\t"
  :code: |
    set pit [clock milliseconds]
    set sec [clock format [string range $pit 0 9] -format %Y%m%d%H%M%S]]
    set msec [string range $pit 10 end]
    puts $sec.$msec
  :tags:
  - Tcl
  - milliseconds
  - newclock
  :references:
    :url: 
    :title: 
- :id: '6714'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6714
  :user_name: mc
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/405/
  :language: Common
  :time: 2008/07/11 02:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  CLでは、秒より細かい単位で時間を取得できますが、\r<br>その粒度は処理系依存のようです。\r<br>SBCLとCLISPに対応してみました。\r<br><br>(get-universal-time+millisecond-string)\r<br>;==&gt; \"20080711160627.511\"\n\t"
  :code: "(defconstant +unix-time-origin+ (encode-universal-time 0 0 0 1 1 1970 0))\n\n(defun
    get-universal-time+millisecond-string ()\n  (multiple-value-bind (time ms)\n      #+sbcl
    (sb-unix::system-real-time-values)\n      #+clisp (floor (get-internal-real-time)
    internal-time-units-per-second)\n      (multiple-value-bind (s m h d mo y)\n          (decode-universal-time
    (+ +unix-time-origin+ time))\n        (format nil \"~D~2,'0D~2,'0D~2,'0D~2,'0D~2,'0D.~A\"
    \n                y mo d h m s (truncated-millisecond-string ms)))))\n\n(defmacro
    truncated-millisecond-string (n)\n  (let* ((fig (1- (length \n                   (princ-to-string
    internal-time-units-per-second))))\n         (form `(format nil ,(format nil \"~~~D,'0D\"
    fig) ,n)))\n    (if (= 3 fig)\n        form\n        `(subseq ,form 0 3))))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6767'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6767
  :user_name: 匿名
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/07/19 12:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ActivePerl v5.10.0 build 1003ではsubstr($msec . '0' x 3, 0, 3)みたい。実装が違うということかな？</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6769'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6769
  :user_name: 匿名
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/07/20 12:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>&gt;クロックの分解能（精度）は15～16ミリ秒ほどのようです。\nタスクスイッチが15mSec前後で発生しておりGetSystemTime/GetLocalTimeまたGetTickCountもそのとき保持した時刻を更新することなく返すからそう見えるわけですね。\nループにして複数実行してみれば分解能15～16ミリ秒ほどと思えたところが保証されなくなることも見えるのでしょう。出題はミリ秒を得る方法を得たいのであってそれ以上のことは求めていないのでしょうけど。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6872'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/6872
  :user_name: lunlumo
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/813/
  :language: Scala
  :time: 2008/07/28 13:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>ほとんどJavaですが...。</p>\n</div>\n\t"
  :code: |
    import    java.util.Date
    import    java.text.SimpleDateFormat

    object Millisecond {
        def main(args:Array[String]):Unit = {
            Console.println(new SimpleDateFormat("yyyyMMDDHHmmss.S").format(new Date))
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7598'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/7598
  :user_name: pooq
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/606/
  :language: Other
  :time: 2008/09/08 21:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">識別子は大文字、小文字の区別はないのでした。\r\nprint はウィンドウを開きそこに表示します。またログファイルにも記録します。\r\nメインプログラムは、関数、サブルーチンの定義の直前までです。\r\n最初、関数定義の後ろに書いていて何故、実行できないのだろうと悩んでいました。\r\n</pre>\n\t"
  :code: |
    print date_string()　//=&gt;20080903143211.840

    FUNCTION date_string()
      GETTIME()
      RESULT = G_TIME_YY4 + G_TIME_MM2 + G_TIME_DD2 + G_TIME_HH2 + G_TIME_NN2 + G_TIME_SS2 + "." + G_TIME_ZZ2
    FEND
  :tags:
  - Windows
  - uwsc
  :references:
    :url: 
    :title: 
- :id: '7762'
  :parent_id: '184'
  :url: http://ja.doukaku.org/comment/7762
  :user_name: 匿名
  :user_url: /web/20081121124803/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/10/08 23:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>”DD”は”ｄｄ”でないと表示がおかしくなりませんか？</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
