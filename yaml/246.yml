---
:id: '246'
:title: 割り算の筆算
:comments:
- :id: '8785'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8785
  :user_name: rennos
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/1024/
  :language: 
  :time: 2009/04/05 09:35 GMT
  :vote_count: '7'
  :vote_score: '7'
  :body: "\r\n\t  <pre class=\"compact\">整数 n, m を与えれば、 n ÷ m の筆算を出力するような\r\nプロシージャ(関数)を創ってください。\r\n\r\nウィンドウに描画するもよし、\r\nコンソールに出力するもよし、です。\r\n</pre>\r\n\t"
  :code: ''
  :tags:
  - ５
  :references:
    :url: 
    :title: 
- :id: '8801'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8801
  :user_name: 匿名
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/4/
  :language: Scheme
  :time: 2009/04/11 21:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">gauche 0.8.13です。\r\n商の0になる桁の計算過程表示が冗長ですが・・・\r\n\r\ngosh&gt;
    (warizan 54321 5)\r\n  10864 ... 1\r\n  -----\r\n5)54321\r\n  5\r\n  -----\r\n
    \  4\r\n   0\r\n  -----\r\n   43\r\n   40\r\n  -----\r\n    32\r\n    30\r\n  -----\r\n
    \    21\r\n     20\r\n  -----\r\n      1\r\n#&lt;undef&gt;\r\n</pre>\n\t"
  :code: "(define (warizan n m)\n  (define (printf format-str . data)\n    (display
    (apply format format-str data)))\n\n  (define (width data)\n    (string-length
    (format \"~a\" data)))\n\n  (define (num-at n scale)\n    (remainder (quotient
    n scale) 10))\n\n  (define (div-num x scale)\n    (let ((q (quotient x scale)))\n
    \     (string-append\n       (make-string (- (+ (width n) (width m) 2)\n               (width
    q)\n               (width scale))\n            #\\space)\n       (number-&gt;string
    q))))\n\n  (define (div-line)\n    (string-append\n     (make-string (+ (width
    m) 1) #\\space)\n     (make-string (width n) #\\-)))\n\n  (let* ((/ quotient)
    (q (/ n m)))\n    (printf \"~a ... ~a\\n~a\\n~a)~a\\n\"\n        (div-num q 1)\n
    \       (remainder n m)\n        (div-line)\n        m \n        n)\n\n    (let
    loop ((s0 (expt 10 (- (width n) 1))))\n      (let ((s1 (if (= s0 1) 1 (/ s0 10))))\n
    \   (printf \"~a\\n~a\\n~a\\n\" \n        (div-num (* m s0 (num-at q s0)) s0)
    \   \n        (div-line)\n        (div-num (- n (* m (/ q s0) s0)) s1))\n    (if
    (&gt; s0 1)\n        (loop s1))))))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8803'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8803
  :user_name: sumim
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2009/04/13 09:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Squeak Smalltalk で。</p>\n\n\t"
  :code: "| printWarizan |\nprintWarizan := [:n :m |\n    | width line quo rem isFirst
    |\n\n    n := n printString.\n    m := m printString.\n    width := n size + m
    size + 1.\n    line := String new: n size + 1 withAll: $-.\n    quo := n // m.\n
    \    \n    Transcript cr.\n    {quo. line. m, ')', n} do: [:each |\n        Transcript
    cr; show: (each forceTo: width paddingStartWith: $ )].\n\n    rem := ''.\n    isFirst
    := true.\n    n size to: 1 by: -1 do: [:idx |\n        | digit |\n        rem
    := rem copyWith: (n atLast: idx).\n        digit := (quo atLast: idx ifAbsent:
    [$0]) asString.\n        digit ~= '0' ifTrue: [\n            | elems |\n            elems
    := {rem. width - idx + 1. digit * m. width - idx + 1. line. width}.\n            isFirst
    ifTrue: [isFirst := false. elems := elems allButFirst: 2].\n            elems
    pairsDo: [:each :len |\n                Transcript cr; show: (each forceTo: len
    paddingStartWith: $ )]].\n        rem := rem - (digit * m)].\n\n        Transcript
    cr; show: (n \\\\ m forceTo: width paddingStartWith: $ )].\n\nWorld findATranscript:
    nil.\nprintWarizan value: 123456 value: 77\n\n\"=&gt;\n     1603\n  -------\n77)123456\n
    \   77\n  -------\n    464\n    462\n  -------\n      256\n      231\n  -------\n
    \      25\n\"\n"
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '8806'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8806
  :user_name: greentea
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/573/
  :language: Python
  :time: 2009/04/14 07:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Pythonでゴリゴリと。\n文字列と整数の変換を繰り返したり、式が長かったり、無駄に条件分けがあったり、いろいろと汚いですが……</p>\n\n\t"
  :code: "#!/usr/bin/python                     \n# coding: utf-8                       \n\n#
    aわるbを実装します\na = 123456          \nb = 77              \n\n# 割り算の筆算を表示する関数\ndef
    warizan(a, b):          \n        # 数字の桁数を求める関数\n        digit = lambda x: len(str(x))\n\n
    \       ans_div = a // b\n        ans_mod = a % b \n\n        print (digit(a)
    + digit(b) + 1 - digit(ans_div)) * ' ' + \\\n                str(ans_div) + '
    ... ' + str(ans_mod)\n        print digit(b) * ' ' + (digit(a) + 1) * '-'\n        print
    str(b) + ')' + str(a)\n\n        start = (digit(a) + digit(b) + 1 - digit(ans_div))\n
    \       # 引く数\n        minuses = [int(str(ans_div)[i]) * b for i in range(digit(ans_div))]\n
    \       # 引かれる数\n        minuend = int(str(a)[0:digit(a)-digit(ans_div)+1])\n
    \       # 引いた後に下に下ろしてくる数字(aを一桁ずつ)\n        downs = [int(str(a)[i]) for i in range(digit(a)
    - digit(ans_div)+1, digit(a))]\n        downs.append(None)\n        for minus,
    down in zip(minuses, downs):\n                if minus != 0:\n                        print
    (start + 1 - digit(minus)) * ' ' + str(minus)\n                        print (start
    + 1 - max(digit(minuend), digit(minus))) * ' ' + \\ \n                                 (max(digit(minuend),
    digit(minus)) + 1) * '-'\n                start += 1\n                minuend
    = (minuend - minus)*10 + down if down != None else minuend - minus\n                if
    minuend &gt;= b or down == None:\n                        print (start + 1 - digit(minuend))
    * ' ' + str(minuend)\n\n\n# 関数呼び出し\nif __name__ == '__main__':\n        warizan(a,
    b)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8811'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8811
  :user_name: emasaka
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/852/
  :language: Bash
  :time: 2009/04/15 00:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">$ wari 12345 67\r\n     184\r\n  ------\r\n67)12345\r\n
    \   67\r\n  ------\r\n    564\r\n    536\r\n  ------\r\n     285\r\n     268\r\n
    \ ------\r\n      17\r\n</pre>\n\t"
  :code: |
    function wari() {
        local -i m=$1
        local -i n=$2
        local r=$(printf '%*d' ${#m} $((m / n)))
        write_head $m $n "$r"
        write_body $m $n "$r"
    }

    function write_head() {
        local m=$1
        local n=$2
        local r=$3

        repeat_char ' ' $((${#n} + 1))
        echo "$r"
        write_bar $m $n
        echo "$n)$m"
    }

    function write_body() {
        local m=$1
        local n=$2
        local r=$3
        local rest flag i

        for ((i = 0; i &lt; ${#r}; i++)) {
            local c=${r:i:1}
            rest="$rest${m:i:1}"
            if [[ "$c" == [1-9] ]]; then
                [ -n "$flag" ] &amp;&amp; printf '%*d\n' $((i + ${#n} + 2)) $rest
                printf '%*d\n' $((i + ${#n} + 2)) $((c * n))
                write_bar $m $n
                rest=$((rest - (c * n)))
                flag=1
            fi
        }
        [ -z "$flag" ] &amp;&amp; write_bar $m $n
        printf '%*d\n' $((i + ${#n} + 1)) $rest
    }

    function write_bar() {
        local m=$1
        local n=$2
        repeat_char ' ' ${#n}
        repeat_char - $((${#m} + 1))
        echo
    }

    function repeat_char() {
        local c=$1
        local n=$2
        while ((n--)); do
            echo -n "$c"
        done
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8812'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8812
  :user_name: airhead
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/1026/
  :language: JavaScript
  :time: 2009/04/15 08:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>JavaScriptで。手抜きHTMLに入れてありますが、このままでも大抵のブラウザで動くと思います。</p>\n<p>どうせすっきり書けないだろうしというわけで、整数範囲で割れるだけ割るのに加えて、商の各桁について「0」以外が得られてからf桁に達したら筆算を止める（f桁に達しないうちは小数点以下になっても続ける）、というのも入れてみました。で、予想以上にごちゃごちゃ。</p>\n\n\t"
  :code: "&lt;body&gt;\n&lt;script&gt;\nfunction divOnPaper(n, m, maxFigs) {\n    n
    = Math.floor(Number(n)); n = (isNaN(n)||n &lt; 1) ? 1 : n;\n    m = Math.floor(Number(m));
    m = (isNaN(m)||m &lt; 1) ? 1 : m;\n    maxFigs = Math.floor(Number(maxFigs));
    maxFigs = (isNaN(maxFigs)||maxFigs &lt; 0) ? 0 : maxFigs;\n\n    var q = [0],
    strQ = \"\", strN = n.toString(), qm, r = 0, exp = strN.length - 1;\n    var limitToInt
    = !maxFigs, firstFig = false;\n    var note = maxFigs ? \"(up to \" + maxFigs
    + \" figures)\" : \"(within integer)\",\n        rowQ, rowMN = insSP(m) + \" )
    \" + insSP(n), rowsQMR = \"\", rowR0, rowR1;\n\n    while ((r || strN) &amp;&amp;
    (limitToInt ? exp &gt;= 0 : maxFigs)) {\n        r *= 10;\n        if (strN) {\n
    \           r += Number(strN.substring(0, 1));\n            strN = strN.substring(1);\n
    \       }\n\n        if (r &gt;= m) {\n            rowR1 =       repeatStr(\"
    \", (rowMN.length - 2 * exp - insSP(r ).length)) + insSP(r );\n            if
    (firstFig) {rowsQMR += rowR1.substring(rowR0.length) + \"\\n\";} \n\n            qm
    = r - r % m;\n            q[exp] = qm / m;\n            r = r % m;\n\n            rowsQMR
    += repeatStr(\" \", (rowMN.length - 2 * exp - insSP(qm).length)) + insSP(qm) +
    \"\\n\";\n            rowsQMR += repeatStr(\" \", (rowMN.length - 2 * exp - insSP(qm).length)
    - 1);\n            rowsQMR += repeatStr(\"-\", (insSP(qm).length) + 2) + \"\\n\";\n
    \           rowR0 =       repeatStr(\" \", (rowMN.length - 2 * exp - insSP(r ).length))
    + insSP(r );\n            rowsQMR += rowR0;\n\n            firstFig = true;\n
    \       } else {\n            if (firstFig || exp &lt; 0) q[exp] = 0;\n        }\n\n
    \       exp--; \n        if (firstFig) maxFigs--;\n    }\n\n    var i = exp; while
    (i &gt; 0) q[i--] = 0;\n\n    i = q.length - 1; while (i &gt;= 0) strQ += q[i--].toString();\n
    \   if (typeof q[i] == 'number') strQ += \".\";\n    while (typeof q[i] == 'number')
    strQ += q[i--].toString();\n\n    var summary = \"n = m * q + r \" + note + \"\\n\"
    +\n        \"n: \" + n + \"\\n\" +\n        \"m: \" + m + \"\\n\" +\n        \"q:
    \" + strQ + \"\\n\" +\n        \"r: \" + Number(r + \".\" + strN + \"e\" + (exp
    + 1));\n    rowQ = repeatStr(\" \", (rowMN.length - insSP(strQ).match(/(?:\\d|
    )+/)[0].length)) + insSP(strQ);\n    rowQ += \"\\n\" + repeatStr(\" \", insSP(m).length
    + 1) + repeatStr(\"-\", (rowQ.length - insSP(m).length));\n\n    return summary
    + \"\\n\\n\" +rowQ + \"\\n\" + rowMN + \"\\n\" + rowsQMR + \"\\n\\n\\n\";\n\n
    \   function insSP(str) {\n        return str.toString().replace(/(\\d)(?=\\d)/g,
    \"$1 \");\n    }\n    function repeatStr(str, num) {\n        return (new Array(num+1)).join(str);\n
    \   }\n}\n&lt;/script&gt;\n\n&lt;form&gt;\nn: &lt;input id=\"n\" type=\"text\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\nm:
    &lt;input id=\"m\" type=\"text\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\nf:
    &lt;input id=\"f\" type=\"text\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\n&lt;input
    id=\"calc\" type=\"button\" value=\"calc\"&gt;&lt;br&gt;\n&lt;textarea id=\"rslt\"
    style=\"font-size: 0.8em; line-height: 0.9em; width: 100%; height: 30em;\"&gt;&lt;/textarea&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\nfunction
    calc(){\n    n = document.getElementById(\"n\").value;\n    m = document.getElementById(\"m\").value;\n
    \   f = document.getElementById(\"f\").value;\n    document.getElementById(\"rslt\").value
    = divOnPaper(n, m, f);\n}\ndocument.getElementById(\"calc\").onclick = calc;\ndocument.write(\"&lt;h4&gt;examples:&lt;/h4&gt;&lt;pre
    style=\\\"font-size: 0.8em; line-height: 0.9em;\\\"&gt;\" +\n    divOnPaper(1000,
    71) + \"\\n\" +\n    divOnPaper(1000, 71, 4) + \"\\n\" +\n    divOnPaper(123456789,
    57, 0) + \"\\n\" +\n    divOnPaper(123456789, 57, 2) + \"\\n\" +\n    divOnPaper(1000,
    7, 0) + \"\\n\" +\n    divOnPaper(1000, 7, 2) + \"\\n\" +\n    divOnPaper(1000,
    7, 3) + \"\\n\" +\n    divOnPaper(1000, 7, 4) + \"\\n\" +\n    \"&lt;/pre&gt;\");\n&lt;/script&gt;\n&lt;/body&gt;\n"
  :tags: []
  :references:
    :url: /web/20100628133530/http://slashdot.jp/~airhead/journal/473120
    :title: 'memo: 割り算の筆算'
- :id: '8826'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8826
  :user_name: sawat
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/322/
  :language: Java
  :time: 2009/04/16 05:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Javaで。割とコンパクトに書けたかな?\r\n------\r\n実行結果\r\n\r\n
    \   10775\r\n   ------\r\n13)140077\r\n   13\r\n   ------\r\n    100\r\n     91\r\n
    \   -----\r\n      97\r\n      91\r\n      ---\r\n       67\r\n       65\r\n       --\r\n
    \       2</pre>\n\t"
  :code: |
    package doukaku;

    import java.io.*;

    public class Warizan {

       public static void main(String[] args) {
          print(new PrintWriter(new OutputStreamWriter(System.out)),140077, 13);
       }

       private static int xxx(int a) {
          return (a &lt; 10) ? 1 : 10 * xxx(a / 10);
       }

       public static void print(PrintWriter w, int a0, int b) {
          int a = a0;
          int indent = ("" + b).length() + 1;

          String sp = (b + ")" + a).replaceAll(".", " ");
          String bar = sp.replace(' ', '-');

          w.printf("%s%" + ("" + a).length() + "d%n", sp.substring(0, indent), a / b);

          w.printf("%s%s%n", sp.substring(0, indent), bar.substring(indent));
          for (int c = xxx(a); c != 0; c /= 10) {
             final int d = a / c;
             final int e = (d / b) * b;

             if (e == 0) continue;

             final String ds = "" + d;

             if (a == a0) w.printf("%d)%d%n", b, a);
             else w.printf("%s%s%n", sp.substring(0, indent), ds);

             w.printf("%s%" + ds.length() + "d%n", sp.substring(0, indent), e);
             w.printf("%s%s%n", sp.substring(0, indent), bar.substring(indent));

             indent += ds.length() - Integer.toString(d - e).length();
             if(d == e) indent++;
             a -= e * c;
          }
          w.printf("%" +sp.length() +"d%n",  a);
          w.flush();
       }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8830'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8830
  :user_name: Songmu
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/763/
  :language: Perl
  :time: 2009/04/18 08:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>15桁までしか対応しません。</p>\n\n\t"
  :code: "#!/usr/bin/perl\nuse strict;\nuse warnings;\n\ndiv(@ARGV);\n\nsub div{\n
    \   return if scalar @_ != 2;\n    for(@_){ return unless /^[1-9]\\d*$/; }\n    my
    ($x, $y) = @_;\n    \n    my $line_length = length($x) + length($y) + 1;\n    my
    $ans = int($x / $y);\n    my $mod = $x % $y;\n    my $field_length = my $offset
    = length($y);\n    $field_length++;\n    \n    printf \"%${line_length}d\\n\",
    $ans;\n    print  ' ' x $offset . '-' x ($line_length - $offset) .\"\\n\";\n    print
    \ \"$y)$x\\n\";\n    \n    return if $ans == 0;\n    \n    my @ans_nums = split
    //,$ans;\n    my @x = split //,$x;\n    my $dest_minus = '';\n    my $not_first_line
    = 0;\n    while(defined(my $ans_num = shift @ans_nums) &amp;&amp; $offset++){\n
    \       next if $ans_num == 0;\n        \n        my $src_minus = $ans_num * $y;\n
    \       $dest_minus .= shift @x while ($dest_minus || 0) &lt; $src_minus;\n        \n
    \       printf ' ' x $offset . \"%${field_length}d\\n\", $dest_minus if $not_first_line++;\n
    \       printf ' ' x $offset . \"%${field_length}d\\n\", $src_minus;\n        print
    \ ' ' x $offset . '-' x ($line_length - $offset) .\"\\n\";\n        \n        $dest_minus
    -= $src_minus;\n            $dest_minus = '' if $dest_minus == 0;\n    }\n    printf
    \"%${line_length}d\\n\", $mod;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8840'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8840
  :user_name: making
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/1038/
  :language: Common
  :time: 2009/04/26 06:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">(warizan 9876 11)の結果　# ずれて見えるけど端末上では一応揃っている．．．\r\n\r\n
    \     897 ... 9\r\n   -----\r\n11 |9876\r\n    88\r\n   -----\r\n    107\r\n     99\r\n
    \  -----\r\n      86\r\n      77\r\n   -----\r\n       9</pre>\n\t"
  :code: "(defun warizan (n m)\n  (let* ((ret (floor (/ n m)))\n     (tochu n)     \n
    \    (calc-keta (lambda (x) (if (plusp x) (floor (log x 10)) 0)))\n     (string-concatenate
    (lambda (x &amp;optional (s \" \")) (apply 'concatenate 'string (make-list x :initial-element
    s))))\n     (keta (funcall calc-keta n))\n     (space-num (+ 3 (funcall calc-keta
    m)))\n     (keisen (format nil \"~a~a~%\" (funcall string-concatenate (1- space-num))
    (funcall string-concatenate (+ 2 (funcall calc-keta n)) \"-\")))\n     )\n    (format
    t \"~a~d ... ~d~%\" (funcall string-concatenate (- (+ space-num keta) (funcall
    calc-keta ret))) ret (- n (* m ret)))\n    (format t keisen)\n    (format t \"~d
    |~d~%\" m n)\n    (dotimes (i (1+ keta))\n      (let* ((kurai (- keta i))\n         (p
    (* (floor (/ ret (expt 10 kurai))) (expt 10 kurai)))\n         (c (* p m))\n         )\n
    \   (decf tochu c)\n    (decf ret p)\n    (when (&gt; c 0)\n      (format t \"~a~d~%\"
    (funcall string-concatenate (- (+ space-num keta) (funcall calc-keta c))) (floor
    (/ c (expt 10 kurai))))\n      (format t keisen)\n      (format t \"~a~d~%\" (funcall
    string-concatenate (- (+ space-num keta) (funcall calc-keta tochu))) (floor (/
    tochu (expt 10 (if (plusp kurai) (- kurai 1) kurai)))))\n      )\n    )\n      )\n
    \   )\n  )\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8879'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8879
  :user_name: egtra
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/759/
  :language: C
  :time: 2009/05/03 11:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ふと無名関数が使いたくなったので、Visual Studio 2010 CTP付属のコンパイラを使いました。しかし、出来上がったものを見てみれば、ラムダ要らないのでは？という仕上がりですが、このまま投稿してしまいます。</p>\n<pre
    class=\"literal-block\">\n除数・被除数を入力してください。\n8956\n12\n\n   0746\n   ----\n12)8956\n
    \  0\n   ----\n   89\n   84\n   ----\n    55\n    48\n   ----\n     76\n     72\n
    \  ----\n      4\n答え合わせ: 8956 / 12の商・剰余は746 … 4\n</pre>\n\n\t"
  :code: "#include &lt;iostream&gt;\n#include &lt;sstream&gt;\n#include &lt;iomanip&gt;
    // setw\n#include &lt;string&gt;\n#include &lt;cmath&gt; // log10\n#include &lt;cstdlib&gt;
    // div\n\nint digit(int n)\n{\n    return static_cast&lt;int&gt;(std::log10(static_cast&lt;double&gt;(n)))
    + 1;\n}\n\nstd::ostream&amp; print_c_n(std::ostream&amp; os, char c, unsigned
    n)\n{\n    for (unsigned i = 0; i &lt; static_cast&lt;unsigned&gt;(n); ++i)\n
    \   {\n        os &lt;&lt; c;\n    }\n    return os;\n}\n\nvoid print_divition(int
    x, int y)\n{\n    using namespace std;\n    ostringstream os;\n    os &lt;&lt;
    y &lt;&lt; ')';\n    unsigned left = static_cast&lt;unsigned&gt;(os.tellp());\n
    \   os &lt;&lt; x &lt;&lt; '\\n';\n    print_c_n(cout, ' ', left);\n    int digit_x
    = digit(x); // 十進法での桁数\n\n    // []の中は、外側の変数を「=」値渡し、ただしosのみ「&amp;」参照渡しで受け取るの意\n
    \   auto nextDigit = [=, &amp;os](int r, int i) -&gt; int \n    {\n        int
    u = x / static_cast&lt;int&gt;(pow(10., digit_x - i - 1)) % 10;\n        int t
    = r * 10 + u;\n        if (i != 0)\n            os &lt;&lt; u &lt;&lt; '\\n';\n
    \       div_t d = div(t, y);\n        std::cout &lt;&lt; d.quot;\n        print_c_n(os,
    ' ', left) &lt;&lt; std::setw(i + 1) &lt;&lt; d.quot * y &lt;&lt; '\\n';\n        print_c_n(os,
    ' ', left);\n        print_c_n(os, '-', digit_x) &lt;&lt; '\\n';\n        print_c_n(os,
    ' ', left) &lt;&lt; std::setw(i + 1) &lt;&lt; d.rem;\n        return d.rem;\n
    \   };\n    int r = 0;\n    for (int i = 0; i &lt; digit_x; i++)\n    {\n        r
    = nextDigit(r, i);\n    }\n    cout &lt;&lt; '\\n';\n    print_c_n(cout, ' ',
    left);\n    print_c_n(cout, '-', digit_x);\n    cout &lt;&lt; '\\n' &lt;&lt; os.str()
    &lt;&lt; '\\n';\n    div_t d = div(x, y);\n    cout &lt;&lt; \"答え合わせ: \" &lt;&lt;
    x &lt;&lt; \" / \" &lt;&lt; y &lt;&lt; \"の商・剰余は\" &lt;&lt; d.quot &lt;&lt; \"
    … \" &lt;&lt; d.rem &lt;&lt; endl;\n}\n\nint main()\n{\n    int m, n;\n    std::cout
    &lt;&lt; \"除数・被除数を入力してください。\" &lt;&lt; std::endl;\n    std::cin &gt;&gt; m &gt;&gt;
    n;\n    std::cout &lt;&lt; '\\n';\n    print_divition(m, n);\n}\n"
  :tags:
  - C++0x
  :references:
    :url: 
    :title: 
- :id: '8966'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/8966
  :user_name: ワサビ
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/1045/
  :language: OCaml
  :time: 2009/05/21 11:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">n と m を直接計算せずに求めています。\r\n\r\n&gt; divide 123456
    77;;\r\n     1603\r\n  -------\r\n77)123456\r\n    77\r\n   ----\r\n    464\r\n
    \   462\r\n    -----\r\n      256\r\n      231\r\n      ---\r\n       25\r\n\r\nval
    it : unit = ()</pre>\n\t"
  :code: "#light\n\nlet divide n m =\n    let digits =\n        Seq.unfold (fun x
    -&gt; if x &gt; 0 then Some (x % 10, x / 10) else None)\n        &gt;&gt; Seq.to_list
    &gt;&gt; List.rev\n\n    let rec calc result index remainder = function\n        |
    [] -&gt; (index - 1, remainder, None)::result |&gt; List.rev\n        | n'::ns
    -&gt;\n            let dividend = remainder * 10 + n'\n            calc ((index,
    dividend, Some (dividend / m))::result) (index + 1) (dividend % m) ns\n\n    let
    print result =\n        let length x = (string x).Length\n        let quotient
    = \n            result |&gt; List.fold_left (fun sum (_, _, quot) -&gt;\n                match
    quot with Some q -&gt; sum * 10 + q | None -&gt; sum) 0\n        let result' =\n
    \           result |&gt; List.filter (function _, _, Some q when q = 0 -&gt; false
    | _, _, _ -&gt; true)\n        let indent = length m + 1\n        let numbers
    =\n            result' |&gt; List.mapi (fun i (index, dividend, quot) -&gt;\n
    \               let indent' = indent + index\n                (if i = 0 then \"\"
    else sprintf \"%*d\\n\" indent' dividend) ^\n                    (match quot with
    None -&gt; \"\" | Some q -&gt; sprintf \"%*d\\n\" indent' (m * q)))\n        let
    lines =\n            result' |&gt; Seq.pairwise |&gt; Seq.to_list\n            |&gt;
    List.map (fun ((index, dividend, _), (index', _, _)) -&gt;\n                new
    string('-', index' - index + length dividend) |&gt; sprintf \"%*s\\n\" (indent
    + index'))\n        let width = indent + length n\n        printfn \"%*d\" width
    quotient\n        new string('-', length n + 1) |&gt; printfn \"%*s\" width\n
    \       printfn \"%d)%d\" m n\n        List.map2 (^) (\"\"::lines) numbers |&gt;
    String.concat \"\" |&gt; printfn \"%s\"\n\n    digits n |&gt; calc [] 1 0 |&gt;
    print\n"
  :tags:
  - F#
  :references:
    :url: 
    :title: 
- :id: '9188'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/9188
  :user_name: onoue
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/1066/
  :language: Haskell
  :time: 2009/06/17 02:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">*Main&gt; :main 222222 111\r\n      2002\r\n
    \  -------\r\n111)222222\r\n    222\r\n    ------\r\n       222\r\n       222\r\n
    \      ---\r\n         0\r\n</pre>\n\t"
  :code: "import Data.List                ( mapAccumL, unfoldr )\nimport System.Environment
    \      ( getArgs )\n\nlongDivision :: Int -&gt; Int -&gt; String\nlongDivision
    n m = unlines $ showProcess n m $ getComponents n m\n\ngetComponents :: Int -&gt;
    Int -&gt; (Int, [Int], [Int], Int)\ngetComponents n m = (pack qs, ps, rs', last
    rs)\n  where\n    ns = unpack n\n    (qs, ps, rs) = unzip3 $ snd $ mapAccumL dm
    0 ns\n    dm acc x = let { (q, r) = (10*acc + x) `divMod` m } in (r, (q, q*m,
    r))\n    rs' = [head ns] ++ zipWith ((+) . (10*)) (init rs) (tail ns)\n\nshowProcess
    :: Int -&gt; Int -&gt; (Int, [Int], [Int], Int) -&gt; [String]\nshowProcess n
    m (q, ps, rs, r) = quot_divs ++ div_steps ++ remainder\n  where\n    [w_n, w_m]
    = map (length . show) [n, m]\n    w_mn = w_m + 1 + w_n\n\n    quot_divs = [ showR
    q, divLineR (w_n+1), show m ++ \")\" ++ show n ]\n    div_steps = tail $ concat
    $ zipWith3 mkStep rs ps [w_m+2..]\n    remainder = [ showR r ]\n\n    mkStep _
    0 _ = []\n    mkStep r p k = [ showAt k r, showAt k p, divLineR (w_mn - k + length
    (show r)) ]\n    \n    showR x    = rjustify w_mn $ show x\n    divLineR w = rjustify
    w_mn $ replicate w '-'\n\n-- misc\nrjustify w xs = replicate (w - length xs) '
    ' ++ xs\nshowAt   w x  = rjustify w $ show x\n\npack   = foldl ((+) . (10*)) 0\nunpack
    = reverse . unfoldr phi\n  where\n    phi 0 = Nothing\n    phi n = Just $ swap
    $ n `divMod` 10\n\nswap (x,y) = (y,x)\n\nmain = do\n  args &lt;- getArgs\n  let
    n:m:_ = map read args\n  putStr $ longDivision n m\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9237'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/9237
  :user_name: matarillo
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/136/
  :language: C
  :time: 2009/06/24 03:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">出力例 (535325 / 423)\r\n\r\n 423)535325\r\n1000
    423000\r\n-----------\r\n     112325\r\n 200  84600\r\n-----------\r\n      27725\r\n
    \ 60  25380\r\n-----------\r\n       2345\r\n   5   2115\r\n-----------\r\n        230\r\n</pre>\n\t"
  :code: |
    static void Devide(int n, int m)
    {
      int q = n / m;
      int lw = (int)Math.Log10(q &gt; m ? q : m) + 1;
      string lf = "{0," + lw.ToString() + "}";
      int rw = (int)Math.Log10(n) + 1;
      string rf = "{0," + rw.ToString() + "}";
      string hl = new string('-', lw + 1 + rw);
      Console.Write(lf, m);
      Console.Write(')');
      Console.WriteLine(rf, n);

      for (int i = 0; i &lt; lw; i++)
      {
        int d = lw - 1 - i;
        int u = (int)Math.Pow(10, d);
        int c = n / (u * m);
        if (c == 0) continue;
        int a = c * u;
        int b = a * m;
        Console.Write(lf, a);
        Console.Write(' ');
        Console.WriteLine(rf, b);
        Console.WriteLine(hl);
        n -= b;
        Console.Write(lf, ' ');
        Console.Write(' ');
        Console.WriteLine(rf, n);
      }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9346'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/9346
  :user_name: konn
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/100/
  :language: Ruby
  :time: 2009/07/12 10:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">かなり愚直に実装してみました。\r\n\r\n $ ruby divide.rb 312456
    521\r\n        599\r\n    -------\r\n 521)312456\r\n     2605\r\n     -----\r\n
    \     5195\r\n      4689\r\n      -----\r\n       5066\r\n       4689\r\n       ----\r\n
    \       377\r\n \r\n       2002\r\n    -------\r\n 111)222222\r\n      222\r\n
    \     ----\r\n         2\r\n         0\r\n         --\r\n         22\r\n          0\r\n
    \        ---\r\n         222\r\n         222\r\n         ---\r\n          0</pre>\n\t"
  :code: |
    def divide(m, n) # m / n
      digit = keta(m) - keta(n)
      until (rem = m / (10**digit)) &gt; n
        digit -= 1
      end
      dend = rem
      m1 = m % (10**digit)
      history = []
      digit.downto(0){|i|
        base  = 10 ** (i-1)
        quot  = dend / n
        rem   = dend % n
        history &lt;&lt; [dend, quot, quot*n]
        dend = rem * 10 + m1 / base
        m1 %= base
      }
      (d,_,h) = history[-1]
      return history &lt;&lt; [d - h, 0, 0]
    end

    def keta(n)
      return 1 if n == 0
      return Math.log10(n.to_i).floor + 1
    end

    if $0 == __FILE__
      m, n ,= ARGV.map(&amp;:to_i)
      mketa = keta(m)
      nketa = keta(n)
      rslt = divide(m,n)
      tochu, last = rslt[0..-2], rslt[-1]
      width = mketa+nketa+1
      printf "%#{width}s\n", tochu.map{|a|a[1]}.join("")
      puts (" "*nketa)+("-"*(mketa+1))
      printf "%d)%d\n", n, m
      st = tochu.size - 1
      tochu.each_with_index{|(dend, quot, hiku), ind|
        k = nketa*2+2+ind
        if ind &gt; 0
          printf "%#{k}d\n", dend
        end
        printf "%#{k}d\n", hiku
        hosei = st == ind ? 0 : 1
        hw = keta(dend) + hosei
        printf "%#{k+hosei}s\n", "-" * hw
      }
      printf "%#{width}d\n", last[0]
    end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9590'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/9590
  :user_name: uehaj
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/959/
  :language: Groovy
  :time: 2009/09/20 08:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n<p><a href=\"/web/20100628133530/http://ja.doukaku.org/comment/8826/\">sawatさんによるJava版</a>の移植です。\n</p>\n\n\n\n\t"
  :code: "int xxx(int a) {\n  (a &lt; 10) ? 1 : 10 * xxx((int)a / 10);\n}\n\nInteger.metaClass.width
    = {(delegate as String).size()}\nInteger.metaClass.padLeft = {n-&gt;(delegate
    as String).padLeft(n)}\n\ndef printexp(indent, exp, width)  {\n  println(' '*indent
    + exp.padLeft(width))\n  println(' '*indent + '-'*width)\n}\n\ndef waru(int a0,
    int b) {\n  int a = a0\n  int indent = b.width() + 1\n\n  printexp(indent, (int)a/b,
    a.width())\n\n  for (int c = xxx(a); c != 0; c /= 10) {\n    int d = a / c\n    int
    e = (d / b) * b\n    if (e == 0) continue\n    \n    if (a == a0) println(b+\")\"+a)\n
    \   else println('&gt;' * indent+d)\n\n    printexp(indent, e, d.width())\n\n
    \   indent += d.width() - (d - e).width()\n    if (d == e) indent++\n    a -=
    e * c\n  }\n  println(a.padLeft(b.width()+a0.width()+1))\n}\n\nwaru(140077, 13)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9622'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/9622
  :user_name: tsubo
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/1106/
  :language: Scala
  :time: 2009/10/04 07:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Scalaらしく(？)作ってみました。#過去の課題でこっそり勉強中です。。\r\n\r\n--
    実行結果\r\n123456\r\n77\r\n     1603\r\n   ------\r\n77)123456\r\n    77\r\n   ------\r\n
    \   464\r\n    462\r\n   ------\r\n      256\r\n      231\r\n   ------\r\n       25\r\n</pre>\n\t"
  :code: |
    object DivCalc {
        def main(args : Array[String]) : Unit = {
            val n = Console.in.readLine.toLong
            val m = Console.in.readLine.toLong
            Div(n, m).print
          }
    }

    case class Div(n:Long, m:Long) {
        def print = {
            println( idt + fmt(ans) )
            println( idt + line )
            println( m + ")" + fmt(n) )
            calc.take(1).foreach( x =&gt; println( idt + fmt(x._2, x._3) ) )
            calc.drop(1).foreach( x =&gt; {
                println( idt + line )
                println( idt + fmt(x._1, x._3) )
                println( idt + fmt(x._2, x._3) )
            })
            if (calc.isEmpty) println( idt + fmt(0) )
            println( idt + line )
            println( idt + fmt(mod) )
        }

        def len(a:Any) = a.toString.length
        def fmt(x:Any):String = fmt(x, 0)
        def fmt(x:Any, i:Int):String = idt(" ", len(n) - len(x) - i) + x
        def line = idt("-", len(n))
        def idt:String = idt(" ", len(m) + 1)
        def idt(c:String, i:Int):String = c * i

        val ans:Long = n / m
        lazy val mod:Long = n % m
        lazy val calc:List[(Long, Long, Int)] = {
            def process(n:Long, m:Long, c:Int):List[(Long, Long, Int)] = {
                val pow = Math.pow(10, c).toLong
                val x = if (pow == 0) { 0L } else { n / pow / m * m }
                (n,m,c,x) match {
                    case (_,_,c,_) if (c &lt; 0) =&gt; Nil
                    case (n,m,c,0) =&gt; process(n, m, c-1)
                    case (n,m,c,x) =&gt; (n / pow, x, c) :: process(n - x * pow, m, c-1)
                }
            }
            process(n, m, len(n))
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9626'
  :parent_id: '246'
  :url: http://ja.doukaku.org/comment/9626
  :user_name: T_GYOUTEN
  :user_url: /web/20100628133530/http://ja.doukaku.org/user/1107/
  :language: Other
  :time: 2009/10/09 18:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">F#で愚直な実装です。\r\n&gt; DivByHand 222222 111;;\r\n
    \     2002\r\n    ------\r\n111)222222\r\n    222\r\n    ------\r\n       222\r\n
    \      222\r\n    ------\r\n         0</pre>\n\t"
  :code: "//bDigDisp 3 \"k\" 2　で\"   kk\"を表示\nlet bDigDisp padCount str strCount  =\n
    \  let rec sub subStr count limit res =\n        if count = limit then res\n        else
    \ sub subStr (count + 1) limit (res + subStr)\n   printfn \"%s\" ((sub \" \" 0
    padCount \"\") + (sub str 0 strCount \"\"))  \n\n//numToList 1234　で[1;2;3;4]が返る\nlet
    numToList n  =\n    let rec NtlSub m res =\n        if m = 0 then \n            res\n
    \       else\n            NtlSub (m/10) ((m - (m/10)*10)::res)\n    NtlSub n []\n\nlet
    DivByHand num div =\n    let numList = numToList num\n    let divPadLen = (div.ToString()).Length
    + 1 \n    let numLen = (num.ToString()).Length\n    bDigDisp (divPadLen + numLen
    - ((num/div).ToString()).Length) ((num/div).ToString()) 1 \n    bDigDisp divPadLen
    \"-\" numLen \n    printfn \"%d)%d\"div num        \n    let rec dbhSub (carryIn:int)
    (remDigLst:int list)   (padLen :int)   (isFirst : bool)=\n        match remDigLst
    with\n        | [] -&gt; bDigDisp  (padLen - (carryIn.ToString()).Length)   (carryIn.ToString())
    1\n        | hd::tl -&gt; let targetNum = 10*carryIn + hd\n                    if
    targetNum &lt; div then\n                        dbhSub targetNum tl (padLen +
    1) isFirst\n                    else\n                        let quoTemp = targetNum/div\n
    \                       let subNumStr = (div*quoTemp).ToString()\n                        if(isFirst
    &lt;&gt; true) then \n                            bDigDisp (padLen - (targetNum.ToString()).Length
    + 1 ) (targetNum.ToString()) 1 \n                        bDigDisp (padLen - subNumStr.Length
    + 1 ) subNumStr 1 \n                        bDigDisp divPadLen \"-\" numLen \n
    \                       dbhSub (targetNum % div) tl (padLen + 1)  false\n    dbhSub
    0 numList divPadLen true\n"
  :tags:
  - F#
  :references:
    :url: 
    :title: 
