---
:id: '207'
:title: LL Golf Hole 9 - トラックバックを打つ
:comments:
- :id: '7563'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7563
  :user_name: takano32
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/148/
  :language: Ruby
  :time: 2008/09/04 20:14 GMT
  :vote_count: '4'
  :vote_score: '0'
  :body: "\r\n\t  \n<p><a href=\"/web/20090103142830/http://ll.jus.or.jp/2008/blog/archives/38\">LL
    Golf Hole 9のリリースをアナウンスしているエントリ</a>にトラックバックを打ってください(<a href=\"/web/20090103142830/http://ll.jus.or.jp/2008/blog/archives/38/trackback\">トラックバックURL</a>)。マシンガンのようには打たないでください。ただし、このエントリにはスパムフィルタが搭載されているため、寄せることはできてもカップインできないかもしれません。その場合は<a
    href=\"/web/20090103142830/http://ja.doukaku.org/user/148/\">takano32</a>が用意させていただきました<a
    href=\"/web/20090103142830/http://d.hatena.ne.jp/takano32/20080905\">打ちっ放し場</a>にてガンガン試し打ちください(<a
    href=\"/web/20090103142830/http://d.hatena.ne.jp/takano32/20080905\">トラックバックURL</a>)。\n</p>\n<p>余力のあるものは感想を<a
    href=\"/web/20090103142830/http://ll.jus.or.jp/2008/\">公式ブログ</a>の<a href=\"/web/20090103142830/http://ll.jus.or.jp/2008/blog/archives/35\">感想エントリ</a>にトラックバックくしてください。\n
    \  余力がなくても感想をトラックバックしてくれるとスタッフがよろこびます。\n</p>\n\n\n\r\n\t"
  :code: |
    #!/usr/bin/env ruby
    require 'net/http'
    require 'uri'
    uri = URI.parse('http://ll.jus.or.jp/2008/blog/archives/38/trackback')
    Net::HTTP.start(uri.host) do |http|
        ping = "title=LL+Futureに行ってきた！&amp;" +
            "excerpt=参加者としてもLL+Futureおもしろかったよ！¥n" +
            "でも、司会ぐだぐだですみません。次から頑張ります！&amp;" +
            "url=http://ja.doukaku.org/207/&amp;" +
            "blog_name=LL+Golf+Hole+9"
        response, = http.post(uri.path, ping)
        puts response.body
    end
  :tags:
  - LLGolf
  - Ruby
  - Trackback
  - llfuture
  :references:
    :url: /web/20090103142830/http://lowlife.jp/yasusii/stories/8.html
    :title: トラックバック技術仕様書
- :id: '7564'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7564
  :user_name: turugina
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/760/
  :language: Perl
  :time: 2008/09/05 02:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">お題がGolf向けじゃないとか..\r\n\r\n後、さすがに一行では表示がえらいことになるので、適当に改行</pre>\n\t"
  :code: |
    use LWP::UserAgent;
    print LWP::UserAgent-&gt;new-&gt;post(
      'http://ll.jus.or.jp/2008/blog/archives/38/trackback',
      {qw{blog_name LLGolfHole9 title llfuture url http://ja.doukaku.org/207
        excerpt LLGolf最終ホールを打ってみた}})-&gt;content
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7565'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7565
  :user_name: あにす
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2008/09/05 03:37 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>今回は短くしなくて良いのですね。\nこういう遊び心のあるお題、好きです。</p>\n\n\t"
  :code: |
    using System;
    using System.Collections.Specialized;
    using System.Net;
    using System.Text;

    class Program {
        static void Main(string[] args) {
            //接続の作成
            WebClient webClient = new WebClient();
            webClient.Headers.Add("Content-Type", "application/x-www-form-urlencoded");

            //送信パラメータ作成
            NameValueCollection postValues = new NameValueCollection();
            postValues.Add("title",
                "LL Golf Hole 9 - トラックバックを打つ");
            postValues.Add("excerpt",
                "あにすです。面白いお題の数々、楽しませて頂きました。");
            postValues.Add("url",
                "http://ja.doukaku.org/207/");
            postValues.Add("blog_name",
                "どう書く？org");

            //トラックバック送信
            byte[] r = webClient.UploadValues("http://ll.jus.or.jp/2008/blog/archives/38/trackback", postValues);

            //テスト用
            //byte[] r = webClient.UploadValues("http://d.hatena.ne.jp/takano32/20080905", postValues);

            //後始末
            webClient.Dispose();

            //レスポンス確認
            Console.WriteLine(Encoding.UTF8.GetString(r));
            Console.ReadLine();
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7577'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7577
  :user_name: sumim
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2008/09/05 21:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Squeak Smalltalk で。</p>\n\n\t"
  :code: |
    | url pingDict |
    url := 'http://ll.jus.or.jp/2008/blog/archives/38/trackback'.
    pingDict := {#url -&gt; #('http://ja.doukaku.org/207/')} as: Dictionary.
    ^(HTTPSocket httpPostDocument: url args: pingDict) contents
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '7584'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7584
  :user_name: kkobayashi
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2008/09/07 01:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  RでHTTPリクエストを扱うには、Pure Rで実装されたhttpRequestとlibcurlを使ったRCurlがあるようです。\r<br><br>Pure Rには心引かれたのですが、POST先URLの扱いが簡単なRCurlを使いました。\n\t"
  :code: |
    library(RCurl)
    print(postForm("http://ll.jus.or.jp/2008/blog/archives/38/trackback",
      title     = "LL Golf Hole 9 - トラックバックを打つ",
      excerpt   = "ニコニコ動画で拝見しました。あらためて解説付きで紹介されると面白いですね。自分のコードが紹介されててビックリしました。",
      url       = "http://ja.doukaku.org/207/",
      blog_name = "どう書く？org"))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7585'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7585
  :user_name: emasaka
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/852/
  :language: Bash
  :time: 2008/09/07 06:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>LL Futureゴルフコースありがとうございました。楽しませていただきました。</p>\n<p>今回も無駄にpure bashで書いてみます。</p>\n<p>enable-net-redirectionsつきでビルドされたbashで、UTF-8のソース前提です。</p>\n<p>#
    同じurlパラメータからだと、サーバーから既出だとツッコまれますね、当然ながら</p>\n\n\t"
  :code: |
    function urlencode() {    # just workaround
        local s=$1
        s=${s// /+}
        echo "${s//
    /%0A}"
    }

    function http_post() {
        local host=$1
        local path=$2
        local post_data=$3
        local LANG=C

        exec 3&lt;&gt; "/dev/tcp/$host/80"

        (
        echo -e "POST $path HTTP/1.0\r"
        echo -e "Host: $host\r"
        echo -e "Content-Length: ${#post_data}\r"
        echo -e 'Content-Type: application/x-www-form-urlencoded; charset=utf-8\r'
        echo -e '\r'
        echo "$post_data"
        ) &gt;&amp;3

        local s
        read -d '' s &lt;&amp;3
        echo "$s"

        exec 3&gt;&amp;-
        exec 3&lt;&amp;-
    }

    function trackback() {
        local host=$1
        local path=$2
        local title=$(urlencode "$3")
        local url=$4
        local blog_name=$(urlencode "$5")

        local excerpt
        read -d '' excerpt
        excerpt=$(urlencode "$excerpt")

        http_post "$host" "$path" \
          "title=$title&amp;url=$url&amp;blog_name=$blog_name&amp;excerpt=$excerpt"
    }

    trackback 'll.jus.or.jp' '/2008/blog/archives/38/trackback' \
      'LL Future参加' 'http://ja.doukaku.org/207/' 'LL Future Hole 9' &lt;&lt;'__EOT__'
    LL Futureに行ってきました！
    楽しかった！ 自分の回答がスクリーンに出た＞＜
    __EOT__
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7593'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7593
  :user_name: lunlumo
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/813/
  :language: Scala
  :time: 2008/09/08 10:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>　scalaで。</p>\n</div>\n\t"
  :code: |
    import    java.io._
    import    java.net._
    val    c = (new URL("http://ll.jus.or.jp/2008/blog/archives/38/trackback")).openConnection.asInstanceOf[HttpURLConnection]
    c.setRequestMethod("POST")
    c.setDoOutput(true)
    val    o = new OutputStreamWriter(c.getOutputStream)
    o.write("title=LL+Golf+Hole+9&amp;excerpt=trackback+from+LL+Golf+Hole+9.&amp;url=http://ja.doukaku.org/207/&amp;blog_name=LL+Golf+Hole+9")
    o.flush
    o.close
    val    i = new BufferedReader(new InputStreamReader(c.getInputStream))
    while (i.ready) {
        println(i.readLine)
    }
    c.disconnect
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7594'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7594
  :user_name: lunlumo
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/813/
  :language: Java
  :time: 2008/09/08 10:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>　Javaもまだの様なので。</p>\n</div>\n\t"
  :code: |
    import    java.io.*;
    import    java.net.*;
    class T{
        public static void main(String[] a) throws Exception{
            HttpURLConnection c=(HttpURLConnection)(new URL("http://ll.jus.or.jp/2008/blog/archives/38/trackback")).openConnection();
            c.setRequestMethod("POST");
            c.setDoOutput(true);
            OutputStreamWriter o=new OutputStreamWriter(c.getOutputStream());
            o.write("title=LL+Golf+Hole+9&amp;excerpt=trackback+from+LL+Golf+Hole+9.&amp;url=http://ja.doukaku.org/207/&amp;blog_name=LL+Golf+Hole+9");
            o.flush();
            o.close();
            BufferedReader i=new BufferedReader(new InputStreamReader(c.getInputStream()));
            while(i.ready())System.out.println(i.readLine());
            c.disconnect();
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7597'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7597
  :user_name: leque
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/840/
  :language: Scheme
  :time: 2008/09/08 19:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>寄せるだけ。</p>\n\n\t"
  :code: |
    (use rfc.http)
    (use rfc.uri)

    (define (alist-&gt;query alis)
      (string-join
       (map (lambda (p)
          (format "~A=~A"
              (uri-encode-string (symbol-&gt;string (car p)))
              (uri-encode-string (cdr p))))
        alis)
       ";"))

    (receive (status _ res)
        (http-post "ll.jus.or.jp"
                   "/2008/blog/archives/38/trackback"
                   (alist-&gt;query
                    '((title . "LL Golf Hole 9")
                      (blog_name . "LL Golf Hole 9")
                      (url . "http://ja.doukaku.org/207/")
                      (excerpt . "trackback from LL Golf Hole 9 with Scheme."))))
      (when (string=? status "200")
        (print res))
      0)
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '7604'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7604
  :user_name: syat
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/766/
  :language: JavaScript
  :time: 2008/09/09 08:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  JavaScript＠Firebugコンソールで。\r<br>本エントリにも打ってみたけどカップインしたのかわからない・・・。\r<br>打ちっ放し場のほうには行けました。\n\t"
  :code: |
    function x(o,a){for(var k in a)o[k]=a[k]; return o;}
    var f=x(document.createElement('form'),{action:'http://d.hatena.ne.jp/takano32/20080905',method:'POST'});
    var d={
      title:'どう書くのお題で打ってみます！',
      excerpt:'だれかにぶつけたらごめんね！',
      url:'http://ja.doukaku.org/207/#orz',
      blog_name:'LL Golf Hole 9'
    }
    for(var k in d)
      f.appendChild(x(document.createElement('input'),{type:'hidden',name:k,value:d[k]}));
    document.body.appendChild(f);
    f.submit();
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7634'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7634
  :user_name: 匿名
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2008/09/14 09:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    import urllib

    param = {'title':'LL+Future',
             'except':'外部ライブラリを使うのは反則といいつつ\nサンプルコードで使っているのはどうかと思う。',
             'url':'http://ja.doukaku.org/207/',
             'blog_name':'LL+Golf+Hole+9'}
    param = urllib.urlencode(param)
    f = urllib.urlopen('http://ll.jus.or.jp/2008/blog/archives/38/trackback', param)
    print f.read()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7683'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/7683
  :user_name: nobsun
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2008/09/19 10:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "module Main where\n\nimport Data.Maybe\nimport Network.URI\nimport Network.HTTP\n\nuriStr
    :: String\nuriStr = \"http://d.hatena.ne.jp/takano32/20080905\"\n\nbodyStr = urlEncodeVars\n
    \       [(\"title\",\"LL Golf Hole 9\")\n        ,(\"blog_name\", \"LL Golf Hole
    9\")\n        ,(\"url\",\"http://ja.doukaku.org/207/\")\n        ,(\"excerpt\",\"trackback
    from LL Golf Hole 9 with Haskell.\")]\n\nreq :: Request\nreq = Request \n    {
    rqURI = fromJust $ parseURI uriStr\n    , rqMethod = POST\n    , rqHeaders = [Header
    HdrContentType \"application/x-www-form-urlencoded\"]\n    , rqBody = bodyStr\n
    \   }\n\nmain :: IO ()\nmain = simpleHTTP req &gt;&gt;= print\n"
  :tags:
  - HTTP-3001.0.4
  :references:
    :url: 
    :title: 
- :id: '8191'
  :parent_id: '207'
  :url: http://ja.doukaku.org/comment/8191
  :user_name: ihag
  :user_url: /web/20090103142830/http://ja.doukaku.org/user/560/
  :language: C
  :time: 2008/12/16 05:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>libcurlで．</p>\n\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    #include &lt;stdlib.h&gt;
    #include &lt;unistd.h&gt;
    #include &lt;curl/curl.h&gt;

    static CURLcode curl_errno;

    #define handle_error_curl(str) do { \
        fprintf(stderr, "%s: %s\n", str, curl_easy_strerror(curl_errno)); \
        exit(EXIT_FAILURE); \
    } while(0)

    int
    main(int argc, char **argv)
    {
        const char *URL = "http://d.hatena.ne.jp/takano32/20080905";
        CURL *curl;
        char post[8192];
        int len;

        len = snprintf(post, sizeof(post),
                       "title=%s&amp;excerpt=%s&amp;url=%s&amp;blog_name=%s\n",
                       "Sending+trackback+by+libcurl",
                       "This+is+a+trackback+test+from+libcurl+for+doukaku.org.",
                       "http://ja.doukaku.org/207/",
                       "LL+Golf+Hole+7");

        if ((curl = curl_easy_init()) == NULL)
            exit(EXIT_FAILURE);

        if ((curl_errno = curl_easy_setopt(curl, CURLOPT_URL, URL)) ||
            (curl_errno = curl_easy_setopt(curl, CURLOPT_POST, -1L)) ||
            (curl_errno = curl_easy_setopt(curl, CURLOPT_POSTFIELDS, post)) ||
            (curl_errno = curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, len)))
            handle_error_curl("curl_easy_setopt");

        if ((curl_errno = curl_easy_perform(curl)) != 0)
            handle_error_curl("curl_easy_perform");

        curl_easy_cleanup(curl);

        exit(EXIT_SUCCESS);
    }
  :tags:
  - libcurl
  :references:
    :url: 
    :title: 
