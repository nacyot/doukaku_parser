---
:id: '12'
:title: 指定された日の存在する週
:comments:
- :id: '3368'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/3368
  :user_name: にしお
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/06 08:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  年、月、日を入力すると、指定された日の存在する週の月曜日から金曜日までを出力するコードを書いてください。\r\n<p>\r\n週が月や年をまたぐケースが正しく動いているかに気をつけて投稿してください。\r\n</p>\n<p>\r\nこのお題は匿名での投稿をもとに作成しました。ご投稿ありがとうございます。\r\n\r\n\r\n\t</p>"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '244'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/244
  :user_name: 匿名
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/4/
  :language: Scheme
  :time: 2007/07/06 10:24 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">Scheme(Gauche)</pre>\n\t"
  :code: |
    (use srfi-1)
    (use srfi-19)
    (define (week-days year month day)
      (let* ((now (make-date 0 0 0 0 day month year
                             (date-zone-offset (current-date))))
             (start (- (date-&gt;modified-julian-day now) (date-week-day now) -1)))
        (map (lambda (x)
               (let* ((date (modified-julian-day-&gt;date (+ start x)))
                      (dow (list-ref '("日""月""火""水""木""金""土")
                                     (date-week-day date)))
                      (fmt (date-&gt;string (modified-julian-day-&gt;date (+ start x))
                                         #`"~1(,dow)")))
                 fmt))
             (iota 5))))


    ;; 出力例
    gosh&gt; (for-each print (week-days 2007 7 6))
    2007-07-02(月)
    2007-07-03(火)
    2007-07-04(水)
    2007-07-05(木)
    2007-07-06(金)

    gosh&gt; (for-each print (week-days 2007 7 31))
    2007-07-30(月)
    2007-07-31(火)
    2007-08-01(水)
    2007-08-02(木)
    2007-08-03(金)

    gosh&gt; (for-each print (week-days 2007 12 31))
    2007-12-31(月)
    2008-01-01(火)
    2008-01-02(水)
    2008-01-03(木)
    2008-01-04(金)
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '249'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/249
  :user_name: sumim
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/07/06 10:44 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    Week startDay: #Monday.
    '7-6-2007' asDate asWeek dates
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '254'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/254
  :user_name: morchin
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/78/
  :language: Python
  :time: 2007/07/06 11:37 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  Pythonのカレンダー関係のライブラリは他の言語より強力だと思われる。\n\t"
  :code: |
    # cldr.py
    import calendar, sys

    y, m, d = map(int, sys.argv[1:4])

    day = calendar.datetime.date(y, m, d)
    weeks = calendar.Calendar().monthdatescalendar(y, m)
    for w in weeks:
        if day in w:
            for d, wd in zip(w[:5], ['Mon', 'Tue', 'Wed', 'Thr', 'Fri']):
                print '%d-%02d-%02d(%s)' % (d.year, d.month, d.day, wd)

    # 出力例
    &gt;&gt;&gt; python cldr.py 2007 7 31
    2007-07-30(Mon)
    2007-07-31(Tue)
    2007-08-01(Wed)
    2007-08-02(Thr)
    2007-08-03(Fri)

    &gt;&gt;&gt; python cldr.py 12 31
    2007-12-31(Mon)
    2008-01-01(Tue)
    2008-01-02(Wed)
    2008-01-03(Thr)
    2008-01-04(Fri)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '256'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/256
  :user_name: morchin
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/78/
  :language: 
  :time: 2007/07/06 11:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">21行目間違えた。\r\n誤：&gt;&gt;&gt; python cldr.py
    12 31\r\n正：&gt;&gt;&gt; python cldr.py 2007 12 31\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '275'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/275
  :user_name: tsekine
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/124/
  :language: Bash
  :time: 2007/07/06 16:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  GNU date じゃないと動かないです。\r\n\n\t"
  :code: |
    # $1: yyyy
    # $2: mm
    # $3: dd
    print_the_week () {
      local -r src_date="${1}-${2}-${3}"
      local -r day_of_the_week=$(date --date="$src_date" +%w)
      for ((i = 1 - $day_of_the_week; i &lt;= 5 - $day_of_the_week; i++)); do
        date --date="$src_date $i days" +"%Y-%m-%d"
      done
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '278'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/278
  :user_name: es
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/147/
  :language: Ruby
  :time: 2007/07/06 16:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  one linerで\n\t"
  :code: |
    &gt; ruby -rdate -e 'd=Date.new(2007, 7, 6); m=d-d.wday+1; (m..m+4).each{|wd| puts wd.strftime("%Y-%m-%d (%a)")}'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '286'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/286
  :user_name: 匿名
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/4/
  :language: Java
  :time: 2007/07/07 01:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  週の始まりが日曜日の場合と月曜日の場合を統一的に扱うところで少し工夫しました。\n\t"
  :code: |
    import java.util.Date;
    import java.text.SimpleDateFormat;
    import java.text.DateFormat;
    import java.util.Calendar;

    public class Sample {
        public static void main(String[] args) throws Exception {
            DateFormat df = new SimpleDateFormat("yy/MM/dd");
            Date aDay = df.parse(args[0]+"/"+args[1]+"/"+args[2]);
            Calendar c = df.getCalendar();
            c.setTime(aDay);
    //      c.setFirstDayOfWeek(c.MONDAY);
            int offset = (c.get(c.DAY_OF_WEEK) - c.getFirstDayOfWeek() + 7) % 7;
            c.add(c.DATE, -offset + c.MONDAY - c.getFirstDayOfWeek());
            for (int i = 0; i &lt; 5; i++) {
                System.out.println(df.format(c.getTime()));
                c.add(c.DATE, 1);
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '297'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/297
  :user_name: Mistfeal
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/153/
  :language: PHP
  :time: 2007/07/07 08:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  日本語の曜日への変換は余計かも。\n\t"
  :code: "&lt;?php\nfunction GetWeek($y,$m,$d) {\n\t$w_ary = array(\"月\",\"火\",\"水\",\"木\",\"金\");\n\t$ymd
    = mktime(0,0,0,$m,$d,$y);\n\t$w   = date(\"w\",$ymd);\n\t$s   = 60 * 60 * 24;\n\t$sd
    \ = $ymd + ((1 - $w) * $s);\n\t$ed  = $sd + ($s * 5);\n\t$j = 0;\n\tfor ( $i =
    $sd; $i &lt; $ed; $i+=$s ) {\n\t\techo preg_replace(\"/\\([0-6]\\)/\",\"({$w_ary[$j]})\",date(\"Y/m/d
    (w)\",$i)).\"\\n\";\n\t\t$j++;\n\t}\n}\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '302'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/302
  :user_name: daisuke
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/157/
  :language: Ruby
  :time: 2007/07/07 08:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Ruby On Rails での拡張使って。\n\t"
  :code: |
    def get_week(y,m,d)
      target = Time.gm y,m,d
      5.times do |i|
        p i.days.from_now(target.beginning_of_week).strftime('%Y/%m/%d %A')
      end
    end

    #example 2007,6,1
    &gt;&gt; get_week 2007,6,1
    "2007/05/28 Monday"
    "2007/05/29 Tuesday"
    "2007/05/30 Wednesday"
    "2007/05/31 Thursday"
    "2007/06/01 Friday"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '342'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/342
  :user_name: 匿名
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/07/08 08:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  「指定された日の存在する週」の定義が曖昧な気がする。とりあえず「週は月曜から始まり、日曜で終わる」という定義で組んでみた。\n\t"
  :code: |
    import sys, datetime

    def solve(year, month, day):
        date = datetime.date(year, month, day)
        date -= datetime.timedelta(days=date.weekday()) # Monday
        for i in xrange(5):
            print date + datetime.timedelta(days=i)

    def main():
        a = [int(s) for s in sys.argv[1:]]
        if len(a) != 3:
            sys.stderr.write("usage: year month day\n")
            return
        solve(*a)

    if __name__ == '__main__':
        main()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '356'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/356
  :user_name: kawauchik
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/53/
  :language: C
  :time: 2007/07/08 14:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  VC++/MFC。\r\n標準出力に出力しても確認できないので、TRACE()で。\n\t"
  :code: |
    void WeekDays(int y, int m, int d)
    {
        CTime date(y, m, d, 0, 0, 0);
        date += CTimeSpan(2 - date.GetDayOfWeek(), 0, 0, 0);
        for (int i = 0; i &lt; 5; ++i) {
            TRACE(_T("%s\n"), date.Format(_T("%x(%a)")));
            date += CTimeSpan(1, 0, 0, 0);
        }
    }
  :tags:
  - MFC
  :references:
    :url: 
    :title: 
- :id: '358'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/358
  :user_name: ytakenaka
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/35/
  :language: Common
  :time: 2007/07/08 17:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "(defconstant *delta-t* 86400)\n\n(defun find-week-days (year month date)\n
    \ (let* ((e-day\n\t  (/ (encode-universal-time 0 0 0 date month year 0) *delta-t*))\n\t
    (what-day (mod e-day 7))\n\t (monday (- e-day what-day)))\n    (loop for i from
    0 to 4\n          and name in '(Mon Tue Wed Thr Fri) do\n\t (multiple-value-bind
    (sec min hour d h y)\n\t     (decode-universal-time (* (+ i monday) *delta-t*))\n\t
    \  (format t \"~a-~a-~a (~a)~%\" y h d name)))))\n\n;CL-USER&gt; (find-week-days
    2007 7 31)\n;2007-7-30 (MON)\n;2007-7-31 (TUE)\n;2007-8-1 (WED)\n;2007-8-2 (THR)\n;2007-8-3
    (FRI)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '368'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/368
  :user_name: こう。
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2007/07/09 01:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  日曜から土曜までが「週」として書きました。\n\t"
  :code: "#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\n\nvoid putweekday(int
    year, int month, int day){\n\tstruct tm date;\n\ttime_t time_date;\n\tint i;\n\tchar
    *weekday[]={\"(Mon)\",\"(Tue)\",\"(Wed)\",\"(Thu)\",\"(Fri)\"};\n\n\t//tm構造体初期化\n\tdate.tm_sec=0;\n\tdate.tm_min=0;\n\tdate.tm_hour=0;\n\tdate.tm_isdst=0;\n\t\n\tdate.tm_year=year-1900;\n\tdate.tm_mon=month-1;\n\tdate.tm_mday=day;\n\t\n\t//指定日時の時間取得\n\ttime_date=mktime(&amp;date);\n\t\n\t//日曜日まで戻す\n\ttime_date-=date.tm_wday*24*60*60;\n\t\n\tfor(i=0;i&lt;5;i++){\n\t\t//一日分進めてその日の情報取得(年月をあわせる)\n\t\ttime_date+=24*60*60;\n\t\tdate=*gmtime(&amp;time_date);\n\t\tprintf(\"%4d/%2d/%2d%s\\r\\n\",date.tm_year+1900,date.tm_mon+1,date.tm_mday,weekday[i]);\n\t}\n}\n\nint
    main(){\n\tputweekday(2007,7,9);\n\tputweekday(2007,8,1);\n\treturn 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '388'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/388
  :user_name: id:amachang
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/62/
  :language: JavaScript
  :time: 2007/07/09 11:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Firefox で確認\n\t"
  :code: |
    var d = new Date;
    var t = 86400000;
    var ds = [d];
    do ds.unshift(d = new Date(d.getTime() - t)); while(d.getDay());
    d = ds[ds.length - 1];
    while(ds.length&lt;7) ds.push(d = new Date(d.getTime() + t));

    alert(ds.join('\n'));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '411'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/411
  :user_name: cats
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/172/
  :language: C
  :time: 2007/07/09 23:55 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: |
    using System;
    class Program
    {
      static void Main()
      {
        DateTime dt = new DateTime(2007, 7, 10);
        dt = dt.AddDays(1-(int)dt.DayOfWeek);
        for (int i = 0; i &lt; 5; ++i, dt = dt.AddDays(1))
          Console.WriteLine("{0} {1}", dt.ToShortDateString(), dt.DayOfWeek);
      }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '439'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/439
  :user_name: にしお
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/10 05:58 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre>週が日曜始まりでも月曜始まりでも、\r\n出力すべき結果は同じだと思ったのですが\r\nダメだったでしょうか？\r\n\r\n#
    もちろん水曜日が週の始まりだったりするとダメですが…</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '443'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/443
  :user_name: es
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/147/
  :language: 
  :time: 2007/07/10 06:48 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">こんな感じでしょうか。\r\n\r\n     July 2007\r\nSu Mo
    Tu We Th Fr Sa\r\n 1  2  3  4  5  6  7\r\n 8  9 10 11 12 13 14\r\n\r\n- 2007/7/8が指定された場合の出力\r\n\r\n日曜が週のはじまり
    -&gt; 7/9-7/13\r\n月曜が週のはじまり -&gt; 7/2-7/6</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '451'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/451
  :user_name: iakio
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/77/
  :language: SQL
  :time: 2007/07/10 08:52 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\n\t  わりとSQLの得意分野かも\n\t"
  :code: |
    =&gt; select to_char(date_trunc('week', '2007-7-6'::date)::date + i,
                      'YYYY-mm-dd(Day)')
         from generate_series(0, 4) as g(i);
            to_char
    -----------------------
     2007-07-02(Monday   )
     2007-07-03(Tuesday  )
     2007-07-04(Wednesday)
     2007-07-05(Thursday )
     2007-07-06(Friday   )
    (5 rows)
  :tags:
  - PostgreSQL
  :references:
    :url: 
    :title: 
- :id: '489'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/489
  :user_name: satyri
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/76/
  :language: PHP
  :time: 2007/07/10 13:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">PHPはこういうの便利。</pre>\n\t"
  :code: "&lt;?php\nfunction week($day, $month, $year){\n\t$day_of_the_week = date('w',
    mktime(0, 0, 0, $month, $day, $year));\n\tfor($i = 1; $i &lt;= 5; $i++){\n\t\techo(date(\"Y-m-d\",
    mktime(0, 0, 0, $month, $day - $day_of_the_week + $i, $year)).\"\\n\");\n\t}\n}\nweek(8,7,2007);\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '525'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/525
  :user_name: 沢渡 みかげ
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/101/
  :language: Mathematica
  :time: 2007/07/11 03:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Mathematicaには曜日を数値で取得する方法がないようなので，テーブルを自前で持つようにしました．\r\n\r\nPrintWeek[{2007,
    12, 31}];\r\n\r\nのように実行します．\r\n\r\nかなり処理が遅いようです…．</pre>\n\t"
  :code: |
    &lt;&lt; Miscellaneous`Calendar`;
    PrintWeek[day_] := Module[{dayhash, calcday, i},
          dayhash[Sunday] = 0;
          dayhash[Monday] = 1;
          dayhash[Tuesday] = 2;
          dayhash[Wednesday] = 3;
          dayhash[Thursday] = 4;
          dayhash[Friday] = 5;
          dayhash[Saturday] = 6;
          startday = DaysPlus[day, -dayhash[DayOfWeek[day]]];
          For[i = 0, i &lt; 7, i++,
            calcday = DaysPlus[startday, i];
            Print[calcday, " (", DayOfWeek[calcday], ")"];
            ];
          ];
  :tags:
  - Mathematica
  :references:
    :url: 
    :title: 
- :id: '534'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/534
  :user_name: rubikitch
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/105/
  :language: Common
  :time: 2007/07/11 06:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "(require :local-time)\n(in-package :local-time)\n\n(defun format-date (time)\n
    \ (multiple-value-bind (ms ss mm hh d m y w) (decode-local-time time)\n    (format
    nil \"~a/~a/~a(~a)\" y m d (elt +short-day-names+ w))))\n\n(defun wday (time)\n
    \ (multiple-value-bind (ms ss mm hh d m y w) (decode-local-time time) \n    w))\n\n(defun
    make-date (y m d)\n  (encode-local-time 0 0 0 0 d m y))\n\n(defun week-days (y
    m d)\n  (let* ((date (make-date y m d))\n         (wday (wday date))\n         (daysec
    (* 3600 24))\n         (monday (- (universal-time date) (* (1- wday) daysec)))\n
    \        (friday (+ monday (* 4 daysec))))\n    (loop for time from monday to
    friday by daysec\n       collect (format-date (local-time :universal time)))))\n\n(week-days
    2007 7 6) ; =&gt; (\"2007/7/2(Mon)\" \"2007/7/3(Tue)\" \"2007/7/4(Wed)\" \"2007/7/5(Thu)\"
    \"2007/7/6(Fri)\")\n(week-days 2007 7 31) ; =&gt; (\"2007/7/30(Mon)\" \"2007/7/31(Tue)\"
    \"2007/8/1(Wed)\" \"2007/8/2(Thu)\" \"2007/8/3(Fri)\")\n(week-days 2007 12 31)
    ; =&gt; (\"2007/12/31(Mon)\" \"2008/1/1(Tue)\" \"2008/1/2(Wed)\" \"2008/1/3(Thu)\"
    \"2008/1/4(Fri)\")\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '555'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/555
  :user_name: kacchi
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/145/
  :language: Emacs
  :time: 2007/07/11 08:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">日曜が週の始まりと考えました。\r\n(week-days 2007 7 6)\r\n=&gt;(\"2007/07/02(月)\"
    \"2007/07/03(火)\" \"2007/07/04(水)\" \"2007/07/05(木)\" \"2007/07/06(金)\")\r\n(week-days
    2007 7 31)\r\n=&gt;(\"2007/07/30(月)\" \"2007/07/31(火)\" \"2007/08/01(水)\" \"2007/08/02(木)\"
    \"2007/08/03(金)\")\r\n(week-days 2007 12 30)\r\n=&gt;(\"2007/12/31(月)\" \"2008/01/01(火)\"
    \"2008/01/02(水)\" \"2008/01/03(木)\" \"2008/01/04(金)\")\r\n</pre>\n\t"
  :code: |
    (defun week-days (y m d)
      (let ((dow (nth 6 (decode-time (encode-time 0 0 0 d m y)))))
        (mapcar (lambda (x)
                  (format-time-string "%Y/%m/%d(%a)"
                                      (encode-time 0 0 0 (- d dow (- x)) m y)))
                '(1 2 3 4 5))))
  :tags:
  - EmacsLisp
  :references:
    :url: 
    :title: 
- :id: '588'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/588
  :user_name: sukesam
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/204/
  :language: JavaScript
  :time: 2007/07/11 16:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  for文を駆使してみた。\r\nfirefoxで確認\n\t"
  :code: |
    function weekDays(y, m, d) {
            var dt = new Date(y, m - 1, d);
            var ws = ["日", "月", "火", "水", "木", "金", "土"], r = [];
            var f = function(d) { return d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate() + "(" + ws[d.getDay()] + ")"; };
            for (dt.setDate(dt.getDate() - dt.getDay() + 1); dt.getDay(); dt.setDate(dt.getDate() + 1)) r.push(f(dt));
            alert(r.join("\n"));
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '752'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/752
  :user_name: satyri
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/76/
  :language: Perl
  :time: 2007/07/13 12:08 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">Date::Simpleを使ってみた。何か不思議な感じ。</pre>\n\t"
  :code: "#!/usr/local/bin/perl\n\nuse strict;\nuse Date::Simple;\n\nsub getWeekDay{\n
    \ my $year = shift;\n  my $month = shift;\n  my $day = shift;\n  \n  my $date
    = Date::Simple-&gt;new($year, $month, $day);\n  my $day_of_week = $date-&gt;day_of_week;\n\n
    \ for(my $i = 1; $i&lt;=5; $i++){\n    my $week_day = $date - $day_of_week + $i;\n
    \   print $week_day-&gt;format(\"%Y/%m/%d(%a)\\n\");\n  }\n}\n\ngetWeekDay(2009,
    12, 31);\n"
  :tags:
  - CPAN
  :references:
    :url: 
    :title: 
- :id: '797'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/797
  :user_name: kkobayashi
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2007/07/14 03:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">冗長さを無視すれば１行でも書けます。\r\n週の始まりは日曜から、としています。\r\n\r\n&gt;
    printweekdays(2007,12,28)\r\n[1] \"2007-12-24 月曜日\" \"2007-12-25 火曜日\" \"2007-12-26
    水曜日\" \"2007-12-27 木曜日\" \"2007-12-28 金曜日\"\r\n&gt; printweekdays(2007,12,29)\r\n[1]
    \"2007-12-24 月曜日\" \"2007-12-25 火曜日\" \"2007-12-26 水曜日\" \"2007-12-27 木曜日\" \"2007-12-28
    金曜日\"\r\n&gt; printweekdays(2007,12,30)\r\n[1] \"2007-12-31 月曜日\" \"2008-01-01
    火曜日\" \"2008-01-02 水曜日\" \"2008-01-03 木曜日\" \"2008-01-04 金曜日\"\r\n&gt; printweekdays(2007,12,31)\r\n[1]
    \"2007-12-31 月曜日\" \"2008-01-01 火曜日\" \"2008-01-02 水曜日\" \"2008-01-03 木曜日\" \"2008-01-04
    金曜日\"\r\n&gt; printweekdays(2008,1,1)\r\n[1] \"2007-12-31 月曜日\" \"2008-01-01 火曜日\"
    \"2008-01-02 水曜日\" \"2008-01-03 木曜日\" \"2008-01-04 金曜日\"\r\n</pre>\n\t"
  :code: |
    printweekdays &lt;- function(y, m, d){
        date  &lt;- as.Date(paste(y,m,d,sep="/"))
        start &lt;- date - (as.POSIXlt(date)$wday-1)
        days  &lt;- seq(start, length=5, by="1 days")
        paste(days, weekdays(days))
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '851'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/851
  :user_name: yuin
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/82/
  :language: Scala
  :time: 2007/07/14 15:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    import java.util.Calendar
    import java.text.SimpleDateFormat
    def printWeekByDate(y:Int,m:Int,d:Int):Unit = {
      val cal = Calendar.getInstance
      cal.set(y,m-1,d)
      val format = new SimpleDateFormat("yyyy/MM/dd (E)")
      cal.add(Calendar.DATE, -cal.get(Calendar.DAY_OF_WEEK))
      List.range(0,6).foreach(x =&gt; {
        cal.add(Calendar.DATE, 1)
        println(format.format(cal.getTime))
      })
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '867'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/867
  :user_name: rubikitch
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/105/
  :language: D
  :time: 2007/07/14 19:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Dのstd.dateライブラリは月が0～11なのが激しくムカツク(怒)\r\n\r\nrdmd
    /m/home/rubikitch/src/doukaku/12.d \r\n[2007/7/2(Mon),2007/7/3(Tue),2007/7/4(Wed),2007/7/5(Thu),2007/7/6(Fri)]\r\n[2007/7/30(Mon),2007/7/31(Tue),2007/8/1(Wed),2007/8/2(Thu),2007/8/3(Fri)]\r\n[2007/12/31(Mon),2008/1/1(Tue),2008/1/2(Wed),2008/1/3(Thu),2008/1/4(Fri)]\r\n</pre>\n\t"
  :code: "module doukaku;\nprivate import std.stdio;\nprivate import std.date;\nprivate
    import std.string;\nchar[] format_date(d_time time) {\n    return format(\"%s/%s/%s(%s)\",
    YearFromTime(time),\n                  MonthFromTime(time)+1, DateFromTime(time),
    wday(time));\n}\n\nchar[] wday(d_time time) {\n    char[][] wname = [ \"Sun\",
    \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ];\n    return wname[ WeekDay(time)
    ];\n}\n\nd_time make_date(int y, int m, int d) {\n    return parse(format(\"%s/%s,%s\",
    m, d, y));\n}\n\nchar[][] week_days(int y, int m, int d) {\n    d_time date =
    make_date(y, m, d);\n    int wday = WeekDay(date);\n    int daytick = 3600 * 24
    * TicksPerSecond;\n    d_time monday = date - (wday - 1)*daytick;\n    d_time
    friday = monday + 4*daytick;\n    char[][] ret;\n    \n    for (d_time t = monday;
    t &lt;= friday; t += daytick) \n        ret ~= format_date(t);\n    return ret;\n}\n\nvoid
    main() {\n    writefln(week_days(2007, 7, 6));\n    writefln(week_days(2007, 7,
    31));\n    writefln(week_days(2007, 12, 31));\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '917'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/917
  :user_name: ether
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/96/
  :language: XSLT
  :time: 2007/07/15 11:18 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  EXSLT の date モジュールを使用。xs:duration 形式を正負で場合わけして作る部分はもっと簡潔に書けないだろうか…\n\t"
  :code: |
    &lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:date="http://exslt.org/dates-and-times"
      extension-element-prefixes="date"&gt;
    &lt;xsl:import href="date.day-in-week.template.xsl" /&gt;
    &lt;xsl:import href="date.add.template.xsl" /&gt;
    &lt;xsl:output method="text" /&gt;
    &lt;xsl:param name="day" /&gt;

    &lt;xsl:template match="/"&gt;
      &lt;xsl:call-template name="n-days-from"&gt;
        &lt;xsl:with-param name="n" select="5" /&gt;
        &lt;xsl:with-param name="day"&gt;
          &lt;xsl:call-template name="date:add"&gt;
            &lt;xsl:with-param name="date-time" select="$day" /&gt;
            &lt;xsl:with-param name="duration"&gt;
              &lt;xsl:variable name="dow"&gt;
                &lt;xsl:call-template name="date:day-in-week"&gt;
                  &lt;xsl:with-param name="date-time" select="$day" /&gt;
                &lt;/xsl:call-template&gt;
              &lt;/xsl:variable&gt;
              &lt;xsl:choose&gt;
                &lt;xsl:when test="$dow &amp;gt; 2"&gt;
                  &lt;xsl:value-of select="concat('-P', $dow - 2, 'D')" /&gt;
                &lt;/xsl:when&gt;
                &lt;xsl:otherwise&gt;
                  &lt;xsl:value-of select="concat('P', 2 - $dow, 'D')" /&gt;
                &lt;/xsl:otherwise&gt;
              &lt;/xsl:choose&gt;
            &lt;/xsl:with-param&gt;
          &lt;/xsl:call-template&gt;
        &lt;/xsl:with-param&gt;
      &lt;/xsl:call-template&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template name="n-days-from"&gt;
      &lt;xsl:param name="n" /&gt;
      &lt;xsl:param name="day" /&gt;
      &lt;xsl:value-of select="$day" /&gt;
      &lt;xsl:text&gt;&amp;#xa;&lt;/xsl:text&gt;
      &lt;xsl:if test="$n &amp;gt; 1"&gt;
        &lt;xsl:call-template name="n-days-from"&gt;
          &lt;xsl:with-param name="n" select="$n - 1" /&gt;
          &lt;xsl:with-param name="day"&gt;
            &lt;xsl:call-template name="date:add"&gt;
              &lt;xsl:with-param name="date-time" select="$day" /&gt;
              &lt;xsl:with-param name="duration" select="'P1D'" /&gt;
            &lt;/xsl:call-template&gt;
          &lt;/xsl:with-param&gt;
        &lt;/xsl:call-template&gt;
      &lt;/xsl:if&gt;
    &lt;/xsl:template&gt;

    &lt;/xsl:stylesheet&gt;
  :tags:
  - EXSLT
  :references:
    :url: 
    :title: 
- :id: '919'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/919
  :user_name: 時間蠅
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/250/
  :language: Matlab
  :time: 2007/07/15 11:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  一週間は月曜始まりとしています。冗長な感じですが、Matlabで書いてみました。\n\t"
  :code: |
    targetDate = datevec('2007-07-15', 'yyyy-mm-dd');
    A = ['Mon'; 'Tue'; 'Wed'; 'Thu'; 'Fri'; 'Sat'; 'Sun'];
    for n=1:size(A, 1)
      if (A(n,:) == datestr(targetDate, 'ddd'))
        break;
      end
    end
    startDate = datenum(targetDate) - n + 1;
    for n=startDate:startDate+4
      disp(datestr(n, 'yyyy-mm-dd'));
    end

    % output example
    % 2007-07-09
    % 2007-07-10
    % 2007-07-11
    % 2007-07-12
    % 2007-07-13
  :tags:
  - Matlab
  :references:
    :url: 
    :title: 
- :id: '1015'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/1015
  :user_name: iwk
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/49/
  :language: OCaml
  :time: 2007/07/16 16:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    open System;;

    let getWeekIncluding (year,month,day) =
        let date = new DateTime( year, month, day ) in
        let rec getting (dt:DateTime) =
            if Enum.to_int dt.DayOfWeek = 6 then []
            else (dt.ToString() ^ " : " ^ dt.DayOfWeek.ToString())::(getting (dt.AddDays(float 1))) in
        String.concat "\n" (getting (date.AddDays( float (1 - Enum.to_int date.DayOfWeek))));;
  :tags:
  - F#
  :references:
    :url: 
    :title: 
- :id: '1357'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/1357
  :user_name: katsu
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/117/
  :language: Prolog
  :time: 2007/07/23 02:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">酷く面倒です。データの型変換とか自動のLLはいいなぁ。</pre>\n\t"
  :code: |
    week(Y,M,D,R):-
            format_time(atom(WeekP), "%a", date(Y,M,D,0,0,0,0,-,-),posix),
            weekdays(WD),
            find_index(WeekP,WD,WeekN),
            between(0,4,I),
            D1 is D - WeekN + I,
            date_time_stamp(date(Y,M,D1,0,0,0,0,-,-), Stamp),
            stamp_date_time(Stamp,D2,0),
            date_time_value(date,D2,R).

    weekdays(['Mon','Tue','Wed','Thu','Fri','Sat','Sun']).

    find_index(A,L,R):-find_index(A,L,0,R).
    find_index(_,[],_,_):-fail.
    find_index(A,[L|_],I,I):- A==L,!.
    find_index(A,[_|Ls],I,R):-writeln([A,Ls]),succ(I,I1),find_index(A,Ls,I1,R).

    :-findall(X,week(2007,07,31,X),Xs),writeln(Xs).
  :tags:
  - SWI-prolog
  :references:
    :url: 
    :title: 
- :id: '1366'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/1366
  :user_name: shiro
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/41/
  :language: Haskell
  :time: 2007/07/23 08:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Haskell練習中。\r\nコンストラクタに渡す値ってのは省略できないのだろうか。\r\nCalendarTimeのフィールドには重複する情報があるわけだけど\r\n(year,
    month, dateが与えれれれば曜日と日付の通し番号は決まる)\r\n全部与えてやらないとコンパイルが通らない。\r\n一回ClockTimeに変換してCalendarTimeに戻すルーチンを\r\nわざわざ噛ませてみたけど、もっとスマートなやりかたが\r\nあるんじゃなかろうか。\r\n\r\n実行例
    (週は月曜はじまりと解釈してる):\r\n*Main&gt; weekDaysOf 2007 July 22\r\n2007/07/16 (Mon)\r\n2007/07/17
    (Tue)\r\n2007/07/18 (Wed)\r\n2007/07/19 (Thu)\r\n2007/07/20 (Fri)\r\n*Main&gt;
    weekDaysOf 2007 July 23\r\n2007/07/23 (Mon)\r\n2007/07/24 (Tue)\r\n2007/07/25
    (Wed)\r\n2007/07/26 (Thu)\r\n2007/07/27 (Fri)\r\n*Main&gt; weekDaysOf 2007 July
    27\r\n2007/07/23 (Mon)\r\n2007/07/24 (Tue)\r\n2007/07/25 (Wed)\r\n2007/07/26 (Thu)\r\n2007/07/27
    (Fri)\r\n\r\n\r\n\r\n</pre>\n\t"
  :code: |
    import Time
    import Locale

    weekDaysOf year month day =
      do ct &lt;- ymdToCalendarTime year month day
         showDays $ map (\d -&gt; addToClockTime d (toClockTime ct)) $ offsets $ weekDayNum ct
      where offsets wd = map (\i -&gt; TimeDiff 0 0 (i-(wd-1 `mod` 7)) 0 0 0 0) [0..4]
            showDays [] = return ()
            showDays (d:ds) = do ct &lt;- toCalendarTime d
                                 putStrLn $ formatCalendarTime defaultTimeLocale "%Y/%m/%d (%a)" ct
                                 showDays ds

    ymdToCalendarTime y m d = toCalendarTime $ toClockTime $ CalendarTime y m d 0 0 0 0 Sunday 0 "" 0 False

    weekDayNum (CalendarTime _ _ _ _ _ _ _ wd _ _ _ _) = fromEnum wd
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1367'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/1367
  :user_name: shiro
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/41/
  :language: 
  :time: 2007/07/23 09:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  weekDayNumはいらないか。fromEnum $ ctWDay ct でいいのね。\r\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1452'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/1452
  :user_name: 匿名
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2007/07/25 14:19 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">alert(thisweek(new Date(2007, 6, 25), ',月,火,水,木,金,').join('\\n'));\r\nで月曜日から金曜日までを出力．Dateオブジェクトがそれぞれ格納された配列が戻ってくる．\r\n\r\nthisweek(new
    Date(2007, 6, 25), ',1,1,1,1,1,,,1,1,1,1,1')\r\nで翌週分の表示が可能．</pre>\n\t"
  :code: "function thisweek(d, m)\n{\n\tvar x = m.split(',');\n\tvar o = new Array();\n\tfor
    (var l=x.length, e=86400000, k=d-e*d.getDay(); l--; x[l]?o.push(new Date(k+e*l)):1);\n\treturn
    o.reverse();\n}\n\nalert(thisweek(new Date(2007, 6, 25), ',1,1,1,1,1,').join('\\n'));\n"
  :tags:
  - JavaScript
  :references:
    :url: 
    :title: 
- :id: '1602'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/1602
  :user_name: 匿名
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/4/
  :language: C
  :time: 2007/07/30 20:13 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">標準ライブラリだけで実現させてみました☆\r\n西暦214748年まで対応、日曜始まり仕様です☆</pre>\n\t"
  :code: |
    #include&lt;stdio.h&gt;

    //日付をシリアル値に変換。
    int date_to_serial(int date){
      int y=date/10000,
          m=date/100%100,
          d=date%100;
      if(m&lt;3)
        y--,m+=12;
      return y*365+y/4-y/100+y/400+(m+1)*306/10+d-428;
    }

    //シリアル値を日付に変換。
    int serial_to_date(int serial){
      int y,m,d;
      y=(serial+305)/146097*400+
        (serial+305)%146097/36524*100+
        (serial+305)%146097%36524/1461*4+
        (serial+305)%146097%36524%1461/365;
      m=((serial+305-y*365-y/4+y/100-y/400)*10+922)/306;
      //m=((serial+305-y*365-y/4+y/100-y/400)*10+923)/306;
      d=serial-y*365-y/4+y/100-y/400-(m+1)*306/10+428;
      if(m&gt;12)
        y++,m-=12;
      if(d==31&amp;&amp;m==2)
        d=29;
      return y*10000+m*100+d;
    }

    int main(void){
      int date,serial,i;
      char *weekday[]={"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
      while(1){
        printf("yyyymmdd=");
        scanf("%d",&amp;date);
        if(date&lt;10101||date&gt;2147481231)
          break;
        serial=date_to_serial(date);
        //週の始まりを月曜とする場合、以下を有効にする。
        //serial--;
        serial-=serial%7;
        for(i=serial+1;i&lt;serial+6;i++)
          date=serial_to_date(i),
          printf("%d/%02d/%02d [%-9s]\n",date/10000,date/100%100,date%100,weekday[i%7]);
      }
      return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1663'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/1663
  :user_name: ether
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/96/
  :language: PowerShell
  :time: 2007/08/01 15:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    $day = [datetime] $args[0]
    $dow = $day.DayOfWeek
    $sunday = $day.AddDays(-$dow)
    1..5 | % { $sunday.AddDays($_).ToShortDateString() }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1707'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/1707
  :user_name: tomatsu
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/323/
  :language: Pnuts
  :time: 2007/08/02 12:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    function get_week(year,month,day){
       d = date(year,month,day)
       w = getDayOfWeek(d)
       for (i:2..6) println(formatDateTime(addDay(d, i-w), "yyyy/MM/dd (E)"))
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1757'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/1757
  :user_name: morchin
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/78/
  :language: Python
  :time: 2007/08/03 03:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  #342とほぼ同じ。\n\t"
  :code: "import datetime\n\ndef print_week(y, m, d):\n\tday = datetime.date(y, m,
    d)\n\tone = datetime.timedelta(days=1)\n\tday -= one * day.weekday()\n\tfor i
    in range(5):\n\t\tprint day.strftime('%Y-%m-%d (%a)')\n\t\tday += one\n\nif __name__
    == '__main__':\n\tprint_week(2007, 8, 3)\n\t\n\t# 2007-07-30 (Mon)\n\t# 2007-07-31
    (Tue)\n\t# 2007-08-01 (Wed)\n\t# 2007-08-02 (Thu)\n\t# 2007-08-03 (Fri)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1923'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/1923
  :user_name: talo
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/237/
  :language: Java
  :time: 2007/08/06 08:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Java の日付 API のことだからめんどくせーんだろうなって思ってやってみたけど、\r\n想像以上にエレガントにできた。\r\n\r\n実質の処理は16行目～20行目のたった5行。\r\n他は初期化とか入力エラー処理とか。</pre>\n\t"
  :code: |
    import java.util.Calendar;
    import java.util.GregorianCalendar;
    import java.text.SimpleDateFormat;

    public class MainMyCalendar {
        public static void main(String[] args) {
            if (args.length != 3) {
                System.err.println("Usage: please input -&gt; YEAR MONTH DAY\n"
                        + "ex) java MainMyCalendar 2007 8 6");
                System.exit(1);
            }
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
            Calendar cal = new GregorianCalendar(Integer.parseInt(args[0]),
                    Integer.parseInt(args[1]) - 1, Integer.parseInt(args[2]));

            cal.add(Calendar.DATE, Calendar.MONDAY - cal.get(Calendar.DAY_OF_WEEK));
            while (cal.get(Calendar.DAY_OF_WEEK) &lt;= Calendar.FRIDAY) {
                System.out.println(sdf.format(cal.getTime()));
                cal.add(Calendar.DATE, 1);
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2077'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/2077
  :user_name: naoya_t
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/348/
  :language: awk
  :time: 2007/08/12 08:35 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">日付を処理する関数は自前です。\r\n\r\n日曜にあたる日付が入力された場合、\r\n日曜を週の初めとするか終わりとするかで\r\n解が異なります。\r\n\r\nプログラム冒頭の定数
    sunday_first で\r\nどちらを表示するか設定します。\r\n\r\n年、月、日は数字以外の文字（スペース可）で\r\n区切って入力します。\r\n\r\n%
    awk -f weekday.awk\r\n2007/8/15\r\n2007年8月13日(月)\r\n2007年8月14日(火)\r\n2007年8月15日(水)\r\n2007年8月16日(木)\r\n2007年8月17日(金)\r\n2007.10.30\r\n2007年10月29日(月)\r\n2007年10月30日(火)\r\n2007年10月31日(水)\r\n2007年11月1日(木)\r\n2007年11月2日(金)\r\n2008
    1 1\r\n2007年12月31日(月)\r\n2008年1月1日(火)\r\n2008年1月2日(水)\r\n2008年1月3日(木)\r\n2008年1月4日(金)</pre>\n\t"
  :code: "BEGIN {\n#\tsunday_first = 1 # 日月火水木金土\n\tsunday_first = 0 # 月火水木金土日\n\n\tsplit(\"0
    31 59 90 120 151 181 212 243 273 304 334 365\", month_start_normal)\n\tsplit(\"0
    31 60 91 121 152 182 213 244 274 305 335 366\", month_start_leap)\n\n\tsplit(\"月
    火 水 木 金 土 日\", wday_ja)\n\twday_ja[0] = wday_ja[6]\n\n\tSUNDAY    = 0\n\tMONDAY
    \   = 1\n\tTUESDAY   = 2\n\tWEDNESDAY = 3\n\tTHURSDAY  = 4\n\tFRIDAY    = 5\n\tSATURDAY
    \ = 6\n\n\tFS = \"[^0-9]\"\n}\n\n(NF == 3) {\n\tyear  = $1\n\tmonth = $2\n\tday
    \  = $3\n\n\tj = ymd_to_j(year,month,day)\n\tw = wday(j)\n\n\tif (w == SUNDAY)
    {\n\t\tj_sun = sunday_first ? j : (j - 7)\n\t} else {\n\t\tj_sun = j - w\n\t}\n\tfor
    (i=MONDAY; i&lt;=FRIDAY; i++) {\n\t\tj = j_sun + i\n\t\tj_to_ymd(j, date)\n\t\tprintf(\"%d年%d月%d日(%s)¥n\",
    date[\"y\"],date[\"m\"],date[\"d\"], wday_ja[wday(j)])\n\t}\n}\n\nfunction leap_year(year)
    # 閏年判定\n{\n\treturn (year % 4 == 0) ? ((year % 100 == 0) ? ((year % 400 == 0)
    ? 1 : 0) : 1) : 0\n}\n\nfunction ymd_to_j(year,month,day, y,d) # 通し日数 (AD1/1/1
    = 1)\n{\n\ty = year - 1\n\td = 365*y + int(y/4) - int(y/100) + int(y/400)\n\n\tif
    (leap_year(year))\n\t\td += month_start_leap[month]\n\telse\n\t\td += month_start_normal[month]\n\n\td
    += day\n\treturn d\n}\n\nfunction wday(j) # 通し日数から曜日を得る\n{\n\treturn j % 7\n}\n\nfunction
    j_to_ymd(j,date, j400,y400,j100,y100,j4,y4,j1,y1, y) # 通し日数から日付を得る\n{\n\tj400
    = j % 146097\n\ty400 = 400 * ((j - j400) / 146097)\n\n\tj100 = j400 % 36524\n\ty100
    = 100 * ((j400 - j100) / 36524)\n\n\tj4 = j100 % 1461\n\ty4 = 4 * ((j100 - j4)
    / 1461)\n\n\tj1 = j4 % 365\n\ty1 = (j4 - j1) / 365\n\n\ty = 1 + y400 + y100 +
    y4 + y1\n\n\tif (j1 == 0) {\n\t\tdate[\"y\"] = y - 1\n\t\tdate[\"m\"] = 12\n\t\tdate[\"d\"]
    = 31\n\t} else {\n\t\tdate[\"y\"] = y\n\t\tif (leap_year(y)) {\n\t\t\tfor (m=1;
    m&lt;=12; m++)\n\t\t\t\tif (j1 &lt;= month_start_leap[m+1]) {\n\t\t\t\t\tdate[\"m\"]
    = m\n\t\t\t\t\tdate[\"d\"] = j1 - month_start_leap[m]\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t}
    else {\n\t\t\tfor (m=1; m&lt;=12; m++)\n\t\t\t\tif (j1 &lt;= month_start_normal[m+1])
    {\n\t\t\t\t\tdate[\"m\"] = m\n\t\t\t\t\tdate[\"d\"] = j1 - month_start_normal[m]\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t}\n\t}\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2175'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/2175
  :user_name: drop
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/388/
  :language: Haskell
  :time: 2007/08/14 15:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">System.Time とは別に Data.Time というものがあったり。\r\n\r\nMain&gt;
    weekDaysOf 2007 12 30\r\n2007-12-24\r\n2007-12-25\r\n2007-12-26\r\n2007-12-27\r\n2007-12-28\r\nMain&gt;
    weekDaysOf 2007 12 31\r\n2007-12-31\r\n2008-01-01\r\n2008-01-02\r\n2008-01-03\r\n2008-01-04\r\nMain&gt;
    weekDaysOf 2008 1 5\r\n2007-12-31\r\n2008-01-01\r\n2008-01-02\r\n2008-01-03\r\n2008-01-04</pre>\n\t"
  :code: |
    import Data.Time.Calendar
    import Data.Time.Calendar.WeekDate

    weekDaysOf = (((flip mapM_ [1..5] . (print .)
                 . (\(y,w,_) -&gt; fromWeekDate y w)
                 . toWeekDate).).) . fromGregorian
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3211'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/3211
  :user_name: cooldaemon
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/451/
  :language: Erlang
  :time: 2007/10/01 09:45 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">日曜日を週の始まりとします。\r\n使い方は、こんな感じです。\r\nlists:foreach(fun
    ({{Year, Month, Day}, Week}) -&gt; io:fwrite(\"~p/~p/~p(~p)~n\", [Year, Month,
    Day, Week]) end, foo:get_week(2007, 10, 1)).\r\n</pre>\n\t"
  :code: |
    -module(foo).
    -export([get_week/3, get_week/1]).

    get_week(Year, Month, Day) -&gt;
      get_week({Year, Month, Day}).

    get_week(Date) -&gt;
      Week = calendar:day_of_the_week(Date),
      Days = calendar:date_to_gregorian_days(Date),
      StartDays = case Week of
        7 -&gt; Days + 1;
        _ -&gt; Days - Week + 1
      end,

      WeekAtoms = [mon, tue, wed, thu, fri],
      lists:map(
        fun (X) -&gt;
          ReturnDate = calendar:gregorian_days_to_date(X),
          WeekAtom = lists:nth(calendar:day_of_the_week(ReturnDate), WeekAtoms),
          {ReturnDate, WeekAtom}
        end,
        lists:seq(StartDays, StartDays+4)
      ).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3245'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/3245
  :user_name: tilde
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/446/
  :language: Objective
  :time: 2007/10/04 08:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">OSXのCocoaとWindowsのGNUstepで動作確認しています。</pre>\n\t"
  :code: "#import &lt;Foundation/Foundation.h&gt;\n\nvoid printWeekdays( unsigned
    year, unsigned month, unsigned day ) {\n\tNSCalendarDate* theDay = [NSCalendarDate\n\t\t\tdateWithYear:year
    month:month day:day hour:0 minute:0 second:0 timeZone:nil];\n\tint offset = 1
    - [theDay dayOfWeek];\n\t\n\tfor ( int i = 0; i &lt; 5; i++ ) {\n\t\tNSCalendarDate*
    weekday =\n\t\t\t\t[theDay dateByAddingYears:0 months:0 days:offset + i hours:0
    minutes:0 seconds:0];\n\t\tNSLog( [weekday descriptionWithCalendarFormat:@\"%Y/%m/%d
    %A\"] );\n\t}\n}\n\nint main( int argc, const char** argv ) {\n    NSAutoreleasePool
    * pool = [[NSAutoreleasePool alloc] init];\n\t\n\tprintWeekdays( 2000, 1, 1 );\n\tprintWeekdays(
    2008, 1, 1 );\n\t\n    [pool release];\n    return 0;\n}\n"
  :tags:
  - Cocoa
  - GNUstep
  - Mac
  - OSX
  :references:
    :url: 
    :title: 
- :id: '4778'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/4778
  :user_name: 99yen
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/591/
  :language: 
  :time: 2007/12/12 09:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    ●WeekDays(Dateの)
        Youbiとは文字列=Dateの曜日
        "月{~}火{~}水{~}木{~}金{~}土"を反復
            もし(対象=Youbi)ならば
                Date = Dateに"-//{回数}"を日付加算
                抜ける
        5回
            Date = Dateに"//1"を日付加算
            "{Date} ({Dateの曜日})"を表示

    今日のWeekDays
    改行を表示
    "2007/12/31"のWeekDays
    改行を表示
    "2008/1/1"のWeekDays
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5667'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/5667
  :user_name: pooq
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/02/03 12:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">週の初めは日曜日。\r\n\r\n   f 2008 1 30\r\n2008 1 28\r\n2008
    1 29\r\n2008 1 30\r\n2008 1 31\r\n2008 2  1\r\n</pre>\n\t"
  :code: |
    load 'dates'
    f=:3 :'todate (&gt;: i.5) + (todayno - weekday) y'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5717'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/5717
  :user_name: silverwire
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/646/
  :language: Batchfile
  :time: 2008/02/09 18:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">週の最初の日は日曜日としました。\r\n\r\n変数_ には、一ヶ月を31日とした場合の差分値を格納しています。
    2月は一ヶ月を28日と\r\nし、うるう年であれば値を補正しています。あと、日曜日の日付が負の値かどうかで、月\r\nをまたぐかを判断しています。\r\n\r\n
    \ e.g.\r\n    C:\\&gt;week 2007 12 31\r\n    Su Mo Tu We Th Fr Sa\r\n    30 31
    \ 1  2  3  4  5\r\n\r\n    C:\\&gt;week 2008  1  1\r\n    Su Mo Tu We Th Fr Sa\r\n
    \   30 31  1  2  3  4  5\r\n\r\n    C:\\&gt;week 2008  1 31\r\n    Su Mo Tu We
    Th Fr Sa\r\n    27 28 29 30 31  1  2\r\n\r\n    C:\\&gt;week 2008  2  1\r\n    Su
    Mo Tu We Th Fr Sa\r\n    27 28 29 30 31  1  2\r\n\r\n    C:\\&gt;week 2008  2
    29\r\n    Su Mo Tu We Th Fr Sa\r\n    24 25 26 27 28 29  1\r\n\r\n    C:\\&gt;week
    2009  2 28\r\n    Su Mo Tu We Th Fr Sa\r\n    22 23 24 25 26 27 28\r\n\r\n遅延環境変数展開を利用しているので、Windows
    NTでは動作しません。Windows XPで動作\r\nを確認。\r\n\r\n# ところで、これまで投稿したものを合わせると、「年間カレンダー」をもっと綺麗に書\r\n#
    けることに気がついた。巧妙に仕組まれた布石というか... こういうのを「孔明の罠」\r\n# というのだろうか? </pre>\n\t"
  :code: ":: week.bat\n@echo off\n  setlocal enabledelayedexpansion\n    set _= 030101001010\n
    \   set d=0\n    set f=0\n    set m=0\n    set l=0\n    set s=0\n    set t=\n
    \   set z=0\n\n    if \"%3\" == \"\" goto :EOF\n\n    echo %1%2%3|findstr /r \"[^0-9]\"
    &gt;NUL 2&gt;&amp;1\n    if %ERRORLEVEL% equ 0 (echo %~n0 [YEAR] [MONTH] [DAY]
    &amp; goto :EOF)\n\n    :: 指定された日の曜日を取得\n    call :Z %1 %2 %3 z\n\n    :: 指定された日が存在する週の日曜日の日付を取得\n
    \   set /a f=%3-%z%\n\n    :: 指定された月の日数を取得\n    set /a m=%2\n    :: 前月から指定された月にまたがる場合は月を補正\n
    \   if %f% leq 0 (\n      if %2 equ 1 (set /a m=12) else (set /a m=%2-1)\n    )\n
    \   set /a d=31-!_:~%m%,1!\n    if %m% equ 2 call :L %1 l\n    if %l% equ 1 set
    /a d+=1\n\n    :: 指定された日が存在する週の日付のリストを生成\n    for /l %%i in (0,1,6) do (\n      set
    /a s=%f%+%%i\n      if !s! leq   0 set /a s+=!d!\n      if !s! gtr !d! set /a
    s-=!d!\n      call :lpad !s! 2 s\n      set t=!t!!s!\n      if %%i lss 6 set t=!t!
    \n    )\n  endlocal &amp; (echo Su Mo Tu We Th Fr Sa) &amp; echo %t%\ngoto :EOF\n\n::
    うるう年の判定\n:L\n  setlocal enabledelayedexpansion\n    set n=0\n\n    set /a n=%1%%400\n
    \   if %n% equ 0 endlocal &amp; set %2=1 &amp; goto :EOF\n\n    set /a n=%1%%100\n
    \   if !n! equ 0 endlocal &amp; set %2=0 &amp; goto :EOF\n\n    set /a n=%1%%4\n
    \   if !n! equ 0 endlocal &amp; set %2=1 &amp; goto :EOF\ngoto :EOF\n\n:: ツェラーの公式\n:Z\n
    \ setlocal\n    set y=%1\n    set m=%2\n\n    if %m% leq 2 (set /a y-=1 &amp;
    set /a m+=12)\n\n  endlocal &amp; set /a %4=(5*%y%/4-%y%/100+%y%/400+(26*%m%+16)/10+%3)%%7\ngoto
    :EOF\n\n:lpad\n  setlocal enabledelayedexpansion\n    set l=0\n    set t=\n\n
    \   call :length %1 l\n    set /a l=%2-%l%\n    for /l %%i in (1,1,%l%) do set
    t=!t! \n  endlocal &amp; set %3=%t%%1\ngoto :EOF\n\n:length\n  setlocal\n    set
    i=0\n    set t=%1\n    set t=%t:\"=%\n\n    :loop\n      set t=%t:~1%\n      set
    /a i+=1\n    if not \"%t%\" == \"\" goto loop\n  endlocal &amp; set %2=%i%\ngoto
    :EOF\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5721'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/5721
  :user_name: silverwire
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/646/
  :language: 
  :time: 2008/02/10 06:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">一部不要な処理があったので、訂正します。\r\n\r\n  e.g.\r\n    48c48\r\n
    \   &lt;   setlocal enabledelayedexpansion\r\n    ---\r\n    &gt;   setlocal\r\n
    \   55c55\r\n    &lt;     if !n! equ 0 endlocal &amp; set %2=0 &amp; goto :EOF\r\n
    \   ---\r\n    &gt;     if %n% equ 0 endlocal &amp; set %2=0 &amp; goto :EOF\r\n
    \   58c58\r\n    &lt;     if !n! equ 0 endlocal &amp; set %2=1 &amp; goto :EOF\r\n
    \   ---\r\n    &gt;     if %n% equ 0 endlocal &amp; set %2=1 &amp; goto :EOF</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5749'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/5749
  :user_name: queck
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/681/
  :language: Other
  :time: 2008/02/13 05:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Factor です。日付の出力部分がもっとなんとかなる気がするのですが。</p>\n\n\t"
  :code: |
    USING: kernel calendar sequences math.parser io ;

    : write-date ( timestamp -- )
        dup timestamp-year number&gt;string write "/" write
        dup timestamp-month number&gt;string write "/" write
        dup timestamp-day number&gt;string write "(" write
        day-of-week day-abbreviations3 nth write ")\n" write ;

    : week-days ( year month day -- )
        make-date monday [ swap +day write-date ] curry 5 swap each ;

    ! example
    2008 2 13 week-days
    ! 2008/2/11(Mon)
    ! 2008/2/12(Tue)
    ! 2008/2/13(Wed)
    ! 2008/2/14(Thu)
    ! 2008/2/15(Fri)
  :tags:
  - Factor
  :references:
    :url: 
    :title: 
- :id: '5816'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/5816
  :user_name: まさぽん
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/711/
  :language: Scheme
  :time: 2008/02/20 23:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">指定した日付を、一度 Unix epoch からの秒数に直してから処理してます。\r\n\r\n実行例:\r\ngosh&gt;
    (print-weekday '(2007 12 31))\r\n2007/12/31 (Mon)\r\n2008/01/01 (Tue)\r\n2008/01/02
    (Wed)\r\n2008/01/03 (Thu)\r\n2008/01/04 (Fri)\r\n#&lt;undef&gt;\r\n\r\ngosh&gt;
    (print-weekday '(2008 2 28))\r\n2008/02/25 (Mon)\r\n2008/02/26 (Tue)\r\n2008/02/27
    (Wed)\r\n2008/02/28 (Thu)\r\n2008/02/29 (Fri)\r\n#&lt;undef&gt;</pre>\n\t"
  :code: "(use srfi-19)\n\n(define offsets-vec '#(( 1  2  3  4  5)\n                       (
    0  1  2  3  4)\n                       (-1  0  1  2  3)\n                       (-2
    -1  0  1  2)\n                       (-3 -2 -1  0  1)\n                       (-4
    -3 -2 -1  0)\n                       (-5 -4 -3 -2 -1)))\n\n(define print-weekday\n
    \ (lambda (ls)\n    (let* ((d (apply make-date 0 0 0 0 (reverse (cons 0 ls))))\n
    \          (utc (date-&gt;time-utc d))\n           (offsets (vector-ref offsets-vec
    (date-week-day d))))\n      (for-each (lambda (offset) \n                 (print\n
    \                 (date-&gt;string \n                   (time-utc-&gt;date \n
    \                   (make-time time-utc 0 (+ (* offset 86400) (time-second utc))))\n
    \                  \"~Y/~m/~d (~a)\")))\n                offsets))))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5817'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/5817
  :user_name: まさぽん
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/711/
  :language: Scheme
  :time: 2008/02/21 00:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">modified-julian-day 使えばもっとラクだったのかorz\r\n</pre>\n\t"
  :code: "(use srfi-19)\n\n(define offsets-vec '#(( 1  2  3  4  5) \n                       (
    0  1  2  3  4)\n                       (-1  0  1  2  3)\n                       (-2
    -1  0  1  2) \n                       (-3 -2 -1  0  1)\n                       (-4
    -3 -2 -1  0)\n                       (-5 -4 -3 -2 -1)))\n\n(define print-weekday\n
    \ (lambda (ls)\n    (let* ((d (apply make-date 0 0 0 0 (reverse (cons 0 ls))))\n
    \          (mjday (date-&gt;modified-julian-day d))\n           (offsets (vector-ref
    offsets-vec (date-week-day d))))\n      (for-each (lambda (offset) \n                 (print\n
    \                 (date-&gt;string \n                   (modified-julian-day-&gt;date
    (+ mjday offset))\n                   \"~Y/~m/~d (~a)\")))\n                offsets))))\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6728'
  :parent_id: '12'
  :url: http://ja.doukaku.org/comment/6728
  :user_name: genzou
  :user_url: /web/20090624020444/http://ja.doukaku.org/user/793/
  :language: Groovy
  :time: 2008/07/13 17:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "import java.util.*\nimport java.text.*\nimport static java.util.Calendar.*\n\ndef
    getWeek( y, m, d ){\n    def date = getInstance()\n    date.set(y, m-1, d)\n    \n
    \   def lastSaturday = date.time - (date.get(DAY_OF_WEEK) - SUNDAY + 1)\n\n    def
    formatter = new SimpleDateFormat(\"yyyy/MM/dd\")\n    MONDAY.upto(FRIDAY){ i -&gt;\n
    \       println formatter.format(lastSaturday + i)\n    }\n}\n\ngetWeek(2008,
    7, 13)\n"
  :tags:
  - groovy
  :references:
    :url: 
    :title: 
