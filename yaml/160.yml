---
:id: '160'
:title: 情報オリンピック2007年度国内本選問題3
:comments:
- :id: '5779'
  :parent_id: '160'
  :url: http://ja.doukaku.org/comment/5779
  :user_name: yukoba
  :user_url: /web/20081122152136/http://ja.doukaku.org/user/689/
  :language: 
  :time: 2008/02/19 03:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  <p>中高生向けの情報オリンピック国内本選2007年度問題1です。</p>\n<dl class=\"docutils\">\n<dt>問題文（下記PDFの6ページ目）</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122152136/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/2008-ho.pdf\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/2008-ho.pdf</a></dd>\n<dt>コンテスト概要</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122152136/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/index.html\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/index.html</a></dd>\n<dt>サンプルデータ（出題時に公開）</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122152136/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/joi2008.zip\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/joi2008.zip</a></dd>\n<dt>採点データ（出題時に非公開）</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122152136/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/data.zip\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/data.zip</a></dd>\n</dl>\n<p>「問題ごとに、プログラムの実行時間（や使用メモリ量）に制限が設定されています。」にご注意ください。本問では、制限時間1秒、メモリ制限64MBとなっています。</p>\n<p>出題時はサンプルデータのみが公開され、採点は、採点データによる、自動採点にて行われます。</p>\n<p>実際のコンテストでは、予選通過者48名が対象となっていて、100点満点中38点以上とった、16名が本選通過です。</p>\n\r\n\t"
  :code: ''
  :tags:
  - 情報オリンピック
  :references:
    :url: 
    :title: 
- :id: '5809'
  :parent_id: '160'
  :url: http://ja.doukaku.org/comment/5809
  :user_name: hyon
  :user_url: /web/20081122152136/http://ja.doukaku.org/user/724/
  :language: C
  :time: 2008/02/20 13:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ブログのほうでリクエストがありましたので書き込ませていただきます。\r\n公式ジャッジデータで時間内に正答することは一応確認しています。\r\n少しでも参考になれば幸いです。\r\n</pre>\n\t"
  :code: "#include&lt;iostream&gt;\n#include&lt;vector&gt;\n#include&lt;algorithm&gt;\n\n#define
    ALLOF(c) (c).begin(),(c).end()\n#define DEBUG(c) cerr&lt;&lt;\"&gt; \"&lt;&lt;#c&lt;&lt;\"
    = \"&lt;&lt;c&lt;&lt;endl;\n\nusing namespace std;\n\nint main()\n{\n    int n,m;
    cin&gt;&gt;n&gt;&gt;m;\n    \n    vector&lt;int&gt; seq(n);\n    for(int i=0;i&lt;n;i++)\n
    \       cin&gt;&gt;seq[i];\n    \n    for(int i=0;i&lt;n;i++)\n        for(int
    j=0;j&lt;n;j++)\n            seq.push_back(seq[i]+seq[j]);\n    \n    sort(ALLOF(seq));\n
    \   seq.erase(unique(ALLOF(seq)),seq.end());\n    seq.erase(upper_bound(ALLOF(seq),m),seq.end());\n
    \   \n    int res=seq.back();\n    int j=seq.size()-1;\n    for(int i=0;i&lt;seq.size();i++)\n
    \   {\n        for(;j&gt;=i &amp;&amp; seq[i]+seq[j]&gt;res;j--)\n        {\n
    \           if(seq[i]+seq[j]&lt;=m)\n            {\n                res=seq[i]+seq[j];\n
    \               break;\n            }\n        }\n    }\n    \n    cout&lt;&lt;res&lt;&lt;endl;\n
    \   \n    return 0;\n}\n"
  :tags: []
  :references:
    :url: /web/20081122152136/http://d.hatena.ne.jp/hyon/20080217/1203269032
    :title: JOI2007-2008 Honsen
- :id: '5966'
  :parent_id: '160'
  :url: http://ja.doukaku.org/comment/5966
  :user_name: yukoba
  :user_url: /web/20081122152136/http://ja.doukaku.org/user/689/
  :language: Java
  :time: 2008/03/06 08:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">しらみつぶしだと O(N^4) です。20％の得点がもらえます。\r\n\r\n3本までをしらみつぶしでやり、最後2分探索すると\r\nO(N^3
    log N) で50％の得点がもらえます。\r\n\r\n4本＝2本＋2本であることに着目すると、2本までをしらみつぶしでやり、\r\n最後2分探索すると
    O(N^2 log N) になり、満点となります。\r\n\r\n【擬似コード】\r\n\r\nデータを読み込む。データに0を追加\r\nN^2 の組み合わせを作る\r\nそれをソートする\r\nfor
    x &lt;- N^2 の組み合わせで M 以下\r\n    2分探索で、M-x 以下で最大の物を探し、xとの和をとる。\r\n    その最大値が答え\r\n</pre>\n\t"
  :code: |
    import java.io.BufferedReader;
    import java.io.InputStreamReader;
    import java.util.Arrays;

    public class P3 {
        public static void main(String[] args) throws Exception {
            // データの読み込み。データに０を追加
            BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
            String[] ary = in.readLine().split(" ");
            int N = Integer.parseInt(ary[0]);
            int M = Integer.parseInt(ary[1]);
            N++;
            int[] data = new int[N];
            for (int i = 1; i &lt; N; i++) {
                data[i] = Integer.parseInt(in.readLine());
            }

            // N^2 の組み合わせを作る
            int[] comb = new int[N * N];
            for (int i = 0; i &lt; N; i++) {
                for (int j = 0; j &lt; N; j++) {
                    comb[i * N + j] = data[i] + data[j];
                }
            }
            // それをソートする
            Arrays.sort(comb);

            // for x &lt;- N^2 の組み合わせで M 以下
            int max = 0;
            for (int i = 0; i &lt; comb.length; i++) {
                int x = comb[i];
                if (x &gt; M)
                    break;
                // 2分探索で、M-x以下で最大の物を探し、xとの和をとる。
                int bs = Arrays.binarySearch(comb, M - x);
                if (bs &lt; 0) {
                    bs = -(bs + 1);
                } else if (bs != comb.length) {
                    max = M;
                    break;
                }
                if (bs &gt; 0) {
                    max = Math.max(max, x + comb[bs - 1]);
                }
            }
            System.out.println(max);
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6314'
  :parent_id: '160'
  :url: http://ja.doukaku.org/comment/6314
  :user_name: ocean
  :user_url: /web/20081122152136/http://ja.doukaku.org/user/177/
  :language: C
  :time: 2008/05/21 22:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    #include &lt;iostream&gt;
    #include &lt;vector&gt;
    #include &lt;algorithm&gt;
    #include &lt;cassert&gt;

    typedef unsigned long ulong;

    template &lt;typename T&gt;
    void sort_and_unique(std::vector&lt;T&gt;&amp; v)
    {
        std::sort(v.begin(), v.end());

        v.erase(std::unique(v.begin(), v.end()), v.end());
    }

    int main()
    {
        size_t N;

        ulong M;

        assert(std::cin);

        std::cin &gt;&gt; N &gt;&gt; M;

        assert(1 &lt;= N &amp;&amp; N &lt;= 1000);

        assert(1 &lt;= M &amp;&amp; M &lt;= 200000000);

        // allows 1 throw

        std::vector&lt;ulong&gt; s1(1, 0); // 0 point == no throw

        s1.reserve(N + 1);

        for (size_t i = 0; i &lt; N; ++i)
        {
            ulong p;

            assert(std::cin);

            std::cin &gt;&gt; p;

            assert(1 &lt;= p &amp;&amp; p &lt;= 100000000);

            if (p &lt;= M)
            {
                s1.push_back(p);
            }
        }

        sort_and_unique(s1);

        // allows 2 throw

        std::vector&lt;ulong&gt; s2;

        s2.reserve(s1.size() * s1.size());

        for (size_t i = 0; i &lt; s1.size(); ++i)
        {
            for (size_t j = 0; j &lt; s1.size() &amp;&amp; s1[i] + s1[j] &lt;= M; ++j)
            {
                s2.push_back(s1[i] + s1[j]);
            }
        }

        sort_and_unique(s2);

        // allows 4 throw

        ulong max_point = 0;

        std::vector&lt;ulong&gt;::reverse_iterator rit = s2.rbegin();

        for (std::vector&lt;ulong&gt;::iterator it = s2.begin(); it != s2.end(); ++it)
        {
            while (rit != s2.rend() &amp;&amp; *it + *rit &gt; M)
            {
                ++rit;
            }

            if (rit == s2.rend())
            {
                break;
            }

            max_point = std::max(max_point, *it + *rit);
        }

        std::cout &lt;&lt; max_point &lt;&lt; std::endl;
    }
  :tags: []
  :references:
    :url: 
    :title: 
