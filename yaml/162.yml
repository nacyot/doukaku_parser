---
:id: '162'
:title: 情報オリンピック2007年度国内本選問題5
:comments:
- :id: '5781'
  :parent_id: '162'
  :url: http://ja.doukaku.org/comment/5781
  :user_name: yukoba
  :user_url: /web/20081122161717/http://ja.doukaku.org/user/689/
  :language: 
  :time: 2008/02/19 03:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  <p>中高生向けの情報オリンピック国内本選2007年度問題5です。</p>\n<dl class=\"docutils\">\n<dt>問題文（下記PDFの11ページ目）</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122161717/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/2008-ho.pdf\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/2008-ho.pdf</a></dd>\n<dt>コンテスト概要</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122161717/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/index.html\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/index.html</a></dd>\n<dt>サンプルデータ（出題時に公開）</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122161717/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/joi2008.zip\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/joi2008.zip</a></dd>\n<dt>採点データ（出題時に非公開）</dt>\n<dd><a
    class=\"reference\" href=\"/web/20081122161717/http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/data.zip\">http://www.ioi-jp.org/joi/2007/2008-ho-prob_and_sol/data.zip</a></dd>\n</dl>\n<p>「問題ごとに、プログラムの実行時間（や使用メモリ量）に制限が設定されています。」にご注意ください。本問では、制限時間1秒、メモリ制限64MBとなっています。</p>\n<p>出題時はサンプルデータのみが公開され、採点は、採点データによる、自動採点にて行われます。</p>\n<p>実際のコンテストでは、予選通過者48名が対象となっていて、100点満点中38点以上とった、16名が本選通過です。</p>\n\r\n\t"
  :code: ''
  :tags:
  - 情報オリンピック
  :references:
    :url: 
    :title: 
- :id: '5811'
  :parent_id: '162'
  :url: http://ja.doukaku.org/comment/5811
  :user_name: hyon
  :user_url: /web/20081122161717/http://ja.doukaku.org/user/724/
  :language: C
  :time: 2008/02/20 13:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ブログのほうでリクエストがありましたので書き込ませていただきます。\r\n公式ジャッジデータで時間内に正答することは一応確認しています。\r\n少しでも参考になれば幸いです。\r\n</pre>\n\t"
  :code: "#include&lt;iostream&gt;\n#include&lt;vector&gt;\n#include&lt;algorithm&gt;\n#include&lt;queue&gt;\n\n#define
    ALLOF(c) (c).begin(),(c).end()\n#define DEBUG(c) cerr&lt;&lt;\"&gt; \"&lt;&lt;#c&lt;&lt;\"
    = \"&lt;&lt;c&lt;&lt;endl;\n\nusing namespace std;\n\ntypedef pair&lt;int,int&gt;
    pt;\n\nvoid coordinate_compression(vector&lt;pt&gt; &amp;p1,vector&lt;pt&gt; &amp;p2)\n{\n
    \   vector&lt;int&gt; tx,ty;\n    for(int i=0;i&lt;p1.size();i++)\n    {\n        tx.push_back(p1[i].first);\n
    \       ty.push_back(p1[i].second);\n        tx.push_back(p2[i].first);\n        ty.push_back(p2[i].second);\n
    \   }\n    \n    sort(ALLOF(tx));\n    sort(ALLOF(ty));\n    tx.erase(unique(ALLOF(tx)),tx.end());\n
    \   ty.erase(unique(ALLOF(ty)),ty.end());\n    \n    for(int i=0;i&lt;p1.size();i++)\n
    \   {\n        p1[i].first=lower_bound(ALLOF(tx),p1[i].first)-tx.begin();\n        p1[i].second=lower_bound(ALLOF(ty),p1[i].second)-ty.begin();\n
    \       p2[i].first=lower_bound(ALLOF(tx),p2[i].first)-tx.begin();\n        p2[i].second=lower_bound(ALLOF(ty),p2[i].second)-ty.begin();\n
    \   }\n    \n    return;\n}\n\nvoid part_fill(vector&lt;pt&gt; &amp;p1,vector&lt;pt&gt;
    &amp;p2,vector&lt;vector&lt;int&gt; &gt; &amp;m)\n{\n    \n    vector&lt;pair&lt;pt,int&gt;
    &gt; p;\n    \n    for(int i=0;i&lt;p1.size();i++)\n    {\n        for(int j=p1[i].first;j&lt;p2[i].first;j++)\n
    \       {\n            p.push_back(make_pair(make_pair(j,p1[i].second),0));\n
    \           p.push_back(make_pair(make_pair(j,p2[i].second),1));\n        }\n
    \   }\n    \n    sort(ALLOF(p));\n    \n    pt s;\n    int cnt=0;\n    for(int
    i=0;i&lt;p.size();i++)\n    {\n        pt t=p[i].first;\n        int flg=p[i].second;\n
    \       if(flg==0)\n        {\n            if(!cnt++)\n                s=t;\n
    \       }\n        \n        if(flg==1)\n        {\n            if(!--cnt)\n            {\n
    \               for(int j=s.second;j&lt;t.second;j++)\n                    m[j][s.first]=1;\n
    \           }\n        }\n    }\n    \n    return;\n}\n\nvoid consecutive_part_fill(int
    x,int y,vector&lt;vector&lt;int&gt; &gt; &amp;m)\n{\n    int h=m.size();\n    int
    w=m[0].size();\n    \n    queue&lt;pt&gt; q;\n    q.push(make_pair(x,y));\n    \n
    \   while(!q.empty())\n    {\n        int cx=q.front().first;\n        int cy=q.front().second;\n
    \       q.pop();\n        \n        static int dx[]={1,-1,0,0};\n        static
    int dy[]={0,0,1,-1};\n        \n        for(int i=0;i&lt;4;i++)\n        {\n            int
    tx=cx+dx[i];\n            int ty=cy+dy[i];\n            \n            if(tx&lt;0
    || tx&gt;=w || ty&lt;0 || ty&gt;=h)\n                continue;\n            \n
    \           if(!m[ty][tx])\n            {\n                m[ty][tx]=1;\n                q.push(make_pair(tx,ty));\n
    \           }\n        }\n    }\n    \n    return;\n}\n\nint main()\n{\n    int
    w,h; cin&gt;&gt;w&gt;&gt;h;\n    int n; cin&gt;&gt;n;\n    \n    vector&lt;pt&gt;
    p1(n),p2(n);\n    for(int i=0;i&lt;n;i++)\n        cin&gt;&gt;p1[i].first&gt;&gt;p1[i].second&gt;&gt;p2[i].first&gt;&gt;p2[i].second;\n
    \   \n    p1.push_back(make_pair(0,0));\n    p2.push_back(make_pair(w,h));\n    \n
    \   coordinate_compression(p1,p2);\n    \n    w=p2.back().first;\n    h=p2.back().second;\n
    \   p1.pop_back();\n    p2.pop_back();\n    \n    vector&lt;vector&lt;int&gt;
    &gt; m(h,vector&lt;int&gt;(w,0));\n    \n    part_fill(p1,p2,m);\n    \n    int
    res=0;\n    for(int i=0;i&lt;h;i++)\n    {\n        for(int j=0;j&lt;w;j++)\n
    \       {\n            if(!m[i][j])\n            {\n                res++;\n                m[i][j]=1;\n
    \               consecutive_part_fill(j,i,m);\n            }\n        }\n    }\n
    \   \n    cout&lt;&lt;res&lt;&lt;endl;\n    \n    return 0;\n}\n"
  :tags: []
  :references:
    :url: /web/20081122161717/http://d.hatena.ne.jp/hyon/20080217/1203269032
    :title: JOI2007-2008 Honsen
- :id: '6324'
  :parent_id: '162'
  :url: http://ja.doukaku.org/comment/6324
  :user_name: ocean
  :user_url: /web/20081122161717/http://ja.doukaku.org/user/177/
  :language: C
  :time: 2008/05/23 14:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>時間内に終わらないデータがありますが（確か5-11）せっかくなので投稿。結局 map を少しずつ大きくしていくのは無駄で、hyon
    さんのようにがばっとマスキングテープの座標を vector に入れて、がばっと map を作成すべき。（あとで試してみるつもり）</p>\n\n\t"
  :code: |
    #include &lt;iostream&gt;
    #include &lt;algorithm&gt;
    #include &lt;vector&gt;
    #include &lt;queue&gt;
    #include &lt;utility&gt;
    #include &lt;cassert&gt;

    #define REP(i, b, e) for (size_t i = b; i &lt; e; ++i)

    size_t insert_x(std::vector&lt;long&gt;&amp; xs, std::vector&lt;std::vector&lt;int&gt; &gt;&amp; map, long x)
    {
        std::vector&lt;long&gt;::iterator it = std::lower_bound(xs.begin(), xs.end(), x);

        const size_t i = it - xs.begin();

        if (*it != x)
        {
            xs.insert(it, x);

            assert(i &gt;= 1);

            map.insert(map.begin() + i, map[i - 1]);
        }

        return i;
    }

    size_t insert_y(std::vector&lt;long&gt;&amp; ys, std::vector&lt;std::vector&lt;int&gt; &gt;&amp; map, long y)
    {
        std::vector&lt;long&gt;::iterator it = std::lower_bound(ys.begin(), ys.end(), y);

        const size_t i = it - ys.begin();

        if (*it != y)
        {
            ys.insert(it, y);

            assert(i &gt;= 1);

            REP(j, 0, map.size())
            {
                map[j].insert(map[j].begin() + i, map[j][i - 1]);
            }
        }

        return i;
    }

    int main()
    {
        long w, h;

        std::cin &gt;&gt; w &gt;&gt; h;

        assert(0 &lt;= w &amp;&amp; w &lt;= 1000000);
        assert(0 &lt;= h &amp;&amp; h &lt;= 1000000);

        size_t n;

        std::cin &gt;&gt; n;

        assert(1 &lt;= n &amp;&amp; n &lt;= 1000);

        std::vector&lt;long&gt; xs(2); xs[0] = 0; xs[1] = w;

        std::vector&lt;long&gt; ys(2); ys[0] = 0; ys[1] = h;

        std::vector&lt;std::vector&lt;int&gt; &gt; map(1, std::vector&lt;int&gt;(1, true));

        for (; n; --n)
        {
            long left, bottom, right, top; // masking tape

            std::cin &gt;&gt; left &gt;&gt; bottom &gt;&gt; right &gt;&gt; top;

            assert(left &lt; right);

            assert(bottom &lt; top);

            const size_t lower_xi = insert_x(xs, map, left);

            const size_t upper_xi = insert_x(xs, map, right);

            const size_t lower_yi = insert_y(ys, map, bottom);

            const size_t upper_yi = insert_y(ys, map, top);

            REP(xi, lower_xi, upper_xi) REP(yi, lower_yi, upper_yi)
            {
                map[xi][yi] = false;
            }
        }

        const size_t xn = xs.size() - 1;

        const size_t yn = ys.size() - 1;

        size_t count = 0;

        REP(xi, 0, xn) REP(yi, 0, yn) if (map[xi][yi])
        {
            ++count;

            std::queue&lt;std::pair&lt;size_t, size_t&gt; &gt; q;

    #define PUSH(XI, YI) if (map[XI][YI]) { map[XI][YI] = false; q.push(std::make_pair(XI, YI)); }

            PUSH(xi, yi);

            while (! q.empty())
            {
                const size_t xj = q.front().first;

                const size_t yj = q.front().second;

                q.pop();

                if (xj &gt;= 1) // left
                {
                    PUSH(xj - 1, yj);
                }

                if (yj &gt;= 1) // top
                {
                    PUSH(xj, yj - 1);
                }

                if (xj + 1 &lt; xn) // right
                {
                    PUSH(xj + 1, yj);
                }

                if (yj + 1 &lt; yn) // bottom
                {
                    PUSH(xj, yj + 1);
                }
            }

    #undef PUSH

        }

        std::cout &lt;&lt; count &lt;&lt; std::endl;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6325'
  :parent_id: '162'
  :url: http://ja.doukaku.org/comment/6325
  :user_name: ocean
  :user_url: /web/20081122161717/http://ja.doukaku.org/user/177/
  :language: C
  :time: 2008/05/23 14:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>map を一気に作るようにしてみましたが、それだけじゃ不足みたいですね・・・速くはなったけど依然時間何に終わらず。飽きたのでとりあえずここまで。</p>\n\n\t"
  :code: |
    #include &lt;iostream&gt;
    #include &lt;algorithm&gt;
    #include &lt;vector&gt;
    #include &lt;queue&gt;
    #include &lt;utility&gt;
    #include &lt;cassert&gt;

    #define REP(i, b, e) for (size_t i = b; i &lt; e; ++i)

    struct rect
    {
        long left, bottom, right, top;
    };

    template &lt;typename T&gt;
    void sort_and_unique(std::vector&lt;T&gt;&amp; v)
    {
        std::sort(v.begin(), v.end());

        v.erase(std::unique(v.begin(), v.end()), v.end());
    }

    template &lt;typename T&gt;
    size_t find(const std::vector&lt;T&gt;&amp; v, const T&amp; value)
    {
        std::vector&lt;T&gt;::const_iterator it = std::lower_bound(v.begin(), v.end(), value);

        assert(it != v.end());

        return it - v.begin();
    }

    int main()
    {
        long w, h;

        std::cin &gt;&gt; w &gt;&gt; h;

        assert(0 &lt;= w &amp;&amp; w &lt;= 1000000);
        assert(0 &lt;= h &amp;&amp; h &lt;= 1000000);

        size_t n;

        std::cin &gt;&gt; n;

        assert(1 &lt;= n &amp;&amp; n &lt;= 1000);

        std::vector&lt;rect&gt; tapes;

        for (; n; --n)
        {
            rect r;

            std::cin &gt;&gt; r.left &gt;&gt; r.bottom &gt;&gt; r.right &gt;&gt; r.top;

            assert(0 &lt;= r.left &amp;&amp; r.left &lt; r.right &amp;&amp; r.right &lt;= w);

            assert(0 &lt;= r.bottom &amp;&amp; r.bottom &lt; r.top &amp;&amp; r.top &lt;= h);

            tapes.push_back(r);
        }

        std::vector&lt;long&gt; xs(2); xs[0] = 0; xs[1] = w;
        std::vector&lt;long&gt; ys(2); ys[0] = 0; ys[1] = h;

        for (std::vector&lt;rect&gt;::const_iterator it = tapes.begin(); it != tapes.end(); ++it)
        {
            xs.push_back(it-&gt;left);
            xs.push_back(it-&gt;right);
            ys.push_back(it-&gt;bottom);
            ys.push_back(it-&gt;top);
        }

        sort_and_unique(xs);
        sort_and_unique(ys);

        const size_t xn = xs.size() - 1;
        const size_t yn = ys.size() - 1;

        std::vector&lt;std::vector&lt;int&gt; &gt; map(xn, std::vector&lt;int&gt;(yn, true));

        for (std::vector&lt;rect&gt;::const_iterator it = tapes.begin(); it != tapes.end(); ++it)
        {
            const size_t lower_xi = find(xs, it-&gt;left);
            const size_t upper_xi = find(xs, it-&gt;right);
            const size_t lower_yi = find(ys, it-&gt;bottom);
            const size_t upper_yi = find(ys, it-&gt;top);

            REP(xi, lower_xi, upper_xi) REP(yi, lower_yi, upper_yi)
            {
                map[xi][yi] = false;
            }
        }

        size_t count = 0;

        REP(xi, 0, xn) REP(yi, 0, yn) if (map[xi][yi])
        {
            ++count;

            std::queue&lt;std::pair&lt;size_t, size_t&gt; &gt; q;

    #define PUSH(XI, YI) if (map[XI][YI]) { map[XI][YI] = false; q.push(std::make_pair(XI, YI)); }

            PUSH(xi, yi);

            while (! q.empty())
            {
                const size_t xj = q.front().first;

                const size_t yj = q.front().second;

                q.pop();

                if (xj &gt;= 1) // left
                {
                    PUSH(xj - 1, yj);
                }

                if (yj &gt;= 1) // top
                {
                    PUSH(xj, yj - 1);
                }

                if (xj + 1 &lt; xn) // right
                {
                    PUSH(xj + 1, yj);
                }

                if (yj + 1 &lt; yn) // bottom
                {
                    PUSH(xj, yj + 1);
                }
            }

    #undef PUSH

        }

        std::cout &lt;&lt; count &lt;&lt; std::endl;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6601'
  :parent_id: '162'
  :url: http://ja.doukaku.org/comment/6601
  :user_name: ocean
  :user_url: /web/20081122161717/http://ja.doukaku.org/user/177/
  :language: diff
  :time: 2008/06/28 06:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>memsetを使うようにしたところ，大幅に高速化しました。</p>\n\n\t"
  :code: "--- 5.cpp    Wed Jun 25 16:56:20 2008\n+++ 5.cpp    Sat Jun 28 20:33:02
    2008\n@@ -5,6 +5,7 @@\n #include &lt;queue&gt;\n #include &lt;utility&gt;\n #include
    &lt;cassert&gt;\n+#include &lt;cstring&gt; // memset()\n \n #define REP(i, b,
    e) for (size_t i = b; i &lt; e; ++i)\n \n@@ -24,7 +25,7 @@\n template &lt;typename
    T&gt;\n size_t find(const std::vector&lt;T&gt;&amp; v, const T&amp; value)\n {\n-
    \   std::vector&lt;T&gt;::const_iterator it = std::lower_bound(v.begin(), v.end(),
    value);\n+    typename std::vector&lt;T&gt;::const_iterator it = std::lower_bound(v.begin(),
    v.end(), value);\n \n     assert(it != v.end());\n \n@@ -78,7 +79,7 @@\n     const
    size_t xn = xs.size() - 1;\n     const size_t yn = ys.size() - 1;\n \n-    std::vector&lt;std::vector&lt;int&gt;
    &gt; map(xn, std::vector&lt;int&gt;(yn, true));\n+    std::vector&lt;std::vector&lt;unsigned
    char&gt; &gt; map(xn, std::vector&lt;unsigned char&gt;(yn, 1));\n \n     for (std::vector&lt;rect&gt;::const_iterator
    it = tapes.begin(); it != tapes.end(); ++it)\n     {\n@@ -87,9 +88,9 @@\n         const
    size_t lower_yi = find(ys, it-&gt;bottom);\n         const size_t upper_yi = find(ys,
    it-&gt;top);\n \n-        REP(xi, lower_xi, upper_xi) REP(yi, lower_yi, upper_yi)\n+
    \       REP(xi, lower_xi, upper_xi)\n         {\n-            map[xi][yi] = false;\n+
    \           std::memset(&amp;map[xi][lower_yi], 0, (upper_yi - lower_yi) * sizeof(unsigned
    char));\n         }\n     }\n"
  :tags: []
  :references:
    :url: 
    :title: 
