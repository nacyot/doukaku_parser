---
:id: '197'
:title: LL Golf Hole 3 - 13日の金曜日を数え上げる
:comments:
- :id: '6985'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/6985
  :user_name: takano32
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/148/
  :language: Ruby
  :time: 2008/08/05 04:36 GMT
  :vote_count: '8'
  :vote_score: '4'
  :body: "\r\n\t  <p>今日から2013年12月31日までの、13日の金曜日とその総数を表示してください。\r\n</p>\r\n<p>余力のあるものはこのプログラムを短くしてみたり、短くしてみたり、短くしてください。\r\n</p>\r\n<p>※LL
    Future実行委員の高野光弘です。この出題は <a href=\"/web/20091213151542/http://ll.jus.or.jp/2008/\">LL
    Future</a>公式の出題であり、優れたものについては<a href=\"/web/20091213151542/http://ll.jus.or.jp/2008/program/doukaku\">LL
    Golf</a>のセッションでご紹介させていただくかもしれません。ご理解の上、ご投稿ください。また、<a href=\"/web/20091213151542/http://ll.jus.or.jp/2008/ticket\">LL
    Futureのチケットは現在も発売中</a>です。よろしければ、メインイベントの方にもぜひご参加ください。\r\n</p>\r\n\r\n\r\n\r\n\t"
  :code: "#!/usr/bin/env ruby\r\nrequire 'date'\r\n\r\nfrom = DateTime.now\r\nto =
    DateTime.parse(\"2013-12-31\")\r\n\r\nfriday = (from..to).inject(0) do |friday,
    date|\r\n    if date.mday == 13 and date.wday == 5 then\r\n        puts date.strftime('%Y-%m-%d')\r\n
    \       friday + 1\r\n    else\r\n        friday\r\n    end\r\nend\r\n\r\nputs
    friday\r\n"
  :tags:
  - LLGolf
  - doukaku
  - llfuture
  :references:
    :url: /web/20091213151542/http://www.ruby-lang.org/ja/man/html/DateTime.html
    :title: DateTime - Rubyリファレンスマニュアル
- :id: '6998'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/6998
  :user_name: 匿名
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/4/
  :language: Java
  :time: 2008/08/06 09:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>毎月の 13 日が金曜かどうかを調べ上げています。</p>\n<p>初めに現在が 13 日であるかどうか調べ、\n・13日より前なら、現在の日時を
    13 日に設定\n・13日より後なら、現在の日時を翌月の 13 日に設定\nとし、調べ上げを開始しています。</p>\n\n\t"
  :code: |
    import java.util.*;
    import static java.util.Calendar.*;
    public class Count13Friday {

        public static void main(String[] args) {
            Calendar to = new GregorianCalendar(2013, 12, 31);
            Calendar current = new GregorianCalendar();

            int currentDate = current.get(DATE);
            if (currentDate != 13) {
                current.set(DATE, 13);
                if (13 &lt; currentDate) {
                    current.add(MONTH, 1);
                }
            }

            List&lt;Date&gt; fridays = new ArrayList&lt;Date&gt;();
            while (current.compareTo(to) &lt;= 0) {
                if (current.get(DAY_OF_WEEK) == FRIDAY) {
                    fridays.add(current.getTime());
                }
                current.add(MONTH, 1);
            }
            System.out.println("Fridays = " + fridays);
        }

    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7000'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7000
  :user_name: 匿名
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/4/
  :language: diff
  :time: 2008/08/06 09:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>数の出力が抜けてました。</p>\n\n\t"
  :code: |
    bash.exe -c "diff -u old/Count13Friday.java Count13Friday.java"
    --- old/Count13Friday.java      2008-08-06 18:51:31.343750000 +0900
    +++ Count13Friday.java  2008-08-06 18:49:00.625000000 +0900
    @@ -22,6 +22,7 @@
                 current.add(MONTH, 1);
             }
             System.out.println("Fridays = " + fridays);
    +        System.out.println("Fridays count = " + fridays.size());
         }

     }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7001'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7001
  :user_name: sumim
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2008/08/06 10:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Squeak Smalltalk で。</p>\n\n\t"
  :code: "| fridayThe13ths |\nfridayThe13ths := (Date today to: 2013 asYear end) dates
    \n    select: [:date | date dayOfMonth = 13 and: [date dayOfWeekName = #Friday]].\nWorld
    findATranscript: nil.\n^fridayThe13ths do: [:each | Transcript cr; show: each];
    size\n"
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '7003'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7003
  :user_name: leque
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/840/
  :language: Scheme
  :time: 2008/08/06 10:32 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>素直な枝刈りとして毎月の13日だけを調べています。</p>\n<p>;; Eager comprehension の終点が exclusive
    なのでハマったのは秘密。</p>\n\n\t"
  :code: |
    (use srfi-1)
    (use srfi-19)
    (use srfi-42)

    (let ((ds (filter (compose (cut = &lt;&gt; 5) date-week-day)
                      (drop (list-ec (: y 2008 2014) (: m 1 13)
                                     (make-date 0 0 0 0 13 m y 0))
                            7))))
      (for-each (compose print (cut date-&gt;string &lt;&gt; "~1")) ds)
      (print (length ds)))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '7004'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7004
  :user_name: g000001
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/405/
  :language: Common
  :time: 2008/08/06 10:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  SERIESとMETATILITIESを利用してみました。\r<br><br>;&gt;&gt;&gt; Friday, February 13, 2009\r<br>;&gt;&gt;&gt; Friday, March 13, 2009\r<br>;&gt;&gt;&gt; Friday, November 13, 2009\r<br>;&gt;&gt;&gt; Friday, August 13, 2010\r<br>;&gt;&gt;&gt; Friday, May 13, 2011\r<br>;&gt;&gt;&gt; Friday, January 13, 2012\r<br>;&gt;&gt;&gt; Friday, April 13, 2012\r<br>;&gt;&gt;&gt; Friday, July 13, 2012\r<br>;&gt;&gt;&gt; Friday, September 13, 2013\r<br>;&gt;&gt;&gt; Friday, December 13, 2013\r<br>;==&gt; 10\n\t"
  :code: "(use-package :series)\n\n(defun friday13-p (ut)\n  (and (= 13 (nth-value
    3 (decode-universal-time ut)))\n       (= 4 (nth-value 6 (decode-universal-time
    ut)))))\n\n(let* ((from (get-universal-time))\n       (to (encode-universal-time
    59 59 23 31 12 2013))\n       (uts (choose-if #'friday13-p (scan-range :from from
    :upto to :by (* 60 60 24)))))\n  (iterate ((ut uts)) \n    (format t \"~A~%\"
    (metatilities:date-string ut)))\n  (collect-length uts))\n"
  :tags:
  - metatilities
  - series
  :references:
    :url: 
    :title: 
- :id: '7005'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7005
  :user_name: kozima
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/164/
  :language: Common
  :time: 2008/08/06 10:58 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <p>あんまりゴルフっぽくなりませんでした。\nanarchy golf なら embed するところ。</p>\n\n\t"
  :code: |
    (princ (loop for y from 2008 to 2013 sum
             (loop for m from 1 to 12
               as x = (encode-universal-time 0 0 0 13 m y)
               as a = (and (&lt; (get-universal-time) x)
                           (= (elt (multiple-value-list (decode-universal-time x)) 6) 4))
               count a if a do (format t "~D-~D-13~%" y m))))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7006'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7006
  :user_name: minke
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/28/
  :language: Python
  :time: 2008/08/06 12:02 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>とりあえずナイーブなものを。</p>\n\n\t"
  :code: |
    from datetime import*
    d,n=date.today(),0
    while d.year&lt;2014:
     if d.day==13 and d.weekday()==4:print d;n+=1
     d+=timedelta(1)
    print n
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7007'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7007
  :user_name: koguro
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/438/
  :language: Scheme
  :time: 2008/08/06 12:50 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <p>Lispといえば AI (Artificial Intelligence) ですが、今回はコンピュータの前にいる NI (Natural
    Intelligence) を使って解いてみました。ただ、信頼性がいまいち低いため、一部コンピュータにより補助を行い、精度を高めています。</p>\n<p>実行例:</p>\n<pre
    class=\"literal-block\">\n% gosh countup13fri.scm\n(... 略 ...)\n\n\n   December
    2013\nSu Mo Tu We Th Fr Sa\n 1  2  3  4  5  6  7\n 8  9 10 11 12 13 14\n15 16
    17 18 19 20 21\n22 23 24 25 26 27 28\n29 30 31\n\nこの月に13日の金曜日は含まれますか?\n含まれる場合は
    y, 疲れたときは g, それ以外のときはリターンキーを押してください:\ny\n2009/2/13\n2009/3/13\n2009/11/13\n2010/8/13\n2011/5/13\n2012/1/13\n2012/4/13\n2012/7/13\n2013/9/13\n2013/12/13\n==&gt;
    10\n</pre>\n<p>※実行には外部コマンドの cal が必要です。</p>\n\n\t"
  :code: |
    #!/usr/bin/env gosh

    (use gauche.process)

    (let* ((now (sys-localtime (sys-time)))
           (lst '()))
      (do ((y #0=(+ 1900 (ref now 'year)) (+ y 1)))
          ((&lt;= 2014 y)
           (dolist (elem (reverse lst))
             (apply format #t "~d/~d/13~%" elem))
           (format #t "==&gt; ~d~%" (length lst)))
        (do ((m 0 (+ m 1)))
            ((&lt;= 12 m))
          (unless (and (= #0# y)
                       (or (&lt; m #1=(ref now 'mon))
                           (and (= #1# m) (&lt; 13 (ref now 'mday)))))
            (let ((l (process-output-&gt;string-list `(cal ,(+ m 1) ,y))))
              (let loop ((ans (find #/8  9 10 11 12 13 14/ l)))
                (for-each print l)
                (print "この月に13日の金曜日は含まれますか?\n含まれる場合は y, 疲れたときは g, それ以外のときはリターンキーを押してください: ")
                (case (string-&gt;symbol (read-line))
                  ((y Y) (if ans
                             (push! lst (list y (+ m 1)))
                             #2=(begin
                                  (print "\n*** 本当ですか? もう一度よく確認してみてください ***\n")
                                  (loop ans))))
                  ((g G) (error "out of patience, aborting ..."))
                  (else
                   (when ans
                     #2#)))))))))
  :tags:
  - cal
  - gauche
  :references:
    :url: 
    :title: 
- :id: '7008'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7008
  :user_name: 匿名
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/08/06 07:56 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">文章では20013年とあり、プログラムは2013年となっていますがどちらでしょう。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7010'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7010
  :user_name: kkobayashi
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2008/08/06 16:11 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>2013年と都合よく解釈しました。</p>\n<p>私にはこのくらいが限度のようです。</p>\n\n\t"
  :code: |
    with(as.POSIXlt(l&lt;-(seq(Sys.Date(),as.Date("2013-12-31"),"d"))), length(print(l[mday==13 &amp; wday==5])))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7011'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7011
  :user_name: 匿名
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2008/08/06 11:38 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    var counter=0;
    var today = new Date();
    for(var y=2008;y&lt;2014;y++){
        for(var m=0;m&lt;12;m++){
            var d13= new Date(y,m,13);
            if(d13 &lt; today) continue;
            if(d13.getDay()==5){
                print(d13);
                counter++;
            }
        }
    }
    print(counter)
  :tags:
  - Rhino
  :references:
    :url: 
    :title: 
- :id: '7013'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7013
  :user_name: 匿名
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/4/
  :language: PHP
  :time: 2008/08/06 12:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>PHPがなかったので。\nあまりうまく書けませんでしたが。</p>\n\n\t"
  :code: |
    for($i=new DateTime;$i&lt;=new DateTime('2013-12-31');$i-&gt;modify('+1 day')){
     if($i-&gt;format('wd')==513){$s.=$i-&gt;format('Y-m-d ');++$n;}
    }echo$s,$n;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7014'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7014
  :user_name: lunlumo
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/813/
  :language: Scala
  :time: 2008/08/06 14:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>　素直に書いてみましたが，長いですね。</p>\n</div>\n\t"
  :code: "import    java.util.Calendar\nimport    java.text.SimpleDateFormat\n\nclass
    Friday13(from:Calendar) {\n    \n    var    f13:List[Calendar] = null\n    val
    \   to:Calendar = Calendar.getInstance\n    to.setTime((new SimpleDateFormat(\"yyyy/MM/dd\")).parse(\"2014/01/01\"))\n
    \   \n    def this() = this(Calendar.getInstance)\n    \n    def search:List[Calendar]
    = {\n        val    d:Calendar = from.clone.asInstanceOf[Calendar]\n        if
    (d.get(Calendar.DAY_OF_MONTH) &gt; 13) {\n            d.set(Calendar.DAY_OF_MONTH,1)\n
    \           d.add(Calendar.MONTH,1)\n        }\n        def search(l:List[Calendar],d:Calendar,to:Calendar):List[Calendar]
    = {\n            d.before(to) match {\n                case false =&gt; l\n                case
    _ =&gt; {\n                    val    n = d.clone.asInstanceOf[Calendar]\n                    n.add(Calendar.MONTH,1)\n
    \                   (d.get(Calendar.DAY_OF_WEEK) == Calendar.FRIDAY) match {\n
    \                       case true =&gt; search(l+d,n,to)\n                        case
    _ =&gt; search(l,n,to)\n                    }\n                }\n            }\n
    \       }\n        d.set(Calendar.DAY_OF_MONTH,13)\n        f13 = search(List(),d,to)\n
    \       f13\n    }\n    \n    def print:Unit = {\n        def print(l:List[Calendar]):Unit
    = l match {\n            case List() =&gt; ()\n            case d::rest =&gt;
    {\n                Console.printf(\"%04d/%02d/%02d\\n\",d.get(Calendar.YEAR),d.get(Calendar.MONTH)
    + 1,d.get(Calendar.DAY_OF_MONTH))\n                print(rest)\n            }\n
    \       }\n        print(f13)\n        Console.printf(\"%dday matched\\n\",f13.size)\n
    \   }\n}\n\nobject Main extends Application {\n    try {\n        val    f:Friday13
    = new Friday13(Calendar.getInstance)\n        f.search\n        f.print\n    }
    catch {\n        case e:Exception =&gt; e.printStackTrace\n    }\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7015'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7015
  :user_name: kh
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/654/
  :language: D
  :time: 2008/08/06 14:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    private import std.stdio, std.date;

    enum Friday = 5;

    void main(){
        auto count = 0;
        foreach(day; Day(getUTCtime) .. MakeDay(2014, 1, 1)) {
            auto date = MakeDate(day, 0);
            if(WeekDay(date) == Friday &amp;&amp; DateFromTime(date) == 13) {
                writefln("%04d-%02d-%02d", YearFromTime(date), MonthFromTime(date) + 1, DateFromTime(date));
                ++count;
            }
        }
        writeln(count);
    }
  :tags: []
  :references:
    :url: /web/20091213151542/http://www.digitalmars.com/d/2.0/phobos/std_date.html
    :title: std.date - D Programming Language - Digital Mars
- :id: '7016'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7016
  :user_name: lunlumo
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/813/
  :language: Scala
  :time: 2008/08/06 14:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>　少し短くしてみました。</p>\n</div>\n\t"
  :code: "import    java.util.Calendar\nimport    java.text.SimpleDateFormat\n\nclass
    Friday13 {\n    \n    val    to:Calendar = Calendar.getInstance\n    to.setTime((new
    SimpleDateFormat(\"yyyy/MM/dd\")).parse(\"2013/12/13\"))\n    \n    def print:Unit
    = {\n        def search(l:List[Calendar],d:Calendar):List[Calendar] = Calendar.getInstance().after(d)
    match {\n            case true =&gt; l\n            case _ =&gt; {\n                val
    \   n:Calendar = d.clone.asInstanceOf[Calendar]\n                n.add(Calendar.MONTH,-1)\n
    \               (d.get(Calendar.DAY_OF_WEEK) == Calendar.FRIDAY) match {\n                    case
    true =&gt; search(d::l,n)\n                    case _ =&gt; search(l,n)\n                }\n
    \           }\n        }\n        Console.printf(\"%dday matched\\n\",(search(List(),to).foldLeft(0)
    { (c,d) =&gt; Console.printf(\"%04d/%02d/%02d\\n\",d.get(Calendar.YEAR),d.get(Calendar.MONTH)+1,d.get(Calendar.DAY_OF_MONTH));
    c + 1 }))\n    }\n}\n\nobject Main extends Application {\n    try {\n        (new
    Friday13).print\n    } catch {\n        case e:Exception =&gt; e.printStackTrace\n
    \   }\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7017'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7017
  :user_name: takano32
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/148/
  :language: 
  :time: 2008/08/06 18:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ぎゃー、すみません。\r\n2013年の間違いです。\r\n修正させていただきました。</p>\r\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7018'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7018
  :user_name: あにす
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2008/08/06 20:51 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  C#は捻らずに素直に書いた方が短くなりますね。\n\t"
  :code: |
    using System;class P{static void Main(){DateTime d=DateTime.Now;int c=0;for(;d&lt;=new DateTime(2013,12,31);d=d.AddDays(1)){if(d.Day==13&amp;(int)(d.DayOfWeek)==5){Console.WriteLine(d);c++;}}Console.Write(c);}}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7019'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7019
  :user_name: matarillo
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/136/
  :language: C
  :time: 2008/08/07 02:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>まずはfor文で。誰かLINQ版を書こうよ。</p>\n\n\t"
  :code: |
    const int WEEK = 7;
    DateTime today = DateTime.Now.Date;
    DateTime from = today.AddDays((DayOfWeek.Friday - today.DayOfWeek + WEEK) % WEEK);
    DateTime to = new DateTime(2013, 12, 31);
    int count = 0;
    for (DateTime d = from; d &lt;= to; d = d.AddDays(WEEK))
    {
        if (d.Day == 13)
        {
            Console.WriteLine(d.ToShortDateString());
            count++;
        }
    }
    Console.WriteLine("{0} days", count);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7020'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7020
  :user_name: tnk
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/30/
  :language: Java
  :time: 2008/08/07 02:43 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">JavaはGolf向きじゃないんですよねー，といいつつChallenge。\r\n基本アルゴリズムは同じで，削れるだけ削ってみました。\r\n現在243バイト。</pre>\n\t"
  :code: |
    import java.util.*;class F{public static void main(String[]a){int n=0,d;for(Calendar c=new GregorianCalendar();c.get(1)&lt;2014;c.add(2,1)){d=c.get(5);c.set(5,13);if(d&lt;=13&amp;&amp;c.get(7)==6){System.out.println(c.getTime());n++;}}System.out.print(n);}}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7021'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7021
  :user_name: mattsan
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/833/
  :language: C
  :time: 2008/08/06 22:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>LLでないですし、ぜんぜん短くありませんし(ry</p>\n<p>えーっと。ほとんどCです。</p>\n<p>「今日から」の部分が一番面倒くさいことになってしまいました。</p>\n\n\t"
  :code: |
    #include &lt;ctime&gt;
    #include &lt;iostream&gt;

    int dayOfWeek(int y, int m, int d)
    {
        if((m == 1) || (m == 2))
        {
            y--;
            m += 12;
        }
        return (y + y / 4 - y / 100 + y / 400 + (13 * m + 8) / 5 + d) % 7;
    }

    int main(int, char* [])
    {
        std::time_t today   = std::time(0);
        std::tm*    todayTm = std::localtime(&amp;today);

        int count = 0;
        int m     = (todayTm-&gt;tm_mday &lt;= 13) ? todayTm-&gt;tm_mon : todayTm-&gt;tm_mon + 1;
        for(int y = todayTm-&gt;tm_year + 1900; y &lt;= 2013; ++y)
        {
            while(m &lt;= 12)
            {
                if(dayOfWeek(y, m ,13) == 5)
                {
                    std::cout &lt;&lt; y &lt;&lt; "/" &lt;&lt; m &lt;&lt; "/13" &lt;&lt; std::endl;
                    ++count;
                }
                ++m;
            }
            m = 1;
        }
        std::cout &lt;&lt; "total: " &lt;&lt; count &lt;&lt; std::endl;

        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7022'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7022
  :user_name: horiuchi
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/570/
  :language: Java
  :time: 2008/08/06 23:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Javaで頑張って短くしてみました。\n自分はこれが限界・・・。</p>\n\n\t"
  :code: |
    import java.util.*;public class P{public static void main(String[]s){int c=0;for(Calendar a=Calendar.getInstance();a.get(1)&lt;2014;a.add(5,1)){if(a.get(5)==13&amp;&amp;a.get(7)==6){System.out.println(a.getTime());c++;}}System.out.print(c);}}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7024'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7024
  :user_name: あにす
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2008/08/06 23:58 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>実はLINQも試したのですが、長くなったので投稿しませんでした。\nLINQで抽出する対象のDateTimeのコレクションを作る為に結局ループを回しちゃってるんですよね。</p>\n\n\t"
  :code: |
    using System;using System.Collections.Generic;using System.Linq;class C{static void Main(){List&lt;DateTime&gt;l=new List&lt;DateTime&gt;();for(DateTime d=DateTime.Now;d&lt;=new DateTime(2013,12,31);d=d.AddDays(1)){l.Add(d);}var v=from f in l where(int)(f.DayOfWeek)==5&amp;f.Day==13select f.Date;foreach(var d in v){Console.WriteLine(d);}Console.Write(v.Count&lt;DateTime&gt;());}}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7027'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7027
  :user_name: athos
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/755/
  :language: C
  :time: 2008/08/07 01:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">ツェラーの公式を変形して。「今日の日付」はコマンドライン引数でもらいます。\r\n\r\n$
    ./fri13 2008 8 7\r\n'09年2月13日\r\n'09年3月13日\r\n'09年11月13日\r\n'10年8月13日\r\n'11年5月13日\r\n'12年1月13日\r\n'12年4月13日\r\n'12年7月13日\r\n'13年9月13日\r\n'13年12月13日\r\n総数：10個\r\n$</pre>\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    #include &lt;stdlib.h&gt;

    int main(int c, char *v[]) {
      int n = 0, y, m, y0 = atoi(v[1])-2000, m0 = atoi(v[2]);
      if (m0 &lt; 3) { y0--; m0 += 12; }
      for (y = y0; y &lt; 14; y++)
        for (m = 3; m &lt; 15; m++) {
          if (y == y0 &amp;&amp; (m &lt; m0 || (m == m0 &amp;&amp; atoi(v[3]) &gt; 13))) continue;
          if (!((26*(m+1)/10+y+y/4)%7)) {
            printf("'%02d年%d月13日\n", (m&gt;=13)?y+1:y, (m&gt;=13)?m-12:m);
            n++;
          }
        }
      printf("総数：%d個\n", n);

      return 0;
    }
  :tags: []
  :references:
    :url: /web/20091213151542/http://ja.wikipedia.org/wiki/%E3%83%84%E3%82%A7%E3%83%A9%E3%83%BC%E3%81%AE%E5%85%AC%E5%BC%8F
    :title: ツェラーの公式
- :id: '7028'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7028
  :user_name: pinzolo
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/868/
  :language: C
  :time: 2008/08/07 01:15 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <p>LINQのみ。\nもうちょっと書きようがあるかなぁ？</p>\n\n\t"
  :code: |
    DateTime today = DateTime.Now.Date;
    var q = from year in Enumerable.Range(today.Year, 2014 - today.Year)
            from month in Enumerable.Range(1, 12)
            let d = new DateTime(year, month, 13)
            where (d.DayOfWeek == DayOfWeek.Friday) &amp;&amp; (d &gt;= today)
            select d;
    foreach (DateTime d in q)
    {
        Console.WriteLine("{0:yyyy/MM/dd(ddd)}", d);
    }
    Console.WriteLine(q.Count());
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7029'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7029
  :user_name: だいら
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/468/
  :language: PHP
  :time: 2008/08/07 01:34 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: |
    &lt;?for(;1388415600&gt;$t=strtotime($i++."day");$c+=date(dw,$t)-135?0:print date("Y-m-d
    ",$t));echo$c;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7031'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7031
  :user_name: sekia
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/588/
  :language: Perl
  :time: 2008/08/07 01:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ワンライナで157バイト。かなり行儀悪いです。</p>\n\n\t"
  :code: |
    perl -MClass::Date=now,date -e"$d=now;$d+=[0,$d-&gt;day&gt;13,13-$d-&gt;day];$\=\"\n\";until($d&gt;date '2013-12-31'){++$_&amp;&amp;print$d-&gt;ymd if$d-&gt;wday==6;$d+='0-1-0'}print"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7032'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7032
  :user_name: あにす
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/504/
  :language: 
  :time: 2008/08/07 06:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  おぉ！これがやりたかったんですよ。\r<br>勉強になりました。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7033'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7033
  :user_name: cappuccino
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/549/
  :language: C
  :time: 2008/08/07 03:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    using System;
    using System.Linq;

    class Program
    {
        static void Main()
        {
            var d =
                from n in Enumerable.Range(0, (new DateTime(2013, 12, 31) - DateTime.Today).Days)
                where DateTime.Today.AddDays(n).Day == 13
                where DateTime.Today.AddDays(n).DayOfWeek == DayOfWeek.Friday
                select DateTime.Today.AddDays(n);

            foreach (var item in d)
            {
                Console.WriteLine(item.ToShortDateString());
            }
            Console.WriteLine(d.Count());
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7035'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7035
  :user_name: kgbu
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/847/
  :language: Erlang
  :time: 2008/08/07 04:02 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">大元になる日付のリストは素直に1日ごとのものを生成しています。\r\nescript
    ファイル名\r\nとして実行します。\r\n実行結果例(2008/8/7に実行)\r\n[{2009,2,13},\r\n {2009,3,13},\r\n
    {2009,11,13},\r\n {2010,8,13},\r\n {2011,5,13},\r\n {2012,1,13},\r\n {2012,4,13},\r\n
    {2012,7,13},\r\n {2013,9,13},\r\n {2013,12,13}]\r\n10 days</pre>\n\t"
  :code: |
    main(_) -&gt;
            L=a(date(),{2013,12,31}),
        M=[{X,Y,13} || {X,Y,13} &lt;- L, calendar:day_of_the_week({X,Y,13}) =:= 5],
        io:format("~p~n~p days~n", [M, length(M)]).

    a(X,X) -&gt; [X];
    a(X,Y) -&gt; [X] ++ a(calendar:gregorian_days_to_date(
                     calendar:date_to_gregorian_days(X)+1),Y).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7036'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7036
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/304/
  :language: Ruby
  :time: 2008/08/07 04:39 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  \n\t"
  :code: |
    require'date'
    i=0
    Date.today.upto(Date.new(2014)-1){|d|puts d.strftime'%Y-%m-%d'if d.mday*d.wday==65&amp;&amp;i+=1}
    puts i
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7038'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7038
  :user_name: raynstard
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/127/
  :language: C
  :time: 2008/08/07 05:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Cだとmktime(3C)を使うと便利です。\r\nまぁ、ほんとにmktime()が本領発揮するのは日時へ変換したときなのですけど^^;;\r\n\r\n//
    gcc -Wall -std=c99 doukaku197.c -o doukaku197</pre>\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    #include &lt;time.h&gt;

    static const char *weekdayname[] = {"Sun","Mon","Tue","Wed","Thi","Fri","Sat"};

    int main(int argc, char *argv[])
    {
        static const int YEAR_END = (2013 - 1900) + 1;
        struct tm t      = {0};
        time_t    now    = 0;
        int       count  = 0;

        now = time(NULL);
        localtime_r(&amp;now, &amp;t);
        t.tm_mday = 13; // 13日固定

        /* 2014年までの13日の金曜日を検索する */
        count = 0;
        while( t.tm_year &lt; YEAR_END )
        {
            // 13日の金曜日を探す
            if( t.tm_wday == 5 )
            {
                // 13日の金曜日なら表示してカウントアップ
                printf("%d/%02d/%02d (%s)\n"
                        , t.tm_year+1900, t.tm_mon+1, t.tm_mday
                        , weekdayname[ t.tm_wday ]);
                count ++;
            }
            t.tm_mon ++;
            mktime( &amp;t ); // 日時の再計算(正規化)
        }
        printf("COUNT:[%d]\n", count);

        return 0;
    }
    /* EOF */
  :tags:
  - C99
  :references:
    :url: 
    :title: 
- :id: '7039'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7039
  :user_name: nskj77
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/375/
  :language: Haskell
  :time: 2008/08/07 06:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">愚直なつくりをしています。\r\n*Main&gt; :main\r\n(10,[2009-02-13,2009-03-13,2009-11-13,2010-08-13,2011-05-13,2012-01-13,2012-04-13,2012-07-13,2013-09-13,2013-12-13])</pre>\n\t"
  :code: "module Main where\n\nimport Data.Time\nimport Data.Time.Calendar.WeekDate\nimport
    Control.Arrow\n\ngetCurrentZonedTime :: a -&gt; IO ZonedTime\ngetCurrentZonedTime
    = (const getCurrentTimeZone &amp;&amp;&amp; const getCurrentTime)\n         &gt;&gt;&gt;
    joinTuple \n         &gt;&gt;&gt; (=&lt;&lt;) (return . uncurry utcToZonedTime)\n
    \ where joinTuple :: Monad m =&gt; (m a, m b) -&gt; m (a, b)\n        joinTuple
    (x,y) = do { x' &lt;- x; y' &lt;- y; return (x',y') }\n\ncheck :: Day -&gt; Bool\ncheck
    day = thirteen &amp;&amp; friday\n  where thirteen = \"31\" == (take 2 $ reverse
    $ show day)\n        friday = case toWeekDate day of (_,_,5) -&gt; True; _ -&gt;
    False                                                     \n\nfriday13s lst =
    Kleisli getCurrentZonedTime \n              &gt;&gt;&gt; arr (localDay . zonedTimeToLocalTime)\n
    \             &gt;&gt;&gt; arr (flip enumFromTo lst)\n              &gt;&gt;&gt;
    arr (filter check)\n              &gt;&gt;&gt; arr (length &amp;&amp;&amp; id)
    &gt;&gt;&gt; Kleisli print\n\nmain = runKleisli (friday13s (read \"2013-12-31\"))
    ()\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7040'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7040
  :user_name: matyr
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/343/
  :language: JavaScript
  :time: 2008/08/07 06:34 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  若干表示が汚い。\n\t"
  :code: |
    javascript:for(a=[0],d=new Date;d&lt;1387e9;d=new Date(d-=-864e5))d.getDate()*d.getDay()-65?7:a[++a[0]]=d;a
  :tags:
  - Bookmarklet
  :references:
    :url: 
    :title: 
- :id: '7041'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7041
  :user_name: syat
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/766/
  :language: BASIC
  :time: 2008/08/07 12:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>投稿 #7027 の式を借りました。N88互換BASICで確認。</p>\n\n\t"
  :code: |
    1 z=08:n=8:c=1:if n&lt;3 then n=n+12
    2 for y=z to 13:for m=n+1 to 15:if 0&lt;(m*26\10+y+y\4)mod 7 then 4
    3 ?c,y+2000+m\14;(m-2)mod 12+1;13:c=c+1
    4 n=3:next m,y
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7043'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7043
  :user_name: kgbu
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/847/
  :language: Erlang
  :time: 2008/08/07 09:00 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">申し訳ありません、動かないコードを投稿してしまいました。\r\n最初に投稿したものは、最初に空行が必要でした。\r\n(escriptコマンドは、最初の行を無視するため)\r\n最初の行をコメントとして、コードも多少短くしたものを再投稿いたします。\r\n\r\n実行方法と結果は、以下のように、元記事と同様です。\r\n\r\nescript
    スクリプトのファイル名\r\n[{2009,2,13},\r\n {2009,3,13},\r\n {2009,11,13},\r\n {2010,8,13},\r\n
    {2011,5,13},\r\n {2012,1,13},\r\n {2012,4,13},\r\n {2012,7,13},\r\n {2013,9,13},\r\n
    {2013,12,13}]\r\n10 days</pre>\n\t"
  :code: |
    %%
    main(_)-&gt;M=[{X,Y,13}||{X,Y,13}&lt;-a(date(),{2013,12,31}),calendar:day_of_the_week({X,Y,13})=:=5],io:format("~p~n~p days~n",[M,length(M)]).
    a(X,X)-&gt;[X];
    a(X,Y)-&gt;[X]++a(calendar:gregorian_days_to_date(calendar:date_to_gregorian_days(X)+1),Y).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7044'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7044
  :user_name: kkobayashi
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2008/08/07 10:35 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>短くしてみました。</p>\n\n\t"
  :code: |
    l=Sys.Date():16070;class(l)="Date";length(print(l[format(l,"%d%w")==135]))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7045'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7045
  :user_name: wataken44
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/854/
  :language: Ruby
  :time: 2008/08/07 11:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  ==65いいですね。\r\n\r\n参考にして（ぱくって）みました。\r\n89byte。。。\n\t"
  :code: |
    ruby -rdate -e'Date.today.upto(Date.new(2014)){|d|(warn d;p d)if d.day*d.wday==65}'|wc -l
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7046'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7046
  :user_name: wataken44
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/854/
  :language: Ruby
  :time: 2008/08/07 11:18 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  まだ縮んだ。\n\t"
  :code: |
    ruby -rdate -e'Date.today.upto(Date.new(2014)){|d|(p warn(d))if d.day*d.wday==65}'|wc -l
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7047'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7047
  :user_name: pooq
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/08/07 12:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">実行した日から2013年12月31日までの日付のテーブルをつくり13日を取り出し\r\nその中から金曜日を取り出しています。\r\n\r\n実行結果\r\n2009
    \ 2 13\r\n2009  3 13\r\n2009 11 13\r\n2010  8 13\r\n2011  5 13\r\n2012  1 13\r\n2012
    \ 4 13\r\n2012  7 13\r\n2013  9 13\r\n2013 12 13</pre>\n\t"
  :code: |
    load'dates'
    exit wd(#~5&amp;=&amp;weekday)(#~13&amp;=&amp;{:"1)todate(+i.&amp;(78161&amp;-))todayno 3{.6!:0''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7048'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7048
  :user_name: matyr
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/343/
  :language: JavaScript
  :time: 2008/08/07 15:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  IEは正規表現，Safariは出力でNG。\n\t"
  :code: |
    javascript:for(a=[0],d=new Date;d&lt;1387e9;d=new Date(d-=-864e5))/i\D+13/(d)?a[++a[0]]=d:0;a
  :tags:
  - Bookmarklet
  - FireFox
  - Opera
  :references:
    :url: 
    :title: 
- :id: '7049'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7049
  :user_name: nori
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/59/
  :language: Python
  :time: 2008/08/07 19:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>アフィリエイトが無いのが残念。</p>\n<p><a class=\"reference\" href=\"/web/20091213151542/http://www.amazon.co.jp/gp/product/B000FPV7T8/\">http://www.amazon.co.jp/gp/product/B000FPV7T8/</a></p>\n\n\t"
  :code: |
    #!/usr/bin/env python
    # -*- coding: us-ascii -*-
    # vim: syntax=python

    import datetime

    def is_jason_friday(d):
      assert isinstance(d, datetime.date)
      return d.day == 13 and d.weekday() == 4

    def next_friday(d):
      assert isinstance(d, datetime.date)
      for delta in range(1, 8):
        next = d + datetime.timedelta(delta)
        if next.weekday() == 4:
          return next

    def friday_generator(start, end):
      assert isinstance(start, datetime.date)
      assert isinstance(end, datetime.date)
      d = start
      while d.toordinal() &lt; end.toordinal():
        d = next_friday(d)
        if not d:
          break
        yield d

    start = datetime.date.today()
    end = datetime.date(2013, 12, 31)
    count = 0
    for d in friday_generator(start, end):
      if is_jason_friday(d):
        count+=1
        print d
    print count
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7050'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7050
  :user_name: nori
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/59/
  :language: Python
  :time: 2008/08/07 19:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>バグの修正</p>\n\n\t"
  :code: |
    ----  before
      d = start
      while d.toordinal() &lt; end.toordinal():
        d = next_friday(d)
        if not d:
          break
        yield d

    ---- after
      d = next_friday(start)
      while d.toordinal() &lt; end.toordinal():
        yield d
        d = next_friday(d)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7051'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7051
  :user_name: nori
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/59/
  :language: Python
  :time: 2008/08/07 20:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">datetime_rangeを用意して\r\na) 来週の金曜日\r\nb) 次の月の13日\r\nをもとめるやりかた両方をかけるようにした。</pre>\n\t"
  :code: |
    # -*- coding: us-ascii -*-
    # vim: syntax=python

    import datetime

    def is_jason_friday(d):
      assert isinstance(d, datetime.date)
      return d.day == 13 and d.weekday() == 4

    def next_friday(d):
      assert isinstance(d, datetime.date)
      for delta in range(7, 0, -1):
        next = d + datetime.timedelta(delta)
        if next.weekday() == 4:
          return next

    def next_13th_of_month(d):
      if d.day &lt; 13:
        return d.replace(day=13)
      else:
        assert d.day &gt;= 13
        e = d + datetime.timedelta(30)
        return e.replace(day=13)

    def datetime_range(start, end, succ):
      assert isinstance(start, datetime.date)
      assert isinstance(end, datetime.date)
      d = succ(start)
      assert isinstance(d, datetime.date)
      while d.toordinal() &lt; end.toordinal():
        yield d
        d = succ(d)

    start = datetime.date.today()
    end = datetime.date(2013, 12, 31)
    count = 0
    #for d in datetime_range(start, end, next_friday):
    for d in datetime_range(start, end, next_13th_of_month):
      if is_jason_friday(d):
        count+=1
        print d
    print count
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7052'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7052
  :user_name: 99yen
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/591/
  :language: 
  :time: 2008/08/07 20:48 GMT
  :vote_count: '4'
  :vote_score: '2'
  :body: "\n\t  <p>なでしこで。</p>\n\n\t"
  :code: |
    C=0;D="{今年}/{今月}/13"
    もし(MID(今日,9,2)&gt;13)ならば
        D=Dに"/1/"を日付加算
    (D&lt;&gt;"2014/01/13")の間
        もし(Dの曜日="金")ならば
            C=C+1
        D=Dに"/1/"を日付加算
    Cを表示
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7053'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7053
  :user_name: nori
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/59/
  :language: 
  :time: 2008/08/07 20:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>todayが1/31だと2/13が飛ばされる！\n30じゃなくて19を足してください。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7054'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7054
  :user_name: pooq
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/08/07 21:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">すみません。総数の表示が抜けていました。</pre>\n\t"
  :code: |
    load'dates'
    exit wd(":,":&amp;#)(#~5&amp;=&amp;weekday)(#~13&amp;=&amp;{:"1)todate(+i.&amp;(78161&amp;-))todayno 3{.6!:0''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7055'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7055
  :user_name: M.Suzuki
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/771/
  :language: Haskell
  :time: 2008/08/08 03:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">方法は、各年の全月の13日が金曜日か調べるだけです。\r\nが、目的の日付の曜日を調べる手軽な手段を見つけられなかったので、\r\nClockTime
    と CalendarTime を相互変換して、\r\n 曜日を得るために addToClockTime すると言う、なんか変な事になっています。</pre>\n\t"
  :code: |
    module Main (main) where
    import Time
    import Control.Monad
    import System.IO.Unsafe

    crossProduct :: [a] -&gt; [b]-&gt; [(a,b)]
    crossProduct = liftM2 p
        where
            p x y = (x,y)

    isJason :: (Int,Int) -&gt; Bool
    isJason (year,month) = week == Friday
        where
            mon = toEnum (month-1) :: Month
            clock = toClockTime $ CalendarTime year mon 13 0 0 0 0 Sunday 0 "JST" 9 False
            time = addToClockTime (TimeDiff 0 0 0 0 0 0 0) clock
            week = ctWDay $ unsafePerformIO $ toCalendarTime time

    isAfter :: CalendarTime -&gt; (Int,Int) -&gt; Bool
    isAfter cal (year,month) =
        year &gt; ctYear cal || month &gt; (fromEnum $ ctMonth cal) || 13 &lt;= ctDay cal

    main :: IO ()
    main = do
        time &lt;- getClockTime
        cal &lt;- toCalendarTime time
        putStrLn $ show $
            filter (isAfter cal) $
            filter (isJason) $ crossProduct [(ctYear cal)..2013] [1..12]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7056'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7056
  :user_name: horiuchi
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/570/
  :language: 
  :time: 2008/08/08 00:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>public class P の publicを消して、224バイト。\nこれがJavaの限界かな？と1日考えた自分の結論です。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7057'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7057
  :user_name: matyr
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/343/
  :language: Groovy
  :time: 2008/08/08 01:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  88B。出力はエラーで。\n\t"
  :code: |
    Calendar.instance.with{for(a=[];get(1)&lt;2014;add(5,1))time=~/i\D+13/&amp;&amp;a&lt;&lt;time}
    0&amp;a+a.size
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7058'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7058
  :user_name: matyr
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/343/
  :language: Ruby
  :time: 2008/08/08 01:22 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  56B。\n\t"
  :code: |
    rq'date'
    a=De.y.up(De.w 2014).s{|d|d.d*d.w==65}
    s a,a.sz
  :tags:
  - goruby
  :references:
    :url: 
    :title: 
- :id: '7059'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7059
  :user_name: mattsan
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/833/
  :language: Haskell
  :time: 2008/08/08 07:24 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>今日の日付の取得の仕方があやしいです。</p>\n\n\t"
  :code: |
    import Data.Time
    import Data.Time.Calendar.OrdinalDate

    isFriday d =
      case sundayStartWeek d of
        (_, 5)    -&gt; True
        otherwise -&gt; False

    main = do
      today &lt;- getZonedTime &gt;&gt;= \ zt -&gt; (return.localDay.zonedTimeToLocalTime) zt
      let fridays = filter isFriday $ filter (today &lt;=) [fromGregorian y m 13 | y &lt;- [2008..2013], m &lt;-[1..12]]
      mapM_ (putStrLn.show) fridays
      putStrLn $ (show $ length fridays) ++ " days"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7060'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7060
  :user_name: hogee
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/826/
  :language: Perl
  :time: 2008/08/08 06:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Date::Simple使って書いてみました。112バイト。day_of_weekが長い・・・。</p>\n\n\t"
  :code: |
    use Date::Simple(':all');
    for($t=today;$t&lt;d8('20131231');$t++)
    {print$t."\n" if($t-&gt;day_of_week==5&amp;&amp;$t-&gt;day==13);}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7061'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7061
  :user_name: mattsan
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/833/
  :language: Delphi
  :time: 2008/08/08 07:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>あらためてDelphi(Pascal)で書いてみると。他の言語と比べて変数が多くなってしまう感じです。</p>\n<p>現在、手元にDephiがなかったのでFree
    PascalのDelphi互換(-Mdelphiオプション)でコンパイルしています。</p>\n\n\t"
  :code: |
    program Doukaku197;

    {$APPTYPE CONSOLE}

    uses
      SysUtils;

    var
      Day, Max: TDateTime;
      Y, M, D:  Word;
      I:        Integer;
    begin
      Day := Date;
      Max := EncodeDate(2013, 12, 31);
      I   := 0;
      while Day &lt;= Max do
      begin
        DecodeDate(Day, Y, M, D);
        if (D = 13) and (DayOfWeek(Day) = 6) then
        begin
          WriteLn(Y, '/', M, '/', D);
          Inc(I);
        end;
        Day := Day + 1;
      end;
      WriteLn(I, ' days');
    end.
  :tags:
  - FreePascal
  :references:
    :url: 
    :title: 
- :id: '7062'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7062
  :user_name: hogee
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/826/
  :language: Perl
  :time: 2008/08/08 07:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>書き方少し見直しました。108バイト。</p>\n\n\t"
  :code: |
    use Date::Simple(':all');
    for($t=today;$t++&lt;d8('20131231');)
    {print$t."\n"if($t-&gt;day_of_week==5&amp;&amp;$t-&gt;day==13)}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7063'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7063
  :user_name: pooq
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/08/08 12:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">フックとフォークを使うと頭くらくらしてくるけど、すこし縮んだ。</pre>\n\t"
  :code: |
    exit wd(":,":&amp;#)(#~13={:"1)todate(#~2=7|])(+[:i.78161-])todayno 3{.6!:0''[load'dates'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7064'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7064
  :user_name: tnk
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/30/
  :language: Java
  :time: 2008/08/08 13:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>括弧が一組削れます。これで222バイト。</p>\n\n\t"
  :code: |
    import java.util.*;class P{public static void main(String[]s){int c=0;for(Calendar a=Calendar.getInstance();a.get(1)&lt;2014;a.add(5,1))if(a.get(5)==13&amp;&amp;a.get(7)==6){System.out.println(a.getTime());c++;}System.out.print(c);}}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7066'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7066
  :user_name: emasaka
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/852/
  :language: Bash
  :time: 2008/08/09 00:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>bash＋dateコマンドのみの危険実装です。\r</p>\n<p>\r</p>\n<ul>\n<li>\n
    実行にはroot権限が必要です\r\n</li>\n<li> 実行するとシステムの日付が狂って2014年1月1日になります。実用環境では決して実行しないでください</li>\n</ul>\n</div>\n\t"
  :code: |
    LANG=C
    while [[ `date` != *2014 ]];do
      r=`date|(read w m d t z y;[ $d = 13 -a $w = Fri ] &amp;&amp; echo "$m $d $y")`
      [ "$r" != '' ] &amp;&amp; ((++i)) &amp;&amp; echo $r
      date -s tomorrow&gt;/dev/null
    done
    echo $i
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7097'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7097
  :user_name: matyr
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/343/
  :language: Scheme
  :time: 2008/08/10 20:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  178B。秒 -&gt; &lt;time&gt; -&gt; &lt;date&gt;が辛い。\n\t"
  :code: |
    (use srfi-19)(do([o()(if(#/i\D+13/(date-&gt;string #0=(time-utc-&gt;date(make-time'time-utc 0 t))))`(,#0#,@o)o)][t(ref(current-time)'second)(+ t 864e2)])((&gt; t 14e8)(print(length o)o)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7101'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7101
  :user_name: turugina
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/760/
  :language: Perl
  :time: 2008/08/11 08:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">じゃぁもっと短く。102bytes。改行削ったら100bytes</pre>\n\t"
  :code: |
    use Date::Simple':all';
    for($t=today;$t++&lt;d8"20131231";)
    {print"$t\n"if($t-&gt;day_of_week*$t-&gt;day==65)}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7102'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7102
  :user_name: turugina
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/760/
  :language: Perl
  :time: 2008/08/11 03:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">しまった。もう2bytes短くできた。</pre>\n\t"
  :code: |
    use Date::Simple':all';
    for($t=today;$t++&lt;d8"20131231";)
    {print"$t\n"if$t-&gt;day_of_week*$t-&gt;day==65}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7106'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7106
  :user_name: 匿名
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/4/
  :language: PHP
  :time: 2008/08/11 15:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p><a class=\"reference\" href=\"/web/20091213151542/http://ja.doukaku.org/comment/7029/\">http://ja.doukaku.org/comment/7029/</a>
    だいらさんの投稿を参考に少し縮めました。まだ負けてますが、マジックナンバーぽいのが少ないと言うことで。</p>\n\n\t"
  :code: |
    &lt;?for($i=time();$i&lt;mktime(0,0,0,1,1,14);$i+=86400)$n+=date(wd,$i)-513?0:print date(YMj_,$i);echo$n;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7265'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7265
  :user_name: yugui
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/55/
  :language: Ruby
  :time: 2008/08/20 02:37 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">時刻が付いてしまうのはまぁ許される?\r\n\r\nFri Feb 13 16:31:21
    +0900 2009\r\nFri Mar 13 16:31:21 +0900 2009\r\nFri Nov 13 16:31:21 +0900 2009\r\nFri
    Aug 13 16:31:21 +0900 2010\r\nFri May 13 16:31:21 +0900 2011\r\nFri Jan 13 16:31:21
    +0900 2012\r\nFri Apr 13 16:31:21 +0900 2012\r\nFri Jul 13 16:31:21 +0900 2012\r\nFri
    Sep 13 16:31:21 +0900 2013\r\nFri Dec 13 16:31:21 +0900 2013\r\n10</pre>\n\t"
  :code: |
    p (Time.now..Time.gm(2013,12,31)).step(86400).count{|x|x.mday==13&amp;&amp;x.wday==5&amp;&amp;!p(x)}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7267'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7267
  :user_name: yugui
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/55/
  :language: Ruby
  :time: 2008/08/20 02:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>goruby版</p>\n\n\t"
  :code: |
    p (Ti.no..Ti.gm(2013,12,31)).st(86400).ct{|x|x.my==13&amp;&amp;x.wy==5&amp;&amp;!p(x)}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7275'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7275
  :user_name: silverwire
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/646/
  :language: Bash
  :time: 2008/08/20 15:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"> seqコマンドがインストールされている必要があります。\r\n\r\n  e.g.\r\n
    \   $ ./FRIDAY_THE_13TH.sh\r\n    2009-02-13\r\n    2009-03-13\r\n    2009-11-13\r\n
    \   2010-08-13\r\n    2011-05-13\r\n    2012-01-13\r\n    2012-04-13\r\n    2012-07-13\r\n
    \   2013-09-13\r\n    2013-12-13\r\n    We have 10 times left to go.</pre>\n\t"
  :code: |
    #!/bin/sh -

    Z() {
      y=$1; m=$2
      [ $2 -le 2 ] &amp;&amp; { y=`expr $y - 1`; m=`expr $m + 12`; }
      expr \( 5 \* $y / 4 - $y / 100 + $y / 400 + \( 26 \* $m + 16 \) / 10 + $3 \) % 7
    }

    {
      Y=`date +'%Y'`; y=''; m=''; i=0
      for y in `seq $Y 2013`; do
        for m in `seq -w 1 12`; do
          [ $y -eq $Y ] &amp;&amp; [ $m -lt `date +'%m'` -o `date +'%d'` -lt 13 ] &amp;&amp; continue
          [ `Z $y $m 13` -eq 5 ] &amp;&amp; { echo "$y-$m-13"; i=`expr $i + 1`; }
        done
      done
      echo "We have $i times left to go."
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7284'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7284
  :user_name: turugina
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/760/
  :language: XSLT
  :time: 2008/08/20 22:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">XSLTでは実行時時刻を取得する手段が標準で存在しないので、\r\nお題の投稿日を「今日」ということにしてます。\r\n\r\n一応「今日」が変わっても正しく計算できるようにして、\r\n630
    bytes.改行が7つ削れるので実質623bytes</pre>\n\t"
  :code: |
    &lt;transform version="2.0"
    xmlns="http://www.w3.org/1999/XSL/Transform"
    xmlns:s="http://www.w3.org/2001/XMLSchema"
    xmlns:f="http://www.w3.org/2005/xpath-functions"
    xmlns:y="uri:ja.doukaku.org:my-functions"&gt;
    &lt;variable name="f" select="s:date('2008-08-05')"/&gt;
    &lt;output method="text"/&gt;&lt;template match="/"&gt;
    &lt;value-of separator=","&gt;
    &lt;for-each select="0 to f:days-from-duration(s:date('2013-12-31')-$f)"&gt;
    &lt;variable name="d" select="$f+s:dayTimeDuration(f:concat('P',.,'D'))"/&gt;
    &lt;sequence select="if(f:day-from-date($d)*(f:days-from-duration($d -s:date('1970-01-04'))mod 7)=65)then $d else()"/&gt;
    &lt;/for-each&gt;&lt;/value-of&gt;&lt;/template&gt;&lt;/transform&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7287'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7287
  :user_name: yugui
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/55/
  :language: Ruby
  :time: 2008/08/21 00:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>間違い。gorubyだとpが値を返すのでした。</p>\n\n\t"
  :code: |
    p (Ti.no..Ti.gm(2013,12,31)).st(86400).ct{|x|x.my==13&amp;&amp;x.w==5&amp;&amp;p(x)}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7299'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7299
  :user_name: 匿名
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/4/
  :language: Haskell
  :time: 2008/08/22 14:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>あまり無駄にArrowを使わないで欲しいです…</p>\n\n\t"
  :code: |
    getCurrentZonedTime = liftM2 utcToZonedTime getCurrentTimeZone getCurrentTime
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7367'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7367
  :user_name: shinh
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/587/
  :language: Bash
  :time: 2008/08/26 09:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>cal 使うといいんじゃないですかねぇ。</p>\n\n\t"
  :code: |
    eval `date '+y=%Y;m=$((%-m+(%e&gt;13)))'`
    for i in `seq $y 2013`;do
    for j in `seq $m 12`;do
    if [ `cal $j $i|awk '$6==13&amp;&amp;$_=$6'` ];then
    c=$((c+1))
    printf $i-%02d-13\\n $j
    fi
    done
    m=1
    done
    echo $c
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7400'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7400
  :user_name: hal_sk
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/896/
  :language: Ruby
  :time: 2008/08/27 06:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  yugui さんのコード、どうも動かないと思ったら step のあとに count が繋げられるのは 1.9 からなのですね。\r\n1.8.6
    ではエラーになってしまいました。\r\n一応 1.8.6 でも動作する版を作ってみました。\r\n2013年12月31日 まで = 2014年1月1日としてますが、許される?\n\t"
  :code: |
    c=0
    (Time.now..Time.gm(14)).step(86400){|d|d.day==13&amp;&amp;d.wday==5&amp;&amp;(c+=1)&amp;&amp;p(d)}
    p c
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7456'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7456
  :user_name: keisuken
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/897/
  :language: Scala
  :time: 2008/08/28 06:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  今回は結構まじめに実装してみました。\r<br>副作用のある操作は結構あるような気はしますが(Calendar周り)、なるべく副作用をさけ、かつ、再起呼び出しでカウントしてみました。\r<br>"
  :code: |
    import java.util._
    import java.util.Calendar._
    def ci=Calendar.getInstance
    val f=new java.text.SimpleDateFormat("yyyy-MM-dd")
    val c=ci
    val e={val v=ci;v.setTime(f.parse("2013-12-31"));v}
    def fri={c.set(DAY_OF_MONTH, 13);c.get(DAY_OF_WEEK)==FRIDAY}
    def fs(s:Int):Int=if(c.after(e)) s else{c.add(MONTH, 1);if(fri){println(f.format(c.getTime));fs(s+1)}else fs(s)}
    println(fs(if(c.get(DAY_OF_MONTH)&gt;=13&amp;&amp;fri) 1 else 0))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7483'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7483
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/304/
  :language: Ruby
  :time: 2008/08/29 03:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    c=0
    (Time.now..Time.gm(14)-1).step(86400){|d|p(d)if"#{d}"=~/F.{7}13/&amp;&amp;c+=1}
    p c

    # または同サイズの

    c=0
    (Time.now..Time.gm(14)-1).step(86400){|d|p(d)if d.day*d.wday==65&amp;&amp;c+=1}
    p c
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7484'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7484
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/304/
  :language: Ruby
  :time: 2008/08/29 04:13 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">１文字縮められました。</pre>\n\t"
  :code: |
    c=0
    (Time.now..Time.gm(14)-1).step(86400){|d|p(d)if"#{d}"=~/i\D*13/&amp;&amp;c+=1}
    p c
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7498'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7498
  :user_name: ujihisa
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/906/
  :language: Ruby
  :time: 2008/08/30 01:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ふつうの実装</p>\n\n\t"
  :code: |
    require 'date'
    p (Date.today..Date.parse('2013-12-31')).inject(0){|r,i|i.wday!=5||i.mday!=13?r:(puts i;r+1)}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7546'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7546
  :user_name: matarillo
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/136/
  :language: Other
  :time: 2008/09/02 01:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>VBA for Excel (2003)</p>\n\n\t"
  :code: |
    Sub Main()
      t = Date
      p = 0
      Do
        If DateValue("2013/12/31") = t Then
          Exit Do
        End If
        If Day(t) = 13 And Weekday(t) = 6 Then
          Range("A1").Offset(p) = t
          p = p + 1
        End If
        t = t + 1
      Loop
    End Sub
  :tags:
  - vba
  :references:
    :url: 
    :title: 
- :id: '7566'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7566
  :user_name: U Okumura
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/862/
  :language: Groovy
  :time: 2008/09/04 23:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>73B。もう終わったけど…</p>\n\n\t"
  :code: |
    (new Date()..new Date(113,11,31)).any{if(it.date*it.day==65)println it}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7567'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7567
  :user_name: U Okumura
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/862/
  :language: Groovy
  :time: 2008/09/04 23:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>あ、個数もか…\n削って85B。出力は汚いです。</p>\n\n\t"
  :code: |
    l=((new Date()..new Date(113,11,31)).findAll{it.date*it.day==65});print"${l.size}$l"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7633'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/7633
  :user_name: matyr
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/343/
  :language: Groovy
  :time: 2008/09/13 09:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  同じ方針で 67B。使いませんでしたが，\"${l.size}\" は \"$l.size\" でOKです。\n\t"
  :code: |
    a=(new Date()..new Date(114,0,0)).grep{it=~/i\D+13/}
    print a+a.size
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9061'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/9061
  :user_name: takeshik
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/1061/
  :language: C
  :time: 2009/06/07 05:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  LINQ 使って書いてみた。クエリ式嫌いなのでメソッドチェインで。\n\t"
  :code: |
    using System;
    using System.Linq;

    class Program
    {
        static void Main()
        {
            var a = Enumerable.Range(0, (new DateTime(2013, 12, 31) - DateTime.Today).Days)
                .Select(n =&gt; DateTime.Today.AddDays(n))
                .Where(d =&gt; d.Day == 13 &amp;&amp; d.DayOfWeek == DayOfWeek.Friday);
            foreach (var d in a) Console.WriteLine(d.ToShortDateString());
            Console.WriteLine(a.Count());
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9062'
  :parent_id: '197'
  :url: http://ja.doukaku.org/comment/9062
  :user_name: bleis-tift
  :user_url: /web/20091213151542/http://ja.doukaku.org/user/732/
  :language: SQL
  :time: 2009/06/07 05:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>SQL 版がなかったようなので。\nSQL Server 2008 で確認しました。</p>\n\n\t"
  :code: "WITH \n  Cal(day, year) AS (\n    SELECT\n        GETDATE()\n      , YEAR(GETDATE())\n
    \   UNION ALL\n    SELECT\n        DATEADD(dd, 1, day)\n      , year\n    FROM\n
    \       Cal\n    WHERE\n        YEAR(DATEADD(dd, 1, day)) &lt; 2014\n  )\n, Friday13th(day)
    AS (\n    SELECT\n        day\n    FROM\n        Cal\n    WHERE\n        DAY(day)
    = 13\n          AND DATEPART(dw, day) = 6\n  )\nSELECT\n    CONVERT(varchar, day,
    111)\nFROM\n    Friday13th\nUNION ALL\nSELECT\n    CAST(COUNT(*) AS varchar)\nFROM\n
    \   Friday13th\nOPTION (MAXRECURSION 1700)\n"
  :tags: []
  :references:
    :url: 
    :title: 
