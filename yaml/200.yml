---
:id: '200'
:title: LL Golf Hole 5 - 最上位の桁を数え上げる
:comments:
- :id: '7116'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7116
  :user_name: takano32
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/148/
  :language: Ruby
  :time: 2008/08/12 23:32 GMT
  :vote_count: '3'
  :vote_score: '1'
  :body: "\r\n\t  <p>与えられた自然数までの数え上げを行います。ただし、繰り上がりが起こったときは最上位の桁のみを数え上げます。また、与えられる自然数には0以外の桁が2回以上登場してはいけません。たとえば、300を入力として与えられた場合は以下のような出力となります。\r\n</p>\r\n<pre><code>0\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n20\r\n30\r\n40\r\n50\r\n60\r\n70\r\n80\r\n90\r\n100\r\n200\r\n300\r\n</code></pre>\n<p>与える自然数についてはリテラルで与える、標準入力で与える、引数で与えるなどは自由とします。\r\n</p>\r\n<p>※LL
    Future実行委員の高野光弘です。この出題は <a href=\"/web/20091213151758/http://ll.jus.or.jp/2008/\">LL
    Future</a>公式の出題であり、優れたものについては<a href=\"/web/20091213151758/http://ll.jus.or.jp/2008/program/doukaku\">LL
    Golf</a>のセッションでご紹介させていただくかもしれません。ご理解の上、ご投稿ください。また、<a href=\"/web/20091213151758/http://ll.jus.or.jp/2008/ticket\">LL
    Futureのチケットは現在も発売中</a>です。よろしければ、メインイベントの方にもぜひご参加ください。\r\n</p>\r\n\r\n\r\n\r\n\t"
  :code: "#!/usr/bin/env ruby\r\ndef f(n, m = 0)\r\n    puts m    \r\n    n == m ?
    return : f(n, m + 10 ** (m.to_s.size - 1) )\r\nend\r\nf(300)\r\n"
  :tags:
  - LLGolf
  - doukaku
  - llfuture
  :references:
    :url: 
    :title: 
- :id: '7145'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7145
  :user_name: mattsan
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/833/
  :language: C
  :time: 2008/08/17 04:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ちょっと不格好かなぁ…。</p>\n\n\t"
  :code: |
    #include &lt;iostream&gt;

    void count(int n)
    {
        int d = 1;
        int i = 0;
        while(i &lt;= n)
        {
            std::cout &lt;&lt; i &lt;&lt; std::endl;
            i += d;
            if((i / (d * 10) &gt; 0))
            {
                d *= 10;
            }
        }
    }

    int main(int, char* [])
    {
        count(300);

        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7147'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7147
  :user_name: emasaka
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/852/
  :language: Bash
  :time: 2008/08/17 05:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>引数。</p>\n\n\t"
  :code: |
    echo 0
    while :;do
      for ((i=1;i&lt;10;i++));do
        echo $i$m
        [ $i$m = $1 ]&amp;&amp;exit
      done
      m=${m}0
    done
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7148'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7148
  :user_name: yohei
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/415/
  :language: Prolog
  :time: 2008/08/17 06:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>SWI-Prologで。</p>\n\n\t"
  :code: "count(N) :- writeln(0), sub_atom(N,1,_,_,Y), between(1,9,X), \n    atom_concat(X,Y,XY),
    writeln(XY), atom_number(XY,N), !.\n\n:- count(300).\n"
  :tags:
  - SWI-Prolog
  :references:
    :url: 
    :title: 
- :id: '7149'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7149
  :user_name: emasaka
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/852/
  :language: Bash
  :time: 2008/08/17 06:23 GMT
  :vote_count: '7'
  :vote_score: '7'
  :body: "\n\t  <p>コマンドを呼ぶと28B。</p>\n\n\t"
  :code: |
    seq 0 300|grep '^[1-9]\?0*$'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7150'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7150
  :user_name: 匿名
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/08/17 06:32 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>問題例のスクリプト\nf(300)の場合は、うまくいくけど\nf(310)とか一般的な場合にうまくいかないと思うけど。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7151'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7151
  :user_name: mattsan
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/833/
  :language: Haskell
  :time: 2008/08/17 06:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    count n = takeWhile (&lt;= n) (0:[x*n | n &lt;- [10^n|n&lt;-[0..]], x &lt;- [1..9]])

    main = mapM_ print $ count 300
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7152'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7152
  :user_name: sumim
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2008/08/17 06:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Squeak Smalltalk で。</p>\n\n\t"
  :code: |
    | n m |
    n := 300.
    m := 0.
    World findATranscript: nil.
    [m &lt;= n] whileTrue: [
        Transcript cr; show: m.
        m := m + (10 raisedTo: m asString size - 1)]
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '7154'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7154
  :user_name: youz
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/872/
  :language: Common
  :time: 2008/08/17 06:56 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  標準入力から\n\t"
  :code: |
    (do((a 1)(e(read)))((&lt; e(incf a(expt 10(floor(log(print a)10)))))))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7155'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7155
  :user_name: kkobayashi
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2008/08/17 07:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>grepが一番シンプルかもですね。</p>\n\n\t"
  :code: |
    count &lt;- function(n) grep("^[0-9]0*$", 0:n, value=T)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7156'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7156
  :user_name: 匿名
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/4/
  :language: Perl
  :time: 2008/08/17 07:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">perl countup.pl 300 </pre>\n\t"
  :code: |
    while($ARGV[0]&gt;=($x=$n++ . '0' x $c)){
        print "$x\n";
        if($n == 10){
            $n=1;
            $c++;
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7157'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7157
  :user_name: mattsan
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/833/
  :language: Ruby
  :time: 2008/08/17 13:35 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>たしかに。grepを使ったらシンプルに。</p>\n\n\t"
  :code: |
    ruby -e 'p (0..300).collect{|i| i.to_s}.grep(/^[1-9]?0*$/)'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7158'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7158
  :user_name: mattsan
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/833/
  :language: 
  :time: 2008/08/17 08:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>(\"0\"..\"300\")という書き方ができるんですね。そうすればcollectの部分も不要。投稿してから気がつきました。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7159'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7159
  :user_name: 匿名
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/4/
  :language: Java
  :time: 2008/08/17 13:45 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <p>Javaだとこんなもんでしょうか？</p>\n\n\t"
  :code: |
    class LL_Golf_Hole_5 {
        public static void main(String[] args) {
            for(int i=0; i&lt;=Integer.parseInt(args[0]); i++) {
                if(String.valueOf(i).charAt(0) != String.valueOf(i-1).charAt(0) )
                    System.out.println(i);
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7160'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7160
  :user_name: nskj77
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/375/
  :language: Haskell
  :time: 2008/08/17 13:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    module Main where

    import Control.Arrow
    import System.Environment

    funcA = arr ((head &gt;&gt;&gt; read &gt;&gt;&gt; (&gt;=) &gt;&gt;&gt; takeWhile) &amp;&amp;&amp; const lst)
              &gt;&gt;&gt; arr (app &gt;&gt;&gt; (:) 0)
              &gt;&gt;&gt; Kleisli (mapM_ print)
      where lst = concat $ iterate (map (10*)) [1..9]

    main = getArgs &gt;&gt;= runKleisli funcA
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7161'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7161
  :user_name: emasaka
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/852/
  :language: sed
  :time: 2008/08/17 09:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>標準入力。</p>\n\n\t"
  :code: |
    #!/bin/sed -nf
    x
    :a
    s/$/0/
    :b
    p
    G
    /^\(.*\)\n\1$/b
    s/\n.*//
    /^9/{s//1/;ba}
    y/12345678/23456789/
    s/^0/1/
    bb
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7162'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7162
  :user_name: stog
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/860/
  :language: Python
  :time: 2008/08/17 14:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    #!/usr/bin/env python
    # -*- coding: utf8 -*-
    def f(n, m=0):
        print m
        return (n == m) and True or f(n, m + 10 ** (len(str(m)) - 1))

    f(300)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7163'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7163
  :user_name: lunlumo
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/813/
  :language: Perl
  :time: 2008/08/17 09:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>　余り面白く無いかも知れませんが，範囲演算子とgrepを使って書いてみました。</p>\n</div>\n\t"
  :code: |
    print join("\n",grep{/^\d0*$/}0..$ARGV[0])
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7164'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7164
  :user_name: eban
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/97/
  :language: Bash
  :time: 2008/08/17 14:57 GMT
  :vote_count: '6'
  :vote_score: '6'
  :body: "\n\t  <p>数値に限定されるのでもう少し簡単な正規表現で書けます。</p>\n\n\t"
  :code: |
    seq 0 300|grep '^.0*$'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7165'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7165
  :user_name: stog
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/860/
  :language: JavaScript
  :time: 2008/08/17 10:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    function f(n) {
      var m = 0, r = [];
      while (n &gt;= m) {
        r.push(m);
        m += Math.pow(10, (("" + m).length - 1));
      }
      return r;
    }
    alert(f(300).join("\n"));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7166'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7166
  :user_name: stog
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/860/
  :language: JavaScript
  :time: 2008/08/17 10:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>while文を1行にした。</p>\n\n\t"
  :code: |
    function f(n) {
      var m = 0, r = [m];
      while (n &gt;= (m += Math.pow(10, (("" + m).length - 1)))) r.push(m);
      return r;
    }
    alert(f(300).join("\n"));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7167'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7167
  :user_name: wataken44
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/854/
  :language: Ruby
  :time: 2008/08/17 15:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>コマンドラインからで67バイト。</p>\n\n\t"
  :code: |
    puts z=0;while 1.upto(9){|i|puts((t=i*10**z)&lt;=300?t:exit)};z+=1;end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7168'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7168
  :user_name: yama
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/684/
  :language: C
  :time: 2008/08/17 15:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>標準入力に対応させてみました</p>\n\n\t"
  :code: |
    #include &lt;iostream&gt;
    #include &lt;cstdlib&gt;
    #include &lt;cstring&gt;

    void func(int m, int n = 0)
    {
        char buf[BUFSIZ];
        int i = 1;
        int size = ::strlen(::itoa(n, buf, 10)) - 1;

        std::cout &lt;&lt; n &lt;&lt; std::endl;
        while(size--) i *= 10;
        if(m &gt; n) return func(m, n+i);
    }

    int main(int argc, char* argv[])
    {
        argc == 2 ? func(::atoi(argv[1])) : func(300);
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7169'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7169
  :user_name: konn
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/100/
  :language: Haskell
  :time: 2008/08/17 15:52 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>取り敢えずパッと思い付いたのを。</p>\n\n\t"
  :code: |
    import Data.List
    main=readLn&gt;&gt;=print.(\n-&gt;fst$span(&lt;=n)$nub$concat$iterate(map(*10))[0..9])
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7170'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7170
  :user_name: lunlumo
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/813/
  :language: Scala
  :time: 2008/08/17 11:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>　余り短く出来ませんでしたが...。</p>\n</div>\n\t"
  :code: |
    object M{
        def c(d:Int,f:Int,m:Int):Unit=if(d*f&lt;=m){printf("%d\n",d*f);c(d%9+1,f*(1+9*(d/9)),m)}
        def main(a:Array[String])=c(0,1,Integer.parseInt(a(0)))
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7171'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7171
  :user_name: seri
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/641/
  :language: C
  :time: 2008/08/17 11:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    class Program {
        static void Main(string[] args) {
            for (int i = 0; i &lt;= int.Parse(args[0]); i++)
                if (System.Text.RegularExpressions.Regex.IsMatch(i.ToString(), "^.0*$"))
                    System.Console.WriteLine("{0}", i);
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7172'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7172
  :user_name: kkobayashi
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2008/08/17 12:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>たしかに、数値しか入力されないから\".\"で十分なのですね。シンプルすぎる・・・</p>\n\n\t"
  :code: |
    grep("^.0*$",0:300)-1
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7174'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7174
  :user_name: あにす
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/504/
  :language: C
  :time: 2008/08/17 16:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  こんな感じで。\n\t"
  :code: |
    using System;class P{static void Main(string[]a){for(int i=0;i&lt;=int.Parse(a[0]);i++)if(i%Math.Pow(10,i.ToString().Length-1)==0)Console.WriteLine(i);}}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7176'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7176
  :user_name: nobsun
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2008/08/17 23:19 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>nubだと遅いので。。。</p>\n\n\t"
  :code: |
    main=readLn&gt;&gt;=print.(0:).fst.flip span(concat$iterate(map(10*))[1..9]).(&gt;=)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7177'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7177
  :user_name: mattsan
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/833/
  :language: Ruby
  :time: 2008/08/17 19:09 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>皆さんのご意見を元に改良。</p>\n<p>コマンドラインから上限を得ます。</p>\n\n\t"
  :code: |
    puts ("0"..ARGV[0]).grep(/^.?0*$/)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7178'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7178
  :user_name: takano32
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/148/
  :language: 
  :time: 2008/08/17 20:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>&gt; また、与えられる自然数には0以外の桁が2回以上登場してはいけません。</p>\n<p>という条件付です～。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7179'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7179
  :user_name: turugina
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/760/
  :language: XSLT
  :time: 2008/08/17 20:02 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">XPath の conditional expressions(if then else)
    など使ってみる。\r\n</pre>\n\t"
  :code: |
    &lt;?xml version="1.0" encoding="utf-8"?&gt;
    &lt;xsl:stylesheet version="2.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:fn="http://www.w3.org/2005/xpath-functions"
      &gt;

      &lt;xsl:output method="text" /&gt;

      &lt;xsl:variable name="goal" as="xs:string" select="'300'" /&gt;

      &lt;xsl:template match="/" &gt;
        &lt;xsl:variable name="digit" as="xs:integer" select="fn:string-length($goal)" /&gt;
        &lt;xsl:for-each select="1 to $digit"&gt;
          &lt;xsl:variable name="d" as="xs:integer" select="." /&gt;
          &lt;xsl:for-each select="(if (.=1) then 0 else 1)
                                to
                                (if (.=$digit) then xs:integer(fn:substring($goal,1,1)) else 9)" &gt;
            &lt;xsl:value-of select="." /&gt;
            &lt;xsl:for-each select="2 to $d"&gt;
              &lt;xsl:value-of select="0" /&gt;
            &lt;/xsl:for-each&gt;
            &lt;xsl:text&gt;&amp;#xA;&lt;/xsl:text&gt;
          &lt;/xsl:for-each&gt;
        &lt;/xsl:for-each&gt;
      &lt;/xsl:template&gt;
    &lt;/xsl:stylesheet&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7180'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7180
  :user_name: turugina
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/760/
  :language: Perl
  :time: 2008/08/17 20:21 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">#7156さんのをもうちょっと短く。68bytes</pre>\n\t"
  :code: |
    while($ARGV[0]&gt;=($x=$n++.0 x$c)){print"$x\n";$n==10&amp;&amp;($n=1)&amp;&amp;$c++}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7181'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7181
  :user_name: horiuchi
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/570/
  :language: Java
  :time: 2008/08/17 20:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Javaで頑張って縮めてみました。\n改行・タブを消して 146B</p>\n\n\t"
  :code: |
    class LL_Golf_Hole_5{
        public static void main(String[]s){
            for(int i=0,t=1;i&lt;=Integer.parseInt(s[0]);i+=t){
                System.out.println(i);
                if(i==t*10)t*=10;
            }
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7182'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7182
  :user_name: turugina
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/760/
  :language: Perl
  :time: 2008/08/17 20:34 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">grepでもやってみる。40bytes</pre>\n\t"
  :code: |
    $,="\n";print grep/^\d0*$/,0..$ARGV[0]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7183'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7183
  :user_name: genzou
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/793/
  :language: Groovy
  :time: 2008/08/17 22:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    def max = args[0].toInteger()
    (0..max).collect{
        def num = it.toString()
        num[0] + "0" * (num.size()-1)
    }.unique().each{ println it }
  :tags:
  - groovy
  :references:
    :url: 
    :title: 
- :id: '7184'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7184
  :user_name: turugina
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/760/
  :language: C
  :time: 2008/08/18 04:41 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">mattsanさんの#7145を参考に標準入力に対応しつつgolf化.\r\n164bytes.
    改行5,空白4省略可で実質155bytes\r\n本当はoperator&lt;()を定義してcout&lt;cin とかやりたかったけど、短さを優先しました。</pre>\n\t"
  :code: |
    #include&lt;iostream&gt;
    using namespace std;
    void f(ostream&amp;o,istream&amp;i){
      int c=0,d=1,n;i&gt;&gt;n;
      while(c&lt;=n)o&lt;&lt;c&lt;&lt;"\n"&amp;&amp;(c+=d)&amp;&amp;c/d/10&amp;&amp;(d*=10);
    }
    main(){f(cout,cin);}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7185'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7185
  :user_name: turugina
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/760/
  :language: C
  :time: 2008/08/17 23:59 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">別関数に分けずにベタでmain内に書いたほうがよっぽど短かった orz\r\nというわけで元コードは自分で-1.\r\n116btyes.実質109bytes</pre>\n\t"
  :code: |
    #include&lt;iostream&gt;
    main(){
      int c=0,d=1,n;std::cin&gt;&gt;n;
      while(c&lt;=n)std::cout&lt;&lt;c&lt;&lt;"\n"&amp;&amp;(c+=d)&amp;&amp;c/d/10&amp;&amp;(d*=10);
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7186'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7186
  :user_name: pooq
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/08/18 05:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">データは標準入力から。</pre>\n\t"
  :code: |
    exit wd"0(a&amp;&gt;:#])0,,(10x^i.#":a=.".}:1!:1[3)*/&gt;:i.9
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7188'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7188
  :user_name: leque
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/840/
  :language: Scheme
  :time: 2008/08/18 02:05 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    (use srfi-1)
    (define (main args)
      (let ((n (string-&gt;number (cadr args))))
        (print 0)
        (let loop ((i 1))
          (receive (xs ys) (partition (cut &lt;= &lt;&gt; n)
                                      (map (cut * i &lt;&gt;) '(1 2 3 4 5 6 7 8 9)))
            (for-each print xs)
            (if (pair? ys)
                0
                (loop (* i 10)))))))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '7189'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7189
  :user_name: kkobayashi
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2008/08/18 03:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ループより再帰の方がきれいに書けるかも？と思ったので試してみました。</p>\n<p>もう少しうまく書けそうですが・・・</p>\n\n\t"
  :code: |
    count &lt;- function(n=300){
      if(n!=0) Recall(n - 10^(nchar(n-1)-1))
      print(n)
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7190'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7190
  :user_name: だいら
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/468/
  :language: PHP
  :time: 2008/08/18 08:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>80byte</p>\n\n\t"
  :code: |
    &lt;?$m=fgets(STDIN);for($a=0;$a&lt;=$m;eval('$a+=1e'.(strlen($a)-1).';'))echo$a,'
    ';
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7191'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7191
  :user_name: だいら
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/468/
  :language: PHP
  :time: 2008/08/18 08:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>素直に書いた方が短いんですけどね。71byte</p>\n\n\t"
  :code: |
    &lt;?$m=fgets(STDIN);for($a=0;$a&lt;=$m;$a+=pow(10,strlen($a)-print$a.'
    '));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7192'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7192
  :user_name: 99yen
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/591/
  :language: 
  :time: 2008/08/18 04:20 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>正規表現をお借りして、43バイト。</p>\n\n\t"
  :code: |
    iで0から尋(i)まで繰返,RE(i,"^.0*$")なら表示
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7193'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7193
  :user_name: leque
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/840/
  :language: Scheme
  :time: 2008/08/18 10:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>正規表現を使って短かく。 80 bytes。</p>\n\n\t"
  :code: |
    (use srfi-1)(for-each print(filter(compose #/^.0*$/ x-&gt;string)(iota(+(read)1))))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '7194'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7194
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/304/
  :language: Haskell
  :time: 2008/08/18 05:32 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: |
    x=[1..9]++(map(10*)x);main=readLn&gt;&gt;=print.fst.(`span`(0:x)).(&gt;=)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7199'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7199
  :user_name: raynstard
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/127/
  :language: C
  :time: 2008/08/18 08:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">C++に対抗意識を燃やしてみたけどかてなかったorz\r\nうーん、atoi()をstrcmp()にすればもう少し短くなる気がするんだけどうまく動かない。。\r\nstrcmp()って短い文字列は小さいと判断されると思ったのだけど気のせいかなー?\r\n\r\n//
    gcc -Wall doukaku200.c\r\n\r\nちなみに圧縮すると↓のような感じ(113バイト？)\r\nchar s[9]={48},*t=s;\r\nmain(int
    ac, char* av[]){for(;atoi(s)&lt;atoi(av[1]);(*s)++)\r\n{puts(s);if(*s==59)*s=*(++t)=48;}}\r\n</pre>\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    #include &lt;stdlib.h&gt;
    char s[9]={0x30},*t=s;
    int main(int ac, char* av[])
    {
        for(;atoi(s)&lt;=atoi(av[1]);(*s)++)
        {
            puts(s);
            if(*s==0x39)
            {
                t++;
                *s = *t = 0x30;
            }
        }
        return 0;
    }
    /* EOF */
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7200'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7200
  :user_name: raynstard
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/127/
  :language: 
  :time: 2008/08/18 09:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">修正みすってるorz\r\nchar s[9]={0x30},*t=s;\r\n↓\r\nchar
    s[9]={0x31},*t=s;\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7201'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7201
  :user_name: lunlumo
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/813/
  :language: Perl
  :time: 2008/08/18 11:48 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <div class=\"section\">\n<p>もう若干短く出来ました。</p>\n</div>\n\t"
  :code: |
    map{print"$_\n"if/^.0*$/}0..$ARGV[0]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7202'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7202
  :user_name: 匿名
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/4/
  :language: PHP
  :time: 2008/08/18 12:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>\"の方が微妙に短いようですね。</p>\n\n\t"
  :code: |
    &lt;?for($a=0;$a&lt;=$argv[1];$a+=pow(10,strlen($a)-print"$a "));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7203'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7203
  :user_name: 匿名
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/4/
  :language: PHP
  :time: 2008/08/18 12:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>powを使った方が短いようですが一応載せてみます。</p>\n\n\t"
  :code: |
    &lt;?for($a=0;$a&lt;=$argv[1];)ereg('^.0*$',$a++,$m)&amp;&amp;print"$m[0] ";
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7204'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7204
  :user_name: kgbu
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/847/
  :language: Erlang
  :time: 2008/08/18 20:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">スクリプト内のリテラルとして、３００という整数を与えています。\r\n\r\nescript
    スクリプトのファイル名\r\n\r\nとして実行します。\r\nこの場合、最初のコメント行は必須です。</pre>\n\t"
  :code: |
    %
    s(X,Y)when X &lt; 10-&gt;erlang:display(Y);
    s(X,Y)when X rem 10=:=0-&gt;s(X div 10,Y);
    s(_,_)-&gt;0.
    main(_)-&gt;[s(X,X)||X&lt;-lists:seq(0,300)].
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7205'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7205
  :user_name: nori
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/59/
  :language: Python
  :time: 2008/08/18 20:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  なんのひねりもないです。\n\t"
  :code: |
    def g(upto, n=0):
      zeros, i = divmod(n, 9)
      x = int(str(i+1) + '0'*zeros)
      print x
      if x &lt; upto:
        g(upto, n+1)
    g(300)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7206'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7206
  :user_name: silverwire
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/646/
  :language: 
  :time: 2008/08/18 22:40 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\"> #7164をお手本にバッチで。(ワンライナーで76バイトですが、実行速度は遅いです。)\r\n\r\n
    \ e.g.\r\n    C:\\&gt;@echo off &amp; (for /l %i in (0,1,300) do echo %i|findstr
    /r \"^.0*$\") &amp; echo on</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7207'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7207
  :user_name: genzou
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/793/
  :language: Groovy
  :time: 2008/08/18 22:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>正規表現だと一瞬だ･･･</p>\n\n\t"
  :code: |
    def max = args[0].toInteger()
    (0..max).findAll{ it =~ /^.0*$/ }.each{ println it }
  :tags:
  - groovy
  :references:
    :url: 
    :title: 
- :id: '7208'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7208
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/304/
  :language: Haskell
  :time: 2008/08/19 00:53 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  \n\t"
  :code: |
    main=do n&lt;-readLn;print$filter(all(&lt;'1').tail.show)[0..n]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7210'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7210
  :user_name: 匿名
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2008/08/19 07:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>縦と横のマトリックス風。</p>\n\n\t"
  :code: |
    def h(n, m=0, z=""):
        print m
        for i in n[::-1]:
            m = 10 if int(i)==0 else int(i)+1
            for j in range(1, m):
                print str(j) + z
            z += i

    h("300")
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7214'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7214
  :user_name: zaud
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/885/
  :language: SQL
  :time: 2008/08/19 12:55 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">MySQL と oracle で動作を確認しました。\r\n\r\n</pre>\n\t"
  :code: |
    SELECT DISTINCT t.x*v.y count_up
    FROM (
    SELECT 0 x FROM DUAL UNION
    SELECT 1 FROM dual UNION
    SELECT 2 FROM dual UNION
    SELECT 3 FROM dual UNION
    SELECT 4 FROM dual UNION
    SELECT 5 FROM dual UNION
    SELECT 6 FROM dual UNION
    SELECT 7 FROM dual UNION
    SELECT 8 FROM dual UNION
    SELECT 9 FROM dual) t
    , (SELECT 1 y FROM dual UNION
    SELECT 10 FROM dual UNION
    SELECT 100 FROM dual UNION
    SELECT 1000 FROM dual UNION
    SELECT 10000 FROM dual UNION
    SELECT 100000 FROM dual UNION
    SELECT 1000000 FROM dual UNION
    SELECT 10000000 FROM dual UNION
    SELECT 100000000 FROM dual UNION
    SELECT 1000000000 FROM dual UNION
    SELECT 10000000000 FROM dual UNION
    SELECT 100000000000 FROM dual UNION
    SELECT 1000000000000 FROM dual) v
    WHERE t.x*v.y &lt;= 300
    ORDER BY t.x*v.y;
  :tags:
  - '45'
  :references:
    :url: 
    :title: 
- :id: '7230'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7230
  :user_name: nemo_kaz
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/837/
  :language: Groovy
  :time: 2008/08/19 14:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n<p>正規表現版、Rubyの回答を参考にしました。\n</p>\n\n\n\n\t"
  :code: |
    (0..300).each{ans-&gt;if(ans.toString()==~'[0-9]0*') println ans}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7241'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7241
  :user_name: matyr
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/343/
  :language: JavaScript
  :time: 2008/08/19 12:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    javascript:for(a=[i='0'];i&lt;300;)a.push(i=++i[0]+i.slice(1));a
  :tags:
  - Bookmarklet
  - Firefox
  :references:
    :url: 
    :title: 
- :id: '7242'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7242
  :user_name: matyr
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/343/
  :language: Groovy
  :time: 2008/08/19 13:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ゴルフらしく。</p>\n\n\t"
  :code: |
    (0..300).grep(~/.0*/).any 0.&amp;println
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7243'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7243
  :user_name: matyr
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/343/
  :language: JavaScript
  :time: 2008/08/19 13:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  やはり正規表現が強い。\n\t"
  :code: |
    javascript:for(a=[i=0];i&lt;300;)a[/^.0*$/(++i)]=i;a
  :tags:
  - Bookmarklet
  - Firefox
  :references:
    :url: 
    :title: 
- :id: '7245'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7245
  :user_name: matyr
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/343/
  :language: Scheme
  :time: 2008/08/19 13:25 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: |
    (dotimes(i(+ 300 1))(if(#/^.0*$/#`",i")(print i)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7251'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7251
  :user_name: saitoh
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/886/
  :language: awk
  :time: 2008/08/19 20:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>old awkです。\nほぼそのままC言語のコードになっちゃいました。</p>\n\n\t"
  :code: |
    #!awk -f
    {
    max=$1
    print 0
    for(b=1;;b*=10) {
            n=b
            for(j=10;--j&gt;0;n+=b) {
                    if(n&gt;max) next
                    print n
            }

    }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7261'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7261
  :user_name: saitoh
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/886/
  :language: C
  :time: 2008/08/20 01:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>コマンドラインで数を指定します。\nint/longの範囲を超える大きな数値でもOK.数値ではなく文字列処理でやってるんで。</p>\n\n\t"
  :code: |
    #include &lt;stdio.h&gt;

    int main(int argc, char *argv[])
    {
            char *p, *q;
            int len;
            len=strlen(argv[1]);
            p=malloc(len+1);
            memset(p, ' ', len);
            p[len]='\0';
            q=p+len-1;
            *q='0' -1;
            while(strcmp(argv[1], p)&gt;0) {
                    if(++(*q) &gt;'9') {
                            *q='0';
                            *--q ='1';
                    }
                    puts(q);
            }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7266'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7266
  :user_name: kh
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/654/
  :language: D
  :time: 2008/08/20 02:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>標準入力から。</p>\n<p>この手の文字列操作はガーベジコレクタのおかげでたやすくできます。</p>\n\n\t"
  :code: "import std.stdio, std.string;\n\nvoid main() {\n    auto t = chomp(readln),
    s = \"0\".dup;\n    while(s.length &lt; t.length || s &lt;= t) {\n        writeln(s);\n
    \       \n        if(s[0] &lt; '9') {\n            s[0]++;\n        } else {\n
    \           s = \"10\" ~ s[1 .. $];\n        }\n    }\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7285'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7285
  :user_name: 匿名
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2008/08/20 23:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>行数・バイト数のgolfは諦めて、ステップ数で・・・\n桁数と最上位の数がわかれば、繰り返し毎の 与えられた数との比較を省けるはずです。</p>\n<p>TODO:
    itertools.chainでジェネレータを連結 （多分、読みにくくなるだけ\nTODO: (10**x) も、もう一段階外側に追い出せる。</p>\n\n\t"
  :code: "import math\n\ndef count_up(num):\n    assert num &gt; 0\n    n = int(math.floor(math.log10(num)))\n
    \   m = int(num / (10**n))\n    \n    yield 0\n    for i in xrange(n):\n        for
    j in xrange(1,10):\n            yield (10**i)*j\n    for _ in xrange(1):\n        for
    j in xrange(1,m+1):\n            yield (10**n)*j\n                \nif __name__
    == '__main__':\n    for n in count_up(300):\n        print n\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7303'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7303
  :user_name: susu
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/218/
  :language: OCaml
  :time: 2008/08/23 02:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "(* 例解の *)\n#load \"nums.cma\";;\nopen Num\nlet f = \n  let rec loop n m
    =\n    let s = string_of_num m in print_endline s;\n    if n&lt;&gt;m then loop
    n (m +/ (power_num (Int 10) (Int (String.length s - 1))))\n  in \n    fun n -&gt;
    loop (Int n) (Int 0);; \n(* f 300;; *)\n\n(* 正規表現の *)\n#load \"str.cma\";;\nlet
    f =\n  let reg = Str.regexp \"^[0-9]?0*$\" in\n  fun n -&gt; Str.string_match
    reg (string_of_int n) 0;;\n(* for i = 0 to 300 do (if f i then Printf.printf \"%d\\n\"
    i) done;; *)\n\n(* 自力の *)\nlet f n = \n  let rec loop next diff b = \n    if n&lt;b
    then () else\n    if next&gt;b then (Printf.printf \"%d\\n\" b; loop next diff
    (diff + b)) else\n    loop (next*10) next b\n  in loop 10 1 0;;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7330'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7330
  :user_name: yugui
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/55/
  :language: Perl
  :time: 2008/08/25 06:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>39bytes</p>\n\n\t"
  :code: |
    for(0..$ARGV[0]){print"$_\n"if/^\d0*$/}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7332'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7332
  :user_name: yugui
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/55/
  :language: Ruby
  :time: 2008/08/25 11:21 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>同じ発想でRuby</p>\n\n\t"
  :code: |
    "0".upto($*[0]){|$_|puts$_ if/^\d0*$/}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7333'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7333
  :user_name: yugui
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/55/
  :language: Ruby
  :time: 2008/08/25 11:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>もうちょっと縮まった</p>\n\n\t"
  :code: |
    puts ("0"..$*[0]).grep(/^\d0*$/)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7372'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7372
  :user_name: shinh
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/587/
  :language: Perl
  :time: 2008/08/26 14:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>もうちょい縮みます。 32B 。まだなんかあるかも。</p>\n\n\t"
  :code: |
    print"$_
    "x/^.0*$/for 0.."@ARGV"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7373'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7373
  :user_name: shinh
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/587/
  :language: Other
  :time: 2008/08/26 15:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>あう、 \"ARGV[0]\" は pop で良い。 28B</p>\n\n\t"
  :code: |
    print"$_
    "x/^.0*$/for 0..pop
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7374'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7374
  :user_name: shinh
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/587/
  :language: sed
  :time: 2008/08/26 16:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Count down していく方が短くなりそう。 55B 。</p>\n\n\t"
  :code: |
    h
    :
    s/\n.*//
    y/987654321/876543210/
    s/^00/9/
    G
    h
    /^0/!b
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7463'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7463
  :user_name: keisuken
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/897/
  :language: Scala
  :time: 2008/08/28 09:45 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  効率は無視、再帰呼出でループを表現してみました。\r<br>例のごとくひねりはありません。\r<br>表示すべき数字は文字列で生成してたりして、かなり卑怯な気がします(^^;。\r<br>scala h5.scala で実行します。\n\t"
  :code: |
    val n=args(0).toInt
    def p(i:Int,c:Int){
      val v=(""+i+("0"*c)).toInt;if(v&lt;=n){println(v);if(i&lt;9)p(i+1,c)else p(1,c+1)}
    }
    p(0,0)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7471'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7471
  :user_name: hirataka
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/233/
  :language: JavaScript
  :time: 2008/08/29 02:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>コンパイル時に /fast- を指定してください。</p>\n\n\t"
  :code: |
    for(i=-1;i++&lt;300;)/^.0*$/.test(i)&amp;&amp;print(i)
  :tags:
  - JScriptコンパイラ
  :references:
    :url: 
    :title: 
- :id: '7540'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7540
  :user_name: 匿名
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/4/
  :language: C
  :time: 2008/09/01 15:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>100バイト切れた。\nまだまだですがこんなところで。</p>\n\n\t"
  :code: |
    b=10;c;main(a){a=atoi(gets());while(a&gt;=b){printf("%d\n",c);c+=b/10;c&gt;=b?b*=10:1;}printf("%d\n",a);}

    $&gt; cat num.txt
    100
    $&gt; cat num.txt | ./a.out
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7541'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7541
  :user_name: 匿名
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/09/01 15:21 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ごめんなさい。例題が上手くさばけてませんでした...。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7542'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7542
  :user_name: 匿名
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/4/
  :language: C
  :time: 2008/09/01 15:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>b=10;c;main(a){a=atoi(gets());while(a&gt;=c){printf(\"%dn\",c);c+=b/10;c&gt;=b?b*=10:1;}}</p>\n\n\t"
  :code: |
    というわけで修正してみました。大丈夫だと思いますが...。
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7545'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7545
  :user_name: matarillo
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/136/
  :language: Other
  :time: 2008/09/01 20:22 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>VBA for Excel (2003)</p>\n\n\t"
  :code: |
    Sub Main()
      n = Val(InputBox(""))
      m = 0
      p = 0
      Do
        Range("A1").Offset(p) = m
        If m = n Then
          Exit Do
        End If
        l = Len(Str(m)) - 2
        m = m + 10 ^ l
        p = p + 1
      Loop
    End Sub
  :tags:
  - vba
  :references:
    :url: 
    :title: 
- :id: '7556'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/7556
  :user_name: こう。
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2008/09/03 00:46 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">gets用のバッファが必要なのでは？？\r\n修正＋若干の縮め</pre>\n\t"
  :code: |
    b=1;c;main(a){for(scanf("%d",&amp;a);a&gt;=c;c+=b,b*=c-b*10?1:10){printf("%d\n",c);}}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9358'
  :parent_id: '200'
  :url: http://ja.doukaku.org/comment/9358
  :user_name: rennos
  :user_url: /web/20091213151758/http://ja.doukaku.org/user/1024/
  :language: HSP
  :time: 2009/07/13 15:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "#module\n\n#deffunc CountUpMaxPlace var vIo,  local c\n    c = peek(vIo)\n
    \   if ( '0' &lt;= c &amp;&amp; c &lt;= '8' ) {\n        poke vIo, , c + 1\n        \n
    \   } else : if ( c == '9' ) {\n        poke vIo,, '1'\n        vIo += \"0\"\n
    \       \n    } else {\n        vIo = \"0\"\n    }\n    return\n    \n#global\n\n
    \   nMax = 300        // 数える最大値\n    \n    sdim sBuf, 3200\n    sdim sNumber\n
    \   repeat\n        CountUpMaxPlace sNumber\n        sBuf += sNumber +\"\\n\"\n
    \       if ( int(sNumber) &gt;= nMax ) {\n            break\n        }\n    loop\n
    \   objmode 2\n    mesbox sBuf, ginfo(12), ginfo(13)\n    stop\n"
  :tags: []
  :references:
    :url: 
    :title: 
