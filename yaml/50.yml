---
:id: '50'
:title: Hello, world! PDF版
:comments:
- :id: '3406'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/3406
  :user_name: にしお
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/08/23 17:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  Hello, world!シリーズの続編です。\r\n「Hello, world!」となるべく大きく書かれた1ページのPDFを出力してください。\r\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2462'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2462
  :user_name: yuin
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/82/
  :language: Scala
  :time: 2007/08/23 17:50 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n<p>とりあえず。iTextで。\n</p>\n\n\n\n\t"
  :code: |
    import com.lowagie.text._
    import com.lowagie.text.pdf.PdfWriter
    import java.io.FileOutputStream

    val document = new Document(PageSize.A4, 50, 50, 50, 50);
    val writer = PdfWriter.getInstance(document, new FileOutputStream("HelloWorld.pdf"));
    document.open
    document.add(new Paragraph("Hello, world!", FontFactory.getFont(FontFactory.COURIER, 60, Font.BOLD)));
    document.close
  :tags:
  - iText
  :references:
    :url: 
    :title: 
- :id: '2463'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2463
  :user_name: rubikitch
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/105/
  :language: Ruby
  :time: 2007/08/23 17:53 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">うわぁ、一番乗りそこねたぁ</pre>\n\t"
  :code: |
    require 'rubygems'
    require 'pdf/writer'
    PDF::Writer.new do |pdf|
      pdf.text "Hello, world!", :font_size =&gt; 150, :justification =&gt; true
      pdf.save_as "50.pdf"
    end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2464'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2464
  :user_name: matyr
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/343/
  :language: JavaScript
  :time: 2007/08/23 21:52 GMT
  :vote_count: '9'
  :vote_score: '5'
  :body: "\n\t   他力本願。\r<br><br> 'http://ja.doukaku.org/50' のところを location.href に置き換えると，カレントページのPDF版を取得するブックマークレットになります。\n\t"
  :code: |
    javascript:location.href='http://www.html2pdf.biz/api?url='+'http://ja.doukaku.org/50'+'&amp;ret=PDF'
  :tags:
  - Bookmarklet
  :references:
    :url: /web/20081119234725/http://www.html2pdf.biz/
    :title: HTML2PDF.BIZ
- :id: '2465'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2465
  :user_name: nobsun
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2007/08/23 22:49 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">HPDFというライブラリを利用する\r\nA4サイズにななめに入れてみました</pre>\n\t"
  :code: "import Graphics.PDF\nimport Data.Monoid\n\nmain = let document =  rgbSpace\n
    \                   &lt;&gt; chooseFont Helvetica 57\n                    &lt;&gt;
    applyMatrix (rotate (Degree 58))\n                    &lt;&gt; fillText 25 (-28)
    \"Hello, world!\"\n                    &lt;&gt; emptyPdf 210 297\n       in\n
    \      writePdf \"hello.pdf\" document \n"
  :tags:
  - HPDF-0.3
  - ghc-6.6.1
  :references:
    :url: /web/20081119234725/http://www.alpheccar.org/en/soft/hpdf
    :title: hpdf
- :id: '2466'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2466
  :user_name: にしお
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/08/24 02:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">あ、なるほど、確かに対角線に入れるのが一番大きいですね。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2468'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2468
  :user_name: kawauchi
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/14/
  :language: Other
  :time: 2007/08/24 03:54 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  XSL-FO です。\r<br>Apache FOP 等で\r<br>fop -c fop.xconf hello.fo hello.pdf\r<br>"
  :code: |
    &lt;?xml version="1.0" encoding="UTF-8" ?&gt;
    &lt;fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format"&gt;
      &lt;fo:layout-master-set&gt;
        &lt;fo:simple-page-master
        page-height="210mm" page-width="297mm"
        margin-top="20mm" margin-bottom="20mm"
        margin-left="20mm" margin-right="20mm"
        master-name="Pagemaster-1" &gt;
          &lt;fo:region-body
          margin-top="5mm" margin-bottom="5mm"
          margin-left="5mm" margin-right="5mm" /&gt;
          &lt;fo:region-before extent="10mm" /&gt;
          &lt;fo:region-after extent="10mm" /&gt;
        &lt;/fo:simple-page-master&gt;
      &lt;/fo:layout-master-set&gt;
      &lt;fo:page-sequence master-reference="Pagemaster-1" &gt;
        &lt;fo:flow flow-name="xsl-region-body"&gt;
          &lt;fo:block font-size="96pt" text-align="center"&gt;
            Hello, world!
          &lt;/fo:block&gt;
        &lt;/fo:flow&gt;
      &lt;/fo:page-sequence&gt;
    &lt;/fo:root&gt;
  :tags:
  - XSL-FO
  :references:
    :url: 
    :title: 
- :id: '2469'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2469
  :user_name: talo
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/237/
  :language: TeX
  :time: 2007/08/24 04:35 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    #!/bin/bash

    cat &lt;&lt; EOS &gt; foo
    \documentclass{article}
    \usepackage{type1cm}
    \begin{document}
    {\fontsize{200pt}{220pt}\selectfont Hello World}
    \end{document}
    EOS

    latex foo
    dvipdfm foo
  :tags:
  - bash
  - dvipdfm
  :references:
    :url: 
    :title: 
- :id: '2472'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2472
  :user_name: talo
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/237/
  :language: 
  :time: 2007/08/24 05:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">tag に TeX 入れるべきだったかな？</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2480'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2480
  :user_name: 匿名
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/08/24 10:11 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">文字列の幅を取得する関数が、多分あるんだろうけど、見つけられなかったので\r\nダミーの書き込みにより取得しているところが、ちょっとばかり冗漫ですね。\r\n\r\n</pre>\n\t"
  :code: |
    from reportlab.pdfgen import canvas

    c = canvas.Canvas('hello.pdf')
    t = c.beginText()
    t.setFont(t._fontname, 64)
    t.setTextOrigin(0, 0)
    t.textOut('Hello, World')
    h = 64 / t.getX() * c._pagesize[1]
    t.setFont(t._fontname, h)
    c.setFontSize(h)
    c.rotate(-90)
    c.drawString(-c._pagesize[1], t._leading - h, 'Hello, World')
    c.save()
  :tags:
  - ReportLab
  :references:
    :url: 
    :title: 
- :id: '2482'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2482
  :user_name: 匿名
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/08/24 13:08 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">他の人のコードを見たら、サイズ決め打ちでやってるようなので\r\n同等の必要最小限版を投稿しておきます。\r\n</pre>\n\t"
  :code: |
    from reportlab.pdfgen import canvas
    from reportlab.lib.pagesizes import A4

    c = canvas.Canvas('hello.pdf', A4[::-1])
    c.setFontSize(158.4)
    c.drawString(0, 31.52, 'Hello, World')
    c.save()
  :tags:
  - ReportLab
  :references:
    :url: 
    :title: 
- :id: '2483'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2483
  :user_name: ether
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/96/
  :language: Tcl
  :time: 2007/08/24 13:52 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  Tk キャンバスの内容を PDF に出力する Trampoline! というライブラリを使用してみました。\n\t"
  :code: |
    package require trampoline

    . configure -menu [menu .menu]
    .menu add command -label {Save as PDF} -command {::pdf::generate .c hello.pdf}

    pack [canvas .c -width 297 -height 210  -bg white]
    .c create text 150 105 -text "Hello,\nWorld!" -font {Helvetica 70} -justify center
  :tags:
  - Trampoline!
  :references:
    :url: /web/20081119234725/http://trampoline.sourceforge.net/
    :title: Trampoline!
- :id: '2484'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2484
  :user_name: 匿名
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/08/24 14:20 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">連続投稿で失礼します。\r\n\r\n#2480は、まだ無駄なコードが多かったので、ブラッシュアップ版を\r\n投稿させてください。\r\n</pre>\n\t"
  :code: |
    from reportlab.pdfgen import canvas

    c = canvas.Canvas('hello.pdf')
    t = c.beginText()
    t.setFont(t._fontname, 64)
    t.textOut('Hello, World')
    c.setFont(c._fontname, 64 / t.getX() * c._pagesize[1])
    c.rotate(-90)
    c.drawString(-c._pagesize[1], c._leading - c._fontsize, 'Hello, World')
    c.save()
  :tags:
  - ReportLab
  :references:
    :url: 
    :title: 
- :id: '2485'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2485
  :user_name: sumim
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/08/24 15:00 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  SPDF をインストールした Squeak Smalltalk で。\n\t"
  :code: |
    | file pdfWriter page text textState textPositioning |
    file := FileStream fileNamed: 'doukaku50.pdf'.
    pdfWriter := PDFWriter on: file.
    pdfWriter compressionOff.
    page := pdfWriter defaultPage.
    text := PDFTextObject for: page pageDescription.
    textState := PDFTextState for: text.
    textState fontPitch: 140.
    textState font: (PDFFont type1Helvetica).
    textPositioning := PDFTextPositioning for: text.
    textPositioning coordinate: (PDFPoint x: 10 y: 250).
    text addOperator: textPositioning.
    text addOperator: textState.
    text write: 'Hello, world!'.
    page addTextObject: text.
    pdfWriter close.
    file close
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '2487'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2487
  :user_name: 匿名
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/4/
  :language: Java
  :time: 2007/08/24 15:26 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  iText を使用しています。なるべく大きくという事で、A0 横の用紙に横幅いっぱいに描画してみました（別に A0 にする必要はなかったかも知れません）。折り返してさらに大きく書く事もできたのですが、横一行のほうが題意に合っていると看做しました。\n\t"
  :code: "import java.io.FileOutputStream;\nimport com.lowagie.text.Document;\nimport
    com.lowagie.text.Paragraph;\nimport com.lowagie.text.PageSize;\nimport com.lowagie.text.Font;\nimport
    com.lowagie.text.pdf.BaseFont;\nimport com.lowagie.text.pdf.PdfWriter;\n\npublic
    class Sample {\n    static final String TEXT = \"Hello, World!\";\n    public
    static void main(String[] args) throws Exception {\n        Document doc = new
    Document(PageSize.A0.rotate());\n        PdfWriter.getInstance(doc, new FileOutputStream(\"HelloWorld.pdf\"));\n
    \       doc.open();\n        BaseFont bf = BaseFont.createFont(BaseFont.TIMES_ROMAN,
    \n                                      \"US-ASCII\", false);\n        float s
    = (doc.right() - doc.left() - doc.rightMargin()) /\n            bf.getWidthPoint(TEXT,
    1.0f);\n        Font f = new Font(Font.TIMES_ROMAN, s);\n        doc.add(new Paragraph(TEXT,
    f));\n        doc.close();\n    }\n}\n"
  :tags: []
  :references:
    :url: /web/20081119234725/http://www.lowagie.com/iText/
    :title: iText Homepage
- :id: '2489'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2489
  :user_name: miyamuko
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/382/
  :language: Common
  :time: 2007/08/24 16:28 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">xycairo (xyzzy の cairo バインディング) を使って書きました。\r\n\r\ncl-cairo2
    を使えばもう少しシンプルに書けると思います</pre>\n\t"
  :code: |
    (require :cairo)
    (use-package :cairo)
    (use-package :cairo.ext)

    (defun hello-pdf (width height text)
      (flet ((calc-font-size (cr x text)
               (with-cairo-save (cr)
                 (cairo-set-font-size cr 100.0)
                 (* 100.0 (/ x (cdr (assoc :width (cairo-text-extents-alist cr text))))))))
        (with-cairo-surface (surface (cairo-pdf-surface-create "hello.pdf" width height))
          (with-cairo (cr (cairo-create surface))
            (cairo-set-source-rgb cr 0 0 0) ; black
            (cairo-set-font-size cr (calc-font-size cr width text))
            (cairo-move-to cr 0 (/ height 2))
            (cairo-show-text cr text)))))

    (hello-pdf 291 210 "Hello, world!")
  :tags:
  - cairo
  - xyzzy
  :references:
    :url: 
    :title: 
- :id: '2491'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2491
  :user_name: miyamuko
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/382/
  :language: Ruby
  :time: 2007/08/24 16:48 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  #2489 の rcairo 版。\r<br><br>ページいっぱいにテキストを出力するために text extents から font size を計算していたが、\r<br>http://mmon.sourceforge.jp/memo/memo.html\r<br>を見ると width より x_advance を使ったほうがよさそうなのでそうしました。\n\t"
  :code: |
    require 'cairo'

    width, height = 291, 210
    text = "Hello, world!"

    Cairo::PDFSurface.new("hello.pdf", width, height) do |surface|
      cr = Cairo::Context.new(surface)
      font_size = cr.save {
        cr.set_font_size(100.0)
        width / cr.text_extents(text).x_advance * 100.0
      }

      cr.set_font_size(font_size)
      cr.move_to(0, height / 2)
      cr.show_text(text)
      cr.show_page
    end
  :tags:
  - cairo
  :references:
    :url: /web/20081119234725/http://jp.rubyist.net/magazine/?0019-cairo
    :title: 'Rubyist Magazine - cairo: 2 次元画像描画ライブラリ'
- :id: '2494'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2494
  :user_name: hirataka
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/233/
  :language: PHP
  :time: 2007/08/25 02:45 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">FPDFを利用。\r\n横長のA4で出力します。</pre>\n\t"
  :code: |
    &lt;?php
    require('fpdf/fpdf.php');

    $pdf = new FPDF('L');
    $pdf-&gt;AddPage();
    $pdf-&gt;SetFont('Arial', '', 154);
    $pdf-&gt;Text(0, 50, "Hello, world!");
    $pdf-&gt;Output();
    ?&gt;
  :tags:
  - FPDF1.53
  :references:
    :url: /web/20081119234725/http://www.fpdf.org/
    :title: FPDF
- :id: '2508'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2508
  :user_name: hirose31
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/334/
  :language: PostScript
  :time: 2007/08/25 15:24 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">shだったりps{2,to}pdfだったり使ってるのでちとアレですが、A4いっぱいのこんにちはなのでご容赦ください。。。\r\n\r\ngs付属のps2pdfと、Mac
    OS Xのpstopdfで動作確認しました。\r\n\r\n</pre>\n\t"
  :code: |
    #!/bin/sh
    large_hello() {
      cat &lt;&lt;'EOHELLO'
    %!
    /inch {72 mul} bind def
    /sheetheight 11.64 inch def
    /sheetwidth   8.27 inch def

    /hello     (Hello, world!) def
    /hellolen  hello length    def
    /fontsz    10 def
    /Helvetica fontsz selectfont
    /capheightratio 0.8 def

    0 0 moveto
    sheetwidth  hello stringwidth pop div
    sheetheight fontsz capheightratio mul div
    scale
    hello show

    showpage
    EOHELLO
    }
    large_hello | {
      outfile=large-hello.pdf
      if type -p pstopdf &gt;/dev/null; then
        pstopdf /dev/stdin -o $outfile
      elif type -p ps2pdf &gt;/dev/null; then
        ps2pdf /dev/stdin $outfile
      else
        echo 'converter not found...'
        exit 1
      fi
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2511'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2511
  :user_name: kkobayashi
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2007/08/25 18:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">決め打ちです</pre>\n\t"
  :code: |
    pdf("helloworld.pdf", width=8.27, height=11.69)
    plot.new()
    oldpar &lt;- par(no.readonly = TRUE)
    par(plt=c(0,1,0,1), mai=c(0,0,0,0), omi=c(0,0,0,0), adj=0, cex=9.2)
    text(-0.178, 0.5, "Hello, world!")
    par(oldpar)
    dev.off()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2512'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2512
  :user_name: kkobayashi
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2007/08/25 20:08 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">plot.new()してからpar()してた。どおりで余白が反映されないと思った・・・。\r\nすみません、ほとんど変化ないですが直します。</pre>\n\t"
  :code: |
    pdf("helloworld.pdf", width=8.27, height=11.69)
    oldpar &lt;- par(no.readonly = TRUE)
    par(plt=c(0,1,0,1), mai=c(0,0,0,0), omi=c(0,0,0,0), adj=0, cex=9.2)
    plot.new()
    text(-0.05, 0.5, "Hello, world!")
    par(oldpar)
    dev.off()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2513'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2513
  :user_name: hamano
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/25/
  :language: C
  :time: 2007/08/25 20:48 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">panda(http://www.stillhq.com/panda/)を使いました。</pre>\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    #include &lt;stdlib.h&gt;
    #include &lt;panda/functions.h&gt;
    #include &lt;panda/constants.h&gt;

    int main(int argc, char *argv[])
    {
        panda_pdf *pdf;
        panda_page *page;
        panda_init();
        pdf = panda_open ("hello.pdf", "w");
        if(!pdf) panda_error(panda_true, "error");
        page = panda_newpage(pdf, panda_pagesize_a4);
        panda_setfontsize(pdf, 72);
        panda_textbox(pdf, page, 10, 10, 100, 500, "Hello World!");
        panda_close(pdf);
        return EXIT_SUCCESS;
    }
  :tags:
  - panda
  :references:
    :url: 
    :title: 
- :id: '2514'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2514
  :user_name: miyamuko
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/382/
  :language: Ruby
  :time: 2007/08/25 23:05 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">OpenOffice の COM インターフェイスを使って PDF にしてみました。\r\n\r\nフォントサイズは決めうちです。\r\nマクロで記録した
    Oo Basic をそのまま直訳した感じです。</pre>\n\t"
  :code: |
    require "win32ole"

    class Hash
      def to_prop(manager)
        inject([]){|acc,pair|
          opt = manager.Bridge_GetStruct("com.sun.star.beans.PropertyValue")
          opt["Name"], opt["Value"] = *pair
          acc &lt;&lt; opt
        }
      end
    end

    manager = WIN32OLE.new("com.sun.star.ServiceManager")
    desktop = manager.createInstance("com.sun.star.frame.Desktop")
    document = desktop.loadComponentFromURL("private:factory/swriter", "_blank", 0, [])

    frame = document.getCurrentController().getFrame()
    dispatcher = manager.createInstance("com.sun.star.frame.DispatchHelper")

    dispatcher.executeDispatch(frame, ".uno:FontHeight", "", 0, {
      "FontHeight.Height" =&gt; 80,
      "FontHeight.Prop" =&gt; 100,
      "FontHeight.Diff" =&gt; 0,
    }.to_prop(manager))

    text = document.GetText
    cursor = text.createTextCursor
    text.insertString(cursor, "Hello, world!", 0)

    dispatcher.executeDispatch(frame, ".uno:ExportDirectToPDF", "", 0, {
      "URL" =&gt; "file:///#{File.expand_path("hello.pdf")}" ,
      "FilterName" =&gt; "writer_pdf_Export",
      "SelectionOnly" =&gt; "true",
    }.to_prop(manager))

    document.close(false)
  :tags:
  - openoffice
  - win32ole,
  :references:
    :url: /web/20081119234725/http://www.rubygarden.org/Ruby/page/show/OpenOffice
    :title: 'Ruby: OpenOffice'
- :id: '2515'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2515
  :user_name: 匿名
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/4/
  :language: diff
  :time: 2007/08/26 02:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  いくつか修正します。\r<br>・用紙サイズを A0 から B0 に変更しました（どうでも良いですね……）\r<br>・描画サイズのマージンを取りすぎていたので、ぎりぎりまで大きくしました。\r<br>・FontをBaseFontから直接生成するようにしました。\n\t"
  :code: |
    diff 2487.java Sample.java
    12c12
    &lt;       Document doc = new Document(PageSize.A0.rotate());
    ---
    &gt;       Document doc = new Document(PageSize.B0.rotate());
    17,19c17,18
    &lt;       float s = (doc.right() - doc.left() - doc.rightMargin()) /
    &lt;           bf.getWidthPoint(TEXT, 1.0f);
    &lt;       Font f = new Font(Font.TIMES_ROMAN, s);
    ---
    &gt;       float size = (doc.right() - doc.left()) / bf.getWidthPoint(TEXT, 1.0f);
    &gt;       Font f = new Font(bf, size);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2516'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2516
  :user_name: 匿名
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/08/26 03:51 GMT
  :vote_count: '4'
  :vote_score: '-2'
  :body: "\n\t  <pre class=\"compact\">これって要件満たしていないんじゃないんですか？</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2549'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2549
  :user_name: にしお
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/08/27 02:03 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  \n<p>試してみましたが、少なくとも僕の環境では1ページに収まってHello, world!が含まれているので題意は満たしていると思います。\n</p>\n\n\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2559'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2559
  :user_name: kzfm
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/106/
  :language: Perl
  :time: 2007/08/28 03:21 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">PDF::API2を使うのは初めて。フォントサイズが決めうちなのでよろしくなさげ。</pre>\n\t"
  :code: |
    use PDF::API2;

    my $pdf = PDF::API2-&gt;new(-file =&gt; 'hello.pdf');
    my $fnt = $pdf-&gt;corefont('Times-Roman');
    my $page = $pdf-&gt;page;
    $page-&gt;mediabox('A4');
    my $gfx = $page-&gt;gfx();
    $gfx-&gt;rotate(90);
    $gfx-&gt;translate( 0, -120 );
    $gfx-&gt;textlabel( 0, 0, $fnt, 160, 'Hello, world!' );

    $pdf-&gt;save;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2573'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2573
  :user_name: 匿名
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/08/28 17:04 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">&gt;「Hello, world!」となるべく大きく書かれた\r\nと要件にはあります。\r\nこのページをただ出力することが「なるべく大きく」書こうと作っているようには思えませんでした。（実際に大きいかどうかは別として）</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2610'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2610
  :user_name: にしお
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/08/29 03:58 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  \n<p>おっしゃりたいことはわかりますが\n   「なるべく大きくしようとしたかどうか」は\n   客観的にははかることができません。\n
    \  もしお題に「A4の紙に印刷した場合に10cm以上であること」などと書いてあれば\n   客観的に判断できる「要件」だと思いますが\n   「なるべく大きく」が要件だというのには違和感を感じます。\n</p>\n<p>ブラウザ上のJavaScriptではそもそもHello,
    worldをPDFで出力すること自体が\n   かなり困難なのだと思います。\n   それを乗り越えたshimakumaさんの「Webサービスをライブラリのように使う」という発想は面白いと思いました。こういうコードを許容するためにもあまり要件を厳しく設定したくはないです。\n</p>\n<p>誰かがJavaScriptでもっと大きく出力するコードを投稿したら、僕はそちらにプラスをつけてshimakumaさんのコードは0に戻すかも知れません。そちらの方が「このコードは要件を満たしていない」と書くよりも生産的だと思います。\n</p>\n\n\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2634'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2634
  :user_name: 匿名
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/08/29 15:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  私が狭量だったようです。\r<br>技術的な話もありませんし不快に思っている方も多いようなので私の発言は消していただければ幸いです。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2948'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/2948
  :user_name: yohei
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/415/
  :language: C
  :time: 2007/09/09 13:50 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <pre class=\"compact\">A4ページ全体に広げて。</pre>\n\t"
  :code: "using System.IO;\nusing iTextSharp.text;\nusing iTextSharp.text.pdf;\nclass
    Program {\n    static void Main(string[] args) {\n        string s = \"Hello,
    world!\";\n        Document doc = new Document(PageSize.A4.Rotate(), 0f, 0f, 0f,
    0f);\n        PdfWriter.GetInstance(doc, File.Create(\"hello.pdf\"));\n        doc.Open();\n
    \       Font f = FontFactory.GetFont(FontFactory.TIMES_BOLD);\n        f.Size
    *= doc.PageSize.Height / \n            (f.BaseFont.GetAscentPoint(s, f.Size) -
    f.BaseFont.GetDescentPoint(s, f.Size));\n        Chunk chunk = new Chunk(s, f);\n
    \       chunk.SetTextRise(-f.BaseFont.GetAscentPoint(chunk.Content, f.Size));\n
    \       chunk.SetHorizontalScaling((doc.PageSize.Width - 0f) / chunk.GetWidthPoint());\n
    \       doc.Add(chunk);\n        doc.Close();\n    }\n}\n"
  :tags:
  - iTextSharp
  :references:
    :url: /web/20081119234725/http://itextsharp.sourceforge.net/
    :title: iTextSharp
- :id: '3329'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/3329
  :user_name: koguro
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/438/
  :language: Scheme
  :time: 2007/10/15 15:10 GMT
  :vote_count: '4'
  :vote_score: '4'
  :body: "\n\t  <pre class=\"compact\">Gaucheだとkenhysさん作のlibharuがあるので、それを使えばPDF出力ができるのですが、\r\n外部ライブラリを使用すると他言語の解答と似たものとなってつまらないので、自力でPDFを作成してみました。</pre>\n\t"
  :code: |
    (use srfi-1)
    (use gauche.sequence)
    (use util.list)

    (define-method pdf-format ((port &lt;port&gt;) dict obj)
      (format port "~a " obj))

    (define-method pdf-format ((port &lt;port&gt;) dict (kw &lt;keyword&gt;))
      (format port "/~a " kw))

    (define-method pdf-format ((port &lt;port&gt;) dict (sym &lt;symbol&gt;))
      (cond
       ((assq sym dict) =&gt; (compose (cut format port "~d 0 R " &lt;&gt;) cdr))
       (else
        (format port "~a " sym))))

    (define-method pdf-format ((port &lt;port&gt;) dict (str &lt;string&gt;))
      (format port "(~a) " str))

    (define-method pdf-format ((port &lt;port&gt;) dict (vec &lt;vector&gt;))
      (format port "[ ")
      (for-each (cut pdf-format port dict &lt;&gt;) vec)
      (format port "] "))

    (define-method pdf-format ((port &lt;port&gt;) dict (lst &lt;list&gt;))
      (cond
       ((null? lst) #f)
       ((is-a? (car lst) &lt;pair&gt;)
        (format port "&lt;&lt; ")
        (for-each (lambda (pair)
                    (pdf-format port dict (car pair))
                    (pdf-format port dict (cdr pair)))
                  lst)
        (format port "&gt;&gt; "))
       (else
        (for-each (cut pdf-format port dict &lt;&gt;) lst))))

    (define-method pdf-format ((port &lt;port&gt;) dict (proc &lt;procedure&gt;))
      (proc port dict))

    (define (pdf-stream cmd-list)
      (lambda (port dict)
        (let ((stream (call-with-output-string
                        (lambda (out)
                          (format out "~%BT~%")
                          (for-each (lambda (cmd)
                                      (pdf-format out dict cmd)
                                      (newline out))
                                    cmd-list)
                          (format out "ET~%")))))
          (pdf-format port dict `((:Length ,(string-length stream))))
          (format port "~%stream~aendstream~%" stream))))

    (define (pdf-object name content)
      (lambda (port dict ctxt)
        (let ((pos (port-tell port)))
          (format port "~d 0 obj~%" (assq-ref dict name))
          (pdf-format port dict content)
          (format port "~%endobj~%")
          (acons name pos ctxt))))

    (define (pdf-trailer root)
      (lambda (port dict ctxt)
        (let ((xref-pos (port-tell port)))
          (format port "xref~%0 ~d~%0000000000 65535 f~%" (+ (length dict) 1))
          (for-each (cut format port "~10,'0d 00000 n~%" &lt;&gt;) (map cdr (reverse ctxt)))
          (format port "trailer~%")
          (pdf-format port dict `((:Root . ,root) (:Size ,(+ (length dict) 1))))
          (format port "~%startxref~%~d~%%%EOF~%" xref-pos))))

    (define (pdf-write filename root dict pdf-obj-list)
      (call-with-output-file filename
        (lambda (port)
          (format port "%PDF-1.2~%")
          (fold (cut &lt;&gt; port dict &lt;&gt;) '()
                (append pdf-obj-list (list (pdf-trailer root)))))))

    (define-syntax pdf-document
      (syntax-rules ()
        ((_ filename root (name content) ...)
         (pdf-write filename 'root
                    (map cons (list 'name ...) (iota (length (list 'name ...)) 1))
                    (list (pdf-object 'name content) ...)))))

    (pdf-document "hello.pdf" root
                  (page      '((:Type . :Page)
                               (:Parent . pages)
                               (:Resources . res)
                               (:Contents . contents)))
                  (pages     '((:Type . :Pages)
                               (:Kids . #(page))
                               (:Count . 1)
                               (:MediaBox . #(0 0 842 595))))
                  (res       '((:ProcSet . #(:PDF :Text))
                               (:Font . ((:F1 . font)))))
                  (contents   (pdf-stream '((:F1 120 Tf)
                                            (1 0 0 1 72 260 Tm)
                                            ("Hello, world!" Tj))))
                  (font      '((:Type . :Font)
                               (:Subtype . :TrueType)
                               (:BaseFont . :Helvetica)))
                  (root      '((:Type . :Catalog)
                               (:Pages . pages))))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '5935'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/5935
  :user_name: howking
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/744/
  :language: Erlang
  :time: 2008/03/04 17:17 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>Joeさんに感謝。</p>\n\n\t"
  :code: |
    -module(helloworld).
    -export([start/0]).

    start()-&gt;
        PDF = pdf:new(),
        pdf:set_pagesize(PDF, 841, 595),
        pdf:begin_text(PDF),
        pdf:set_font(PDF, "Times-Italic", 148),
        pdf:set_text_pos(PDF, 12, 280),
        pdf:text(PDF, "Hello, World!"),
        pdf:end_text(PDF),
        file:write_file("helloworld.pdf",[pdf:export(PDF)]),
        pdf:delete(PDF).
  :tags: []
  :references:
    :url: /web/20081119234725/http://www.sics.se/~joe/erlguten-2.1/erlguten.html
    :title: ErlGuten
- :id: '7215'
  :parent_id: '50'
  :url: http://ja.doukaku.org/comment/7215
  :user_name: emasaka
  :user_url: /web/20081119234725/http://ja.doukaku.org/user/852/
  :language: Other
  :time: 2008/08/19 07:59 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>PDFも言語ですよね、ということで。</p>\n\n\t"
  :code: |
    %PDF-1.4

    1 0 obj
    &lt;&lt;
     /Type /Page
     /Parent 5 0 R
     /Resources 3 0 R
     /Contents 2 0 R
    &gt;&gt;
    endobj

    2 0 obj
    &lt;&lt; /Length 53 &gt;&gt;
    stream
    BT
    /F1 90 Tf
    1 0 0 1 10 600 Tm
    (Hello, World!) Tj
    ET
    endstream
    endobj

    3 0 obj
    &lt;&lt;
     /ProcSet [ /PDF /Text ]
     /Font &lt;&lt; /F1 4 0 R &gt;&gt;
    &gt;&gt;
    endobj

    4 0 obj
    &lt;&lt;
     /Type /Font
     /Subtype /Type1
     /Name /Helv
     /BaseFont /Helvetica
    &gt;&gt;
    endobj

    5 0 obj
    &lt;&lt;
     /Type /Pages
     /Kids [ 1 0 R ]
     /Count 1
     /MediaBox [ 0 0 595 842 ]
    &gt;&gt;
    endobj

    6 0 obj
    &lt;&lt;
     /Type /Catalog
     /Pages 5 0 R
    &gt;&gt;
    endobj

    trailer
    &lt;&lt; /Root 6 0 R &gt;&gt;

    %%EOF
  :tags:
  - PDF
  :references:
    :url: /web/20081119234725/http://web.archive.org/web/20041204131320/http://www.kobu.com/docs/pdf/pdfxhand.htm
    :title: 手書きPDF入門
