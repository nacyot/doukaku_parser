---
:id: '202'
:title: LL Golf Hole 7 - バイト数を読みやすくする
:comments:
- :id: '7310'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7310
  :user_name: takano32
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/148/
  :language: Ruby
  :time: 2008/08/24 19:43 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\r\n\t  <p>与えられたバイト数を読みやすくしてください。読みやすくとは、いわゆる human readable な表記とします（詳しくはサンプルのコードを参考にしてください）。\r\n</p>\r\n<p>与えるバイト数についてはリテラルで与える、標準入力で与える、引数で与えるなどは自由とします。\r\n</p>\r\n<p>余力のあるものはこのプログラムを短くしてください。\r\n</p>\r\n<p>※
    LL Future実行委員の高野光弘です。この出題は <a href=\"/web/20091213020908/http://ll.jus.or.jp/2008/\">LL
    Future</a>公式の出題であり、優れたものについては<a href=\"/web/20091213020908/http://ll.jus.or.jp/2008/program/doukaku\">LL
    Golf</a>のセッションでご紹介させていただくかもしれません。ご理解の上、ご投稿ください。また、<a href=\"/web/20091213020908/http://ll.jus.or.jp/2008/ticket\">LL
    Futureのチケットは現在も発売中</a>です。よろしければ、メインイベントの方にもぜひご参加ください。\r\n</p>\r\n\r\n\r\n\r\n\t"
  :code: "b = gets.to_i\r\nif b &lt; 10**3\r\n    puts b\r\nelsif b &lt; 10**6\r\n
    \   puts \"%.1fk\" % (b.to_f/10**3)\r\nelsif b &lt; 10**9\r\n    puts \"%.1fM\"
    % (b.to_f/10**6)\r\nelsif b &lt; 10**12\r\n    puts \"%.1fG\" % (b.to_f/10**9)\r\nelse\r\n
    \   puts \"%.1fT\" % (b.to_f/10**12)\r\nend\r\n"
  :tags:
  - LLGolf
  - doukaku
  - llfuture
  :references:
    :url: 
    :title: 
- :id: '7312'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7312
  :user_name: turugina
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/760/
  :language: XSLT
  :time: 2008/08/24 20:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">一応YiBまで対応(処理系が対応してればだけど.\r\n変換対象のバイト数はスタイルシートパラメタnで与えます。\r\n449bytes,
    実質443bytes</pre>\n\t"
  :code: |
    &lt;transform version="2.0" xmlns="http://www.w3.org/1999/XSL/Transform" xmlns:y="y"&gt;
    &lt;output method="text"/&gt;&lt;param name="n"/&gt;
    &lt;variable name="u" select="('B','KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB')"/&gt;
    &lt;template match="/"&gt;&lt;value-of select="y:f($n,1)"/&gt;&lt;/template&gt;
    &lt;function name="y:f"&gt;&lt;param name="m"/&gt;&lt;param name="i"/&gt;
    &lt;sequence select="if($m&amp;lt;1024)then($m,$u[$i])else
    y:f(round-half-to-even($m div 1024,2),$i+1)"/&gt;
    &lt;/function&gt;&lt;/transform&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7313'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7313
  :user_name: turugina
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/760/
  :language: C
  :time: 2008/08/24 21:25 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">#7312と同じ考えでC++で。入力は標準入力。\r\n133bytes。実質132bytes</pre>\n\t"
  :code: |
    #include &lt;iostream&gt;
    char*p=" \bKiMiGiTiPiEiZiYi";
    main(){double n;std::cin&gt;&gt;n;for(;1024&lt;n;p+=2)n/=1024;std::cout&lt;&lt;n&lt;&lt;*p&lt;&lt;p[1]&lt;&lt;"B";}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7314'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7314
  :user_name: seri
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/641/
  :language: C
  :time: 2008/08/24 21:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">標準入力から読み込み。\r\nYまで対応しています。\r\n</pre>\n\t"
  :code: |
    using System;
    class P {
        static void Main() {
            double n = double.Parse(Console.ReadLine());
            string s = " kMGTPEZY";
            int c = 0, l = 1000;
            for (; n &gt;= l; c++)
                n /= l;
            Console.WriteLine("{0:f1}{1}", n, s[c]);
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7315'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7315
  :user_name: turugina
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/760/
  :language: 
  :time: 2008/08/24 21:34 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">CPANモジュールNumber::Bytes::Humanを使ってone-liner。入力は標準入力\r\n\r\nperl
    -MNumber::Bytes::Human=format_bytes -nlE'say format_bytes$_’\r\n\r\n66bytesかな</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: /web/20091213020908/http://search.cpan.org/~ferreira/Number-Bytes-Human-0.07/Human.pm
    :title: Number::Bytes::Human
- :id: '7316'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7316
  :user_name: turugina
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/760/
  :language: 
  :time: 2008/08/25 02:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">-p を使ってもう1byte削れた. おまけでv5.10じゃなくても大丈夫に\r\n\r\nperl
    -MNumber::Bytes::Human=format_bytes -ple'$_=format_bytes$_’</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7317'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7317
  :user_name: こう。
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2008/08/24 21:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">とりあえず、縮めてないです。\r\n</pre>\n\t"
  :code: "#include &lt;stdio.h&gt;\n\n#define QWORD unsigned long long\n#define DWORD
    unsigned long\n#define WORD  unsigned short\n#define BYTE  char\n\nint put_unit(char
    * p,int n,char u){\n    if(n) return sprintf(p,\"%d%c\",n,u);\n    if(u=='B')
    return sprintf(p,\"B\");\n    return 0;\n}\n\nvoid conv_byte(char *p,QWORD num){\n
    \   int i;\n    if(num==0) sprintf(p++,\"0\");\n    for(i=6;i&gt;=0;i--)\n        p+=put_unit(p,(num&gt;&gt;(10*i))&amp;0x3ff,\"BKMGTPE\"[i]);\n}\n\nvoid
    conv_put(char *buf,QWORD n){\n    conv_byte(buf,n);\n    printf(\"%Ld=%s\\n\",n,buf);
    \   \n}\nint main(){\n    char buf[64];\n    \n    conv_put(buf,0);\n    conv_put(buf,(BYTE)-1);\n
    \   conv_put(buf,(WORD)-1);\n    conv_put(buf,(DWORD)-1);\n    conv_put(buf,(QWORD)-1);\n
    \   \n    return 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7318'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7318
  :user_name: sumim
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2008/08/24 22:24 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  <p>Squeak Smalltalk で。</p>\n\n\t"
  :code: |
    | byte |
    byte := 123456789012345.
    ^(#('' k M G T P E Z) inject: byte into: [:result :unit |
        result &lt; 1024 ifTrue: [^result asString, unit].
        result / 1024 roundTo: 0.1]) asString, 'Y'

    "=&gt; '112.3T' "
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '7319'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7319
  :user_name: hogee
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/826/
  :language: Perl
  :time: 2008/08/24 23:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>お題のSample Codeを参考に書いてみました。byte数は標準入力から与えます。111byte。</p>\n\n\t"
  :code: |
    $i=int(((($n=&lt;&gt;)=~tr/0-9/0-9/)-1)/3);
    printf(($i?"%.1f":"%d")."%s\n",$n/10**($i*3),('',qw(k M G T P E Z Y))[$i])
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7320'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7320
  :user_name: horiuchi
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/570/
  :language: Java
  :time: 2008/08/25 05:45 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>1000で割る方で書いてみました。\nタブと改行を除いて 166B</p>\n\n\t"
  :code: |
    class P{
        public static void main(String[]a){
            double d=Double.parseDouble(a[0]);
            int i=0,l=1000;
            for(;d&gt;=l;d/=l,i++);
            System.out.printf("%.1f%s",d," kMGTPEZY".charAt(i));
        }
    }
  :tags:
  - Java1.5
  :references:
    :url: 
    :title: 
- :id: '7321'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7321
  :user_name: horiuchi
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/570/
  :language: Java
  :time: 2008/08/25 05:49 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>投稿直後に縮むことに気付いたので再投稿。\nこれで 164B</p>\n\n\t"
  :code: |
    class P{
        public static void main(String[]a){
            double d=Double.parseDouble(a[0]);
            int i=0,l=1000;
            for(;d&gt;=l;d/=l,i++);
            System.out.printf("%.1f"+" kMGTPEZY".charAt(i),d);
        }
    }
  :tags:
  - Java1.5
  :references:
    :url: 
    :title: 
- :id: '7322'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7322
  :user_name: こう。
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2008/08/25 03:07 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">一人だけ問題を読み違えているようですが・・・このまま行きます。\r\n本体は155Byte</pre>\n\t"
  :code: "#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n#define QWORD unsigned
    long long\n#define DWORD unsigned long\n#define WORD  unsigned short\n#define
    BYTE  char\n\nvoid conv_byte(char *p,QWORD n){\n    int m,i=7;strcpy(p,\"0B\");\n
    \   if(n)while(i--)p+=(m=(n&gt;&gt;10*i)&amp;1023)?sprintf(p,\"%d%c\",m,\"BKMGTPE\"[i]):i?0:sprintf(p,\"B\");\n}\n\nvoid
    conv_put(char *buf,QWORD n){\n    conv_byte(buf,n);\n    printf(\"%Ld=%s\\n\",n,buf);
    \   \n}\n\nint main(){\n    char buf[64];\n    \n    conv_put(buf,(QWORD)-1);\n
    \   conv_put(buf,(DWORD)-1);\n    conv_put(buf,(WORD)-1);\n    conv_put(buf,(BYTE)-1);\n
    \   conv_put(buf,0);\n\n    conv_put(buf,(QWORD)1024*1024*1024*1024*1024*1024);\n
    \   conv_put(buf,(QWORD)1024*1024*1024*1024*1024);\n    conv_put(buf,(QWORD)1024*1024*1024*1024);\n
    \   conv_put(buf,(QWORD)1024*1024*1024);\n    conv_put(buf,(QWORD)1024*1024);\n
    \   conv_put(buf,(QWORD)1024);\n    conv_put(buf,(QWORD)1);\n\n    return 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7323'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7323
  :user_name: silverwire
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/646/
  :language: JavaScript
  :time: 2008/08/25 03:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"> #7320をお手本にJavaScriptで。( toFixed()メソッドがちょっと嫌な感じですが。)</pre>\n\t"
  :code: |
    (function (d) {
      for (var i = 0; d &gt;= 1024; d /= 1024, i++);
      alert(d.toFixed(2) + ' kMGTPEZY'.charAt(i));
    })(123456789012345);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7324'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7324
  :user_name: nori
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/59/
  :language: Python
  :time: 2008/08/25 03:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>あんまり納得のいく出来ではない。forの中が汚い。</p>\n\n\t"
  :code: |
    def readable(byte, base=1024):
      '''
      &gt;&gt;&gt; readable(0)
      '0'
      &gt;&gt;&gt; readable(100)
      '100'
      &gt;&gt;&gt; readable(1024)
      '1.0k'
      &gt;&gt;&gt; readable(1900*1024)
      '1.9M'
      &gt;&gt;&gt; readable(1900*1024*1024)
      '1.9G'
      &gt;&gt;&gt; readable(1900*(1024**7))
      '1.9Y'
      '''
      for c in ['','k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']:
        d, m = divmod(byte, base)
        if not d:
          if c:
            return '%.1f%s'%(float(exp)/base, c)
          else:
            return str(m)
        else:
          exp = byte
          byte = d
      return 'Not supported'


    if __name__ ==  '__main__':
      import doctest
      doctest.testmod()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7325'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7325
  :user_name: nori
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/59/
  :language: Python
  :time: 2008/08/25 03:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>大差でこちらだと思う。\n<a href=\"/web/20091213020908/http://ja.doukaku.org/202/flatten/#id1\"
    name=\"id2\"><span class=\"problematic\" id=\"id2\">**</span></a>を一杯計算するが・・・。</p>\n<div
    class=\"system-message\" id=\"id1\">\n<p class=\"system-message-title\">System
    Message: <a name=\"id1\">WARNING/2</a> (<tt class=\"docutils\">&lt;string&gt;</tt>,
    line 1); <em><a href=\"/web/20091213020908/http://ja.doukaku.org/202/flatten/#id2\">backlink</a></em></p>\nInline
    strong start-string without end-string.</div>\n\n\t"
  :code: |
    def readable(byte, base=1024):
      '''
      &gt;&gt;&gt; readable(0)
      '0'
      &gt;&gt;&gt; readable(100)
      '100'
      &gt;&gt;&gt; readable(1024)
      '1.0k'
      &gt;&gt;&gt; readable(1900*1024)
      '1.9M'
      &gt;&gt;&gt; readable(19000*1024)
      '18.6M'
      &gt;&gt;&gt; readable(190000*1024)
      '185.5M'
      &gt;&gt;&gt; readable(1900*1024*1024)
      '1.9G'
      &gt;&gt;&gt; readable(1900*(1024**7))
      '1.9Y'
      '''
      for i, c in enumerate(['','k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']):

        if byte &lt; base **(i+1):
          if c:
            return '%.1f%s'%(float(byte)/base**i, c)
          else:
            return str(byte)

      return 'Not supported'


    if __name__ ==  '__main__':
      import doctest
      doctest.testmod()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7326'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7326
  :user_name: kkobayashi
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2008/08/25 03:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>R的にはループを使わない方向で。</p>\n\n\t"
  :code: |
    bytes.pretty &lt;- function(n){
      u &lt;- c('', 'k', 'M', 'G', 'T')
      r &lt;- 1024^(1:length(u)-1)
      i &lt;- which.min(abs(512-n/r))
      sprintf("%.1f%s", n/r[i], u[i])
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7327'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7327
  :user_name: nori
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/59/
  :language: Python
  :time: 2008/08/25 04:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>前出の再帰バージョン。\n再帰のありがたみはあまりない。\nしいて言えば、Yでかけないやつが来たときもreadableではないが数字列を返す点か。</p>\n\n\t"
  :code: |
    def readable(byte, base=1024):
      def sub(byte, k, bound, unit):
        if byte &lt; bound:
          if unit and unit[0]:
            return '%.1f%s'%(float(byte)/k, unit[0])
          else:
            return str(byte)
        else:
          return sub(byte, k*base, bound *base, unit[1:])
      return sub(byte, 1, base, ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'])
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7328'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7328
  :user_name: 匿名
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/08/25 04:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">1024 でなくて 1000 でいいんですね？</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7329'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7329
  :user_name: pooq
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2008/08/25 05:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">データは標準入力から。\r\nサンプルプログラムのように k=1000 で。\r\n&gt;echo
    123|jconsole unit1.ijs\r\n123\r\n\r\n&gt;echo 1234|jconsole unit1.ijs\r\n1.2k\r\n\r\n&gt;echo
    123456789|jconsole unit1.ijs\r\n123.5M\r\n\r\n&gt;echo 12345678901234567|jconsole
    unit1.ijs\r\n12345.7T</pre>\n\t"
  :code: |
    exit wd;(a&lt;1e3){a;~(0j1":a%10^3*b),(b=.((a=.x:".}:1!:1[3)&gt;10^3*i.5)i:1){' kMGT'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7331'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7331
  :user_name: ckbx
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/893/
  :language: Python
  :time: 2008/08/25 11:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>raw_input()を使って書いてみた。86bytes。</p>\n\n\t"
  :code: |
    s=raw_input();p=-min(4,(len(s)-1)/3)*3;print[s,s[:p]+'.'+s[p:1+p]+'kMGT'[-1-p/3]][p&lt;0]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7334'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7334
  :user_name: zaud
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/885/
  :language: Scheme
  :time: 2008/08/25 07:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">またクラス作るパターンでやりました。\r\n</pre>\n\t"
  :code: |
    #!/usr/bin/env gosh
    (define-class &lt;b&gt; ()
      ((b :init-keyword :b :accessor b-b)))

    (define-method write-object ((b &lt;b&gt;) port)
      (let* ((j (b-b b))
             (k 1000.0)
             (l '(byte k M G T P E Z Y))
             (m (min (truncate-&gt;exact (/ (log j) (log k)))
                     (- (length l) 1))))
        (if (&lt; j k)
            (display j)
            (display (/ (truncate (* (/ j (expt k m)) 10)) 10)))
        (print (list-ref l m))))

    (define (main args)
      (display "input: ")(flush)
      (print (make &lt;b&gt; :b (x-&gt;number(read)))))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7335'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7335
  :user_name: emasaka
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/852/
  :language: sed
  :time: 2008/08/25 12:12 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>81B。</p>\n\n\t"
  :code: |
    /^..\?.\?$/b
    s/$/.0kMGT/
    :a
    s/\(.\)\(.\)..\...\(.\)/\1.\2\3/
    ta
    s/\(\...\).*/\1/
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7336'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7336
  :user_name: yugui
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/55/
  :language: C
  :time: 2008/08/25 07:56 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>C++という関数型言語がありましてな。</p>\n<p>入力はリテラルで。</p>\n\n\t"
  :code: "#include &lt;iostream&gt;\n\ntemplate &lt;bool b, class T, class S&gt; struct
    Choice { typedef T Result; };\ntemplate &lt;class T, class S&gt; struct Choice&lt;false,
    T, S&gt; { typedef S Result; };\n\nstruct None\n{\n    enum { symbol = ' ' };\n
    \   static double scaled(long long n) throw() \n      { return static_cast&lt;double&gt;(n);
    }\n};\nstruct Kilo\n{\n    enum { symbol = 'K' };\n    static double scaled(long
    long n) throw() \n      { return static_cast&lt;double&gt;(n) / 1000LL; }\n};\nstruct
    Mega\n{\n    enum { symbol = 'M' };\n    static double scaled(long long n) throw()
    \n      { return static_cast&lt;double&gt;(n) / 1000000LL; }\n};\nstruct Giga\n{\n
    \   enum { symbol = 'G' };\n    static double scaled(long long n) throw() \n      {
    return static_cast&lt;double&gt;(n) / 1000000000LL; }\n};\nstruct Tera\n{\n    enum
    { symbol = 'T' };\n    static double scaled(long long n) throw() \n      { return
    static_cast&lt;double&gt;(n) / 1000000000000LL; }\n};\n\ntemplate &lt;long long
    n&gt;\nstruct SIPrefix\n{\n    typedef\n        typename Choice&lt; n &lt;          1000LL,
    None,\n        typename Choice&lt; n &lt;       1000000LL, Kilo,\n        typename
    Choice&lt; n &lt;    1000000000LL, Mega,\n        typename Choice&lt; n &lt; 1000000000000LL,
    Giga,\n                                              Tera\n      &gt;::Result&gt;::Result&gt;::Result&gt;::Result
    \ Result;\n};\n\ntemplate &lt;long long n&gt;\nstruct HumanReadable\n{\nprivate:\n
    \   typedef typename SIPrefix&lt;n&gt;::Result prefix;\n    friend std::ostream&amp;
    operator &lt;&lt; (std::ostream&amp; os, struct HumanReadable&lt;n&gt;)\n      {\n
    \       os &lt;&lt; prefix::scaled(n) &lt;&lt; static_cast&lt;char&gt;(prefix::symbol);\n
    \     }\n};\n\nint main()\n{\n    std::cout &lt;&lt; HumanReadable&lt;123456789012345LL&gt;()
    &lt;&lt; std::endl;\n    return 0;\n};\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7337'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7337
  :user_name: kkobayashi
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/232/
  :language: 
  :time: 2008/08/25 13:21 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>1000だと文字の長さや正規表現を使った解が作りやすいけど、「バイト数」というお題を考えると1024でなければ意味がないし・・・。</p>\n<p>この違いは結構大きいのではないかと思います。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7338'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7338
  :user_name: yugui
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/55/
  :language: C
  :time: 2008/08/25 08:28 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>もっと純粋関数言語っぽくしてみました。g++だとこんなすさまじいのが通る。</p>\n\n\t"
  :code: "#include &lt;iostream&gt;\n\ntemplate &lt;bool b, class T, class S&gt; struct
    Choice { typedef T Result; };\ntemplate &lt;class T, class S&gt; struct Choice&lt;false,
    T, S&gt; { typedef S Result; };\n\nstruct None {enum{ symbol = ' ', base =             1LL
    };};\nstruct Kilo {enum{ symbol = 'K', base =          1000LL };};\nstruct Mega
    {enum{ symbol = 'M', base =       1000000LL };};\nstruct Giga {enum{ symbol =
    'G', base =    1000000000LL };}; \nstruct Tera {enum{ symbol = 'T', base = 1000000000000LL
    };}; \ntemplate &lt;long long n&gt; struct SIPrefix\n{\n    typedef\n        typename
    Choice&lt; n &lt; Kilo::base,     None,\n        typename Choice&lt; n &lt; Mega::base,
    \    Kilo,\n        typename Choice&lt; n &lt; Giga::base,     Mega,\n        typename
    Choice&lt; n &lt; Tera::base,     Giga,\n                                             Tera\n
    \     &gt;::Result&gt;::Result&gt;::Result&gt;::Result  Result;\n};\n\ntemplate
    &lt;long long n&gt; struct HumanReadable\n{\nprivate:\n    typedef typename SIPrefix&lt;n&gt;::Result
    prefix;\n    friend std::ostream&amp; operator &lt;&lt; (std::ostream&amp; os,
    struct HumanReadable&lt;n&gt;)\n      {\n        return os &lt;&lt; static_cast&lt;double&gt;(n)/prefix::base
    &lt;&lt; static_cast&lt;char&gt;(prefix::symbol);\n      }\n};\n\nint main()\n{\n
    \   std::cout &lt;&lt; HumanReadable&lt;123456789012345LL&gt;() &lt;&lt; std::endl;\n
    \   return 0;\n};\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7339'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7339
  :user_name: wataken44
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/854/
  :language: Ruby
  :time: 2008/08/25 08:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Pまで対応して正味74byte。\n他の人と同じやり方。</p>\n\n\t"
  :code: |
    ruby -e'n=gets.to_i;k=0;b=1024;while(n&gt;b&amp;&amp;k&lt;5);n/=b;k+=1;end;print n," KMGTP"[k,1]'
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7340'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7340
  :user_name: ckbx
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/893/
  :language: Python
  :time: 2008/08/25 09:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>4bytes削った。82bytes</p>\n\n\t"
  :code: |
    s=raw_input();p=-min(4,(len(s)-1)/3)*3;print[s,s[:p]+'.'+s[p]+'kMGT'[-1-p/3]][p&lt;0]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7341'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7341
  :user_name: 匿名
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/4/
  :language: Scheme
  :time: 2008/08/25 10:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>小数点以下の桁数を固定で表示する標準的な方法が分かりません…。これだと、「10000000」が「10.MB」になってしまう。</p>\n\n\t"
  :code: |
    (use srfi-42)

    (print (let ((b 1000)
                  (x (x-&gt;integer (read))))
              (last-ec x (:parallel (:do ((y x)) (&gt;= y b) ((/. y b)))
                                       (: u "KMGTPEZY"))
                (format "~,,,,3a~a" (/. y b) u)))
            'B)
  :tags:
  - Gauche
  :references:
    :url: 
    :title: 
- :id: '7342'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7342
  :user_name: emasaka
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/852/
  :language: Bash
  :time: 2008/08/25 10:01 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <p>問題を見たときに多くの人が考えたであろうネタ回答。</p>\n<p>1K=1024、引数→標準出力。出題であえて「K」でなく「k」としているのはスルーしてみます。</p>\n\n\t"
  :code: |
    dd if=/dev/zero of=.$$ bs=$1 count=1 2&gt;/dev/null
    ls -lh .$$|cut -d\  -f 5
    rm .$$
  :tags:
  - cut
  - dd
  - ls
  - rm
  - sh
  :references:
    :url: 
    :title: 
- :id: '7343'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7343
  :user_name: athos
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/755/
  :language: 
  :time: 2008/08/25 10:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>あー、ログインし忘れたorz</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7344'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7344
  :user_name: kkobayashi
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/232/
  :language: Bash
  :time: 2008/08/25 16:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">sparse fileに対応しているファイルシステムであれば、こんな感じにしてみるとネタ感は少なくなると思います。\r\nコードはちょっと汚くなりますが・・・。\r\n\r\n$
    time bash bytes.sh 5000000000000\r\n4.6T\r\n\r\nreal    0m0.437s\r\nuser    0m0.259s\r\nsys
    \    0m0.214s</pre>\n\t"
  :code: |
    dd if=/dev/zero of=.$$ bs=1 seek=$(($1-1)) count=1 2&gt;/dev/null
    ls -lh .$$|cut -d\  -f 5
    rm .$$
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7345'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7345
  :user_name: leque
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/840/
  :language: Scheme
  :time: 2008/08/25 22:26 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    (let ((kibi 1024))
      (do ((n (read) (/. n kibi))
           (u '(|| k M G T) (cdr u)))
          ((&lt; n kibi) (format #t "~A~AB~%" n (car u)) 0)))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '7346'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7346
  :user_name: saitoh
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/886/
  :language: C
  :time: 2008/08/25 19:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>余分なゼロを出さないように、つまり、\n%  ./a.out 107374182４\n1G\nと、してみました。サンプルコードだと1G0M0K0Bになります。\n再起を使っています。\n64bit　longlongしか考えないので、　”E\"　までの単位にしか対応していません。</p>\n\n\t"
  :code: "#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid bytes(unsigned
    long long l, char *suf, int zs)\n{\n        unsigned u ＝l &amp; 0x3FF;\n        if(l&gt;1023)\n
    \               bytes(l&gt;&gt;10, suf+1,1);\n        if(u&gt;0|| !zs &amp;&amp;
    l==0) \n　　　　　　　printf(\"%d%c\",u,*suf)；\n}\n\nint\nmain(int argc , char *argv[])\n{\n
    \       int i;\n        unsigned long long l;\n        for(i=1;i&lt;argc;i++)
    {\n                l=strtoll(argv[i],NULL,10);\n                bytes(l, \"BKMGTPE\",0);\n
    \               putchar('\\n');\n        }\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7347'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7347
  :user_name: silverwire
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/646/
  :language: Bash
  :time: 2008/08/25 22:18 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">なるほど。 0で埋めたファイル以外にも、UNIXのいいところを集めていますね。\r\n\r\n短さでは敵いませんが、無難にbcで。</pre>\n\t"
  :code: |
    n="$1"
    for u in '' K M G T P E Z Y; do
      [ `echo $n | cut -d '.' -f 1` -lt 1024 ] &amp;&amp; { echo "$n$u"; break; }
      n=`echo "scale=2; $n / 1024" | bc`
    done
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7348'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7348
  :user_name: こう。
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2008/08/25 22:21 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">もう少し縮めた。\r\n\r\nsprintf版は2文字関数名が増えてるけどタブ・改行含めて145byte、\r\nprintf版は同じく126byte・・・かな？</pre>\n\t"
  :code: "#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n#define QWORD unsigned
    long long\n#define DWORD unsigned long\n#define WORD  unsigned short\n#define
    BYTE  char\n\nvoid s_conv_byte(char *p,QWORD n){\n    int m,i=7;\n    while(i--)p+=(m=(n&gt;&gt;10*i)&amp;1023)|!i&amp;!n?sprintf(p,\"%d%c\",m,\"BKMGTPE\"[i]):i?0:sprintf(p,\"B\");\n}\n\n\nvoid
    conv_byte(QWORD n){\n    int m,i=7;\n    while(i--)(m=(n&gt;&gt;10*i)&amp;1023)|!i&amp;!n?printf(\"%d%c\",m,\"BKMGTPE\"[i]):i?0:printf(\"B\");\n}\n\nvoid
    s_conv_put(char *buf,QWORD n){\n    s_conv_byte(buf,n);\n    printf(\"%Ld=%s\\n\",n,buf);
    \   \n}\n\nvoid conv_put(char *buf,QWORD n){\n    printf(\"%Ld=\",n,buf);    \n
    \   conv_byte(n);\n    printf(\"\\n\");\n}\n\nint main(){\n    char buf[64];\n
    \   \n    conv_put(buf,(QWORD)-1);\n    conv_put(buf,(DWORD)-1);\n    conv_put(buf,(WORD)-1);\n
    \   conv_put(buf,(BYTE)-1);\n    conv_put(buf,0);\n\n    conv_put(buf,(QWORD)1024*1024*1024*1024*1024*1024);\n
    \   conv_put(buf,(QWORD)1024*1024*1024*1024*1024);\n    conv_put(buf,(QWORD)1024*1024*1024*1024);\n
    \   conv_put(buf,(QWORD)1024*1024*1024);\n    conv_put(buf,(QWORD)1024*1024);\n
    \   conv_put(buf,(QWORD)1024);\n    conv_put(buf,(QWORD)1);\n\n    return 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7349'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7349
  :user_name: 匿名
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/08/25 22:37 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">＞サンプルコードだと1G0M0K0Bになります。\r\n\r\nputs　1回しか実行されないのにそんな器用な表示できるのか。\r\nサンプルコードにBはないし。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7350'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7350
  :user_name: 99yen
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/591/
  :language: 
  :time: 2008/08/26 01:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>日本語言語なのに、ぜんぜん日本語っぽい投稿をしてないなと思ったので、少々長くなりますがあえて。</p>\n\n\t"
  :code: |
    「バイト数を入力してください」と尋ねて入力に代入
    単位は「{改行}k{改行}M{改行}G{改行}T」
    カウンタは0
    入力が1024以上の間
        入力を1024で直接割る
        カウンタに1を直接足す
    入力を1で小数点四捨五入
    それ&amp;単位[カウンタ]を表示
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7351'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7351
  :user_name: nemo_kaz
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/837/
  :language: Groovy
  :time: 2008/08/26 02:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>お題のRubyの移植版です。</p>\n\n\t"
  :code: |
    def b = System.in.newReader().readLine().toFloat()

    if (b &lt; 10**3)
       { println b }
    else if (b &lt; 10**6)
       { printf ("%.1fk" , (b/10**3))}
    else if (b &lt; 10**9)
       { printf ("%2.1fM" , (b/10**6))}
    else if (b &lt; 10**12)
       { printf ("%2.1fG" , (b/10**9))}
    else
       { printf ("%2.1fT" , (b/10**12))}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7352'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7352
  :user_name: baal
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/827/
  :language: Scheme
  :time: 2008/08/26 03:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  SRFI-48 や SRFI-54 を使うと小数点以下桁数を指定して出力できるようですね。\r<br><br>残念ながら Gauche は対応してないようなので Guile で。\r<br>"
  :code: |
    (use-modules (ice-9 format))
    (letrec ((num (string-&gt;number (cadr (command-line))))
        (base 1024) (prefix (string-&gt;list " KMGTPEZY"))
        (loop (lambda (m ls)
            (if (pair? ls)
                (if (&lt; num (* m base))
                    (format #f "~,1F~A" (exact-&gt;inexact (/ num m)) (car ls))
                    (loop (* m base) (cdr ls)))
                (format #f "~:DB" num)))))
        (display (loop 1 prefix))
        (newline))
  :tags:
  - GNU
  - Guile
  :references:
    :url: 
    :title: 
- :id: '7353'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7353
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/304/
  :language: Haskell
  :time: 2008/08/26 04:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">無難に。</pre>\n\t"
  :code: |
    import List
    import Maybe

    units = " KMGTPEZY"
    k = 1024

    humanReadable x
     | x &lt; k = show x
     | otherwise = show a ++ "." ++ show b ++ [c] where
       (y,xs) = mapAccumL (\x c -&gt; (div x k, (x,c))) (x*10) $ init units
       (z,c) = fromMaybe (y,last units) $ find ((&lt;k*10).fst) xs
       (a,b) = divMod z 10

    {-
    &gt; humanReadable 123456789012345678901234567890
    "102121.0Y"
    -}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7354'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7354
  :user_name: raynstard
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/127/
  :language: C
  :time: 2008/08/26 05:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">まいど、raynstardです。\r\n単位を文字列として出力してしまえば100バイトまでは減らせそうなのだけど\r\nその先にある壁が越えられないorz\r\n\r\n//
    gcc doukaku202.c\r\n\r\nちなみに、コードをそのまま短くすると↓の通り(104B)\r\nmain(){char*t=\"\\0kMGTPE\";double
    d;scanf(\"%1lf\",&amp;d);for(;d&gt;1023;t++){d/=1024;}printf(\"%.1lf%.1sB\\n\",d,t);}\r\n</pre>\n\t"
  :code: |
    int main(int argc, char *argv[])
    {
        char*t="\0kMGTPE??";
        double d;
        scanf("%1lf",&amp;d);
        for(;d&gt;1023;t++)
        {
            d/=1024;
        }
        printf("%.1lf%.1sB\n",d,t);
        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7355'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7355
  :user_name: raynstard
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/127/
  :language: 
  :time: 2008/08/26 05:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">1ってなんだorz\r\nscanf(\"%1lf\",&amp;d);\r\n↓\r\nscanf(\"%lf\",&amp;d);\r\n\r\n申し訳ないです。気をつけます。。。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7356'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7356
  :user_name: M.Suzuki
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/771/
  :language: Haskell
  :time: 2008/08/26 06:08 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">全部作ってから判断すると言う素直(富豪?)な実装。\r\n</pre>\n\t"
  :code: |
    toMan n = snd $ head $ reverse $ filter (\(x,y) -&gt; n&gt;x)
            $ map (\(x,y) -&gt; (10**x, (show (n / (10**x))) ++ y))
            $ zip [0,3.0..] ["","k","M","G","T","P","E","Z","Y"]

    main = do
        putStrLn $ toMan 1234567890123456789012345678901
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7357'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7357
  :user_name: こう。
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2008/08/26 11:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">少し改造しました。\r\n同様に縮めると101byteですね\r\nmain(){int
    i=0;double d;for(scanf(\"%lf\",&amp;d);d&gt;1023;i++)d/=1024;printf(\"%.1lf%cB\\n\",d,\"\\0kMGTPE\"[i]);}</pre>\n\t"
  :code: |
    int main()
    {
        int i=0;
        double d;
        for(scanf("%lf",&amp;d);d&gt;1023;i++)d/=1024;
        printf("%.1lf%cB\n",d,"\0kMGTPE??"[i]);
        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7358'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7358
  :user_name: こう。
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2008/08/26 06:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">よく見たら、1023Bまでの間が挙動変わっちゃいますね。\r\n\r\n出題文から行くとこれでもいいのかな？\r\nmain(){int
    i=0;double d;for(scanf(\"%lf\",&amp;d);d&gt;1023;i++)d/=1024;printf(\"%.1lf%c\\n\",d,\"
    kMGTPEZY\"[i]);}\r\n2BYTE減ったけど、Zetta,Yotta追加した分同じく101Byte</pre>\n\t"
  :code: |
    int main()
    {
        int i=0;
        double d;
        for(scanf("%lf",&amp;d);d&gt;1023;i++)d/=1024;
        printf("%.1lf%c\n",d," kMGTPEZY"[i]);
        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7359'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7359
  :user_name: M.Suzuki
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/771/
  :language: Haskell
  :time: 2008/08/26 06:37 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">もうちょっと短くなりますね。\r\n</pre>\n\t"
  :code: |
    toMan n = snd $ last $ filter (\x -&gt; n&gt;fst x)
            $ map (\(x,y) -&gt; (10^x,(show $ n/10^x) ++ [y]))
            $ zip [0,3..] " kMGTPEZY"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7360'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7360
  :user_name: M.Suzuki
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/771/
  :language: Haskell
  :time: 2008/08/26 06:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">バイト数との事なので。。。\r\nスペースと改行を詰めて101Byte\r\n</pre>\n\t"
  :code: |
    toMan n = snd $ last $ filter (\x -&gt; n&gt;fst x)
        $ map (\(x,y) -&gt; (1024^x,(show $ n/1024^x) ++ [y]))
        $ zip [0,1..] " kMGTPEZY"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7361'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7361
  :user_name: quabbin
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/878/
  :language: Ruby
  :time: 2008/08/26 12:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">1024ではなく1000でいいのなら、文字列のままでもいけますよね。\r\nということで、引数を使って57byte</pre>\n\t"
  :code: |
    s=$*[0];l=s.size;p s[0,l%3]+"."+s[l%3,1]+" kMGTPE"[l/3,1]
  :tags:
  - LLGolf
  - doukaku
  - llfuture
  :references:
    :url: 
    :title: 
- :id: '7362'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7362
  :user_name: saitoh
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/886/
  :language: C
  :time: 2008/08/26 07:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>うわっ。完全に問題を読み違えていた。恥ずかしい。\nだけでは何なので一応プログラムもつけます。全然短くないけど、こっちだとお題に沿ってるかな。\nサンプルプログラムは1024ではなくて10**3で割ってるようなのでそうしてみました。</p>\n\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    #include &lt;stdlib.h&gt;

    int
    main(int argc , char *argv[])
    {
            char * p="BKMGTPE";
            long long l;
            int r=0;
            l=strtoll(argv[1],NULL,10);
            for(;l&gt;1000; r=l%1000, l/=1000, p++);
            printf("%ld.%02d%c\n",(int)l, r/10, *p);
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7363'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7363
  :user_name: quabbin
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/878/
  :language: SQL
  :time: 2008/08/26 07:41 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">それ、PostgreSQLで。8.2で確認。174byte。\r\nところで、SQLはLLですか？\r\n</pre>\n\t"
  :code: |
    select substring(c from 1 for l%3)||'.'||substring(c from l%3+1 for 1)||substring(' kMGTPE' from l/3+1 for 1)from(select column1 as c,length(column1)as l from(values('12345'))s)s;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7365'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7365
  :user_name: susu
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/218/
  :language: OCaml
  :time: 2008/08/26 08:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>移植しました。</p>\n\n\t"
  :code: "#load \"nums.cma\";;\nopen Num\nlet conv =\n  let base = (Int 1024) in\n
    \ let rec sub byte k bound = function\n    | [] -&gt; raise (Invalid_argument
    \"over\")\n    | hd::tl -&gt; \n        if byte &lt;/ bound then\n          Printf.sprintf
    \"%.1f%s\" (float_of_num (byte // k)) hd\n        else\n          sub byte (k
    */ base) (bound */ base) tl\n  in\n    fun byte -&gt; sub byte (Int 1) base [\"b\";
    \"k\"; \"M\"; \"G\";\"T\"]\n  ;;\n(*\n  conv (Int 1024);;\n  conv (Big_int (Big_int.big_int_of_string
    \"10000000000\"));; \n*)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7366'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7366
  :user_name: koguro
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/438/
  :language: Scheme
  :time: 2008/08/26 08:24 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>車輪の再発明はしない方針で作りました。なお、*BSDでないと動かないと思います (動作はFreeBSDで確認しました。他のOSではcppflagsを変更する必要があるかも)</p>\n<p>実行例:</p>\n<pre
    class=\"literal-block\">\n% gosh human_readable.scm 123456789012345\n112T\n</pre>\n\n\t"
  :code: "(use c-wrapper)\n\n(c-load '(\"stdio.h\" \"stdint.h\" \"unistd.h\" \"libutil.h\")
    \n        :cppflags \"-Dlint\" :libs \"-lutil\")\n\n(define (main args)\n  (let1
    buf (make (c-array &lt;c-char&gt; 5))\n    (humanize_number buf (c-sizeof buf)
    (x-&gt;integer (ref args 1)) \"\"\n                     HN_AUTOSCALE HN_NOSPACE)\n
    \   (puts buf))\n  0)\n"
  :tags:
  - BSD
  - c-wrapper
  - gauche
  :references:
    :url: 
    :title: 
- :id: '7368'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7368
  :user_name: baal
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/827/
  :language: Scheme
  :time: 2008/08/26 14:13 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  SLIB の format を使うと Gauche でも小数点以下桁数を指定できますね。\r<br><br>...それと他の皆さんのコードを見て若干変更。\r<br>"
  :code: |
    (use slib)
    (require 'format)
    (define (main args)
        (letrec ((num (string-&gt;number (cadr args)))
            (base 1024) (prefix (string-&gt;list " KMGTPEZY"))
            (loop (lambda (n ls)
                (if (pair? ls)
                    (if (&lt; n base)
                        (format #f "~,1F~A" (exact-&gt;inexact n) (car ls))
                        (loop (/ n base) (cdr ls)))
                    (format #f "~:DB" num)))))
            (display (loop num prefix))
            (newline))
        0)
  :tags:
  - Gauche
  - SLIB
  :references:
    :url: 
    :title: 
- :id: '7369'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7369
  :user_name: emasaka
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/852/
  :language: Bash
  :time: 2008/08/26 14:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>pure bashで正攻法。</p>\n<p>引数→標準出力。インデントを削って108B。</p>\n\n\t"
  :code: |
    n=$1
    set 0 k M G T
    while [ $n -gt 999 -a -n "$2" ];do
      shift
      ((m=n/100%10,n=n/1000))
    done
    echo $n${m:+.$m$1}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7371'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7371
  :user_name: 匿名
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/08/26 09:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">文字列の長さが３の倍数の時だけおかしくなります。\r\n&gt;ruby  LL7.rb
    12345\r\n\"12.3k\"\r\n\r\n&gt;ruby LL7.rb 123456\r\n\".1M\"\r\n\r\n&gt;ruby LL7.rb
    1234567\r\n\"1.2M\"</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7375'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7375
  :user_name: 匿名
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2008/08/26 11:40 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>人様のコードだけど、きれいですっきりしていたもので。</p>\n\n\t"
  :code: |
    def f(n):
      for u in iter('BKMGT'):
        if n &lt; 1024:
          return "%.1f%s" % (n,u)
        n /= 1024.0

    print f(int(raw_input()))
  :tags: []
  :references:
    :url: /web/20091213020908/http://blogmag.net/blog/read/38/Print_human_readable_file_size
    :title: Print human readable file size.
- :id: '7376'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7376
  :user_name: quabbin
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/878/
  :language: Ruby
  :time: 2008/08/26 16:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">う。確かに。\r\n修正して63byte</pre>\n\t"
  :code: |
    s=$*[0];l=s.size-1;x=l%3+1;p s[0,x]+"."+s[x,1]+" kMGTPE"[l/3,1]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7377'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7377
  :user_name: sweetpotato
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/668/
  :language: Perl
  :time: 2008/08/26 16:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  CPANモジュールを使わずに引数入力で84バイト。標準入力だと shift が &lt;&gt; になってあと3バイト削れる。\n\t"
  :code: |
    $n=shift;$n/=1000,$i++while$n&gt;=1000;printf$i?"%.1f%s":"%d",$n,substr' kMGTPEZY',$i,1
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7378'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7378
  :user_name: 匿名
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/08/27 03:20 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">サンプルコードとコンパチでコードサイズの短縮を目指して\r\nいるのなら、まだ相当に違いがありますね。引用符とか、\r\n1000より小さい時の表示とか、数字の丸め方とか。\r\nスタート地点もゴール地点も各自、自由に決めていい100m競争\r\nみたいな状態だからなんでもありかも。（ちょっとなげやり）\r\n</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7379'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7379
  :user_name: こう。
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2008/08/26 23:16 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">どうも仕様として微妙なんですが、1k未満のときは小数点は書かないのがいいんですよね。\r\nあと、1024基準ではなく1000基準ですかね。\r\n\r\nってことで新しく作ってみました。133Byteかな？</pre>\n\t"
  :code: |
    main(){
        char*t="\0kMGTPEZY",b[99],*p=gets(b);
        for(while(*++p);p-b&gt;3;p-=3)t++;
        *p=*t?p[2]=*p,*p++=0,'.':0;
        printf("%s%.2s%.1s\n",b,p,t);
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7381'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7381
  :user_name: 匿名
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/08/27 01:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">LL Golf の Lingrチャットによると 1024 でも\r\n1000 でもお好きな方でとのことらしいです。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7382'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7382
  :user_name: 匿名
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2008/08/27 03:03 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">大きい数値を入れると \" kMGTPE\"[l/3,1]　のところでエラーになります。\r\n他の言語の人も単位の選択に配列を使っている人はご注意を。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7395'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7395
  :user_name: raynstard
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/127/
  :language: C
  :time: 2008/08/27 05:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">よく考えてみたらどうせ1024でわってしまう上に小数第一位までしか表示しないので\r\n倍精度で値を保持する必要ありませんでしたね。\r\n指数にしてしまうので単精度で十分と思われ。\r\n\r\n祝☆99B\r\n\r\n多少お題と違うみたいですけど、とりあえず満足です(ぁ\r\n\r\nちなみに、内部が指数表記なので\r\n30桁とかとんでもない桁数でも動きますが\r\nもちろんオーババッファフローします^^;\r\n\r\nmain(){char*t=\"\\0kMGTPE\";float
    d;for(scanf(\"%f\",&amp;d);d&gt;1023;t++)d/=1024;printf(\"%.1f%.1sB\\n\",d,t);}\r\n</pre>\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    int main(int argc, char *argc[])
    {
            char*t="\0kMGTPE";
            float d;
            for(scanf("%f",&amp;d);d&gt;1023;t++)
            {
                    d/=1024;
            }
            printf("%.1f%.1sB\n",d,t);
            return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7396'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7396
  :user_name: raynstard
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/127/
  :language: C
  :time: 2008/08/27 05:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">後続の#7358 では問題無くなっていますが\r\n僕のロジックでは%cを利用してはいけません。\r\n%cはバイナリ出力に使いので出力結果をバイナリで確認してみるとわかります。\r\n\r\necho
    '100' ./a.out | od -x\r\n\r\nあとちなみに、こう。氏のロジックだと\r\niをデータセグメントに持って行ってデフォルトの型に期待しちゃうことで僕よりも短くなります。\r\nといっても98Bなので似たようなものですけど。\r\n文字列と扱うためのキャストが;;\r\n#
    たぶん、C99です。</pre>\n\t"
  :code: |
    i;main(){float d;for(scanf("%f",&amp;d);d&gt;1023;i++)d/=1024;printf("%.1f%.1sB\n",d,&amp;("\0kMGTPE"[i]));}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7415'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7415
  :user_name: kgbu
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/847/
  :language: Erlang
  :time: 2008/08/27 09:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">実行する場合は以下のようにコマンドを実行します。\r\n数値はコマンドの引数として与えます。\r\n\r\nerlc
    ファイル名\r\nerl -noshell -s kuraidori put 数値 -s init stop\r\n\r\n実行例\r\n$ erl -noshell
    -s kuraidori put 1234567890 -s init stop\r\n1.2G\r\n$ erl -noshell -s kuraidori
    put 12345678901234 -s init stop\r\n12.3T</pre>\n\t"
  :code: |
    -module(kuraidori).
    -export([put/1]).

    put([S]) -&gt; loop(list_to_integer(atom_to_list(S))," KMGTPEZY").

    loop(S,[H|[]]) -&gt; pr(S,H);
    loop(S,[H|_]) when S &lt; 1000 -&gt;
            if
            is_integer(S) -&gt; pri(S,H);
            true -&gt; pr(S,H)
            end;
    loop(S,[_|L]) -&gt; loop(S / 1000, L).

    pr(S,K) -&gt; io:format("~.1f~s~n",[S,[K]]).
    pri(S,K) -&gt; io:format("~.10B~s~n",[S,[K]]).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7418'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7418
  :user_name: こう。
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2008/08/27 09:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">一応、floatにすればというのは気づいてたんですが、さすがに連投しすぎかなと(^^;\r\n\r\n100B切ったことですし、ガードも入れましょうか。\r\nこれで1024Y以上の場合でも動作します。\r\n\r\nぎりぎり99Byteですね。\r\n\r\nちなみに#7396のは\r\ni;main(){float
    d;for(scanf(\"%f\",&amp;d);d&gt;1023;i++)d/=1024;printf(\"%.1f%.1sB\\n\",d,\"\\0kMGTPE\"+i);}\r\nの93byteでよいはずです^^;</pre>\n\t"
  :code: |
    i;main(){float d;i=8;for(scanf("%f",&amp;d);i&amp;&amp;d&gt;1023;i--)d/=1024;printf("%.1f%c\n",d,"YZEPTGMk "[i]);}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7445'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7445
  :user_name: M.Suzuki
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/771/
  :language: Haskell
  :time: 2008/08/28 05:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">内包表現を使用して空白を詰めると73Byte</pre>\n\t"
  :code: |
    toMan n = last [(show $ n/1024^x) ++ [y] | (x,y) &lt;- zip [0,1..] " kMGTPEZY", n&gt;=1024^x]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7446'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7446
  :user_name: ckbx
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/893/
  :language: Python
  :time: 2008/08/28 01:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>ワンライナーPythonの限界に挑戦中。91bytes (本体 80bytes).</p>\n\n\t"
  :code: |
    python -c"s=raw_input();p=min(12,len(s)-1)/3*-3;print[s,s[:p]+'.'+s[p]+' kMGT'[-p/3]][p&lt;0]"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7464'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7464
  :user_name: keisuken
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/897/
  :language: Scala
  :time: 2008/08/28 10:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  サンプルと同じく1000で単位を揃えています。\r<br>いつものごとくひねりはありません。再帰呼出でループを表現しています。\r<br>あまり大きな数になると表示がおかしくなります:-)。\r<br>scala h7.scala 1234.5 で動作させます。\n\t"
  :code: |
    val b=args(0).toDouble
    val u=" kMGTPEZY"
    def p(d:Double,c:Int){if(d&lt;1000D||c==(u.length-1))printf("%.1f%c",d,u(c))else p(d/1000D,c+1)}
    p(b,0)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7477'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7477
  :user_name: silverwire
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/646/
  :language: Batchfile
  :time: 2008/08/29 00:32 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">今日もLLとの彼我兵力差は開きっぱなしですが、バッチで。\r\n\r\nバッチで扱える数値の範囲は限られている(0~2147483647)ため、表示可能な単位は
    Gまで\r\nです。また、基本的に整数しか扱えないので、小数点以下 2桁まで求める関数を書いて対\r\n応しました。(値によって若干の誤差が生じる点は目を瞑っています。)</pre>\n\t"
  :code: |
    @echo off
      setlocal enabledelayedexpansion
        set i=0
        set n=%1

        for %%u in ("" k M G) do (
          for /f "delims=." %%i in ("!n!") do set i=%%i
          if !i! lss 1024 (echo !n!%%~u &amp; exit /b)
          call :div !i! 1024 n
        )
      endlocal
    goto :EOF

    :div
      setlocal enabledelayedexpansion
        set d=
        set q=0
        set /a n=%1/%2,m=%1%%%2

        if %m% gtr 0 (
          for /l %%i in (1,1,2) do ( :: 小数点以下 2桁
            if !m! gtr 0 (
              set /a q=!m!0/%2,m=!m!0%%%2
              set d=!d!!q!
            )
          )
          set n=%n%.!d!
        )
      endlocal &amp; set %3=%n%
    goto :EOF
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7487'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7487
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/304/
  :language: Haskell
  :time: 2008/08/29 11:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    r=reverse
    main=readLn&gt;&gt;=putStrLn.f;f n|n&lt;4^5=show n|1&gt;0=(\(x,u)-&gt;let(a:b)=r$show x in r b++'.':a:[u])$last$filter((&gt;9).fst)$scanl((,).(`div`4^5).fst)(n*10,' ')"KMT"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7492'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7492
  :user_name: lunlumo
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/813/
  :language: Scala
  :time: 2008/08/29 15:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <div class=\"section\">\n<p>scalaで書く甲斐の無い感じのソースですが...。</p>\n</div>\n\t"
  :code: |
    val v=args(0);val w=(v.size-1)/3;printf("%.1f%c",v.toDouble/Math.pow(1000,w)," kMGTPEZY"(w))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7493'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7493
  :user_name: gtaka555
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/900/
  :language: OCaml
  :time: 2008/08/29 21:28 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>OCamlで。</p>\n<p>値は引数文字列, 1k = 1000, 小数点は 1 桁まで, 切捨てです。</p>\n<p>短くして
    247 bytes でした</p>\n\n\t"
  :code: |
    let foo n =
      let u = " kMGT" in
      let l = String.length n in
      let idx = if (l mod 3) == 0 then (l / 3) - 1 else (l / 3) in
        Printf.printf "%s%s %cbytes\n"
          (String.sub n 0 (l - (idx * 3)))
          (if l &gt; 3 then "." ^ (String.sub n (l-(idx*3)) 1) else "")
          u.[idx]
    ;;

    (*
    短く
    let f n = let u = " kMGT" in let l = String.length n in let x = if (l mod 3) == 0 then (l / 3) - 1 else (l / 3) in Printf.printf "%s%s %cbytes\n" (String.sub n 0 (l - (x * 3))) (if l &gt; 3 then "."^(String.sub n (l-(x*3)) 1) else "") u.[x];;
    *)

    foo "76543210";;
  :tags:
  - LLGolf
  - llfuture
  :references:
    :url: 
    :title: 
- :id: '7525'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7525
  :user_name: kh
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/654/
  :language: D
  :time: 2008/09/01 05:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>C++のを真似ようと思ったのですが、なんだか普通になってしまいました。\n入力はリテラル、出力はコンパイラメッセージで。</p>\n<p>出力:</p>\n<pre
    class=\"literal-block\">\n123\n234.5k\n345.6M\n456.7G\n567.8T\nd202.d(39): static
    assert  \"done!\"\n</pre>\n\n\t"
  :code: |
    static import std.metastrings;

    struct None { enum Symbol = "",  Base = 1;    }
    struct Kilo { enum Symbol = "k", Base = 1e+3; }
    struct Mega { enum Symbol = "M", Base = 1e+6; }
    struct Giga { enum Symbol = "G", Base = 1e+9; }
    struct Tera { enum Symbol = "T", Base = 1e12; }

    template SIPrefix(long n) {
        static if(n &lt; Kilo.Base)
            alias None SIPrefix;
        else static if(n &lt; Mega.Base)
            alias Kilo SIPrefix;
        else static if(n &lt; Giga.Base)
            alias Mega SIPrefix;
        else static if(n &lt; Tera.Base)
            alias Giga SIPrefix;
        else
            alias Tera SIPrefix;
    }

    template SIFormat(long n) {
        enum SIFormat = ToString!(n / SIPrefix!(n).Base) ~ SIPrefix!(n).Symbol;
    }

    private template ToString(real x) {
        enum ToString = ToString!(cast(long)x) ~ "." ~ ToString!(cast(long)(x * 10))[$ - 1];
    }
    private template ToString(long x) {
        enum ToString = std.metastrings.ToString!(x);
    }


    pragma(msg, SIFormat!(123));
    pragma(msg, SIFormat!(234567));
    pragma(msg, SIFormat!(345678901));
    pragma(msg, SIFormat!(456789012345));
    pragma(msg, SIFormat!(567890123456789));

    static assert(false, "done!"); // コンパイル終了
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7528'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7528
  :user_name: matarillo
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/136/
  :language: Other
  :time: 2008/09/01 01:35 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>VBA for Excel (2003)</p>\n\n\t"
  :code: |
    Sub Main()
      b = Val(InputBox(""))
      i = Int(Log(b + 0.1) / Log(1000))
      p = b / 1000 ^ i
      MsgBox p &amp; IIf(i &gt; 0, Mid("kMGTPEZY", i, 1), "")
    End Sub
  :tags:
  - vba
  :references:
    :url: 
    :title: 
- :id: '7530'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7530
  :user_name: do_aki
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/915/
  :language: Other
  :time: 2008/09/01 09:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>phpがないようなので。CLI版の標準入力からです。</p>\n<p>ヨタの上ってないのでしょうか？</p>\n\n\t"
  :code: |
    &lt;?php $l=array('','K','M','G','T','P','E','Z','Y','?');$b=$argv[1];for(;$b&gt;=1024;++$i){$b/=1024;}echo $b,$l[$i];
  :tags:
  - PHP
  :references:
    :url: 
    :title: 
- :id: '7531'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7531
  :user_name: do_aki
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/915/
  :language: PHP
  :time: 2008/09/01 04:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>あぅ。言語選択し忘れたので、再投稿 &gt;&lt;</p>\n<p>ついでにヨタまでにして、108b\n短くできないかなぁ。。。</p>\n\n\t"
  :code: |
    &lt;?php $l=array('','K','M','G','T','P','E','Z','Y');$b=$argv[1];for(;$b&gt;=1024;++$i){$b/=1024;}echo $b,$l[$i];
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7549'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7549
  :user_name: ckbx
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/893/
  :language: PHP
  :time: 2008/09/02 04:59 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <p>do_akiさんのコードをさらに圧縮してみました。75 bytes.</p>\n\n\t"
  :code: |
    &lt;?for($b=$argv[1];$b&gt;=1024;++$i)$b/=1024;echo$b,substr('KMGTPEZY',$i,!!$i);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7631'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7631
  :user_name: nobusuke_neko
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/926/
  :language: JavaScript
  :time: 2008/09/12 23:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>極めて強引に。</p>\n\n\t"
  :code: |
    (function(x){
      alert(eval(
        '[x'+'kMGTPEZY'.replace(/(.)/g,
        ',0|(x/=1024)?x.toFixed(2)+"$1":"z"')+'].sort()'
      )[0]);
    })(123456789012345)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7911'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/7911
  :user_name: leque
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/840/
  :language: Common
  :time: 2008/10/31 18:33 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    (let ((kibi 1024.0))
      (do ((b (read) (/ b kibi))
           (us '(|| k M G T) (cdr us)))
          ((&lt; b kibi) (format t "~,1F~A~%" b (car us)))))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8552'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/8552
  :user_name: だいら
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/468/
  :language: PHP
  :time: 2009/02/26 00:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>バグってますよ。</p>\n\n\t"
  :code: |
    &lt;?for($b=$argv[1];$b&gt;1023;++$i)$b/=1024;echo$b,substr(KMGTPEZY,$i-1,!!$i);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9195'
  :parent_id: '202'
  :url: http://ja.doukaku.org/comment/9195
  :user_name: egtra
  :user_url: /web/20091213020908/http://ja.doukaku.org/user/759/
  :language: C
  :time: 2009/06/18 12:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  空気を読まず、普通のコードを投稿。WindowsにそういうことをするStrFormatByteSize64という関数があるので、それを紹介したかっただけです。\n\t"
  :code: |
    #define _WIN32_IE 0x0500
    #include &lt;stdio.h&gt;
    #include &lt;stdlib.h&gt;
    #include &lt;tchar.h&gt;
    #include &lt;shlwapi.h&gt;

    int main(int argc, char *argv[])
    {
        if (argc &lt;= 1)
        {
            return 1;
        }
        else
        {
            long long value = _strtoi64(argv[1], 0, 10); // VCだとstrtollが使えない
            TCHAR buf[64];
            StrFormatByteSize64(value, buf, sizeof buf / sizeof buf[0]);
            _putts(buf);
            return 0;
        }
    }
  :tags:
  - Windows
  :references:
    :url: 
    :title: 
