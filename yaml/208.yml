---
:id: '208'
:title: 数値リストの圧縮
:comments:
- :id: '7710'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7710
  :user_name: morchin
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/78/
  :language: 
  :time: 2008/09/27 10:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  <div class=\"section\">\n<p>整列済みの number のリストがある。\r</p>\n<p>\r</p>\n<p>[1,
    3, 4, 5, 6, 12, 13, 15, 20, 25, 26, 27]\r</p>\n<p>\r</p>\n<p>このようなリストで数が3つ以上連続している部分を[1,
    2, 3] -&gt; [1, 3] のように両端のみを書くような記法を導入する。\r</p>\n<p>\r</p>\n<p>ただし2個とびや3個とびなどn個とびの場合、[1,
    3, 5, 7] -&gt; [1, 7, 2]のように[start, stop, step]のような並びにする。\r</p>\n<p>\r</p>\n<p>最初の例のリストであれば以下のようになる。\r</p>\n<p>\r</p>\n<p>[1
    [3, 6] 12, 13, [15, 25, 5], 26, 27]\r</p>\n<p>\r</p>\n<p>このようなリストに変換をするコードを書いてください。\r</p>\n</div>\r\n\t"
  :code: ''
  :tags: []
  :references:
    :url: /web/20081003063944/http://d.hatena.ne.jp/higepon/20080925/1222326246
    :title: Scheme どう書く？的
- :id: '7711'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7711
  :user_name: 匿名
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/4/
  :language: JavaScript
  :time: 2008/09/27 17:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">//[1, [3, 6], 12, 13, [15, 25, 5], 26, 27]
    &lt;=\r\n//compact_number_list([1, 3, 4, 5, 6, 12, 13, 15, 20, 25, 26, 27]) \r\n</pre>\n\t"
  :code: |
    function compact_number_list(anArray){
        var len = anArray.length;
        var result = new Array();

        for(var i=0;i&lt;len;i++){
            var seq;
            if(seq=isSequence(anArray[i], i, anArray)){
                result.push(seq);
                i += (seq[2])? (seq[1]-seq[0])/seq[2] : seq[1]-seq[0];
            } else {
                result.push(anArray[i]);
            }
        }
        return result;
    }
    function isSequence(el, index, array){
        var next=array[index+1];
        if(next == undefined){ return false; }

        var d = next - el;
        for(var i=0;array[index + i] == el + i * d;i++);

        if(i&gt;2){
            return (d==1) ? [el, array[index + i -1]] : [el, array[index + i -1], d];
        } else {
            return false;
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7712'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7712
  :user_name: sumim
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2008/09/27 18:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Squeak Smalltalk で。</p>\n\n\t"
  :code: "| in stream result |\nin := #(1 3 4 5 6 12 13 15 20 25 26 27).\nstream :=
    in readStream.\nresult := OrderedCollection with: stream next.\n[stream atEnd]
    whileFalse: [\n    | next prev step |\n    next := stream next.\n    prev := result
    last.\n    result add: ((prev isKindOf: Interval)\n        ifTrue: [next - prev
    last = (step := prev increment)\n            ifTrue: [result removeLast first
    to: next by: step] \n            ifFalse: [next]] \n        ifFalse: [stream peek
    ifNil: [next] ifNotNilDo: [:peek |\n            next - prev = (step := peek -
    next)\n                ifTrue: [result removeLast to: stream next by: step]\n
    \               ifFalse: [next]]])].\n^result asArray   \"=&gt; {1 . (3 to: 6)
    . 12 . 13 . (15 to: 25 by: 5) . 26 . 27} \"\n"
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '7713'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7713
  :user_name: minke
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/28/
  :language: Python
  :time: 2008/09/27 14:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    def fx(xs):
        r = []
        for x in xs:
            if len(x) &lt; 3:
                r.extend(x)
            else:
                d = x[1]-x[0]
                r.append([x[0],x[-1],d][0:(3 if d&gt;1 else 2)])
        return r

    def grp(xs):
        if len(xs) &lt; 3: return xs
        r = [[xs[0]]]
        for i in range(1,len(xs)-1):
            if xs[i]-xs[i-1] == xs[i+1]-xs[i]:
                r[-1].append(xs[i])
            elif len(r[-1]) &gt; 1:
                r[-1].append(xs[i])
                r.append([])
            else:
                r.append([xs[i]])
        r[-1].append(xs[-1])
        return r

    if __name__ == '__main__':
        a = [1, 3, 4, 5, 6, 12, 13, 15, 20, 25, 26, 27]
        print repr(fx(grp(a)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7714'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7714
  :user_name: nobsun
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/98/
  :language: 
  :time: 2008/09/28 06:14 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>間隔が1以外のものを考慮しようとすると、連続部分の最後か、連続部分の最初かが判定できない場合がでると思うのですがいかがですか？</p>\n<p>[1,3,6,9,14,19,20]
    → [1,[3,9,3],14,19,20]\nですか\nそれとも\n[1,3,6,9,14,19,20] → [1,3,6,[9,19,5],20]\nですか</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7715'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7715
  :user_name: turugina
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/760/
  :language: Perl
  :time: 2008/09/28 08:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>#7713 をperlに移植した感じになりました。</p>\n\n\t"
  :code: |
    use strict;
    use warnings;

    my @list = (1, 3, 4, 5, 6, 12, 13, 15, 20, 25, 26, 27);

    my $prevd = $list[0];
    my @result = ([+$list[0]]);
    for (my $idx = 1; $idx &lt; @list; ++$idx) {
        my $d = $list[$idx] - $list[$idx - 1];

        if ( $prevd &amp;&amp; $prevd != $d ) {
            push @result, [$list[$idx]];
            $prevd = 0;
        }
        else {
            push @{$result[$#result]}, $list[$idx];
            $prevd = $d;
        }
    }

    @result =
    map {
        if ( @$_ &gt; 2 ) {
            my $d = $_-&gt;[1] - $_-&gt;[0];
            [@$_[0, $#$_], ($d&gt;1)?($d):()];
        }
        else {
            @$_;
        }
    } @result;

    use Data::Dumper;
    print Dumper(\@result);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7716'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7716
  :user_name: tsuwabuki
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/479/
  :language: Haskell
  :time: 2008/09/28 13:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "main = print $ f [1, 3, 4, 5, 6, 12, 13, 15, 20, 25, 26, 27] \n\nf s@(a:b:c:xs)
    = let step = b-a in\n                 if b+step == c then fAux (a,c,step) xs\n
    \                else [a] : f (b:c:xs)\nf s = map (:[]) s\nfAux (start,stop,step)
    s@(x:xs)\n    | stop + step == x = fAux (start,x,step) xs\n    | otherwise = (if
    step == 1 then [start,stop] else [start,stop,step]) : f s\nfAux _ s = f s\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7717'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7717
  :user_name: morchin
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/78/
  :language: 
  :time: 2008/09/28 19:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>確かに[1,3,6,9,14,19,20]の場合、[1,[3,9,3],14,19,20]と[1,3,6,[9,19,5],20]の2通りあると思いますが、先にマッチした方を優先というルールが良いと思います。</p>\n<p>より圧縮できる方という観点から考えると、どちらを取ってもそれほど大きな差にはならないと思うからです。</p>\n<p>どちらも正解という考え方もありますが、一応ユニークな解があった方が分かりやすいので、「先にマッチした方が優先」というルールがベターと思われます。</p>\n\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7718'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7718
  :user_name: '[1..100]&gt;&gt;=pen'
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/304/
  :language: Haskell
  :time: 2008/09/29 08:34 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    import List

    compactNumberList xs = unfoldr f xs

    f xs@(x:y:z:_) | x+z==2*y = Just (g (y-x) $ map fst as, map fst bs) where
      (as,bs) = span (uncurry (==)) $ zip xs [x,y..]
    f (x:xs) = Just ([x], xs)
    f [] = Nothing

    g step xs = [head xs, last xs] ++ if step == 1 then [] else [step]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7719'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7719
  :user_name: こう。
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/134/
  :language: C
  :time: 2008/09/29 13:59 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">リストは文字列渡し、結果も文字列返し\r\n[]と,の表示がどっちかわからなかったので、[]が現れるときは,不要の方向で。\r\n\r\n結果：\r\n[1[3,6]12,13[15,25,5]26,27]\r\n[1[3,9,3]14,19,20]</pre>\n\t"
  :code: "#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint numlist_getnum(char
    **p){\n    int retnum;\n    \n    retnum=strtol(*p,p,10);\n    while(*(*p)=='
    ')(*p)++;\n    if(*(*p)!=']')(*p)++;\n    \n    return retnum;\n}\n\nint numlist(char
    *pin,char *pout){\n    int num1;\n    int num2;\n    int num3;\n    int delta;\n
    \   int flag=0;\n        \n    while(*pin==' ') pin++;\n    if (*pin++!='[') return
    -1;\n    \n    num1=numlist_getnum(&amp;pin);\n\n    do{\n        if(flag!=2){\n
    \           num2=numlist_getnum(&amp;pin);\n        }\n\n        delta=num2-num1;\n
    \       while(1){\n            num3=numlist_getnum(&amp;pin);\n            if(num3!=num2+delta)
    break;\n            num2=num3;\n        }\n\n        if(num2==num1+delta){\n            pout+=sprintf(pout,\"%c%d\",\"[],\"[flag],num1);\n\n
    \           num1=num2;\n            num2=num3;\n\n            flag=2;\n        }else{\n
    \           pout+=sprintf(pout,\"[%d,%d\",num1,num2);\n            if(delta!=1){\n
    \               pout+=sprintf(pout,\",%d\",delta);\n            }\n            num1=num3;\n
    \           \n            flag=1;\n        }\n    }while(num1);\n    \n    sprintf(pout,\"]\");\n
    \   \n    return 0;\n}\n\nint main(){\n    char str[256];\n    numlist(\"[1, 3,
    4, 5, 6, 12, 13, 15, 20, 25, 26, 27]\",str);\n    printf(\"%s\\n\",str);\n    numlist(\"[1,3,6,9,14,19,20]\",str);\n
    \   printf(\"%s\\n\",str);\n    return 0;\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7721'
  :parent_id: '208'
  :url: http://ja.doukaku.org/comment/7721
  :user_name: ocean
  :user_url: /web/20081003063944/http://ja.doukaku.org/user/177/
  :language: Python
  :time: 2008/09/29 15:17 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>あっているといいですが。</p>\n\n\t"
  :code: |
    def compact_number_list(src):
        res = []
        beg = 0
        while beg &lt; len(src):
            end = beg + 2
            while end &lt; len(src) and src[end] - src[end - 1] == src[end - 1] - src[end - 2]:
                end += 1
            if end - beg == 2:
                res.append(src[beg])
                beg += 1
            else:
                diff = src[beg + 1] - src[beg]
                if diff == 1:
                    res.append([src[beg], src[end - 1]])
                else:
                    res.append([src[beg], src[end - 1], diff])
                beg = end
        return res

    print compact_number_list([1, 3, 4, 5, 6, 12, 13, 15, 20, 25, 26, 27])
  :tags: []
  :references:
    :url: 
    :title: 
