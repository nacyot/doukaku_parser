---
:id: '20'
:title: 逆順になるあみだくじ
:comments:
- :id: '3376'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/3376
  :user_name: にしお
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/13 10:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  nを2以上の整数とします。\r\n上と下で順番が完全に逆転するような縦線がn本のあみだくじを書くプログラムを作ってください。\r\n<p>\r\nたとえばnが3の場合は下のように出力してください。\r\n</p>\n<pre>\r\n0
    1 2\r\n|_| |\r\n| |_|\r\n|_| |\r\n| | |\r\n2 1 0\r\n</pre>\r\nnはプログラムを書き換えずに指定できるようにしてください。\r\n<p>\r\nこのお題はoceanさんの投稿を元に作成しました。ご投稿ありがとうございます。\r\n\t</p>"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '734'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/734
  :user_name: にしお
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/13 10:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  この問題はかなりおもしろかったです。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '739'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/739
  :user_name: rucker
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/130/
  :language: PHP
  :time: 2007/07/13 10:57 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  とりあえず無理矢理版\n\t"
  :code: "&lt;?php\n$n=max(2,(int)$argv[1]);\n\n$h=$n*2-2;\n\nfor($i=0;$i&lt;$n;++$i)\n\techo
    \" $i\";\necho \"\\n\";\n\nfor($i=0;$i&lt;$h;++$i)\n{\techo \" |\";\n\tfor($j=1;$j&lt;$n;++$j)\n\t{\t$f=abs($i-($n-2))-($n-$j);\n\t\techo
    ($f&lt;0 &amp;&amp; ($f&amp;1))?\"_|\":\" |\";\n\t}\n\techo \"\\n\";\n}\nfor($i=$n;--$i&gt;=0;)\n\techo
    \" $i\";\necho \"\\n\";\n\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '740'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/740
  :user_name: ココサブ
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/24/
  :language: C
  :time: 2007/07/13 11:01 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  nが2桁以上でも動くように頑張りました。\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    #include &lt;stdlib.h&gt;

    int main(int argc, char *argv[])
    {
        int  n;       /* あみだの数 */
        int  keta;    /* 数字の桁数 */
        int  *amida;  /* あみだ */
        int  i, j, k; /* ループカウンタ */
        int  tmp;     /* スワップ用 */
        char *under;  /* 移動線 */

        /* nを決定する */
        if (argc &lt; 2) {
            fprintf(stderr, "usage: %s n\n", argv[0]);
            return 1;
        }
        n = atoi(argv[1]);
        if (n &lt; 2) {
            n = 2;
        }
        keta = 1;
        for (tmp = n+1; tmp &gt;= 10; tmp /= 10) {
            keta++;
        }

        /* あみだの初期化、一番上の数字の表示 */
        amida = malloc(n * sizeof(*amida));
        for (i = 0; i &lt; n; i++) {
            amida[i] = i;
        }
        under = malloc(keta * sizeof(*under));
        for (i = 0; i &lt; keta; i++) {
            under[i] = '_';
        }
        for (i = 0; i &lt; n; i++) {
            printf("%d%*c", amida[i], keta, ' ');
        }
        printf("\n");

        /* バブルソート */
        for (i = 0; i &lt; n-1; i++) {
            for (j = 0; j &lt; n-1; j++) {
                if (amida[j] &lt; amida[j+1]) {
                    /* 交換があるときに交換の表示をする */
                    tmp        = amida[j];
                    amida[j]   = amida[j+1];
                    amida[j+1] = tmp;
                    for (k = 0; k &lt; n; k++) {
                        if (k == j) {
                            printf("|%s", under);
                        }
                        else {
                            printf("|%*c", keta, ' ');
                        }
                    }
                    printf("\n");
                }
            }
        }

        /* 最後の線と数字の表示 */
        for (i = 0; i &lt; n; i++) {
            printf("|%*c", keta, ' ');
        }
        printf("\n");
        for (i = 0; i &lt; n; i++) {
            printf("%-*d ", keta, amida[i]);
        }
        printf("\n");

        free(amida);
        free(under);
        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '741'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/741
  :user_name: anekos
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/170/
  :language: Ruby
  :time: 2007/07/13 11:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "def amida (n)\n\tw = Math.log10(n - 1).to_i + 1\n\tputs (0...n).to_a.map
    {|it| it.to_s.ljust(w + 1) } .join\n\t((n - 1) * 2).times do\n\t\t|lv|\n\t\tr
    = (n - 2) - (lv - (n - 2)).abs\n\t\t(0...n).to_a.map do \n\t\t\t|t|\n\t\t\ts =
    (t &lt;= r and lv.odd? == t.odd?) ? '_' : ' '\n\t\t\tprint \"|#{s * w}\"\n\t\tend\n\t\tputs\n\tend\n\tputs
    (0...n).to_a.map {|it| it.to_s.ljust(w + 1) } .join\nend\n\n\namida(ARGV.first.to_i)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '742'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/742
  :user_name: anekos
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/170/
  :language: Ruby
  :time: 2007/07/13 11:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  amidaの最後(14行目)が反対だ！\n\t"
  :code: |
    puts (0...n).to_a.reverse.map {|it| it.to_s.ljust(w + 1) } .join
  :tags:
  - 修正
  :references:
    :url: 
    :title: 
- :id: '743'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/743
  :user_name: kawauchi
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/14/
  :language: Ruby
  :time: 2007/07/13 11:15 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    def dan(n, d)
      ary = []
      0.upto(d - 2) {|i|
        s = "| " * n
        s[-1] = ""
        s[(d - i) * 2 - 3] = "_"
        ary &lt;&lt; s.dup
      }
      ary
    end

    n = ARGV[0].to_i
    a = []
    s = ""
    1.upto(n) {|m|
      s &lt;&lt; "#{m} "
    }
    a &lt;&lt; s
    1.upto(n) {|m|
      a &lt;&lt; dan(n, m)
    }
    s = "| " * n
    s[-1] = ""
    a &lt;&lt; s
    s = ""
    n.downto(1) {|m|
      s &lt;&lt; "#{m} "
    }
    a &lt;&lt; s
    a.each{|line|
      puts line
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '745'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/745
  :user_name: anekos
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/170/
  :language: Ruby
  :time: 2007/07/13 11:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  odd? 追加したのを忘れていました。\r\nすみません。すみません。\r\n(一番はじめにいれてやれば動きます)\n\t"
  :code: "class Fixnum\n\tdef odd?\n\t\tself % 2 == 1\n\tend\nend\n"
  :tags:
  - 修正
  :references:
    :url: 
    :title: 
- :id: '746'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/746
  :user_name: rucker
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/130/
  :language: PHP
  :time: 2007/07/13 11:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  もうちょっとちゃんと考えた版\n\t"
  :code: "&lt;?php\n$n=max(2,(int)$argv[1]);\n\n$ladder=array();\n\nfor($i=0;$i&lt;$n;++$i)\n{\t$ladder[$i]=$i;\n\tprintf(\"%2d\",$i);\n}\necho
    \"\\n\";\n\ndo{\t$c=0;\n\techo \" |\";\n\tfor($j=0;$j&lt;$n-1;++$j)\n\t{\tif($ladder[$j]&lt;$ladder[$j+1])\n\t\t{\t$t=$ladder[$j];\n\t\t\t$ladder[$j]=$ladder[$j+1];\n\t\t\t$ladder[$j+1]=$t;\n\t\t\techo
    \"_|\";\n\t\t\tif(++$j&lt;$n-1)\n\t\t\t\techo \" |\";\n\t\t\t++$c;\n\t\t}\n\t\telse\n\t\t\techo
    \" |\";\n\t}\n\techo \"\\n\";\n}while($c);\n\nfor($i=0;$i&lt;$n;++$i)\n\tprintf(\"%2d\",$ladder[$i]);\necho
    \"\\n\";\n\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '748'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/748
  :user_name: tetsuro6502
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/213/
  :language: JavaScript
  :time: 2007/07/13 11:37 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    function amida(n) {
        var $ = [ '|', '_', '|', ' ', '|' ];
        var result = numbers() + '\n';

        for (var i = 0; i &lt; n; i++) {
            for (var j = 0, w = n * 2 - 1; j &lt; w; j++) {
                result += $[j % 4];
            }
            $.reverse();
            result += '\n';
        }
        for (var i = 0; i &lt; n; i++) {
          result += '| ';
        }
        result += '\n';
        return result + numbers().split('').reverse().join('') + '\n';

        function numbers() {
            for (var i = 0, line = ''; i &lt; n; i++) line += i + ' ';
            return line.substring(0, line.length - 1);
        }
    }
    amida(5);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '749'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/749
  :user_name: tetsuro6502
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/213/
  :language: 
  :time: 2007/07/13 11:49 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  n &gt; 11 だと表示が崩れるな…\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '750'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/750
  :user_name: rucker
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/130/
  :language: 
  :time: 2007/07/13 11:49 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">…とかいってココサブさんの#740のパクリですすみません。\r\nひねりは加えてみた。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '753'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/753
  :user_name: tosik
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/216/
  :language: JavaScript
  :time: 2007/07/13 12:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">2桁の場合は無視してます。</pre>\n\t"
  :code: |
    Number.prototype.amida = function()
    {
        var n = this;
        var s = ["|","_","|"," "];
        var tmp = "";

        for (var i=0; i&lt;n; i++)
            tmp += (i+1).toString() + " ";
        tmp += "\n";

        for (var j=0; j&lt;n; j++)
        {
            for (var i=0; i&lt;n*2-1; i++)
            {
                tmp += s[(i+j*2)%4];
            }
            tmp += "\n";
        }

        for (var i=0; i&lt;n*2-1; i++)
            tmp += s[(i%2)+2];
        tmp += "\n";

        for (var i=n; i&gt;0; i--)
            tmp += (i).toString() + " ";

        return tmp;
    }

    var n = 9;
    alert(n.amida());
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '754'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/754
  :user_name: ところてん
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/166/
  :language: 
  :time: 2007/07/13 12:16 GMT
  :vote_count: '3'
  :vote_score: '3'
  :body: "\n\t  <pre class=\"compact\">バブルソートの可視化の問題ですね。\r\nこれって、縦方向の量って圧縮できるんでしょうか。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '755'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/755
  :user_name: にしお
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/1/
  :language: Python
  :time: 2007/07/13 12:27 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  ばれちゃいましたか。\r\nわかる人はわかったようですね。\r\n最初は「縦方向がもっとも圧縮されたものを表示してください」という\r\nお題にしようかと思っていたのですけども、\r\nあえて書かないことにしたのでした。\r\n\r\nネタバレついでに僕が試しに書いたコードのうち読みにくい方を投稿～。\n\t"
  :code: |
    (lambda w:(lambda n,f:[w("%s "%i)for i in range(n)]and w("\n")or[f((i+x)%2 for x in range(n-1))for i in range(n)]and f([0]*(n-1))or[w("%s "%i)for i in reversed(range(n))]and w("\n"))(input("n=? &gt;&gt;&gt;"),lambda b:w("|"+"|".join(" _"[c]for c in b)+"|"+"\n")))(__import__("sys").stdout.write)
  :tags:
  - Python2.5
  :references:
    :url: 
    :title: 
- :id: '756'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/756
  :user_name: にしお
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/13 12:30 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">なるほど、上下の数字の部分がずれるわけですね。\r\nそこは今回のお題の肝ではないので、まぁいいのではないでしょうか。</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '757'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/757
  :user_name: shuyo
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/84/
  :language: Ruby
  :time: 2007/07/13 12:55 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">おもしろい。というわけで勝手に拡張して、\r\n「任意の列に対して、それをソートした結果になるあみだくじを生成」。\r\n３項演算子使えばいいところに使ってないのは
    \r\nZaurus で組んだから(ruby1.8.0 しか入れてなかったー)\r\n\r\n&gt; amida 10\r\n10 9  8  7  6
    \ 5  4  3  2  1\r\n|__|  |__|  |__|  |__|  |__|\r\n  (略)\r\n|  |__|  |__|  |__|
    \ |__|  |\r\n1  2  3  4  5  6  7  8  9  10\r\n\r\n&gt; amidalist [\"Tiger\", \"Zebra\",
    \"Cat\", \"Fox\", \"Dog\"]\r\nTiger Zebra Cat   Fox   Dog\r\n|     |_____|     |_____|\r\n|_____|
    \    |_____|     |\r\n|     |_____|     |_____|\r\n|     |     |_____|     |\r\nCat
    \  Dog   Fox   Tiger Zebra\r\n</pre>\n\t"
  :code: |
    def output(list, space)
      puts list.inject(""){|buf,x|buf+="#{x}     "[0,space+1]}
    end
    def amidalist(list)
      space = list.inject(0){|m,x|n="#{x}".length;if m&gt;n then m else n end}
      output list, space
      while true
        flag = true, idx = 0, buf = "|"
        while idx &lt; list.length - 1
          if list[idx] &gt; list[idx+1]
            list[idx], list[idx+1] = list[idx+1], list[idx]
            buf += "_"*space + "|"
            idx += 2
            buf += " "*space + "|" if idx &lt; list.length
            flag = false
          else
            buf += " "*space + "|"
            idx += 1
          end
        end
        break if flag
        puts buf
      end
      output list, space
    end
    def amida(n)
      amidalist (1..n).to_a.reverse
    end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '761'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/761
  :user_name: ココサブ
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/24/
  :language: C
  :time: 2007/07/13 14:23 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">縦方向にもっとも圧縮されたものに挑戦。\r\nもっとも圧縮でn回になりそうですね。</pre>\n\t"
  :code: |
    #include &lt;stdio.h&gt;
    #include &lt;stdlib.h&gt;
    #include &lt;string.h&gt;

    int main(int argc, char *argv[])
    {
        int  n;      /* あみだの数 */
        int  keta;   /* 数字の桁数 */
        int  i, j;   /* ループカウンタ */
        char *under; /* 移動線 */

        /* nを決定する */
        if (argc &lt; 2) {
            fprintf(stderr, "usage: %s n\n", argv[0]);
            return 1;
        }
        n = atoi(argv[1]);
        if (n &lt; 2) {
            n = 2;
        }
        keta = 1;
        for (i = n+1; i &gt;= 10; i /= 10) {
            keta++;
        }

        /* 初期化、一番上の数字の表示 */
        under = malloc((keta+1) * sizeof(*under));
        memset(under, '_', keta);
        under[keta] = '\0';
        for (i = 0; i &lt; n; i++) {
            printf("%d%*c", i, keta, ' ');
        }
        printf("\n");

        /* あみだ作成 */
        for (i = 0; i &lt; n; i++) {
            if ((i % 2) == 0) {
                j = 0;
            }
            else {
                j = 1;
                printf("|%*c", keta, ' ');
            }
            /* 実際に移動線がでるとこ */
            for (; j+1 &lt; n; j+=2) {
                printf("|%s|%*c", under, keta, ' ');
            }
            if (j+1 &lt;= n) {
                printf("|%*c", keta, ' ');
            }
            printf("\n");
        }

        /* 最後の縦線と数字の表示 */
        for (i = 0; i &lt; n; i++) {
            printf("|%*c", keta, ' ');
        }
        printf("\n");
        for (i = 0; i &lt; n; i++) {
            printf("%-*d ", keta, n-i-1);
        }
        printf("\n");

        free(under);
        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '762'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/762
  :user_name: rubikitch
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/105/
  :language: Common
  :time: 2007/07/13 14:47 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">rubyist率高いね\r\n\r\nITER&gt; (amida 10)\r\n|
    | | | | | | | | | \r\n|-| | | | | | | | | \r\n| |-| | | | | | | | \r\n|-| |-|
    | | | | | | \r\n| |-| |-| | | | | | \r\n|-| |-| |-| | | | | \r\n| |-| |-| |-|
    | | | \r\n|-| |-| |-| |-| | | \r\n| |-| |-| |-| |-| | \r\n|-| |-| |-| |-| |-|
    \r\n| |-| |-| |-| |-| | \r\n|-| |-| |-| |-| | | \r\n| |-| |-| |-| | | | \r\n|-|
    |-| |-| | | | | \r\n| |-| |-| | | | | | \r\n|-| |-| | | | | | | \r\n| |-| | |
    | | | | | \r\n|-| | | | | | | | | \r\n| | | | | | | | | | \r\n</pre>\n\t"
  :code: |
    (require :iterate)
    (in-package :iter)

    (defun %bars (n)
      "横棒の座標のリストを求める"
      (labels ((limit (i j) (&lt;= (+ i j) (* 2 (1- n)))))
        (iter outer
              (for i from 1 to (* 2 (1- n)))
              (appending
               (if (oddp i)
                   (iter (for j from 1 to i by 2)
                         (when (limit i j) (collect (cons i j))))
                   (iter (for j from 2 to i by 2)
                         (when (limit i j) (collect (cons i j)))))))))

    (defun %draw (n bars)
      "横棒の座標リストからアミダを描く"
      (labels ((empty ()
                 (iter (for i from 1 to n) (format t "| "))
                 (terpri)))
        (empty)
        (iter (for i from 1 to (* 2 (1- n)))
              (iter (for j from 1 to n)
                    (format t "|~a" (if (member (cons i j) bars :test #'equal)
                                        "-" " ")))
              (terpri))))

    (defun amida (n)
      (%draw n (%bars n)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '763'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/763
  :user_name: cats
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/172/
  :language: C
  :time: 2007/07/13 14:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    using System;
    class Program
    {
      static void Main()
      {
        int n = 6;
        for (int i = 0; i &lt; n; ++i) Console.Write("{0} ", i);
        Console.WriteLine();
        for (int i = 1; i &lt; 2 * n - 1; ++i)
        {
          int k = i &lt; n ? i + 1 : 2 * n - 1 - i;
          for (int j = 1; j &lt; n; ++j)
            Console.Write("|{0}", j &lt;= k &amp;&amp; (k - j) % 2 == 1 ? "_" : " ");
          Console.WriteLine("|");
        }
        for (int i = n - 1; i &gt;= 0; --i) Console.Write("{0} ", i);
        Console.WriteLine();
      }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '764'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/764
  :user_name: rubikitch
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/105/
  :language: Emacs
  :time: 2007/07/13 14:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">M-x amida</pre>\n\t"
  :code: |
    (require 'cl)

    (defun %bars (n)
      "横棒の座標のリストを求める"
      (labels ((limit (i j) (&lt;= (+ i j) (* 2 (1- n)))))
        (loop for i from 1 to (* 2 (1- n)) appending
              (if (oddp i)
                  (loop for j from 1 to i by 2
                        when (limit i j)
                        collect (cons i j))
                (loop for j from 2 to i by 2
                      when (limit i j) collect (cons i j))))))
    ;; (%bars 5)
    (defun %draw (n bars)
      "横棒の座標リストからアミダを描く"
      (with-output-to-temp-buffer "*amida*"
        (labels ((empty ()
                        (loop for i from 1 to n do (princ "| "))
                        (terpri)))
          (empty)
          (loop for i from 1 to (* 2 (1- n)) do
                (loop for j from 1 to n do
                      (princ "|")
                      (princ (if (member (cons i j) bars) "-" " ")))
                (terpri)))))

    (defun amida (n)
      (interactive "sN: ")
      (setq n (string-to-number n))
      (%draw n (%bars n)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '765'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/765
  :user_name: sumim
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/07/13 15:00 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Squeak Smalltalk で n が 10 以下で(^_^;)。あと「n はプログラムを書き換えずに指定できるように」が「n
    を引数に取る関数として and/or 起動時オプションとして指定できるように書け」という意味なら、そのようにはしていないのでごめんなさい。（GUI な Squeak
    Smalltalk 環境ではそうするメリットが少ない←関数 and/or そもそもできない←起動時オプション　なので…）</pre>\n\t"
  :code: |
    | n labels numOfVBarsPair m last |
    n := 10.
    World findATranscript: nil.
    numOfVBarsPair := {m := (n alignedTo: 2) / 2. m - (n \\ 2)}.
    Transcript cr; show: (labels := String streamContents: [:ss |
       (1 to: n) do: [:i | ss print: i - 1] separatedBy: [ss space]]).
    1 to: (last := numOfVBarsPair first * 2 + (n - 1 \\ 2)) do: [:row |
       Transcript cr; show: '|'.
       1 to: n - 1 do: [:i |
          | vBarOrSp |
          vBarOrSp := row &lt; last ifTrue: [' _' atWrap: i + row] ifFalse: [$ ].
          Transcript nextPut: vBarOrSp; nextPut: $|]].
    Transcript cr; show: labels reversed
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '766'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/766
  :user_name: ether
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/96/
  :language: OCaml
  :time: 2007/07/13 15:02 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  難しかったです。結果として「任意の列に対して、それをソートした結果になるあみだくじを生成」版になってると思います。\n\t"
  :code: |
    let rec make_ladder = function
    | [] -&gt; print_newline (); []
    | [x] -&gt; print_endline "| "; [x]
    | x::y::xs when x &lt; y -&gt; print_string "|_| "; (y::x::make_ladder xs)
    | x::y::xs -&gt; print_string "| "; (x::make_ladder (y::xs))

    let rec amida l =
      let rec complete = function
      | [x] -&gt; true
      | x::y::xs -&gt; x &gt; y &amp;&amp; complete (y::xs)
      in
      if (complete l) then make_ladder l
      else (amida (make_ladder l))
    ;;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '767'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/767
  :user_name: sumim
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/88/
  :language: 
  :time: 2007/07/13 15:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">すみませんっ！\r\n\r\n    * 無加工(text)\r\n    * 整形済み(pre)\r\n\r\nの意味が分かっていませんでした。orz\r\n\r\n可能でしたら上のコメントの修正お願いします。m(__)m</pre>\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '768'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/768
  :user_name: rubikitch
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/105/
  :language: D
  :time: 2007/07/13 15:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  んー、D言語にはネスト関数があるから書き易い～\n\t"
  :code: "module doukaku;\nprivate import std.stdio;\nstruct Bar {\n    int i;\n    int
    j;\n}\n\nBar[] bars(int n) {\n    Bar[] bars;\n    int limit(int i, int j) { return
    (i+j) &lt;= 2*(n-1); }\n    int i,j;\n    void append(int i, int j) {\n        if
    (limit(i, j)) {\n                Bar bar;\n                bar.i = i;\n                bar.j
    = j;\n                bars ~= bar;\n            }\n    }\n    for (i=1; i&lt;=2*(n-1);
    i++) {\n        if (i%2 == 1) {\n            for (j=1; j&lt;=i; j+=2)  append(i,
    j); \n        } else {\n            for (j=2; j&lt;=i; j+=2)  append(i, j);\n
    \       }\n    }\n    return bars;\n}\n\nint member(int i, int j, Bar[] bars)
    {\n    foreach (bar; bars) {\n        if (i==bar.i &amp;&amp; j==bar.j) return
    1;\n    }\n    return 0;\n}\n\nvoid draw(int n, Bar[] bars) {\n    int i,j;\n
    \   void empty() {\n        for (int i=1; i&lt;=n; i++) writef(\"| \");\n        writefln(\"\");\n
    \   }\n    empty();\n    for (i=1; i&lt;=2*(n-1); i++) {\n        for (j=1; j&lt;=n;
    j++) {\n            writef(\"|\");\n            if (member(i, j, bars))\n                writef(\"-\");\n
    \           else\n                writef(\" \");\n        }\n        writefln(\"\");\n
    \   }\n}\n\nvoid amida(int n) {\n    draw(n, bars(n));\n}\n\nvoid main() {\n    amida(10);\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '771'
  :parent_id: '20'
  :url: http://ja.doukaku.org/comment/771
  :user_name: rubikitch
  :user_url: /web/20090109042503/http://ja.doukaku.org/user/105/
  :language: Scheme
  :time: 2007/07/13 15:45 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  再帰つらい…orz\n\t"
  :code: "(define (bars n)\n  (define (limit i j) (&lt;= (+ i j) (* 2 (- n 1))))\n
    \ (define (oddp n) (= (remainder n 2) 1))\n  (define (append0 i j result)\n    (if
    (limit i j)\n      (cons (cons i j) result)\n      result))\n        \n  (define
    (rec i j result)\n    (cond ((&lt;= i (* 2 (- n 1)))\n           (if (&lt;= j
    i)\n             (rec i (+ j 2) (append0 i j result))\n             (rec (+ i
    1) (if (oddp (+ i 1)) 1 2) result)))\n          (else\n           result)))\n
    \ (rec 1 1 ()))\n\n(define (draw n bars)\n  (define (empty i)\n    (cond ((&lt;=
    i n)\n           (display \"| \")\n           (empty (+ i 1)))\n          (else\n
    \          (display \"\\n\"))))\n  (define (rec i j)\n    (cond ((&lt;= j n)\n
    \          (cond ((&lt;= i (* 2 (- n 1)))\n                  (display \"|\")\n
    \                 (display (if (member (cons i j) bars) \"-\" \" \"))\n                  (rec
    i\n\n\n\n\n<!--\n     FILE ARCHIVED ON 4:25:03 Jan 9, 2009 AND RETRIEVED FROM
    THE\n     INTERNET ARCHIVE ON 13:58:15 Nov 16, 2013.\n     JAVASCRIPT APPENDED
    BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.\n\n     ALL OTHER CONTENT MAY
    ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.\n     SECTION 108(a)(3)).\n-->"
  :tags: []
  :references:
    :url: 
    :title: 
