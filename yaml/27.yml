---
:id: '27'
:title: リストを逆順に表示
:comments:
- :id: '3383'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/3383
  :user_name: にしお
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1/
  :language: 
  :time: 2007/07/21 02:31 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\r\n\t  簡単な問題です。\r\nリスト状のものを逆順に表示するプログラムを書いてください。\r\nHaskellで表現するなら、\r\n<pre>\r\ngiven_list
    = [1, 2, 3, 4, 5]\r\nmain = ?????\r\n</pre>\r\n<pre>\r\n5\r\n4\r\n3\r\n2\r\n1\r\n</pre>\r\nという感じになります。\r\n<p>\r\n出題の意図は「副作用のあるループをどう表現するか」という所にあるのですが、\r\nあまりに簡単にかけすぎて何が問題なのかもわからない言語が多いかと思うので\r\n「リストを逆順にする処理が簡単にかけるかどうか」と抱き合わせにしました。\r\n\t</p>"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1202'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1202
  :user_name: nori
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/59/
  :language: Python
  :time: 2007/07/21 02:51 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  芸無し・・・。\n\t"
  :code: |
    """
    &gt;&gt;&gt; rprint([1, 2, 3, 4, 5])
    5
    4
    3
    2
    1
    """

    def rprint(xs):
      ys = list(xs)
      ys.reverse()
      for y in ys:
        print y

    import doctest
    doctest.testmod()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1203'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1203
  :user_name: ocean
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/177/
  :language: C
  :time: 2007/07/21 02:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  普通に。\n\t"
  :code: |
    #include &lt;iostream&gt;
    #include &lt;algorithm&gt;
    #include &lt;iterator&gt;
    #include &lt;vector&gt;

    int main()
    {
        const int a[] = { 1, 2, 3, 4, 5 };

        std::vector&lt;int&gt; v(a, a + sizeof(a) / sizeof(*a));

        std::copy(v.rbegin(), v.rend(), std::ostream_iterator&lt;int&gt;(std::cout, "\n"));
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1204'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1204
  :user_name: nori
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/59/
  :language: Python
  :time: 2007/07/21 02:56 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  再帰・・・。\n\t"
  :code: |
    """
    &gt;&gt;&gt; rprint([1, 2, 3, 4, 5])
    5
    4
    3
    2
    1
    """

    def rprint(xs):
      if xs:
        print xs[-1]
        rprint(xs[:-1])

    import doctest
    doctest.testmod()
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1205'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1205
  :user_name: ocean
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/177/
  :language: C
  :time: 2007/07/21 03:00 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  ついでに配列のまま逆順出力。\n\t"
  :code: |
    #include &lt;iostream&gt;
    #include &lt;algorithm&gt;
    #include &lt;iterator&gt;

    int main()
    {
        const int a[] = { 1, 2, 3, 4, 5 };

        std::reverse_copy(a, a + sizeof(a) / sizeof(*a), std::ostream_iterator&lt;int&gt;(std::cout, "\n"));
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1207'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1207
  :user_name: authorNari
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/199/
  :language: Ruby
  :time: 2007/07/21 03:01 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">簡単すぎてごめんなさい。</pre>\n\t"
  :code: |
    given_list = [1, 2, 3, 4, 5]
    given_list.reverse!.each{ |i| puts i}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1208'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1208
  :user_name: kkobayashi
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2007/07/21 03:04 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  Rは一応関数型言語らしいのですが、副作用とか考えたことない・・・\n\t"
  :code: |
    given.list &lt;- c(1, 2, 3, 4, 5)
    cat(rev(given.list), sep="\n")
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1210'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1210
  :user_name: kkobayashi
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/232/
  :language: R
  :time: 2007/07/21 03:11 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  すみません、出題意図にやや沿った形で書き直します。\n\t"
  :code: |
    dummy &lt;- sapply(rev(given.list), print)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1211'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1211
  :user_name: ether
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/96/
  :language: OCaml
  :time: 2007/07/21 03:18 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  多相的にならないのがいまいちなのかなあと。\n\t"
  :code: |
    let given_list = [1; 2; 3; 4; 5];;
    List.fold_right (fun x -&gt; print_int x; print_newline) given_list ();;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1212'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1212
  :user_name: shiro
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/41/
  :language: Scheme
  :time: 2007/07/21 03:22 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  reverseせずに、再帰で。\n\t"
  :code: |
    (fold-right (lambda (x c) (print x)) #f '(1 2 3 4 5))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '1213'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1213
  :user_name: katsu
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/117/
  :language: Prolog
  :time: 2007/07/21 03:28 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  たまには、早めに。多分、題意に沿って。\n\t"
  :code: |
    revp([]).
    revp([X|Xs]):-revp(Xs),writeln(X).
    :-revp([1,2,3,4,5]),halt.
  :tags:
  - SWI-prolog
  :references:
    :url: 
    :title: 
- :id: '1215'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1215
  :user_name: にしお
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1/
  :language: Python
  :time: 2007/07/21 03:52 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">破壊的にひっくり返すreverseの他にも\r\n組み込み関数のreversedがありますよ。</pre>\n\t"
  :code: |
    given_list = [1, 2, 3, 4, 5]
    for x in reversed(given_list):
        print x
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1217'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1217
  :user_name: rubikitch
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/105/
  :language: Common
  :time: 2007/07/21 03:57 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  そのまんまreverseがあるｗ\n\t"
  :code: |
    (let ((given-list '(1 2 3 4 5)))
      (loop for x in (reverse given-list) do (print x)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1218'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1218
  :user_name: ココサブ
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/24/
  :language: C
  :time: 2007/07/21 03:59 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  普通に\n\t"
  :code: |
    #include &lt;stdio.h&gt;

    int main()
    {
        int i;
        int given_list[] = {1, 2, 3, 4, 5};

        for (i = sizeof(given_list)/sizeof(given_list[0])-1; i &gt;= 0; i--) {
            printf("%d\n", given_list[i]);
        }

        return 0;
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1219'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1219
  :user_name: higeorange
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/194/
  :language: JavaScript
  :time: 2007/07/21 04:01 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: "var given_list = [1, 2, 3, 4, 5]; \nwhile(given_list.length &gt; 0) {\n
    \   print(given_list.pop())\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1220'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1220
  :user_name: rubikitch
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/105/
  :language: Lua
  :time: 2007/07/21 04:04 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  \n\t"
  :code: |
    function print_reverse(given_list)
      for i = table.getn(given_list), 1, -1 do
        print(given_list[i])
      end
    end

    print_reverse({1,2,3,4,5})
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1221'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1221
  :user_name: rubikitch
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/105/
  :language: Emacs
  :time: 2007/07/21 04:06 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    (require 'cl)
    (let ((given-list '(1 2 3 4 5)))
      (loop for x in (reverse given-list) do (print x)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1222'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1222
  :user_name: JDO
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/257/
  :language: Prolog
  :time: 2007/07/21 04:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  Prolog です。芸無し。短くもない。\n\t"
  :code: |
    printReverse([],Ts,Ts).
    printReverse([Item|Xs],Ts,Ys) :- printReverse(Xs,[Item|Ts],Ys), print(Item).
    printReverse(Xs) :- printReverse(Xs,[],Ys).

    ?- printReverse([1,2,3,4,5]).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1223'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1223
  :user_name: JDO
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/257/
  :language: Prolog
  :time: 2007/07/21 04:13 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  Prolog です。無駄なコードを省いて少し短くしました。\n\t"
  :code: |
    printReverse([]).
    printReverse([Item|Xs]) :- printReverse(Xs), print(Item).

    ?- printReverse([1,2,3,4,5]).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1224'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1224
  :user_name: JDO
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/257/
  :language: 
  :time: 2007/07/21 04:20 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  あらま。katsu さんが既に投稿されてたんですねぇ。\n\t"
  :code: ''
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1225'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1225
  :user_name: fkmn
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/190/
  :language: Perl
  :time: 2007/07/21 04:30 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  一応、要素の出力ごとに改行が入るように\n\t"
  :code: |
    $\ = "\n";
    my @given_list = (1, 2, 3, 4, 5);
    print for reverse(@given_list);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1226'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1226
  :user_name: beatak
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/196/
  :language: JavaScript
  :time: 2007/07/21 04:33 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  題意に沿ってるかどうかわかりませんが、Javascript にも Array.reverse() があります。\n\t"
  :code: |
    var reverse_print = function (arr)
    {
      arr.reverse();
      for (var i = 0; i &lt; arr.length; ++i)
      {
        alert(arr[i]);
      }
    }
    reverse_print([1,2,3,4,5]);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1227'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1227
  :user_name: fkmn
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/190/
  :language: Perl
  :time: 2007/07/21 04:54 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  もしくは、副作用のあるループって、こういうことでしょうか？\n\t"
  :code: |
    $\ = "\n";
    my @given_list = ( 1, 2, 3, 4, 5 );
    print pop(@given_list) while (@given_list);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1228'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1228
  :user_name: yuin
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/82/
  :language: Scala
  :time: 2007/07/21 05:09 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">とりあえずreverseあります。reverseMapもあります。</pre>\n\t"
  :code: |
    List(1,2,3,4,5).reverseMap(println(_))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1229'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1229
  :user_name: yuin
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/82/
  :language: Scala
  :time: 2007/07/21 05:13 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">reverseMapを自前で。</pre>\n\t"
  :code: |
    def reverseMap[A](l:Seq[A],f:A=&gt;unit):unit = l match {
      case Nil =&gt; ()
      case x::Nil =&gt; f(x)
      case x =&gt; f(x.last);reverseMap[A](l.slice(0, l.length-1),f)
    }
    reverseMap(List(1,2,3,4,5), println)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1230'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1230
  :user_name: yuin
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/82/
  :language: Python
  :time: 2007/07/21 05:15 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  pythonだと::-1でも逆順作れます。\n\t"
  :code: |
    for i in [1,2,3,4,5][::-1]:
      print i
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1231'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1231
  :user_name: cats
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/172/
  :language: C
  :time: 2007/07/21 05:18 GMT
  :vote_count: '2'
  :vote_score: '-2'
  :body: "\n\t  \n\t"
  :code: |
    using System;
    class Program
    {
      static void Main()
      {
        string[] lst ={ "1", "2", "3", "4", "5" };
        Array.Reverse(lst);
        Console.WriteLine(string.Join(", ", lst));
      }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1232'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1232
  :user_name: 匿名
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/4/
  :language: Python
  :time: 2007/07/21 05:33 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">すでに、reversedと[::-1]形式が紹介されているので\r\nreverseフラグ付きsortedで、for文を使わない\r\nワンライナーでいきます。\r\n</pre>\n\t"
  :code: |
    print '\n'.join(map(str, sorted([1, 2, 3, 4, 5], reverse=True)))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1233'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1233
  :user_name: takatoh
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/189/
  :language: Ruby
  :time: 2007/07/21 05:37 GMT
  :vote_count: '3'
  :vote_score: '1'
  :body: "\n\t  Array#reverse_eachでもいいですね。\n\t"
  :code: |
    given_list.reverse_each{|i| puts i}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1239'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1239
  :user_name: aplo
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/267/
  :language: Ruby
  :time: 2007/07/21 05:52 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  案の定reverseは使われてたんで、ちょっと変な方法...\n\t"
  :code: |
    given_list.size.times {|i| puts given_list[-i - 1]}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1241'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1241
  :user_name: aplo
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/267/
  :language: PHP
  :time: 2007/07/21 06:02 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  array_reverseですぐ書ける\n\t"
  :code: "&lt;?php\n$given_list = array(1, 2 ,3, 4, 5);\nforeach (array_reverse($given_list)
    as $item) {\n\techo \"$item\\n\";\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1242'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1242
  :user_name: takatoh
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/189/
  :language: Haskell
  :time: 2007/07/21 06:05 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  何にも考えてないけど，まだHaskellが出てないようなので。\n\t"
  :code: |
    givenList = [1,2,3,4,5]

    main = mapM_ print $ reverse $ givenList
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1257'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1257
  :user_name: hirataka
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/233/
  :language: JavaScript
  :time: 2007/07/21 08:27 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  given_listは変更されない\n\t"
  :code: |
    given_list = [1, 2, 3, 4, 5];
    alert(Array.apply(null, given_list).reverse().join("\n"));
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1280'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1280
  :user_name: 匿名
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/4/
  :language: Java
  :time: 2007/07/21 12:48 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  LinkedListを使っています（ArrayListだと実質は単なる配列操作になってしまうので）。従って、効率は悪くないはずです。逆順にする操作は9〜11行目だけですが、リストの初期化のほうがこったコードになってしまったかもしれません……\n\t"
  :code: |
    import java.util.LinkedList;
    import java.util.Arrays;

    public class Sample {
        public static void main(String[] args) {
            LinkedList&lt;Integer&gt; l = new LinkedList&lt;Integer&gt;(Arrays.asList(
                  new Integer[]{1, 2, 3, 4, 5}));
            LinkedList&lt;Integer&gt; rev = new LinkedList&lt;Integer&gt;();
            for (int i : l) {
                rev.addFirst(i);
            }
            System.out.println(rev);
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1290'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1290
  :user_name: ocean
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/177/
  :language: Java
  :time: 2007/07/21 13:41 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  Collections.reverse()を使ってみました。（でもArrays.reverse()はなかった。なぜ？）\n\t"
  :code: |
    import java.util.*;

    class MeApp
    {
        public static void main(String[] args)
        {
            final ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;(Arrays.asList(1, 2, 3, 4, 5));

            Collections.reverse(list);

            System.out.println(list);
        }
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1295'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1295
  :user_name: にしお
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1/
  :language: Python
  :time: 2007/07/21 14:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">そ、それはこの入力データでは動きますけど\r\n「リスト状のものを逆順に表示する」ではないですよね…(^^;\r\ngiven_listが[3,
    1, 4, 1, 5]のようなソートされていないものだと逆順にならないですから…\r\n\r\nreversedと[::-1]とforを使わないとなると下のようになるでしょうか。\r\nfor文でなければOKなら3行目の書き方の方が好みです。</pre>\n\t"
  :code: |
    print '\n'.join(map(lambda x:str(x[1]), sorted(enumerate(given_list), reverse=True)))

    print '\n'.join(str(x[1]) for x in sorted(enumerate(given_list), reverse=True))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1302'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1302
  :user_name: sumim
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/88/
  :language: Smalltalk
  :time: 2007/07/21 15:02 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  Squeak Smalltalk で。\n\t"
  :code: |
    #(1 2 3 4 5) reverseDo: [:x | Transcript cr; show: x]
  :tags:
  - Squeak_Smalltalk
  :references:
    :url: 
    :title: 
- :id: '1303'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1303
  :user_name: kacchi
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/145/
  :language: Scheme
  :time: 2007/07/21 15:05 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">再帰で。\r\n(reverse-print '(1 2 3 4 5))\r\n5\r\n4\r\n3\r\n2\r\n1\r\n</pre>\n\t"
  :code: |
    (define (reverse-print ls)
      (unless (null? ls)
        (reverse-print (cdr ls))
        (print (car ls))))
  :tags:
  - gauche
  :references:
    :url: 
    :title: 
- :id: '1326'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1326
  :user_name: 沢渡 みかげ
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/101/
  :language: Mathematica
  :time: 2007/07/22 04:48 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">Mapで逆順にしたリストそれぞれにPrintを適用．\r\nMathematicaの/@はMapなので\r\nMap[Print,
    Reverse[{1, 2, 3, 4, 5}]];\r\nともかけます．</pre>\n\t"
  :code: |
    Print /@ Reverse[{1, 2, 3, 4, 5}];
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1344'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1344
  :user_name: 沢渡 みかげ
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/101/
  :language: Erlang
  :time: 2007/07/22 09:57 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">普通に…\r\n\r\nerl -noshell -eval 'listrev:listrev([1,2,3,4,5]),
    init:stop().'\r\n\r\nのように実行します．</pre>\n\t"
  :code: |
    -module(listrev).
    -export([listrev/1]).

    listrev(List) -&gt;
            lists:map(fun(E) -&gt; io:format("~w~n", [E]) end, lists:reverse(List)).
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1351'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1351
  :user_name: morchin
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/78/
  :language: Python
  :time: 2007/07/22 16:07 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">EAFP(ゴメンナサイはオネガイシマスより楽)を利用。\r\n参考: http://www.python.jp/doc/2.4/tut/node19.html#l2h-45\r\n</pre>\n\t"
  :code: |
    def rprint(L):
      i = 0
      while True:
        i -= 1
        try:
          yield L[i]
        except:
          break

    for n in rprint([1,2,3,4,5]):
      print n
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1380'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1380
  :user_name: susu
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/218/
  :language: Python
  :time: 2007/07/24 05:49 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: "def rprint(x):\n\tif type(x) is list:\n\t\tfor i in xrange(1,len(x)+1):
    print x[-i]\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1382'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1382
  :user_name: susu
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/218/
  :language: Python
  :time: 2007/07/24 06:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  まーた肝心な物を忘れて…\n\t"
  :code: |
    given_list = [1, 2, 3, 4, 5]
    rprint(given_list)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1458'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1458
  :user_name: halt
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/309/
  :language: PHP
  :time: 2007/07/26 08:25 GMT
  :vote_count: '3'
  :vote_score: '1'
  :body: "\n\t  ループは書きたくないよねー\n\t"
  :code: |
    &lt;?php
    $list=range(1,5);
    echo(strrev(join("\n",$list)));
    ?&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1460'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1460
  :user_name: katsu
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/117/
  :language: Prolog
  :time: 2007/07/26 09:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">非実用的解です。\r\n考え方自体は、言語非依存です。\r\n一秒おきに、逆順に表示します。\r\n</pre>\n\t"
  :code: |
    wait_do(P,T):-thread_create((sleep(T),P),_,[]).

    revp(L):-length(L,LL),
            (between(1,LL,I),nth1(I,L,C),T is LL - I,wait_do(writeln(C),T),fail
            ;true).

    :-revp([a,b,c,d,e,f,g]).
  :tags:
  - SWI-prolog
  :references:
    :url: 
    :title: 
- :id: '1539'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1539
  :user_name: lany
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/314/
  :language: Delphi
  :time: 2007/07/28 11:16 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">うーむ、Delphiで短く書くのは難しい…。</pre>\n\t"
  :code: |
    program gerogero;

    {$APPTYPE CONSOLE}

    procedure WriteReverse(const given_list: array of Integer);
    var
        i: Integer;
    begin
        for i := High(given_list) downto Low(given_list) do
            Writeln(given_list[i]);
    end;

    begin
        WriteReverse([1, 2, 3, 4, 5]);
    end.
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1604'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1604
  :user_name: tsekine
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/124/
  :language: Bash
  :time: 2007/07/31 01:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  BASHの配列って(実装はどうか知らないけど)「キーに数値しかとれない連想配列」っぽいので、これ以外にも答えがあるかと。\n\t"
  :code: |
    print_rev () {
      local -a given_list=("$@");
      for ((i=${#given_list[@]}-1; i&gt;=0; i--)); do
        echo "${given_list[i]}"
      done
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1681'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1681
  :user_name: nobsun
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/98/
  :language: Haskell
  :time: 2007/08/02 02:47 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  たんじゅんに\n\t"
  :code: |
    import System.Environment
    main = putStr . unlines . reverse =&lt;&lt; getArgs

    {-
    *Main&gt; :main 1 2 3 4 5
    5
    4
    3
    2
    1
    -}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1720'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1720
  :user_name: tomatsu
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/323/
  :language: Pnuts
  :time: 2007/08/02 12:44 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    printAll(reverse([1,2,3,4,5]))
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1841'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1841
  :user_name: reffi
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/333/
  :language: Scheme
  :time: 2007/08/04 17:53 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <pre class=\"compact\">DrSchemeで。\r\n&gt; (reverse (list 1 2 3 4 5))\r\n(5
    4 3 2 1)</pre>\n\t"
  :code: |
    (define (reverse args)
      (cond ((null? args) null)
            (else (append (reverse (cdr args)) (list (car args))))))
  :tags:
  - DrScheme
  :references:
    :url: 
    :title: 
- :id: '1850'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1850
  :user_name: yattom
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/335/
  :language: awk
  :time: 2007/08/05 00:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">入力を行単位で逆順に表示します。\r\n逆順の本体は function reverse
    です。普通の実装です。\r\n表示はENDです。</pre>\n\t"
  :code: "function reverse(array, size,   i) {\n\tfor(i = 0; i &lt; size / 2; i++)
    {\n\t\ttmp = array[size - i - 1]\n\t\tarray[size - i - 1] = array[i]\n\t\tarray[i]
    = tmp\n\t}\n}\n\n{\n\tinput[NR - 1] = $0\n}\n\nEND {\n\treverse(input, NR)\n\tfor(i
    = 0; i &lt; NR; i++) {\n\t\tprint input[i]\n\t}\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1928'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1928
  :user_name: hirose31
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/334/
  :language: PostScript
  :time: 2007/08/06 10:43 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">配列をスタックにpushして、表示してるだけすｗ\r\n</pre>\n\t"
  :code: |
    %!
    /Helvetica 24 selectfont
    /given_list [1 2 3 4 5] def

    100 100 moveto
    given_list aload pop
    given_list length { 3 string cvs show } repeat

    showpage
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '1980'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/1980
  :user_name: takano32
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/148/
  :language: Ruby
  :time: 2007/08/07 10:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  再帰呼び出しを使ってみました。\n\t"
  :code: "def rev(list)\n\tunless list.empty? then\n\t\tputs list.pop\n\t\trev(list)\n\tend\nend\n\nrev(given_list)\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2020'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2020
  :user_name: ヨシオリ
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/370/
  :language: JavaFxScript
  :time: 2007/08/08 13:40 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">java.lang.System の import は\r\nやらなくても済むようになって欲しいなぁ</pre>\n\t"
  :code: |
    import java.lang.System;
    for (i in reverse[1,2,3,4,5]){
      System.out.println(i);
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2089'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2089
  :user_name: shg
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/383/
  :language: Matlab
  :time: 2007/08/12 23:36 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  MATLABは多くの関数が入力としてスカラーだけでなくベクトルを受け入れる。fprintfもそういう関数の一つなのでベクトルを与えると個々の要素に対してフォーマット付き出力をしてくれる。これを利用。ただし要素の型に応じてフォーマット指定文字列の部分を変更しないといけないのが難点。投稿のコードは整数を想定。ベクトルを逆順にする部分はfliplrという関数が用意されてるけどあえて違う書き方で。\n\t"
  :code: |
    function revdisp(v)
    fprintf('%d\n',v(length(v):-1:1));
  :tags:
  - MATLAB7.4
  :references:
    :url: 
    :title: 
- :id: '2158'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2158
  :user_name: miyamuko
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/382/
  :language: xtal
  :time: 2007/08/14 12:42 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    Iterator::reverse: method fiber {
        arr: this.to_a;
        while (!arr.empty()) {
            yield arr[arr.size - 1];
            arr.pop_back();
        }
    }

    [1, 2, 3, 4, 5].each.reverse.to_a.p;
  :tags:
  - xtal0.9.7
  :references:
    :url: 
    :title: 
- :id: '2225'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2225
  :user_name: higeorange
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/194/
  :language: Io
  :time: 2007/08/16 06:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    given_list := list(1, 2, 3, 4, 5)
    given_list reverse foreach(i, i println)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2237'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2237
  :user_name: morchin
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/78/
  :language: Python
  :time: 2007/08/16 14:53 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">使いどころによっては応用性あるかも。</pre>\n\t"
  :code: |
    &gt;&gt;&gt; a = [1, 2, 3, 4, 5]
    &gt;&gt;&gt; [a[~i] for i in range(len(a))]
    [5, 4, 3, 2, 1]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2252'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2252
  :user_name: higeorange
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/194/
  :language: JavaScript
  :time: 2007/08/17 06:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    var given_list = [1, 2, 3, 4, 5]
    Array.prototype.reverse_print = function() {
        if(this.length == 1) return this[0];
        return this.pop() + "\n" + this.reverse_print();
    }
    alert(given_list.reverse_print());
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2345'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2345
  :user_name: omoikani
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/374/
  :language: StandardML
  :time: 2007/08/20 12:25 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">多相的じゃないのと、括弧が多いのがあれだなぁ。</pre>\n\t"
  :code: |
    foldr (fn (x, ()) =&gt; print ((Int.toString x) ^ "\n")) () given_list;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2346'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2346
  :user_name: omoikani
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/374/
  :language: StandardML
  :time: 2007/08/20 12:27 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">おっと、リストを作ってなかった。</pre>\n\t"
  :code: |
    val given_list = [1, 2, 3, 4, 5];
    foldr (fn (x, ()) =&gt; print ((Int.toString x) ^ "\n")) () given_list;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2565'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2565
  :user_name: 管理者
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/411/
  :language: 
  :time: 2007/08/28 08:23 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">Perl6でsayとreverseを使う例</pre>\n\t"
  :code: ''
  :tags:
  - Perl6
  :references:
    :url: /web/20100304192124/http://d.hatena.ne.jp/fbis/20070728/1185599125
    :title: どう書くでリハビリ
- :id: '2645'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2645
  :user_name: mad
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/418/
  :language: Haskell
  :time: 2007/08/29 23:48 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">Haskellで副作用のあるforループっぽく書く。\r\nそれっぽく見えるようにあえて;を入れてみたけど、微妙でした。</pre>\n\t"
  :code: |
    import Data.Traversable
    givenList = [1, 2, 3, 4, 5]

    main = do
        for (reverse givenList)
            print;
        return ();
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2686'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2686
  :user_name: 130R
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/409/
  :language: PowerShell
  :time: 2007/08/30 10:06 GMT
  :vote_count: '2'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\"></pre>\n\t"
  :code: |
    $list = 1..5
    [array]::reverse($list)
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '2952'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/2952
  :user_name: jz5
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/344/
  :language: VB
  :time: 2007/09/10 09:04 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">VB8.0までReverseは値を返しませんでしたが、\r\n9.0からはオーバーロードが増えて以下の書き方ができるようです。\r\n当然xsの中身は逆順になりません。\r\nVBの話というか.NET
    Frameworkのクラスライブラリの話ですけど。</pre>\n\t"
  :code: |
    Dim xs() As Integer = {1, 2, 3, 4, 5}
    For Each x In xs.Reverse
        Console.WriteLine(x)
    Next
  :tags:
  - VB9.0
  :references:
    :url: 
    :title: 
- :id: '3124'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/3124
  :user_name: touchez_du_bois
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/432/
  :language: Groovy
  :time: 2007/09/20 08:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  1.1-beta-2で動作確認しました。\r\n\n\t"
  :code: |
    [1, 2, 3, 4, 5].reverse( ).each { println it }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3193'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/3193
  :user_name: 匿名
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/4/
  :language: D
  :time: 2007/09/29 08:13 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">なかったので取り敢えず…</pre>\n\t"
  :code: "import std.stdio;\n\nvoid main(){\n\tauto list = [1, 2, 3, 4, 5];\n\tforeach_reverse(a;
    list) writefln(a);\n}\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3761'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/3761
  :user_name: dankogai
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/26/
  :language: Other
  :time: 2007/11/08 12:34 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">これまたperlがないので。</pre>\n\t"
  :code: |
    % perl -le 'print reverse @ARGV' 0 1 2 3
    3210
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3763'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/3763
  :user_name: fujidig
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/507/
  :language: 
  :time: 2007/11/08 12:48 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |2
        #list[0] = 1;
        #list[1] = 2;
        #list[2] = 3;
        #list[3] = 4;
        #list[4] = 5;

        #i = 4;
        while( #i &gt;= 0 ) {
            message str( #list[#i] );
            #i = #i - 1;
        }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3878'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/3878
  :user_name: matyr
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/343/
  :language: 
  :time: 2007/11/11 21:48 GMT
  :vote_count: '2'
  :vote_score: '2'
  :body: "\n\t  配列に長さを返すメソッドが無いらしい(!!)ので簡易実装。\n\t"
  :code: |
    配列：長さ＝「｜ｓ｜ｓ＝０。「未定義！＝(！(ｓ＋１)見る)」！の間「ｓ＝ｓ＋１」実行。ｓ」。
    配列：逆順＝「｜ｒ　ｓ｜ｒ＝配列！作る。ｓ＝！長さ。
    　「ｓ＞０」！の間「ｒ！(！(ｓ)見る)入れる。ｓ＝ｓ－１」実行。ｒ」。

    ラベル！(配列！1 2 3 4 5 作る　逆順)作る。
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '3904'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/3904
  :user_name: 匿名
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/4/
  :language: 
  :time: 2007/11/12 09:19 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">前半2行は配列に整形しているだけなので実質1行です。</pre>\n\t"
  :code: |
    list="1,2,3,4,5"
    array=listを","で区切る
    arrayを配列逆順して表示
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4072'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/4072
  :user_name: faultier
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/545/
  :language: Objective
  :time: 2007/11/15 14:25 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <p>reverseObjectEnumeratorで。</p>\n\n\t"
  :code: |
    #import &lt;Foundation/Foundation.h&gt;

    int main()
    {
        NSAutoreleasePool *pool = [NSAutoreleasePool new];
        NSArray *givenList = [NSArray arrayWithObjects:@"a", @"b", @"c", @"d", @"e", nil];
        for (id obj in [givenList reverseObjectEnumerator]) NSLog(obj);
        [pool release];
        return 0;
    }
  :tags:
  - MacOSX
  :references:
    :url: 
    :title: 
- :id: '4155'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/4155
  :user_name: talo
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/237/
  :language: Haskell
  :time: 2007/11/17 14:50 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>はつける。</p>\n\n\t"
  :code: |
    r :: [a] -&gt; [a]
    r [] = []
    r (x:xs) = (r xs) ++ [x]

    main :: IO ()
    main = putStr $ show $ r [1,2,3,4,5]
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4837'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/4837
  :user_name: pooq
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/606/
  :language: J
  :time: 2007/12/15 21:24 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">リストの要素数を調べてその回数分、「末尾の要素をプリントして、\r\n末尾の要素を除いたリストを返す」を繰り返しています。\r\n組み込みのリバースは「|.」です。\r\n\r\n
    \  rev_print 1 2 3 4 5\r\n5\r\n4\r\n3\r\n2\r\n1\r\n</pre>\n\t"
  :code: |
    print=.(1!:2)&amp;2
    rev_print=.(}:[print&amp;{:)^:(#&amp;])
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '4860'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/4860
  :user_name: pooq
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/606/
  :language: Batchfile
  :time: 2007/12/17 16:25 GMT
  :vote_count: '1'
  :vote_score: '1'
  :body: "\n\t  <pre class=\"compact\">cmd.exeで。cmd.exeのsetとかforは、command.comよりずいぶん拡張されているんですね。\r\n\r\n&gt;rev_list
    1 2 3 4 5\r\n5\r\n4\r\n3\r\n2\r\n1\r\n</pre>\n\t"
  :code: |
    @setlocal enabledelayedexpansion
    @set a=
    @for %%i in (%*) do @set a=%%i !a!
    @for %%i in (!a!) do @echo %%i
  :tags:
  - cmd
  :references:
    :url: 
    :title: 
- :id: '5079'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/5079
  :user_name: g000001
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/405/
  :language: Other
  :time: 2008/01/01 01:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">あけましておめでとうございます。\r\n今年は、Lisp誕生50周年ということもあり、\r\n最初期のLispの実装である、Lisp
    1.5で挑戦してみることにしました!\r\n動作は、IBM7094のエミュレータ上で確認しています。\r\n\r\nエミュレータの詳細については、参考リンクが非常に参考になります。\r\n実行結果：\r\n---\r\n
    FUNCTION   EVALQUOTE   HAS BEEN ENTERED, ARGUMENTS..\r\nPROG\r\n\r\n(NIL (MAP
    (REVERSE GIVEN-LIST) (QUOTE (LAMBDA (X) (PRINT (CAR X))))))\r\n\r\n\r\n5\r\n\r\n4\r\n\r\n3\r\n\r\n2\r\n\r\n1\r\n\r\nEND
    OF EVALQUOTE, VALUE IS ..\r\nNIL</pre>\n\t"
  :code: |
    CSETQ(GIVEN-LIST (QUOTE (1 2 3 4 5)))

    DEFINE ((
    (REVERSE (LAMBDA (LST) (PROG (L RES)
                      (SETQ L LST)
                L     (COND ((NULL L) (RETURN RES)))
                      (SETQ RES (CONS (CAR L) RES))
                      (SETQ L (CDR L))
                      (GO L)))) ))

    PROG(()
        (MAP (REVERSE GIVEN-LIST) (QUOTE (LAMBDA (X) (PRINT (CAR X)))))
    )
  :tags: []
  :references:
    :url: /web/20100304192124/http://www.b54.org/lisp15
    :title: LISP 1.5 for the IBM 7090
- :id: '5149'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/5149
  :user_name: saws
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/642/
  :language: Ruby
  :time: 2008/01/03 14:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>downtoメソッドで.</p>\n\n\t"
  :code: |
    given_list.size.downto(0){|i| p given_list[i]}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '5227'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/5227
  :user_name: szktty
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/648/
  :language: Other
  :time: 2008/01/08 12:56 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Mac OS X (PowerPC 32bit) アセンブリで、スタックを使って。</p>\n\n\t"
  :code: "        .machine ppc\n        .globl  _main\n\n;; r6: リストのポインタ\n;; r7: リストの要素数\n;;
    r8: カウント\n_main:\n        ;; 初期化\n        lis     r6, hi16(list)\n        addi
    \   r6, r6, lo16(list)\n        lis     r7, hi16(list_size)\n        addi    r7,
    r7, lo16(list_size)\n\n        li      r8, 0\n\n_push:\n        lbz     r10, 0(r6)\n
    \       stbu    r10, -1(r1)\n        addi    r6, r6, 1\n        addi    r8, r8,
    1\n        cmpl    cr7, r7, r8\n        bgt     cr7, _push\n\n        li      r8,
    0\n        \n_pop:\n        lbz     r10, 0(r1)\n        stwu    r8,-4(r1)       ;
    スタックに退避\n        \n        ;; 表示 \n        li      r3, 1           ; stdout\n
    \       lis     r4, hi16(format)\n        addi    r4, r4, lo16(format)\n        addi
    \   r10, r10, 48    ; ASCII\n        stb     r10, 0(r4)\n        li      r5, 2\n
    \       li      r0, 4           ; sys_write\n        sc\n        lwz     r8, 0(r1)
    \      ; スタックから復帰\n        addi    r1, r1, 4\n        \n        addi    r1, r1,
    1\n        addi    r8, r8, 1\n        cmpl    cr7, r7, r8\n        bgt     cr7,
    _pop\n        \n        ;; sys_exit()\n        li      r3, 0\n        li      r0,
    1\n        sc\n\n\n        .data\n        .align  2\n\nlist:\n        .byte   1,2,3,4,5\n
    \       .align  2\n        list_size = 5\n\nformat:\n        .asciz  \" \\n\"\n
    \       .align  2\n"
  :tags:
  - Assembly
  - MacOSX
  - PowerPC
  :references:
    :url: 
    :title: 
- :id: '6585'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/6585
  :user_name: turugina
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/760/
  :language: XSLT
  :time: 2008/06/25 07:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>XPath Functions の reverse で逆順になります。</p>\n\n\t"
  :code: |
    &lt;xsl:stylesheet version="2.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:fn="http://www.w3.org/2005/xpath-functions"
      &gt;

      &lt;xsl:output method="text" /&gt;

      &lt;xsl:template match="/" &gt;
        &lt;xsl:variable name="seq" as="xs:integer*" select="(1,2,3,4,5)" /&gt;
        &lt;xsl:for-each select="fn:reverse($seq)" &gt;
          &lt;xsl:value-of select="." /&gt;
          &lt;xsl:text&gt;&amp;#xA;&lt;/xsl:text&gt;
        &lt;/xsl:for-each&gt;
      &lt;/xsl:template&gt;

    &lt;/xsl:stylesheet&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '6868'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/6868
  :user_name: だいら
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/468/
  :language: PHP
  :time: 2008/07/28 02:51 GMT
  :vote_count: '1'
  :vote_score: '-1'
  :body: "\n\t  <p>副作用を破壊的であるととりました。</p>\n\n\t"
  :code: |
    &lt;?php
    // 配列へ整形
    $given_list = "1,2,3,4,5";
    $array = explode(',', $given_list);

    // 出力
    while(count($array)){
        echo array_pop($array)."\n";
    }
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '7212'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/7212
  :user_name: genzou
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/793/
  :language: Groovy
  :time: 2008/08/19 12:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>やっぱりこれしかないですかね。</p>\n\n\t"
  :code: |
    println [1, 2, 3, 4, 5].reverse()
  :tags:
  - groovy
  :references:
    :url: 
    :title: 
- :id: '7655'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/7655
  :user_name: g000001
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/405/
  :language: Other
  :time: 2008/09/17 06:19 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  reverseで普通に。\r<br><br>Clojureでは、コンマは空白と同じ扱いになるようなので、お題のデータをそのまま加工しないで利用できて便利です :)\n\t"
  :code: |
    (def given-list [1, 2, 3, 4, 5])

    (doseq item (reverse given-list)
      (prn item))
  :tags:
  - clojure
  :references:
    :url: 
    :title: 
- :id: '7752'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/7752
  :user_name: egtra
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/759/
  :language: C
  :time: 2008/10/04 12:29 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>Boost 1.36には逆順foreachが追加されました。それを使うと、こう書けます。</p>\n<p>&lt;algorithm&gt;などの関数でかけるならそっちのほうが私の好みですが。</p>\n\n\t"
  :code: |
    #include &lt;iostream&gt;
    #include &lt;boost/foreach.hpp&gt;

    int main()
    {
        static const int a[] = {1, 2, 3, 4, 5};
        BOOST_REVERSE_FOREACH(int i, a)
        {
            std::cout &lt;&lt; i &lt;&lt; '\n';
        }
        std::cout &lt;&lt; std::flush;
    }
  :tags:
  - Boost
  :references:
    :url: 
    :title: 
- :id: '8291'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8291
  :user_name: 割と普通
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/581/
  :language: C
  :time: 2009/01/06 17:09 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>LINQ使って無難に反転。\nどう書くの”各言語の特徴を生かす”という題意にそう意味で。</p>\n\n\t"
  :code: |
    List&lt;object&gt; ary = new List&lt;object&gt;() { 1, 4, 2, 4, 5 };
    ary.Reverse();
    ary.ForEach(Console.WriteLine);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8292'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8292
  :user_name: 割と普通
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/581/
  :language: C
  :time: 2009/01/06 11:14 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>「LINQを使えば部分的な反転も出来ます」という例です。</p>\n\n\t"
  :code: "List&lt;object&gt; ary = new List&lt;object&gt;() { 1, 4, 2, 4, 5 };\nint
    index = 2; \nint count = 3;\nary.Reverse(index,count);\nary.ForEach(Console.WriteLine);\n//
    1, 4, 5, 4, 2\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8295'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8295
  :user_name: manzo
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/980/
  :language: Ruby
  :time: 2009/01/07 08:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>なかったので。おもしろくも何ともないですが。</p>\n\n\t"
  :code: |
    given_list = [1, 2, 3, 4, 5]
    puts given_list.reverse
    # &gt;&gt; 5
    # &gt;&gt; 4
    # &gt;&gt; 3
    # &gt;&gt; 2
    # &gt;&gt; 1
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8621'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8621
  :user_name: selpo
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1013/
  :language: C
  :time: 2009/03/10 09:10 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>あれ？「文字列の反転」でも、こんなコードを書いたような…?</p>\n\n\t"
  :code: |
    using System;
    using System.Text;
    class P
    {
        static void Main(string[] args)
        {
            var tmp = new object[] { 1, 2, 3, 4, 5 };
            ReverseSlow(tmp).PrintArray();
            ReverseFast(tmp).PrintArray();
        }
        static T[] ReverseSlow&lt;T&gt;(T[] array)
        {
            return array.Reverse();
        }
        static T[] ReverseFast&lt;T&gt;(T[] array)
        {
            int length = array.Length;
            T[] tmp = new T[length];
            for (int i = 0; i &lt; length; i++)
                tmp[i] = array[length - i - 1];
            return tmp;
        }
        static void PrintArray&lt;T&gt;(this T[] array)
        {
            string str = ToRawString&lt;T&gt;(array);
            Console.Write(str);
        }
        static string ToRawString&lt;T&gt;(this T[] array)
        {
            var sb = new StringBuilder(3 * array.Length);
            sb.Append("{ ");
            for (int i = 0; i &lt; array.Length - 1; i++)
                sb.Append(array[i] + ", ");
            sb.Append(array[array.Length - 1] + " }");
            return sb.ToString();
        }
    }
  :tags:
  - C#3.0
  :references:
    :url: 
    :title: 
- :id: '8628'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8628
  :user_name: 陽炎
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1022/
  :language: FORTRAN
  :time: 2009/03/10 07:51 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    program doukaku27
      implicit none

      integer :: i, list(5) = (/ 1, 2, 3, 4, 5 /)

      print *, (list(i), i = 5, 1, -1)

      stop
    end program doukaku27
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8630'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8630
  :user_name: 陽炎
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1022/
  :language: TeX
  :time: 2009/03/10 13:43 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>いったん文字列に保存しちゃうのは反則でしょうか？</p>\n\n\t"
  :code: |
    \documentclass{article}

    \begin{document}

    \def\list{1,2,3,4,5}

    \makeatletter
    \def\tsil{}%
    \@for\c:=\list\do{\edef\tsil{\c, \tsil}}%
    \makeatother

    \tsil

    \end{document}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8631'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8631
  :user_name: 陽炎
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1022/
  :language: TeX
  :time: 2009/03/10 13:58 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>こんな方法もあったりして．</p>\n\n\t"
  :code: |
    \documentclass{article}

    \begin{document}

    \def\list{1,2,3,4,5}

    \makeatletter
    \setbox0=\hbox{\list}%
    \null\hskip\wd0
    \newlength\TempDim
    \TempDim 0pt
    \@for\c:=\list\do{%
      \llap{\c,\hskip\TempDim}%
      \advance\TempDim 1em}%
    \makeatother

    \end{document}
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8635'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8635
  :user_name: 陽炎
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1022/
  :language: Fortress
  :time: 2009/03/10 22:11 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    component doukaku239
      import List.{...}
      export Executable

      run(args: String...): () = do

        l = &lt;|1, 2, 3, 4, 5|&gt;

        println l.reverse()

      end
    end
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8823'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8823
  :user_name: spoon
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1036/
  :language: OCaml
  :time: 2009/04/16 04:38 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    let given_list = [1; 2; 3; 4; 5];;
    List.iter (Printf.printf "%d\n") (List.rev given_list);;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8824'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8824
  :user_name: spoon
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1036/
  :language: StandardML
  :time: 2009/04/16 09:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    val given_list = [1, 2, 3, 4, 5];
    app (fn x =&gt; print (Int.toString x ^ "\n")) (rev given_list);
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8825'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8825
  :user_name: spoon
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/1036/
  :language: Haskell
  :time: 2009/04/16 09:54 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  \n\t"
  :code: |
    givenList = [1,2,3,4,5]
    main = foldr (\x -&gt; (&gt;&gt; print x)) (return ()) givenList
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '8846'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/8846
  :user_name: syat
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/766/
  :language: Brainf
  :time: 2009/04/28 10:53 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>アドレス０から連続して文字が格納されている場合。</p>\n\n\t"
  :code: |
    [&gt;]&lt;[.&lt;]&gt;
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9092'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/9092
  :user_name: bleis-tift
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/732/
  :language: SQL
  :time: 2009/06/10 06:06 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>SQL Server 2008 で確認しました。</p>\n\n\t"
  :code: |
    WITH
      Input(i, n) AS (
        SELECT 1, 1
        UNION SELECT 2, 2
        UNION SELECT 3, 3
        UNION SELECT 4, 4
        UNION SELECT 5, 5
      )
    SELECT
        n
    FROM
        Input
    ORDER BY
        i DESC
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9292'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/9292
  :user_name: ところてん
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/166/
  :language: PHP
  :time: 2009/07/05 23:12 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <pre class=\"compact\">PHP勉強中。</pre>\n\t"
  :code: "&lt;?php\nprint &lt;&lt;&lt; END_DOC\n&lt;HTML&gt;\n&lt;HEAD&gt;&lt;title&gt;doukaku27&lt;/title&gt;\n&lt;/HEAD&gt;&lt;BODY&gt;\nEND_DOC;\n\nfunction
    doukaku27()\n{\n    $l = array(1,2,3,4,5,6,7,8,9,10);\n    \n    foreach(array_reverse($l)
    as $t){\n        print \"$t,\";\n    }\n}\n\ndoukaku27();\n\nprint &lt;&lt;&lt;
    END_DOC\n&lt;/BODY&gt;\n&lt;/HTML&gt;\nEND_DOC;\n?&gt;\n"
  :tags: []
  :references:
    :url: 
    :title: 
- :id: '9510'
  :parent_id: '27'
  :url: http://ja.doukaku.org/comment/9510
  :user_name: margarite
  :user_url: /web/20100304192124/http://ja.doukaku.org/user/741/
  :language: PowerShell
  :time: 2009/08/24 14:39 GMT
  :vote_count: '0'
  :vote_score: '0'
  :body: "\n\t  <p>非破壊(?)です</p>\n\n\t"
  :code: |
    $given_list = 1..5
    function reverse([array]$t){ $t[($t.Length-1)..0] }

    reverse $given_list
  :tags: []
  :references:
    :url: 
    :title: 
